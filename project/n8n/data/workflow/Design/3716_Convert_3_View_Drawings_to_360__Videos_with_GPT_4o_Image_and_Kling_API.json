{
  "title": "Convert 3-View Drawings to 360° Videos with GPT-4o-Image and Kling API",
  "url": "https://n8n.io/workflows/3716-convert-3-view-drawings-to-360-videos-with-gpt-4o-image-and-kling-api/",
  "category": "Design",
  "category_url": "https://n8n.io/workflows/categories/design/?sort=createdAt:desc",
  "author": "PiAPI",
  "publish_date": "Last update 6 days ago",
  "publish_date_absolute": "2025-04-30",
  "content": "",
  "workflow_json": "{\"id\":\"KWFLpcJytH7qjheD\",\"meta\":{\"instanceId\":\"1e003a7ea4715b6b35e9947791386a7d07edf3b5bf8d4c9b7ee4fdcbec0447d7\"},\"name\":\"(Not published) Three-View Orthographic Projection to Dynamic Video Conversion\",\"tags\":[],\"nodes\":[{\"id\":\"442e12af-531d-4000-9e74-d9bfaa3515ca\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-1960,-160],\"parameters\":{},\"typeVersion\":1},{\"id\":\"39c46540-7dee-4237-921e-3b6bd9821302\",\"name\":\"Generate Kling Video\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-400,0],\"parameters\":{\"url\":\"https://api.piapi.ai/api/v1/task\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n    \\\"model\\\": \\\"kling\\\",\\n    \\\"task_type\\\": \\\"video_generation\\\",\\n    \\\"input\\\": {\\n        \\\"version\\\": \\\"1.6\\\",\\n        \\\"mode\\\": \\\"pro\\\",\\n        \\\"image_url\\\": \\\"{{ $('Get Image URL of Front Image').item.json.image_url }}\\\",\\n        \\\"image_tail_url\\\": \\\"{{ $json.image_url }}\\\",\\n        \\\"duration\\\":5,\\n        \\\"prompt\\\": \\\"The character rotates smoothly, stay original facial expression. Apply anticlockwise rotation\\\"\\n    }\\n} \",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"x-api-key\",\"value\":\"={{ $('Basic Params').item.json[\\\"x-api-key\\\"] }}\"}]}},\"typeVersion\":4.2},{\"id\":\"cfc726ee-e6f2-4016-a4fe-7123a4520fda\",\"name\":\"Get Kling Video\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-220,0],\"parameters\":{\"url\":\"=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}\",\"options\":{},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"x-api-key\",\"value\":\"72858adea87ad16865d5b0a24c3d9b9f58a6e7b1a8a8a8a0d6b81a9f3a9812f3\"}]}},\"typeVersion\":4.2},{\"id\":\"90d1cc4f-3d74-4a2a-9b02-3255ec9fc553\",\"name\":\"Verify Task Status\",\"type\":\"n8n-nodes-base.if\",\"position\":[-40,0],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"f36fa981-22e0-46db-af8c-c2ac55242c27\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.data.status }}\",\"rightValue\":\"completed\"},{\"id\":\"637ea756-1ad9-434c-b6b2-b100ee4c3cad\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"6931c1b2-c4f4-47d6-9ff4-e6019e465c3e\",\"name\":\"Get Final Video\",\"type\":\"n8n-nodes-base.code\",\"position\":[260,140],\"parameters\":{\"jsCode\":\"// Process the entire response\\nreturn {\\n  video_url: $input.all()[0].json.data.output.video_url,\\n  watermark_free_url: $input.all()[0].json.data.output.works[0].video.resource_without_watermark\\n};\"},\"typeVersion\":2},{\"id\":\"adae02a4-dedc-4415-9409-88193090e2dc\",\"name\":\"GPT-4o Generator: Front View\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-1560,20],\"parameters\":{\"url\":\"https://api.piapi.ai/v1/chat/completions\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n    \\\"model\\\": \\\"gpt-4o-image-preview\\\",\\n    \\\"messages\\\": [\\n        {\\n            \\\"role\\\": \\\"user\\\",\\n            \\\"content\\\": [\\n                {\\n                    \\\"type\\\": \\\"image_url\\\",\\n                    \\\"image_url\\\": {\\n                        \\\"url\\\": \\\"{{ $json.image_url }}\\\"\\n                    }\\n                },\\n                {\\n                    \\\"type\\\": \\\"text\\\",\\n                    \\\"text\\\": \\\"Capture front view of the image, then split them into two separate images for me.\\\"\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"stream\\\": true\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer {{ $json[\\\"x-api-key\\\"] }}\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"fsJeCNd9BkJ1CIrt\",\"name\":\"Header Auth account 2\"}},\"typeVersion\":4.2},{\"id\":\"63320b08-62bc-4faf-a3ff-4069785c41f5\",\"name\":\"GPT-4o Generator: Side View\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-1000,320],\"parameters\":{\"url\":\"https://api.piapi.ai/v1/chat/completions\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n    \\\"model\\\": \\\"gpt-4o-image-preview\\\",\\n    \\\"messages\\\": [\\n        {\\n            \\\"role\\\": \\\"user\\\",\\n            \\\"content\\\": [\\n                {\\n                    \\\"type\\\": \\\"image_url\\\",\\n                    \\\"image_url\\\": {\\n                        \\\"url\\\": \\\"{{ $('Basic Params').item.json.image_url }}\\\"\\n                    }\\n                },\\n                {\\n                    \\\"type\\\": \\\"text\\\",\\n                    \\\"text\\\": \\\"Generate side view of the image\\\"\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"stream\\\": true\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer {{ $('Basic Params').item.json[\\\"x-api-key\\\"] }}\"}]}},\"typeVersion\":4.2},{\"id\":\"8fd1fb74-a149-4af6-9da5-e0dc3daa91c9\",\"name\":\"Get Image URL of Front Image\",\"type\":\"n8n-nodes-base.code\",\"position\":[-1380,20],\"parameters\":{\"jsCode\":\"const chunks = $input.first().json.data.split('\\\\n\\\\n');\\n\\nlet imageUrl = null;\\n\\nfor (let i = chunks.length - 1; i >= 0; i--) {\\n    const chunk = chunks[i];\\n    \\n    if (!chunk.startsWith('data: ')) continue;\\n    \\n    try {\\n        const jsonStr = chunk.substring(6); \\n        if (jsonStr.trim() === '[DONE]') continue;\\n        \\n        const data = JSON.parse(jsonStr);\\n        \\n\\n        if (data.choices && data.choices[0].delta.content) {\\n            const content = data.choices[0].delta.content;\\n            const urlMatch = content.match(/!\\\\[.*?\\\\]\\\\((https?:\\\\/\\\\/[^\\\\s]+)\\\\)/);\\n            \\n            if (urlMatch && urlMatch[1]) {\\n                imageUrl = urlMatch[1];\\n                break;\\n            }\\n        }\\n    } catch (e) {\\n        continue;\\n    }\\n}\\n\\nreturn {\\n    image_url: imageUrl,\\n    finish_reason: imageUrl ? \\\"success\\\" : \\\"not_found\\\"\\n};\"},\"typeVersion\":2},{\"id\":\"b5b41a20-aba1-4fbb-aaf9-47d18a38a727\",\"name\":\"Get Image URL of Side Image\",\"type\":\"n8n-nodes-base.code\",\"position\":[-800,320],\"parameters\":{\"jsCode\":\"const chunks = $input.first().json.data.split('\\\\n\\\\n');\\n\\nlet imageUrl = null;\\n\\n// 反向遍历 chunks (从最新数据开始检查)\\nfor (let i = chunks.length - 1; i >= 0; i--) {\\n    const chunk = chunks[i];\\n    \\n    if (!chunk.startsWith('data: ')) continue;\\n    \\n    try {\\n        const jsonStr = chunk.substring(6); // 去掉 \\\"data: \\\" 前缀\\n        if (jsonStr.trim() === '[DONE]') continue;\\n        \\n        const data = JSON.parse(jsonStr);\\n        \\n        // 检查是否包含图片标记（Markdown 图片语法）\\n        if (data.choices && data.choices[0].delta.content) {\\n            const content = data.choices[0].delta.content;\\n            const urlMatch = content.match(/!\\\\[.*?\\\\]\\\\((https?:\\\\/\\\\/[^\\\\s]+)\\\\)/);\\n            \\n            if (urlMatch && urlMatch[1]) {\\n                imageUrl = urlMatch[1];\\n                break;\\n            }\\n        }\\n    } catch (e) {\\n        continue;\\n    }\\n}\\n\\nreturn {\\n    image_url: imageUrl,\\n    finish_reason: imageUrl ? \\\"success\\\" : \\\"not_found\\\"\\n};\"},\"typeVersion\":2},{\"id\":\"6428385c-19ac-478c-af87-904de1e35b61\",\"name\":\"Verify Generation Status of Front View\",\"type\":\"n8n-nodes-base.if\",\"position\":[-1160,20],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"08a2ebe6-dc95-4b8a-ada1-1173645cc3f4\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.finish_reason }}\",\"rightValue\":\"not_found\"}]}},\"typeVersion\":2.2},{\"id\":\"395dbc5c-89e7-4eb7-a726-617250ebd02f\",\"name\":\"Verify Generation Status of Side View\",\"type\":\"n8n-nodes-base.if\",\"position\":[-600,320],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"08a2ebe6-dc95-4b8a-ada1-1173645cc3f4\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.finish_reason }}\",\"rightValue\":\"not_found\"}]}},\"typeVersion\":2.2},{\"id\":\"7287b4a9-8309-4984-8328-ecc569d4aa00\",\"name\":\"Wait for Video Generation\",\"type\":\"n8n-nodes-base.wait\",\"position\":[-20,240],\"webhookId\":\"c7b2590d-96a3-4c7c-8821-3023fead254b\",\"parameters\":{\"amount\":20},\"typeVersion\":1.1},{\"id\":\"9ed98c97-6a73-4f74-9cbd-5e19179aba9d\",\"name\":\"Basic Params\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1760,-160],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"{\\n  \\\"x-api-key\\\":\\\"\\\",\\n  \\\"image_url\\\": \\\"\\\"\\n}\\n\"},\"typeVersion\":3.4}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"71081f7e-7805-497b-9167-eba0b3a7c0e4\",\"connections\":{\"Basic Params\":{\"main\":[[{\"node\":\"GPT-4o Generator: Front View\",\"type\":\"main\",\"index\":0}]]},\"Get Kling Video\":{\"main\":[[{\"node\":\"Verify Task Status\",\"type\":\"main\",\"index\":0}]]},\"Verify Task Status\":{\"main\":[[{\"node\":\"Get Final Video\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Wait for Video Generation\",\"type\":\"main\",\"index\":0}]]},\"Generate Kling Video\":{\"main\":[[{\"node\":\"Get Kling Video\",\"type\":\"main\",\"index\":0}]]},\"Wait for Video Generation\":{\"main\":[[{\"node\":\"Get Kling Video\",\"type\":\"main\",\"index\":0}]]},\"GPT-4o Generator: Side View\":{\"main\":[[{\"node\":\"Get Image URL of Side Image\",\"type\":\"main\",\"index\":0}]]},\"Get Image URL of Side Image\":{\"main\":[[{\"node\":\"Verify Generation Status of Side View\",\"type\":\"main\",\"index\":0}]]},\"GPT-4o Generator: Front View\":{\"main\":[[{\"node\":\"Get Image URL of Front Image\",\"type\":\"main\",\"index\":0}]]},\"Get Image URL of Front Image\":{\"main\":[[{\"node\":\"Verify Generation Status of Front View\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Basic Params\",\"type\":\"main\",\"index\":0}]]},\"Verify Generation Status of Side View\":{\"main\":[[{\"node\":\"GPT-4o Generator: Side View\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Generate Kling Video\",\"type\":\"main\",\"index\":0}]]},\"Verify Generation Status of Front View\":{\"main\":[[{\"node\":\"GPT-4o Generator: Front View\",\"type\":\"main\",\"index\":0}],[{\"node\":\"GPT-4o Generator: Side View\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "### What this workflow does?\n\nThis workflow converts orthographic three-view drawings into 360° rotation videos through [**PiAPI**](https://piapi.ai)'s GPT-4o-Image and Kling APIs (unofficial). The workflow could be set with our [**3D Figurine Orthographic Views**](https://creators.n8n.io/workflows/3628) workflow for generation.\n\n### Who is the workflow for?\n\n  * **Designers** : Generate inspiration into 3D designs and make them spin to gain concrete details in a efficient way.\n  * **Online shoppers** : Show protential products from all angles in videos and preview overall texture of models.\n  * **Content Creators** (including toy bloggers): Make fun videos of collectible models.\n\n\n\n### Step-by-step Instructions\n\n1.Fill in basic params with your X-API-Key of your PiAPI account and 3-View image url. ![setting example](https://i.ibb.co/WNfWXp3D/Frame-3432.png)  \n2.Click test workflow.  \n3.Get the final video in the last node.\n\n### Use Case\n\nInput Image  \n![image](https://i.ibb.co/3ydMybrn/doll.png)\n\nOutput Video  \n![video](https://static.piapi.ai/n8n-instruction/3D-views2video/example1.mp4)\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h3>What this workflow does?</h3>\n<p>This workflow converts orthographic three-view drawings into 360° rotation videos through <a href=\"https://piapi.ai\" rel=\"ugc nofollow\" target=\"_blank\"><strong>PiAPI</strong></a>'s GPT-4o-Image and Kling APIs (unofficial). The workflow could be set with our <a href=\"https://creators.n8n.io/workflows/3628\" rel=\"ugc nofollow\" target=\"_blank\"><strong>3D Figurine Orthographic Views</strong></a> workflow for generation.</p>\n<h3>Who is the workflow for?</h3>\n<ul>\n<li><strong>Designers</strong>: Generate inspiration into 3D designs and make them spin to gain concrete details in a efficient way.</li>\n<li><strong>Online shoppers</strong>: Show protential products from all angles in videos and preview overall texture of models.</li>\n<li><strong>Content Creators</strong> (including toy bloggers): Make fun videos of collectible models.</li>\n</ul>\n<h3>Step-by-step Instructions</h3>\n<p>1.Fill in basic params with your X-API-Key of your PiAPI account and 3-View image url. <img src=\"https://i.ibb.co/WNfWXp3D/Frame-3432.png\" alt=\"setting example\"><br>\n2.Click test workflow.<br>\n3.Get the final video in the last node.</p>\n<h3>Use Case</h3>\n<p>Input Image<br>\n<img src=\"https://i.ibb.co/3ydMybrn/doll.png\" alt=\"image\"></p>\n<p>Output Video<br>\n<img src=\"https://static.piapi.ai/n8n-instruction/3D-views2video/example1.mp4\" alt=\"video\"></p>\n</div><!--]-->",
  "readme_zh": "### 该工作流的功能？\n\n本工作流通过[**PiAPI**](https://piapi.ai)的GPT-4o-Image和Kling API（非官方版），将正交三视图转化为360°旋转视频。可与我们[**3D手办正交视图生成**](https://creators.n8n.io/workflows/3628)工作流搭配使用。\n\n### 适用人群\n\n* **设计师**：快速将灵感转化为3D动态展示，通过旋转观察模型细节\n* **网购消费者**：通过多角度展示视频预览商品整体质感\n* **内容创作者**（含玩具博主）：制作收藏模型的趣味展示视频\n\n### 操作指南\n\n1. 填写PiAPI账户的X-API-Key及三视图图片链接 ![参数设置示例](https://i.ibb.co/WNfWXp3D/Frame-3432.png)  \n2. 点击测试工作流  \n3. 在最终节点获取生成视频\n\n### 效果演示\n\n输入图片  \n![示例图片](https://i.ibb.co/3ydMybrn/doll.png)\n\n输出视频  \n![示例视频](https://static.piapi.ai/n8n-instruction/3D-views2video/example1.mp4)",
  "title_zh": "使用GPT-4o图像与Kling API将三视图转换为360°视频",
  "publish_date_zh": "最后更新于6天前",
  "workflow_json_zh": "{\n  \"id\": \"KWFLpcJytH7qjheD\",\n  \"meta\": {\n    \"instanceId\": \"1e003a7ea4715b6b35e9947791386a7d07edf3b5bf8d4c9b7ee4fdcbec0447d7\"\n  },\n  \"name\": \"(Not published) Three-View Orthographic Projection to Dynamic Video Conversion\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"442e12af-531d-4000-9e74-d9bfaa3515ca\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -1960,\n        -160\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"39c46540-7dee-4237-921e-3b6bd9821302\",\n      \"name\": \"Generate Kling Video\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -400,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.piapi.ai/api/v1/task\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"model\\\": \\\"kling\\\",\\n    \\\"task_type\\\": \\\"video_generation\\\",\\n    \\\"input\\\": {\\n        \\\"version\\\": \\\"1.6\\\",\\n        \\\"mode\\\": \\\"pro\\\",\\n        \\\"image_url\\\": \\\"{{ $('Get Image URL of Front Image').item.json.image_url }}\\\",\\n        \\\"image_tail_url\\\": \\\"{{ $json.image_url }}\\\",\\n        \\\"duration\\\":5,\\n        \\\"prompt\\\": \\\"The character rotates smoothly, stay original facial expression. Apply anticlockwise rotation\\\"\\n    }\\n} \",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-api-key\",\n              \"value\": \"={{ $('Basic Params').item.json[\\\"x-api-key\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"cfc726ee-e6f2-4016-a4fe-7123a4520fda\",\n      \"name\": \"Get Kling Video\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -220,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-api-key\",\n              \"value\": \"72858adea87ad16865d5b0a24c3d9b9f58a6e7b1a8a8a8a0d6b81a9f3a9812f3\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"90d1cc4f-3d74-4a2a-9b02-3255ec9fc553\",\n      \"name\": \"Verify Task Status\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -40,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"f36fa981-22e0-46db-af8c-c2ac55242c27\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.data.status }}\",\n              \"rightValue\": \"completed\"\n            },\n            {\n              \"id\": \"637ea756-1ad9-434c-b6b2-b100ee4c3cad\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"6931c1b2-c4f4-47d6-9ff4-e6019e465c3e\",\n      \"name\": \"Get Final Video\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        260,\n        140\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Process the entire response\\nreturn {\\n  video_url: $input.all()[0].json.data.output.video_url,\\n  watermark_free_url: $input.all()[0].json.data.output.works[0].video.resource_without_watermark\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"adae02a4-dedc-4415-9409-88193090e2dc\",\n      \"name\": \"GPT-4o Generator: Front View\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1560,\n        20\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.piapi.ai/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"model\\\": \\\"gpt-4o-image-preview\\\",\\n    \\\"messages\\\": [\\n        {\\n            \\\"role\\\": \\\"user\\\",\\n            \\\"content\\\": [\\n                {\\n                    \\\"type\\\": \\\"image_url\\\",\\n                    \\\"image_url\\\": {\\n                        \\\"url\\\": \\\"{{ $json.image_url }}\\\"\\n                    }\\n                },\\n                {\\n                    \\\"type\\\": \\\"text\\\",\\n                    \\\"text\\\": \\\"Capture front view of the image, then split them into two separate images for me.\\\"\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"stream\\\": true\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $json[\\\"x-api-key\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"fsJeCNd9BkJ1CIrt\",\n          \"name\": \"Header Auth account 2\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"63320b08-62bc-4faf-a3ff-4069785c41f5\",\n      \"name\": \"GPT-4o Generator: Side View\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1000,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.piapi.ai/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"model\\\": \\\"gpt-4o-image-preview\\\",\\n    \\\"messages\\\": [\\n        {\\n            \\\"role\\\": \\\"user\\\",\\n            \\\"content\\\": [\\n                {\\n                    \\\"type\\\": \\\"image_url\\\",\\n                    \\\"image_url\\\": {\\n                        \\\"url\\\": \\\"{{ $('Basic Params').item.json.image_url }}\\\"\\n                    }\\n                },\\n                {\\n                    \\\"type\\\": \\\"text\\\",\\n                    \\\"text\\\": \\\"Generate side view of the image\\\"\\n                }\\n            ]\\n        }\\n    ],\\n    \\\"stream\\\": true\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $('Basic Params').item.json[\\\"x-api-key\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8fd1fb74-a149-4af6-9da5-e0dc3daa91c9\",\n      \"name\": \"Get Image URL of Front Image\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1380,\n        20\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const chunks = $input.first().json.data.split('\\\\n\\\\n');\\n\\nlet imageUrl = null;\\n\\nfor (let i = chunks.length - 1; i >= 0; i--) {\\n    const chunk = chunks[i];\\n    \\n    if (!chunk.startsWith('data: ')) continue;\\n    \\n    try {\\n        const jsonStr = chunk.substring(6); \\n        if (jsonStr.trim() === '[DONE]') continue;\\n        \\n        const data = JSON.parse(jsonStr);\\n        \\n\\n        if (data.choices && data.choices[0].delta.content) {\\n            const content = data.choices[0].delta.content;\\n            const urlMatch = content.match(/!\\\\[.*?\\\\]\\\\((https?:\\\\/\\\\/[^\\\\s]+)\\\\)/);\\n            \\n            if (urlMatch && urlMatch[1]) {\\n                imageUrl = urlMatch[1];\\n                break;\\n            }\\n        }\\n    } catch (e) {\\n        continue;\\n    }\\n}\\n\\nreturn {\\n    image_url: imageUrl,\\n    finish_reason: imageUrl ? \\\"success\\\" : \\\"not_found\\\"\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"b5b41a20-aba1-4fbb-aaf9-47d18a38a727\",\n      \"name\": \"Get Image URL of Side Image\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -800,\n        320\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const chunks = $input.first().json.data.split('\\\\n\\\\n');\\n\\nlet imageUrl = null;\\n\\n// 反向遍历 chunks (从最新数据开始检查)\\nfor (let i = chunks.length - 1; i >= 0; i--) {\\n    const chunk = chunks[i];\\n    \\n    if (!chunk.startsWith('data: ')) continue;\\n    \\n    try {\\n        const jsonStr = chunk.substring(6); // 去掉 \\\"data: \\\" 前缀\\n        if (jsonStr.trim() === '[DONE]') continue;\\n        \\n        const data = JSON.parse(jsonStr);\\n        \\n        // 检查是否包含图片标记（Markdown 图片语法）\\n        if (data.choices && data.choices[0].delta.content) {\\n            const content = data.choices[0].delta.content;\\n            const urlMatch = content.match(/!\\\\[.*?\\\\]\\\\((https?:\\\\/\\\\/[^\\\\s]+)\\\\)/);\\n            \\n            if (urlMatch && urlMatch[1]) {\\n                imageUrl = urlMatch[1];\\n                break;\\n            }\\n        }\\n    } catch (e) {\\n        continue;\\n    }\\n}\\n\\nreturn {\\n    image_url: imageUrl,\\n    finish_reason: imageUrl ? \\\"success\\\" : \\\"not_found\\\"\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6428385c-19ac-478c-af87-904de1e35b61\",\n      \"name\": \"Verify Generation Status of Front View\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -1160,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"08a2ebe6-dc95-4b8a-ada1-1173645cc3f4\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.finish_reason }}\",\n              \"rightValue\": \"not_found\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"395dbc5c-89e7-4eb7-a726-617250ebd02f\",\n      \"name\": \"Verify Generation Status of Side View\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -600,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"08a2ebe6-dc95-4b8a-ada1-1173645cc3f4\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.finish_reason }}\",\n              \"rightValue\": \"not_found\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"7287b4a9-8309-4984-8328-ecc569d4aa00\",\n      \"name\": \"Wait for Video Generation\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        -20,\n        240\n      ],\n      \"webhookId\": \"c7b2590d-96a3-4c7c-8821-3023fead254b\",\n      \"parameters\": {\n        \"amount\": 20\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"9ed98c97-6a73-4f74-9cbd-5e19179aba9d\",\n      \"name\": \"Basic Params\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1760,\n        -160\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"{\\n  \\\"x-api-key\\\":\\\"\\\",\\n  \\\"image_url\\\": \\\"\\\"\\n}\\n\"\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"71081f7e-7805-497b-9167-eba0b3a7c0e4\",\n  \"connections\": {\n    \"Basic Params\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GPT-4o Generator: Front View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Kling Video\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Verify Task Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Verify Task Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Final Video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Wait for Video Generation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Kling Video\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Kling Video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait for Video Generation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Kling Video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"GPT-4o Generator: Side View\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Image URL of Side Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Image URL of Side Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Verify Generation Status of Side View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"GPT-4o Generator: Front View\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Image URL of Front Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Image URL of Front Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Verify Generation Status of Front View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Basic Params\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Verify Generation Status of Side View\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GPT-4o Generator: Side View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Generate Kling Video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Verify Generation Status of Front View\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GPT-4o Generator: Front View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"GPT-4o Generator: Side View\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}