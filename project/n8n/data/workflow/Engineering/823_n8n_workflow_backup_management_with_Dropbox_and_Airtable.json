{
  "title": "n8n workflow backup management with Dropbox and Airtable",
  "url": "https://n8n.io/workflows/823-n8n-workflow-backup-management-with-dropbox-and-airtable/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/",
  "author": "Shrey",
  "publish_date": "Last update 9 months ago",
  "publish_date_absolute": "2024-08-07",
  "content": "",
  "workflow_json": "{\"id\":\"48\",\"name\":\"Workflow management\",\"nodes\":[{\"name\":\"On clicking 'execute'\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[240,300],\"parameters\":{},\"typeVersion\":1},{\"name\":\"Function\",\"type\":\"n8n-nodes-base.function\",\"position\":[570,300],\"parameters\":{\"functionCode\":\"//console.log(items[0].json.data);\\nlet data = items[0].json.data;\\nitems = data.map(i => {\\n//  console.log({json:i});\\n  return {json:i};\\n});\\n//console.log(items);\\nreturn items;\"},\"typeVersion\":1},{\"name\":\"SplitInBatches\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[760,300],\"parameters\":{\"options\":{},\"batchSize\":1},\"typeVersion\":1},{\"name\":\"IF\",\"type\":\"n8n-nodes-base.if\",\"position\":[2090,570],\"parameters\":{\"conditions\":{\"boolean\":[{\"value1\":\"={{$node[\\\"SplitInBatches\\\"].context[\\\"noItemsLeft\\\"]}}\",\"value2\":true}]}},\"typeVersion\":1},{\"name\":\"NoOp\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[2270,550],\"parameters\":{},\"typeVersion\":1},{\"name\":\"Airtable\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[1100,200],\"parameters\":{\"table\":\"Workflows\",\"operation\":\"list\",\"application\":\"<YOUR_APP_ID>\",\"additionalOptions\":{\"fields\":[],\"filterByFormula\":\"=workflowId={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}\"}},\"credentials\":{\"airtableApi\":\"n8n management demo\"},\"typeVersion\":1,\"alwaysOutputData\":true},{\"name\":\"Airtable1\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[1750,130],\"parameters\":{\"id\":\"={{$node[\\\"Airtable\\\"].json[\\\"id\\\"]}}\",\"table\":\"Workflows\",\"options\":{\"typecast\":true},\"operation\":\"update\",\"application\":\"<YOUR_APP_ID>\"},\"credentials\":{\"airtableApi\":\"n8n management demo\"},\"typeVersion\":1},{\"name\":\"Airtable2\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[1750,320],\"parameters\":{\"table\":\"Workflows\",\"options\":{\"typecast\":true},\"operation\":\"append\",\"application\":\"<YOUR_APP_ID>\"},\"credentials\":{\"airtableApi\":\"n8n management demo\"},\"typeVersion\":1},{\"name\":\"Set\",\"type\":\"n8n-nodes-base.set\",\"position\":[1590,130],\"parameters\":{\"values\":{\"string\":[{\"name\":\"workflowId\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}\"},{\"name\":\"name\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"name\\\"]}}\"},{\"name\":\"errorWorkflowId\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"errorWorkflow\\\"]}}\"},{\"name\":\"createdAt\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"createdAt\\\"]}}\"},{\"name\":\"updatedAt\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"updatedAt\\\"]}}\"},{\"name\":\"nodes\",\"value\":\"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"nodes\\\"]}}\"},{\"name\":\"timezone\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"timezone\\\"]}}\"},{\"name\":\"CRON_details\",\"value\":\"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"CRON_details\\\"]}}\"},{\"name\":\"rawData\",\"value\":\"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"rawData\\\"]}}\"}],\"boolean\":[{\"name\":\"isActive\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"active\\\"]}}\"},{\"name\":\"isCRON\",\"value\":\"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"isCRON\\\"]}}\"},{\"name\":\"saveManualExecutions\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"saveManualExecutions\\\"]}}\"},{\"name\":\"isTrigger\",\"value\":\"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"isTrigger\\\"]}}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"name\":\"Set1\",\"type\":\"n8n-nodes-base.set\",\"position\":[1590,320],\"parameters\":{\"values\":{\"string\":[{\"name\":\"workflowId\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}\"},{\"name\":\"name\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"name\\\"]}}\"},{\"name\":\"errorWorkflowId\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"errorWorkflow\\\"]}}\"},{\"name\":\"createdAt\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"createdAt\\\"]}}\"},{\"name\":\"updatedAt\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"updatedAt\\\"]}}\"},{\"name\":\"nodes\",\"value\":\"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"nodes\\\"]}}\"},{\"name\":\"timezone\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"timezone\\\"]}}\"},{\"name\":\"CRON_details\",\"value\":\"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"CRON_details\\\"]}}\"},{\"name\":\"rawData\",\"value\":\"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"rawData\\\"]}}\"}],\"boolean\":[{\"name\":\"isActive\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"active\\\"]}}\"},{\"name\":\"isCRON\",\"value\":\"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"isCRON\\\"]}}\"},{\"name\":\"saveManualExecutions\",\"value\":\"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"saveManualExecutions\\\"]}}\"},{\"name\":\"isTrigger\",\"value\":\"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"isTrigger\\\"]}}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"name\":\"Get All Workflows\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[410,300],\"parameters\":{\"url\":\"http://localhost:5678/rest/workflows\",\"options\":{\"fullResponse\":false},\"headerParametersUi\":{\"parameter\":[{\"name\":\"Authorization\",\"value\":\"<TOKEN>\"}]},\"allowUnauthorizedCerts\":true},\"typeVersion\":1},{\"name\":\"Prepare data\",\"type\":\"n8n-nodes-base.function\",\"position\":[1430,130],\"parameters\":{\"functionCode\":\"let data = $node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"];\\nlet file = $node[\\\"Get file link\\\"].json[\\\"link\\\"];\\nlet nodes = new Set(data[\\\"nodes\\\"].map(i => i.type));\\nlet nodes2 = [...nodes];\\n//console.log(...nodes);\\nlet data2 = data[\\\"nodes\\\"].map(i => i.name);\\nif(nodes2.includes('n8n-nodes-base.cron')){\\n  console.log('Cron found!');\\n//  console.log(data);\\n  let cron_node = data[\\\"nodes\\\"].filter(i => i.type == 'n8n-nodes-base.cron');\\n  //console.log(cron_node[0].parameters.triggerTimes.item);\\n  items[0].json[\\\"fields\\\"][\\\"isCRON\\\"]=true;\\n  items[0].json[\\\"fields\\\"][\\\"nodes\\\"]=[...nodes];\\n  items[0].json[\\\"fields\\\"][\\\"CRON_details\\\"]=cron_node[0].parameters.triggerTimes.item;\\n  items[0].json[\\\"fields\\\"][\\\"rawData\\\"]=[{url:file ,filename: 'workflow_'+data[\\\"id\\\"]+'__'+data[\\\"updatedAt\\\"]+'.json'}];\\n} else {  \\n  //console.log('Cron not found!');\\n  items[0].json[\\\"fields\\\"][\\\"isCRON\\\"]=false;\\n  items[0].json[\\\"fields\\\"][\\\"nodes\\\"]=[...nodes];\\n  items[0].json[\\\"fields\\\"][\\\"rawData\\\"]=[{url:file ,filename: 'workflow_'+data[\\\"id\\\"]+'__'+data[\\\"updatedAt\\\"]+'.json'}];\\n}\\nif(nodes2.some(i => {\\n  let regExp = new RegExp(/n8n-nodes-base\\\\.[\\\\w]+Trigger/);\\n  if(i=='n8n-nodes-base.webhook'){\\n    return true;\\n  }\\n  if(regExp.test(i)){\\n    return true;\\n  }\\n  return false;\\n})){\\n  items[0].json[\\\"fields\\\"][\\\"isTrigger\\\"]=true;  \\n} else {\\n  items[0].json[\\\"fields\\\"][\\\"isTrigger\\\"]=false;\\n}\\n  \\n//console.log(items);\\nreturn items;\\n\"},\"typeVersion\":1},{\"name\":\"Prepare data1\",\"type\":\"n8n-nodes-base.function\",\"position\":[1430,320],\"parameters\":{\"functionCode\":\"let data = $node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"];\\nlet file = $node[\\\"Get file link\\\"].json[\\\"link\\\"];\\nlet nodes = new Set(data[\\\"nodes\\\"].map(i => i.type));\\nlet nodes2 = [...nodes];\\n//console.log(data);\\nlet data2 = data[\\\"nodes\\\"].map(i => i.name);\\nif(nodes2.includes('n8n-nodes-base.cron')){\\n  //console.log('Cron found!');\\n  let cron_node = data[\\\"nodes\\\"].filter(i => i.type == 'n8n-nodes-base.cron');\\n  items[0].json={\\n    fields:{\\n      isCRON:true,\\n      nodes:[...nodes],\\n      CRON_details:cron_node[0].parameters.triggerTimes.item,\\n      rawData:[{url:file ,filename: 'workflow_'+data[\\\"id\\\"]+'__'+data[\\\"updatedAt\\\"]+'.json'}]\\n    }\\n  };\\n} else {  \\n  //console.log('Cron not found!');\\n  items[0].json={\\n    fields:{\\n      isCRON:false,\\n      nodes:[...nodes],\\n      rawData:[{url:file ,filename: 'workflow_'+data[\\\"id\\\"]+'__'+data[\\\"updatedAt\\\"]+'.json'}]\\n    }\\n  };\\n}\\nif(nodes2.some(i => {\\n  let regExp = new RegExp(/n8n-nodes-base\\\\.[\\\\w]+Trigger/);\\n  if(i=='n8n-nodes-base.webhook'){\\n    return true;\\n  }\\n  if(regExp.test(i)){\\n    return true;\\n  }\\n  return false;\\n})){\\n  items[0].json[\\\"fields\\\"][\\\"isTrigger\\\"]=true;  \\n} else {\\n  items[0].json[\\\"fields\\\"][\\\"isTrigger\\\"]=false;\\n}\\n//console.log(items);\\nreturn items;\\n\\n\"},\"typeVersion\":1},{\"name\":\"Cron\",\"type\":\"n8n-nodes-base.cron\",\"position\":[250,510],\"parameters\":{\"triggerTimes\":{\"item\":[{\"mode\":\"everyHour\",\"minute\":15},{\"mode\":\"everyHour\",\"minute\":45}]}},\"typeVersion\":1},{\"name\":\"Move Binary Data\",\"type\":\"n8n-nodes-base.moveBinaryData\",\"position\":[1000,-10],\"parameters\":{\"mode\":\"jsonToBinary\",\"options\":{\"keepSource\":true}},\"typeVersion\":1},{\"name\":\"Dropbox\",\"type\":\"n8n-nodes-base.dropbox\",\"position\":[1140,-10],\"parameters\":{\"path\":\"=/workflows/workflow_{{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}/workflow_{{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}__{{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"updatedAt\\\"]}}.json\",\"binaryData\":true},\"credentials\":{\"dropboxApi\":\"My n8n backups\"},\"typeVersion\":1},{\"name\":\"Get Workflow Details\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[840,-10],\"parameters\":{\"url\":\"=http://localhost:5678/rest/workflows/{{$node[\\\"SplitInBatches\\\"].json[\\\"id\\\"]}}\",\"options\":{},\"headerParametersUi\":{\"parameter\":[{\"name\":\"Authorization\",\"value\":\"<TOKEN>\"}]},\"allowUnauthorizedCerts\":true},\"typeVersion\":1},{\"name\":\"Get file link\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1290,-10],\"parameters\":{\"url\":\"https://api.dropboxapi.com/2/files/get_temporary_link\",\"options\":{},\"requestMethod\":\"POST\",\"bodyParametersUi\":{\"parameter\":[{\"name\":\"path\",\"value\":\"={{$node[\\\"Dropbox\\\"].json[\\\"path_lower\\\"]}}\"}]},\"headerParametersUi\":{\"parameter\":[{\"name\":\"Authorization\",\"value\":\"<TOKEN>\"}]}},\"typeVersion\":1,\"continueOnFail\":true,\"alwaysOutputData\":true},{\"name\":\"IF Airtable record exists?\",\"type\":\"n8n-nodes-base.if\",\"position\":[1270,200],\"parameters\":{\"conditions\":{\"boolean\":[{\"value1\":\"={{$node[\\\"Airtable\\\"].json[\\\"id\\\"] != \\\"\\\" && $node[\\\"Airtable\\\"].json[\\\"id\\\"] != null && $node[\\\"Airtable\\\"].json[\\\"id\\\"] != undefined}}\",\"value2\":true}]}},\"typeVersion\":1}],\"active\":true,\"settings\":{\"errorWorkflow\":\"5\"},\"connections\":{\"IF\":{\"main\":[[{\"node\":\"NoOp\",\"type\":\"main\",\"index\":0}],[{\"node\":\"SplitInBatches\",\"type\":\"main\",\"index\":0}]]},\"Set\":{\"main\":[[{\"node\":\"Airtable1\",\"type\":\"main\",\"index\":0}]]},\"Cron\":{\"main\":[[{\"node\":\"Get All Workflows\",\"type\":\"main\",\"index\":0}]]},\"Set1\":{\"main\":[[{\"node\":\"Airtable2\",\"type\":\"main\",\"index\":0}]]},\"Dropbox\":{\"main\":[[{\"node\":\"Get file link\",\"type\":\"main\",\"index\":0}]]},\"Airtable\":{\"main\":[[{\"node\":\"IF Airtable record exists?\",\"type\":\"main\",\"index\":0}]]},\"Function\":{\"main\":[[{\"node\":\"SplitInBatches\",\"type\":\"main\",\"index\":0}]]},\"Airtable1\":{\"main\":[[{\"node\":\"IF\",\"type\":\"main\",\"index\":0}]]},\"Airtable2\":{\"main\":[[{\"node\":\"IF\",\"type\":\"main\",\"index\":0}]]},\"Prepare data\":{\"main\":[[{\"node\":\"Set\",\"type\":\"main\",\"index\":0}]]},\"Get file link\":{\"main\":[[{\"node\":\"Airtable\",\"type\":\"main\",\"index\":0}]]},\"Prepare data1\":{\"main\":[[{\"node\":\"Set1\",\"type\":\"main\",\"index\":0}]]},\"SplitInBatches\":{\"main\":[[{\"node\":\"Get Workflow Details\",\"type\":\"main\",\"index\":0}]]},\"Move Binary Data\":{\"main\":[[{\"node\":\"Dropbox\",\"type\":\"main\",\"index\":0}]]},\"Get All Workflows\":{\"main\":[[{\"node\":\"Function\",\"type\":\"main\",\"index\":0}]]},\"Get Workflow Details\":{\"main\":[[{\"node\":\"Move Binary Data\",\"type\":\"main\",\"index\":0}]]},\"On clicking 'execute'\":{\"main\":[[{\"node\":\"Get All Workflows\",\"type\":\"main\",\"index\":0}]]},\"IF Airtable record exists?\":{\"main\":[[{\"node\":\"Prepare data\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Prepare data1\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow can be used to save all of your workflows in:\n\n  1. a raw state (as a json file in Dropbox)\n  2. an Airtable base, in a pre-designed format.\n\n\n\nIt runs periodically (currently, every 30 minutes) and either updates (if already existing in Airtable) or creates a new record in Airtable for each workflow.\n\nHere's the Airtable base to give you an idea:\n\n**[View Airtable base](https://airtable.com/shr9jexYomxygFSag)**\n\n**Note: This workflows uses the \"<http://localhost:5678/rest>\" API which the UI editor uses but is still not officially supported. Hence, it may suffer breaking changes at some point in the future and the workflow might become dysfunctional then.**\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>This workflow can be used to save all of your workflows in:</p>\n<ol>\n<li>a raw state (as a json file in Dropbox)</li>\n<li>an Airtable base, in a pre-designed format.</li>\n</ol>\n<p>It runs periodically (currently, every 30 minutes) and either updates (if already existing in Airtable) or creates a new record in Airtable for each workflow.</p>\n<p>Here's the Airtable base to give you an idea:</p>\n<p><strong><a href=\"https://airtable.com/shr9jexYomxygFSag\" rel=\"ugc nofollow\" target=\"_blank\">View Airtable base</a></strong></p>\n<p><strong>Note: This workflows uses the \"<a href=\"http://localhost:5678/rest\" rel=\"ugc nofollow\" target=\"_blank\">http://localhost:5678/rest</a>\" API which the UI editor uses but is still not officially supported. Hence, it may suffer breaking changes at some point in the future and the workflow might become dysfunctional then.</strong></p>\n</div><!--]-->",
  "readme_zh": "该工作流可用于将所有工作流保存至以下位置：\n\n1. 原始状态（以Dropbox中的json文件形式）\n2. 预先设计好格式的Airtable数据库\n\n它会定期运行（当前设置为每30分钟一次），针对每个工作流执行更新（若已存在于Airtable）或在Airtable中创建新记录。\n\n以下是参考用的Airtable数据库模板：\n**[查看Airtable数据库](https://airtable.com/shr9jexYomxygFSag)**\n\n**注意：本工作流使用了UI编辑器调用的\"<http://localhost:5678/rest>\" API，但该接口尚未获得官方支持。因此未来可能出现破坏性变更，导致工作流失效。**",
  "title_zh": "使用Dropbox和Airtable管理n8n工作流备份",
  "publish_date_zh": "最后更新于9个月前",
  "workflow_json_zh": "{\n  \"id\": \"48\",\n  \"name\": \"Workflow management\",\n  \"nodes\": [\n    {\n      \"name\": \"On clicking 'execute'\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        240,\n        300\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        570,\n        300\n      ],\n      \"parameters\": {\n        \"functionCode\": \"//console.log(items[0].json.data);\\nlet data = items[0].json.data;\\nitems = data.map(i => {\\n//  console.log({json:i});\\n  return {json:i};\\n});\\n//console.log(items);\\nreturn items;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SplitInBatches\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        760,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"batchSize\": 1\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"IF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2090,\n        570\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{$node[\\\"SplitInBatches\\\"].context[\\\"noItemsLeft\\\"]}}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"NoOp\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2270,\n        550\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Airtable\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        1100,\n        200\n      ],\n      \"parameters\": {\n        \"table\": \"Workflows\",\n        \"operation\": \"list\",\n        \"application\": \"<YOUR_APP_ID>\",\n        \"additionalOptions\": {\n          \"fields\": [],\n          \"filterByFormula\": \"=workflowId={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}\"\n        }\n      },\n      \"credentials\": {\n        \"airtableApi\": \"n8n management demo\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"Airtable1\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        1750,\n        130\n      ],\n      \"parameters\": {\n        \"id\": \"={{$node[\\\"Airtable\\\"].json[\\\"id\\\"]}}\",\n        \"table\": \"Workflows\",\n        \"options\": {\n          \"typecast\": true\n        },\n        \"operation\": \"update\",\n        \"application\": \"<YOUR_APP_ID>\"\n      },\n      \"credentials\": {\n        \"airtableApi\": \"n8n management demo\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Airtable2\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        1750,\n        320\n      ],\n      \"parameters\": {\n        \"table\": \"Workflows\",\n        \"options\": {\n          \"typecast\": true\n        },\n        \"operation\": \"append\",\n        \"application\": \"<YOUR_APP_ID>\"\n      },\n      \"credentials\": {\n        \"airtableApi\": \"n8n management demo\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Set\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1590,\n        130\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"workflowId\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}\"\n            },\n            {\n              \"name\": \"name\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"name\\\"]}}\"\n            },\n            {\n              \"name\": \"errorWorkflowId\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"errorWorkflow\\\"]}}\"\n            },\n            {\n              \"name\": \"createdAt\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"createdAt\\\"]}}\"\n            },\n            {\n              \"name\": \"updatedAt\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"updatedAt\\\"]}}\"\n            },\n            {\n              \"name\": \"nodes\",\n              \"value\": \"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"nodes\\\"]}}\"\n            },\n            {\n              \"name\": \"timezone\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"timezone\\\"]}}\"\n            },\n            {\n              \"name\": \"CRON_details\",\n              \"value\": \"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"CRON_details\\\"]}}\"\n            },\n            {\n              \"name\": \"rawData\",\n              \"value\": \"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"rawData\\\"]}}\"\n            }\n          ],\n          \"boolean\": [\n            {\n              \"name\": \"isActive\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"active\\\"]}}\"\n            },\n            {\n              \"name\": \"isCRON\",\n              \"value\": \"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"isCRON\\\"]}}\"\n            },\n            {\n              \"name\": \"saveManualExecutions\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"saveManualExecutions\\\"]}}\"\n            },\n            {\n              \"name\": \"isTrigger\",\n              \"value\": \"={{$node[\\\"Prepare data\\\"].json[\\\"fields\\\"][\\\"isTrigger\\\"]}}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Set1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1590,\n        320\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"workflowId\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}\"\n            },\n            {\n              \"name\": \"name\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"name\\\"]}}\"\n            },\n            {\n              \"name\": \"errorWorkflowId\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"errorWorkflow\\\"]}}\"\n            },\n            {\n              \"name\": \"createdAt\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"createdAt\\\"]}}\"\n            },\n            {\n              \"name\": \"updatedAt\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"updatedAt\\\"]}}\"\n            },\n            {\n              \"name\": \"nodes\",\n              \"value\": \"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"nodes\\\"]}}\"\n            },\n            {\n              \"name\": \"timezone\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"timezone\\\"]}}\"\n            },\n            {\n              \"name\": \"CRON_details\",\n              \"value\": \"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"CRON_details\\\"]}}\"\n            },\n            {\n              \"name\": \"rawData\",\n              \"value\": \"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"rawData\\\"]}}\"\n            }\n          ],\n          \"boolean\": [\n            {\n              \"name\": \"isActive\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"active\\\"]}}\"\n            },\n            {\n              \"name\": \"isCRON\",\n              \"value\": \"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"isCRON\\\"]}}\"\n            },\n            {\n              \"name\": \"saveManualExecutions\",\n              \"value\": \"={{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"settings\\\"][\\\"saveManualExecutions\\\"]}}\"\n            },\n            {\n              \"name\": \"isTrigger\",\n              \"value\": \"={{$node[\\\"Prepare data1\\\"].json[\\\"fields\\\"][\\\"isTrigger\\\"]}}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Get All Workflows\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        410,\n        300\n      ],\n      \"parameters\": {\n        \"url\": \"http://localhost:5678/rest/workflows\",\n        \"options\": {\n          \"fullResponse\": false\n        },\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"<TOKEN>\"\n            }\n          ]\n        },\n        \"allowUnauthorizedCerts\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Prepare data\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1430,\n        130\n      ],\n      \"parameters\": {\n        \"functionCode\": \"let data = $node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"];\\nlet file = $node[\\\"Get file link\\\"].json[\\\"link\\\"];\\nlet nodes = new Set(data[\\\"nodes\\\"].map(i => i.type));\\nlet nodes2 = [...nodes];\\n//console.log(...nodes);\\nlet data2 = data[\\\"nodes\\\"].map(i => i.name);\\nif(nodes2.includes('n8n-nodes-base.cron')){\\n  console.log('Cron found!');\\n//  console.log(data);\\n  let cron_node = data[\\\"nodes\\\"].filter(i => i.type == 'n8n-nodes-base.cron');\\n  //console.log(cron_node[0].parameters.triggerTimes.item);\\n  items[0].json[\\\"fields\\\"][\\\"isCRON\\\"]=true;\\n  items[0].json[\\\"fields\\\"][\\\"nodes\\\"]=[...nodes];\\n  items[0].json[\\\"fields\\\"][\\\"CRON_details\\\"]=cron_node[0].parameters.triggerTimes.item;\\n  items[0].json[\\\"fields\\\"][\\\"rawData\\\"]=[{url:file ,filename: 'workflow_'+data[\\\"id\\\"]+'__'+data[\\\"updatedAt\\\"]+'.json'}];\\n} else {  \\n  //console.log('Cron not found!');\\n  items[0].json[\\\"fields\\\"][\\\"isCRON\\\"]=false;\\n  items[0].json[\\\"fields\\\"][\\\"nodes\\\"]=[...nodes];\\n  items[0].json[\\\"fields\\\"][\\\"rawData\\\"]=[{url:file ,filename: 'workflow_'+data[\\\"id\\\"]+'__'+data[\\\"updatedAt\\\"]+'.json'}];\\n}\\nif(nodes2.some(i => {\\n  let regExp = new RegExp(/n8n-nodes-base\\\\.[\\\\w]+Trigger/);\\n  if(i=='n8n-nodes-base.webhook'){\\n    return true;\\n  }\\n  if(regExp.test(i)){\\n    return true;\\n  }\\n  return false;\\n})){\\n  items[0].json[\\\"fields\\\"][\\\"isTrigger\\\"]=true;  \\n} else {\\n  items[0].json[\\\"fields\\\"][\\\"isTrigger\\\"]=false;\\n}\\n  \\n//console.log(items);\\nreturn items;\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Prepare data1\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1430,\n        320\n      ],\n      \"parameters\": {\n        \"functionCode\": \"let data = $node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"];\\nlet file = $node[\\\"Get file link\\\"].json[\\\"link\\\"];\\nlet nodes = new Set(data[\\\"nodes\\\"].map(i => i.type));\\nlet nodes2 = [...nodes];\\n//console.log(data);\\nlet data2 = data[\\\"nodes\\\"].map(i => i.name);\\nif(nodes2.includes('n8n-nodes-base.cron')){\\n  //console.log('Cron found!');\\n  let cron_node = data[\\\"nodes\\\"].filter(i => i.type == 'n8n-nodes-base.cron');\\n  items[0].json={\\n    fields:{\\n      isCRON:true,\\n      nodes:[...nodes],\\n      CRON_details:cron_node[0].parameters.triggerTimes.item,\\n      rawData:[{url:file ,filename: 'workflow_'+data[\\\"id\\\"]+'__'+data[\\\"updatedAt\\\"]+'.json'}]\\n    }\\n  };\\n} else {  \\n  //console.log('Cron not found!');\\n  items[0].json={\\n    fields:{\\n      isCRON:false,\\n      nodes:[...nodes],\\n      rawData:[{url:file ,filename: 'workflow_'+data[\\\"id\\\"]+'__'+data[\\\"updatedAt\\\"]+'.json'}]\\n    }\\n  };\\n}\\nif(nodes2.some(i => {\\n  let regExp = new RegExp(/n8n-nodes-base\\\\.[\\\\w]+Trigger/);\\n  if(i=='n8n-nodes-base.webhook'){\\n    return true;\\n  }\\n  if(regExp.test(i)){\\n    return true;\\n  }\\n  return false;\\n})){\\n  items[0].json[\\\"fields\\\"][\\\"isTrigger\\\"]=true;  \\n} else {\\n  items[0].json[\\\"fields\\\"][\\\"isTrigger\\\"]=false;\\n}\\n//console.log(items);\\nreturn items;\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Cron\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        250,\n        510\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyHour\",\n              \"minute\": 15\n            },\n            {\n              \"mode\": \"everyHour\",\n              \"minute\": 45\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Move Binary Data\",\n      \"type\": \"n8n-nodes-base.moveBinaryData\",\n      \"position\": [\n        1000,\n        -10\n      ],\n      \"parameters\": {\n        \"mode\": \"jsonToBinary\",\n        \"options\": {\n          \"keepSource\": true\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Dropbox\",\n      \"type\": \"n8n-nodes-base.dropbox\",\n      \"position\": [\n        1140,\n        -10\n      ],\n      \"parameters\": {\n        \"path\": \"=/workflows/workflow_{{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}/workflow_{{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"id\\\"]}}__{{$node[\\\"Get Workflow Details\\\"].json[\\\"data\\\"][\\\"updatedAt\\\"]}}.json\",\n        \"binaryData\": true\n      },\n      \"credentials\": {\n        \"dropboxApi\": \"My n8n backups\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Get Workflow Details\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        840,\n        -10\n      ],\n      \"parameters\": {\n        \"url\": \"=http://localhost:5678/rest/workflows/{{$node[\\\"SplitInBatches\\\"].json[\\\"id\\\"]}}\",\n        \"options\": {},\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"<TOKEN>\"\n            }\n          ]\n        },\n        \"allowUnauthorizedCerts\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Get file link\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1290,\n        -10\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.dropboxapi.com/2/files/get_temporary_link\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"path\",\n              \"value\": \"={{$node[\\\"Dropbox\\\"].json[\\\"path_lower\\\"]}}\"\n            }\n          ]\n        },\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"<TOKEN>\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1,\n      \"continueOnFail\": true,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"IF Airtable record exists?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1270,\n        200\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{$node[\\\"Airtable\\\"].json[\\\"id\\\"] != \\\"\\\" && $node[\\\"Airtable\\\"].json[\\\"id\\\"] != null && $node[\\\"Airtable\\\"].json[\\\"id\\\"] != undefined}}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"settings\": {\n    \"errorWorkflow\": \"5\"\n  },\n  \"connections\": {\n    \"IF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"NoOp\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"SplitInBatches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Airtable1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Cron\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get All Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Airtable2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Dropbox\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get file link\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Airtable\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF Airtable record exists?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SplitInBatches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Airtable1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Airtable2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get file link\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Airtable\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SplitInBatches\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Workflow Details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Move Binary Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Dropbox\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Workflow Details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Move Binary Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On clicking 'execute'\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get All Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF Airtable record exists?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Prepare data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}