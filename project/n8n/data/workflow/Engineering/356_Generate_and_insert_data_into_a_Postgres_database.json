{
  "title": "Generate and insert data into a Postgres database",
  "url": "https://n8n.io/workflows/356-generate-and-insert-data-into-a-postgres-database/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/?sort=createdAt:desc",
  "author": "tanaypant",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-22",
  "content": "",
  "workflow_json": "{\"id\":\"33\",\"name\":\"Postgres Data Ingestion\",\"nodes\":[{\"name\":\"Cron\",\"type\":\"n8n-nodes-base.cron\",\"position\":[300,250],\"parameters\":{\"triggerTimes\":{\"item\":[{\"mode\":\"everyMinute\"}]}},\"typeVersion\":1},{\"name\":\"Function\",\"type\":\"n8n-nodes-base.function\",\"position\":[500,250],\"parameters\":{\"functionCode\":\"var today = new Date();\\nvar date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\\nvar time = today.getHours() + \\\":\\\" + today.getMinutes() + \\\":\\\" + today.getSeconds();\\nvar dateTime = date+' '+time;\\n\\nitems[0].json.sensor_id = 'humidity01';\\nitems[0].json.value = Math.ceil(Math.random()*100);\\nitems[0].json.time_stamp = dateTime;\\nitems[0].json.notification = false;\\n\\nreturn items;\"},\"typeVersion\":1},{\"name\":\"Postgres\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[680,250],\"parameters\":{\"table\":\"n8n\",\"columns\":\"sensor_id,value,time_stamp,notification\"},\"credentials\":{\"postgres\":\"Postgres\"},\"typeVersion\":1}],\"active\":true,\"settings\":{},\"connections\":{\"Cron\":{\"main\":[[{\"node\":\"Function\",\"type\":\"main\",\"index\":0}]]},\"Function\":{\"main\":[[{\"node\":\"Postgres\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This is Workflow 1 in the blog tutorial [Database activity monitoring and alerting](https://blog.n8n.io/database-monitoring-and-alerting-with-n8n/).\n\n## Prerequisites\n\n  * A Postgres database set up and [credentials](https://docs.n8n.io/integrations/credentials/postgres/).\n  * Basic knowledge of JavaScript and SQL.\n\n\n\n## Nodes\n\n  * [Cron node](https://docs.n8n.io/integrations/core-nodes/n8n-nodes-base.cron/) starts the workflow every minute.\n  * [Function node](https://docs.n8n.io/integrations/core-nodes/n8n-nodes-base.function/) generates sensor data (sensor id (preset), a randomly generated value, timestamp, and notification (preset as false) )\n  * [Postgres node](https://docs.n8n.io/integrations/nodes/n8n-nodes-base.postgres/) inserts the data into a Postgres database.  \nYou can create the database for this workflow with the following SQL statement:\n\n\n    \n    \n    CREATE TABLE n8n (id SERIAL, sensor_id VARCHAR, value INT, time_stamp TIMESTAMP, notification BOOLEAN);\n    \n",
  "readme_html": "<!--[--><div data-v-859c7806=\"\"><p>This is Workflow 1 in the blog tutorial <a href=\"https://blog.n8n.io/database-monitoring-and-alerting-with-n8n/\" rel=\"ugc nofollow\" target=\"_blank\">Database activity monitoring and alerting</a>.</p>\n<h2>Prerequisites</h2>\n<ul>\n<li>A Postgres database set up and <a href=\"https://docs.n8n.io/integrations/credentials/postgres/\" rel=\"ugc nofollow\" target=\"_blank\">credentials</a>.</li>\n<li>Basic knowledge of JavaScript and SQL.</li>\n</ul>\n<h2>Nodes</h2>\n<ul>\n<li><a href=\"https://docs.n8n.io/integrations/core-nodes/n8n-nodes-base.cron/\" rel=\"ugc nofollow\" target=\"_blank\">Cron node</a> starts the workflow every minute.</li>\n<li><a href=\"https://docs.n8n.io/integrations/core-nodes/n8n-nodes-base.function/\" rel=\"ugc nofollow\" target=\"_blank\">Function node</a> generates sensor data (sensor id (preset), a randomly generated value, timestamp, and notification (preset as false) )</li>\n<li><a href=\"https://docs.n8n.io/integrations/nodes/n8n-nodes-base.postgres/\" rel=\"ugc nofollow\" target=\"_blank\">Postgres node</a> inserts the data into a Postgres database.<br>\nYou can create the database for this workflow with the following SQL statement:</li>\n</ul>\n<pre><code>CREATE TABLE n8n (id SERIAL, sensor_id VARCHAR, value INT, time_stamp TIMESTAMP, notification BOOLEAN);\n</code></pre>\n</div><!--]-->",
  "readme_zh": "这是博客教程[《数据库活动监控与告警》](https://blog.n8n.io/database-monitoring-and-alerting-with-n8n/)中的工作流1。\n\n## 前提条件\n\n* 已设置Postgres数据库并配置[凭证](https://docs.n8n.io/integrations/credentials/postgres/)\n* 基础的JavaScript和SQL知识\n\n## 节点说明\n\n* [定时触发器节点](https://docs.n8n.io/integrations/core-nodes/n8n-nodes-base.cron/)每分钟启动工作流\n* [函数节点](https://docs.n8n.io/integrations/core-nodes/n8n-nodes-base.function/)生成传感器数据（包含预设的传感器ID、随机生成数值、时间戳以及预设为false的通知状态）\n* [Postgres节点](https://docs.n8n.io/integrations/nodes/n8n-nodes-base.postgres/)将数据插入Postgres数据库\n\n可通过以下SQL语句创建本工作流所需的数据库表：\n\n```sql\nCREATE TABLE n8n (\n    id SERIAL, \n    sensor_id VARCHAR, \n    value INT, \n    time_stamp TIMESTAMP, \n    notification BOOLEAN\n);\n```",
  "title_zh": "生成并向Postgres数据库插入数据",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\"id\":\"33\",\"name\":\"Postgres Data Ingestion\",\"nodes\":[{\"name\":\"Cron\",\"type\":\"n8n-nodes-base.cron\",\"position\":[300,250],\"parameters\":{\"triggerTimes\":{\"item\":[{\"mode\":\"everyMinute\"}]}},\"typeVersion\":1},{\"name\":\"Function\",\"type\":\"n8n-nodes-base.function\",\"position\":[500,250],\"parameters\":{\"functionCode\":\"var today = new Date();\\nvar date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\\nvar time = today.getHours() + \\\":\\\" + today.getMinutes() + \\\":\\\" + today.getSeconds();\\nvar dateTime = date+' '+time;\\n\\nitems[0].json.sensor_id = 'humidity01';\\nitems[0].json.value = Math.ceil(Math.random()*100);\\nitems[0].json.time_stamp = dateTime;\\nitems[0].json.notification = false;\\n\\nreturn items;\"},\"typeVersion\":1},{\"name\":\"Postgres\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[680,250],\"parameters\":{\"table\":\"n8n\",\"columns\":\"sensor_id,value,time_stamp,notification\"},\"credentials\":{\"postgres\":\"Postgres\"},\"typeVersion\":1}],\"active\":true,\"settings\":{},\"connections\":{\"Cron\":{\"main\":[[{\"node\":\"Function\",\"type\":\"main\",\"index\":0}]]},\"Function\":{\"main\":[[{\"node\":\"Postgres\",\"type\":\"main\",\"index\":0}]]}}}"
}