{
  "title": "Sync Jira issues with subsequent comments to Notion database",
  "url": "https://n8n.io/workflows/1831-sync-jira-issues-with-subsequent-comments-to-notion-database/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/?count=20",
  "author": "n8n Team",
  "publish_date": "Last update 9 months ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"YCQFaJdmJc6Rx4o7\",\"meta\":{\"instanceId\":\"0c0787ab1a9ebbb0967650f7b4012417acdd61c2fa7c9e119981847e2fc8b09c\"},\"name\":\"Sync Jira issues with subsequent comments to Notion database\",\"tags\":[{\"id\":\"24\",\"name\":\"n8n team\",\"createdAt\":\"2023-02-28T11:17:04.513Z\",\"updatedAt\":\"2023-02-28T11:17:04.513Z\"}],\"nodes\":[{\"id\":\"3f36dc12-5011-4786-aa21-f20ba72944df\",\"name\":\"Create database page\",\"type\":\"n8n-nodes-base.notion\",\"position\":[460,460],\"parameters\":{\"title\":\"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"fields\\\"][\\\"summary\\\"]}}\",\"options\":{},\"resource\":\"databasePage\",\"databaseId\":\"e3503d88-accb-4ddb-aa45-f962cb03e729\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Issue Key|rich_text\",\"textContent\":\"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"key\\\"]}}\"},{\"key\":\"Issue ID|number\",\"numberValue\":\"={{parseInt($node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"id\\\"])}}\"},{\"key\":\"Link|url\",\"urlValue\":\"=https://n8n-io.atlassian.net/browse/{{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"key\\\"]}}\",\"ignoreIfEmpty\":true},{\"key\":\"Status|select\",\"selectValue\":\"={{$node[\\\"Lookup table\\\"].json[\\\"Status ID\\\"]}}\"}]}},\"credentials\":{\"notionApi\":{\"id\":\"XNjSmr171NUO17TK\",\"name\":\"REPLACE ME\"}},\"typeVersion\":2},{\"id\":\"2d13b713-dd3d-48aa-a550-fe8db1e7aafd\",\"name\":\"Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[660,460],\"parameters\":{\"width\":232.65822784810126,\"height\":137.9746835443038,\"content\":\"### `IF` & `Switch` nodes\\nThese conditional nodes (`IF` and `Switch`) determine which Notion [**CRUD**](https://www.sumologic.com/glossary/crud/) operations will be performed.\"},\"typeVersion\":1},{\"id\":\"374761f7-9299-41a3-8bb3-25434f4f9eaf\",\"name\":\"Find database page\",\"type\":\"n8n-nodes-base.notion\",\"position\":[660,660],\"parameters\":{\"options\":{},\"resource\":\"databasePage\",\"operation\":\"getAll\",\"returnAll\":true,\"databaseId\":\"e3503d88-accb-4ddb-aa45-f962cb03e729\",\"filterJson\":\"={{$node[\\\"Create custom Notion filters\\\"].json[\\\"notionfilter\\\"]}}\",\"filterType\":\"json\"},\"credentials\":{\"notionApi\":{\"id\":\"XNjSmr171NUO17TK\",\"name\":\"REPLACE ME\"}},\"typeVersion\":2},{\"id\":\"159db4ca-c8da-439a-aa44-63527c7b9dcd\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"position\":[860,660],\"parameters\":{\"rules\":{\"rules\":[{\"value2\":\"jira:issue_updated\"},{\"output\":1,\"value2\":\"jira:issue_deleted\"}]},\"value1\":\"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"webhookEvent\\\"]}}\",\"dataType\":\"string\"},\"typeVersion\":1},{\"id\":\"080fb157-e160-4bf0-9348-05eabee60f9f\",\"name\":\"IF\",\"type\":\"n8n-nodes-base.if\",\"position\":[240,560],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"webhookEvent\\\"]}}\",\"value2\":\"jira:issue_created\"}]}},\"typeVersion\":1},{\"id\":\"3ec2a130-251d-4d28-8dc3-ca31f528f90e\",\"name\":\"Delete issue\",\"type\":\"n8n-nodes-base.notion\",\"position\":[1080,760],\"parameters\":{\"pageId\":\"={{ $node[\\\"Find database page\\\"].json[\\\"id\\\"] }}\",\"operation\":\"archive\"},\"credentials\":{\"notionApi\":{\"id\":\"XNjSmr171NUO17TK\",\"name\":\"REPLACE ME\"}},\"typeVersion\":2},{\"id\":\"5a23919a-ee95-4935-b619-5eb0b486eef7\",\"name\":\"On issues created/updated/deleted\",\"type\":\"n8n-nodes-base.jiraTrigger\",\"position\":[-160,560],\"webhookId\":\"042e0fd3-9776-4c23-9f0d-dc032ef22744\",\"parameters\":{\"events\":[\"jira:issue_created\",\"jira:issue_deleted\",\"jira:issue_updated\"],\"additionalFields\":{}},\"credentials\":{\"jiraSoftwareCloudApi\":{\"id\":\"xZbqpSTMv8IjtS5Y\",\"name\":\"REPLACE ME\"}},\"typeVersion\":1},{\"id\":\"6d3bbfce-cbfc-4590-827b-4ec1eb5c11b6\",\"name\":\"Lookup table\",\"type\":\"n8n-nodes-base.code\",\"position\":[40,560],\"parameters\":{\"jsCode\":\"/* Lookup table for the statuses in Jira. You can find the status IDs by\\n   following the instructions provided at this link:\\n   https://community.atlassian.com/t5/Jira-Service-Management/How-do-I-get-a-list-of-statuses-that-show-the-associated-status/qaq-p/1803682\\n*/\\nvar lookup = {\\n    \\\"To Do\\\": \\\"To do\\\",\\n    \\\"In Progress\\\": \\\"In progress\\\",\\n    \\\"Done\\\": \\\"Done\\\"\\n};\\n\\n\\n\\nnew_items = [];\\n\\nfor (item of $items(\\\"On issues created/updated/deleted\\\")) {\\n  console.log(item.json[\\\"Status\\\"]);\\n  // instantiate a new variable for status\\n  var issue_status = item.json[\\\"issue\\\"][\\\"fields\\\"][\\\"status\\\"][\\\"name\\\"];\\n  // check if the status is in the lookup table\\n  if (issue_status in lookup) {\\n    // if it is, then add the status ID to the new_items array\\n    new_items.push({\\n      \\\"Status ID\\\": lookup[issue_status]\\n    });\\n  }\\n}\\n\\nreturn new_items;\"},\"typeVersion\":2},{\"id\":\"bdc966ce-16bf-47de-aba3-fcd0f912f95f\",\"name\":\"Create custom Notion filters\",\"type\":\"n8n-nodes-base.code\",\"position\":[460,660],\"parameters\":{\"jsCode\":\"const new_items = [];\\nfor (item of $items(\\\"On issues created/updated/deleted\\\")) {\\n\\n  // do not process this item if action is created\\n  if (item.json[\\\"webhookEvent\\\"] == \\\"jira:issue_created\\\") {\\n    continue;\\n  }\\n\\n  // build the output template\\n  var new_item = {\\n    \\\"json\\\": {\\n      \\\"notionfilter\\\": \\\"\\\"\\n    }\\n  };\\n  new_item = JSON.stringify(new_item);\\n  new_item = JSON.parse(new_item);\\n  new_items.push(new_item);\\n\\n  // create Notion filter to find specific database page by issue ID\\n  notionfilter = {\\n    or: [],\\n  }\\n\\n  const filter = {\\n    property: 'Issue ID',\\n    number: {\\n      equals: parseInt(item.json[\\\"issue\\\"][\\\"id\\\"])\\n    }\\n  }\\n  notionfilter[\\\"or\\\"].push(filter);\\n\\n  new_item.json.notionfilter = JSON.stringify(notionfilter); \\n}\\n\\nreturn new_items;\"},\"typeVersion\":2},{\"id\":\"f92157a9-1a63-4907-87c8-0b54c3b0ac8e\",\"name\":\"Update issue\",\"type\":\"n8n-nodes-base.notion\",\"position\":[1080,560],\"parameters\":{\"pageId\":\"={{ $node[\\\"Find database page\\\"].json[\\\"id\\\"] }}\",\"options\":{},\"resource\":\"databasePage\",\"operation\":\"update\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Title|title\",\"title\":\"={{$node[\\\"On issues created/updated/deleted\\\"].json[\\\"issue\\\"][\\\"fields\\\"][\\\"summary\\\"]}}\"},{\"key\":\"Status|select\",\"selectValue\":\"={{$node[\\\"Lookup table\\\"].json[\\\"Status ID\\\"]}}\"}]}},\"credentials\":{\"notionApi\":{\"id\":\"XNjSmr171NUO17TK\",\"name\":\"REPLACE ME\"}},\"typeVersion\":2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"490138aa-d92d-439a-b7bb-d6d00a9fab86\",\"connections\":{\"IF\":{\"main\":[[{\"node\":\"Create database page\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Create custom Notion filters\",\"type\":\"main\",\"index\":0}]]},\"Switch\":{\"main\":[[{\"node\":\"Update issue\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Delete issue\",\"type\":\"main\",\"index\":0}]]},\"Lookup table\":{\"main\":[[{\"node\":\"IF\",\"type\":\"main\",\"index\":0}]]},\"Find database page\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"Create custom Notion filters\":{\"main\":[[{\"node\":\"Find database page\",\"type\":\"main\",\"index\":0}]]},\"On issues created/updated/deleted\":{\"main\":[[{\"node\":\"Lookup table\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow creates/updates/deletes a Notion database page when an issue is created/updated/deleted in Jira. Subsequent updates to the issue's title or status in Jira are updated in the Notion database. If you require more fields to send to Notion, this template is easily extendible which will be described in [setup](notion://www.notion.so/n8n/a1b8c2bc7d2b4aa3b90d50fa80b766d1?v=a3106a73c9fc41b88630cc9f091cf063&p=34c3b4a9a1824323b8ee0b16a0c4cead&pm=s#setup). The Notion database will require [setup](notion://www.notion.so/n8n/a1b8c2bc7d2b4aa3b90d50fa80b766d1?v=a3106a73c9fc41b88630cc9f091cf063&p=34c3b4a9a1824323b8ee0b16a0c4cead&pm=s#setup) before the workflow can be used.\n\n## Prerequisites\n\n  * Notion account and [Notion credentials](https://docs.n8n.io/integrations/builtin/credentials/notion/).\n  * Jira account and [Jira credentials](https://docs.n8n.io/integrations/builtin/credentials/jira/).\n\n\n\n## How it works\n\n  1. When a new issue is created in Jira, the workflow creates a new page in the Notion database will all the required fields.\n  2. When the issue's title or status is updated in Jira, the workflow updates the specific Notion database page identified by the \"Issue Key\" field in Notion. If the status in Jira is set to \"Done\", the workflow will mark the Notion database page \"Done\" field as true.\n  3. When the issue is deleted in Jira, the workflow archives the Notion database page.\n\n\n\n## Setup\n\nThis workflow requires that you set up a Notion database. To do so, follow the steps below:\n\n  1. In Notion, create a new database.\n  2. Add the following columns to the database: \n     * Done (with type \"Checkbox\")\n     * Title (renamed from \"Name\")\n     * Status (with the following options: \"To Do\", \"In Progress\", \"Done\")\n     * Link (with type \"URL\")\n     * Issue ID (with type \"Number\")\n     * Issue Key (with type \"Text\")\n     * Add any other fields you require to the database.\n  3. Your database should look something like this\n\n\n\n![Screenshot 20221202 at 12.51.52.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2022_12_02_at_12_51_52_cb8a72be37.png)\n\n  1. Share the database to n8n.\n  2. By default, the workflow will fill all the fields provided above, except for any other additional fields you add.\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>This workflow creates/updates/deletes a Notion database page when an issue is created/updated/deleted in Jira. Subsequent updates to the issue's title or status in Jira are updated in the Notion database. If you require more fields to send to Notion, this template is easily extendible which will be described in <a href=\"notion://www.notion.so/n8n/a1b8c2bc7d2b4aa3b90d50fa80b766d1?v=a3106a73c9fc41b88630cc9f091cf063&amp;p=34c3b4a9a1824323b8ee0b16a0c4cead&amp;pm=s#setup\" rel=\"ugc nofollow\">setup</a>. The Notion database will require <a href=\"notion://www.notion.so/n8n/a1b8c2bc7d2b4aa3b90d50fa80b766d1?v=a3106a73c9fc41b88630cc9f091cf063&amp;p=34c3b4a9a1824323b8ee0b16a0c4cead&amp;pm=s#setup\" rel=\"ugc nofollow\">setup</a> before the workflow can be used.</p>\n<h2>Prerequisites</h2>\n<ul>\n<li>Notion account and <a href=\"https://docs.n8n.io/integrations/builtin/credentials/notion/\" rel=\"ugc nofollow\" target=\"_blank\">Notion credentials</a>.</li>\n<li>Jira account and <a href=\"https://docs.n8n.io/integrations/builtin/credentials/jira/\" rel=\"ugc nofollow\" target=\"_blank\">Jira credentials</a>.</li>\n</ul>\n<h2>How it works</h2>\n<ol>\n<li>When a new issue is created in Jira, the workflow creates a new page in the Notion database will all the required fields.</li>\n<li>When the issue's title or status is updated in Jira, the workflow updates the specific Notion database page identified by the \"Issue Key\" field in Notion. If the status in Jira is set to \"Done\", the workflow will mark the Notion database page \"Done\" field as true.</li>\n<li>When the issue is deleted in Jira, the workflow archives the Notion database page.</li>\n</ol>\n<h2>Setup</h2>\n<p>This workflow requires that you set up a Notion database. To do so, follow the steps below:</p>\n<ol>\n<li>In Notion, create a new database.</li>\n<li>Add the following columns to the database:\n<ul>\n<li>Done (with type \"Checkbox\")</li>\n<li>Title (renamed from \"Name\")</li>\n<li>Status (with the following options: \"To Do\", \"In Progress\", \"Done\")</li>\n<li>Link (with type \"URL\")</li>\n<li>Issue ID (with type \"Number\")</li>\n<li>Issue Key (with type \"Text\")</li>\n<li>Add any other fields you require to the database.</li>\n</ul>\n</li>\n<li>Your database should look something like this</li>\n</ol>\n<p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2022_12_02_at_12_51_52_cb8a72be37.png\" alt=\"Screenshot 20221202 at 12.51.52.png\"></p>\n<ol>\n<li>Share the database to n8n.</li>\n<li>By default, the workflow will fill all the fields provided above, except for any other additional fields you add.</li>\n</ol>\n</div><!--]-->"
}