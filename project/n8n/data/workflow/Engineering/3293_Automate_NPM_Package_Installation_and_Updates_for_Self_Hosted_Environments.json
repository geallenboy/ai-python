{
  "title": "Automate NPM Package Installation and Updates for Self-Hosted Environments",
  "url": "https://n8n.io/workflows/3293-automate-npm-package-installation-and-updates-for-self-hosted-environments/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/?count=20",
  "author": "Joachim Brindeau",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"2039b9ae6bdd2cfe7f6a132b7dee66390e92afbc2ec29f67cafa1edf6cad8d55\"},\"nodes\":[{\"id\":\"cc07b2ca-27f2-4a0e-92f7-2d0fbc63ab04\",\"name\":\"libraries_set\",\"type\":\"n8n-nodes-base.set\",\"position\":[-520,260],\"parameters\":{\"options\":{\"ignoreConversionErrors\":false},\"assignments\":{\"assignments\":[{\"id\":\"ab1fe8b7-6706-4f59-bc39-1f80726d2890\",\"name\":\"libraries\",\"type\":\"string\",\"value\":\"axios,cheerio,node-fetch\"}]}},\"typeVersion\":3.4},{\"id\":\"f5f22c1a-704b-47db-9f5e-88feb4db75b8\",\"name\":\"trigger_manual\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-720,260],\"parameters\":{},\"typeVersion\":1},{\"id\":\"85f6ad54-a991-407e-b018-fedaa7fb3a4d\",\"name\":\"libraries_array\",\"type\":\"n8n-nodes-base.set\",\"position\":[-300,260],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"6fb15a6a-7cda-4080-a255-10f85d188854\",\"name\":\"libraries\",\"type\":\"array\",\"value\":\"={{ $json.libraries.split(\\\",\\\") }}\"}]}},\"typeVersion\":3.4},{\"id\":\"19caae56-6cb0-4f90-a4e9-533712a09d14\",\"name\":\"libraries_split\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[-100,260],\"parameters\":{\"options\":{\"destinationFieldName\":\"library\"},\"fieldToSplitOut\":\"libraries\"},\"typeVersion\":1},{\"id\":\"fe06a42d-21a1-474a-8442-d703f1664c68\",\"name\":\"library_install\",\"type\":\"n8n-nodes-base.executeCommand\",\"position\":[120,260],\"parameters\":{\"command\":\"=#!/bin/bash\\n\\n# Get library name from variable\\nLIBRARY_NAME=\\\"{{$json.library}}\\\"\\n\\n# Check if library directory exists\\nLIBRARY_DIR=\\\"/home/node/node_modules/$LIBRARY_NAME\\\"\\n\\n# Check if library is already installed\\nif [ ! -d \\\"$LIBRARY_DIR\\\" ]; then\\n  echo \\\"Installing $LIBRARY_NAME...\\\"\\n  npm install \\\"$LIBRARY_NAME\\\"\\n  \\n  # Verify installation\\n  if [ -d \\\"$LIBRARY_DIR\\\" ]; then\\n    echo \\\"$LIBRARY_NAME was successfully installed.\\\"\\n  else\\n    echo \\\"Failed to install $LIBRARY_NAME. Please check for errors.\\\"\\n    exit 1\\n  fi\\nelse\\n  echo \\\"$LIBRARY_NAME is already installed at $LIBRARY_DIR.\\\"\\nfi\\n\",\"executeOnce\":false},\"typeVersion\":1},{\"id\":\"8b31c25c-0076-4c71-ae70-80c73d1b8220\",\"name\":\"trigger_schedule\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-720,100],\"parameters\":{\"rule\":{\"interval\":[{}]}},\"typeVersion\":1.2},{\"id\":\"a4a07417-00ce-478e-bcf7-3cc9dd0a75fa\",\"name\":\"trigger_instance\",\"type\":\"n8n-nodes-base.n8nTrigger\",\"position\":[-720,440],\"parameters\":{\"events\":[\"init\"]},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"libraries_set\":{\"main\":[[{\"node\":\"libraries_array\",\"type\":\"main\",\"index\":0}]]},\"trigger_manual\":{\"main\":[[{\"node\":\"libraries_set\",\"type\":\"main\",\"index\":0}]]},\"libraries_array\":{\"main\":[[{\"node\":\"libraries_split\",\"type\":\"main\",\"index\":0}]]},\"libraries_split\":{\"main\":[[{\"node\":\"library_install\",\"type\":\"main\",\"index\":0}]]},\"trigger_instance\":{\"main\":[[{\"node\":\"libraries_set\",\"type\":\"main\",\"index\":0}]]},\"trigger_schedule\":{\"main\":[[{\"node\":\"libraries_set\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "_Are you looking to install external libraries for your self-hosted N8N instance? This automated workflow makes adding npm packages to your N8N environment quick and effortless._\n\n![image.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_148526eca3.png)\n\n**Beware, this workflow only works on self-hosted instances.**\n\n## What This Workflow Does\n\nThis solution automatically installs npm packages like axios, cheerio, or node-fetch in your self-hosted N8N Docker container, making them immediately available in Code nodes.\n\n### Key features\n\n✅ **Automated Installation:** No manual npm commands needed  \n✅ **Daily Updates:** Scheduled trigger keeps packages current  \n✅ **Smart Installation:** Only installs missing packages  \n✅ **Multiple Triggers:** Manual, scheduled, and on startup of the N8N instance so you can upgrade your N8N version without worrying about external libraries.\n\n## How to install and update external libraries automatically\n\n### Step 1: Setting Up Your Environment Variables\n\nBefore using external libraries in N8N Code nodes, configure these environment variables in your Docker comppose file.\n\n#### Option A to allow specific external npm packages in N8N Code nodes\n    \n    \n    NODE_FUNCTION_ALLOW_EXTERNAL=axios,cheerio,node-fetch\n    \n\n#### Option B to allow all external npm packages in Code nodes\n    \n    \n    NODE_FUNCTION_ALLOW_EXTERNAL=*\n    \n\n### Step 2: Import the external packages workflow\n\nImport the workflow into your N8N instance by copy pasting all nodes.\n\n### Step 3: Input the list of external libraries you need\n\nEdit the libraries_set node  \nChange the comma-separated list (e.g., axios,cheerio,node-fetch).\n\n**If you chose Option A above** , update your NODE_FUNCTION_ALLOW_EXTERNAL variable with the same packages\n\n### Step 4: Start the workflow!\n\nRun the workflow manually or let it trigger automatically\n\n## Why use this to install NPM packages in N8N?\n\nManaging external packages manually in N8N can be time-consuming. This workflow automates the entire process, making sure your libraries are always installed and up-to-date.\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p><em>Are you looking to install external libraries for your self-hosted N8N instance? This automated workflow makes adding npm packages to your N8N environment quick and effortless.</em></p>\n<p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_148526eca3.png\" alt=\"image.png\"></p>\n<p><strong>Beware, this workflow only works on self-hosted instances.</strong></p>\n<h2>What This Workflow Does</h2>\n<p>This solution automatically installs npm packages like axios, cheerio, or node-fetch in your self-hosted N8N Docker container, making them immediately available in Code nodes.</p>\n<h3>Key features</h3>\n<p>✅ <strong>Automated Installation:</strong> No manual npm commands needed<br>\n✅ <strong>Daily Updates:</strong> Scheduled trigger keeps packages current<br>\n✅ <strong>Smart Installation:</strong> Only installs missing packages<br>\n✅ <strong>Multiple Triggers:</strong> Manual, scheduled, and on startup of the N8N instance so you can upgrade your N8N version without worrying about external libraries.</p>\n<h2>How to install and update external libraries automatically</h2>\n<h3>Step 1: Setting Up Your Environment Variables</h3>\n<p>Before using external libraries in N8N Code nodes, configure these environment variables in your Docker comppose file.</p>\n<h4>Option A to allow specific external npm packages in N8N Code nodes</h4>\n<pre><code>NODE_FUNCTION_ALLOW_EXTERNAL=axios,cheerio,node-fetch\n</code></pre>\n<h4>Option B to allow all external npm packages in Code nodes</h4>\n<pre><code>NODE_FUNCTION_ALLOW_EXTERNAL=*\n</code></pre>\n<h3>Step 2: Import the external packages workflow</h3>\n<p>Import the workflow into your N8N instance by copy pasting all nodes.</p>\n<h3>Step 3: Input the list of external libraries you need</h3>\n<p>Edit the libraries_set node<br>\nChange the comma-separated list (e.g., axios,cheerio,node-fetch).</p>\n<p><strong>If you chose Option A above</strong>, update your NODE_FUNCTION_ALLOW_EXTERNAL variable with the same packages</p>\n<h3>Step 4: Start the workflow!</h3>\n<p>Run the workflow manually or let it trigger automatically</p>\n<h2>Why use this to install NPM packages in N8N?</h2>\n<p>Managing external packages manually in N8N can be time-consuming. This workflow automates the entire process, making sure your libraries are always installed and up-to-date.</p>\n</div><!--]-->",
  "readme_zh": "_想为自托管的N8N实例安装外部库吗？这个自动化工作流能让您快速轻松地将npm包添加到N8N环境中。_\n\n![image.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_148526eca3.png)\n\n**注意：此工作流仅适用于自托管实例。**\n\n## 功能说明\n\n该方案能自动在自托管的N8N Docker容器中安装axios、cheerio或node-fetch等npm包，使这些库可立即在代码节点中使用。\n\n### 核心优势\n\n✅ **自动安装**：无需手动输入npm命令  \n✅ **每日更新**：定时触发器保持包版本最新  \n✅ **智能安装**：仅安装缺失的包  \n✅ **多重触发**：支持手动触发、定时触发及实例启动时触发，升级N8N版本时无需担心外部库丢失  \n\n## 自动安装/更新外部库指南\n\n### 步骤1：配置环境变量\n\n在N8N代码节点使用外部库前，需在Docker compose文件中设置以下变量：\n\n#### 方案A：仅允许特定npm包\n    \n    \n    NODE_FUNCTION_ALLOW_EXTERNAL=axios,cheerio,node-fetch\n    \n\n#### 方案B：允许所有npm包\n    \n    \n    NODE_FUNCTION_ALLOW_EXTERNAL=*\n    \n\n### 步骤2：导入外部包工作流\n\n复制所有节点，将工作流导入您的N8N实例。\n\n### 步骤3：输入所需外部库列表\n\n编辑libraries_set节点  \n修改逗号分隔的包列表（例如axios,cheerio,node-fetch）\n\n**若选择方案A**，需确保NODE_FUNCTION_ALLOW_EXTERNAL变量包含相同包名\n\n### 步骤4：启动工作流！\n\n手动运行或等待自动触发\n\n## 为什么选择这个方案？\n\n手动管理N8N外部包耗时费力。本工作流实现全自动化，确保您的依赖库始终可用且保持最新。",
  "title_zh": "自托管环境下的NPM包自动化安装与更新",
  "publish_date_zh": "上次更新于一个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"2039b9ae6bdd2cfe7f6a132b7dee66390e92afbc2ec29f67cafa1edf6cad8d55\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"cc07b2ca-27f2-4a0e-92f7-2d0fbc63ab04\",\n      \"name\": \"libraries_set\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -520,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"ignoreConversionErrors\": false\n        },\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ab1fe8b7-6706-4f59-bc39-1f80726d2890\",\n              \"name\": \"libraries\",\n              \"type\": \"string\",\n              \"value\": \"axios,cheerio,node-fetch\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"f5f22c1a-704b-47db-9f5e-88feb4db75b8\",\n      \"name\": \"trigger_manual\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -720,\n        260\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"85f6ad54-a991-407e-b018-fedaa7fb3a4d\",\n      \"name\": \"libraries_array\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -300,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6fb15a6a-7cda-4080-a255-10f85d188854\",\n              \"name\": \"libraries\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.libraries.split(\\\",\\\") }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"19caae56-6cb0-4f90-a4e9-533712a09d14\",\n      \"name\": \"libraries_split\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -100,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"destinationFieldName\": \"library\"\n        },\n        \"fieldToSplitOut\": \"libraries\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fe06a42d-21a1-474a-8442-d703f1664c68\",\n      \"name\": \"library_install\",\n      \"type\": \"n8n-nodes-base.executeCommand\",\n      \"position\": [\n        120,\n        260\n      ],\n      \"parameters\": {\n        \"command\": \"=#!/bin/bash\\n\\n# Get library name from variable\\nLIBRARY_NAME=\\\"{{$json.library}}\\\"\\n\\n# Check if library directory exists\\nLIBRARY_DIR=\\\"/home/node/node_modules/$LIBRARY_NAME\\\"\\n\\n# Check if library is already installed\\nif [ ! -d \\\"$LIBRARY_DIR\\\" ]; then\\n  echo \\\"Installing $LIBRARY_NAME...\\\"\\n  npm install \\\"$LIBRARY_NAME\\\"\\n  \\n  # Verify installation\\n  if [ -d \\\"$LIBRARY_DIR\\\" ]; then\\n    echo \\\"$LIBRARY_NAME was successfully installed.\\\"\\n  else\\n    echo \\\"Failed to install $LIBRARY_NAME. Please check for errors.\\\"\\n    exit 1\\n  fi\\nelse\\n  echo \\\"$LIBRARY_NAME is already installed at $LIBRARY_DIR.\\\"\\nfi\\n\",\n        \"executeOnce\": false\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8b31c25c-0076-4c71-ae70-80c73d1b8220\",\n      \"name\": \"trigger_schedule\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -720,\n        100\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {}\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a4a07417-00ce-478e-bcf7-3cc9dd0a75fa\",\n      \"name\": \"trigger_instance\",\n      \"type\": \"n8n-nodes-base.n8nTrigger\",\n      \"position\": [\n        -720,\n        440\n      ],\n      \"parameters\": {\n        \"events\": [\n          \"init\"\n        ]\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"libraries_set\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"libraries_array\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"trigger_manual\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"libraries_set\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"libraries_array\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"libraries_split\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"libraries_split\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"library_install\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"trigger_instance\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"libraries_set\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"trigger_schedule\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"libraries_set\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}