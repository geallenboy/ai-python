{
  "title": "未知标题",
  "url": "https://n8n.io/workflows/4211-iot-device-control-with-mqtt-and-webhook/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/?sort=createdAt:desc",
  "author": "Tony Duffy",
  "publish_date": "Last update 15 hours ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"01UHgh673YDyv5xN\",\"meta\":{\"instanceId\":\"7221598654c32899e94731aab144bdcd338735c2ac218dc0873131caa0be0ef8\",\"templateCredsSetupCompleted\":true},\"name\":\"IOT control via MQTT and webhook\",\"tags\":[],\"nodes\":[{\"id\":\"3d3b2e80-4e4e-43ec-b2fd-7000e7307915\",\"name\":\"MQTT Publish Topic Node\",\"type\":\"n8n-nodes-base.mqtt\",\"position\":[680,-20],\"parameters\":{\"topic\":\"pin-control\",\"message\":\"={{ $json.pin }}\",\"options\":{},\"sendInputData\":false},\"credentials\":{\"mqtt\":{\"id\":\"xtd75tjk1hKlQOba\",\"name\":\"MQTT account\"}},\"typeVersion\":1},{\"id\":\"f4444f19-424a-487b-8d7c-3c609a55b913\",\"name\":\"Set data for MQTT message payload\",\"type\":\"n8n-nodes-base.set\",\"position\":[360,-20],\"parameters\":{\"values\":{\"string\":[{\"name\":\"pin\",\"value\":\"={{ $json.query.value }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"id\":\"3ed996b8-419f-458a-a717-b35e1a52a851\",\"name\":\"IOT control Webhook \",\"type\":\"n8n-nodes-base.webhook\",\"position\":[20,-20],\"webhookId\":\"69036479-fe77-40e1-a700-8a2e2602e0c8\",\"parameters\":{\"path\":\"pin-control\",\"options\":{}},\"typeVersion\":1},{\"id\":\"40fa6c2a-c515-412b-93df-eceb993c38c9\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-60,-160],\"parameters\":{\"height\":120,\"content\":\"When the \\\"on\\\" or \\\"off\\\" button is clicked on the IOT control webpage the webhook gets the selected value and triggers the workflow \"},\"typeVersion\":1},{\"id\":\"159f8c6e-285a-443a-bd9d-ae3456b9a6a8\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[300,-140],\"parameters\":{\"height\":80,\"content\":\"The set node prepares the receive data as a message payload for the MQTT topic\"},\"typeVersion\":1},{\"id\":\"250140e6-f46c-42c2-b79a-537ec4975b97\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[620,-160],\"parameters\":{\"height\":100,\"content\":\"Publishes MQTT topic \\\"pin-control\\\" with the payload data to control the GPIO on the ESP32 microcontroller\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"f5d124a9-c6e1-44f5-b088-cafb8e5bd602\",\"connections\":{\"IOT control Webhook \":{\"main\":[[{\"node\":\"Set data for MQTT message payload\",\"type\":\"main\",\"index\":0}]]},\"Set data for MQTT message payload\":{\"main\":[[{\"node\":\"MQTT Publish Topic Node\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": ".\n\n# IOT device control with MQTT and webhook\n\nThis workflow is for users wanting a practical example of how to control IOT systems using the MQTT protocol in an an n8n environment.\n\nThe template provides typical n8n MQTT and Webhook node implementation and configuration settings necessary to set IOT device inputs and outputs.\n\n## How it works\n\nA webpage with IOT control 'on and 'off' buttons is presented to the user. When a button is selected on the webpage the value is sent via a webhook to trigger the active workflow. The workflow set node then prepares the received value into a message payload. It then passes the message to the MQTT node for publishing the topic with the payload to a cloud based MQTT broker. A remote ESP32 micro-controller subscribes to the broker and reads the payload contained in the topic. The ESP32 will then toggle the GPIO pin depending on the topic payload value.\n\n## The IOT control webpage\n\nThe webpage is a simple HTML page containing the clickable 'on' and 'off' buttons. It also has the get webhook URL that sends the selected value to the n8n workflow in this case running locally.\n\nThe URL webhook format is <http://localhost:5678/webhook/pin-control?value=action>\n\nThe webpage code\n\n[IOT-control.html](https://drive.google.com/file/d/139Upql7RrXWgi6xljLPGbT0MbRP6nEkx/view?usp=sharing)\n\n## IOT device\n\nThe IOT device is an [ESP32](https://drive.google.com/file/d/1Wt7UPJ32BTm45JvkMW61rN6o7X6ZVGxX/view?usp=sharing) micro-controller running on a remote network. To keep it simple GPIO2 is selected as the control output. In this case when the received value is \"on\" GPIO2 goes high a led will turn on in the ESP32. It will go off when the received value is \"off\".\n\nThe program for the ESP32 IOT control is '[main.py](http://main.py)' . You will require a micropython interpreter to be uploaded to the ESP32 for the program to run automatically. The code can be easily edited and modified to accommodate any further attached IOT devices.\n\nThe ESP32 [main.py](http://main.py) code\n\n[main.py](https://drive.google.com/file/d/1xlSvmKp6FJI3rtzxzLwolwFQpLHd2LTv/view?usp=sharing)\n\n## How to customise this workflow to your needs\n\nESP32\n\n  * You will need a working ESP32 installed with a micro-python interpreter.\n  * The code [main.py](http://main.py) is provided.\n  * The [main.py](http://main.py) program can loaded and edited with a python IDE. I used Thonny for this example.\n  * Use a free MQTT broker to get started. I used \"[broker.emqx.io](http://broker.emqx.io)\" in the code.\n\n\n\nIOT Control Webpage\n\n  * The webpage contains HTML and can be easily edit to enhance functionality. The embedded webhook is configured for n8n production mode. <http://localhost:5678/webhook/pin-control?value=action>\n  * If you want to run the page in test mode you will use the following URL.\n  * <http://localhost:5678/webhook-test/pin-control?value=action>\n\n\n\nn8n workflow.\n\n  * The workflow is a good demonstration of how to control IOT devices using n8n.\n  * Following these steps will give a good insight for microcontroller automation.\n\n\n",
  "readme_html": "<!--[--><div data-v-d87c7c02=\"\"><p>.</p>\n<h1>IOT device control with MQTT and webhook</h1>\n<p>This workflow is for users wanting a practical example of how to control IOT systems using the MQTT protocol in an an n8n environment.</p>\n<p>The template provides typical n8n MQTT and Webhook node implementation and configuration settings necessary to set IOT device inputs and outputs.</p>\n<h2>How it works</h2>\n<p>A webpage with IOT control 'on and 'off' buttons is presented to the user. When a button is selected on the webpage the value is sent via a webhook to trigger the active workflow. The workflow set node then prepares the received value into a message payload. It then passes the message to the MQTT node for publishing the topic with the payload to a cloud based MQTT broker. A remote ESP32 micro-controller subscribes to the broker and reads the payload contained in the topic. The ESP32 will then toggle the GPIO pin depending on the topic payload value.</p>\n<h2>The IOT control webpage</h2>\n<p>The webpage is a simple HTML page containing the  clickable 'on' and 'off' buttons. It also has the get webhook URL that sends the selected value to the n8n workflow in this case running locally.</p>\n<p>The URL webhook format is <a href=\"http://localhost:5678/webhook/pin-control?value=action\" rel=\"ugc nofollow\" target=\"_blank\">http://localhost:5678/webhook/pin-control?value=action</a></p>\n<p>The webpage code</p>\n<p><a href=\"https://drive.google.com/file/d/139Upql7RrXWgi6xljLPGbT0MbRP6nEkx/view?usp=sharing\" rel=\"ugc nofollow\" target=\"_blank\">IOT-control.html</a></p>\n<h2>IOT device</h2>\n<p>The IOT device is an <a href=\"https://drive.google.com/file/d/1Wt7UPJ32BTm45JvkMW61rN6o7X6ZVGxX/view?usp=sharing\" rel=\"ugc nofollow\" target=\"_blank\">ESP32</a> micro-controller running on a remote network. To keep it simple GPIO2 is selected as the control output.  In this case when the received value is \"on\" GPIO2 goes high a led will turn on in the ESP32. It will go off when the received value is \"off\".</p>\n<p>The program for the ESP32 IOT control is '<a href=\"http://main.py\" rel=\"ugc nofollow\" target=\"_blank\">main.py</a>' . You will require a micropython interpreter to be uploaded to the ESP32 for the program to run automatically. The code can be easily edited and modified to accommodate any further attached IOT devices.</p>\n<p>The ESP32 <a href=\"http://main.py\" rel=\"ugc nofollow\" target=\"_blank\">main.py</a> code</p>\n<p><a href=\"https://drive.google.com/file/d/1xlSvmKp6FJI3rtzxzLwolwFQpLHd2LTv/view?usp=sharing\" rel=\"ugc nofollow\" target=\"_blank\">main.py</a></p>\n<h2>How to customise this workflow to your needs</h2>\n<p>ESP32</p>\n<ul>\n<li>You will need a working ESP32 installed with a micro-python interpreter.</li>\n<li>The code <a href=\"http://main.py\" rel=\"ugc nofollow\" target=\"_blank\">main.py</a> is provided.</li>\n<li>The <a href=\"http://main.py\" rel=\"ugc nofollow\" target=\"_blank\">main.py</a> program can loaded and edited with a python IDE. I used Thonny for this example.</li>\n<li>Use a free MQTT broker to get started. I used \"<a href=\"http://broker.emqx.io\" rel=\"ugc nofollow\" target=\"_blank\">broker.emqx.io</a>\" in the code.</li>\n</ul>\n<p>IOT Control Webpage</p>\n<ul>\n<li>The webpage contains HTML and can be easily edit to enhance functionality. The embedded webhook is configured for n8n production mode. <a href=\"http://localhost:5678/webhook/pin-control?value=action\" rel=\"ugc nofollow\" target=\"_blank\">http://localhost:5678/webhook/pin-control?value=action</a></li>\n<li>If you want to run the page in test mode you will use the following URL.</li>\n<li><a href=\"http://localhost:5678/webhook-test/pin-control?value=action\" rel=\"ugc nofollow\" target=\"_blank\">http://localhost:5678/webhook-test/pin-control?value=action</a></li>\n</ul>\n<p>n8n workflow.</p>\n<ul>\n<li>The workflow is a good demonstration of how to control IOT devices using n8n.</li>\n<li>Following these steps will give a good insight for microcontroller automation.</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "# 使用MQTT和Webhook控制物联网设备\n\n本工作流程为希望在n8n环境中通过MQTT协议控制物联网系统的用户提供了一个实用范例。\n\n该模板提供了典型的n8n MQTT节点和Webhook节点实现方案，以及设置物联网设备输入输出所需的配置参数。\n\n## 工作原理\n\n用户访问带有\"开\"/\"关\"控制按钮的网页界面。当点击网页按钮时，对应数值会通过webhook触发n8n工作流。工作流中的set节点将接收值转换为消息载荷，随后通过MQTT节点将携带该载荷的主题发布至云端MQTT代理服务器。远程ESP32微控制器订阅该代理服务，读取主题中的载荷内容，并根据载荷值切换对应GPIO引脚状态。\n\n## 物联网控制网页\n\n这个HTML网页包含可点击的\"开\"和\"关\"按钮，并配置了向本地运行的n8n工作流发送数据的webhook链接。\n\nWebhook URL格式为：\n<http://localhost:5678/webhook/pin-control?value=操作指令>\n\n网页代码文件：\n[IOT-control.html](https://drive.google.com/file/d/139Upql7RrXWgi6xljLPGbT0MbRP6nEkx/view?usp=sharing)\n\n## 物联网设备\n\n设备采用远程网络中的[ESP32微控制器](https://drive.google.com/file/d/1Wt7UPJ32BTm45JvkMW61rN6o7X6ZVGxX/view?usp=sharing)。为简化演示，选择GPIO2作为控制输出端：当接收值为\"on\"时GPIO2高电平触发LED亮起，\"off\"时熄灭。\n\nESP32控制程序为[main.py](http://main.py)，需先为ESP32烧录MicroPython解释器才能自动运行。该代码可轻松修改以适应其他物联网设备。\n\nESP32程序代码：\n[main.py](https://drive.google.com/file/d/1xlSvmKp6FJI3rtzxzLwolwFQpLHd2LTv/view?usp=sharing)\n\n## 自定义设置指南\n\nESP32配置：\n* 需准备已安装MicroPython解释器的ESP32开发板\n* 提供[main.py](http://main.py)基础程序\n* 可使用Python IDE（示例使用Thonny）编辑程序\n* 建议使用免费MQTT代理服务（示例代码采用\"broker.emqx.io\"）\n\n控制网页调整：\n* 网页采用标准HTML，可自由扩展功能\n* 内置webhook默认配置为n8n生产模式：<http://localhost:5678/webhook/pin-control?value=操作指令>\n* 测试模式需改用：<http://localhost:5678/webhook-test/pin-control?value=操作指令>\n\nn8n工作流：\n* 本工作流清晰演示了n8n控制物联网设备的实现方式\n* 按照流程操作可深入理解微控制器自动化控制原理",
  "title_zh": "标题未知",
  "publish_date_zh": "最后更新于15小时前",
  "workflow_json_zh": "{\"id\":\"01UHgh673YDyv5xN\",\"meta\":{\"instanceId\":\"7221598654c32899e94731aab144bdcd338735c2ac218dc0873131caa0be0ef8\",\"templateCredsSetupCompleted\":true},\"name\":\"IOT control via MQTT and webhook\",\"tags\":[],\"nodes\":[{\"id\":\"3d3b2e80-4e4e-43ec-b2fd-7000e7307915\",\"name\":\"MQTT Publish Topic Node\",\"type\":\"n8n-nodes-base.mqtt\",\"position\":[680,-20],\"parameters\":{\"topic\":\"pin-control\",\"message\":\"={{ $json.pin }}\",\"options\":{},\"sendInputData\":false},\"credentials\":{\"mqtt\":{\"id\":\"xtd75tjk1hKlQOba\",\"name\":\"MQTT account\"}},\"typeVersion\":1},{\"id\":\"f4444f19-424a-487b-8d7c-3c609a55b913\",\"name\":\"Set data for MQTT message payload\",\"type\":\"n8n-nodes-base.set\",\"position\":[360,-20],\"parameters\":{\"values\":{\"string\":[{\"name\":\"pin\",\"value\":\"={{ $json.query.value }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"id\":\"3ed996b8-419f-458a-a717-b35e1a52a851\",\"name\":\"IOT control Webhook \",\"type\":\"n8n-nodes-base.webhook\",\"position\":[20,-20],\"webhookId\":\"69036479-fe77-40e1-a700-8a2e2602e0c8\",\"parameters\":{\"path\":\"pin-control\",\"options\":{}},\"typeVersion\":1},{\"id\":\"40fa6c2a-c515-412b-93df-eceb993c38c9\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-60,-160],\"parameters\":{\"height\":120,\"content\":\"在物联网控制网页上点击“开”或“关”按钮时，网络钩子会获取所选值并触发工作流程。\"},\"typeVersion\":1},{\"id\":\"159f8c6e-285a-443a-bd9d-ae3456b9a6a8\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[300,-140],\"parameters\":{\"height\":80,\"content\":\"集合节点将接收到的数据准备为MQTT主题的消息负载。\"},\"typeVersion\":1},{\"id\":\"250140e6-f46c-42c2-b79a-537ec4975b97\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[620,-160],\"parameters\":{\"height\":100,\"content\":\"发布MQTT主题“pin-control”，附带有效载荷数据以控制ESP32微控制器上的GPIO。\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"f5d124a9-c6e1-44f5-b088-cafb8e5bd602\",\"connections\":{\"IOT control Webhook \":{\"main\":[[{\"node\":\"Set data for MQTT message payload\",\"type\":\"main\",\"index\":0}]]},\"Set data for MQTT message payload\":{\"main\":[[{\"node\":\"MQTT Publish Topic Node\",\"type\":\"main\",\"index\":0}]]}}}"
}