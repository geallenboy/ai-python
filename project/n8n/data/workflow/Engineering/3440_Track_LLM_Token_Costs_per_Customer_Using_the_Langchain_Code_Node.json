{
  "title": "Track LLM Token Costs per Customer Using the Langchain Code Node",
  "url": "https://n8n.io/workflows/3440-track-llm-token-costs-per-customer-using-the-langchain-code-node/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/?sort=createdAt:desc",
  "author": "Jimleuk",
  "publish_date": "Last update 8 days ago",
  "publish_date_absolute": "2025-05-14",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"8884df86-b7cd-4cf7-8b71-fd21113bfc0f\",\"name\":\"Client Usage Log\",\"type\":\"n8n-nodes-base.googleSheetsTool\",\"position\":[420,500],\"parameters\":{\"columns\":{\"value\":{},\"schema\":[{\"id\":\"date\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"date\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"workflow_id\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"workflow_id\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"execution_id\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"execution_id\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"client_id\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"client_id\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"client_name\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"client_name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"input_tokens\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"input_tokens\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"output_tokens\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"output_tokens\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"total_tokens\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"total_tokens\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"input_cost\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"input_cost\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"output_cost\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"output_cost\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"total_cost\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"total_cost\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"autoMapInputData\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=drivesdk\",\"cachedResultName\":\"89. Langchain Code Node - Client Usage Log\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"XHvC7jIRR8A2TlUl\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"1e4aca76-8b79-4780-b0c5-2cd92a41aa0e\",\"name\":\"Logging Attributes\",\"type\":\"n8n-nodes-base.set\",\"position\":[-360,-120],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"22164635-7a23-47e2-9868-96899cd9d317\",\"name\":\"workflow_id\",\"type\":\"string\",\"value\":\"={{ $workflow.id }}\"},{\"id\":\"ed1cb653-b3fd-40bf-b00b-10d777f098af\",\"name\":\"execution_id\",\"type\":\"string\",\"value\":\"={{ $execution.id }}\"},{\"id\":\"3de228a1-79b9-4805-8d92-917f691411be\",\"name\":\"client_id\",\"type\":\"string\",\"value\":\"=12345\"}]},\"includeOtherFields\":true},\"typeVersion\":3.4},{\"id\":\"d7f37c54-5d96-47ba-b82e-0926a08137df\",\"name\":\"On form submission\",\"type\":\"n8n-nodes-base.formTrigger\",\"position\":[-920,-120],\"webhookId\":\"9da21424-e23b-43b8-a6ec-a6daa129c326\",\"parameters\":{\"options\":{},\"formTitle\":\"CV Parsing Service\",\"formFields\":{\"values\":[{\"fieldType\":\"file\",\"fieldLabel\":\"Upload a file\",\"requiredField\":true,\"acceptFileTypes\":\".pdf\"},{\"fieldType\":\"dropdown\",\"fieldLabel\":\"Acknowledgement\",\"multiselect\":true,\"fieldOptions\":{\"values\":[{\"option\":\"I acknowledge the use of this service will be added to my bill.\"}]},\"requiredField\":true}]},\"responseMode\":\"lastNode\",\"formDescription\":\"Use this form to upload CVs and we'll extract the data from them. This workflow tracks usage metrics so we can calculate the bill later on.\"},\"typeVersion\":2.2},{\"id\":\"06da0c8e-2035-45ae-a301-50021650a5f8\",\"name\":\"Custom LLM Subnode\",\"type\":\"@n8n/n8n-nodes-langchain.code\",\"position\":[260,340],\"parameters\":{\"code\":{\"supplyData\":{\"code\":\"const { ChatOpenAI } = require(\\\"@langchain/openai\\\");\\n\\n// 1. Configure as required.\\n// - costs are per million tokens and depends on the model.\\nconst openAIApiKey = \\\"sk-...\\\";\\nconst model = \\\"gpt-4o-mini\\\";\\nconst input_token_cost = 0.150;\\nconst output_token_cost = 0.600;\\n\\n// 2. do not edit below this line --\\nconst tools = await this.getInputConnectionData('ai_tool', 0);\\nconst googleSheetTool = tools[0];\\n\\nconst {\\n  workflow_id,\\n  execution_id,\\n  client_id } = $input.first().json;\\n\\nconst llm = new ChatOpenAI({\\n  apiKey: openAIApiKey,\\n  model,\\n  callbacks: [\\n    {\\n      handleLLMEnd: async function(output,runId,parentId) {\\n        const generation = output.generations[0][0];\\n        const message = generation.message;\\n        const row = {\\n          date: (new Date()).toGMTString(),\\n          workflow_id,\\n          execution_id,\\n          client_id,\\n          input_tokens: message.usage_metadata.input_tokens,\\n          output_tokens: message.usage_metadata.output_tokens,\\n          total_tokens: message.usage_metadata.total_tokens,\\n          input_cost: (message.usage_metadata.input_tokens / 1_000_000) * input_token_cost,\\n          output_cost: (message.usage_metadata.output_tokens / 1_000_000) * output_token_cost,\\n        };\\n        row.total_cost = row.input_cost + row.output_cost;\\n        await googleSheetTool.func(row);\\n      }\\n    }\\n  ]\\n});\\n\\nreturn llm;\"}},\"inputs\":{\"input\":[{\"type\":\"ai_tool\",\"required\":true}]},\"outputs\":{\"output\":[{\"type\":\"ai_languageModel\"}]}},\"typeVersion\":1},{\"id\":\"35993bd5-b521-4239-bf23-aed47d339f54\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[360,480],\"parameters\":{\"width\":200,\"height\":280,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### Update Workbook\\nThis is the workbook which will track the token usage and costs.\"},\"typeVersion\":1},{\"id\":\"623ca94d-a215-416b-a9fe-62a1f96317e3\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1040,-280],\"parameters\":{\"color\":7,\"width\":560,\"height\":380,\"content\":\"## 1. Offer AI Service to Clients\\nHere, we'll using an n8n form to offer a document extraction service for Resume/CV PDFs. The user simply uploads a PDF and we return it in JSON format. This is just a simple example for demonstration purposes. \"},\"typeVersion\":1},{\"id\":\"ba9eb149-e77f-4bf6-8ec5-7d8d4619485d\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-460,-280],\"parameters\":{\"color\":7,\"width\":320,\"height\":380,\"content\":\"## 2. Gather External Variables to Send to Log\\nThere are some variables we can't define in the subnode but we can add them here.\"},\"typeVersion\":1},{\"id\":\"63bfe329-17dd-4321-94c6-17d306ed7412\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-120,-280],\"parameters\":{\"color\":7,\"width\":720,\"height\":380,\"content\":\"## 3. Provide AI Service\\nOur service uses an LLM (OpenAI GPT4o-mini in this example) to organise the uploaded PDF's data into a structured JSON format. This conversion is useful for following integrations or data storage. In this example however, we'll use display it back to the user.\"},\"typeVersion\":1},{\"id\":\"f45862e9-7f8e-46bb-900a-807fee981ed5\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-120,120],\"parameters\":{\"color\":7,\"width\":720,\"height\":440,\"content\":\"## 4. Use Custom LLM Subnode to Track Usage & Cost\\n[Learn more about the Langchain Code Node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.code/)\\n\\nBy creating our custom LLM subnode using the Langchain Code node, we are able to tap into the chat completion's response which contains the token usage metadata for the information extractor request.\\n\\nWith this, we can calculate exactly how much the client's request is costing per use!\\n\\nThe only remaining step then is to store\\nthis data somewhere. Rather than importing\\nmore dependencies or hardcoding more\\ncredentials, a novel solution can be to attach\\na tool to our subnode.\\n\\nHere, we've decided to use the Google Sheets\\ntool and append the client's usage metrics to\\nthe sheet. Check it out here - [Client Usage Log](\\nhttps://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=sharing)\"},\"typeVersion\":1},{\"id\":\"9f5014a5-0e9a-4af0-b076-03cdc0a14ab9\",\"name\":\"Display JSON Document\",\"type\":\"n8n-nodes-base.form\",\"position\":[360,-120],\"webhookId\":\"1b9d0195-1662-43c2-94a0-f9c867d75578\",\"parameters\":{\"options\":{\"customCss\":\".header p {\\n  font-family: monospace;\\n  background-color: #efefef;\\n  padding: 1rem;\\n  font-size: 0.8rem;\\n  text-align: left;\\n  max-height: 480px;\\n  overflow: auto;\\n  white-space: pre;\\n}\"},\"operation\":\"completion\",\"completionTitle\":\"=Results for {{ $('On form submission').item.json['Upload a file'][0].filename }}\",\"completionMessage\":\"={{ JSON.stringify($json.output, null, 2) }}\"},\"typeVersion\":1},{\"id\":\"b977f89c-1118-455f-986e-735a17eecd9b\",\"name\":\"Filter Last Month\",\"type\":\"n8n-nodes-base.filter\",\"position\":[1120,-120],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2a86f83e-b103-46fe-a8b8-15811d4138fa\",\"operator\":{\"type\":\"dateTime\",\"operation\":\"afterOrEquals\"},\"leftValue\":\"={{new Date($json.date) }}\",\"rightValue\":\"={{ $now.startOf('month') }}\"},{\"id\":\"7b4c03a3-4df9-4b5d-9f1f-660e54a1c2d1\",\"operator\":{\"type\":\"dateTime\",\"operation\":\"beforeOrEquals\"},\"leftValue\":\"={{new Date($json.date) }}\",\"rightValue\":\"={{ $now.endOf('month') }}\"}]}},\"typeVersion\":2.2},{\"id\":\"10d95dcb-d975-4b20-961e-d1fe63417878\",\"name\":\"Get Client Logs\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[920,-120],\"parameters\":{\"options\":{},\"filtersUI\":{\"values\":[{\"lookupValue\":\"12345\",\"lookupColumn\":\"client_id\"}]},\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=drivesdk\",\"cachedResultName\":\"89. Langchain Code Node - Client Usage Log\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"XHvC7jIRR8A2TlUl\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"f6505545-d57c-443a-9883-2d536f3a973a\",\"name\":\"Calculate Totals\",\"type\":\"n8n-nodes-base.summarize\",\"position\":[1320,-120],\"parameters\":{\"options\":{},\"fieldsToSummarize\":{\"values\":[{\"field\":\"total_cost\",\"aggregation\":\"sum\"},{\"field\":\"total_tokens\",\"aggregation\":\"sum\"}]}},\"typeVersion\":1.1},{\"id\":\"1c4ae8ff-ec2b-4fd3-974f-cc766385b16b\",\"name\":\"Every End of Month\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[720,-120],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"months\",\"triggerAtHour\":18,\"triggerAtDayOfMonth\":31}]}},\"typeVersion\":1.2},{\"id\":\"f321fbe6-36b1-4bd8-899b-832a8fc6217a\",\"name\":\"Send Invoice\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1520,-120],\"webhookId\":\"68315f84-d7e0-4525-a625-bb3ff431931c\",\"parameters\":{\"sendTo\":\"jim@example.com\",\"message\":\"=Hello,\\nThis is an invoice for {{ $now.monthLong }} {{ $now.year }}.\\n\\nTotal usage: {{ $json.sum_total_tokens }} tokens\\nTotal token cost: ${{ $json.sum_total_cost.toFixed(5) }}\\nTax @ 20%: ${{ ($json.sum_total_cost * 0.2).toFixed(5) }}\\nTotal payable: ${{ ($json.sum_total_cost * 1.2).toFixed(5) }}\\n\\nPayable within 14 days.\\nThank you for your custom.\",\"options\":{},\"subject\":\"=Invoice for {{ $now.monthLong }} {{ $now.year }}\",\"emailType\":\"text\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"Sf5Gfl9NiFTNXFWb\",\"name\":\"Gmail account\"}},\"typeVersion\":2.1},{\"id\":\"a7d8de78-c3b7-4687-8994-fe28387d7572\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[620,-280],\"parameters\":{\"color\":7,\"width\":1100,\"height\":380,\"content\":\"## 5. Automatically Send Invoice at End of Month (Optional)\\nWith our client usage log, it's fairly simple to aggregate the log records for the client within a certain timeframe and calculate the totals.\\nThis can satisfy accurate billing requirements from clients or at least, allows your team to understand how much each client is costing and budget accordingly.\"},\"typeVersion\":1},{\"id\":\"169fa40d-c6e8-4315-be35-d2c73f626edf\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1500,-920],\"parameters\":{\"width\":440,\"height\":1020,\"content\":\"## Try It Out!\\n### This n8n template demonstrates how to use the Langchain code node to track token usage and cost for every LLM call.\\n\\nThis is useful if your templates handle multiple clients or customers and you need a cheap and easy way to capture how much of your AI credits they are using.\\n\\n### How it works\\n* In our mock AI service, we're offering a data conversion API to convert Resume PDFs into JSON documents.\\n* A form trigger is used to allow for PDF upload and the file is parsed using the Extract from File node.\\n* An Edit Fields node is used to capture additional variables to send to our log.\\n* Next, we use the Information Extractor node to organise the Resume data into the given JSON schema.\\n* The LLM subnode attached to the Information Extractor is a custom one we've built using the Langchain Code node.\\n* With our custom LLM subnode, we're able to capture the usage metadata using lifecycle hooks.\\n* We've also attached a Google Sheet tool to our LLM subnode, allowing us to send our usage metadata to a google sheet.\\n* Finally, we demonstrate how you can aggregate from the google sheet to understand how much AI tokens/costs your clients are liable for.\\n\\n\\n**Check out the example Client Usage Log** - https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=sharing\\n\\n### How to use\\n* **SELF-HOSTED N8N ONLY** - the Langchain Code node is only available in the self-hosted version of n8n. It is not available in n8n cloud.\\n* The LLM subnode can only be attached to non-\\\"AI agent\\\" nodes; Basic LLM node, Information Extractor, Question & Answer Chain, Sentiment Analysis, Summarization Chain and Text Classifier.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\"},\"typeVersion\":1},{\"id\":\"922710e3-f92b-4a7f-9ff2-c3d7d55f04d5\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1040,-420],\"parameters\":{\"color\":3,\"width\":280,\"height\":120,\"content\":\"### SELF-HOSTED N8N ONLY\\nPlease note, this template only works in the self-hosted version of n8n only. It will not work in the cloud version.\"},\"typeVersion\":1},{\"id\":\"56c23cb5-818f-434d-96a7-0029f6607299\",\"name\":\"Parse PDF Upload\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[-700,-120],\"parameters\":{\"options\":{},\"operation\":\"pdf\",\"binaryPropertyName\":\"Upload_a_file\"},\"typeVersion\":1},{\"id\":\"f4cc9870-a73e-487c-a131-aca2735b2e60\",\"name\":\"Extract Resume Data\",\"type\":\"@n8n/n8n-nodes-langchain.informationExtractor\",\"position\":[0,-120],\"parameters\":{\"text\":\"={{ $json.text }}\",\"options\":{},\"schemaType\":\"manual\",\"inputSchema\":\"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"label\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"email\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"phone\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"url\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"summary\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"location\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"address\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"postalCode\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"city\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"countryCode\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"region\\\": { \\\"type\\\": \\\"string\\\" }\\n      }\\n    },\\n    \\\"work\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n          \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"location\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"position\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"url\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"startDate\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"endDate\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"summary\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"highlights\\\": {\\n            \\\"type\\\": \\\"array\\\",\\n            \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n          }\\n        }\\n      }\\n    },\\n    \\\"education\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n          \\\"institution\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"url\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"area\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"studyType\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"startDate\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"endDate\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"score\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"courses\\\": {\\n            \\\"type\\\": \\\"array\\\",\\n            \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n          }\\n        }\\n      }\\n    },\\n    \\\"skills\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n          \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"level\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"keywords\\\": {\\n            \\\"type\\\": \\\"array\\\",\\n            \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Get Client Logs\":{\"main\":[[{\"node\":\"Filter Last Month\",\"type\":\"main\",\"index\":0}]]},\"Calculate Totals\":{\"main\":[[{\"node\":\"Send Invoice\",\"type\":\"main\",\"index\":0}]]},\"Client Usage Log\":{\"ai_tool\":[[{\"node\":\"Custom LLM Subnode\",\"type\":\"ai_tool\",\"index\":0}]]},\"Parse PDF Upload\":{\"main\":[[{\"node\":\"Logging Attributes\",\"type\":\"main\",\"index\":0}]]},\"Filter Last Month\":{\"main\":[[{\"node\":\"Calculate Totals\",\"type\":\"main\",\"index\":0}]]},\"Custom LLM Subnode\":{\"ai_languageModel\":[[{\"node\":\"Extract Resume Data\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Every End of Month\":{\"main\":[[{\"node\":\"Get Client Logs\",\"type\":\"main\",\"index\":0}]]},\"Logging Attributes\":{\"main\":[[{\"node\":\"Extract Resume Data\",\"type\":\"main\",\"index\":0}]]},\"On form submission\":{\"main\":[[{\"node\":\"Parse PDF Upload\",\"type\":\"main\",\"index\":0}]]},\"Extract Resume Data\":{\"main\":[[{\"node\":\"Display JSON Document\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "![Screenshot of template](https://res.cloudinary.com/daglih2g8/image/upload/v1744128138/Screenshot_2025-04-08_at_17.01.38_m4ais8.png)\n\n_Note: This template only works for self-hosted n8n._\n\n### This n8n template demonstrates how to use the Langchain code node to track token usage and cost for every LLM call.\n\nThis is useful if your templates handle multiple clients or customers and you need a cheap and easy way to capture how much of your AI credits they are using.\n\n### How it works\n\n  * In our mock AI service, we're offering a data conversion API to convert Resume PDFs into JSON documents.\n  * A form trigger is used to allow for PDF upload and the file is parsed using the Extract from File node.\n  * An Edit Fields node is used to capture additional variables to send to our log.\n  * Next, we use the Information Extractor node to organise the Resume data into the given JSON schema.\n  * The LLM subnode attached to the Information Extractor is a custom one we've built using the Langchain Code node.\n  * With our custom LLM subnode, we're able to capture the usage metadata using lifecycle hooks.\n  * We've also attached a Google Sheet tool to our LLM subnode, allowing us to send our usage metadata to a google sheet.\n  * Finally, we demonstrate how you can aggregate from the google sheet to understand how much AI tokens/costs your clients are liable for.\n\n\n\n**Check out the example Client Usage Log** \\- <https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=sharing>\n\n### How to use\n\n  * **SELF-HOSTED N8N ONLY** \\- the Langchain Code node is only available in the self-hosted version of n8n. It is not available in n8n cloud.\n  * The LLM subnode can only be attached to non-\"AI agent\" nodes; Basic LLM node, Information Extractor, Question & Answer Chain, Sentiment Analysis, Summarization Chain and Text Classifier.\n\n\n\n### Requirements\n\n  * Self-hosted version of n8n\n  * OpenAI for LLM\n  * Google Sheets to store usage metadata\n\n\n\n### Customising this template\n\n  * Bring the custom LLM subnode into your own templates! In many cases, it can be a drop-in replacement for the regular OpenAI subnode.\n  * Not using Google Sheets? Try other databases or a HTTP call to pipe into your CRM.\n\n\n",
  "readme_html": "<!--[--><div data-v-859c7806=\"\"><p><img src=\"https://res.cloudinary.com/daglih2g8/image/upload/v1744128138/Screenshot_2025-04-08_at_17.01.38_m4ais8.png\" alt=\"Screenshot of template\"></p>\n<p><em>Note: This template only works for self-hosted n8n.</em></p>\n<h3>This n8n template demonstrates how to use the Langchain code node to track token usage and cost for every LLM call.</h3>\n<p>This is useful if your templates handle multiple clients or customers and you need a cheap and easy way to capture how much of your AI credits they are using.</p>\n<h3>How it works</h3>\n<ul>\n<li>In our mock AI service, we're offering a data conversion API to convert Resume PDFs into JSON documents.</li>\n<li>A form trigger is used to allow for PDF upload and the file is parsed using the Extract from File node.</li>\n<li>An Edit Fields node is used to capture additional variables to send to our log.</li>\n<li>Next, we use the Information Extractor node to organise the Resume data into the given JSON schema.</li>\n<li>The LLM subnode attached to the Information Extractor is a custom one we've built using the Langchain Code node.</li>\n<li>With our custom LLM subnode, we're able to capture the usage metadata using lifecycle hooks.</li>\n<li>We've also attached a Google Sheet tool to our LLM subnode, allowing us to send our usage metadata to a google sheet.</li>\n<li>Finally, we demonstrate how you can aggregate from the google sheet to understand how much AI tokens/costs your clients are liable for.</li>\n</ul>\n<p><strong>Check out the example Client Usage Log</strong> - <a href=\"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=sharing\" rel=\"ugc nofollow\" target=\"_blank\">https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=sharing</a></p>\n<h3>How to use</h3>\n<ul>\n<li><strong>SELF-HOSTED N8N ONLY</strong> - the Langchain Code node is only available in the self-hosted version of n8n. It is not available in n8n cloud.</li>\n<li>The LLM subnode can only be attached to non-\"AI agent\" nodes; Basic LLM node, Information Extractor, Question &amp; Answer Chain, Sentiment Analysis, Summarization Chain and Text Classifier.</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li>Self-hosted version of n8n</li>\n<li>OpenAI for LLM</li>\n<li>Google Sheets to store usage metadata</li>\n</ul>\n<h3>Customising this template</h3>\n<ul>\n<li>Bring the custom LLM subnode into your own templates! In many cases, it can be a drop-in replacement for the regular OpenAI subnode.</li>\n<li>Not using Google Sheets? Try other databases or a HTTP call to pipe into your CRM.</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "![模板截图](https://res.cloudinary.com/daglih2g8/image/upload/v1744128138/Screenshot_2025-04-08_at_17.01.38_m4ais8.png)\n\n_注：本模板仅适用于自托管版n8n_\n\n### 该n8n模板演示了如何使用Langchain代码节点追踪每次LLM调用的令牌消耗及成本\n\n当您的模板需要服务多个客户时，这个方案能经济高效地记录每位客户消耗的AI额度。\n\n### 工作原理\n\n* 在我们的模拟AI服务中，我们提供将简历PDF转换为JSON文档的数据转换API\n* 通过表单触发器接收PDF上传，使用\"从文件提取\"节点解析内容\n* \"编辑字段\"节点用于捕获需要记录的其他变量\n* 随后\"信息提取器\"节点将简历数据按既定JSON结构整理\n* 信息提取器连接的LLM子节点是我们用Langchain代码节点构建的自定义节点\n* 通过自定义LLM子节点，我们利用生命周期钩子捕获使用量元数据\n* 我们还为LLM子节点配置了Google Sheets工具，可将使用数据发送至电子表格\n* 最后演示如何从表格中聚合数据，计算各客户应支付的AI令牌费用\n\n**查看客户用量记录表示例** \\- <https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=sharing>\n\n### 使用说明\n\n* **仅限自托管版n8n** - Langchain代码节点在n8n云版本中不可用\n* LLM子节点只能连接非\"AI代理\"类节点：基础LLM节点、信息提取器、问答链、情感分析、摘要链和文本分类器\n\n### 环境要求\n\n* 自托管版n8n\n* OpenAI的LLM服务\n* 存储元数据的Google Sheets\n\n### 定制建议\n\n* 将自定义LLM子节点移植到您的模板中！多数情况下可直接替换标准OpenAI子节点\n* 不使用Google Sheets？可改用其他数据库或通过HTTP调用接入您的CRM系统",
  "title_zh": "使用Langchain代码节点追踪每位客户的LLM令牌成本",
  "publish_date_zh": "上次更新于8天前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"8884df86-b7cd-4cf7-8b71-fd21113bfc0f\",\n      \"name\": \"Client Usage Log\",\n      \"type\": \"n8n-nodes-base.googleSheetsTool\",\n      \"position\": [\n        420,\n        500\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {},\n          \"schema\": [\n            {\n              \"id\": \"date\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"date\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"workflow_id\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"workflow_id\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"execution_id\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"execution_id\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"client_id\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"client_id\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"client_name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"client_name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"input_tokens\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"input_tokens\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"output_tokens\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"output_tokens\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"total_tokens\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"total_tokens\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"input_cost\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"input_cost\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"output_cost\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"output_cost\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"total_cost\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"total_cost\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"autoMapInputData\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=drivesdk\",\n          \"cachedResultName\": \"89. Langchain Code Node - Client Usage Log\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"1e4aca76-8b79-4780-b0c5-2cd92a41aa0e\",\n      \"name\": \"Logging Attributes\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -360,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"22164635-7a23-47e2-9868-96899cd9d317\",\n              \"name\": \"workflow_id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $workflow.id }}\"\n            },\n            {\n              \"id\": \"ed1cb653-b3fd-40bf-b00b-10d777f098af\",\n              \"name\": \"execution_id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $execution.id }}\"\n            },\n            {\n              \"id\": \"3de228a1-79b9-4805-8d92-917f691411be\",\n              \"name\": \"client_id\",\n              \"type\": \"string\",\n              \"value\": \"=12345\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d7f37c54-5d96-47ba-b82e-0926a08137df\",\n      \"name\": \"On form submission\",\n      \"type\": \"n8n-nodes-base.formTrigger\",\n      \"position\": [\n        -920,\n        -120\n      ],\n      \"webhookId\": \"9da21424-e23b-43b8-a6ec-a6daa129c326\",\n      \"parameters\": {\n        \"options\": {},\n        \"formTitle\": \"CV Parsing Service\",\n        \"formFields\": {\n          \"values\": [\n            {\n              \"fieldType\": \"file\",\n              \"fieldLabel\": \"Upload a file\",\n              \"requiredField\": true,\n              \"acceptFileTypes\": \".pdf\"\n            },\n            {\n              \"fieldType\": \"dropdown\",\n              \"fieldLabel\": \"Acknowledgement\",\n              \"multiselect\": true,\n              \"fieldOptions\": {\n                \"values\": [\n                  {\n                    \"option\": \"I acknowledge the use of this service will be added to my bill.\"\n                  }\n                ]\n              },\n              \"requiredField\": true\n            }\n          ]\n        },\n        \"responseMode\": \"lastNode\",\n        \"formDescription\": \"Use this form to upload CVs and we'll extract the data from them. This workflow tracks usage metrics so we can calculate the bill later on.\"\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"06da0c8e-2035-45ae-a301-50021650a5f8\",\n      \"name\": \"Custom LLM Subnode\",\n      \"type\": \"@n8n/n8n-nodes-langchain.code\",\n      \"position\": [\n        260,\n        340\n      ],\n      \"parameters\": {\n        \"code\": {\n          \"supplyData\": {\n            \"code\": \"const { ChatOpenAI } = require(\\\"@langchain/openai\\\");\\n\\n// 1. Configure as required.\\n// - costs are per million tokens and depends on the model.\\nconst openAIApiKey = \\\"sk-...\\\";\\nconst model = \\\"gpt-4o-mini\\\";\\nconst input_token_cost = 0.150;\\nconst output_token_cost = 0.600;\\n\\n// 2. do not edit below this line --\\nconst tools = await this.getInputConnectionData('ai_tool', 0);\\nconst googleSheetTool = tools[0];\\n\\nconst {\\n  workflow_id,\\n  execution_id,\\n  client_id } = $input.first().json;\\n\\nconst llm = new ChatOpenAI({\\n  apiKey: openAIApiKey,\\n  model,\\n  callbacks: [\\n    {\\n      handleLLMEnd: async function(output,runId,parentId) {\\n        const generation = output.generations[0][0];\\n        const message = generation.message;\\n        const row = {\\n          date: (new Date()).toGMTString(),\\n          workflow_id,\\n          execution_id,\\n          client_id,\\n          input_tokens: message.usage_metadata.input_tokens,\\n          output_tokens: message.usage_metadata.output_tokens,\\n          total_tokens: message.usage_metadata.total_tokens,\\n          input_cost: (message.usage_metadata.input_tokens / 1_000_000) * input_token_cost,\\n          output_cost: (message.usage_metadata.output_tokens / 1_000_000) * output_token_cost,\\n        };\\n        row.total_cost = row.input_cost + row.output_cost;\\n        await googleSheetTool.func(row);\\n      }\\n    }\\n  ]\\n});\\n\\nreturn llm;\"\n          }\n        },\n        \"inputs\": {\n          \"input\": [\n            {\n              \"type\": \"ai_tool\",\n              \"required\": true\n            }\n          ]\n        },\n        \"outputs\": {\n          \"output\": [\n            {\n              \"type\": \"ai_languageModel\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"35993bd5-b521-4239-bf23-aed47d339f54\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        360,\n        480\n      ],\n      \"parameters\": {\n        \"width\": 200,\n        \"height\": 280,\n        \"content\": \"### 更新工作簿\\n这是用于追踪令牌使用情况和成本的工作簿。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"623ca94d-a215-416b-a9fe-62a1f96317e3\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1040,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 560,\n        \"height\": 380,\n        \"content\": \"## 1. 向客户提供AI服务\\n在此，我们将通过n8n表单提供简历/履历PDF文档的解析服务。用户只需上传PDF文件，我们便会将其转换为JSON格式返回。这仅是一个用于演示的简单示例。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ba9eb149-e77f-4bf6-8ec5-7d8d4619485d\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 320,\n        \"height\": 380,\n        \"content\": \"## 2. 收集外部变量以发送至日志\\n有些变量我们无法在子节点中定义，但可以在此处添加。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"63bfe329-17dd-4321-94c6-17d306ed7412\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -120,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 720,\n        \"height\": 380,\n        \"content\": \"## 3. 提供AI服务\\n我们的服务利用大语言模型（本示例采用OpenAI GPT4o-mini）将上传的PDF数据整理为结构化JSON格式。这种转换有利于后续的系统集成或数据存储。不过在本次示例中，我们将把转换后的数据直接展示给用户。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f45862e9-7f8e-46bb-900a-807fee981ed5\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -120,\n        120\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 720,\n        \"height\": 440,\n        \"content\": \"## 4. 使用自定义LLM子节点追踪用量与成本\\n[了解更多Langchain代码节点信息](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.code/)\\n\\n通过Langchain代码节点创建自定义LLM子节点，我们成功获取了聊天补全响应中蕴含的令牌用量元数据，这些数据来自信息提取器的请求。\\n\\n基于此，我们可以精准计算出客户每次请求所产生的费用！\\n\\n唯一剩下的步骤就是将\\n这些数据存储到某处。相较于\\n引入更多依赖项或硬编码更多\\n凭证，一个创新的解决方案是\\n为子节点附加工具。\\n\\n这里我们选择使用Google Sheets工具，\\n将客户的使用指标追加到电子表格中。\\n查看实时记录——\\n[客户用量日志表](\\nhttps://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=sharing)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9f5014a5-0e9a-4af0-b076-03cdc0a14ab9\",\n      \"name\": \"Display JSON Document\",\n      \"type\": \"n8n-nodes-base.form\",\n      \"position\": [\n        360,\n        -120\n      ],\n      \"webhookId\": \"1b9d0195-1662-43c2-94a0-f9c867d75578\",\n      \"parameters\": {\n        \"options\": {\n          \"customCss\": \".header p {\\n  font-family: monospace;\\n  background-color: #efefef;\\n  padding: 1rem;\\n  font-size: 0.8rem;\\n  text-align: left;\\n  max-height: 480px;\\n  overflow: auto;\\n  white-space: pre;\\n}\"\n        },\n        \"operation\": \"completion\",\n        \"completionTitle\": \"=Results for {{ $('On form submission').item.json['Upload a file'][0].filename }}\",\n        \"completionMessage\": \"={{ JSON.stringify($json.output, null, 2) }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b977f89c-1118-455f-986e-735a17eecd9b\",\n      \"name\": \"Filter Last Month\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1120,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"2a86f83e-b103-46fe-a8b8-15811d4138fa\",\n              \"operator\": {\n                \"type\": \"dateTime\",\n                \"operation\": \"afterOrEquals\"\n              },\n              \"leftValue\": \"={{new Date($json.date) }}\",\n              \"rightValue\": \"={{ $now.startOf('month') }}\"\n            },\n            {\n              \"id\": \"7b4c03a3-4df9-4b5d-9f1f-660e54a1c2d1\",\n              \"operator\": {\n                \"type\": \"dateTime\",\n                \"operation\": \"beforeOrEquals\"\n              },\n              \"leftValue\": \"={{new Date($json.date) }}\",\n              \"rightValue\": \"={{ $now.endOf('month') }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"10d95dcb-d975-4b20-961e-d1fe63417878\",\n      \"name\": \"Get Client Logs\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        920,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"filtersUI\": {\n          \"values\": [\n            {\n              \"lookupValue\": \"12345\",\n              \"lookupColumn\": \"client_id\"\n            }\n          ]\n        },\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=drivesdk\",\n          \"cachedResultName\": \"89. Langchain Code Node - Client Usage Log\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"f6505545-d57c-443a-9883-2d536f3a973a\",\n      \"name\": \"Calculate Totals\",\n      \"type\": \"n8n-nodes-base.summarize\",\n      \"position\": [\n        1320,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldsToSummarize\": {\n          \"values\": [\n            {\n              \"field\": \"total_cost\",\n              \"aggregation\": \"sum\"\n            },\n            {\n              \"field\": \"total_tokens\",\n              \"aggregation\": \"sum\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"1c4ae8ff-ec2b-4fd3-974f-cc766385b16b\",\n      \"name\": \"Every End of Month\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        720,\n        -120\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"months\",\n              \"triggerAtHour\": 18,\n              \"triggerAtDayOfMonth\": 31\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"f321fbe6-36b1-4bd8-899b-832a8fc6217a\",\n      \"name\": \"Send Invoice\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1520,\n        -120\n      ],\n      \"webhookId\": \"68315f84-d7e0-4525-a625-bb3ff431931c\",\n      \"parameters\": {\n        \"sendTo\": \"jim@example.com\",\n        \"message\": \"=Hello,\\nThis is an invoice for {{ $now.monthLong }} {{ $now.year }}.\\n\\nTotal usage: {{ $json.sum_total_tokens }} tokens\\nTotal token cost: ${{ $json.sum_total_cost.toFixed(5) }}\\nTax @ 20%: ${{ ($json.sum_total_cost * 0.2).toFixed(5) }}\\nTotal payable: ${{ ($json.sum_total_cost * 1.2).toFixed(5) }}\\n\\nPayable within 14 days.\\nThank you for your custom.\",\n        \"options\": {},\n        \"subject\": \"=Invoice for {{ $now.monthLong }} {{ $now.year }}\",\n        \"emailType\": \"text\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"Sf5Gfl9NiFTNXFWb\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"a7d8de78-c3b7-4687-8994-fe28387d7572\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        620,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1100,\n        \"height\": 380,\n        \"content\": \"## 5. 月末自动发送发票（可选功能）\\n借助我们的客户使用日志，可以轻松汇总特定时间段内客户的日志记录并计算总费用。\\n这既能满足客户对精准计费的需求，也能让您的团队清楚掌握每位客户的资源消耗成本，从而进行相应的财务预算。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"169fa40d-c6e8-4315-be35-d2c73f626edf\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1500,\n        -920\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 1020,\n        \"content\": \"## 试试看吧！\\n### 本n8n模板展示了如何利用Langchain代码节点追踪每次大语言模型调用的令牌消耗及成本\\n\\n当您的模板需要服务多个客户时，这个功能尤为实用——它能以极低成本轻松记录每位客户消耗的AI算力额度。\\n\\n### 工作原理\\n* 在我们的模拟AI服务中，我们提供将简历PDF转换为JSON文档的数据转换API\\n* 通过表单触发器接收上传的PDF文件，使用\\\"文件内容提取\\\"节点进行解析\\n* \\\"字段编辑\\\"节点用于捕获需要记录到日志的附加变量\\n* 随后\\\"信息提取器\\\"节点将简历数据按既定JSON结构进行整理\\n* 信息提取器连接的LLM子节点是我们用Langchain代码节点构建的自定义模块\\n* 借助这个定制LLM子节点，我们可以通过生命周期钩子捕获使用量元数据\\n* 我们还为LLM子节点接入了Google表格工具，将使用量数据实时同步到在线表格\\n* 最后演示如何从表格中聚合数据，精确计算每位客户应支付的AI令牌费用\\n\\n**查看客户用量日志示例** - https://docs.google.com/spreadsheets/d/1AR5mrxz2S6PjAKVM0edNG-YVEc6zKL7aUxHxVcffnlw/edit?usp=sharing\\n\\n### 使用须知\\n* **仅限自托管版n8n** - Langchain代码节点在n8n云端版不可用\\n* LLM子节点仅能连接到非\\\"AI代理\\\"类节点：基础LLM节点、信息提取器、问答链、情感分析、摘要链和文本分类器\\n\\n### 需要帮助？\\n加入[Discord讨论群](https://discord.com/invite/XPKeKXeB7d) 或访问[官方论坛](https://community.n8n.io/)提问！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"922710e3-f92b-4a7f-9ff2-c3d7d55f04d5\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1040,\n        -420\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 280,\n        \"height\": 120,\n        \"content\": \"### 仅限自托管版N8N\\n请注意，此模板仅适用于自托管版本的n8n，云端版本无法使用。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"56c23cb5-818f-434d-96a7-0029f6607299\",\n      \"name\": \"Parse PDF Upload\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        -700,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"pdf\",\n        \"binaryPropertyName\": \"Upload_a_file\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f4cc9870-a73e-487c-a131-aca2735b2e60\",\n      \"name\": \"Extract Resume Data\",\n      \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\",\n      \"position\": [\n        0,\n        -120\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.text }}\",\n        \"options\": {},\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"label\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"email\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"phone\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"url\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"summary\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"location\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"address\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"postalCode\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"city\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"countryCode\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"region\\\": { \\\"type\\\": \\\"string\\\" }\\n      }\\n    },\\n    \\\"work\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n          \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"location\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"position\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"url\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"startDate\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"endDate\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"summary\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"highlights\\\": {\\n            \\\"type\\\": \\\"array\\\",\\n            \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n          }\\n        }\\n      }\\n    },\\n    \\\"education\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n          \\\"institution\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"url\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"area\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"studyType\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"startDate\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"endDate\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"score\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"courses\\\": {\\n            \\\"type\\\": \\\"array\\\",\\n            \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n          }\\n        }\\n      }\\n    },\\n    \\\"skills\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"properties\\\": {\\n          \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"level\\\": { \\\"type\\\": \\\"string\\\" },\\n          \\\"keywords\\\": {\\n            \\\"type\\\": \\\"array\\\",\\n            \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Get Client Logs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Last Month\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Calculate Totals\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Invoice\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Client Usage Log\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Custom LLM Subnode\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse PDF Upload\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Logging Attributes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Last Month\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Calculate Totals\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Custom LLM Subnode\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Extract Resume Data\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every End of Month\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Client Logs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Logging Attributes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Resume Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On form submission\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse PDF Upload\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Resume Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Display JSON Document\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}