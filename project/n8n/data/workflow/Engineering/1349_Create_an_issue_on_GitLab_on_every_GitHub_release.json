{
  "title": "Create an issue on GitLab on every GitHub release",
  "url": "https://n8n.io/workflows/1349-create-an-issue-on-gitlab-on-every-github-release/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/?count=20",
  "author": "Manu",
  "publish_date": "Last update 9 months ago",
  "publish_date_absolute": "2024-08-06",
  "content": "",
  "workflow_json": "{\"nodes\":[{\"name\":\"Get latest release\",\"type\":\"n8n-nodes-base.github\",\"position\":[540,340],\"parameters\":{\"limit\":1,\"resource\":\"release\",\"operation\":\"getAll\"},\"typeVersion\":1},{\"name\":\"Cron\",\"type\":\"n8n-nodes-base.cron\",\"position\":[240,500],\"parameters\":{\"triggerTimes\":{\"item\":[{\"mode\":\"everyWeek\"}]}},\"typeVersion\":1},{\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[740,420],\"parameters\":{},\"typeVersion\":1},{\"name\":\"No issue for release?\",\"type\":\"n8n-nodes-base.function\",\"position\":[920,420],\"parameters\":{\"functionCode\":\"const _ = require('lodash')\\n\\n// differentiate merged inputs (didnt find a way to get both inputs into one function invocation)\\nconst releases = _.filter(items, i => _.has(i, 'json.assets'))\\nif (releases.length != 1) throw new Error(`Invalid release count: ${releases.length}`)\\nconst release = releases[0]\\nconst issues = _.without(items, release)\\n//console.log({release,issues})\\n\\n// check if there's an issue for the release\\nconst matchingIssue = _.find(issues, i => i.json.title.includes(release.json.tag_name))\\n//console.log({release,issues,matchingIssue})\\n\\nif (matchingIssue)\\n  return []\\nelse\\n  return [release]\"},\"executeOnce\":false,\"typeVersion\":1},{\"name\":\"Create issue\",\"type\":\"n8n-nodes-base.gitlab\",\"position\":[1100,420],\"parameters\":{\"body\":\"={{$json[\\\"url\\\"]}}\\n\\n{{$json[\\\"body\\\"]}}\",\"owner\":\"txlab\",\"title\":\"=Upstream release: {{$json[\\\"tag_name\\\"]}}\",\"labels\":[],\"repository\":\"docker-linkcheck\",\"assignee_ids\":[]},\"typeVersion\":1},{\"name\":\"List issues\",\"type\":\"n8n-nodes-base.gitlab\",\"position\":[540,500],\"parameters\":{\"owner\":\"txlab\",\"resource\":\"repository\",\"repository\":\"docker-linkcheck\",\"getRepositoryIssuesFilters\":{}},\"typeVersion\":1}],\"connections\":{\"Cron\":{\"main\":[[{\"node\":\"Get latest release\",\"type\":\"main\",\"index\":0},{\"node\":\"List issues\",\"type\":\"main\",\"index\":0}]]},\"Merge\":{\"main\":[[{\"node\":\"No release for issue?\",\"type\":\"main\",\"index\":0}]]},\"Start\":{\"main\":[[{\"node\":\"Get latest release\",\"type\":\"main\",\"index\":0},{\"node\":\"List issues\",\"type\":\"main\",\"index\":0}]]},\"List issues\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]},\"Get latest release\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]},\"No release for issue?\":{\"main\":[[{\"node\":\"Create issue\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "For every release on GitHub this workflow will create an issue on GitLab.\n\n  1. Copy workflow to your n8n\n  2. Fill in missing fields (credentials & repo names)\n\n\n\nBased on Cron node to be able to track github repos you're not a member of (as you won't be able to create a webhook).  \nIf you do own the repo, you could replace Cron & GH node with a GitHub Trigger.\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>For every release on GitHub this workflow will create an issue on GitLab.</p>\n<ol>\n<li>Copy workflow to your n8n</li>\n<li>Fill in missing fields (credentials &amp; repo names)</li>\n</ol>\n<p>Based on Cron node to be able to track github repos you're not a member of (as you won't be able to create a webhook).<br>\nIf you do own the repo, you could replace Cron &amp; GH node with a GitHub Trigger.</p>\n</div><!--]-->",
  "readme_zh": "对于GitHub上的每一次版本发布，此工作流将在GitLab上创建一个议题。\n\n1. 将工作流复制到您的n8n中  \n2. 填写缺失字段（凭据和仓库名称）  \n\n基于Cron节点设计，以便能追踪您非成员的GitHub仓库（因为您无法创建webhook）。  \n若您拥有该仓库，可用GitHub触发器节点替代Cron和GH节点。",
  "title_zh": "在每次GitHub发布时在GitLab上创建一个议题",
  "publish_date_zh": "最后更新于9个月前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"name\": \"Get latest release\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        540,\n        340\n      ],\n      \"parameters\": {\n        \"limit\": 1,\n        \"resource\": \"release\",\n        \"operation\": \"getAll\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Cron\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        240,\n        500\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyWeek\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        740,\n        420\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"No issue for release?\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        920,\n        420\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const _ = require('lodash')\\n\\n// differentiate merged inputs (didnt find a way to get both inputs into one function invocation)\\nconst releases = _.filter(items, i => _.has(i, 'json.assets'))\\nif (releases.length != 1) throw new Error(`Invalid release count: ${releases.length}`)\\nconst release = releases[0]\\nconst issues = _.without(items, release)\\n//console.log({release,issues})\\n\\n// check if there's an issue for the release\\nconst matchingIssue = _.find(issues, i => i.json.title.includes(release.json.tag_name))\\n//console.log({release,issues,matchingIssue})\\n\\nif (matchingIssue)\\n  return []\\nelse\\n  return [release]\"\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Create issue\",\n      \"type\": \"n8n-nodes-base.gitlab\",\n      \"position\": [\n        1100,\n        420\n      ],\n      \"parameters\": {\n        \"body\": \"={{$json[\\\"url\\\"]}}\\n\\n{{$json[\\\"body\\\"]}}\",\n        \"owner\": \"txlab\",\n        \"title\": \"=Upstream release: {{$json[\\\"tag_name\\\"]}}\",\n        \"labels\": [],\n        \"repository\": \"docker-linkcheck\",\n        \"assignee_ids\": []\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"List issues\",\n      \"type\": \"n8n-nodes-base.gitlab\",\n      \"position\": [\n        540,\n        500\n      ],\n      \"parameters\": {\n        \"owner\": \"txlab\",\n        \"resource\": \"repository\",\n        \"repository\": \"docker-linkcheck\",\n        \"getRepositoryIssuesFilters\": {}\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Cron\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get latest release\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"List issues\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"No release for issue?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Start\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get latest release\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"List issues\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List issues\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Get latest release\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"No release for issue?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create issue\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}