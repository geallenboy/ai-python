{
  "title": "AI Agent to chat with Supabase/PostgreSQL DB",
  "url": "https://n8n.io/workflows/2612-ai-agent-to-chat-with-supabasepostgresql-db/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/?count=20",
  "author": "Mark Shcherbakov",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-07",
  "content": "",
  "workflow_json": "{\"nodes\":[{\"id\":\"0a4e65b7-39be-44eb-8c66-913ebfe8a87a\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1140,840],\"parameters\":{\"color\":3,\"width\":215,\"height\":80,\"content\":\"**Replace password and username for Supabase**\"},\"typeVersion\":1},{\"id\":\"2cea21fc-f3fe-47b7-a7b6-12acb0bc03ac\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-160,320],\"parameters\":{\"color\":7,\"width\":280.2462120317618,\"height\":545.9087885077763,\"content\":\"### Set up steps\\n\\n#### Preparation\\n1. **Create Accounts**:\\n   - [N8N](https://n8n.partnerlinks.io/2hr10zpkki6a): For workflow automation.\\n   - [Supabase](https://supabase.com/): For database hosting and management.\\n   - [OpenAI](https://openai.com/): For building the conversational AI agent.\\n2. **Configure Database Connection**:\\n   - Set up a PostgreSQL database in Supabase.\\n   - Use appropriate credentials (`username`, `password`, `host`, and `database` name) in your workflow.\\n\\n#### N8N Workflow\\n\\nAI agent with tools:\\n\\n1. **Code Tool**:\\n   - Execute SQL queries based on user input.\\n2. **Database Schema Tool**:\\n   - Retrieve a list of all tables in the database.\\n   - Use a predefined SQL query to fetch table definitions, including column names, types, and references.\\n3. **Table Definition**:\\n   - Retrieve a list of columns with types for one table.\"},\"typeVersion\":1},{\"id\":\"eacc0c8c-11d5-44fb-8ff1-10533a233693\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-160,-200],\"parameters\":{\"color\":7,\"width\":636.2128494576581,\"height\":497.1532689930921,\"content\":\"![5min Logo](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773200/Skool%20Assets/ejm3hqnvhgwpnu2fv92s.png)\\n## AI Agent to chat with Supabase/PostgreSQL DB\\n**Made by [Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/) from community [5minAI](https://www.skool.com/5minai-2861)**\\n\\nAccessing and analyzing database data often requires SQL expertise or dedicated reports, which can be time-consuming. This workflow empowers users to interact with a database conversationally through an AI-powered agent. It dynamically generates SQL queries based on user requests, streamlining data retrieval and analysis.\\n\\nThis workflow integrates OpenAI with a Supabase database, enabling users to interact with their data via an AI agent. The agent can:\\n- Retrieve records from the database.\\n- Extract and analyze JSON data stored in tables.\\n- Provide summaries, aggregations, or specific data points based on user queries.\\n\\n\"},\"typeVersion\":1},{\"id\":\"be1559ea-1f75-4e7c-9bdd-3add8d8be70b\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[140,320],\"parameters\":{\"color\":7,\"width\":330.5152611046425,\"height\":239.5888196628349,\"content\":\"### ... or watch set up video [20 min]\\n[![Youtube Thumbnail](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773279/Youtube%20Thumbs/Chat%20With%20DB.png)](https://www.youtube.com/watch?v=-GgKzhCNxjk)\\n\"},\"typeVersion\":1},{\"id\":\"4ea87754-dead-49ea-848c-ed86c98e217b\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[720,400],\"webhookId\":\"6e95bc27-99a6-417c-8bf7-2831d7f7a4be\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"c20d6e57-eb41-4682-a7f5-5bb4323df476\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[760,680],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"zJhr5piyEwVnWtaI\",\"name\":\"OpenAi club\"}},\"typeVersion\":1},{\"id\":\"8d3b1faf-643c-4070-996d-a59cb06e1827\",\"name\":\"DB Schema\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[1180,660],\"parameters\":{\"query\":\"SELECT table_schema, table_name\\nFROM information_schema.tables\\nWHERE table_type = 'BASE TABLE' AND table_schema = 'public';\",\"options\":{},\"operation\":\"executeQuery\",\"descriptionType\":\"manual\",\"toolDescription\":\"Get list of all tables in database\"},\"credentials\":{\"postgres\":{\"id\":\"AO9cER6p8uX7V07T\",\"name\":\"Postgres 5minai\"}},\"typeVersion\":2.5},{\"id\":\"d9346ade-79d1-44c2-8fa6-b337ad8b0544\",\"name\":\"Get table definition\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[1340,660],\"parameters\":{\"query\":\"SELECT \\n    c.column_name,\\n    c.data_type,\\n    c.is_nullable,\\n    c.column_default,\\n    tc.constraint_type,\\n    ccu.table_name AS referenced_table,\\n    ccu.column_name AS referenced_column\\nFROM \\n    information_schema.columns c\\nLEFT JOIN \\n    information_schema.key_column_usage kcu \\n    ON c.table_name = kcu.table_name \\n    AND c.column_name = kcu.column_name\\nLEFT JOIN \\n    information_schema.table_constraints tc \\n    ON kcu.constraint_name = tc.constraint_name\\n    AND tc.constraint_type = 'FOREIGN KEY'\\nLEFT JOIN\\n    information_schema.constraint_column_usage ccu\\n    ON tc.constraint_name = ccu.constraint_name\\nWHERE \\n    c.table_name = '{{ $fromAI(\\\"table_name\\\") }}' -- Your table name\\n    AND c.table_schema = 'public' -- Ensure it's in the right schema\\nORDER BY \\n    c.ordinal_position;\\n\",\"options\":{},\"operation\":\"executeQuery\",\"descriptionType\":\"manual\",\"toolDescription\":\"Get table definition to find all columns and types.\"},\"credentials\":{\"postgres\":{\"id\":\"AO9cER6p8uX7V07T\",\"name\":\"Postgres 5minai\"}},\"typeVersion\":2.5},{\"id\":\"b88a21e0-d2ff-4431-bd84-dfd43edeb5c4\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[960,280],\"parameters\":{\"width\":215,\"height\":80,\"content\":\"**Finetune the prompt of assistant**\"},\"typeVersion\":1},{\"id\":\"fbe9eb68-5990-485c-820f-08234ea33194\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[940,400],\"parameters\":{\"text\":\"={{ $('When chat message received').item.json.chatInput }}\",\"agent\":\"openAiFunctionsAgent\",\"options\":{\"systemMessage\":\"You are DB assistant. You need to run queries in DB aligned with user requests.\\n\\nRun custom SQL query to aggregate data and response to user.\\n\\nFetch all data to analyse it for response if needed.\\n\"},\"promptType\":\"define\"},\"typeVersion\":1.6},{\"id\":\"7f82d6d9-d7d6-4443-bbaa-c9b276a376e3\",\"name\":\"Run SQL Query\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[1040,660],\"parameters\":{\"query\":\"{{ $fromAI(\\\"query\\\",\\\"SQL query for PostgreSQL DB in Supabase\\\") }}\",\"options\":{},\"operation\":\"executeQuery\",\"descriptionType\":\"manual\",\"toolDescription\":\"Run custom SQL queries using knowledge about Output structure to provide needed response for user request.\\nUse ->> operator to extract JSON data.\"},\"credentials\":{\"postgres\":{\"id\":\"AO9cER6p8uX7V07T\",\"name\":\"Postgres 5minai\"}},\"typeVersion\":2.5}],\"pinData\":{},\"connections\":{\"DB Schema\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Run SQL Query\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Get table definition\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "### Video Guide\n\nI prepared a detailed guide that showed the whole process of building a resume analyzer.\n\n[![OPENAI 14.png](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773279/Youtube%20Thumbs/Chat%20With%20DB.png)](https://youtu.be/-GgKzhCNxjk)\n\n### Who is this for?\n\nThis workflow is ideal for developers, data analysts, and business owners who want to enable conversational interactions with their database. It’s particularly useful for cases where users need to extract, analyze, or aggregate data without writing SQL queries manually.\n\n### What problem does this workflow solve?\n\nAccessing and analyzing database data often requires SQL expertise or dedicated reports, which can be time-consuming. This workflow empowers users to interact with a database conversationally through an AI-powered agent. It dynamically generates SQL queries based on user requests, streamlining data retrieval and analysis.\n\n### What this workflow does\n\nThis workflow integrates OpenAI with a Supabase database, enabling users to interact with their data via an AI agent. The agent can:\n\n  * Retrieve records from the database.\n  * Extract and analyze JSON data stored in tables.\n  * Provide summaries, aggregations, or specific data points based on user queries.\n\n\n  1. **Dynamic SQL Querying** : The agent uses user prompts to create and execute SQL queries on the database.\n  2. **Understand JSON Structure** : The workflow identifies JSON schema from sample records, enabling the agent to parse and analyze JSON fields effectively.\n  3. **Database Schema Exploration** : It provides the agent with tools to retrieve table structures, column details, and relationships for precise query generation.\n\n\n\n### Setup\n\n#### Preparation\n\n  1. **Create Accounts** : \n     * [N8N](https://n8n.partnerlinks.io/2hr10zpkki6a): For workflow automation.\n     * [Supabase](https://supabase.com/): For database hosting and management.\n     * [OpenAI](https://openai.com/): For building the conversational AI agent.\n  2. **Configure Database Connection** : \n     * Set up a PostgreSQL database in Supabase.\n     * Use appropriate credentials (`username`, `password`, `host`, and `database` name) in your workflow.\n\n\n\n#### N8N Workflow\n\nAI agent with tools:\n\n  1. **Code Tool** : \n     * Execute SQL queries based on user input.\n  2. **Database Schema Tool** : \n     * Retrieve a list of all tables in the database.\n     * Use a predefined SQL query to fetch table definitions, including column names, types, and references.\n  3. **Table Definition** : \n     * Retrieve a list of columns with types for one table.\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h3>Video Guide</h3>\n<p>I prepared a detailed guide that showed the whole process of building a resume analyzer.</p>\n<p><a href=\"https://youtu.be/-GgKzhCNxjk\" rel=\"ugc nofollow\" target=\"_blank\"><img src=\"https://res.cloudinary.com/de9jgixzm/image/upload/v1739773279/Youtube%20Thumbs/Chat%20With%20DB.png\" alt=\"OPENAI 14.png\"></a></p>\n<h3>Who is this for?</h3>\n<p>This workflow is ideal for developers, data analysts, and business owners who want to enable conversational interactions with their database. It’s particularly useful for cases where users need to extract, analyze, or aggregate data without writing SQL queries manually.</p>\n<h3>What problem does this workflow solve?</h3>\n<p>Accessing and analyzing database data often requires SQL expertise or dedicated reports, which can be time-consuming. This workflow empowers users to interact with a database conversationally through an AI-powered agent. It dynamically generates SQL queries based on user requests, streamlining data retrieval and analysis.</p>\n<h3>What this workflow does</h3>\n<p>This workflow integrates OpenAI with a Supabase database, enabling users to interact with their data via an AI agent. The agent can:</p>\n<ul>\n<li>Retrieve records from the database.</li>\n<li>Extract and analyze JSON data stored in tables.</li>\n<li>Provide summaries, aggregations, or specific data points based on user queries.</li>\n</ul>\n<ol>\n<li><strong>Dynamic SQL Querying</strong>: The agent uses user prompts to create and execute SQL queries on the database.</li>\n<li><strong>Understand JSON Structure</strong>: The workflow identifies JSON schema from sample records, enabling the agent to parse and analyze JSON fields effectively.</li>\n<li><strong>Database Schema Exploration</strong>: It provides the agent with tools to retrieve table structures, column details, and relationships for precise query generation.</li>\n</ol>\n<h3>Setup</h3>\n<h4>Preparation</h4>\n<ol>\n<li><strong>Create Accounts</strong>:\n<ul>\n<li><a href=\"https://n8n.partnerlinks.io/2hr10zpkki6a\" rel=\"ugc nofollow\" target=\"_blank\">N8N</a>: For workflow automation.</li>\n<li><a href=\"https://supabase.com/\" rel=\"ugc nofollow\" target=\"_blank\">Supabase</a>: For database hosting and management.</li>\n<li><a href=\"https://openai.com/\" rel=\"ugc nofollow\" target=\"_blank\">OpenAI</a>: For building the conversational AI agent.</li>\n</ul>\n</li>\n<li><strong>Configure Database Connection</strong>:\n<ul>\n<li>Set up a PostgreSQL database in Supabase.</li>\n<li>Use appropriate credentials (<code>username</code>, <code>password</code>, <code>host</code>, and <code>database</code> name) in your workflow.</li>\n</ul>\n</li>\n</ol>\n<h4>N8N Workflow</h4>\n<p>AI agent with tools:</p>\n<ol>\n<li><strong>Code Tool</strong>:\n<ul>\n<li>Execute SQL queries based on user input.</li>\n</ul>\n</li>\n<li><strong>Database Schema Tool</strong>:\n<ul>\n<li>Retrieve a list of all tables in the database.</li>\n<li>Use a predefined SQL query to fetch table definitions, including column names, types, and references.</li>\n</ul>\n</li>\n<li><strong>Table Definition</strong>:\n<ul>\n<li>Retrieve a list of columns with types for one table.</li>\n</ul>\n</li>\n</ol>\n</div><!--]-->",
  "readme_zh": "### 视频指南\n\n我制作了一份详细指南，完整展示了构建简历分析器的全流程。\n\n[![OPENAI 14.png](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773279/Youtube%20Thumbs/Chat%20With%20DB.png)](https://youtu.be/-GgKzhCNxjk)\n\n### 适用人群\n\n本工作流特别适合开发者、数据分析师和企业主，帮助他们实现与数据库的对话式交互。当用户需要提取、分析或汇总数据却不想手动编写SQL查询时，这个方案尤为实用。\n\n### 解决什么问题？\n\n传统数据库访问需要SQL专业知识或定制报表，耗时费力。本工作流通过AI智能代理，让用户能用自然语言与数据库对话。它能根据用户需求动态生成SQL查询，极大简化数据获取与分析流程。\n\n### 核心功能\n\n该工作流将OpenAI与Supabase数据库深度整合，AI代理可实现：\n  * 从数据库检索记录\n  * 解析分析表中存储的JSON数据\n  * 根据查询提供数据摘要、聚合统计或特定数据点\n\n三大技术亮点：\n1. **动态SQL生成**：将用户自然语言自动转换为可执行SQL\n2. **JSON结构解析**：通过样本记录识别JSON模式，实现高效字段分析\n3. **数据库架构探索**：自动获取表结构、字段属性及关联关系，确保查询精准性\n\n### 配置指南\n\n#### 准备工作\n1. **注册账号**：\n   * [N8N](https://n8n.partnerlinks.io/2hr10zpkki6a)：工作流自动化平台\n   * [Supabase](https://supabase.com/)：数据库托管服务\n   * [OpenAI](https://openai.com/)：构建对话式AI代理\n2. **数据库配置**：\n   * 在Supabase创建PostgreSQL数据库\n   * 在工作流中配置认证信息（用户名/密码/主机地址/数据库名）\n\n#### N8N工作流配置\nAI代理配备三大工具：\n1. **代码工具**：根据输入自动执行SQL查询\n2. **数据库架构工具**：\n   * 获取所有数据表清单\n   * 通过预置SQL查询表结构（含字段名/类型/关联关系）\n3. **表定义工具**：获取指定表的所有字段及类型信息",
  "title_zh": "与Supabase/PostgreSQL数据库对话的AI代理",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"id\": \"0a4e65b7-39be-44eb-8c66-913ebfe8a87a\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1140,\n        840\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 215,\n        \"height\": 80,\n        \"content\": \"**Replace password and username for Supabase**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2cea21fc-f3fe-47b7-a7b6-12acb0bc03ac\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -160,\n        320\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 280.2462120317618,\n        \"height\": 545.9087885077763,\n        \"content\": \"### 设置步骤\\n\\n#### 准备工作\\n1. **创建账户**：\\n   - [N8N](https://n8n.partnerlinks.io/2hr10zpkki6a)：用于工作流自动化。\\n   - [Supabase](https://supabase.com/)：用于数据库托管和管理。\\n   - [OpenAI](https://openai.com/)：用于构建对话式AI代理。\\n2. **配置数据库连接**：\\n   - 在Supabase中设置PostgreSQL数据库。\\n   - 在工作流中使用正确的凭据（`用户名`、`密码`、`主机`和`数据库`名称）。\\n\\n#### N8N工作流\\n\\n带工具的AI代理：\\n\\n1. **代码工具**：\\n   - 根据用户输入执行SQL查询。\\n2. **数据库模式工具**：\\n   - 检索数据库中所有表的列表。\\n   - 使用预定义的SQL查询获取表定义，包括列名、类型和引用关系。\\n3. **表定义工具**：\\n   - 检索单个表的列名及类型列表。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eacc0c8c-11d5-44fb-8ff1-10533a233693\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -160,\n        -200\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 636.2128494576581,\n        \"height\": 497.1532689930921,\n        \"content\": \"![5分钟Logo](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773200/Skool%20Assets/ejm3hqnvhgwpnu2fv92s.png)\\n## 与Supabase/PostgreSQL数据库对话的AI智能体\\n**由[5minAI社区](https://www.skool.com/5minai-2861)的[Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/)开发**\\n\\n传统数据库访问分析往往需要SQL专业知识或定制报表，耗时费力。本工作流通过AI智能体实现自然语言交互，能根据用户需求动态生成SQL查询，让数据检索分析变得简单高效。\\n\\n该方案将OpenAI与Supabase数据库深度集成，用户可通过AI智能体实现以下功能：\\n- 从数据库检索记录\\n- 解析分析表中存储的JSON数据\\n- 根据查询需求提供数据摘要、聚合统计或特定数据点\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"be1559ea-1f75-4e7c-9bdd-3add8d8be70b\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        140,\n        320\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 330.5152611046425,\n        \"height\": 239.5888196628349,\n        \"content\": \"### ...或观看安装视频 [20分钟]\\n[![YouTube缩略图](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773279/Youtube%20Thumbs/Chat%20With%20DB.png)](https://www.youtube.com/watch?v=-GgKzhCNxjk)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4ea87754-dead-49ea-848c-ed86c98e217b\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        720,\n        400\n      ],\n      \"webhookId\": \"6e95bc27-99a6-417c-8bf7-2831d7f7a4be\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"c20d6e57-eb41-4682-a7f5-5bb4323df476\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        760,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"zJhr5piyEwVnWtaI\",\n          \"name\": \"OpenAi club\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d3b1faf-643c-4070-996d-a59cb06e1827\",\n      \"name\": \"DB Schema\",\n      \"type\": \"n8n-nodes-base.postgresTool\",\n      \"position\": [\n        1180,\n        660\n      ],\n      \"parameters\": {\n        \"query\": \"SELECT table_schema, table_name\\nFROM information_schema.tables\\nWHERE table_type = 'BASE TABLE' AND table_schema = 'public';\",\n        \"options\": {},\n        \"operation\": \"executeQuery\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Get list of all tables in database\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"AO9cER6p8uX7V07T\",\n          \"name\": \"Postgres 5minai\"\n        }\n      },\n      \"typeVersion\": 2.5\n    },\n    {\n      \"id\": \"d9346ade-79d1-44c2-8fa6-b337ad8b0544\",\n      \"name\": \"Get table definition\",\n      \"type\": \"n8n-nodes-base.postgresTool\",\n      \"position\": [\n        1340,\n        660\n      ],\n      \"parameters\": {\n        \"query\": \"SELECT \\n    c.column_name,\\n    c.data_type,\\n    c.is_nullable,\\n    c.column_default,\\n    tc.constraint_type,\\n    ccu.table_name AS referenced_table,\\n    ccu.column_name AS referenced_column\\nFROM \\n    information_schema.columns c\\nLEFT JOIN \\n    information_schema.key_column_usage kcu \\n    ON c.table_name = kcu.table_name \\n    AND c.column_name = kcu.column_name\\nLEFT JOIN \\n    information_schema.table_constraints tc \\n    ON kcu.constraint_name = tc.constraint_name\\n    AND tc.constraint_type = 'FOREIGN KEY'\\nLEFT JOIN\\n    information_schema.constraint_column_usage ccu\\n    ON tc.constraint_name = ccu.constraint_name\\nWHERE \\n    c.table_name = '{{ $fromAI(\\\"table_name\\\") }}' -- Your table name\\n    AND c.table_schema = 'public' -- Ensure it's in the right schema\\nORDER BY \\n    c.ordinal_position;\\n\",\n        \"options\": {},\n        \"operation\": \"executeQuery\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Get table definition to find all columns and types.\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"AO9cER6p8uX7V07T\",\n          \"name\": \"Postgres 5minai\"\n        }\n      },\n      \"typeVersion\": 2.5\n    },\n    {\n      \"id\": \"b88a21e0-d2ff-4431-bd84-dfd43edeb5c4\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        960,\n        280\n      ],\n      \"parameters\": {\n        \"width\": 215,\n        \"height\": 80,\n        \"content\": \"**微调助手的提示词**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fbe9eb68-5990-485c-820f-08234ea33194\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        940,\n        400\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('When chat message received').item.json.chatInput }}\",\n        \"agent\": \"openAiFunctionsAgent\",\n        \"options\": {\n          \"systemMessage\": \"You are DB assistant. You need to run queries in DB aligned with user requests.\\n\\nRun custom SQL query to aggregate data and response to user.\\n\\nFetch all data to analyse it for response if needed.\\n\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"7f82d6d9-d7d6-4443-bbaa-c9b276a376e3\",\n      \"name\": \"Run SQL Query\",\n      \"type\": \"n8n-nodes-base.postgresTool\",\n      \"position\": [\n        1040,\n        660\n      ],\n      \"parameters\": {\n        \"query\": \"{{ $fromAI(\\\"query\\\",\\\"SQL query for PostgreSQL DB in Supabase\\\") }}\",\n        \"options\": {},\n        \"operation\": \"executeQuery\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Run custom SQL queries using knowledge about Output structure to provide needed response for user request.\\nUse ->> operator to extract JSON data.\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"AO9cER6p8uX7V07T\",\n          \"name\": \"Postgres 5minai\"\n        }\n      },\n      \"typeVersion\": 2.5\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"DB Schema\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Run SQL Query\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get table definition\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}