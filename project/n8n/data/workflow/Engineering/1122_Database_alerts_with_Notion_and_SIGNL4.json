{
  "title": "Database alerts with Notion and SIGNL4",
  "url": "https://n8n.io/workflows/1122-database-alerts-with-notion-and-signl4/",
  "category": "Engineering",
  "category_url": "https://n8n.io/workflows/categories/engineering/",
  "author": "Ron",
  "publish_date": "Last update 9 months ago",
  "publish_date_absolute": "2024-08-06",
  "content": "",
  "workflow_json": "{\"nodes\":[{\"name\":\"Function\",\"type\":\"n8n-nodes-base.function\",\"position\":[230,710],\"parameters\":{\"functionCode\":\"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\\nfor (item of items) {\\n  \\nvar type = \\\"Status\\\";\\n// Acknowledged\\nif ((item.json.body.alert.statusCode == 2)  && (item.json.body.eventType == 201)) {\\n    type = \\\"Acknowledged\\\";\\n}\\n// Closed\\nif ((item.json.body.alert.statusCode == 4) & (item.json.body.eventType == 201)) {\\n    type = \\\"Closed\\\";\\n}\\n// New Alert\\nif ((item.json.body.alert.statusCode == 1) & (item.json.body.eventType == 200)) {\\n    type = \\\"New Alert\\\";\\n}\\n\\n// No one on duty\\nif ((item.json.body.alert.statusCode == 16) & (item.json.body.eventType == 201)) {\\n    type = \\\"No one on duty\\\";\\n}\\n \\n// Annotation\\nvar annotation = \\\"\\\";\\nif ((item.json.body.eventType == 203) & (item.json.body.annotation != undefined) ) {\\n    type = \\\"Annotated\\\";\\n    annotation = item.json.body.annotation.message;\\n}\\nif (annotation != \\\"\\\") {\\n    annotation = \\\": \\\" + annotation;\\n}\\n \\nvar username = \\\"System\\\";\\nif (item.json.body.user != undefined) {\\n    username = item.json.body.user.username;\\n}\\n \\nvar data = type + \\\" by \\\" + username + annotation;\\n \\nitem.json.s4Status = data; //  + \\\": \\\" + JSON.stringify(item.json);\\n\\n\\nitem.json.s4Up = false;\\nif (type == \\\"Closed\\\") {\\n  item.json.s4Up = true;\\n}\\n\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!');\\n\\nreturn items;\\n\\n\\n\"},\"typeVersion\":1},{\"name\":\"Notion Trigger\",\"type\":\"n8n-nodes-base.notionTrigger\",\"disabled\":true,\"position\":[230,210],\"parameters\":{\"event\":\"pageAddedToDatabase\",\"pollTimes\":{\"item\":[{\"mode\":\"everyX\",\"unit\":\"minutes\",\"value\":1}]},\"databaseId\":\"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"},\"credentials\":{\"notionApi\":\"Notion\"},\"typeVersion\":1},{\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[50,710],\"webhookId\":\"95fd62c7-fc8c-4f6f-8441-bbf85a2da81a\",\"parameters\":{\"path\":\"95fd62c7-fc8c-4f6f-8441-bbf85a2da81a\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":1},{\"name\":\"Function\",\"type\":\"n8n-nodes-base.function\",\"position\":[230,710],\"parameters\":{\"functionCode\":\"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\\nfor (item of items) {\\n  \\nvar type = \\\"Status\\\";\\n// Acknowledged\\nif ((item.json.body.alert.statusCode == 2)  && (item.json.body.eventType == 201)) {\\n    type = \\\"Acknowledged\\\";\\n}\\n// Closed\\nif ((item.json.body.alert.statusCode == 4) & (item.json.body.eventType == 201)) {\\n    type = \\\"Closed\\\";\\n}\\n// New Alert\\nif ((item.json.body.alert.statusCode == 1) & (item.json.body.eventType == 200)) {\\n    type = \\\"New Alert\\\";\\n}\\n\\n// No one on duty\\nif ((item.json.body.alert.statusCode == 16) & (item.json.body.eventType == 201)) {\\n    type = \\\"No one on duty\\\";\\n}\\n \\n// Annotation\\nvar annotation = \\\"\\\";\\nif ((item.json.body.eventType == 203) & (item.json.body.annotation != undefined) ) {\\n    type = \\\"Annotated\\\";\\n    annotation = item.json.body.annotation.message;\\n}\\nif (annotation != \\\"\\\") {\\n    annotation = \\\": \\\" + annotation;\\n}\\n \\nvar username = \\\"System\\\";\\nif (item.json.body.user != undefined) {\\n    username = item.json.body.user.username;\\n}\\n \\nvar data = type + \\\" by \\\" + username + annotation;\\n \\nitem.json.s4Status = data; //  + \\\": \\\" + JSON.stringify(item.json);\\n\\n\\nitem.json.s4Up = false;\\nif (type == \\\"Closed\\\") {\\n  item.json.s4Up = true;\\n}\\n\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!');\\n\\nreturn items;\\n\\n\\n\"},\"typeVersion\":1},{\"name\":\"Notion Update\",\"type\":\"n8n-nodes-base.notion\",\"position\":[420,710],\"parameters\":{\"pageId\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"alert\\\"][\\\"externalEventId\\\"]}}\",\"resource\":\"databasePage\",\"operation\":\"update\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Description|rich_text\",\"peopleValue\":[],\"textContent\":\"={{$node[\\\"Function\\\"].json[\\\"s4Status\\\"]}}\",\"relationValue\":[],\"multiSelectValue\":[]}]}},\"credentials\":{\"notionApi\":\"Notion\"},\"typeVersion\":1},{\"name\":\"Interval\",\"type\":\"n8n-nodes-base.interval\",\"position\":[50,380],\"parameters\":{\"interval\":20},\"typeVersion\":1},{\"name\":\"SIGNL4 Resolve\",\"type\":\"n8n-nodes-base.signl4\",\"position\":[420,540],\"parameters\":{\"operation\":\"resolve\",\"externalId\":\"={{$node[\\\"Notion Read Open\\\"].json[\\\"id\\\"]}}\"},\"credentials\":{\"signl4Api\":\"SIGNL4\"},\"typeVersion\":1},{\"name\":\"SIGNL4 Alert\",\"type\":\"n8n-nodes-base.signl4\",\"position\":[420,210],\"parameters\":{\"message\":\"=Machine Alert: {{$node[\\\"Notion Trigger\\\"].json[\\\"Name\\\"]}}\",\"additionalFields\":{\"title\":\"n8n Alert\",\"externalId\":\"={{$node[\\\"Notion Trigger\\\"].json[\\\"id\\\"]}}\",\"locationFieldsUi\":{\"locationFieldsValues\":{\"latitude\":\"52.3992137\",\"longitude\":\"13.0583823\"}}}},\"credentials\":{\"signl4Api\":\"SIGNL4\"},\"typeVersion\":1},{\"name\":\"Notion Update Read\",\"type\":\"n8n-nodes-base.notion\",\"position\":[570,380],\"parameters\":{\"pageId\":\"={{$node[\\\"Notion Read New\\\"].json[\\\"id\\\"]}}\",\"resource\":\"databasePage\",\"operation\":\"update\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Read|checkbox\",\"peopleValue\":[],\"checkboxValue\":true,\"relationValue\":[],\"multiSelectValue\":[]}]}},\"credentials\":{\"notionApi\":\"Notion\"},\"typeVersion\":1},{\"name\":\"Notion Read Open\",\"type\":\"n8n-nodes-base.notion\",\"position\":[230,540],\"parameters\":{\"options\":{\"filter\":{\"multipleCondition\":{\"condition\":{\"and\":[{\"key\":\"Up|checkbox\",\"condition\":\"equals\",\"checkboxValue\":true,\"multiSelectValue\":[]},{\"key\":\"Read|checkbox\",\"condition\":\"equals\",\"checkboxValue\":true,\"multiSelectValue\":[]}]}}}},\"resource\":\"databasePage\",\"operation\":\"getAll\",\"databaseId\":\"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"},\"credentials\":{\"notionApi\":\"Notion\"},\"typeVersion\":1},{\"name\":\"Notion Read New\",\"type\":\"n8n-nodes-base.notion\",\"position\":[230,380],\"parameters\":{\"options\":{\"filter\":{\"multipleCondition\":{\"condition\":{\"and\":[{\"key\":\"Read|checkbox\",\"condition\":\"equals\",\"multiSelectValue\":[]},{\"key\":\"Up|checkbox\",\"condition\":\"equals\",\"multiSelectValue\":[]}]}}}},\"resource\":\"databasePage\",\"operation\":\"getAll\",\"databaseId\":\"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"},\"credentials\":{\"notionApi\":\"Notion\"},\"typeVersion\":1},{\"name\":\"Notion Update Final\",\"type\":\"n8n-nodes-base.notion\",\"position\":[570,540],\"parameters\":{\"pageId\":\"={{$node[\\\"Notion Read Open\\\"].json[\\\"id\\\"]}}\",\"resource\":\"databasePage\",\"operation\":\"update\",\"propertiesUi\":{\"propertyValues\":[{\"key\":\"Read|checkbox\",\"peopleValue\":[],\"relationValue\":[],\"multiSelectValue\":[]}]}},\"credentials\":{\"notionApi\":\"Notion\"},\"typeVersion\":1},{\"name\":\"SIGNL4 Alert 2\",\"type\":\"n8n-nodes-base.signl4\",\"position\":[420,380],\"parameters\":{\"message\":\"=Machine Alert: {{$node[\\\"Notion Read New\\\"].json[\\\"Name\\\"]}}\",\"additionalFields\":{\"title\":\"n8n Alert\",\"externalId\":\"={{$node[\\\"Notion Read New\\\"].json[\\\"id\\\"]}}\",\"locationFieldsUi\":{\"locationFieldsValues\":{\"latitude\":\"52.3992137\",\"longitude\":\"13.0583823\"}}}},\"credentials\":{\"signl4Api\":\"SIGNL4\"},\"typeVersion\":1}],\"connections\":{\"Webhook\":{\"main\":[[{\"node\":\"Function\",\"type\":\"main\",\"index\":0}]]},\"Function\":{\"main\":[[{\"node\":\"Notion Update\",\"type\":\"main\",\"index\":0}]]},\"Interval\":{\"main\":[[{\"node\":\"Notion Read Open\",\"type\":\"main\",\"index\":0},{\"node\":\"Notion Read New\",\"type\":\"main\",\"index\":0}]]},\"Notion Trigger\":{\"main\":[[{\"node\":\"SIGNL4 Alert\",\"type\":\"main\",\"index\":0}]]},\"SIGNL4 Alert 2\":{\"main\":[[{\"node\":\"Notion Update Read\",\"type\":\"main\",\"index\":0}]]},\"SIGNL4 Resolve\":{\"main\":[[{\"node\":\"Notion Update Final\",\"type\":\"main\",\"index\":0}]]},\"Notion Read New\":{\"main\":[[{\"node\":\"SIGNL4 Alert 2\",\"type\":\"main\",\"index\":0}]]},\"Notion Read Open\":{\"main\":[[{\"node\":\"SIGNL4 Resolve\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Objective\n\nIn industry and production sometimes machine data is available in databases. That might be sensor data like temperature or pressure or just binary information.  \nIn this sample flow reads machine data and sends an alert to your SIGNL4 team when the machine is down. When the machine is up again the alert in [SIGNL4](https://www.signl4.com/) will get closed automatically.\n\n## Setup\n\nWe simulate the machine data using a Notion table.\n\n![image.png](https://f000.backblazeb2.com/file/n8n-website-images/cca734a9ec4e47f593a79b27da833c41.png)  \nWhen we un-check the Up box we simulate a machine-down event. In certain intervals n8n checks the database for down items. If such an item has been found an alert is send using SIGNL4 and the item in Notion is updates (in order not to read it again).\n\nStatus updates from SIGNL4 (acknowledgement, close, annotation, escalation, etc.) are received via webhook and we update the Notion item accordingly.\n\nThis is how the alert looks like in the [SIGNL4](https://www.signl4.com/) app.\n\n![image.png](https://f000.backblazeb2.com/file/n8n-website-images/70b448beabf14890a3943a5dec5cf853.png)\n\nThe flow can be easily adapted to other database monitoring scenarios.\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>Objective</h2>\n<p>In industry and production sometimes machine data is available in databases. That might be sensor data like temperature or pressure or just binary information.<br>\nIn this sample flow reads machine data and sends an alert to your SIGNL4 team when the machine is down. When the machine is up again the alert in <a href=\"https://www.signl4.com/\" rel=\"ugc nofollow\" target=\"_blank\">SIGNL4</a> will get closed automatically.</p>\n<h2>Setup</h2>\n<p>We simulate the machine data using a Notion table.</p>\n<p><img src=\"https://f000.backblazeb2.com/file/n8n-website-images/cca734a9ec4e47f593a79b27da833c41.png\" alt=\"image.png\"><br>\nWhen we un-check the Up box we simulate a machine-down event. In certain intervals n8n checks the database for down items. If such an item has been found an alert is send using SIGNL4 and the item in Notion is updates (in order not to read it again).</p>\n<p></p>\n<p>Status updates from SIGNL4 (acknowledgement, close, annotation, escalation, etc.) are received via webhook and we update the Notion item accordingly.</p>\n<p>This is how the alert looks like in the <a href=\"https://www.signl4.com/\" rel=\"ugc nofollow\" target=\"_blank\">SIGNL4</a> app.</p>\n<p><img src=\"https://f000.backblazeb2.com/file/n8n-website-images/70b448beabf14890a3943a5dec5cf853.png\" alt=\"image.png\"></p>\n<p>The flow can be easily adapted to other database monitoring scenarios.</p>\n</div><!--]-->",
  "readme_zh": "## 目标\n\n在工业和生产环境中，机器数据通常存储在数据库中。这些数据可能是温度、压力等传感器数据，或是简单的二进制状态信息。  \n本示例流程通过读取机器数据，在设备停机时向您的SIGNL4团队发送告警。当机器恢复运行时，[SIGNL4](https://www.signl4.com/)平台上的告警将自动关闭。\n\n## 配置说明\n\n我们使用Notion表格模拟机器数据。\n\n![image.png](https://f000.backblazeb2.com/file/n8n-website-images/cca734a9ec4e47f593a79b27da833c41.png)  \n当取消勾选\"运行状态\"选框时，即模拟设备停机事件。n8n会定期检查数据库中的异常条目，发现停机记录后通过SIGNL4发送告警，并更新Notion中的条目状态（避免重复读取）。\n\n来自SIGNL4的状态更新（确认、关闭、批注、升级处理等）通过webhook接收，我们会相应更新Notion中的条目。\n\n下图展示[SIGNL4](https://www.signl4.com/)移动应用中的告警显示效果：\n\n![image.png](https://f000.backblazeb2.com/file/n8n-website-images/70b448beabf14890a3943a5dec5cf853.png)\n\n该流程可轻松适配其他数据库监控场景。",
  "title_zh": "使用Notion和SIGNL4实现数据库警报",
  "publish_date_zh": "最后更新于9个月前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        230,\n        710\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\\nfor (item of items) {\\n  \\nvar type = \\\"Status\\\";\\n// Acknowledged\\nif ((item.json.body.alert.statusCode == 2)  && (item.json.body.eventType == 201)) {\\n    type = \\\"Acknowledged\\\";\\n}\\n// Closed\\nif ((item.json.body.alert.statusCode == 4) & (item.json.body.eventType == 201)) {\\n    type = \\\"Closed\\\";\\n}\\n// New Alert\\nif ((item.json.body.alert.statusCode == 1) & (item.json.body.eventType == 200)) {\\n    type = \\\"New Alert\\\";\\n}\\n\\n// No one on duty\\nif ((item.json.body.alert.statusCode == 16) & (item.json.body.eventType == 201)) {\\n    type = \\\"No one on duty\\\";\\n}\\n \\n// Annotation\\nvar annotation = \\\"\\\";\\nif ((item.json.body.eventType == 203) & (item.json.body.annotation != undefined) ) {\\n    type = \\\"Annotated\\\";\\n    annotation = item.json.body.annotation.message;\\n}\\nif (annotation != \\\"\\\") {\\n    annotation = \\\": \\\" + annotation;\\n}\\n \\nvar username = \\\"System\\\";\\nif (item.json.body.user != undefined) {\\n    username = item.json.body.user.username;\\n}\\n \\nvar data = type + \\\" by \\\" + username + annotation;\\n \\nitem.json.s4Status = data; //  + \\\": \\\" + JSON.stringify(item.json);\\n\\n\\nitem.json.s4Up = false;\\nif (type == \\\"Closed\\\") {\\n  item.json.s4Up = true;\\n}\\n\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!');\\n\\nreturn items;\\n\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Trigger\",\n      \"type\": \"n8n-nodes-base.notionTrigger\",\n      \"disabled\": true,\n      \"position\": [\n        230,\n        210\n      ],\n      \"parameters\": {\n        \"event\": \"pageAddedToDatabase\",\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyX\",\n              \"unit\": \"minutes\",\n              \"value\": 1\n            }\n          ]\n        },\n        \"databaseId\": \"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        50,\n        710\n      ],\n      \"webhookId\": \"95fd62c7-fc8c-4f6f-8441-bbf85a2da81a\",\n      \"parameters\": {\n        \"path\": \"95fd62c7-fc8c-4f6f-8441-bbf85a2da81a\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        230,\n        710\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\\nfor (item of items) {\\n  \\nvar type = \\\"Status\\\";\\n// Acknowledged\\nif ((item.json.body.alert.statusCode == 2)  && (item.json.body.eventType == 201)) {\\n    type = \\\"Acknowledged\\\";\\n}\\n// Closed\\nif ((item.json.body.alert.statusCode == 4) & (item.json.body.eventType == 201)) {\\n    type = \\\"Closed\\\";\\n}\\n// New Alert\\nif ((item.json.body.alert.statusCode == 1) & (item.json.body.eventType == 200)) {\\n    type = \\\"New Alert\\\";\\n}\\n\\n// No one on duty\\nif ((item.json.body.alert.statusCode == 16) & (item.json.body.eventType == 201)) {\\n    type = \\\"No one on duty\\\";\\n}\\n \\n// Annotation\\nvar annotation = \\\"\\\";\\nif ((item.json.body.eventType == 203) & (item.json.body.annotation != undefined) ) {\\n    type = \\\"Annotated\\\";\\n    annotation = item.json.body.annotation.message;\\n}\\nif (annotation != \\\"\\\") {\\n    annotation = \\\": \\\" + annotation;\\n}\\n \\nvar username = \\\"System\\\";\\nif (item.json.body.user != undefined) {\\n    username = item.json.body.user.username;\\n}\\n \\nvar data = type + \\\" by \\\" + username + annotation;\\n \\nitem.json.s4Status = data; //  + \\\": \\\" + JSON.stringify(item.json);\\n\\n\\nitem.json.s4Up = false;\\nif (type == \\\"Closed\\\") {\\n  item.json.s4Up = true;\\n}\\n\\n}\\n\\n// You can write logs to the browser console\\nconsole.log('Done!');\\n\\nreturn items;\\n\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Update\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        420,\n        710\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"alert\\\"][\\\"externalEventId\\\"]}}\",\n        \"resource\": \"databasePage\",\n        \"operation\": \"update\",\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Description|rich_text\",\n              \"peopleValue\": [],\n              \"textContent\": \"={{$node[\\\"Function\\\"].json[\\\"s4Status\\\"]}}\",\n              \"relationValue\": [],\n              \"multiSelectValue\": []\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Interval\",\n      \"type\": \"n8n-nodes-base.interval\",\n      \"position\": [\n        50,\n        380\n      ],\n      \"parameters\": {\n        \"interval\": 20\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SIGNL4 Resolve\",\n      \"type\": \"n8n-nodes-base.signl4\",\n      \"position\": [\n        420,\n        540\n      ],\n      \"parameters\": {\n        \"operation\": \"resolve\",\n        \"externalId\": \"={{$node[\\\"Notion Read Open\\\"].json[\\\"id\\\"]}}\"\n      },\n      \"credentials\": {\n        \"signl4Api\": \"SIGNL4\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SIGNL4 Alert\",\n      \"type\": \"n8n-nodes-base.signl4\",\n      \"position\": [\n        420,\n        210\n      ],\n      \"parameters\": {\n        \"message\": \"=Machine Alert: {{$node[\\\"Notion Trigger\\\"].json[\\\"Name\\\"]}}\",\n        \"additionalFields\": {\n          \"title\": \"n8n Alert\",\n          \"externalId\": \"={{$node[\\\"Notion Trigger\\\"].json[\\\"id\\\"]}}\",\n          \"locationFieldsUi\": {\n            \"locationFieldsValues\": {\n              \"latitude\": \"52.3992137\",\n              \"longitude\": \"13.0583823\"\n            }\n          }\n        }\n      },\n      \"credentials\": {\n        \"signl4Api\": \"SIGNL4\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Update Read\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        570,\n        380\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{$node[\\\"Notion Read New\\\"].json[\\\"id\\\"]}}\",\n        \"resource\": \"databasePage\",\n        \"operation\": \"update\",\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Read|checkbox\",\n              \"peopleValue\": [],\n              \"checkboxValue\": true,\n              \"relationValue\": [],\n              \"multiSelectValue\": []\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Read Open\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        230,\n        540\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"filter\": {\n            \"multipleCondition\": {\n              \"condition\": {\n                \"and\": [\n                  {\n                    \"key\": \"Up|checkbox\",\n                    \"condition\": \"equals\",\n                    \"checkboxValue\": true,\n                    \"multiSelectValue\": []\n                  },\n                  {\n                    \"key\": \"Read|checkbox\",\n                    \"condition\": \"equals\",\n                    \"checkboxValue\": true,\n                    \"multiSelectValue\": []\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"databaseId\": \"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Read New\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        230,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"filter\": {\n            \"multipleCondition\": {\n              \"condition\": {\n                \"and\": [\n                  {\n                    \"key\": \"Read|checkbox\",\n                    \"condition\": \"equals\",\n                    \"multiSelectValue\": []\n                  },\n                  {\n                    \"key\": \"Up|checkbox\",\n                    \"condition\": \"equals\",\n                    \"multiSelectValue\": []\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"resource\": \"databasePage\",\n        \"operation\": \"getAll\",\n        \"databaseId\": \"0f26823d-f509-43bb-b0e9-e9bb4ab91217\"\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Notion Update Final\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        570,\n        540\n      ],\n      \"parameters\": {\n        \"pageId\": \"={{$node[\\\"Notion Read Open\\\"].json[\\\"id\\\"]}}\",\n        \"resource\": \"databasePage\",\n        \"operation\": \"update\",\n        \"propertiesUi\": {\n          \"propertyValues\": [\n            {\n              \"key\": \"Read|checkbox\",\n              \"peopleValue\": [],\n              \"relationValue\": [],\n              \"multiSelectValue\": []\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"notionApi\": \"Notion\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SIGNL4 Alert 2\",\n      \"type\": \"n8n-nodes-base.signl4\",\n      \"position\": [\n        420,\n        380\n      ],\n      \"parameters\": {\n        \"message\": \"=Machine Alert: {{$node[\\\"Notion Read New\\\"].json[\\\"Name\\\"]}}\",\n        \"additionalFields\": {\n          \"title\": \"n8n Alert\",\n          \"externalId\": \"={{$node[\\\"Notion Read New\\\"].json[\\\"id\\\"]}}\",\n          \"locationFieldsUi\": {\n            \"locationFieldsValues\": {\n              \"latitude\": \"52.3992137\",\n              \"longitude\": \"13.0583823\"\n            }\n          }\n        }\n      },\n      \"credentials\": {\n        \"signl4Api\": \"SIGNL4\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion Update\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Interval\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion Read Open\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Notion Read New\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notion Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SIGNL4 Alert\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SIGNL4 Alert 2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion Update Read\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SIGNL4 Resolve\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion Update Final\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notion Read New\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SIGNL4 Alert 2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notion Read Open\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SIGNL4 Resolve\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}