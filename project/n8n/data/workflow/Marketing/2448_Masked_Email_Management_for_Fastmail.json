{
  "title": "Masked Email Management for Fastmail",
  "url": "https://n8n.io/workflows/2448-masked-email-management-for-fastmail/",
  "category": "Marketing",
  "category_url": "https://n8n.io/workflows/categories/marketing/?sort=createdAt:desc",
  "author": "Vitali",
  "publish_date": "Last update 7 months ago",
  "publish_date_absolute": "2024-10-18",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"04ab549d8bbb435ec33b81e4e29965c46cf6f0f9e7afe631018b5e34c8eead58\"},\"nodes\":[{\"id\":\"b1b6eb50-9d42-484d-9488-0607be2143d8\",\"name\":\"Session\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-160,-200],\"parameters\":{\"url\":\"https://api.fastmail.com/jmap/session\",\"options\":{},\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"BWkbkxgDD4hkRCvs\",\"name\":\"Fastmail Masked E-Mail Addresses\"}},\"typeVersion\":4.2},{\"id\":\"aca05a94-07dd-4408-8d87-47e788a5f0a8\",\"name\":\"get all masked emails\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"https://api.fastmail.com/.well-known/jmap\\n\\nhttps://api.fastmail.com/jmap/session\",\"position\":[700,-200],\"parameters\":{\"url\":\"https://api.fastmail.com/jmap/api/\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"using\\\": [\\\"urn:ietf:params:jmap:core\\\", \\\"https://www.fastmail.com/dev/maskedemail\\\"],\\n  \\\"methodCalls\\\": [\\n    [\\n      \\\"MaskedEmail/get\\\",\\n      {\\n        \\\"accountId\\\": \\\"{{ $('Session').item.json.primaryAccounts['https://www.fastmail.com/dev/maskedemail'] }}\\\"\\n      },\\n      \\\"c1\\\"\\n    ]\\n  ]\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"BWkbkxgDD4hkRCvs\",\"name\":\"Fastmail Masked E-Mail Addresses\"}},\"typeVersion\":4.2},{\"id\":\"c4337bb4-1c16-4381-abe4-f0699099f326\",\"name\":\"create random masked email\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"https://api.fastmail.com/.well-known/jmap\\n\\nhttps://api.fastmail.com/jmap/session\",\"position\":[540,40],\"parameters\":{\"url\":\"https://api.fastmail.com/jmap/api/\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"using\\\": [\\n    \\\"urn:ietf:params:jmap:core\\\",\\n    \\\"https://www.fastmail.com/dev/maskedemail\\\"\\n  ],\\n  \\\"methodCalls\\\": [\\n    [\\n      \\\"MaskedEmail/set\\\",\\n      {\\n        \\\"accountId\\\": \\\"{{ $('Session').item.json.primaryAccounts['https://www.fastmail.com/dev/maskedemail'] }}\\\",\\n        \\\"create\\\": {\\n          \\\"maskedEmailId1\\\": {\\n            \\\"description\\\": \\\"Test via N8n\\\",\\n            \\\"state\\\": \\\"{{ $('Webhook').item.json.body.state }}\\\",\\n            \\\"id\\\": \\\"{{ $('Webhook').item.json.body.id }}\\\",\\n            \\\"email\\\": \\\"{{ $('Webhook').item.json.body.email }}\\\"\\n          }\\n        }\\n      },\\n      \\\"c1\\\"\\n    ]\\n  ]\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"BWkbkxgDD4hkRCvs\",\"name\":\"Fastmail Masked E-Mail Addresses\"}},\"typeVersion\":4.2},{\"id\":\"bbfae2d8-d23a-4244-8566-c3da9cc2e34d\",\"name\":\"Respond to Webhook\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[1320,-200],\"parameters\":{\"options\":{},\"respondWith\":\"text\",\"responseBody\":\"={{ $json.html }}\"},\"typeVersion\":1.1},{\"id\":\"af8ac7a4-116f-41ef-b6c0-72006fb47474\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"position\":[60,-200],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"pending\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('Webhook').item.json.body.state }}\",\"rightValue\":\"pending\"}]},\"renameOutput\":true},{\"outputKey\":\"enabled\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"56e6f1b8-0331-4c2d-aa90-e639752cfa9d\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('Webhook').item.json.body.state }}\",\"rightValue\":\"enabled\"}]},\"renameOutput\":true},{\"outputKey\":\"deleted\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"32f59847-a58c-4d8b-b1ae-48b8d4dad1a3\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('Webhook').item.json.body.state }}\",\"rightValue\":\"deleted\"}]},\"renameOutput\":true},{\"outputKey\":\"disabled\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"cc39f7c0-3960-49d9-ae21-9f1f35714015\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('Webhook').item.json.body.state }}\",\"rightValue\":\"disabled\"}]},\"renameOutput\":true}]},\"options\":{\"fallbackOutput\":\"extra\"}},\"typeVersion\":3.2},{\"id\":\"ceca9fc2-e2f4-4578-8313-c987d08e9393\",\"name\":\"disabled\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"https://api.fastmail.com/.well-known/jmap\\n\\nhttps://api.fastmail.com/jmap/session\",\"position\":[540,500],\"parameters\":{\"url\":\"https://api.fastmail.com/jmap/api/\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"using\\\": [\\n    \\\"urn:ietf:params:jmap:core\\\",\\n    \\\"https://www.fastmail.com/dev/maskedemail\\\"\\n  ],\\n  \\\"methodCalls\\\": [\\n    [\\n      \\\"MaskedEmail/set\\\",\\n      {\\n        \\\"accountId\\\": \\\"{{ $('Session').item.json.primaryAccounts['https://www.fastmail.com/dev/maskedemail'] }}\\\",\\n        \\\"update\\\": {\\n          \\\"{{ $('Webhook').item.json.body.id }}\\\": {\\n            \\\"state\\\": \\\"{{ $('Webhook').item.json.body.state }}\\\"\\n          }\\n        }\\n      },\\n      \\\"c1\\\"\\n    ]\\n  ]\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"BWkbkxgDD4hkRCvs\",\"name\":\"Fastmail Masked E-Mail Addresses\"}},\"typeVersion\":4.2},{\"id\":\"c0467dec-a29e-42a0-8f81-fb12b0428974\",\"name\":\"delete\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"https://api.fastmail.com/.well-known/jmap\\n\\nhttps://api.fastmail.com/jmap/session\",\"position\":[540,280],\"parameters\":{\"url\":\"https://api.fastmail.com/jmap/api/\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n    \\\"using\\\": [\\n      \\\"urn:ietf:params:jmap:core\\\",\\n      \\\"https://www.fastmail.com/dev/maskedemail\\\"\\n    ],\\n    \\\"methodCalls\\\": [\\n      [\\n        \\\"MaskedEmail/set\\\",\\n        {\\n          \\\"accountId\\\": \\\"{{ $('Session').item.json.primaryAccounts['https://www.fastmail.com/dev/maskedemail'] }}\\\",\\n          \\\"destroy\\\": [\\n            \\\"{{ $('Webhook').item.json.body.id }}\\\"\\n          ]\\n        },\\n        \\\"c1\\\"\\n      ]\\n    ]\\n  }\\n  \",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"BWkbkxgDD4hkRCvs\",\"name\":\"Fastmail Masked E-Mail Addresses\"}},\"typeVersion\":4.2},{\"id\":\"be0cdbe5-4607-44d5-8c51-7f8f1dcb4551\",\"name\":\"gather masked email list\",\"type\":\"n8n-nodes-base.set\",\"position\":[920,-200],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"06210f93-1b2b-4bad-8a1d-263e57f651ca\",\"name\":\"data\",\"type\":\"array\",\"value\":\"={{ $json.methodResponses[0][1].list }}\"}]}},\"typeVersion\":3.4},{\"id\":\"bd4134cf-b684-4b6e-bb58-a70ff068e2fd\",\"name\":\"create html template\",\"type\":\"n8n-nodes-base.html\",\"position\":[1120,-200],\"parameters\":{\"html\":\"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Masked Email Addresses</title>\\n    <style>\\n        body {\\n            font-family: Arial, sans-serif;\\n            margin: 40px;\\n            backgrouand-color: #f4f4f9;\\n        }\\n        h1 {\\n            text-align: center;\\n            color: #333;\\n        }\\n        .button-container, .filter-container, .table-container {\\n            margin-bottom: 20px;\\n            text-align: center;\\n        }\\n        button {\\n            padding: 10px 20px;\\n            margin: 0 10px;\\n            font-size: 0.875em;\\n            cursor: pointer;\\n            background-color: #4CAF50;\\n            color: white;\\n            border: none;\\n            border-radius: 3px;\\n        }\\n        .delete-button {\\n            background-color: #f44336;\\n        }\\n        .disabled-button {\\n            background-color: #ffa500;\\n        }\\n        select {\\n            padding: 10px;\\n            font-size: 0.875em;\\n        }\\n        table {\\n            width: 100%;\\n            border-collapse: collapse;\\n            margin: 20px 0;\\n            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n            background: #fff;\\n        }\\n        th, td {\\n            border: 1px solid #ddd;\\n            padding: 12px 15px;\\n            text-align: left;\\n            white-space: nowrap; /* Prevent text from wrapping */\\n        }\\n        th {\\n            background-color: #f5f5f5;\\n            color: #333;\\n            text-transform: uppercase;\\n            letter-spacing: 0.1em;\\n            font-size: 0.875em;\\n        }\\n        tr:nth-child(even) {\\n            background-color: #f9f9f9;\\n        }\\n        tr:hover {\\n            background-color: #f1f1f1;\\n        }\\n        td {\\n            font-size: 0.875em;\\n        }\\n        .action-cell {\\n            display: flex;\\n            justify-content: flex-end;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <h1>Masked Email Addresses</h1>\\n    <div class=\\\"button-container\\\">\\n        <button id=\\\"add-pending\\\">Add Pending</button>\\n        <button id=\\\"add-enabled\\\">Add Enabled</button>\\n    </div>\\n    <div class=\\\"filter-container\\\">\\n        <label for=\\\"state-filter\\\">Filter by State: </label>\\n        <select id=\\\"state-filter\\\">\\n            <option value=\\\"all\\\">All</option>\\n        </select>\\n    </div>\\n    <div class=\\\"table-container\\\">\\n        <table>\\n            <thead>\\n                <tr>\\n                    <th>Email</th>\\n                    <th>Description</th>\\n                    <th>State</th>\\n                    <th>Created By</th>\\n                    <th>Created At</th>\\n                    <th>Last Message At</th>\\n                    <th>For Domain</th>\\n                    <th>ID</th>\\n                    <th>Actions</th>\\n                </tr>\\n            </thead>\\n            <tbody id=\\\"table-body\\\">\\n                <!-- Table rows will be populated here -->\\n            </tbody>\\n        </table>\\n    </div>\\n    <script>\\n        // Convert JSON string to object\\n        const responseString = `{{ $json.data.toJsonString() }}`;\\n        const maskedEmails = JSON.parse(responseString);\\n\\n        // Populate the table\\n        const tableBody = document.getElementById('table-body');\\n        const stateFilter = document.getElementById('state-filter');\\n\\n        // Extract unique states\\n        const uniqueStates = [...new Set(maskedEmails.map(email => email.state))];\\n        uniqueStates.forEach(state => {\\n            const option = document.createElement('option');\\n            option.value = state;\\n            option.textContent = state;\\n            stateFilter.appendChild(option);\\n        });\\n\\n        function populateTable(filteredEmails) {\\n            tableBody.innerHTML = ''; // Clear the table body\\n\\n            filteredEmails.forEach(email => {\\n                const row = document.createElement('tr');\\n\\n                // Populate table cells\\n                const cellKeys = ['email', 'description', 'state', 'createdBy', 'createdAt', 'lastMessageAt', 'forDomain', 'id'];\\n                cellKeys.forEach(key => {\\n                    const cell = document.createElement('td');\\n                    cell.textContent = email[key] !== null && email[key] !== undefined ? email[key] : 'N/A';\\n                    row.appendChild(cell);\\n                });\\n\\n                // Add action cell with delete and disable buttons\\n                const actionCell = document.createElement('td');\\n                actionCell.className = 'action-cell';\\n\\n                const deleteButton = document.createElement('button');\\n                deleteButton.className = 'delete-button';\\n                deleteButton.textContent = 'Delete';\\n                deleteButton.addEventListener('click', () => updateMaskedEmail(email.id, email.email, 'deleted'));\\n                actionCell.appendChild(deleteButton);\\n\\n                const disabledButton = document.createElement('button');\\n                disabledButton.className = 'disabled-button';\\n                disabledButton.textContent = 'Disable';\\n                disabledButton.addEventListener('click', () => updateMaskedEmail(email.id, email.email, 'disabled'));\\n                actionCell.appendChild(disabledButton);\\n\\n                row.appendChild(actionCell);\\n\\n                tableBody.appendChild(row);\\n            });\\n        }\\n\\n        // Initial population\\n        populateTable(maskedEmails);\\n\\n        // Add event listener to filter dropdown\\n        stateFilter.addEventListener('change', function() {\\n            const selectedState = this.value;\\n            const filteredEmails = selectedState === 'all' ? maskedEmails : maskedEmails.filter(email => email.state === selectedState);\\n            populateTable(filteredEmails);\\n        });\\n\\n        // Function to make POST request\\n        function createMaskedEmail(state) {\\n            fetch('/webhook/MaskedEmail', {\\n                method: 'POST',\\n                headers: {\\n                    'Content-Type': 'application/json'\\n                },\\n                body: JSON.stringify({ state: state })\\n            }).then(response => {\\n                if (response.ok) {\\n                    alert('New masked email created successfully!');\\n                    // Reload the page after successful creation\\n                    location.reload();\\n                } else {\\n                    alert('Error creating masked email');\\n                }\\n            }).catch(error => {\\n                alert('Error: ' + error);\\n            });\\n        }\\n\\n        // Function to update masked email\\n        function updateMaskedEmail(id, email, state) {\\n            fetch('/webhook/MaskedEmail', {\\n                method: 'POST',\\n                headers: {\\n                    'Content-Type': 'application/json'\\n                },\\n                body: JSON.stringify({ id: id, email: email, state: state })\\n            }).then(response => {\\n                if (response.ok) {\\n                    alert(`Masked email ${state} successfully!`);\\n                    // Reload the page after successful update\\n                    location.reload();\\n                } else {\\n                    alert(`Error ${state} masked email`);\\n                }\\n            }).catch(error => {\\n                alert('Error: ' + error);\\n            });\\n        }\\n\\n        // Event listeners for the buttons\\n        document.getElementById('add-pending').addEventListener('click', () => createMaskedEmail('pending'));\\n        document.getElementById('add-enabled').addEventListener('click', () => createMaskedEmail('enabled'));\\n\\n    </script>\\n</body>\\n</html>\"},\"typeVersion\":1.2},{\"id\":\"a19b8aa6-b139-4011-8027-4cb1e7bef065\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-460,-200],\"webhookId\":\"6eab7c57-8cb8-4f7e-be2d-e3c23a52683e\",\"parameters\":{\"path\":\"MaskedEmail\",\"options\":{},\"responseMode\":\"responseNode\",\"authentication\":\"basicAuth\",\"multipleMethods\":true},\"credentials\":{\"httpBasicAuth\":{\"id\":\"VqS7TcRinqn3Wsj6\",\"name\":\"Webhook\"}},\"typeVersion\":2},{\"id\":\"2c151e0a-1d67-4e84-8a6d-0e9cbe440b14\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-480,-20],\"parameters\":{\"width\":810.0000000000002,\"height\":1181.829268292685,\"content\":\"## Template Description\\n\\nThis n8n workflow is designed to manage Fastmail masked email addresses using the Fastmail API. The workflow provides the following functionalities:\\n\\n1. **Retrieve all masked emails**: Fetches all masked email addresses associated with the Fastmail account.\\n2. **Create masked email**: Allows creating a new masked email with a specified state (`pending`, `enabled`, etc.).\\n3. **Update masked email state**: Updates the state of a masked email such as enabling, disabling, or deleting it.\\n4. **Generate HTML template**: Constructs an HTML table to display the masked emails in a user-friendly format.\\n\\n## Steps to Make it Work\\n\\n1. **Webhook Node**: \\n   - This node listens for incoming requests to manage masked emails.\\n   - Needs Basic Authentication credentials to secure the endpoint.\\n\\n2. **Session Node**: \\n   - Sends a request to obtain session information from Fastmail's API.\\n   - Requires an HTTP Header Auth credential with your Fastmail API token.\\n\\n3. **Switch Node**: \\n   - Routes the workflow based on the state of the incoming masked email request (`pending`, `enabled`, `disabled`, `deleted`).\\n   \\n4. **HTTP Request Nodes**:\\n   - These nodes handle various Fastmail API calls for masked emails (get, set, update, delete).\\n   - All HTTP Request nodes require an HTTP Header Auth credential attached, using the Fastmail API token.\\n\\n5. **Set Node**: \\n   - Gathers the retrieved masked email list into an array for further processing.\\n\\n6. **HTML Node**: \\n   - Generates an HTML template to render the masked email addresses in a table format.\\n\\n7. **Respond to Webhook Node**: \\n   - Sends back the HTML table to the client in response to the webhook request.\\n\\n### Needed Credentials\\n\\n1. **Fastmail Masked E-Mail Addresses**:\\n   - An API token from Fastmail's API.\\n   - Each HTTP call to Fastmail requires this credential for authentication.\\n\\n## Note\\n\\n- Ensure that you correctly configure authentication for the API calls and webhook security.\\n- Use your actual Fastmail API credentials with the correct scope.\\n- The workflow assumes that the Fastmail API is correctly configured and accessible from your n8n instance.\\n- Update URLs and credentials IDs according to your n8n configuration.\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Switch\":{\"main\":[[{\"node\":\"create random masked email\",\"type\":\"main\",\"index\":0}],[{\"node\":\"create random masked email\",\"type\":\"main\",\"index\":0}],[{\"node\":\"delete\",\"type\":\"main\",\"index\":0}],[{\"node\":\"disabled\",\"type\":\"main\",\"index\":0}],[{\"node\":\"get all masked emails\",\"type\":\"main\",\"index\":0}]]},\"delete\":{\"main\":[[{\"node\":\"get all masked emails\",\"type\":\"main\",\"index\":0}]]},\"Session\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"Webhook\":{\"main\":[[{\"node\":\"Session\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Session\",\"type\":\"main\",\"index\":0}]]},\"disabled\":{\"main\":[[{\"node\":\"get all masked emails\",\"type\":\"main\",\"index\":0}]]},\"create html template\":{\"main\":[[{\"node\":\"Respond to Webhook\",\"type\":\"main\",\"index\":0}]]},\"get all masked emails\":{\"main\":[[{\"node\":\"gather masked email list\",\"type\":\"main\",\"index\":0}]]},\"gather masked email list\":{\"main\":[[{\"node\":\"create html template\",\"type\":\"main\",\"index\":0}]]},\"create random masked email\":{\"main\":[[{\"node\":\"get all masked emails\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Template Description\n\nThis n8n workflow is designed to manage Fastmail masked email addresses using the Fastmail API. The workflow provides the following functionalities:\n\n  1. **Retrieve all masked emails** : Fetches all masked email addresses associated with the Fastmail account.\n  2. **Create masked email** : Allows creating a new masked email with a specified state (`pending`, `enabled`, etc.).\n  3. **Update masked email state** : Updates the state of a masked email such as enabling, disabling, or deleting it.\n  4. **Generate HTML template** : Constructs an HTML table to display the masked emails in a user-friendly format.\n\n\n\n## Steps to Make it Work\n\n  1. **Webhook Node** :\n\n     * This node listens for incoming requests to manage masked emails.\n     * Needs Basic Authentication credentials to secure the endpoint.\n  2. **Session Node** :\n\n     * Sends a request to obtain session information from Fastmail's API.\n     * Requires an HTTP Header Auth credential with your Fastmail API token.\n  3. **Switch Node** :\n\n     * Routes the workflow based on the state of the incoming masked email request (`pending`, `enabled`, `disabled`, `deleted`).\n  4. **HTTP Request Nodes** :\n\n     * These nodes handle various Fastmail API calls for masked emails (get, set, update, delete).\n     * All HTTP Request nodes require an HTTP Header Auth credential attached, using the Fastmail API token.\n  5. **Set Node** :\n\n     * Gathers the retrieved masked email list into an array for further processing.\n  6. **HTML Node** :\n\n     * Generates an HTML template to render the masked email addresses in a table format.\n  7. **Respond to Webhook Node** :\n\n     * Sends back the HTML table to the client in response to the webhook request.\n\n\n\n### Needed Credentials\n\n  1. **Fastmail Masked E-Mail Addresses** : \n     * An API token from Fastmail's API.\n     * Each HTTP call to Fastmail requires this credential for authentication.\n\n\n\n## Note\n\n  * Ensure that you correctly configure authentication for the API calls and webhook security.\n  * Use your actual Fastmail API credentials with the correct scope.\n  * The workflow assumes that the Fastmail API is correctly configured and accessible from your n8n instance.\n  * Update URLs and credentials IDs according to your n8n configuration.\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>Template Description</h2>\n<p>This n8n workflow is designed to manage Fastmail masked email addresses using the Fastmail API. The workflow provides the following functionalities:</p>\n<ol>\n<li><strong>Retrieve all masked emails</strong>: Fetches all masked email addresses associated with the Fastmail account.</li>\n<li><strong>Create masked email</strong>: Allows creating a new masked email with a specified state (<code>pending</code>, <code>enabled</code>, etc.).</li>\n<li><strong>Update masked email state</strong>: Updates the state of a masked email such as enabling, disabling, or deleting it.</li>\n<li><strong>Generate HTML template</strong>: Constructs an HTML table to display the masked emails in a user-friendly format.</li>\n</ol>\n<h2>Steps to Make it Work</h2>\n<ol>\n<li>\n<p><strong>Webhook Node</strong>:</p>\n<ul>\n<li>This node listens for incoming requests to manage masked emails.</li>\n<li>Needs Basic Authentication credentials to secure the endpoint.</li>\n</ul>\n</li>\n<li>\n<p><strong>Session Node</strong>:</p>\n<ul>\n<li>Sends a request to obtain session information from Fastmail's API.</li>\n<li>Requires an HTTP Header Auth credential with your Fastmail API token.</li>\n</ul>\n</li>\n<li>\n<p><strong>Switch Node</strong>:</p>\n<ul>\n<li>Routes the workflow based on the state of the incoming masked email request (<code>pending</code>, <code>enabled</code>, <code>disabled</code>, <code>deleted</code>).</li>\n</ul>\n</li>\n<li>\n<p><strong>HTTP Request Nodes</strong>:</p>\n<ul>\n<li>These nodes handle various Fastmail API calls for masked emails (get, set, update, delete).</li>\n<li>All HTTP Request nodes require an HTTP Header Auth credential attached, using the Fastmail API token.</li>\n</ul>\n</li>\n<li>\n<p><strong>Set Node</strong>:</p>\n<ul>\n<li>Gathers the retrieved masked email list into an array for further processing.</li>\n</ul>\n</li>\n<li>\n<p><strong>HTML Node</strong>:</p>\n<ul>\n<li>Generates an HTML template to render the masked email addresses in a table format.</li>\n</ul>\n</li>\n<li>\n<p><strong>Respond to Webhook Node</strong>:</p>\n<ul>\n<li>Sends back the HTML table to the client in response to the webhook request.</li>\n</ul>\n</li>\n</ol>\n<h3>Needed Credentials</h3>\n<ol>\n<li><strong>Fastmail Masked E-Mail Addresses</strong>:\n<ul>\n<li>An API token from Fastmail's API.</li>\n<li>Each HTTP call to Fastmail requires this credential for authentication.</li>\n</ul>\n</li>\n</ol>\n<h2>Note</h2>\n<ul>\n<li>Ensure that you correctly configure authentication for the API calls and webhook security.</li>\n<li>Use your actual Fastmail API credentials with the correct scope.</li>\n<li>The workflow assumes that the Fastmail API is correctly configured and accessible from your n8n instance.</li>\n<li>Update URLs and credentials IDs according to your n8n configuration.</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "## Template Description\n\nThis n8n workflow is designed to manage Fastmail masked email addresses using the Fastmail API. The workflow provides the following functionalities:\n\n  1. **Retrieve all masked emails** : Fetches all masked email addresses associated with the Fastmail account.\n  2. **Create masked email** : Allows creating a new masked email with a specified state (`pending`, `enabled`, etc.).\n  3. **Update masked email state** : Updates the state of a masked email such as enabling, disabling, or deleting it.\n  4. **Generate HTML template** : Constructs an HTML table to display the masked emails in a user-friendly format.\n\n\n\n## Steps to Make it Work\n\n  1. **Webhook Node** :\n\n     * This node listens for incoming requests to manage masked emails.\n     * Needs Basic Authentication credentials to secure the endpoint.\n  2. **Session Node** :\n\n     * Sends a request to obtain session information from Fastmail's API.\n     * Requires an HTTP Header Auth credential with your Fastmail API token.\n  3. **Switch Node** :\n\n     * Routes the workflow based on the state of the incoming masked email request (`pending`, `enabled`, `disabled`, `deleted`).\n  4. **HTTP Request Nodes** :\n\n     * These nodes handle various Fastmail API calls for masked emails (get, set, update, delete).\n     * All HTTP Request nodes require an HTTP Header Auth credential attached, using the Fastmail API token.\n  5. **Set Node** :\n\n     * Gathers the retrieved masked email list into an array for further processing.\n  6. **HTML Node** :\n\n     * Generates an HTML template to render the masked email addresses in a table format.\n  7. **Respond to Webhook Node** :\n\n     * Sends back the HTML table to the client in response to the webhook request.\n\n\n\n### Needed Credentials\n\n  1. **Fastmail Masked E-Mail Addresses** : \n     * An API token from Fastmail's API.\n     * Each HTTP call to Fastmail requires this credential for authentication.\n\n\n\n## Note\n\n  * Ensure that you correctly configure authentication for the API calls and webhook security.\n  * Use your actual Fastmail API credentials with the correct scope.\n  * The workflow assumes that the Fastmail API is correctly configured and accessible from your n8n instance.\n  * Update URLs and credentials IDs according to your n8n configuration.\n\n\n",
  "title_zh": "Fastmail的匿名邮箱管理",
  "publish_date_zh": "最后更新于7个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"04ab549d8bbb435ec33b81e4e29965c46cf6f0f9e7afe631018b5e34c8eead58\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"b1b6eb50-9d42-484d-9488-0607be2143d8\",\n      \"name\": \"Session\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -160,\n        -200\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.fastmail.com/jmap/session\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"BWkbkxgDD4hkRCvs\",\n          \"name\": \"Fastmail Masked E-Mail Addresses\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"aca05a94-07dd-4408-8d87-47e788a5f0a8\",\n      \"name\": \"get all masked emails\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"https://api.fastmail.com/.well-known/jmap\\n\\nhttps://api.fastmail.com/jmap/session\",\n      \"position\": [\n        700,\n        -200\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.fastmail.com/jmap/api/\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"using\\\": [\\\"urn:ietf:params:jmap:core\\\", \\\"https://www.fastmail.com/dev/maskedemail\\\"],\\n  \\\"methodCalls\\\": [\\n    [\\n      \\\"MaskedEmail/get\\\",\\n      {\\n        \\\"accountId\\\": \\\"{{ $('Session').item.json.primaryAccounts['https://www.fastmail.com/dev/maskedemail'] }}\\\"\\n      },\\n      \\\"c1\\\"\\n    ]\\n  ]\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"BWkbkxgDD4hkRCvs\",\n          \"name\": \"Fastmail Masked E-Mail Addresses\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"c4337bb4-1c16-4381-abe4-f0699099f326\",\n      \"name\": \"create random masked email\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"https://api.fastmail.com/.well-known/jmap\\n\\nhttps://api.fastmail.com/jmap/session\",\n      \"position\": [\n        540,\n        40\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.fastmail.com/jmap/api/\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"using\\\": [\\n    \\\"urn:ietf:params:jmap:core\\\",\\n    \\\"https://www.fastmail.com/dev/maskedemail\\\"\\n  ],\\n  \\\"methodCalls\\\": [\\n    [\\n      \\\"MaskedEmail/set\\\",\\n      {\\n        \\\"accountId\\\": \\\"{{ $('Session').item.json.primaryAccounts['https://www.fastmail.com/dev/maskedemail'] }}\\\",\\n        \\\"create\\\": {\\n          \\\"maskedEmailId1\\\": {\\n            \\\"description\\\": \\\"Test via N8n\\\",\\n            \\\"state\\\": \\\"{{ $('Webhook').item.json.body.state }}\\\",\\n            \\\"id\\\": \\\"{{ $('Webhook').item.json.body.id }}\\\",\\n            \\\"email\\\": \\\"{{ $('Webhook').item.json.body.email }}\\\"\\n          }\\n        }\\n      },\\n      \\\"c1\\\"\\n    ]\\n  ]\\n}\\n\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"BWkbkxgDD4hkRCvs\",\n          \"name\": \"Fastmail Masked E-Mail Addresses\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"bbfae2d8-d23a-4244-8566-c3da9cc2e34d\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1320,\n        -200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"text\",\n        \"responseBody\": \"={{ $json.html }}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"af8ac7a4-116f-41ef-b6c0-72006fb47474\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        60,\n        -200\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"pending\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Webhook').item.json.body.state }}\",\n                    \"rightValue\": \"pending\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"enabled\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"56e6f1b8-0331-4c2d-aa90-e639752cfa9d\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Webhook').item.json.body.state }}\",\n                    \"rightValue\": \"enabled\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"deleted\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"32f59847-a58c-4d8b-b1ae-48b8d4dad1a3\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Webhook').item.json.body.state }}\",\n                    \"rightValue\": \"deleted\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"disabled\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"cc39f7c0-3960-49d9-ae21-9f1f35714015\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('Webhook').item.json.body.state }}\",\n                    \"rightValue\": \"disabled\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"ceca9fc2-e2f4-4578-8313-c987d08e9393\",\n      \"name\": \"disabled\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"https://api.fastmail.com/.well-known/jmap\\n\\nhttps://api.fastmail.com/jmap/session\",\n      \"position\": [\n        540,\n        500\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.fastmail.com/jmap/api/\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"using\\\": [\\n    \\\"urn:ietf:params:jmap:core\\\",\\n    \\\"https://www.fastmail.com/dev/maskedemail\\\"\\n  ],\\n  \\\"methodCalls\\\": [\\n    [\\n      \\\"MaskedEmail/set\\\",\\n      {\\n        \\\"accountId\\\": \\\"{{ $('Session').item.json.primaryAccounts['https://www.fastmail.com/dev/maskedemail'] }}\\\",\\n        \\\"update\\\": {\\n          \\\"{{ $('Webhook').item.json.body.id }}\\\": {\\n            \\\"state\\\": \\\"{{ $('Webhook').item.json.body.state }}\\\"\\n          }\\n        }\\n      },\\n      \\\"c1\\\"\\n    ]\\n  ]\\n}\\n\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"BWkbkxgDD4hkRCvs\",\n          \"name\": \"Fastmail Masked E-Mail Addresses\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"c0467dec-a29e-42a0-8f81-fb12b0428974\",\n      \"name\": \"delete\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"https://api.fastmail.com/.well-known/jmap\\n\\nhttps://api.fastmail.com/jmap/session\",\n      \"position\": [\n        540,\n        280\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.fastmail.com/jmap/api/\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"using\\\": [\\n      \\\"urn:ietf:params:jmap:core\\\",\\n      \\\"https://www.fastmail.com/dev/maskedemail\\\"\\n    ],\\n    \\\"methodCalls\\\": [\\n      [\\n        \\\"MaskedEmail/set\\\",\\n        {\\n          \\\"accountId\\\": \\\"{{ $('Session').item.json.primaryAccounts['https://www.fastmail.com/dev/maskedemail'] }}\\\",\\n          \\\"destroy\\\": [\\n            \\\"{{ $('Webhook').item.json.body.id }}\\\"\\n          ]\\n        },\\n        \\\"c1\\\"\\n      ]\\n    ]\\n  }\\n  \",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"BWkbkxgDD4hkRCvs\",\n          \"name\": \"Fastmail Masked E-Mail Addresses\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"be0cdbe5-4607-44d5-8c51-7f8f1dcb4551\",\n      \"name\": \"gather masked email list\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        -200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"06210f93-1b2b-4bad-8a1d-263e57f651ca\",\n              \"name\": \"data\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.methodResponses[0][1].list }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"bd4134cf-b684-4b6e-bb58-a70ff068e2fd\",\n      \"name\": \"create html template\",\n      \"type\": \"n8n-nodes-base.html\",\n      \"position\": [\n        1120,\n        -200\n      ],\n      \"parameters\": {\n        \"html\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Masked Email Addresses</title>\\n    <style>\\n        body {\\n            font-family: Arial, sans-serif;\\n            margin: 40px;\\n            backgrouand-color: #f4f4f9;\\n        }\\n        h1 {\\n            text-align: center;\\n            color: #333;\\n        }\\n        .button-container, .filter-container, .table-container {\\n            margin-bottom: 20px;\\n            text-align: center;\\n        }\\n        button {\\n            padding: 10px 20px;\\n            margin: 0 10px;\\n            font-size: 0.875em;\\n            cursor: pointer;\\n            background-color: #4CAF50;\\n            color: white;\\n            border: none;\\n            border-radius: 3px;\\n        }\\n        .delete-button {\\n            background-color: #f44336;\\n        }\\n        .disabled-button {\\n            background-color: #ffa500;\\n        }\\n        select {\\n            padding: 10px;\\n            font-size: 0.875em;\\n        }\\n        table {\\n            width: 100%;\\n            border-collapse: collapse;\\n            margin: 20px 0;\\n            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\n            background: #fff;\\n        }\\n        th, td {\\n            border: 1px solid #ddd;\\n            padding: 12px 15px;\\n            text-align: left;\\n            white-space: nowrap; /* Prevent text from wrapping */\\n        }\\n        th {\\n            background-color: #f5f5f5;\\n            color: #333;\\n            text-transform: uppercase;\\n            letter-spacing: 0.1em;\\n            font-size: 0.875em;\\n        }\\n        tr:nth-child(even) {\\n            background-color: #f9f9f9;\\n        }\\n        tr:hover {\\n            background-color: #f1f1f1;\\n        }\\n        td {\\n            font-size: 0.875em;\\n        }\\n        .action-cell {\\n            display: flex;\\n            justify-content: flex-end;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <h1>Masked Email Addresses</h1>\\n    <div class=\\\"button-container\\\">\\n        <button id=\\\"add-pending\\\">Add Pending</button>\\n        <button id=\\\"add-enabled\\\">Add Enabled</button>\\n    </div>\\n    <div class=\\\"filter-container\\\">\\n        <label for=\\\"state-filter\\\">Filter by State: </label>\\n        <select id=\\\"state-filter\\\">\\n            <option value=\\\"all\\\">All</option>\\n        </select>\\n    </div>\\n    <div class=\\\"table-container\\\">\\n        <table>\\n            <thead>\\n                <tr>\\n                    <th>Email</th>\\n                    <th>Description</th>\\n                    <th>State</th>\\n                    <th>Created By</th>\\n                    <th>Created At</th>\\n                    <th>Last Message At</th>\\n                    <th>For Domain</th>\\n                    <th>ID</th>\\n                    <th>Actions</th>\\n                </tr>\\n            </thead>\\n            <tbody id=\\\"table-body\\\">\\n                <!-- Table rows will be populated here -->\\n            </tbody>\\n        </table>\\n    </div>\\n    <script>\\n        // Convert JSON string to object\\n        const responseString = `{{ $json.data.toJsonString() }}`;\\n        const maskedEmails = JSON.parse(responseString);\\n\\n        // Populate the table\\n        const tableBody = document.getElementById('table-body');\\n        const stateFilter = document.getElementById('state-filter');\\n\\n        // Extract unique states\\n        const uniqueStates = [...new Set(maskedEmails.map(email => email.state))];\\n        uniqueStates.forEach(state => {\\n            const option = document.createElement('option');\\n            option.value = state;\\n            option.textContent = state;\\n            stateFilter.appendChild(option);\\n        });\\n\\n        function populateTable(filteredEmails) {\\n            tableBody.innerHTML = ''; // Clear the table body\\n\\n            filteredEmails.forEach(email => {\\n                const row = document.createElement('tr');\\n\\n                // Populate table cells\\n                const cellKeys = ['email', 'description', 'state', 'createdBy', 'createdAt', 'lastMessageAt', 'forDomain', 'id'];\\n                cellKeys.forEach(key => {\\n                    const cell = document.createElement('td');\\n                    cell.textContent = email[key] !== null && email[key] !== undefined ? email[key] : 'N/A';\\n                    row.appendChild(cell);\\n                });\\n\\n                // Add action cell with delete and disable buttons\\n                const actionCell = document.createElement('td');\\n                actionCell.className = 'action-cell';\\n\\n                const deleteButton = document.createElement('button');\\n                deleteButton.className = 'delete-button';\\n                deleteButton.textContent = 'Delete';\\n                deleteButton.addEventListener('click', () => updateMaskedEmail(email.id, email.email, 'deleted'));\\n                actionCell.appendChild(deleteButton);\\n\\n                const disabledButton = document.createElement('button');\\n                disabledButton.className = 'disabled-button';\\n                disabledButton.textContent = 'Disable';\\n                disabledButton.addEventListener('click', () => updateMaskedEmail(email.id, email.email, 'disabled'));\\n                actionCell.appendChild(disabledButton);\\n\\n                row.appendChild(actionCell);\\n\\n                tableBody.appendChild(row);\\n            });\\n        }\\n\\n        // Initial population\\n        populateTable(maskedEmails);\\n\\n        // Add event listener to filter dropdown\\n        stateFilter.addEventListener('change', function() {\\n            const selectedState = this.value;\\n            const filteredEmails = selectedState === 'all' ? maskedEmails : maskedEmails.filter(email => email.state === selectedState);\\n            populateTable(filteredEmails);\\n        });\\n\\n        // Function to make POST request\\n        function createMaskedEmail(state) {\\n            fetch('/webhook/MaskedEmail', {\\n                method: 'POST',\\n                headers: {\\n                    'Content-Type': 'application/json'\\n                },\\n                body: JSON.stringify({ state: state })\\n            }).then(response => {\\n                if (response.ok) {\\n                    alert('New masked email created successfully!');\\n                    // Reload the page after successful creation\\n                    location.reload();\\n                } else {\\n                    alert('Error creating masked email');\\n                }\\n            }).catch(error => {\\n                alert('Error: ' + error);\\n            });\\n        }\\n\\n        // Function to update masked email\\n        function updateMaskedEmail(id, email, state) {\\n            fetch('/webhook/MaskedEmail', {\\n                method: 'POST',\\n                headers: {\\n                    'Content-Type': 'application/json'\\n                },\\n                body: JSON.stringify({ id: id, email: email, state: state })\\n            }).then(response => {\\n                if (response.ok) {\\n                    alert(`Masked email ${state} successfully!`);\\n                    // Reload the page after successful update\\n                    location.reload();\\n                } else {\\n                    alert(`Error ${state} masked email`);\\n                }\\n            }).catch(error => {\\n                alert('Error: ' + error);\\n            });\\n        }\\n\\n        // Event listeners for the buttons\\n        document.getElementById('add-pending').addEventListener('click', () => createMaskedEmail('pending'));\\n        document.getElementById('add-enabled').addEventListener('click', () => createMaskedEmail('enabled'));\\n\\n    </script>\\n</body>\\n</html>\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a19b8aa6-b139-4011-8027-4cb1e7bef065\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -460,\n        -200\n      ],\n      \"webhookId\": \"6eab7c57-8cb8-4f7e-be2d-e3c23a52683e\",\n      \"parameters\": {\n        \"path\": \"MaskedEmail\",\n        \"options\": {},\n        \"responseMode\": \"responseNode\",\n        \"authentication\": \"basicAuth\",\n        \"multipleMethods\": true\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"VqS7TcRinqn3Wsj6\",\n          \"name\": \"Webhook\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2c151e0a-1d67-4e84-8a6d-0e9cbe440b14\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -480,\n        -20\n      ],\n      \"parameters\": {\n        \"width\": 810.0000000000002,\n        \"height\": 1181.829268292685,\n        \"content\": \"## 模板说明  \\n\\n本n8n工作流用于通过Fastmail API管理Fastmail的匿名邮箱地址，提供以下功能：  \\n\\n1. **获取所有匿名邮箱**：提取与Fastmail账户关联的所有匿名邮箱地址。  \\n2. **创建匿名邮箱**：允许以指定状态（如`pending`、`enabled`等）创建新的匿名邮箱。  \\n3. **更新匿名邮箱状态**：启用、禁用或删除匿名邮箱。  \\n4. **生成HTML模板**：构建HTML表格，以友好格式展示匿名邮箱列表。  \\n\\n## 配置步骤  \\n\\n1. **Webhook节点**：  \\n   - 监听处理匿名邮箱的请求。  \\n   - 需配置Basic Authentication凭证以保护接口安全。  \\n\\n2. **Session节点**：  \\n   - 向Fastmail API发送请求获取会话信息。  \\n   - 需配置HTTP Header Auth凭证（使用Fastmail API令牌）。  \\n\\n3. **Switch节点**：  \\n   - 根据匿名邮箱请求的状态（`pending`、`enabled`、`disabled`、`deleted`）路由工作流。  \\n\\n4. **HTTP请求节点**：  \\n   - 执行Fastmail API调用（获取、设置、更新、删除匿名邮箱）。  \\n   - 所有HTTP请求节点需附加HTTP Header Auth凭证（Fastmail API令牌）。  \\n\\n5. **Set节点**：  \\n   - 将获取的匿名邮箱列表整理为数组供后续处理。  \\n\\n6. **HTML节点**：  \\n   - 生成HTML模板，以表格形式呈现匿名邮箱地址。  \\n\\n7. **响应Webhook节点**：  \\n   - 将HTML表格作为响应返回给客户端。  \\n\\n### 所需凭证  \\n\\n1. **Fastmail匿名邮箱功能**：  \\n   - Fastmail API令牌。  \\n   - 每次调用Fastmail API均需此凭证认证。  \\n\\n## 注意事项  \\n\\n- 确保正确配置API调用和Webhook的安全认证。  \\n- 使用具有适当权限范围的Fastmail API凭证。  \\n- 本工作流假设Fastmail API已正确配置且可从n8n实例访问。  \\n- 根据实际n8n配置更新URL和凭证ID。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"create random masked email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"create random masked email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"delete\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"disabled\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"get all masked emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"delete\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"get all masked emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Session\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Session\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Session\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"disabled\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"get all masked emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"create html template\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get all masked emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"gather masked email list\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"gather masked email list\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"create html template\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"create random masked email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"get all masked emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}