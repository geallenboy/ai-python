{
  "title": "Find Top Keywords for Youtube And Google and Store them in NocoDB",
  "url": "https://n8n.io/workflows/2884-find-top-keywords-for-youtube-and-google-and-store-them-in-nocodb/",
  "category": "Marketing",
  "category_url": "https://n8n.io/workflows/categories/marketing/?sort=createdAt:desc",
  "author": "Shannon Atkinson",
  "publish_date": "Last update 3 months ago",
  "publish_date_absolute": "2025-02-19",
  "content": "",
  "workflow_json": "{\"id\":\"SHgOqN3ednIo5gNu\",\"meta\":{\"instanceId\":\"5fdeff34cb31eeba72e9ea7f1100a8cb9dfce8edcd1fd736c5a33060890e9b77\",\"templateCredsSetupCompleted\":true},\"name\":\"Find Top Keywords\",\"tags\":[],\"nodes\":[{\"id\":\"386c7972-34c2-4f51-9329-dee7f6a7511b\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-3440,760],\"parameters\":{},\"typeVersion\":1},{\"id\":\"3ebf40fd-acfd-4424-99c9-95ddaac74de3\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-3440,1040],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"0 */4 * * *\"}]}},\"typeVersion\":1.2},{\"id\":\"a24af92b-849d-48ee-aedd-6c7e75d9c902\",\"name\":\"Gen Time\",\"type\":\"n8n-nodes-base.code\",\"position\":[-3160,940],\"parameters\":{\"jsCode\":\"// Get today's date\\nconst today = new Date();\\n\\n// Subtract one day to get the previous day\\nconst yesterday = new Date(today);\\nyesterday.setDate(today.getDate() - 1);\\n\\n// Format the date as yyyy-mm-dd\\nconst year = yesterday.getFullYear();\\nconst month = String(yesterday.getMonth() + 1).padStart(2, '0'); // Month is zero-indexed\\nconst day = String(yesterday.getDate()).padStart(2, '0');\\n\\nconst formattedDate = `${year}-${month}-${day}`;\\n\\n// Set the formatted date to be used in a later node\\nreturn [{ json: { previousDay: formattedDate } }];\"},\"typeVersion\":2},{\"id\":\"f0807e09-1f8f-45ba-a6d3-d14ee3f96a9f\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-3540,600],\"parameters\":{\"width\":520,\"height\":780,\"content\":\"## Create time for yesterday and today. This will be used to gather and search for news articles within a specific range.\"},\"typeVersion\":1},{\"id\":\"c97b391b-1da1-4c62-9394-e83a49dae788\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-3020,600],\"parameters\":{\"color\":4,\"width\":280,\"height\":780,\"content\":\"## Grab a list of base keywords from NocoDB\"},\"typeVersion\":1},{\"id\":\"21e89f1c-7101-490a-89aa-a5a52e10d88a\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2740,600],\"parameters\":{\"width\":380,\"height\":780,\"content\":\"## Generate YouTube and Google Keywords from base keywords\"},\"typeVersion\":1},{\"id\":\"3b6e8b0e-dfdc-41d0-a387-00872c92faa1\",\"name\":\"NocoDB\",\"type\":\"n8n-nodes-base.nocoDb\",\"position\":[-2940,940],\"parameters\":{\"table\":\"mztryza8davdl48\",\"options\":{\"fields\":[\"keyword\"]},\"operation\":\"getAll\",\"projectId\":\"pbwiwe87uf1cpgc\",\"returnAll\":true,\"authentication\":\"nocoDbApiToken\"},\"credentials\":{\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"typeVersion\":3},{\"id\":\"fef9283e-886a-486b-a51f-0f459f4b18e0\",\"name\":\"Second Order Google Autocomplete Keywords\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-2620,800],\"parameters\":{\"url\":\"http://192.168.1.110:8000/google-search/autocomplete-keywords\",\"options\":{},\"sendQuery\":true,\"sendHeaders\":true,\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"input_keyword\",\"value\":\"={{ $('NocoDB').item.json.keyword }}\"},{\"name\":\"input_country\",\"value\":\"US\"},{\"name\":\"use_proxy\",\"value\":\"true\"},{\"name\":\"output\",\"value\":\"toolbar\"},{\"name\":\"spell\",\"value\":\"1\"},{\"name\":\"hl\",\"value\":\"en\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"accept\",\"value\":\"application/json\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"eNOOug9ODsbtfjBk\",\"name\":\"Social Flood API Key Local\"}},\"executeOnce\":false,\"typeVersion\":4.2},{\"id\":\"fad88d1e-a14e-4cc1-9ac1-dcc6126355c4\",\"name\":\"Google Search Volume\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-2020,800],\"parameters\":{\"url\":\"https://api.dataforseo.com/v3/keywords_data/google_ads/search_volume/live\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"=[\\n    {\\n        \\\"location_code\\\": 2840,\\n        \\\"language_code\\\": \\\"en\\\",\\n        \\\"keywords\\\": [{{ $json.keywords }}],\\n        \\\"date_from\\\": \\\"2021-08-01\\\",\\n        \\\"search_partners\\\": false \\n    }\\n]\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpBasicAuth\"},\"credentials\":{\"httpBasicAuth\":{\"id\":\"7k7huetjBCcDO7uR\",\"name\":\"Data for SEO Basic Auth\"}},\"executeOnce\":false,\"typeVersion\":4.2},{\"id\":\"dac54baa-6166-4fb6-a705-a45a91b993ed\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2360,600],\"parameters\":{\"color\":4,\"width\":500,\"height\":780,\"content\":\"## Query YouTube and Google Keyword search volume.\"},\"typeVersion\":1},{\"id\":\"753401aa-c78e-4dd1-b47f-b774bed8a6ce\",\"name\":\"Split Out Google Search\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[-1740,800],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"tasks[0].result\"},\"executeOnce\":false,\"typeVersion\":1},{\"id\":\"12f53197-a03e-4862-a6cf-d4feffd49b29\",\"name\":\"YouTube Search Volume\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-2020,1120],\"parameters\":{\"url\":\"https://api.dataforseo.com/v3/keywords_data/google_ads/search_volume/live\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"=[\\n    {\\n        \\\"location_code\\\": 2840,\\n        \\\"language_code\\\": \\\"en\\\",\\n        \\\"keywords\\\": [{{ $json.keywords }}],\\n        \\\"date_from\\\": \\\"2021-08-01\\\",\\n        \\\"search_partners\\\": true,\\n        \\\"sort_by\\\": \\\"search_volume\\\"\\n    }\\n]\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpBasicAuth\"},\"credentials\":{\"httpBasicAuth\":{\"id\":\"7k7huetjBCcDO7uR\",\"name\":\"Data for SEO Basic Auth\"}},\"executeOnce\":false,\"typeVersion\":4.2},{\"id\":\"d0173c03-c803-4c64-9c87-48a47952085f\",\"name\":\"Second Order YouTube Autocomplete Keywords\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-2620,1120],\"parameters\":{\"url\":\"http://192.168.1.110:8000/google-search/autocomplete-keywords\",\"options\":{\"redirect\":{\"redirect\":{}}},\"sendQuery\":true,\"sendHeaders\":true,\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"input_keyword\",\"value\":\"={{ $json.keyword }}\"},{\"name\":\"input_country\",\"value\":\"US\"},{\"name\":\"use_proxy\",\"value\":\"true\"},{\"name\":\"output\",\"value\":\"toolbar\"},{\"name\":\"spell\",\"value\":\"1\"},{\"name\":\"hl\",\"value\":\"en\"},{\"name\":\"ds\",\"value\":\"yt\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"accept\",\"value\":\"application/json\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"eNOOug9ODsbtfjBk\",\"name\":\"Social Flood API Key Local\"}},\"executeOnce\":false,\"typeVersion\":4.2},{\"id\":\"dfa987d0-c18c-44c4-9796-942404f49630\",\"name\":\"Split Out YT Search\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[-1740,1120],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"tasks[0].result\"},\"executeOnce\":false,\"typeVersion\":1},{\"id\":\"29196a5b-c46e-46f7-99ff-781a0d97c551\",\"name\":\"Google Filter\",\"type\":\"n8n-nodes-base.filter\",\"position\":[-1520,800],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"6e46fa28-2adf-47a0-bbf3-7a9b8b8413f7\",\"operator\":{\"type\":\"array\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.monthly_searches }}\",\"rightValue\":\"\"},{\"id\":\"45bca7c3-eac2-44e8-9993-b53200174003\",\"operator\":{\"type\":\"number\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.cpc }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"6b11b8e2-d6fb-45d7-817e-3e1038068696\",\"name\":\"YT Filter\",\"type\":\"n8n-nodes-base.filter\",\"position\":[-1520,1120],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"6e46fa28-2adf-47a0-bbf3-7a9b8b8413f7\",\"operator\":{\"type\":\"array\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.monthly_searches }}\",\"rightValue\":\"\"},{\"id\":\"45bca7c3-eac2-44e8-9993-b53200174003\",\"operator\":{\"type\":\"number\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.cpc }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"6d52836b-ce37-46c0-aa4b-7c2b917b9f1d\",\"name\":\"Add Second Tier YT Keyword Data\",\"type\":\"n8n-nodes-base.nocoDb\",\"position\":[-440,980],\"parameters\":{\"table\":\"m8bp2fnwtqsd2m7\",\"fieldsUi\":{\"fieldValues\":[{\"fieldName\":\"=keyword\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.keyword }}\"},{\"fieldName\":\"location_code\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.location_code }}\"},{\"fieldName\":\"language_code\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.language_code }}\"},{\"fieldName\":\"search_partners\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.search_partners }}\"},{\"fieldName\":\"competition\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.competition }}\"},{\"fieldName\":\"competition_index\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.competition_index }}\"},{\"fieldName\":\"cpc\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.cpc }}\"},{\"fieldName\":\"low_top_of_page_bid\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.low_top_of_page_bid }}\"},{\"fieldName\":\"high_top_of_page_bid\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.high_top_of_page_bid }}\"},{\"fieldName\":\"search_volume\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.search_volume }}\"}]},\"operation\":\"create\",\"projectId\":\"pbwiwe87uf1cpgc\",\"authentication\":\"nocoDbApiToken\"},\"credentials\":{\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"executeOnce\":false,\"retryOnFail\":true,\"typeVersion\":3},{\"id\":\"d4a72c2b-8c16-4f3e-80ad-1564ec8b33d4\",\"name\":\"Add Second Tier G Keyword Data\",\"type\":\"n8n-nodes-base.nocoDb\",\"position\":[-440,400],\"parameters\":{\"table\":\"mjmbcomto18scyi\",\"fieldsUi\":{\"fieldValues\":[{\"fieldName\":\"=keyword\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.keyword }}\"},{\"fieldName\":\"location_code\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.location_code }}\"},{\"fieldName\":\"language_code\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.language_code }}\"},{\"fieldName\":\"search_partners\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.search_partners }}\"},{\"fieldName\":\"competition\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.competition }}\"},{\"fieldName\":\"competition_index\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.competition_index }}\"},{\"fieldName\":\"cpc\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.cpc }}\"},{\"fieldName\":\"low_top_of_page_bid\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.low_top_of_page_bid }}\"},{\"fieldName\":\"high_top_of_page_bid\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.high_top_of_page_bid }}\"},{\"fieldName\":\"search_volume\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.search_volume }}\"}]},\"operation\":\"create\",\"projectId\":\"pbwiwe87uf1cpgc\",\"authentication\":\"nocoDbApiToken\"},\"credentials\":{\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"executeOnce\":false,\"retryOnFail\":true,\"typeVersion\":3},{\"id\":\"1fdaf0fc-5c11-406f-93fb-b4a7fd3b6eed\",\"name\":\"Format G Data\",\"type\":\"n8n-nodes-base.code\",\"position\":[-240,400],\"parameters\":{\"jsCode\":\"// Get the monthly search data from the \\\"Loop Over Google Keywords\\\" node\\nconst loopData = $node[\\\"Loop Over Google Keywords\\\"].json;\\nif (!loopData || !loopData.monthly_searches || !Array.isArray(loopData.monthly_searches)) {\\n  throw new Error(\\\"monthly_searches data is missing or not an array from Loop Over Google Keywords node.\\\");\\n}\\nconst monthlySearches = loopData.monthly_searches;\\n\\n// Get all items from the \\\"Add Second Tier G Keyword Data\\\" node\\nconst secondTierItems = $items(\\\"Add Second Tier G Keyword Data\\\");\\n\\nif (!secondTierItems || secondTierItems.length === 0) {\\n  throw new Error(\\\"No data found in Add Second Tier G Keyword Data node.\\\");\\n}\\n\\nconst results = [];\\n\\n// Loop through each second-tier item\\nsecondTierItems.forEach(itemWrapper => {\\n  const item = itemWrapper.json;\\n  // Validate that the required properties exist on the second-tier item.\\n  if (!item.keyword || item.Id === undefined) {\\n    throw new Error(\\\"A second tier item is missing 'keyword' or 'Id'.\\\");\\n  }\\n  \\n  // For each monthly search record, combine with the second-tier data\\n  monthlySearches.forEach(record => {\\n    // Validate that each monthly record has the required properties.\\n    if (record.year === undefined || record.month === undefined || record.search_volume === undefined) {\\n      throw new Error(\\\"A monthly search record is missing 'year', 'month', or 'search_volume'.\\\");\\n    }\\n    \\n    results.push({\\n      json: {\\n        keyword: item.keyword,\\n        google_keyword_id: item.Id,\\n        year: record.year,\\n        month: record.month,\\n        search_volume: record.search_volume,\\n        unique_id: `${record.year}-${record.month}-${item.keyword}`\\n      }\\n    });\\n  });\\n});\\n\\n// Chunk the results into batches of 1000 items each\\nconst batchSize = 1000;\\nconst batchedResults = [];\\n\\nfor (let i = 0; i < results.length; i += batchSize) {\\n  // Create a batch containing up to batchSize items\\n  const batchItems = results.slice(i, i + batchSize).map(item => item.json);\\n  batchedResults.push({\\n    json: {\\n      batch: batchItems\\n    }\\n  });\\n}\\n\\nreturn batchedResults;\\n\"},\"typeVersion\":2,\"alwaysOutputData\":false},{\"id\":\"7d654cf7-1223-4f10-8026-997f5418402e\",\"name\":\"Format YT Data\",\"type\":\"n8n-nodes-base.code\",\"position\":[-220,980],\"parameters\":{\"jsCode\":\"// Get the monthly search data from the \\\"Loop Over Google Keywords\\\" node\\nconst loopData = $node[\\\"Loop Over YT Keywords\\\"].json;\\nif (!loopData || !loopData.monthly_searches || !Array.isArray(loopData.monthly_searches)) {\\n  throw new Error(\\\"monthly_searches data is missing or not an array from Loop Over YT Keywords node.\\\");\\n}\\nconst monthlySearches = loopData.monthly_searches;\\n\\n// Get all items from the \\\"Add Second Tier G Keyword Data\\\" node\\nconst secondTierItems = $items(\\\"Add Second Tier YT Keyword Data\\\");\\n\\nif (!secondTierItems || secondTierItems.length === 0) {\\n  throw new Error(\\\"No data found in Add Second Tier YT Keyword Data node.\\\");\\n}\\n\\nconst results = [];\\n\\n// Loop through each second-tier item\\nsecondTierItems.forEach(itemWrapper => {\\n  const item = itemWrapper.json;\\n  // Validate that the required properties exist on the second-tier item.\\n  if (!item.keyword || item.Id === undefined) {\\n    throw new Error(\\\"A second tier item is missing 'keyword' or 'Id'.\\\");\\n  }\\n  \\n  // For each monthly search record, combine with the second-tier data\\n  monthlySearches.forEach(record => {\\n    // Validate that each monthly record has the required properties.\\n    if (record.year === undefined || record.month === undefined || record.search_volume === undefined) {\\n      throw new Error(\\\"A monthly search record is missing 'year', 'month', or 'search_volume'.\\\");\\n    }\\n    \\n    results.push({\\n      json: {\\n        keyword: item.keyword,\\n        google_keyword_id: item.Id,\\n        year: record.year,\\n        month: record.month,\\n        search_volume: record.search_volume,\\n        unique_id: `${record.year}-${record.month}-${item.keyword}`\\n      }\\n    });\\n  });\\n});\\n\\n// Chunk the results into batches of 1000 items each\\nconst batchSize = 1000;\\nconst batchedResults = [];\\n\\nfor (let i = 0; i < results.length; i += batchSize) {\\n  // Create a batch containing up to batchSize items\\n  const batchItems = results.slice(i, i + batchSize).map(item => item.json);\\n  batchedResults.push({\\n    json: {\\n      batch: batchItems\\n    }\\n  });\\n}\\n\\nreturn batchedResults;\\n\"},\"typeVersion\":2},{\"id\":\"67848762-a140-4c63-b8ca-e20331135741\",\"name\":\"Bulk Import G Monthly Search Volume\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[0,400],\"parameters\":{\"url\":\"http://192.168.1.186:8080/api/v2/tables/ma51kvf78diz0sg/records\",\"method\":\"POST\",\"options\":{\"batching\":{\"batch\":{\"batchSize\":1000}}},\"jsonBody\":\"={{ $json.batch }}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"nocoDbApiToken\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"eNOOug9ODsbtfjBk\",\"name\":\"Social Flood API Key Local\"},\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"retryOnFail\":true,\"typeVersion\":4.2},{\"id\":\"377b5470-9d9f-42e5-9528-fbf9fd3a1d77\",\"name\":\"Bulk Import YT Monthly Search Volume\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[40,980],\"parameters\":{\"url\":\"http://192.168.1.186:8080/api/v2/tables/ma51kvf78diz0sg/records\",\"method\":\"POST\",\"options\":{\"batching\":{\"batch\":{\"batchSize\":1000}}},\"jsonBody\":\"={{ $json.batch }}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"nocoDbApiToken\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"eNOOug9ODsbtfjBk\",\"name\":\"Social Flood API Key Local\"},\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"retryOnFail\":true,\"typeVersion\":4.2},{\"id\":\"6939afbf-b463-44fb-ab0b-45cbe81648eb\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1860,600],\"parameters\":{\"width\":540,\"height\":780,\"content\":\"## Process and filter Keywords for monthly traffic and CPC\"},\"typeVersion\":1},{\"id\":\"6fdbd7c3-75ca-4ed4-a5aa-3718bee0786f\",\"name\":\"Is Google Keyword Available\",\"type\":\"n8n-nodes-base.if\",\"position\":[-680,640],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"c4c4ed58-b14d-4973-93b2-4426fe314a2a\",\"operator\":{\"type\":\"number\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.pageInfo.totalRows }}\",\"rightValue\":0}]}},\"executeOnce\":false,\"typeVersion\":2.2},{\"id\":\"f10d1313-fdfb-4f58-921d-65f307afab4e\",\"name\":\"Is YT Keyword Avaliable\",\"type\":\"n8n-nodes-base.if\",\"position\":[-700,1260],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"c4c4ed58-b14d-4973-93b2-4426fe314a2a\",\"operator\":{\"type\":\"number\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.pageInfo.totalRows }}\",\"rightValue\":0}]}},\"executeOnce\":false,\"typeVersion\":2.2},{\"id\":\"c6c26129-fce0-4d98-a72a-662dcbc06ae0\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1320,320],\"parameters\":{\"color\":4,\"width\":1560,\"height\":1280,\"content\":\"## Add or update YouTube or Google Tables in NocoDB\\n\"},\"typeVersion\":1},{\"id\":\"a3c0ed20-f696-4ca6-a6fb-872cab8fbba5\",\"name\":\"Check for Google Keyword\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-900,640],\"parameters\":{\"url\":\"=http://192.168.1.186:8080/api/v2/tables/mjmbcomto18scyi/records?where=(keyword,eq,{{ $json.keyword }})\",\"options\":{\"batching\":{\"batch\":{\"batchSize\":1,\"batchInterval\":1}}},\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"nocoDbApiToken\"},\"credentials\":{\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"executeOnce\":false,\"retryOnFail\":true,\"typeVersion\":4.2},{\"id\":\"bb7cae83-8ff0-45d0-abca-d8d99efcfead\",\"name\":\"Check for YT Keyword\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-940,1260],\"parameters\":{\"url\":\"=http://192.168.1.186:8080/api/v2/tables/m8bp2fnwtqsd2m7/records/?where=(keyword,eq,{{ $json.keyword }})\",\"options\":{},\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"nocoDbApiToken\"},\"credentials\":{\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"executeOnce\":false,\"retryOnFail\":true,\"typeVersion\":4.2},{\"id\":\"e04d2f1c-45b6-4994-91a7-dc9f54a3fba8\",\"name\":\"Loop Over YT Keywords\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[-1180,1240],\"parameters\":{\"options\":{},\"batchSize\":1000},\"executeOnce\":false,\"typeVersion\":3},{\"id\":\"452a67b4-d30c-4732-abc4-8b3513ec31f6\",\"name\":\"Update Second Tier G Keyword Data\",\"type\":\"n8n-nodes-base.nocoDb\",\"position\":[-220,660],\"parameters\":{\"table\":\"mjmbcomto18scyi\",\"fieldsUi\":{\"fieldValues\":[{\"fieldName\":\"=keyword\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.keyword }}\"},{\"fieldName\":\"location_code\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.location_code }}\"},{\"fieldName\":\"language_code\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.language_code }}\"},{\"fieldName\":\"search_partners\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.search_partners }}\"},{\"fieldName\":\"competition\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.competition }}\"},{\"fieldName\":\"competition_index\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.competition_index }}\"},{\"fieldName\":\"cpc\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.cpc }}\"},{\"fieldName\":\"low_top_of_page_bid\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.low_top_of_page_bid }}\"},{\"fieldName\":\"high_top_of_page_bid\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.high_top_of_page_bid }}\"},{\"fieldName\":\"search_volume\",\"fieldValue\":\"={{ $('Split Out Google Search').item.json.search_volume }}\"},{\"fieldName\":\"id\",\"fieldValue\":\"={{ $json.list[0].Id }}\"}]},\"operation\":\"update\",\"projectId\":\"pbwiwe87uf1cpgc\",\"authentication\":\"nocoDbApiToken\"},\"credentials\":{\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"executeOnce\":false,\"retryOnFail\":true,\"typeVersion\":3},{\"id\":\"e50cc116-3b5b-4908-b0b6-8781360cb5f2\",\"name\":\"Update Second Tier YT Keyword Data\",\"type\":\"n8n-nodes-base.nocoDb\",\"position\":[-440,1280],\"parameters\":{\"table\":\"m8bp2fnwtqsd2m7\",\"fieldsUi\":{\"fieldValues\":[{\"fieldName\":\"=keyword\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.keyword }}\"},{\"fieldName\":\"location_code\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.location_code }}\"},{\"fieldName\":\"language_code\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.language_code }}\"},{\"fieldName\":\"search_partners\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.search_partners }}\"},{\"fieldName\":\"competition\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.competition }}\"},{\"fieldName\":\"competition_index\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.competition_index }}\"},{\"fieldName\":\"cpc\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.cpc }}\"},{\"fieldName\":\"low_top_of_page_bid\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.low_top_of_page_bid }}\"},{\"fieldName\":\"high_top_of_page_bid\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.high_top_of_page_bid }}\"},{\"fieldName\":\"search_volume\",\"fieldValue\":\"={{ $('Split Out YT Search').item.json.search_volume }}\"},{\"fieldName\":\"id\",\"fieldValue\":\"={{ $json.list[0].Id }}\"}]},\"operation\":\"update\",\"projectId\":\"pbwiwe87uf1cpgc\",\"authentication\":\"nocoDbApiToken\"},\"credentials\":{\"nocoDbApiToken\":{\"id\":\"LAbGsn1RMARiq5Gy\",\"name\":\"NocoDB Token account\"}},\"executeOnce\":false,\"retryOnFail\":true,\"typeVersion\":3},{\"id\":\"4ef57b89-913c-4e0e-8e60-675807ad6a5d\",\"name\":\"Loop Over Google Keywords\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[-1160,620],\"parameters\":{\"options\":{},\"batchSize\":1000},\"executeOnce\":false,\"typeVersion\":3},{\"id\":\"94fbe48b-22bf-4a15-9ef0-423b1dab586a\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-3540,1560],\"parameters\":{\"width\":1060,\"height\":380,\"content\":\"## Setup Instuctions: \\n### Required: NocoDB, N8N, [DataforSEO Account *aff*](https://app.dataforseo.com/?aff=184401), and [Social Flood Docker Instance](https://github.com/rainmanjam/social-flood)\\n### Tables for NocoDB\\n-- Base Keyword Search (Keyword)\\n-- Second Order Google Keywords( keyword, location_code, language_code, search_partners, competition, competition_index, search_volume, cpc, low_top_of_page, high_top_of_page)\\n-- Second Order YouTube Keywords( keyword, location_code, language_code, search_partners, competition, competition_index, search_volume, cpc, low_top_of_page, high_top_of_page)\\n-- Search Volume( unique_id, year, month, search_volume, youtube_keyword_id, google_keyword_id)\\n\"},\"typeVersion\":1},{\"id\":\"8429c63d-09e7-47ac-a11b-e5132d5ac832\",\"name\":\"Combine G Keywords and Filter\",\"type\":\"n8n-nodes-base.code\",\"position\":[-2300,800],\"parameters\":{\"jsCode\":\"// Gather all keywords from all items\\nlet allKeywords = [];\\n\\nfor (const item of items) {\\n  const keywordData = item.json.keyword_data;\\n  const keywords = Object.values(keywordData)\\n    .flatMap(section => Object.values(section))\\n    .flat();\\n\\n  allKeywords = allKeywords.concat(keywords);\\n}\\n\\n// Clean and transform the combined keywords\\nconst cleanedKeywords = allKeywords\\n  .filter(keyword => keyword.length <= 80)\\n  .filter(keyword => keyword.split(\\\" \\\").length <= 10)\\n  .map(keyword => keyword.replace(/[^a-zA-Z0-9\\\\s]/g, \\\"\\\"))\\n  .map(keyword => keyword.trim())\\n  .filter(keyword => keyword.length > 0)\\n  .map(keyword => `\\\"${keyword}\\\"`);\\n\\n// Remove duplicates\\nconst uniqueKeywords = Array.from(new Set(cleanedKeywords));\\n\\n// Split into batches of 1000\\nconst batchSize = 1000;\\nconst result = [];\\n\\nfor (let i = 0; i < uniqueKeywords.length; i += batchSize) {\\n  result.push({\\n    json: {\\n      keywords: uniqueKeywords.slice(i, i + batchSize).join(\\\", \\\")\\n    }\\n  });\\n}\\n\\n// Return as an array of objects\\nreturn result;\\n\"},\"typeVersion\":2},{\"id\":\"5aa39111-c1c1-440e-b0e8-ba5c54909a0d\",\"name\":\"Combine YT Keywords and Filter\",\"type\":\"n8n-nodes-base.code\",\"position\":[-2300,1120],\"parameters\":{\"jsCode\":\"// Gather all keywords from all items\\nlet allKeywords = [];\\n\\nfor (const item of items) {\\n  const keywordData = item.json.keyword_data;\\n  const keywords = Object.values(keywordData)\\n    .flatMap(section => Object.values(section))\\n    .flat();\\n\\n  allKeywords = allKeywords.concat(keywords);\\n}\\n\\n// Clean and transform the combined keywords\\nconst cleanedKeywords = allKeywords\\n  .filter(keyword => keyword.length <= 80)\\n  .filter(keyword => keyword.split(\\\" \\\").length <= 10)\\n  .map(keyword => keyword.replace(/[^a-zA-Z0-9\\\\s]/g, \\\"\\\"))\\n  .map(keyword => keyword.trim())\\n  .filter(keyword => keyword.length > 0)\\n  .map(keyword => `\\\"${keyword}\\\"`);\\n\\n// Remove duplicates\\nconst uniqueKeywords = Array.from(new Set(cleanedKeywords));\\n\\n// Split into batches of 1000\\nconst batchSize = 1000;\\nconst result = [];\\n\\nfor (let i = 0; i < uniqueKeywords.length; i += batchSize) {\\n  result.push({\\n    json: {\\n      keywords: uniqueKeywords.slice(i, i + batchSize).join(\\\", \\\")\\n    }\\n  });\\n}\\n\\n// Return as an array of objects\\nreturn result;\\n\"},\"typeVersion\":2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"2712313f-4b1e-4f5b-8c6b-1f456896d981\",\"connections\":{\"NocoDB\":{\"main\":[[{\"node\":\"Second Order YouTube Autocomplete Keywords\",\"type\":\"main\",\"index\":0},{\"node\":\"Second Order Google Autocomplete Keywords\",\"type\":\"main\",\"index\":0}]]},\"Gen Time\":{\"main\":[[{\"node\":\"NocoDB\",\"type\":\"main\",\"index\":0}]]},\"YT Filter\":{\"main\":[[{\"node\":\"Loop Over YT Keywords\",\"type\":\"main\",\"index\":0}]]},\"Format G Data\":{\"main\":[[{\"node\":\"Bulk Import G Monthly Search Volume\",\"type\":\"main\",\"index\":0}]]},\"Google Filter\":{\"main\":[[{\"node\":\"Loop Over Google Keywords\",\"type\":\"main\",\"index\":0}]]},\"Format YT Data\":{\"main\":[[{\"node\":\"Bulk Import YT Monthly Search Volume\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Gen Time\",\"type\":\"main\",\"index\":0}]]},\"Split Out YT Search\":{\"main\":[[{\"node\":\"YT Filter\",\"type\":\"main\",\"index\":0}]]},\"Check for YT Keyword\":{\"main\":[[{\"node\":\"Is YT Keyword Avaliable\",\"type\":\"main\",\"index\":0}]]},\"Google Search Volume\":{\"main\":[[{\"node\":\"Split Out Google Search\",\"type\":\"main\",\"index\":0}]]},\"Loop Over YT Keywords\":{\"main\":[[],[{\"node\":\"Check for YT Keyword\",\"type\":\"main\",\"index\":0}]]},\"YouTube Search Volume\":{\"main\":[[{\"node\":\"Split Out YT Search\",\"type\":\"main\",\"index\":0}]]},\"Is YT Keyword Avaliable\":{\"main\":[[{\"node\":\"Add Second Tier YT Keyword Data\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Update Second Tier YT Keyword Data\",\"type\":\"main\",\"index\":0}]]},\"Split Out Google Search\":{\"main\":[[{\"node\":\"Google Filter\",\"type\":\"main\",\"index\":0}]]},\"Check for Google Keyword\":{\"main\":[[{\"node\":\"Is Google Keyword Available\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Google Keywords\":{\"main\":[[],[{\"node\":\"Check for Google Keyword\",\"type\":\"main\",\"index\":0}]]},\"Is Google Keyword Available\":{\"main\":[[{\"node\":\"Add Second Tier G Keyword Data\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Update Second Tier G Keyword Data\",\"type\":\"main\",\"index\":0}]]},\"Combine G Keywords and Filter\":{\"main\":[[{\"node\":\"Google Search Volume\",\"type\":\"main\",\"index\":0}]]},\"Add Second Tier G Keyword Data\":{\"main\":[[{\"node\":\"Format G Data\",\"type\":\"main\",\"index\":0}]]},\"Combine YT Keywords and Filter\":{\"main\":[[{\"node\":\"YouTube Search Volume\",\"type\":\"main\",\"index\":0}]]},\"Add Second Tier YT Keyword Data\":{\"main\":[[{\"node\":\"Format YT Data\",\"type\":\"main\",\"index\":0}]]},\"Update Second Tier G Keyword Data\":{\"main\":[[{\"node\":\"Loop Over Google Keywords\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Gen Time\",\"type\":\"main\",\"index\":0}]]},\"Update Second Tier YT Keyword Data\":{\"main\":[[{\"node\":\"Loop Over YT Keywords\",\"type\":\"main\",\"index\":0}]]},\"Bulk Import G Monthly Search Volume\":{\"main\":[[{\"node\":\"Loop Over Google Keywords\",\"type\":\"main\",\"index\":0}]]},\"Bulk Import YT Monthly Search Volume\":{\"main\":[[{\"node\":\"Loop Over YT Keywords\",\"type\":\"main\",\"index\":0}]]},\"Second Order Google Autocomplete Keywords\":{\"main\":[[{\"node\":\"Combine G Keywords and Filter\",\"type\":\"main\",\"index\":0}]]},\"Second Order YouTube Autocomplete Keywords\":{\"main\":[[{\"node\":\"Combine YT Keywords and Filter\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "**Template Description**  \n**WDF Top Keywords** : This workflow is designed to streamline keyword research by automating the process of generating, filtering, and analyzing Google and YouTube keyword data. Ensure compliance with local regulations and API terms of service when using this workflow.\n\n* * *\n\n📌 **Purpose**  \nThe WDF Top Keywords workflow automates collecting, processing, and managing keyword data for both Google and YouTube platforms. Leveraging multiple data sources and APIs ensures an efficient and scalable approach to identifying high-impact keywords for SEO, content creation, and marketing campaigns.\n\n### **Key Features**\n\n  * Automates the generation of keyword suggestions using autocomplete APIs.\n  * Integrates with NocoDB to store and manage keyword data.\n  * Filters keywords based on monthly search volume and cost-per-click (CPC).\n  * Supports bulk import of keyword data into structured databases.\n  * Outputs both Google and YouTube keyword insights, enabling informed decision-making.\n\n\n\n* * *\n\n🎯 **Target Audience**  \nThis workflow is ideal for:\n\n  * Digital marketers aiming to optimize ad campaigns with data-driven insights.\n  * SEO specialists looking to identify high-potential keywords efficiently.\n  * Content creators seeking trending and relevant topics for their platforms.\n  * Agencies managing keyword research for multiple clients.\n\n\n\n* * *\n\n⚙️ **How It Works**\n\n  1. **Trigger** : The workflow runs on-demand or at scheduled intervals.\n  2. **Keyword Generation** : \n     * Retrieves base keywords from NocoDB.\n     * Generates autocomplete suggestions for Google and YouTube.\n  3. **Data Processing** : \n     * Filters and formats keyword data based on specific criteria (e.g., search volume, CPC).\n     * Consolidates results for efficient storage and analysis.\n  4. **Storage and Output** : \n     * Saves data into structured NocoDB tables for tracking and reuse.\n     * Bulk imports monthly search volume statistics for detailed analysis.\n\n\n\n* * *\n\n🛠️ **Key APIs and Tools Used**\n\n  * **NocoDB** : Stores and organizes base and processed keyword data.\n  * **DataForSEO API** : Provides search volume and keyword performance metrics.\n  * **Google Autocomplete API** : Suggests relevant Google search terms.\n  * **YouTube Autocomplete API** : Suggests trending YouTube keywords.\n  * **Social Flood Docker Instance** : Serves as the local integration hub.\n\n\n\n* * *\n\n**Setup Instructions**\n\n  1. Required Tools: \n     * [NocoDB](https://www.nocodb.com/)\n     * [n8n](https://n8n.io/)\n     * [DataForSEO Account](https://app.dataforseo.com/?aff=184401)\n     * [Social Flood Docker Instance](https://github.com/rainmanjam/social-flood)\n  2. Create the following NocoDB tables: \n     * Base Keyword Search\n     * Second Order Google Keywords\n     * Second Order YouTube Keywords\n     * Search Volume\n\n\n\nThis template empowers users to handle complex keyword research tasks effortlessly, saving time and providing actionable insights. Share this template to enhance your workflow efficiency!\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p><strong>Template Description</strong><br>\n<strong>WDF Top Keywords</strong>: This workflow is designed to streamline keyword research by automating the process of generating, filtering, and analyzing Google and YouTube keyword data. Ensure compliance with local regulations and API terms of service when using this workflow.</p>\n<hr>\n<p>📌 <strong>Purpose</strong><br>\nThe WDF Top Keywords workflow automates collecting, processing, and managing keyword data for both Google and YouTube platforms. Leveraging multiple data sources and APIs ensures an efficient and scalable approach to identifying high-impact keywords for SEO, content creation, and marketing campaigns.</p>\n<h3><strong>Key Features</strong></h3>\n<ul>\n<li>Automates the generation of keyword suggestions using autocomplete APIs.</li>\n<li>Integrates with NocoDB to store and manage keyword data.</li>\n<li>Filters keywords based on monthly search volume and cost-per-click (CPC).</li>\n<li>Supports bulk import of keyword data into structured databases.</li>\n<li>Outputs both Google and YouTube keyword insights, enabling informed decision-making.</li>\n</ul>\n<hr>\n<p>🎯 <strong>Target Audience</strong><br>\nThis workflow is ideal for:</p>\n<ul>\n<li>Digital marketers aiming to optimize ad campaigns with data-driven insights.</li>\n<li>SEO specialists looking to identify high-potential keywords efficiently.</li>\n<li>Content creators seeking trending and relevant topics for their platforms.</li>\n<li>Agencies managing keyword research for multiple clients.</li>\n</ul>\n<hr>\n<p>⚙️ <strong>How It Works</strong></p>\n<ol>\n<li><strong>Trigger</strong>: The workflow runs on-demand or at scheduled intervals.</li>\n<li><strong>Keyword Generation</strong>:\n<ul>\n<li>Retrieves base keywords from NocoDB.</li>\n<li>Generates autocomplete suggestions for Google and YouTube.</li>\n</ul>\n</li>\n<li><strong>Data Processing</strong>:\n<ul>\n<li>Filters and formats keyword data based on specific criteria (e.g., search volume, CPC).</li>\n<li>Consolidates results for efficient storage and analysis.</li>\n</ul>\n</li>\n<li><strong>Storage and Output</strong>:\n<ul>\n<li>Saves data into structured NocoDB tables for tracking and reuse.</li>\n<li>Bulk imports monthly search volume statistics for detailed analysis.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<p>🛠️ <strong>Key APIs and Tools Used</strong></p>\n<ul>\n<li><strong>NocoDB</strong>: Stores and organizes base and processed keyword data.</li>\n<li><strong>DataForSEO API</strong>: Provides search volume and keyword performance metrics.</li>\n<li><strong>Google Autocomplete API</strong>: Suggests relevant Google search terms.</li>\n<li><strong>YouTube Autocomplete API</strong>: Suggests trending YouTube keywords.</li>\n<li><strong>Social Flood Docker Instance</strong>: Serves as the local integration hub.</li>\n</ul>\n<hr>\n<p><strong>Setup Instructions</strong></p>\n<ol>\n<li>Required Tools:\n<ul>\n<li><a href=\"https://www.nocodb.com/\" rel=\"ugc nofollow\" target=\"_blank\">NocoDB</a></li>\n<li><a href=\"https://n8n.io/\" rel=\"ugc nofollow\" target=\"_blank\">n8n</a></li>\n<li><a href=\"https://app.dataforseo.com/?aff=184401\" rel=\"ugc nofollow\" target=\"_blank\">DataForSEO Account</a></li>\n<li><a href=\"https://github.com/rainmanjam/social-flood\" rel=\"ugc nofollow\" target=\"_blank\">Social Flood Docker Instance</a></li>\n</ul>\n</li>\n<li>Create the following NocoDB tables:\n<ul>\n<li>Base Keyword Search</li>\n<li>Second Order Google Keywords</li>\n<li>Second Order YouTube Keywords</li>\n<li>Search Volume</li>\n</ul>\n</li>\n</ol>\n<p>This template empowers users to handle complex keyword research tasks effortlessly, saving time and providing actionable insights. Share this template to enhance your workflow efficiency!</p>\n</div><!--]-->",
  "readme_zh": "**模板说明**  \n**WDF热门关键词工作流**：该工作流通过自动化生成、筛选和分析Google及YouTube关键词数据，优化关键词研究流程。使用时请确保遵守当地法规及API服务条款。\n\n* * *\n\n📌 **核心功能**  \nWDF热门关键词工作流可自动采集、处理并管理Google与YouTube双平台关键词数据。通过整合多数据源与API接口，为SEO优化、内容创作及营销活动提供高效可扩展的高价值关键词挖掘方案。\n\n### **核心优势**\n\n  * 利用自动补全API实现关键词建议自动生成  \n  * 对接NocoDB进行关键词数据存储与管理  \n  * 根据月搜索量与单次点击成本(CPC)智能筛选关键词  \n  * 支持批量导入结构化数据库  \n  * 同步输出Google与YouTube关键词洞察，赋能决策制定  \n\n* * *\n\n🎯 **适用人群**  \n本工作流特别适合：\n\n  * 希望通过数据洞察优化广告投放的数字营销专家  \n  * 需高效识别高潜力关键词的SEO专业人员  \n  * 需要挖掘平台热点话题的内容创作者  \n  * 为多客户管理关键词研究任务的代理机构  \n\n* * *\n\n⚙️ **运作流程**\n\n  1. **触发机制**：支持手动触发或定时自动运行  \n  2. **关键词生成**：  \n     * 从NocoDB提取种子关键词  \n     * 调用Google/YouTube自动补全接口生成衍生词  \n  3. **数据处理**：  \n     * 根据搜索量、CPC等指标筛选格式化数据  \n     * 整合结果便于存储分析  \n  4. **存储输出**：  \n     * 将结构化数据存入NocoDB表格供追溯复用  \n     * 批量导入月搜索量统计数据深化分析  \n\n* * *\n\n🛠️ **核心工具与API**\n\n  * **NocoDB**：存储管理原始及加工后关键词数据  \n  * **DataForSEO API**：提供搜索量与关键词表现指标  \n  * **Google自动补全API**：生成Google搜索建议词  \n  * **YouTube自动补全API**：挖掘YouTube趋势关键词  \n  * **Social Flood Docker实例**：本地化集成枢纽  \n\n* * *\n\n**配置指南**\n\n  1. 必备工具：  \n     * [NocoDB](https://www.nocodb.com/)  \n     * [n8n](https://n8n.io/)  \n     * [DataForSEO账号](https://app.dataforseo.com/?aff=184401)  \n     * [Social Flood Docker实例](https://github.com/rainmanjam/social-flood)  \n  2. 创建以下NocoDB数据表：  \n     * 基础关键词库  \n     * Google二级衍生词  \n     * YouTube二级衍生词  \n     * 搜索量统计表  \n\n本模板可帮助用户轻松处理复杂关键词研究任务，显著提升工作效率并获得可执行洞察。分享此模板，让工作流效能倍增！",
  "title_zh": "寻找YouTube和Google的热门关键词并将其存储到NocoDB中",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"SHgOqN3ednIo5gNu\",\n  \"meta\": {\n    \"instanceId\": \"5fdeff34cb31eeba72e9ea7f1100a8cb9dfce8edcd1fd736c5a33060890e9b77\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Find Top Keywords\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"386c7972-34c2-4f51-9329-dee7f6a7511b\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -3440,\n        760\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3ebf40fd-acfd-4424-99c9-95ddaac74de3\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -3440,\n        1040\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"0 */4 * * *\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a24af92b-849d-48ee-aedd-6c7e75d9c902\",\n      \"name\": \"Gen Time\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -3160,\n        940\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get today's date\\nconst today = new Date();\\n\\n// Subtract one day to get the previous day\\nconst yesterday = new Date(today);\\nyesterday.setDate(today.getDate() - 1);\\n\\n// Format the date as yyyy-mm-dd\\nconst year = yesterday.getFullYear();\\nconst month = String(yesterday.getMonth() + 1).padStart(2, '0'); // Month is zero-indexed\\nconst day = String(yesterday.getDate()).padStart(2, '0');\\n\\nconst formattedDate = `${year}-${month}-${day}`;\\n\\n// Set the formatted date to be used in a later node\\nreturn [{ json: { previousDay: formattedDate } }];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f0807e09-1f8f-45ba-a6d3-d14ee3f96a9f\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3540,\n        600\n      ],\n      \"parameters\": {\n        \"width\": 520,\n        \"height\": 780,\n        \"content\": \"## 为昨天和今天创建时间。这将用于收集和搜索特定范围内的新闻文章。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c97b391b-1da1-4c62-9394-e83a49dae788\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3020,\n        600\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 280,\n        \"height\": 780,\n        \"content\": \"## 从NocoDB获取基础关键词列表\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"21e89f1c-7101-490a-89aa-a5a52e10d88a\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2740,\n        600\n      ],\n      \"parameters\": {\n        \"width\": 380,\n        \"height\": 780,\n        \"content\": \"## 从基础关键词生成YouTube和Google关键词\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3b6e8b0e-dfdc-41d0-a387-00872c92faa1\",\n      \"name\": \"NocoDB\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -2940,\n        940\n      ],\n      \"parameters\": {\n        \"table\": \"mztryza8davdl48\",\n        \"options\": {\n          \"fields\": [\n            \"keyword\"\n          ]\n        },\n        \"operation\": \"getAll\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"returnAll\": true,\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"fef9283e-886a-486b-a51f-0f459f4b18e0\",\n      \"name\": \"Second Order Google Autocomplete Keywords\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -2620,\n        800\n      ],\n      \"parameters\": {\n        \"url\": \"http://192.168.1.110:8000/google-search/autocomplete-keywords\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"input_keyword\",\n              \"value\": \"={{ $('NocoDB').item.json.keyword }}\"\n            },\n            {\n              \"name\": \"input_country\",\n              \"value\": \"US\"\n            },\n            {\n              \"name\": \"use_proxy\",\n              \"value\": \"true\"\n            },\n            {\n              \"name\": \"output\",\n              \"value\": \"toolbar\"\n            },\n            {\n              \"name\": \"spell\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"hl\",\n              \"value\": \"en\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"eNOOug9ODsbtfjBk\",\n          \"name\": \"Social Flood API Key Local\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"fad88d1e-a14e-4cc1-9ac1-dcc6126355c4\",\n      \"name\": \"Google Search Volume\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -2020,\n        800\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.dataforseo.com/v3/keywords_data/google_ads/search_volume/live\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"=[\\n    {\\n        \\\"location_code\\\": 2840,\\n        \\\"language_code\\\": \\\"en\\\",\\n        \\\"keywords\\\": [{{ $json.keywords }}],\\n        \\\"date_from\\\": \\\"2021-08-01\\\",\\n        \\\"search_partners\\\": false \\n    }\\n]\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"7k7huetjBCcDO7uR\",\n          \"name\": \"Data for SEO Basic Auth\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"dac54baa-6166-4fb6-a705-a45a91b993ed\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2360,\n        600\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 500,\n        \"height\": 780,\n        \"content\": \"## 查询YouTube和Google关键词搜索量\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"753401aa-c78e-4dd1-b47f-b774bed8a6ce\",\n      \"name\": \"Split Out Google Search\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -1740,\n        800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"tasks[0].result\"\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"12f53197-a03e-4862-a6cf-d4feffd49b29\",\n      \"name\": \"YouTube Search Volume\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -2020,\n        1120\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.dataforseo.com/v3/keywords_data/google_ads/search_volume/live\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"=[\\n    {\\n        \\\"location_code\\\": 2840,\\n        \\\"language_code\\\": \\\"en\\\",\\n        \\\"keywords\\\": [{{ $json.keywords }}],\\n        \\\"date_from\\\": \\\"2021-08-01\\\",\\n        \\\"search_partners\\\": true,\\n        \\\"sort_by\\\": \\\"search_volume\\\"\\n    }\\n]\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"7k7huetjBCcDO7uR\",\n          \"name\": \"Data for SEO Basic Auth\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"d0173c03-c803-4c64-9c87-48a47952085f\",\n      \"name\": \"Second Order YouTube Autocomplete Keywords\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -2620,\n        1120\n      ],\n      \"parameters\": {\n        \"url\": \"http://192.168.1.110:8000/google-search/autocomplete-keywords\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          }\n        },\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"input_keyword\",\n              \"value\": \"={{ $json.keyword }}\"\n            },\n            {\n              \"name\": \"input_country\",\n              \"value\": \"US\"\n            },\n            {\n              \"name\": \"use_proxy\",\n              \"value\": \"true\"\n            },\n            {\n              \"name\": \"output\",\n              \"value\": \"toolbar\"\n            },\n            {\n              \"name\": \"spell\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"hl\",\n              \"value\": \"en\"\n            },\n            {\n              \"name\": \"ds\",\n              \"value\": \"yt\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"eNOOug9ODsbtfjBk\",\n          \"name\": \"Social Flood API Key Local\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"dfa987d0-c18c-44c4-9796-942404f49630\",\n      \"name\": \"Split Out YT Search\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -1740,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"tasks[0].result\"\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"29196a5b-c46e-46f7-99ff-781a0d97c551\",\n      \"name\": \"Google Filter\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -1520,\n        800\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"6e46fa28-2adf-47a0-bbf3-7a9b8b8413f7\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.monthly_searches }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"45bca7c3-eac2-44e8-9993-b53200174003\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.cpc }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"6b11b8e2-d6fb-45d7-817e-3e1038068696\",\n      \"name\": \"YT Filter\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -1520,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"6e46fa28-2adf-47a0-bbf3-7a9b8b8413f7\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.monthly_searches }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"45bca7c3-eac2-44e8-9993-b53200174003\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.cpc }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"6d52836b-ce37-46c0-aa4b-7c2b917b9f1d\",\n      \"name\": \"Add Second Tier YT Keyword Data\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -440,\n        980\n      ],\n      \"parameters\": {\n        \"table\": \"m8bp2fnwtqsd2m7\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldName\": \"=keyword\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.keyword }}\"\n            },\n            {\n              \"fieldName\": \"location_code\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.location_code }}\"\n            },\n            {\n              \"fieldName\": \"language_code\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.language_code }}\"\n            },\n            {\n              \"fieldName\": \"search_partners\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.search_partners }}\"\n            },\n            {\n              \"fieldName\": \"competition\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.competition }}\"\n            },\n            {\n              \"fieldName\": \"competition_index\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.competition_index }}\"\n            },\n            {\n              \"fieldName\": \"cpc\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.cpc }}\"\n            },\n            {\n              \"fieldName\": \"low_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.low_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"high_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.high_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"search_volume\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.search_volume }}\"\n            }\n          ]\n        },\n        \"operation\": \"create\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"d4a72c2b-8c16-4f3e-80ad-1564ec8b33d4\",\n      \"name\": \"Add Second Tier G Keyword Data\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -440,\n        400\n      ],\n      \"parameters\": {\n        \"table\": \"mjmbcomto18scyi\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldName\": \"=keyword\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.keyword }}\"\n            },\n            {\n              \"fieldName\": \"location_code\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.location_code }}\"\n            },\n            {\n              \"fieldName\": \"language_code\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.language_code }}\"\n            },\n            {\n              \"fieldName\": \"search_partners\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.search_partners }}\"\n            },\n            {\n              \"fieldName\": \"competition\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.competition }}\"\n            },\n            {\n              \"fieldName\": \"competition_index\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.competition_index }}\"\n            },\n            {\n              \"fieldName\": \"cpc\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.cpc }}\"\n            },\n            {\n              \"fieldName\": \"low_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.low_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"high_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.high_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"search_volume\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.search_volume }}\"\n            }\n          ]\n        },\n        \"operation\": \"create\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1fdaf0fc-5c11-406f-93fb-b4a7fd3b6eed\",\n      \"name\": \"Format G Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -240,\n        400\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get the monthly search data from the \\\"Loop Over Google Keywords\\\" node\\nconst loopData = $node[\\\"Loop Over Google Keywords\\\"].json;\\nif (!loopData || !loopData.monthly_searches || !Array.isArray(loopData.monthly_searches)) {\\n  throw new Error(\\\"monthly_searches data is missing or not an array from Loop Over Google Keywords node.\\\");\\n}\\nconst monthlySearches = loopData.monthly_searches;\\n\\n// Get all items from the \\\"Add Second Tier G Keyword Data\\\" node\\nconst secondTierItems = $items(\\\"Add Second Tier G Keyword Data\\\");\\n\\nif (!secondTierItems || secondTierItems.length === 0) {\\n  throw new Error(\\\"No data found in Add Second Tier G Keyword Data node.\\\");\\n}\\n\\nconst results = [];\\n\\n// Loop through each second-tier item\\nsecondTierItems.forEach(itemWrapper => {\\n  const item = itemWrapper.json;\\n  // Validate that the required properties exist on the second-tier item.\\n  if (!item.keyword || item.Id === undefined) {\\n    throw new Error(\\\"A second tier item is missing 'keyword' or 'Id'.\\\");\\n  }\\n  \\n  // For each monthly search record, combine with the second-tier data\\n  monthlySearches.forEach(record => {\\n    // Validate that each monthly record has the required properties.\\n    if (record.year === undefined || record.month === undefined || record.search_volume === undefined) {\\n      throw new Error(\\\"A monthly search record is missing 'year', 'month', or 'search_volume'.\\\");\\n    }\\n    \\n    results.push({\\n      json: {\\n        keyword: item.keyword,\\n        google_keyword_id: item.Id,\\n        year: record.year,\\n        month: record.month,\\n        search_volume: record.search_volume,\\n        unique_id: `${record.year}-${record.month}-${item.keyword}`\\n      }\\n    });\\n  });\\n});\\n\\n// Chunk the results into batches of 1000 items each\\nconst batchSize = 1000;\\nconst batchedResults = [];\\n\\nfor (let i = 0; i < results.length; i += batchSize) {\\n  // Create a batch containing up to batchSize items\\n  const batchItems = results.slice(i, i + batchSize).map(item => item.json);\\n  batchedResults.push({\\n    json: {\\n      batch: batchItems\\n    }\\n  });\\n}\\n\\nreturn batchedResults;\\n\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"7d654cf7-1223-4f10-8026-997f5418402e\",\n      \"name\": \"Format YT Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -220,\n        980\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get the monthly search data from the \\\"Loop Over Google Keywords\\\" node\\nconst loopData = $node[\\\"Loop Over YT Keywords\\\"].json;\\nif (!loopData || !loopData.monthly_searches || !Array.isArray(loopData.monthly_searches)) {\\n  throw new Error(\\\"monthly_searches data is missing or not an array from Loop Over YT Keywords node.\\\");\\n}\\nconst monthlySearches = loopData.monthly_searches;\\n\\n// Get all items from the \\\"Add Second Tier G Keyword Data\\\" node\\nconst secondTierItems = $items(\\\"Add Second Tier YT Keyword Data\\\");\\n\\nif (!secondTierItems || secondTierItems.length === 0) {\\n  throw new Error(\\\"No data found in Add Second Tier YT Keyword Data node.\\\");\\n}\\n\\nconst results = [];\\n\\n// Loop through each second-tier item\\nsecondTierItems.forEach(itemWrapper => {\\n  const item = itemWrapper.json;\\n  // Validate that the required properties exist on the second-tier item.\\n  if (!item.keyword || item.Id === undefined) {\\n    throw new Error(\\\"A second tier item is missing 'keyword' or 'Id'.\\\");\\n  }\\n  \\n  // For each monthly search record, combine with the second-tier data\\n  monthlySearches.forEach(record => {\\n    // Validate that each monthly record has the required properties.\\n    if (record.year === undefined || record.month === undefined || record.search_volume === undefined) {\\n      throw new Error(\\\"A monthly search record is missing 'year', 'month', or 'search_volume'.\\\");\\n    }\\n    \\n    results.push({\\n      json: {\\n        keyword: item.keyword,\\n        google_keyword_id: item.Id,\\n        year: record.year,\\n        month: record.month,\\n        search_volume: record.search_volume,\\n        unique_id: `${record.year}-${record.month}-${item.keyword}`\\n      }\\n    });\\n  });\\n});\\n\\n// Chunk the results into batches of 1000 items each\\nconst batchSize = 1000;\\nconst batchedResults = [];\\n\\nfor (let i = 0; i < results.length; i += batchSize) {\\n  // Create a batch containing up to batchSize items\\n  const batchItems = results.slice(i, i + batchSize).map(item => item.json);\\n  batchedResults.push({\\n    json: {\\n      batch: batchItems\\n    }\\n  });\\n}\\n\\nreturn batchedResults;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"67848762-a140-4c63-b8ca-e20331135741\",\n      \"name\": \"Bulk Import G Monthly Search Volume\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        0,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"http://192.168.1.186:8080/api/v2/tables/ma51kvf78diz0sg/records\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1000\n            }\n          }\n        },\n        \"jsonBody\": \"={{ $json.batch }}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"eNOOug9ODsbtfjBk\",\n          \"name\": \"Social Flood API Key Local\"\n        },\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"377b5470-9d9f-42e5-9528-fbf9fd3a1d77\",\n      \"name\": \"Bulk Import YT Monthly Search Volume\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        40,\n        980\n      ],\n      \"parameters\": {\n        \"url\": \"http://192.168.1.186:8080/api/v2/tables/ma51kvf78diz0sg/records\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1000\n            }\n          }\n        },\n        \"jsonBody\": \"={{ $json.batch }}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"eNOOug9ODsbtfjBk\",\n          \"name\": \"Social Flood API Key Local\"\n        },\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"6939afbf-b463-44fb-ab0b-45cbe81648eb\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1860,\n        600\n      ],\n      \"parameters\": {\n        \"width\": 540,\n        \"height\": 780,\n        \"content\": \"## 每月流量与点击单价的流程及关键词筛选\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6fdbd7c3-75ca-4ed4-a5aa-3718bee0786f\",\n      \"name\": \"Is Google Keyword Available\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -680,\n        640\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"c4c4ed58-b14d-4973-93b2-4426fe314a2a\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.pageInfo.totalRows }}\",\n              \"rightValue\": 0\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"f10d1313-fdfb-4f58-921d-65f307afab4e\",\n      \"name\": \"Is YT Keyword Avaliable\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -700,\n        1260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"c4c4ed58-b14d-4973-93b2-4426fe314a2a\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.pageInfo.totalRows }}\",\n              \"rightValue\": 0\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"c6c26129-fce0-4d98-a72a-662dcbc06ae0\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1320,\n        320\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1560,\n        \"height\": 1280,\n        \"content\": \"## 在NocoDB中添加或更新YouTube或Google表格\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a3c0ed20-f696-4ca6-a6fb-872cab8fbba5\",\n      \"name\": \"Check for Google Keyword\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -900,\n        640\n      ],\n      \"parameters\": {\n        \"url\": \"=http://192.168.1.186:8080/api/v2/tables/mjmbcomto18scyi/records?where=(keyword,eq,{{ $json.keyword }})\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1,\n              \"batchInterval\": 1\n            }\n          }\n        },\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"bb7cae83-8ff0-45d0-abca-d8d99efcfead\",\n      \"name\": \"Check for YT Keyword\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -940,\n        1260\n      ],\n      \"parameters\": {\n        \"url\": \"=http://192.168.1.186:8080/api/v2/tables/m8bp2fnwtqsd2m7/records/?where=(keyword,eq,{{ $json.keyword }})\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e04d2f1c-45b6-4994-91a7-dc9f54a3fba8\",\n      \"name\": \"Loop Over YT Keywords\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1180,\n        1240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"batchSize\": 1000\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"452a67b4-d30c-4732-abc4-8b3513ec31f6\",\n      \"name\": \"Update Second Tier G Keyword Data\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -220,\n        660\n      ],\n      \"parameters\": {\n        \"table\": \"mjmbcomto18scyi\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldName\": \"=keyword\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.keyword }}\"\n            },\n            {\n              \"fieldName\": \"location_code\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.location_code }}\"\n            },\n            {\n              \"fieldName\": \"language_code\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.language_code }}\"\n            },\n            {\n              \"fieldName\": \"search_partners\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.search_partners }}\"\n            },\n            {\n              \"fieldName\": \"competition\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.competition }}\"\n            },\n            {\n              \"fieldName\": \"competition_index\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.competition_index }}\"\n            },\n            {\n              \"fieldName\": \"cpc\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.cpc }}\"\n            },\n            {\n              \"fieldName\": \"low_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.low_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"high_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.high_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"search_volume\",\n              \"fieldValue\": \"={{ $('Split Out Google Search').item.json.search_volume }}\"\n            },\n            {\n              \"fieldName\": \"id\",\n              \"fieldValue\": \"={{ $json.list[0].Id }}\"\n            }\n          ]\n        },\n        \"operation\": \"update\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"e50cc116-3b5b-4908-b0b6-8781360cb5f2\",\n      \"name\": \"Update Second Tier YT Keyword Data\",\n      \"type\": \"n8n-nodes-base.nocoDb\",\n      \"position\": [\n        -440,\n        1280\n      ],\n      \"parameters\": {\n        \"table\": \"m8bp2fnwtqsd2m7\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldName\": \"=keyword\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.keyword }}\"\n            },\n            {\n              \"fieldName\": \"location_code\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.location_code }}\"\n            },\n            {\n              \"fieldName\": \"language_code\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.language_code }}\"\n            },\n            {\n              \"fieldName\": \"search_partners\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.search_partners }}\"\n            },\n            {\n              \"fieldName\": \"competition\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.competition }}\"\n            },\n            {\n              \"fieldName\": \"competition_index\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.competition_index }}\"\n            },\n            {\n              \"fieldName\": \"cpc\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.cpc }}\"\n            },\n            {\n              \"fieldName\": \"low_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.low_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"high_top_of_page_bid\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.high_top_of_page_bid }}\"\n            },\n            {\n              \"fieldName\": \"search_volume\",\n              \"fieldValue\": \"={{ $('Split Out YT Search').item.json.search_volume }}\"\n            },\n            {\n              \"fieldName\": \"id\",\n              \"fieldValue\": \"={{ $json.list[0].Id }}\"\n            }\n          ]\n        },\n        \"operation\": \"update\",\n        \"projectId\": \"pbwiwe87uf1cpgc\",\n        \"authentication\": \"nocoDbApiToken\"\n      },\n      \"credentials\": {\n        \"nocoDbApiToken\": {\n          \"id\": \"LAbGsn1RMARiq5Gy\",\n          \"name\": \"NocoDB Token account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"4ef57b89-913c-4e0e-8e60-675807ad6a5d\",\n      \"name\": \"Loop Over Google Keywords\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1160,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"batchSize\": 1000\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"94fbe48b-22bf-4a15-9ef0-423b1dab586a\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3540,\n        1560\n      ],\n      \"parameters\": {\n        \"width\": 1060,\n        \"height\": 380,\n        \"content\": \"## 安装配置说明：\\n### 必需组件：NocoDB、N8N、[DataforSEO账户*推广链接*](https://app.dataforseo.com/?aff=184401) 及 [Social Flood Docker实例](https://github.com/rainmanjam/social-flood)\\n### NocoDB数据表结构\\n-- 基础关键词搜索表（关键词）\\n-- 二级Google关键词表（关键词、地区代码、语言代码、搜索合作伙伴、竞争度、竞争指数、搜索量、单次点击成本、页首低价区间、页首高价区间）\\n-- 二级YouTube关键词表（关键词、地区代码、语言代码、搜索合作伙伴、竞争度、竞争指数、搜索量、单次点击成本、页首低价区间、页首高价区间）\\n-- 搜索量统计表（唯一ID、年份、月份、搜索量、YouTube关键词ID、Google关键词ID）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8429c63d-09e7-47ac-a11b-e5132d5ac832\",\n      \"name\": \"Combine G Keywords and Filter\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2300,\n        800\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Gather all keywords from all items\\nlet allKeywords = [];\\n\\nfor (const item of items) {\\n  const keywordData = item.json.keyword_data;\\n  const keywords = Object.values(keywordData)\\n    .flatMap(section => Object.values(section))\\n    .flat();\\n\\n  allKeywords = allKeywords.concat(keywords);\\n}\\n\\n// Clean and transform the combined keywords\\nconst cleanedKeywords = allKeywords\\n  .filter(keyword => keyword.length <= 80)\\n  .filter(keyword => keyword.split(\\\" \\\").length <= 10)\\n  .map(keyword => keyword.replace(/[^a-zA-Z0-9\\\\s]/g, \\\"\\\"))\\n  .map(keyword => keyword.trim())\\n  .filter(keyword => keyword.length > 0)\\n  .map(keyword => `\\\"${keyword}\\\"`);\\n\\n// Remove duplicates\\nconst uniqueKeywords = Array.from(new Set(cleanedKeywords));\\n\\n// Split into batches of 1000\\nconst batchSize = 1000;\\nconst result = [];\\n\\nfor (let i = 0; i < uniqueKeywords.length; i += batchSize) {\\n  result.push({\\n    json: {\\n      keywords: uniqueKeywords.slice(i, i + batchSize).join(\\\", \\\")\\n    }\\n  });\\n}\\n\\n// Return as an array of objects\\nreturn result;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5aa39111-c1c1-440e-b0e8-ba5c54909a0d\",\n      \"name\": \"Combine YT Keywords and Filter\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -2300,\n        1120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Gather all keywords from all items\\nlet allKeywords = [];\\n\\nfor (const item of items) {\\n  const keywordData = item.json.keyword_data;\\n  const keywords = Object.values(keywordData)\\n    .flatMap(section => Object.values(section))\\n    .flat();\\n\\n  allKeywords = allKeywords.concat(keywords);\\n}\\n\\n// Clean and transform the combined keywords\\nconst cleanedKeywords = allKeywords\\n  .filter(keyword => keyword.length <= 80)\\n  .filter(keyword => keyword.split(\\\" \\\").length <= 10)\\n  .map(keyword => keyword.replace(/[^a-zA-Z0-9\\\\s]/g, \\\"\\\"))\\n  .map(keyword => keyword.trim())\\n  .filter(keyword => keyword.length > 0)\\n  .map(keyword => `\\\"${keyword}\\\"`);\\n\\n// Remove duplicates\\nconst uniqueKeywords = Array.from(new Set(cleanedKeywords));\\n\\n// Split into batches of 1000\\nconst batchSize = 1000;\\nconst result = [];\\n\\nfor (let i = 0; i < uniqueKeywords.length; i += batchSize) {\\n  result.push({\\n    json: {\\n      keywords: uniqueKeywords.slice(i, i + batchSize).join(\\\", \\\")\\n    }\\n  });\\n}\\n\\n// Return as an array of objects\\nreturn result;\\n\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"2712313f-4b1e-4f5b-8c6b-1f456896d981\",\n  \"connections\": {\n    \"NocoDB\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Second Order YouTube Autocomplete Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Second Order Google Autocomplete Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Gen Time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"NocoDB\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"YT Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over YT Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format G Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Bulk Import G Monthly Search Volume\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Google Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format YT Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Bulk Import YT Monthly Search Volume\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gen Time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out YT Search\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"YT Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check for YT Keyword\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is YT Keyword Avaliable\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Search Volume\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out Google Search\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over YT Keywords\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Check for YT Keyword\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"YouTube Search Volume\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out YT Search\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is YT Keyword Avaliable\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add Second Tier YT Keyword Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Update Second Tier YT Keyword Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out Google Search\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check for Google Keyword\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is Google Keyword Available\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Google Keywords\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Check for Google Keyword\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is Google Keyword Available\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add Second Tier G Keyword Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Update Second Tier G Keyword Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine G Keywords and Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Search Volume\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add Second Tier G Keyword Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format G Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine YT Keywords and Filter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"YouTube Search Volume\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add Second Tier YT Keyword Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format YT Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Second Tier G Keyword Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Google Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gen Time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Second Tier YT Keyword Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over YT Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Bulk Import G Monthly Search Volume\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Google Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Bulk Import YT Monthly Search Volume\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over YT Keywords\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Second Order Google Autocomplete Keywords\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine G Keywords and Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Second Order YouTube Autocomplete Keywords\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine YT Keywords and Filter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}