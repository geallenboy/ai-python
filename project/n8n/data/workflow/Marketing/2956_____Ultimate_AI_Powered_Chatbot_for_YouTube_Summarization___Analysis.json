{
  "title": "‚ö°üìΩÔ∏è Ultimate AI-Powered Chatbot for YouTube Summarization & Analysis",
  "url": "https://n8n.io/workflows/2956-ultimate-ai-powered-chatbot-for-youtube-summarization-and-analysis/",
  "category": "Marketing",
  "category_url": "https://n8n.io/workflows/categories/marketing/?sort=createdAt:desc",
  "author": "Joseph LePage",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-19",
  "content": "",
  "workflow_json": "{\"id\":\"GM9Qxzul4NPQpJkn\",\"meta\":{\"instanceId\":\"31e69f7f4a77bf465b805824e303232f0227212ae922d12133a0f96ffeab4fef\",\"templateCredsSetupCompleted\":true},\"name\":\"‚ö°üìΩÔ∏è Ultimate AI-Powered Chatbot for YouTube Summarization & Analysis\",\"tags\":[],\"nodes\":[{\"id\":\"10cfb27f-ef93-41cd-972e-37dfdcab97ad\",\"name\":\"Get YouTube Transcript\",\"type\":\"n8n-nodes-base.code\",\"position\":[20,360],\"parameters\":{\"jsCode\":\"// Get all input items\\nconst items = $input.all();\\nconst results = [];\\n\\n// Import the YoutubeTranscript module from the youtube-transcript package\\n// npm i -g youtube-transcript\\nconst { YoutubeTranscript } = require('youtube-transcript');\\n\\nfor (let i = 0; i < items.length; i++) {\\n  // Extract the VIDEO_ID from the input JSON\\n  const VIDEO_ID = items[i].json.VIDEO_ID;\\n  \\n  if (!VIDEO_ID) {\\n    throw new Error('The video ID parameter is empty.');\\n  }\\n  \\n  try {\\n    // Fetch the transcript for the provided video ID\\n    const transcript = await YoutubeTranscript.fetchTranscript(VIDEO_ID);\\n    \\n    // Append the fetched transcript data to the results\\n    results.push({\\n      json: {\\n        youtubeId: VIDEO_ID,\\n        transcript,\\n      },\\n    });\\n  } catch (error) {\\n    // In case of an error, add an error message to the output for this item\\n    results.push({\\n      json: {\\n        youtubeId: VIDEO_ID,\\n        error: error.message,\\n      },\\n    });\\n  }\\n}\\n\\n// Return the results to be used by the next node in the workflow\\nreturn results;\\n\"},\"typeVersion\":2},{\"id\":\"a7b7740e-7470-4ce0-a698-6043559eb781\",\"name\":\"When Executed by Another Workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[-580,180],\"parameters\":{\"inputSource\":\"jsonExample\",\"jsonExample\":\"{\\n  \\\"query\\\": {\\n\\t\\\"videoId\\\": \\\"YouTube video id\\\"\\n  }\\n}\"},\"typeVersion\":1.1},{\"id\":\"f6c6cbc2-ba2d-4f16-a3f2-ad4d6280f6b6\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-180,-720],\"webhookId\":\"5ed6c28d-2469-4f32-bd16-939f2942a0de\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"ac051c4a-0dc7-4f75-97a7-cb4bed0c8845\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[40,-860],\"parameters\":{\"color\":6,\"width\":580,\"height\":380,\"content\":\"## ü§ñ AI Agent Chatbot for YouTube Videos\"},\"typeVersion\":1},{\"id\":\"1a737d98-747e-40ae-9075-2b30c93f83a6\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[340,-460],\"parameters\":{\"width\":280,\"height\":280,\"content\":\"## üõ†Ô∏è YouTube Video Processing Tool\"},\"typeVersion\":1},{\"id\":\"54d39566-a028-48be-87d6-4412d4c53f33\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-260,-460],\"parameters\":{\"color\":5,\"width\":280,\"height\":280,\"content\":\"## OpenAI\\nhttps://platform.openai.com/api-keys\"},\"typeVersion\":1},{\"id\":\"90468bc1-9f91-49ab-bde3-d823d7ac6d05\",\"name\":\"Window Buffer Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[140,-340],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"fe54da1d-05e7-4da1-9347-83e1cf370710\",\"name\":\"Sticky Note13\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[40,-460],\"parameters\":{\"color\":2,\"width\":280,\"height\":280,\"content\":\"## Chat History Memory\"},\"typeVersion\":1},{\"id\":\"0fce1309-2982-4579-8454-34df88e5976c\",\"name\":\"gpt-4o-mini1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-160,-340],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{\"temperature\":0.1}},\"credentials\":{\"openAiApi\":{\"id\":\"jEMSvKmtYfzAkhe6\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"8d841054-2096-49bf-8539-822b14f598df\",\"name\":\"YouTube Video Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[200,-720],\"parameters\":{\"text\":\"={{ $json.chatInput }}\",\"options\":{\"systemMessage\":\"=You are an AI assistant tasked with analyzing and summarizing the transcript of a YouTube video. Your role is to answer user questions and extract relevant insights from the video content. Additionally, identify and extract the **YouTube video ID** from the user's input.\\n\\nYou have access to a tool called `youtube_video_analyzer`, which can analyze YouTube videos. Use this tool effectively to process video transcripts and generate structured summaries.\\n\\n#### Instructions:\\n1. **Extract YouTube Video ID**:\\n   - Identify the **video ID** from the user's input.\\n   - Use this ID to analyze the video using the `youtube_video_analyzer` tool.\\n\\n2. **Analyze and Summarize**:\\n   - Break down the video content into main topics using Level 2 headers (##).\\n  2.1. Under each header:\\n     - List only the most essential concepts and key points\\n     - Use bullet points for clarity\\n     - Keep explanations concise\\n     - Preserve technical accuracy\\n     - Highlight key terms in bold\\n  2.2. Organize the information in this sequence:\\n     - Definition/Background\\n     - Main characteristics\\n     - Implementation details\\n     - Advantages/Disadvantages\\n  2.3. Format requirements:\\n     - Use markdown formatting\\n     - Keep bullet points simple (no nesting)\\n     - Bold important terms using **term**\\n     - Use tables for comparisons\\n     - Include relevant technical details\\n\\n3. **Organize Output**:\\n   - Structure your response in this sequence:\\n     1. **Definition/Background**: Provide a brief overview or context of the topic.\\n     2. **Main Characteristics**: Highlight critical features or ideas.\\n     3. **Implementation Details**: Explain how concepts are applied or executed.\\n     4. **Advantages/Disadvantages**: Summarize benefits and limitations.\\n\\n4. **Formatting Requirements**:\\n   - Use markdown formatting for clarity.\\n   - Keep bullet points simple (no nested lists).\\n   - Use tables for comparisons when applicable.\\n   - Include relevant technical details where necessary.\\n\\nPlease provide a clear, structured summary that captures the core concepts while maintaining technical accuracy.\\n\\n#### Example Output Structure:\\n## Title: Title of video.\\n\\n## Topic 1: [Main Topic]\\n- **Definition/Background**: Brief explanation of the topic.\\n- **Main Characteristics**:\\n  - Key feature 1\\n  - Key feature 2\\n- **Implementation Details**:\\n  - How it works\\n- **Advantages/Disadvantages**:\\n  - Advantage 1\\n  - Disadvantage 1\\n\\n## Topic 2: [Next Main Topic]\\n...\\n\\n#### Additional Notes:\\n- Ensure your summaries are clear, structured, and technically accurate.\\n- If any information is missing or unclear, note it explicitly in your response.\\n\\nCurrent date: {{ $now }}\\n\\n\\n\\n\\n \\n\"},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"5252b7ce-0e3f-4f1d-a76a-6df780b4f8d4\",\"name\":\"Sticky Note10\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-640,-140],\"parameters\":{\"color\":7,\"width\":1910,\"height\":720,\"content\":\"## üõ†Ô∏èYouTube Video Processing Tool\"},\"typeVersion\":1},{\"id\":\"d458ef6c-9149-4515-89ac-1c0569186123\",\"name\":\"Create YouTube API URL\",\"type\":\"n8n-nodes-base.code\",\"position\":[20,20],\"parameters\":{\"jsCode\":\"// Define the base URL for the YouTube Data API\\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3/videos';\\n\\n// Get the first input item\\nconst item = $input.first();\\n\\n// Extract the videoId and google_api_key from the input JSON\\nconst VIDEO_ID = item.json.VIDEO_ID;\\nconst GOOGLE_API_KEY = item.json.GOOGLE_API_KEY; // Dynamically retrieve API key\\n\\nif (!VIDEO_ID) {\\n  throw new Error('The video ID parameter is empty.');\\n}\\n\\nif (!GOOGLE_API_KEY) {\\n  throw new Error('The Google API Key is missing.');\\n}\\n\\n// Construct the API URL with the video ID and dynamically retrieved API key\\nconst youtubeUrl = `${BASE_URL}?part=snippet,contentDetails,status,statistics,player,topicDetails&id=${VIDEO_ID}&key=${GOOGLE_API_KEY}`;\\n\\n// Return the constructed URL\\nreturn [\\n  {\\n    json: {\\n      youtubeUrl: youtubeUrl,\\n    },\\n  },\\n];\\n\"},\"typeVersion\":2},{\"id\":\"f6cf2215-8ad2-4890-a67d-f91a4752e076\",\"name\":\"Split Out Transcript Segments\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[220,360],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"transcript\"},\"typeVersion\":1},{\"id\":\"93c499e0-a10d-4cfb-959f-9590390722f3\",\"name\":\"Combine Transcript Segments\",\"type\":\"n8n-nodes-base.summarize\",\"position\":[420,360],\"parameters\":{\"options\":{},\"fieldsToSummarize\":{\"values\":[{\"field\":\"text\",\"separateBy\":\" \",\"aggregation\":\"concatenate\"}]}},\"typeVersion\":1},{\"id\":\"39e4c739-e241-4113-a003-25cee18b01e1\",\"name\":\"Get YouTube Video Details\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[220,20],\"parameters\":{\"url\":\"={{ $json.youtubeUrl }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"a76d8498-5556-40b6-b259-3d93940f0a04\",\"name\":\"Merge YouTube Details & Transcript\",\"type\":\"n8n-nodes-base.merge\",\"position\":[660,160],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineByPosition\"},\"typeVersion\":3},{\"id\":\"db7233ee-8491-47e2-b3c6-ef3f7765470e\",\"name\":\"Create One JSON Object\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[860,160],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\"},\"typeVersion\":1},{\"id\":\"1f910801-a802-4e21-bc1e-383f03267711\",\"name\":\"Respond with YouTube Details & Transcript\",\"type\":\"n8n-nodes-base.set\",\"position\":[1060,160],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"56c5bc98-fdd1-41c0-8da8-bc81a257570d\",\"name\":\"response\",\"type\":\"string\",\"value\":\"={{ $json.data }}\"}]}},\"typeVersion\":3.4},{\"id\":\"961cec25-9f95-4564-bbdb-4c136bea34f6\",\"name\":\"Workflow Variables\",\"type\":\"n8n-nodes-base.set\",\"position\":[-340,180],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"e656b8ef-4266-4f50-bd41-703b4bdb04df\",\"name\":\"GOOGLE_API_KEY\",\"type\":\"string\",\"value\":\"[Your-Google-API-Key]\"},{\"id\":\"32db428d-a2e2-48a0-92c6-3880e744d140\",\"name\":\"VIDEO_ID\",\"type\":\"string\",\"value\":\"={{ $json.query.videoId }}\"}]}},\"typeVersion\":3.4},{\"id\":\"2819e5fb-4c6d-4672-9fe5-ce83bb51b92f\",\"name\":\"Sticky Note12\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-420,60],\"parameters\":{\"width\":260,\"height\":340,\"content\":\"## Workflow Variables\\nhttps://cloud.google.com/docs/get-started/access-apis\\n\\n\"},\"typeVersion\":1},{\"id\":\"cdf3e883-8835-408a-901e-037ad46e9bde\",\"name\":\"Sticky Note14\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-100,-100],\"parameters\":{\"color\":4,\"width\":500,\"height\":300,\"content\":\"## YouTube Video Details\\nhttps://developers.google.com/youtube/v3/docs\\n\"},\"typeVersion\":1},{\"id\":\"d34d3603-f527-4c77-b219-3db3fe634d1f\",\"name\":\"Sticky Note15\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-100,240],\"parameters\":{\"color\":5,\"width\":700,\"height\":300,\"content\":\"## YouTube Video Transcript\\nhttps://docs.n8n.io/integrations/creating-nodes/test/run-node-locally/\\nhttps://www.npmjs.com/package/youtube-transcript\"},\"typeVersion\":1},{\"id\":\"4ab8a422-90df-4efd-91dd-582cef76b865\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-260,-860],\"parameters\":{\"color\":4,\"width\":280,\"height\":380,\"content\":\"## üëç Try Me!\"},\"typeVersion\":1},{\"id\":\"a4cdd7b8-3be1-42ff-a59c-9a615c69093b\",\"name\":\"YouTube Processing Tool\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[440,-340],\"parameters\":{\"name\":\"youtube_video_analyzer\",\"workflowId\":\"={{ $workflow.id }}\",\"description\":\"Call this tool to get details and transcript from a YouTube video.  Get the videoId from the users prompt.\",\"jsonSchemaExample\":\"{\\n\\t\\\"videoId\\\": \\\"YouTube video id\\\"\\n}\",\"specifyInputSchema\":true},\"typeVersion\":1},{\"id\":\"bb254e70-e416-451e-8334-9297e6714d0c\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[640,-960],\"parameters\":{\"color\":3,\"width\":620,\"height\":780,\"content\":\"## üìΩÔ∏è YouTube Video AI Agent Workflow\\n\\nThis n8n workflow template enables users to interact with an AI agent that extracts details and the transcript of a YouTube video based on a provided video ID. Once the video details and transcript are retrieved, users can chat with the AI agent to explore or analyze the content of the video in a conversational manner.\\n\\n### How the Workflow Works\\n1. **Input Video ID**: The user provides a YouTube video ID as input to the workflow.\\n   \\n2. **Data Retrieval**: The workflow fetches key details about the video (e.g., title, description, upload date) and retrieves its transcript. This involves using YouTube's Data API and other integrated tools for transcript extraction.\\n\\n3. **AI Agent Interaction**: The extracted details and transcript are processed by an AI-powered agent. Users can then ask questions or engage in a discussion with the agent regarding the video's content, such as summarizing the transcript, analyzing key points, or clarifying specific sections.\\n\\n4. **Dynamic Responses**: The AI agent uses natural language processing to provide contextual and accurate responses based on the video data, making the interaction intuitive and user-friendly.\\n\\n### Use Cases\\n- **Content Analysis**: Quickly analyze long YouTube videos by querying specific sections or extracting summaries.\\n- **Research and Learning**: Use the AI agent to gain insights from educational videos or tutorials without watching them in full.\\n- **Content Creation**: Creators can use this workflow to repurpose transcripts into blogs, social media posts, or other formats.\\n- **Accessibility**: Improve accessibility for users who prefer text-based interaction over watching videos.\\n\\n\"},\"typeVersion\":1},{\"id\":\"dfe4a389-cb16-4eea-bd48-d5850c113401\",\"name\":\"DeepSeek-V3   Chat\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-500,-340],\"parameters\":{\"model\":\"=deepseek-chat\",\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"MSl7SdcvZe0SqCYI\",\"name\":\"deepseek\"}},\"typeVersion\":1.1},{\"id\":\"8e6b8e43-bbac-4e5a-ab9f-6b23c50b156b\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-640,-960],\"parameters\":{\"color\":3,\"width\":360,\"height\":480,\"content\":\"## üõ†Ô∏è Resources for Getting Started\\n\\n- **Google Cloud Console** (for API setup): Visit Google Cloud's [Get Started Guide](https://cloud.google.com/docs/get-started/access-apis) to configure your API access.\\n- **YouTube Data API Key Setup**: Follow this [guide](https://developers.google.com/youtube/v3/docs) to create and manage your YouTube Data API key.\\n- **Install n8n Locally**: Refer to this [installation guide](https://docs.n8n.io/integrations/creating-nodes/test/run-node-locally/) for setting up n8n on your local machine.\\n\\n---\\n\\n## ‚ú® Sample Prompt\\n*\\\"Tell me about this YouTube video with id: JWfNLF_g_V0\\\"*  \\n \\n*\\\"Can you provide a list of key takeaways from this video with id: [youtube-video-id]?\\\"*\\n\"},\"typeVersion\":1},{\"id\":\"65fc9096-57c7-4d68-84e9-2e93094e561e\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-640,-460],\"parameters\":{\"color\":6,\"width\":360,\"height\":280,\"content\":\"## DeepSeek\\nhttps://api-docs.deepseek.com/\"},\"typeVersion\":1},{\"id\":\"f75c6462-ec46-48e7-9b82-7de7590f5422\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-260,-960],\"parameters\":{\"color\":7,\"width\":880,\"height\":80,\"content\":\"## üìΩÔ∏èUltimate AI-Powered Chatbot for YouTube Summarization & Analysis\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{\"When Executed by Another Workflow\":[{\"json\":{\"query\":{\"videoId\":\"JWfNLF_g_V0\"}}}]},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"9b1e07da-c789-4b3a-bb41-337dd42ee551\",\"connections\":{\"gpt-4o-mini1\":{\"ai_languageModel\":[[{\"node\":\"YouTube Video Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Workflow Variables\":{\"main\":[[{\"node\":\"Create YouTube API URL\",\"type\":\"main\",\"index\":0},{\"node\":\"Get YouTube Transcript\",\"type\":\"main\",\"index\":0}]]},\"YouTube Video Agent\":{\"main\":[[]]},\"Window Buffer Memory\":{\"ai_memory\":[[{\"node\":\"YouTube Video Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Create One JSON Object\":{\"main\":[[{\"node\":\"Respond with YouTube Details & Transcript\",\"type\":\"main\",\"index\":0}]]},\"Create YouTube API URL\":{\"main\":[[{\"node\":\"Get YouTube Video Details\",\"type\":\"main\",\"index\":0}]]},\"Get YouTube Transcript\":{\"main\":[[{\"node\":\"Split Out Transcript Segments\",\"type\":\"main\",\"index\":0}]]},\"YouTube Processing Tool\":{\"ai_tool\":[[{\"node\":\"YouTube Video Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get YouTube Video Details\":{\"main\":[[{\"node\":\"Merge YouTube Details & Transcript\",\"type\":\"main\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"YouTube Video Agent\",\"type\":\"main\",\"index\":0}]]},\"Combine Transcript Segments\":{\"main\":[[{\"node\":\"Merge YouTube Details & Transcript\",\"type\":\"main\",\"index\":1}]]},\"Split Out Transcript Segments\":{\"main\":[[{\"node\":\"Combine Transcript Segments\",\"type\":\"main\",\"index\":0}]]},\"When Executed by Another Workflow\":{\"main\":[[{\"node\":\"Workflow Variables\",\"type\":\"main\",\"index\":0}]]},\"Merge YouTube Details & Transcript\":{\"main\":[[{\"node\":\"Create One JSON Object\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## üé• YouTube Video AI Agent Workflow\n\nThis n8n workflow template allows you to interact with an AI agent that extracts details and the transcript of a YouTube video using a provided video ID. Once the details and transcript are retrieved, you can chat with the AI agent to explore or analyze the video's content in a conversational and insightful manner.\n\n### üåü How the Workflow Works\n\n  1. **üîó Input Video ID** : The user provides a YouTube video ID as input to the workflow.\n\n  2. **üìÑ Data Retrieval** : The workflow fetches essential details about the video (e.g., title, description, upload date) and retrieves its transcript using YouTube's Data API and additional tools for transcript extraction.\n\n  3. **ü§ñ AI Agent Interaction** : The extracted details and transcript are processed by an AI-powered agent. Users can then ask questions or engage in a conversation with the agent about the video's content, such as:\n\n     * Summarizing the transcript.\n     * Analyzing key points.\n     * Clarifying specific sections.\n  4. **üí¨ Dynamic Responses** : The AI agent uses natural language processing (NLP) to generate contextual and accurate responses based on the video data, ensuring a smooth and intuitive interaction.\n\n\n\n\n* * *\n\n### üöÄ Use Cases\n\n  * **üìä Content Analysis** : Quickly analyze long YouTube videos by querying specific sections or extracting summaries.\n  * **üìö Research and Learning** : Gain insights from educational videos or tutorials without watching them entirely.\n  * **‚úçÔ∏è Content Creation** : Repurpose transcripts into blogs, social media posts, or other formats efficiently.\n  * **‚ôø Accessibility** : Provide an alternative, text-based way to interact with video content for users who prefer reading over watching.\n\n\n\n* * *\n\n### üõ†Ô∏è Resources for Getting Started\n\n  * **Google Cloud Console** (for API setup): Visit Google Cloud's [Get Started Guide](https://cloud.google.com/docs/get-started/access-apis) to configure your API access.\n  * **YouTube Data API Key Setup** : Follow this [guide](https://developers.google.com/youtube/v3/docs) to create and manage your YouTube Data API key.\n  * **Install n8n Locally** : Refer to this [installation guide](https://docs.n8n.io/integrations/creating-nodes/test/run-node-locally/) for setting up n8n on your local machine.\n\n\n\n* * *\n\n### ‚ú® Sample Prompts\n\n_\"Tell me about this YouTube video with id: JWfNLF_g_V0\"_\n\n_\"Can you provide a list of key takeaways from this video with id: [youtube-video-id]?\"_\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>üé• YouTube Video AI Agent Workflow</h2>\n<p>This n8n workflow template allows you to interact with an AI agent that extracts details and the transcript of a YouTube video using a provided video ID. Once the details and transcript are retrieved, you can chat with the AI agent to explore or analyze the video's content in a conversational and insightful manner.</p>\n<h3>üåü How the Workflow Works</h3>\n<ol>\n<li>\n<p><strong>üîó Input Video ID</strong>: The user provides a YouTube video ID as input to the workflow.</p>\n</li>\n<li>\n<p><strong>üìÑ Data Retrieval</strong>: The workflow fetches essential details about the video (e.g., title, description, upload date) and retrieves its transcript using YouTube's Data API and additional tools for transcript extraction.</p>\n</li>\n<li>\n<p><strong>ü§ñ AI Agent Interaction</strong>: The extracted details and transcript are processed by an AI-powered agent. Users can then ask questions or engage in a conversation with the agent about the video's content, such as:</p>\n<ul>\n<li>Summarizing the transcript.</li>\n<li>Analyzing key points.</li>\n<li>Clarifying specific sections.</li>\n</ul>\n</li>\n<li>\n<p><strong>üí¨ Dynamic Responses</strong>: The AI agent uses natural language processing (NLP) to generate contextual and accurate responses based on the video data, ensuring a smooth and intuitive interaction.</p>\n</li>\n</ol>\n<hr>\n<h3>üöÄ Use Cases</h3>\n<ul>\n<li><strong>üìä Content Analysis</strong>: Quickly analyze long YouTube videos by querying specific sections or extracting summaries.</li>\n<li><strong>üìö Research and Learning</strong>: Gain insights from educational videos or tutorials without watching them entirely.</li>\n<li><strong>‚úçÔ∏è Content Creation</strong>: Repurpose transcripts into blogs, social media posts, or other formats efficiently.</li>\n<li><strong>‚ôø Accessibility</strong>: Provide an alternative, text-based way to interact with video content for users who prefer reading over watching.</li>\n</ul>\n<hr>\n<h3>üõ†Ô∏è Resources for Getting Started</h3>\n<ul>\n<li><strong>Google Cloud Console</strong> (for API setup): Visit Google Cloud's <a href=\"https://cloud.google.com/docs/get-started/access-apis\" rel=\"ugc nofollow\" target=\"_blank\">Get Started Guide</a> to configure your API access.</li>\n<li><strong>YouTube Data API Key Setup</strong>: Follow this <a href=\"https://developers.google.com/youtube/v3/docs\" rel=\"ugc nofollow\" target=\"_blank\">guide</a> to create and manage your YouTube Data API key.</li>\n<li><strong>Install n8n Locally</strong>: Refer to this <a href=\"https://docs.n8n.io/integrations/creating-nodes/test/run-node-locally/\" rel=\"ugc nofollow\" target=\"_blank\">installation guide</a> for setting up n8n on your local machine.</li>\n</ul>\n<hr>\n<h3>‚ú® Sample Prompts</h3>\n<p><em>\"Tell me about this YouTube video with id: JWfNLF_g_V0\"</em></p>\n<p><em>\"Can you provide a list of key takeaways from this video with id: [youtube-video-id]?\"</em></p>\n</div><!--]-->",
  "readme_zh": "## üé• YouTubeËßÜÈ¢ëAIÊô∫ËÉΩ‰ª£ÁêÜÂ∑•‰ΩúÊµÅÁ®ã\n\nÊú¨n8nÂ∑•‰ΩúÊµÅÊ®°ÊùøÂÖÅËÆ∏ÊÇ®‰∏éAIÊô∫ËÉΩ‰ª£ÁêÜ‰∫§‰∫íÔºåÈÄöËøáÊèê‰æõÁöÑËßÜÈ¢ëIDÊèêÂèñYouTubeËßÜÈ¢ëËØ¶ÊÉÖÂèäÂ≠óÂπïÊñáÊú¨„ÄÇËé∑ÂèñËßÜÈ¢ë‰ø°ÊÅØÂêéÔºåÊÇ®ÂèØ‰∏éAIËøõË°åÂØπËØùÂºè‰∫§ÊµÅÔºå‰ª•ÂØåÊúâÊ¥ûÂØüÂäõÁöÑÊñπÂºèÊé¢Á¥¢ÂàÜÊûêËßÜÈ¢ëÂÜÖÂÆπ„ÄÇ\n\n### üåü Â∑•‰ΩúÊµÅÁ®ãËØ¥Êòé\n\n1. **üîó ËæìÂÖ•ËßÜÈ¢ëID**ÔºöÁî®Êà∑ÂêëÂ∑•‰ΩúÊµÅÊèê‰∫§YouTubeËßÜÈ¢ëID\n\n2. **üìÑ Êï∞ÊçÆËé∑Âèñ**ÔºöÂ∑•‰ΩúÊµÅÈÄöËøáYouTubeÊï∞ÊçÆAPIÂèäÂ≠óÂπïÊèêÂèñÂ∑•ÂÖ∑ÔºåËé∑ÂèñËßÜÈ¢ëÂü∫Á°Ä‰ø°ÊÅØÔºàÊ†áÈ¢ò/ÊèèËø∞/‰∏ä‰º†Êó•ÊúüÁ≠âÔºâÂèäÂÆåÊï¥Â≠óÂπïÊñáÊú¨\n\n3. **ü§ñ AIÊô∫ËÉΩ‰∫§‰∫í**ÔºöAI‰ª£ÁêÜÂ∞ÜÂ§ÑÁêÜÊèêÂèñÁöÑ‰ø°ÊÅØÔºåÊîØÊåÅÁî®Êà∑ÈÄöËøáËá™ÁÑ∂ËØ≠Ë®ÄËøõË°åÂ§öÁßçÊìç‰ΩúÔºö\n   * ÁîüÊàêÂ≠óÂπïÊëòË¶Å\n   * Ëß£ÊûêÊ†∏ÂøÉËßÇÁÇπ\n   * ÊæÑÊ∏ÖÁâπÂÆöÁâáÊÆµ\n\n4. **üí¨ Âä®ÊÄÅÂìçÂ∫î**ÔºöÂü∫‰∫éËá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜÊäÄÊúØ(NLP)ÔºåAIÂ∞ÜÊ†πÊçÆËßÜÈ¢ëÂÜÖÂÆπÁîüÊàêÁ≤æÂáÜÁöÑ‰∏ä‰∏ãÊñáÂìçÂ∫îÔºåÁ°Æ‰øù‰∫§‰∫íÊµÅÁïÖÁõ¥ËßÇ\n\n* * *\n\n### üöÄ Â∫îÁî®Âú∫ÊôØ\n\n* **üìä ÂÜÖÂÆπÂàÜÊûê**ÔºöÈÄöËøáÊü•ËØ¢ÁâπÂÆöÁâáÊÆµÊàñËé∑ÂèñÊëòË¶ÅÔºåÂø´ÈÄüËß£ÊûêÈïøËßÜÈ¢ë\n* **üìö Á†îÁ©∂Â≠¶‰π†**ÔºöÊó†ÈúÄÂÆåÊï¥ËßÇÁúãÂç≥ÂèØËé∑ÂèñÊïôËÇ≤Á±ªËßÜÈ¢ëÁöÑÊ†∏ÂøÉÁü•ËØÜ\n* **‚úçÔ∏è ÂÜÖÂÆπÂàõ‰Ωú**ÔºöÈ´òÊïàÂ∞ÜÂ≠óÂπïËΩ¨Âåñ‰∏∫ÂçöÂÆ¢„ÄÅÁ§æ‰∫§Â™í‰ΩìÂ∏ñÂ≠êÁ≠âË°çÁîüÂÜÖÂÆπ\n* **‚ôø Êó†ÈöúÁ¢çËÆøÈóÆ**Ôºö‰∏∫ÂÅèÂ•ΩÊñáÂ≠óÈòÖËØªÁöÑÁî®Êà∑Êèê‰æõËßÜÈ¢ëÂÜÖÂÆπÁöÑÊõø‰ª£‰∫§‰∫íÊñπÂºè\n\n* * *\n\n### üõ†Ô∏è ÂÖ•Èó®ËµÑÊ∫ê\n\n* **Ë∞∑Ê≠å‰∫ëÊéßÂà∂Âè∞**ÔºàAPIÈÖçÁΩÆÔºâÔºöÂèÇÈòÖ[Ë∞∑Ê≠å‰∫ëÂÖ•Èó®ÊåáÂçó](https://cloud.google.com/docs/get-started/access-apis)\n* **YouTubeÊï∞ÊçÆAPIÂØÜÈí•ËÆæÁΩÆ**ÔºöÊåâÁÖß[ÂÆòÊñπÊåáÂçó](https://developers.google.com/youtube/v3/docs)ÂàõÂª∫ÁÆ°ÁêÜAPIÂØÜÈí•\n* **Êú¨Âú∞ÂÆâË£Ön8n**ÔºöÂèÇËÄÉ[ÂÆâË£ÖÊïôÁ®ã](https://docs.n8n.io/integrations/creating-nodes/test/run-node-locally/)ÈÖçÁΩÆÊú¨Âú∞ÁéØÂ¢É\n\n* * *\n\n### ‚ú® Á§∫‰æãÊåá‰ª§\n\n\"ËØ∑Ëß£ÊûêID‰∏∫JWfNLF_g_V0ÁöÑYouTubeËßÜÈ¢ë\"\n\n\"ËÉΩÂê¶ÂàóÂá∫Ëøô‰∏™ËßÜÈ¢ë[idÊõøÊç¢]ÁöÑ‰∏â‰∏™Ê†∏ÂøÉËßÇÁÇπÔºü\"",
  "title_zh": "‚ö°üìΩÔ∏è ÁªàÊûÅAIÈ©±Âä®YouTubeËßÜÈ¢ëÊëòË¶Å‰∏éÂàÜÊûêËÅäÂ§©Êú∫Âô®‰∫∫",
  "publish_date_zh": "ÊúÄÂêéÊõ¥Êñ∞‰∫é2‰∏™ÊúàÂâç",
  "workflow_json_zh": "{\n  \"id\": \"GM9Qxzul4NPQpJkn\",\n  \"meta\": {\n    \"instanceId\": \"31e69f7f4a77bf465b805824e303232f0227212ae922d12133a0f96ffeab4fef\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"‚ö°üìΩÔ∏è Ultimate AI-Powered Chatbot for YouTube Summarization & Analysis\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"10cfb27f-ef93-41cd-972e-37dfdcab97ad\",\n      \"name\": \"Get YouTube Transcript\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        20,\n        360\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get all input items\\nconst items = $input.all();\\nconst results = [];\\n\\n// Import the YoutubeTranscript module from the youtube-transcript package\\n// npm i -g youtube-transcript\\nconst { YoutubeTranscript } = require('youtube-transcript');\\n\\nfor (let i = 0; i < items.length; i++) {\\n  // Extract the VIDEO_ID from the input JSON\\n  const VIDEO_ID = items[i].json.VIDEO_ID;\\n  \\n  if (!VIDEO_ID) {\\n    throw new Error('The video ID parameter is empty.');\\n  }\\n  \\n  try {\\n    // Fetch the transcript for the provided video ID\\n    const transcript = await YoutubeTranscript.fetchTranscript(VIDEO_ID);\\n    \\n    // Append the fetched transcript data to the results\\n    results.push({\\n      json: {\\n        youtubeId: VIDEO_ID,\\n        transcript,\\n      },\\n    });\\n  } catch (error) {\\n    // In case of an error, add an error message to the output for this item\\n    results.push({\\n      json: {\\n        youtubeId: VIDEO_ID,\\n        error: error.message,\\n      },\\n    });\\n  }\\n}\\n\\n// Return the results to be used by the next node in the workflow\\nreturn results;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a7b7740e-7470-4ce0-a698-6043559eb781\",\n      \"name\": \"When Executed by Another Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -580,\n        180\n      ],\n      \"parameters\": {\n        \"inputSource\": \"jsonExample\",\n        \"jsonExample\": \"{\\n  \\\"query\\\": {\\n\\t\\\"videoId\\\": \\\"YouTube video id\\\"\\n  }\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"f6c6cbc2-ba2d-4f16-a3f2-ad4d6280f6b6\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -180,\n        -720\n      ],\n      \"webhookId\": \"5ed6c28d-2469-4f32-bd16-939f2942a0de\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"ac051c4a-0dc7-4f75-97a7-cb4bed0c8845\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        40,\n        -860\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 580,\n        \"height\": 380,\n        \"content\": \"## ü§ñ ‰∏ì‰∏∫YouTubeËßÜÈ¢ëÊâìÈÄ†ÁöÑAIÊô∫ËÉΩËÅäÂ§©Âä©Êâã\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1a737d98-747e-40ae-9075-2b30c93f83a6\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        340,\n        -460\n      ],\n      \"parameters\": {\n        \"width\": 280,\n        \"height\": 280,\n        \"content\": \"## üõ†Ô∏è YouTubeËßÜÈ¢ëÂ§ÑÁêÜÂ∑•ÂÖ∑\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"54d39566-a028-48be-87d6-4412d4c53f33\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -260,\n        -460\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 280,\n        \"height\": 280,\n        \"content\": \"## OpenAI\\nhttps://platform.openai.com/api-keys\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"90468bc1-9f91-49ab-bde3-d823d7ac6d05\",\n      \"name\": \"Window Buffer Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        140,\n        -340\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"fe54da1d-05e7-4da1-9347-83e1cf370710\",\n      \"name\": \"Sticky Note13\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        40,\n        -460\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 280,\n        \"height\": 280,\n        \"content\": \"## ËÅäÂ§©ÂéÜÂè≤ËÆ∞ÂøÜ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0fce1309-2982-4579-8454-34df88e5976c\",\n      \"name\": \"gpt-4o-mini1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -160,\n        -340\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {\n          \"temperature\": 0.1\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"jEMSvKmtYfzAkhe6\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8d841054-2096-49bf-8539-822b14f598df\",\n      \"name\": \"YouTube Video Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        200,\n        -720\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.chatInput }}\",\n        \"options\": {\n          \"systemMessage\": \"=You are an AI assistant tasked with analyzing and summarizing the transcript of a YouTube video. Your role is to answer user questions and extract relevant insights from the video content. Additionally, identify and extract the **YouTube video ID** from the user's input.\\n\\nYou have access to a tool called `youtube_video_analyzer`, which can analyze YouTube videos. Use this tool effectively to process video transcripts and generate structured summaries.\\n\\n#### Instructions:\\n1. **Extract YouTube Video ID**:\\n   - Identify the **video ID** from the user's input.\\n   - Use this ID to analyze the video using the `youtube_video_analyzer` tool.\\n\\n2. **Analyze and Summarize**:\\n   - Break down the video content into main topics using Level 2 headers (##).\\n  2.1. Under each header:\\n     - List only the most essential concepts and key points\\n     - Use bullet points for clarity\\n     - Keep explanations concise\\n     - Preserve technical accuracy\\n     - Highlight key terms in bold\\n  2.2. Organize the information in this sequence:\\n     - Definition/Background\\n     - Main characteristics\\n     - Implementation details\\n     - Advantages/Disadvantages\\n  2.3. Format requirements:\\n     - Use markdown formatting\\n     - Keep bullet points simple (no nesting)\\n     - Bold important terms using **term**\\n     - Use tables for comparisons\\n     - Include relevant technical details\\n\\n3. **Organize Output**:\\n   - Structure your response in this sequence:\\n     1. **Definition/Background**: Provide a brief overview or context of the topic.\\n     2. **Main Characteristics**: Highlight critical features or ideas.\\n     3. **Implementation Details**: Explain how concepts are applied or executed.\\n     4. **Advantages/Disadvantages**: Summarize benefits and limitations.\\n\\n4. **Formatting Requirements**:\\n   - Use markdown formatting for clarity.\\n   - Keep bullet points simple (no nested lists).\\n   - Use tables for comparisons when applicable.\\n   - Include relevant technical details where necessary.\\n\\nPlease provide a clear, structured summary that captures the core concepts while maintaining technical accuracy.\\n\\n#### Example Output Structure:\\n## Title: Title of video.\\n\\n## Topic 1: [Main Topic]\\n- **Definition/Background**: Brief explanation of the topic.\\n- **Main Characteristics**:\\n  - Key feature 1\\n  - Key feature 2\\n- **Implementation Details**:\\n  - How it works\\n- **Advantages/Disadvantages**:\\n  - Advantage 1\\n  - Disadvantage 1\\n\\n## Topic 2: [Next Main Topic]\\n...\\n\\n#### Additional Notes:\\n- Ensure your summaries are clear, structured, and technically accurate.\\n- If any information is missing or unclear, note it explicitly in your response.\\n\\nCurrent date: {{ $now }}\\n\\n\\n\\n\\n \\n\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"5252b7ce-0e3f-4f1d-a76a-6df780b4f8d4\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -640,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1910,\n        \"height\": 720,\n        \"content\": \"## üõ†Ô∏èYouTubeËßÜÈ¢ëÂ§ÑÁêÜÂ∑•ÂÖ∑\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d458ef6c-9149-4515-89ac-1c0569186123\",\n      \"name\": \"Create YouTube API URL\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        20,\n        20\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Define the base URL for the YouTube Data API\\nconst BASE_URL = 'https://www.googleapis.com/youtube/v3/videos';\\n\\n// Get the first input item\\nconst item = $input.first();\\n\\n// Extract the videoId and google_api_key from the input JSON\\nconst VIDEO_ID = item.json.VIDEO_ID;\\nconst GOOGLE_API_KEY = item.json.GOOGLE_API_KEY; // Dynamically retrieve API key\\n\\nif (!VIDEO_ID) {\\n  throw new Error('The video ID parameter is empty.');\\n}\\n\\nif (!GOOGLE_API_KEY) {\\n  throw new Error('The Google API Key is missing.');\\n}\\n\\n// Construct the API URL with the video ID and dynamically retrieved API key\\nconst youtubeUrl = `${BASE_URL}?part=snippet,contentDetails,status,statistics,player,topicDetails&id=${VIDEO_ID}&key=${GOOGLE_API_KEY}`;\\n\\n// Return the constructed URL\\nreturn [\\n  {\\n    json: {\\n      youtubeUrl: youtubeUrl,\\n    },\\n  },\\n];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f6cf2215-8ad2-4890-a67d-f91a4752e076\",\n      \"name\": \"Split Out Transcript Segments\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        220,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"transcript\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"93c499e0-a10d-4cfb-959f-9590390722f3\",\n      \"name\": \"Combine Transcript Segments\",\n      \"type\": \"n8n-nodes-base.summarize\",\n      \"position\": [\n        420,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldsToSummarize\": {\n          \"values\": [\n            {\n              \"field\": \"text\",\n              \"separateBy\": \" \",\n              \"aggregation\": \"concatenate\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"39e4c739-e241-4113-a003-25cee18b01e1\",\n      \"name\": \"Get YouTube Video Details\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        220,\n        20\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.youtubeUrl }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"a76d8498-5556-40b6-b259-3d93940f0a04\",\n      \"name\": \"Merge YouTube Details & Transcript\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        660,\n        160\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"db7233ee-8491-47e2-b3c6-ef3f7765470e\",\n      \"name\": \"Create One JSON Object\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        860,\n        160\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1f910801-a802-4e21-bc1e-383f03267711\",\n      \"name\": \"Respond with YouTube Details & Transcript\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1060,\n        160\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"56c5bc98-fdd1-41c0-8da8-bc81a257570d\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.data }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"961cec25-9f95-4564-bbdb-4c136bea34f6\",\n      \"name\": \"Workflow Variables\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -340,\n        180\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"e656b8ef-4266-4f50-bd41-703b4bdb04df\",\n              \"name\": \"GOOGLE_API_KEY\",\n              \"type\": \"string\",\n              \"value\": \"[Your-Google-API-Key]\"\n            },\n            {\n              \"id\": \"32db428d-a2e2-48a0-92c6-3880e744d140\",\n              \"name\": \"VIDEO_ID\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.query.videoId }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"2819e5fb-4c6d-4672-9fe5-ce83bb51b92f\",\n      \"name\": \"Sticky Note12\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -420,\n        60\n      ],\n      \"parameters\": {\n        \"width\": 260,\n        \"height\": 340,\n        \"content\": \"## Â∑•‰ΩúÊµÅÂèòÈáè\\nhttps://cloud.google.com/docs/get-started/access-apis\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cdf3e883-8835-408a-901e-037ad46e9bde\",\n      \"name\": \"Sticky Note14\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -100,\n        -100\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 500,\n        \"height\": 300,\n        \"content\": \"## YouTube ËßÜÈ¢ëËØ¶ÊÉÖ\\nhttps://developers.google.com/youtube/v3/docs\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d34d3603-f527-4c77-b219-3db3fe634d1f\",\n      \"name\": \"Sticky Note15\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -100,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 700,\n        \"height\": 300,\n        \"content\": \"## YouTubeËßÜÈ¢ëËΩ¨ÂΩïÊñáÊú¨\\nhttps://docs.n8n.io/integrations/creating-nodes/test/run-node-locally/\\nhttps://www.npmjs.com/package/youtube-transcript\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4ab8a422-90df-4efd-91dd-582cef76b865\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -260,\n        -860\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 280,\n        \"height\": 380,\n        \"content\": \"## üëç ËØïËØïÁúãÔºÅ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4cdd7b8-3be1-42ff-a59c-9a615c69093b\",\n      \"name\": \"YouTube Processing Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        440,\n        -340\n      ],\n      \"parameters\": {\n        \"name\": \"youtube_video_analyzer\",\n        \"workflowId\": \"={{ $workflow.id }}\",\n        \"description\": \"Call this tool to get details and transcript from a YouTube video.  Get the videoId from the users prompt.\",\n        \"jsonSchemaExample\": \"{\\n\\t\\\"videoId\\\": \\\"YouTube video id\\\"\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bb254e70-e416-451e-8334-9297e6714d0c\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        640,\n        -960\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 620,\n        \"height\": 780,\n        \"content\": \"## üìΩÔ∏è YouTubeËßÜÈ¢ëAIÊô∫ËÉΩ‰ΩìÂ∑•‰ΩúÊµÅ\\n\\nÊú¨n8nÂ∑•‰ΩúÊµÅÊ®°ÊùøÂÖÅËÆ∏Áî®Êà∑‰∏éAIÊô∫ËÉΩ‰Ωì‰∫§‰∫íÔºåÈÄöËøáËæìÂÖ•ËßÜÈ¢ëIDËé∑ÂèñYouTubeËßÜÈ¢ëÁöÑËØ¶ÁªÜ‰ø°ÊÅØÂíåÂ≠óÂπïÊñáÊú¨„ÄÇÂú®ÊèêÂèñËßÜÈ¢ëÂÖÉÊï∞ÊçÆÂíåÂ≠óÂπïÂêéÔºåÁî®Êà∑ÂèØÈÄöËøáÂØπËØùÂΩ¢Âºè‰∏éAIÊô∫ËÉΩ‰Ωì‰∫§ÊµÅÔºåÊé¢Á¥¢ÊàñÂàÜÊûêËßÜÈ¢ëÂÜÖÂÆπ„ÄÇ\\n\\n### Â∑•‰ΩúÊµÅËøêË°åÂéüÁêÜ\\n1. **ËæìÂÖ•ËßÜÈ¢ëID**ÔºöÁî®Êà∑ÂêëÂ∑•‰ΩúÊµÅÊèê‰∫§YouTubeËßÜÈ¢ëÁöÑÂîØ‰∏ÄÊ†áËØÜÁ¨¶„ÄÇ\\n\\n2. **Êï∞ÊçÆËé∑Âèñ**ÔºöÂ∑•‰ΩúÊµÅÈÄöËøáYouTubeÊï∞ÊçÆAPIÁ≠âÈõÜÊàêÂ∑•ÂÖ∑ÊäìÂèñËßÜÈ¢ëÂÖ≥ÈîÆ‰ø°ÊÅØÔºàÂ¶ÇÊ†áÈ¢ò„ÄÅÊèèËø∞„ÄÅ‰∏ä‰º†Êó•ÊúüÔºâÂπ∂ÊèêÂèñÂ≠óÂπïÊñáÊú¨„ÄÇ\\n\\n3. **AIÊô∫ËÉΩ‰Ωì‰∫§‰∫í**ÔºöËé∑ÂèñÁöÑÊï∞ÊçÆÂ∞ÜÁî±AIÊô∫ËÉΩ‰ΩìËøõË°åÂ§ÑÁêÜ„ÄÇÁî®Êà∑ÂèØÂõ¥ÁªïËßÜÈ¢ëÂÜÖÂÆπËøõË°åÊèêÈóÆÊàñËÆ®ËÆ∫Ôºå‰æãÂ¶ÇËØ∑Ê±ÇÊÄªÁªìÂ≠óÂπï„ÄÅÂàÜÊûêÊ†∏ÂøÉËßÇÁÇπÊàñÊæÑÊ∏ÖÁâπÂÆöÁâáÊÆµ„ÄÇ\\n\\n4. **Âä®ÊÄÅÂìçÂ∫î**ÔºöAIÊô∫ËÉΩ‰ΩìËøêÁî®Ëá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜÊäÄÊúØÔºåÂü∫‰∫éËßÜÈ¢ëÊï∞ÊçÆÊèê‰æõÁ¨¶ÂêàËØ≠Â¢ÉÁöÑÁ≤æÂáÜÂõûÂ§çÔºåÂÆûÁé∞Áõ¥ËßÇÂèãÂ•ΩÁöÑ‰∫§‰∫í‰ΩìÈ™å„ÄÇ\\n\\n### Â∫îÁî®Âú∫ÊôØ\\n- **ÂÜÖÂÆπÂàÜÊûê**ÔºöÈÄöËøáÊü•ËØ¢ÁâπÂÆöÁâáÊÆµÊàñËé∑ÂèñÊëòË¶ÅÔºåÂø´ÈÄüËß£ÊûêÈïøËßÜÈ¢ëÂÜÖÂÆπ\\n- **Á†îÁ©∂Â≠¶‰π†**ÔºöÊó†ÈúÄÂÆåÊï¥ËßÇÁúãÊïôÂ≠¶ËßÜÈ¢ëÔºåÂç≥ÂèØÈÄöËøáAIÊô∫ËÉΩ‰ΩìËé∑ÂèñÁü•ËØÜË¶ÅÁÇπ\\n- **ÂÜÖÂÆπÂàõ‰Ωú**ÔºöÂàõ‰ΩúËÄÖÂèØÂ∞ÜÂ≠óÂπïÊñáÊú¨ËΩ¨Âåñ‰∏∫ÂçöÂÆ¢„ÄÅÁ§æ‰∫§Â™í‰ΩìÂ∏ñÂ≠êÁ≠âÂÖ∂‰ªñÂΩ¢Âºè\\n- **Êó†ÈöúÁ¢çÊîØÊåÅ**Ôºö‰∏∫Êõ¥ÂÄæÂêëÊñáÊú¨‰∫§‰∫íÁöÑÁî®Êà∑Êèê‰æõËßÜÈ¢ëÂÜÖÂÆπÊõø‰ª£ÊñπÊ°à\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dfe4a389-cb16-4eea-bd48-d5850c113401\",\n      \"name\": \"DeepSeek-V3   Chat\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -500,\n        -340\n      ],\n      \"parameters\": {\n        \"model\": \"=deepseek-chat\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"MSl7SdcvZe0SqCYI\",\n          \"name\": \"deepseek\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8e6b8e43-bbac-4e5a-ab9f-6b23c50b156b\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -640,\n        -960\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 360,\n        \"height\": 480,\n        \"content\": \"## üõ†Ô∏è ÂÖ•Èó®ËµÑÊ∫ê\\n\\n- **Google CloudÊéßÂà∂Âè∞**ÔºàÁî®‰∫éAPIËÆæÁΩÆÔºâÔºöËÆøÈóÆGoogle CloudÁöÑ[ÂÖ•Èó®ÊåáÂçó](https://cloud.google.com/docs/get-started/access-apis)ÈÖçÁΩÆÊÇ®ÁöÑAPIËÆøÈóÆÊùÉÈôê„ÄÇ\\n- **YouTubeÊï∞ÊçÆAPIÂØÜÈí•ËÆæÁΩÆ**ÔºöÊåâÁÖßÊ≠§[ÊåáÂçó](https://developers.google.com/youtube/v3/docs)ÂàõÂª∫ÂíåÁÆ°ÁêÜÊÇ®ÁöÑYouTubeÊï∞ÊçÆAPIÂØÜÈí•„ÄÇ\\n- **Êú¨Âú∞ÂÆâË£Ön8n**ÔºöÂèÇËÄÉÊ≠§[ÂÆâË£ÖÊåáÂçó](https://docs.n8n.io/integrations/creating-nodes/test/run-node-locally/)Âú®Êú¨Âú∞Êú∫Âô®‰∏äËÆæÁΩÆn8n„ÄÇ\\n\\n---\\n\\n## ‚ú® Á§∫‰æãÊèêÁ§∫\\n*\\\"ÂëäËØâÊàëËøô‰∏™YouTubeËßÜÈ¢ëÔºàID: JWfNLF_g_V0ÔºâÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØ\\\"*  \\n\\n*\\\"ËÉΩÂê¶Êèê‰æõËøô‰∏™ËßÜÈ¢ëÔºàID: [youtube-video-id]ÔºâÁöÑÂÖ≥ÈîÆË¶ÅÁÇπÂàóË°®Ôºü\\\"*\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"65fc9096-57c7-4d68-84e9-2e93094e561e\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -640,\n        -460\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 360,\n        \"height\": 280,\n        \"content\": \"## DeepSeek\\nhttps://api-docs.deepseek.com/\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f75c6462-ec46-48e7-9b82-7de7590f5422\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -260,\n        -960\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 880,\n        \"height\": 80,\n        \"content\": \"## üìΩÔ∏èÁªàÊûÅAIÈ©±Âä®YouTubeËßÜÈ¢ëÊëòË¶Å‰∏éÂàÜÊûêËÅäÂ§©Êú∫Âô®‰∫∫\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"When Executed by Another Workflow\": [\n      {\n        \"json\": {\n          \"query\": {\n            \"videoId\": \"JWfNLF_g_V0\"\n          }\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"9b1e07da-c789-4b3a-bb41-337dd42ee551\",\n  \"connections\": {\n    \"gpt-4o-mini1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"YouTube Video Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Workflow Variables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create YouTube API URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get YouTube Transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"YouTube Video Agent\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Window Buffer Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"YouTube Video Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create One JSON Object\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond with YouTube Details & Transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create YouTube API URL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get YouTube Video Details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get YouTube Transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out Transcript Segments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"YouTube Processing Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"YouTube Video Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get YouTube Video Details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge YouTube Details & Transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"YouTube Video Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Transcript Segments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge YouTube Details & Transcript\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Split Out Transcript Segments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Transcript Segments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When Executed by Another Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Workflow Variables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge YouTube Details & Transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create One JSON Object\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}