{
  "title": "Auto-Post Dev.to Articles to LinkedIn with Airtable Tracking & Telegram Alerts",
  "url": "https://n8n.io/workflows/3883-auto-post-devto-articles-to-linkedin-with-airtable-tracking-and-telegram-alerts/",
  "category": "Marketing",
  "category_url": "https://n8n.io/workflows/categories/marketing/?sort=createdAt:desc",
  "author": "Krishna Kumar Eswaran",
  "publish_date": "Last update 8 days ago",
  "publish_date_absolute": "2025-05-11",
  "content": "",
  "workflow_json": "{\"id\":\"yF1HNe2ucaE81fNl\",\"meta\":{\"instanceId\":\"52be616fc3b9990a95b5266574f084bd2127609e79ce7dbfc33a1224bcc79eee\",\"templateCredsSetupCompleted\":true},\"name\":\"Linkedin Automation\",\"tags\":[],\"nodes\":[{\"id\":\"fa012332-1c95-4460-b1d1-9d54441c9179\",\"name\":\"Get List of records used\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[-40,-80],\"parameters\":{\"base\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"appt6kHkRkLlUh033\",\"cachedResultUrl\":\"https://airtable.com/appt6kHkRkLlUh033\",\"cachedResultName\":\"Linkdin\"},\"table\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"tbliloartO26TD5TG\",\"cachedResultUrl\":\"https://airtable.com/appt6kHkRkLlUh033/tbliloartO26TD5TG\",\"cachedResultName\":\"Used Articles\"},\"options\":{},\"operation\":\"search\"},\"credentials\":{\"airtableTokenApi\":{\"id\":\"9bPeAvakB1tkDxsW\",\"name\":\"Airtable Personal Access Token account\"}},\"typeVersion\":2.1,\"alwaysOutputData\":true},{\"id\":\"2d99b3b7-2fcd-46bf-8859-f41e94cb5ae1\",\"name\":\"Update the used node\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[200,280],\"parameters\":{\"base\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"appt6kHkRkLlUh033\",\"cachedResultUrl\":\"https://airtable.com/appt6kHkRkLlUh033\",\"cachedResultName\":\"Linkdin\"},\"table\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"tbliloartO26TD5TG\",\"cachedResultUrl\":\"https://airtable.com/appt6kHkRkLlUh033/tbliloartO26TD5TG\",\"cachedResultName\":\"Used Articles\"},\"columns\":{\"value\":{\"id\":\"={{ $('download image for post').item.json.id }}\",\"value\":\"={{ $('download image for post').item.json.id }}\"},\"schema\":[{\"id\":\"id\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"id\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"value\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"value\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"create\"},\"credentials\":{\"airtableTokenApi\":{\"id\":\"9bPeAvakB1tkDxsW\",\"name\":\"Airtable Personal Access Token account\"}},\"typeVersion\":2.1},{\"id\":\"72abb016-8f58-4c4c-b492-9ba7a576441a\",\"name\":\"map used articls ids\",\"type\":\"n8n-nodes-base.code\",\"position\":[200,-80],\"parameters\":{\"jsCode\":\"let values = $input.all().map(item => item.json.value);\\n\\nreturn [\\n    {\\n      json: {\\n        values: values\\n      }\\n    }\\n  ];\"},\"typeVersion\":2},{\"id\":\"c6712f11-2852-49af-8fb9-235da0e4685c\",\"name\":\"fetch articles from Url\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[420,-80],\"parameters\":{\"url\":\"=https://dev.to/api/articles?tag={{ $json.value }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"c49d5db2-d1c9-4444-8fa8-f39197e2a472\",\"name\":\"filter only unused Ids\",\"type\":\"n8n-nodes-base.filter\",\"position\":[660,-80],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"934a4ab8-bc6b-4d1b-b050-c1f19a03cc9f\",\"operator\":{\"type\":\"array\",\"operation\":\"notContains\",\"rightType\":\"any\"},\"leftValue\":\"={{ $('map used articls ids').item.json.values }}\",\"rightValue\":\"={{ $json.id }}\"},{\"id\":\"916a778e-02db-442b-9c69-4c53b4f55a87\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.language }}\",\"rightValue\":\"en\"}]}},\"typeVersion\":2.2},{\"id\":\"99ef95fb-1dab-4093-beaa-18eb341b7c18\",\"name\":\"get random articles\",\"type\":\"n8n-nodes-base.code\",\"position\":[880,-80],\"parameters\":{\"jsCode\":\"function getRandomValue(list) {\\n  const randomIndex = Math.floor(Math.random() * list.length);\\n  return list[randomIndex];\\n}\\nreturn getRandomValue($input.all());\"},\"typeVersion\":2},{\"id\":\"0b390b7d-8729-48e5-aadc-5aa9da8c7139\",\"name\":\"get random tags\",\"type\":\"n8n-nodes-base.code\",\"position\":[-280,-80],\"parameters\":{\"jsCode\":\"const devToTags = [\\n  \\\"android\\\",\\n  \\\"androiddev\\\",\\n  \\\"kotlin\\\",\\n  \\\"jetpackcompose\\\",\\n  \\\"mobiledev\\\",\\n  \\\"mobile\\\",\\n  \\\"java\\\",\\n  \\\"oops\\\"\\n];\\n\\n\\nfunction getRandomValuesAsObjects(list, count) {\\n  const randomValues = [];\\n  for (let i = 0; i < count; i++) {\\n    const randomIndex = Math.floor(Math.random() * list.length);\\n    randomValues.push({ json: { value: list[randomIndex] } });\\n  }\\n  return randomValues;\\n}\\n\\nreturn getRandomValuesAsObjects(devToTags, 1);\\n\"},\"typeVersion\":2},{\"id\":\"6b16bc15-8d82-4aa0-9ee2-5a10f070d106\",\"name\":\"sent the status\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[520,280],\"webhookId\":\"9373d46a-d5ad-40f4-93c0-7a44ff5fea37\",\"parameters\":{\"text\":\"=Linkdin Post Sent Successfully  \\n\\n{{ $('download image for post').item.json.title }}\\n\\nDb Status Id {{ $json.id }}\",\"chatId\":\"1199262493\",\"replyMarkup\":\"inlineKeyboard\",\"additionalFields\":{\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"R8nJZScHqw02haLU\",\"name\":\"Mr.4rogrammer bot\"}},\"typeVersion\":1.2},{\"id\":\"99c5ed96-4220-46b0-9a2a-628963393894\",\"name\":\"Morning  9 Clock\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-560,-80],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"0 9,19 * * *\"}]}},\"typeVersion\":1.2},{\"id\":\"d25bf5d7-0258-4f07-b0b7-54ace75ef697\",\"name\":\"download image for post\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-420,280],\"parameters\":{\"url\":\"={{ $json.social_image }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"792507fc-f956-4bc7-9c56-80f1078643a1\",\"name\":\"make Linkedin post\",\"type\":\"n8n-nodes-base.linkedIn\",\"position\":[-100,280],\"parameters\":{\"text\":\"=💫 {{ $('get random articles').item.json.title }} ⭐\\n\\n{{ $json.description }}\\n\\nArticle link : {{ $json.url }}\\n\\n#AndroidDevelopment #MobileAppDevelopment #AppDevelopment #Programming #SoftwareEngineering #TechCommunity #DeveloperLife #Kotlin #LinkedInDevelopers \\n#Mr4rogrammer #isharewhatilearn\",\"person\":\"BQYGc4bH9N\",\"additionalFields\":{\"title\":\"={{ $json.description }}\",\"visibility\":\"PUBLIC\"},\"shareMediaCategory\":\"IMAGE\"},\"credentials\":{\"linkedInOAuth2Api\":{\"id\":\"TODMZHWKWUyYl0qb\",\"name\":\"LinkedIn account\"}},\"typeVersion\":1},{\"id\":\"c81c749a-e21b-4ba6-beae-2b8a21523c06\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-560,-600],\"parameters\":{\"width\":920,\"height\":400,\"content\":\"# 📢 Auto-Post Dev.to Articles to LinkedIn with Telegram Alerts\\n\\nThis n8n workflow automates your LinkedIn posting by fetching articles from [Dev.to](https://dev.to) twice a day (9:00 AM and 7:00 PM), ensuring consistent content sharing without manual effort.\\n\\nTo prevent duplicates, it stores posted article IDs in Airtable. It also sends a Telegram message after every successful post, so you stay updated.\\n\\n---\\n\"},\"typeVersion\":1},{\"id\":\"61171a34-53a3-448a-886c-b0cc83b75b33\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[400,-520],\"parameters\":{\"width\":580,\"height\":240,\"content\":\"\\n## ✅ Features\\n\\n- 🕒 Runs twice daily at 9:00 AM and 7:00 PM (customizable)\\n- 📰 Fetches latest Dev.to articles by tag\\n- 📂 Uses Airtable to avoid reposting the same article\\n- 📢 Posts to your LinkedIn profile or company page\\n- 📬 Sends a Telegram notification after successful posting\\n- ⚙️ Fully customizable schedule, tags, and post format\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"timezone\":\"Asia/Kolkata\",\"callerPolicy\":\"workflowsFromSameOwner\",\"executionOrder\":\"v1\"},\"versionId\":\"9ba9094c-e57a-43ac-8e51-ba97b384bb87\",\"connections\":{\"get random tags\":{\"main\":[[{\"node\":\"Get List of records used\",\"type\":\"main\",\"index\":0}]]},\"Morning  9 Clock\":{\"main\":[[{\"node\":\"get random tags\",\"type\":\"main\",\"index\":0}]]},\"make Linkedin post\":{\"main\":[[{\"node\":\"Update the used node\",\"type\":\"main\",\"index\":0}]]},\"get random articles\":{\"main\":[[{\"node\":\"download image for post\",\"type\":\"main\",\"index\":0}]]},\"Update the used node\":{\"main\":[[{\"node\":\"sent the status\",\"type\":\"main\",\"index\":0}]]},\"map used articls ids\":{\"main\":[[{\"node\":\"fetch articles from Url\",\"type\":\"main\",\"index\":0}]]},\"filter only unused Ids\":{\"main\":[[{\"node\":\"get random articles\",\"type\":\"main\",\"index\":0}]]},\"download image for post\":{\"main\":[[{\"node\":\"make Linkedin post\",\"type\":\"main\",\"index\":0}]]},\"fetch articles from Url\":{\"main\":[[{\"node\":\"filter only unused Ids\",\"type\":\"main\",\"index\":0}]]},\"Get List of records used\":{\"main\":[[{\"node\":\"map used articls ids\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "**🧠 Problem This Solves:**  \nFor developers and creators, consistently posting quality content on LinkedIn can be time-consuming. This workflow automates the process by:\n\nFetching the latest [Dev.to](http://Dev.to) articles\n\nPosting them to LinkedIn twice daily\n\nPreventing duplicates using Airtable\n\nSending success alerts to Telegram\n\nThis ensures you're always active on LinkedIn, with zero manual effort.\n\n**👥 Who This Template Is For**  \nDevelopers who want to build their presence on LinkedIn\n\nTech creators or solo founders looking to grow an audience\n\nCommunity/page managers who want regular, curated content\n\nBusy professionals aiming for consistent LinkedIn engagement without doing it manually\n\n**⚙️ Workflow Breakdown**  \nThis automation runs twice a day (9:00 AM and 7:00 PM) and performs the following steps:\n\nFetches [Dev.to](http://Dev.to) articles based on a tag\n\nChecks Airtable to avoid reposting the same article\n\nPosts to LinkedIn if it’s new\n\nSends a Telegram message after posting successfully\n\n**🧩 Step-by-Step Setup Instructions**  \n✅ 1. Airtable Configuration  \nCreate a new base in Airtable with just one table and one column:\n\nTable Name: PostedArticles\n\nColumn:\n\nArticleID (Single line text – stores the unique ID of each [Dev.to](http://Dev.to) article posted)\n\nThis column is used to track posted articles and prevent duplicates.\n\n🔗 2. [Dev.to](http://Dev.to) API Setup  \nUse the following endpoint in the HTTP Request node:\n\narduino  \nCopy  \nEdit  \n[https://dev.to/api/articles?tag=YOUR_TAG_HERE&per_page=10](https://dev.to/api/articles?tag=YOUR_TAG_HERE&per_page=10)  \nReplace YOUR_TAG_HERE with a tag like android, webdev, ai, etc.\n\n💬 3. Telegram Bot Setup  \nOpen @BotFather in Telegram and create a new bot\n\nSave the bot token\n\nGet your chat ID using @userinfobot or via Telegram API\n\nAdd a Telegram node in n8n using this token and chat ID\n\nThis will notify you when a post is successfully published.\n\n🧾 4. LinkedIn Setup  \nCreate a LinkedIn Developer App\n\nUse OAuth2 to connect it in n8n\n\nChoose to post on either a user profile or a company page\n\n🧱 5. n8n Workflow Structure  \nHere’s the basic structure of the workflow:\n\nCron Node – Triggers at 9:00 AM and 7:00 PM daily\n\nHTTP Request – Fetches latest articles from [Dev.to](http://Dev.to)\n\nAirtable Search – Checks if ArticleID already exists\n\nIF Node – Filters new vs. already-posted articles\n\nLinkedIn Post – Publishes new article\n\nAirtable Create – Saves the new ArticleID\n\nTelegram Message – Sends success confirmation\n\n**🛠️ Customization Tips**  \nChange the [Dev.to](http://Dev.to) tag in the API URL\n\nModify LinkedIn post format (add hashtags, emojis, personal notes)\n\nAdjust posting times in the Cron node\n\nUse additional filters (e.g., only post articles with a cover image or certain word count)\n",
  "readme_html": "<!--[--><div data-v-859c7806=\"\"><p><strong>🧠 Problem This Solves:</strong><br>\nFor developers and creators, consistently posting quality content on LinkedIn can be time-consuming. This workflow automates the process by:</p>\n<p>Fetching the latest <a href=\"http://Dev.to\" rel=\"ugc nofollow\" target=\"_blank\">Dev.to</a> articles</p>\n<p>Posting them to LinkedIn twice daily</p>\n<p>Preventing duplicates using Airtable</p>\n<p>Sending success alerts to Telegram</p>\n<p>This ensures you're always active on LinkedIn, with zero manual effort.</p>\n<p><strong>👥 Who This Template Is For</strong><br>\nDevelopers who want to build their presence on LinkedIn</p>\n<p>Tech creators or solo founders looking to grow an audience</p>\n<p>Community/page managers who want regular, curated content</p>\n<p>Busy professionals aiming for consistent LinkedIn engagement without doing it manually</p>\n<p><strong>⚙️ Workflow Breakdown</strong><br>\nThis automation runs twice a day (9:00 AM and 7:00 PM) and performs the following steps:</p>\n<p>Fetches <a href=\"http://Dev.to\" rel=\"ugc nofollow\" target=\"_blank\">Dev.to</a> articles based on a tag</p>\n<p>Checks Airtable to avoid reposting the same article</p>\n<p>Posts to LinkedIn if it’s new</p>\n<p>Sends a Telegram message after posting successfully</p>\n<p><strong>🧩 Step-by-Step Setup Instructions</strong><br>\n✅ 1. Airtable Configuration<br>\nCreate a new base in Airtable with just one table and one column:</p>\n<p>Table Name: PostedArticles</p>\n<p>Column:</p>\n<p>ArticleID (Single line text – stores the unique ID of each <a href=\"http://Dev.to\" rel=\"ugc nofollow\" target=\"_blank\">Dev.to</a> article posted)</p>\n<p>This column is used to track posted articles and prevent duplicates.</p>\n<p>🔗 2. <a href=\"http://Dev.to\" rel=\"ugc nofollow\" target=\"_blank\">Dev.to</a> API Setup<br>\nUse the following endpoint in the HTTP Request node:</p>\n<p>arduino<br>\nCopy<br>\nEdit<br>\n<a href=\"https://dev.to/api/articles?tag=YOUR_TAG_HERE&amp;per_page=10\" rel=\"ugc nofollow\" target=\"_blank\">https://dev.to/api/articles?tag=YOUR_TAG_HERE&amp;per_page=10</a><br>\nReplace YOUR_TAG_HERE with a tag like android, webdev, ai, etc.</p>\n<p>💬 3. Telegram Bot Setup<br>\nOpen @BotFather in Telegram and create a new bot</p>\n<p>Save the bot token</p>\n<p>Get your chat ID using @userinfobot or via Telegram API</p>\n<p>Add a Telegram node in n8n using this token and chat ID</p>\n<p>This will notify you when a post is successfully published.</p>\n<p>🧾 4. LinkedIn Setup<br>\nCreate a LinkedIn Developer App</p>\n<p>Use OAuth2 to connect it in n8n</p>\n<p>Choose to post on either a user profile or a company page</p>\n<p>🧱 5. n8n Workflow Structure<br>\nHere’s the basic structure of the workflow:</p>\n<p>Cron Node – Triggers at 9:00 AM and 7:00 PM daily</p>\n<p>HTTP Request – Fetches latest articles from <a href=\"http://Dev.to\" rel=\"ugc nofollow\" target=\"_blank\">Dev.to</a></p>\n<p>Airtable Search – Checks if ArticleID already exists</p>\n<p>IF Node – Filters new vs. already-posted articles</p>\n<p>LinkedIn Post – Publishes new article</p>\n<p>Airtable Create – Saves the new ArticleID</p>\n<p>Telegram Message – Sends success confirmation</p>\n<p><strong>🛠️ Customization Tips</strong><br>\nChange the <a href=\"http://Dev.to\" rel=\"ugc nofollow\" target=\"_blank\">Dev.to</a> tag in the API URL</p>\n<p>Modify LinkedIn post format (add hashtags, emojis, personal notes)</p>\n<p>Adjust posting times in the Cron node</p>\n<p>Use additional filters (e.g., only post articles with a cover image or certain word count)</p>\n</div><!--]-->",
  "readme_zh": "**🧠 解决的问题：**  \n对于开发者和内容创作者而言，在LinkedIn上持续发布优质内容可能耗时费力。该工作流通过以下方式实现自动化：  \n\n抓取最新的[Dev.to](http://Dev.to)文章  \n每天两次自动发布到LinkedIn  \n利用Airtable避免重复发布  \n通过Telegram发送成功提醒  \n确保您在LinkedIn上始终保持活跃，无需手动操作。  \n\n**👥 适用人群：**  \n希望在LinkedIn建立个人品牌的开发者  \n寻求增长受众的技术创作者或独立创业者  \n需要定期发布精选内容的社群/主页管理者  \n工作繁忙但希望保持LinkedIn活跃度的专业人士  \n\n**⚙️ 工作流分解：**  \n该自动化流程每天运行两次（上午9点和晚上7点），执行以下步骤：  \n\n根据标签获取[Dev.to](http://Dev.to)文章  \n检查Airtable以避免重复发布  \n若为新文章则发布到LinkedIn  \n成功发布后发送Telegram通知  \n\n**🧩 分步设置指南：**  \n✅ 1. Airtable配置  \n在Airtable中新建一个基础，仅需一个表格和一列：  \n\n表格名称：PostedArticles  \n列名：  \nArticleID（单行文本——存储已发布文章的Dev.to唯一ID）  \n此列用于追踪已发布文章，避免重复。  \n\n🔗 2. [Dev.to](http://Dev.to) API设置  \n在HTTP请求节点中使用以下端点：  \n[https://dev.to/api/articles?tag=YOUR_TAG_HERE&per_page=10](https://dev.to/api/articles?tag=YOUR_TAG_HERE&per_page=10)  \n将YOUR_TAG_HERE替换为标签，如android、webdev、ai等。  \n\n💬 3. Telegram机器人设置  \n在Telegram中打开@BotFather并创建新机器人  \n保存机器人令牌  \n使用@userinfobot或Telegram API获取聊天ID  \n在n8n中添加Telegram节点，输入令牌和聊天ID  \n成功发布后将收到通知。  \n\n🧾 4. LinkedIn设置  \n创建LinkedIn开发者应用  \n在n8n中使用OAuth2进行连接  \n选择发布到个人资料或公司主页  \n\n🧱 5. n8n工作流结构  \n工作流基本结构如下：  \n\nCron节点——每天上午9点和晚上7点触发  \nHTTP请求——从Dev.to获取最新文章  \nAirtable搜索——检查ArticleID是否已存在  \nIF节点——筛选新文章与已发布文章  \nLinkedIn发布——发布新文章  \nAirtable创建——保存新ArticleID  \nTelegram消息——发送成功确认  \n\n**🛠️ 自定义建议：**  \n修改API URL中的Dev.to标签  \n调整LinkedIn帖子格式（添加标签、表情符号、个人备注）  \n在Cron节点中更改发布时间  \n使用其他筛选条件（如仅发布带封面图或特定字数的文章）",
  "title_zh": "利用Airtable追踪与Telegram提醒实现Dev.to文章自动同步至LinkedIn",
  "publish_date_zh": "上次更新于8天前",
  "workflow_json_zh": "{\n  \"id\": \"yF1HNe2ucaE81fNl\",\n  \"meta\": {\n    \"instanceId\": \"52be616fc3b9990a95b5266574f084bd2127609e79ce7dbfc33a1224bcc79eee\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Linkedin Automation\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"fa012332-1c95-4460-b1d1-9d54441c9179\",\n      \"name\": \"Get List of records used\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        -40,\n        -80\n      ],\n      \"parameters\": {\n        \"base\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"appt6kHkRkLlUh033\",\n          \"cachedResultUrl\": \"https://airtable.com/appt6kHkRkLlUh033\",\n          \"cachedResultName\": \"Linkdin\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"tbliloartO26TD5TG\",\n          \"cachedResultUrl\": \"https://airtable.com/appt6kHkRkLlUh033/tbliloartO26TD5TG\",\n          \"cachedResultName\": \"Used Articles\"\n        },\n        \"options\": {},\n        \"operation\": \"search\"\n      },\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"9bPeAvakB1tkDxsW\",\n          \"name\": \"Airtable Personal Access Token account\"\n        }\n      },\n      \"typeVersion\": 2.1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"2d99b3b7-2fcd-46bf-8859-f41e94cb5ae1\",\n      \"name\": \"Update the used node\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        200,\n        280\n      ],\n      \"parameters\": {\n        \"base\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"appt6kHkRkLlUh033\",\n          \"cachedResultUrl\": \"https://airtable.com/appt6kHkRkLlUh033\",\n          \"cachedResultName\": \"Linkdin\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"tbliloartO26TD5TG\",\n          \"cachedResultUrl\": \"https://airtable.com/appt6kHkRkLlUh033/tbliloartO26TD5TG\",\n          \"cachedResultName\": \"Used Articles\"\n        },\n        \"columns\": {\n          \"value\": {\n            \"id\": \"={{ $('download image for post').item.json.id }}\",\n            \"value\": \"={{ $('download image for post').item.json.id }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"id\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"id\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"value\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"value\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"create\"\n      },\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"9bPeAvakB1tkDxsW\",\n          \"name\": \"Airtable Personal Access Token account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"72abb016-8f58-4c4c-b492-9ba7a576441a\",\n      \"name\": \"map used articls ids\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        200,\n        -80\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let values = $input.all().map(item => item.json.value);\\n\\nreturn [\\n    {\\n      json: {\\n        values: values\\n      }\\n    }\\n  ];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c6712f11-2852-49af-8fb9-235da0e4685c\",\n      \"name\": \"fetch articles from Url\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        420,\n        -80\n      ],\n      \"parameters\": {\n        \"url\": \"=https://dev.to/api/articles?tag={{ $json.value }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"c49d5db2-d1c9-4444-8fa8-f39197e2a472\",\n      \"name\": \"filter only unused Ids\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        660,\n        -80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"934a4ab8-bc6b-4d1b-b050-c1f19a03cc9f\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"notContains\",\n                \"rightType\": \"any\"\n              },\n              \"leftValue\": \"={{ $('map used articls ids').item.json.values }}\",\n              \"rightValue\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"916a778e-02db-442b-9c69-4c53b4f55a87\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.language }}\",\n              \"rightValue\": \"en\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"99ef95fb-1dab-4093-beaa-18eb341b7c18\",\n      \"name\": \"get random articles\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        880,\n        -80\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function getRandomValue(list) {\\n  const randomIndex = Math.floor(Math.random() * list.length);\\n  return list[randomIndex];\\n}\\nreturn getRandomValue($input.all());\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0b390b7d-8729-48e5-aadc-5aa9da8c7139\",\n      \"name\": \"get random tags\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -280,\n        -80\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const devToTags = [\\n  \\\"android\\\",\\n  \\\"androiddev\\\",\\n  \\\"kotlin\\\",\\n  \\\"jetpackcompose\\\",\\n  \\\"mobiledev\\\",\\n  \\\"mobile\\\",\\n  \\\"java\\\",\\n  \\\"oops\\\"\\n];\\n\\n\\nfunction getRandomValuesAsObjects(list, count) {\\n  const randomValues = [];\\n  for (let i = 0; i < count; i++) {\\n    const randomIndex = Math.floor(Math.random() * list.length);\\n    randomValues.push({ json: { value: list[randomIndex] } });\\n  }\\n  return randomValues;\\n}\\n\\nreturn getRandomValuesAsObjects(devToTags, 1);\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6b16bc15-8d82-4aa0-9ee2-5a10f070d106\",\n      \"name\": \"sent the status\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        520,\n        280\n      ],\n      \"webhookId\": \"9373d46a-d5ad-40f4-93c0-7a44ff5fea37\",\n      \"parameters\": {\n        \"text\": \"=Linkdin Post Sent Successfully  \\n\\n{{ $('download image for post').item.json.title }}\\n\\nDb Status Id {{ $json.id }}\",\n        \"chatId\": \"1199262493\",\n        \"replyMarkup\": \"inlineKeyboard\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"R8nJZScHqw02haLU\",\n          \"name\": \"Mr.4rogrammer bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"99c5ed96-4220-46b0-9a2a-628963393894\",\n      \"name\": \"Morning  9 Clock\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -560,\n        -80\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"0 9,19 * * *\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"d25bf5d7-0258-4f07-b0b7-54ace75ef697\",\n      \"name\": \"download image for post\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -420,\n        280\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.social_image }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"792507fc-f956-4bc7-9c56-80f1078643a1\",\n      \"name\": \"make Linkedin post\",\n      \"type\": \"n8n-nodes-base.linkedIn\",\n      \"position\": [\n        -100,\n        280\n      ],\n      \"parameters\": {\n        \"text\": \"=💫 {{ $('get random articles').item.json.title }} ⭐\\n\\n{{ $json.description }}\\n\\nArticle link : {{ $json.url }}\\n\\n#AndroidDevelopment #MobileAppDevelopment #AppDevelopment #Programming #SoftwareEngineering #TechCommunity #DeveloperLife #Kotlin #LinkedInDevelopers \\n#Mr4rogrammer #isharewhatilearn\",\n        \"person\": \"BQYGc4bH9N\",\n        \"additionalFields\": {\n          \"title\": \"={{ $json.description }}\",\n          \"visibility\": \"PUBLIC\"\n        },\n        \"shareMediaCategory\": \"IMAGE\"\n      },\n      \"credentials\": {\n        \"linkedInOAuth2Api\": {\n          \"id\": \"TODMZHWKWUyYl0qb\",\n          \"name\": \"LinkedIn account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c81c749a-e21b-4ba6-beae-2b8a21523c06\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -560,\n        -600\n      ],\n      \"parameters\": {\n        \"width\": 920,\n        \"height\": 400,\n        \"content\": \"# 📢 自动将Dev.to文章同步至LinkedIn并发送Telegram提醒\\n\\n这个n8n工作流能自动从[Dev.to](https://dev.to)获取文章（每日上午9点和晚上7点各一次），实现无需人工操作的持续内容分享。\\n\\n为防止重复发布，系统会将已发布文章的ID存储在Airtable中。每次成功发布后，还会向您发送Telegram消息通知，让您随时掌握动态。\\n\\n---\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"61171a34-53a3-448a-886c-b0cc83b75b33\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        400,\n        -520\n      ],\n      \"parameters\": {\n        \"width\": 580,\n        \"height\": 240,\n        \"content\": \"## ✅ 功能亮点\\n\\n- 🕒 每日9:00与19:00自动运行（时间可调）\\n- 📰 按标签抓取Dev.to平台最新文章\\n- 📂 通过Airtable数据库避免重复发布\\n- 📢 支持LinkedIn个人主页/企业页面同步\\n- 📬 成功发布后发送Telegram通知\\n- ⚙️ 完全可定制运行周期、标签及发文格式\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"timezone\": \"Asia/Kolkata\",\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"9ba9094c-e57a-43ac-8e51-ba97b384bb87\",\n  \"connections\": {\n    \"get random tags\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get List of records used\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Morning  9 Clock\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"get random tags\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"make Linkedin post\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update the used node\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get random articles\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"download image for post\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update the used node\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"sent the status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"map used articls ids\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"fetch articles from Url\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"filter only unused Ids\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"get random articles\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"download image for post\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"make Linkedin post\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"fetch articles from Url\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"filter only unused Ids\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get List of records used\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"map used articls ids\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}