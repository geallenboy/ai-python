{
  "title": "Enrich up to 1500 emails per hour with Dropcontact batch requests",
  "url": "https://n8n.io/workflows/2272-enrich-up-to-1500-emails-per-hour-with-dropcontact-batch-requests/",
  "category": "Marketing",
  "category_url": "https://n8n.io/workflows/categories/marketing/?sort=createdAt:desc",
  "author": "victor de coster",
  "publish_date": "Last update a year ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "",
  "readme": "The template allows to make Dropcontact batch requests up to 250 requests every 10 minutes (1500/hour). Valuable if high volume email enrichment is expected.\n\nDropcontact will look for email & basic email qualification if first_name, last_name, company_name is provided.\n\n+++++++++++++++++++++++++++++++++++++++++\n\nStep 1:  \nNode \"Profiles Query\"  \nConnect your own source (Airtable, Google Sheets, Supabase,...) the template is using Postgres by default.\n\n* * *\n\nNote I:  \nBe careful your source is only returning a maximum of 250 items.\n\n* * *\n\nNote II:  \nThe next node uses the next variables, make sure you can map these from your source file:\n\n  * first_name\n  * last_name\n  * website (company_name would work too)\n  * full_name (see note)\n\n\n\n* * *\n\nNote III:  \nThis template is using the Dropcontact Batch API, which works in a POST & GET setup. Not a GET request only to retrieve data, as Dropcontact needs to process the batch data load properly.\n\n+++++++++++++++++++++++++++++++++++++++++\n\nStep 2:  \nNode \"Data Transformation\"  \nWill transform the input variables in the proper json format. This json format is expected from the Dropcontact API to make a batch request.\n\n\"full_name\" is being used as a custom identifier to update the returned email to the proper contact in your source database.\n\nTo make things easy, use a unique identiefer in the full_name variable.\n\n+++++++++++++++++++++++++++++++++++++++++\n\nStep3:  \nNode: \"Bulk Dropcontact Requests\".  \nEnter your Dropcontact credentials in the node: Bulk Dropcontact Requests.\n\n+++++++++++++++++++++++++++++++++++++++++\n\nStep4:  \nConnect your output source by mapping the data you like to use.\n\n+++++++++++++++++++++++++++++++++++++++++\n\nStep5:  \nNode: \"Slack\" (OPTIONAL)  \nConnect your slack account, if an error occur, you will be notified.\n\n* * *\n\nTIP: Try to run the workflow with a batch of 10 (not 250) as it might need to run initially before you will be able to map the data to your final destination. Once the data fields are properly mapped, adjust back to 250.\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>The template allows to make Dropcontact batch requests up to 250 requests every 10 minutes (1500/hour). Valuable if high volume email enrichment is expected.</p>\n<p>Dropcontact will look for email &amp; basic email qualification if first_name, last_name, company_name is provided.</p>\n<p>+++++++++++++++++++++++++++++++++++++++++</p>\n<p>Step 1:<br>\nNode \"Profiles Query\"<br>\nConnect your own source (Airtable, Google Sheets, Supabase,...) the template is using Postgres by default.</p>\n<hr>\n<p>Note I:<br>\nBe careful your source is only returning a maximum of 250 items.</p>\n<hr>\n<p>Note II:<br>\nThe next node uses the next variables, make sure you can map these from your source file:</p>\n<ul>\n<li>first_name</li>\n<li>last_name</li>\n<li>website (company_name would work too)</li>\n<li>full_name (see note)</li>\n</ul>\n<hr>\n<p>Note III:<br>\nThis template is using the Dropcontact Batch API, which works in a POST &amp; GET setup. Not a GET request only to retrieve data, as Dropcontact needs to process the batch data load properly.</p>\n<p>+++++++++++++++++++++++++++++++++++++++++</p>\n<p>Step 2:<br>\nNode \"Data Transformation\"<br>\nWill transform the input variables in the proper json format. This json format is expected from the Dropcontact API to make a batch request.</p>\n<p>\"full_name\" is being used as a custom identifier to update the returned email to the proper contact in your source database.</p>\n<p>To make things easy, use a unique identiefer in the full_name variable.</p>\n<p>+++++++++++++++++++++++++++++++++++++++++</p>\n<p>Step3:<br>\nNode: \"Bulk Dropcontact Requests\".<br>\nEnter your Dropcontact credentials in the node: Bulk Dropcontact Requests.</p>\n<p>+++++++++++++++++++++++++++++++++++++++++</p>\n<p>Step4:<br>\nConnect your output source by mapping the data you like to use.</p>\n<p>+++++++++++++++++++++++++++++++++++++++++</p>\n<p>Step5:<br>\nNode: \"Slack\" (OPTIONAL)<br>\nConnect your slack account, if an error occur, you will be notified.</p>\n<hr>\n<p>TIP: Try to run the workflow with a batch of 10 (not 250) as it might need to run initially before you will be able to map the data to your final destination. Once the data fields are properly mapped, adjust back to 250.</p>\n</div><!--]-->"
}