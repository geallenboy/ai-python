{
  "title": "Extract and Clean YouTube Video Transcripts with RapidAPI",
  "url": "https://n8n.io/workflows/3417-extract-and-clean-youtube-video-transcripts-with-rapidapi/",
  "category": "Marketing",
  "category_url": "https://n8n.io/workflows/categories/marketing/?sort=createdAt:desc",
  "author": "Joseph",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"XxkmcgZC4OtIOVoD\",\"meta\":{\"instanceId\":\"b3c467df4053d13fe31cc98f3c66fa1d16300ba750506bfd019a0913cec71ea3\"},\"name\":\"Youtube Video Transcript Extraction\",\"tags\":[],\"nodes\":[{\"id\":\"686e639a-650d-480d-9887-11bd4140f1fe\",\"name\":\"YoutubeVideoURL\",\"type\":\"n8n-nodes-base.formTrigger\",\"position\":[-20,0],\"webhookId\":\"156a04c8-917d-4624-a46e-8fbcab89d16b\",\"parameters\":{\"options\":{},\"formTitle\":\"Youtube Video Transcriber\",\"formFields\":{\"values\":[{\"fieldLabel\":\"Youtube Video Url\",\"requiredField\":true}]}},\"typeVersion\":2.2},{\"id\":\"5384c4ed-a726-4253-8a88-d413124f80be\",\"name\":\"cleanedTranscript\",\"type\":\"n8n-nodes-base.set\",\"position\":[740,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"7653a859-556d-4e00-bafa-6f70f90de0d7\",\"name\":\"transcript\",\"type\":\"string\",\"value\":\"={{ $json.cleanedTranscript }}\"}]}},\"typeVersion\":3.4},{\"id\":\"83b6567f-c931-429c-8d7c-0b2549820ca1\",\"name\":\"processTranscript\",\"type\":\"n8n-nodes-base.function\",\"position\":[500,0],\"parameters\":{\"functionCode\":\"// Extract and process the transcript\\nconst data = $input.first().json;\\n\\nif (!data.transcript && !data.text) {\\n  return {\\n    json: {\\n      success: false,\\n      message: 'No transcript available for this video',\\n      videoUrl: $input.first().json.body?.videoUrl || 'Unknown'\\n    }\\n  };\\n}\\n\\n// Process the transcript text\\nlet transcriptText = '';\\n\\n// Handle different API response formats\\nif (data.transcript) {\\n  // Format for array of transcript segments\\n  if (Array.isArray(data.transcript)) {\\n    data.transcript.forEach(segment => {\\n      if (segment.text) {\\n        transcriptText += segment.text + ' ';\\n      }\\n    });\\n  } else if (typeof data.transcript === 'string') {\\n    transcriptText = data.transcript;\\n  }\\n} else if (data.text) {\\n  // Format for single transcript object with text property\\n  transcriptText = data.text;\\n}\\n\\n// Clean up the transcript (remove extra spaces, normalize punctuation)\\nconst cleanedTranscript = transcriptText\\n  .replace(/\\\\s+/g, ' ')\\n  .replace(/\\\\s([.,!?])/g, '$1')\\n  .trim();\\n\\nreturn {\\n  json: {\\n    success: true,\\n    videoUrl: $input.first().json.body?.videoUrl || 'From transcript',\\n    rawTranscript: data.text || data.transcript,\\n    cleanedTranscript,\\n    duration: data.duration,\\n    offset: data.offset,\\n    language: data.lang\\n  }\\n};\"},\"typeVersion\":1},{\"id\":\"cebf0fd7-6b66-4287-bede-fab53061bed2\",\"name\":\"extractTranscript\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[240,0],\"parameters\":{\"url\":\"https://youtube-transcript3.p.rapidapi.com/api/transcript\",\"options\":{},\"sendBody\":true,\"sendQuery\":true,\"sendHeaders\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"url\",\"value\":\"={{ $json['Youtube Video Url'] }}\"}]},\"queryParameters\":{\"parameters\":[{\"name\":\"videoId\",\"value\":\"ZacjOVVgoLY\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"x-rapidapi-host\",\"value\":\"youtube-transcript3.p.rapidapi.com\"},{\"name\":\"x-rapidapi-key\",\"value\":\"\\\"your_api_key\\\"\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":3}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"084b006b-36f9-46a7-8a0b-7656126b29cd\",\"connections\":{\"YoutubeVideoURL\":{\"main\":[[{\"node\":\"extractTranscript\",\"type\":\"main\",\"index\":0}]]},\"extractTranscript\":{\"main\":[[{\"node\":\"processTranscript\",\"type\":\"main\",\"index\":0}]]},\"processTranscript\":{\"main\":[[{\"node\":\"cleanedTranscript\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "Here is your refined template description with detailed step-by-step instructions, markdown formatting, and customization guidance.\n\n* * *\n\n# YouTube Transcript Extraction Workflow\n\nThis **n8n workflow** extracts and processes transcripts from YouTube videos using the **YouTube Transcript API** on RapidAPI. It allows users to retrieve subtitles from YouTube videos, clean them up, and return structured transcript data for further processing.\n\n## Table of Contents\n\n  * Problem Statement & Target Audience\n  * Pre-conditions & API Requirements\n  * Step-by-Step Workflow Explanation\n  * Customization Guide\n  * How to Set Up This Workflow\n\n\n\n* * *\n\n## Problem Statement & Target Audience\n\n### **Who is this for?**\n\nThis workflow is ideal for content creators, researchers, and developers who need to:\n\n  * Extract **subtitles** from YouTube videos automatically.\n  * **Format and clean** transcript data for readability.\n  * Use transcripts for **summarization, content repurposing, or language analysis**.\n\n\n\n* * *\n\n## Pre-conditions & API Requirements\n\n### **API Required**\n\n  * **YouTube Transcript API** ([RapidAPI](https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3/playground))\n\n\n\n### **n8n Setup Prerequisites**\n\n  * A running **n8n instance** ([Installation Guide](https://docs.n8n.io/))\n  * A **RapidAPI account** to access the **YouTube Transcript API**\n  * An **API key** from RapidAPI to authenticate requests\n\n\n\n* * *\n\n## Step-by-Step Workflow Explanation\n\n### **1\\. Input YouTube Video URL (Trigger)**\n\n  * This step provides a simple input form where users enter a YouTube video URL.\n\n\n\n### **2\\. HTTP Request Node (Retrieve Transcript Data)**\n\n  * Makes a **POST request** to the YouTube Transcript API via RapidAPI.\n  * Passes the video URL received from the input form.\n  * Uses an **environment variable** to store the API key securely.\n\n\n\n### **3\\. Function Node (Process Transcript)**\n\n  * **Receives** the API response containing the **raw transcript**.\n  * **Processes and cleans** the transcript: \n    * Removes unwanted characters.\n    * Formats text for readability.\n  * **Handles errors** when no transcript is available.\n  * **Outputs** both the **raw and cleaned transcript** for further use.\n\n\n\n### **4\\. Set Field Node (Response Formatting)**\n\n  * **Structures** the processed transcript data into a user-friendly format.\n  * **Returns** the final transcript data to the client.\n\n\n\n* * *\n\n## Customization Guide\n\n### **1\\. Modify Transcript Cleaning Rules**\n\n  * Update the **Function Node** to apply custom text processing, such as: \n    * Removing timestamps.\n    * Changing the output format (e.g., JSON, plain text).\n\n\n\n### **2\\. Store Transcripts in a Database**\n\n  * Add a **Database Node** (e.g., MySQL, PostgreSQL, or Firebase) to save transcripts.\n\n\n\n### **3\\. Generate Summaries from Transcripts**\n\n  * Integrate **AI services** (e.g., OpenAI, Google Gemini) to summarize transcripts.\n\n\n\n### **4\\. Convert Transcripts into Speech**\n\n  * Use **ElevenLabs API** to generate an AI-powered voiceover from transcripts.\n\n\n\n* * *\n\n## How to Set Up This Workflow\n\n### **Step 1: Import the Workflow into n8n**\n\n  * Download or copy the workflow JSON file.\n  * Import it into your **n8n instance**.\n\n\n\n### **Step 2: Set Up the API Key**\n\n  * Sign up for the **[YouTube Transcript API](https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3/playground)**.\n  * Subscribe to the api.\n  * Copy and paste your api key where the \"your_api_key\" is.\n\n\n\n### **Step 3: Activate the Workflow**\n\n  * Start the workflow in **n8n**.\n  * Enter a **YouTube video URL** in the input form.\n  * The workflow will return a **cleaned transcript**.\n\n\n\n* * *\n\nThis workflow ensures seamless YouTube transcript extraction and processing with minimal manual effort. ðŸš€\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>Here is your refined template description with detailed step-by-step instructions, markdown formatting, and customization guidance.</p>\n<hr>\n<h1>YouTube Transcript Extraction Workflow</h1>\n<p>This <strong>n8n workflow</strong> extracts and processes transcripts from YouTube videos using the <strong>YouTube Transcript API</strong> on RapidAPI. It allows users to retrieve subtitles from YouTube videos, clean them up, and return structured transcript data for further processing.</p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#problem-statement--target-audience\" rel=\"ugc nofollow\">Problem Statement &amp; Target Audience</a></li>\n<li><a href=\"#pre-conditions--api-requirements\" rel=\"ugc nofollow\">Pre-conditions &amp; API Requirements</a></li>\n<li><a href=\"#step-by-step-workflow-explanation\" rel=\"ugc nofollow\">Step-by-Step Workflow Explanation</a></li>\n<li><a href=\"#customization-guide\" rel=\"ugc nofollow\">Customization Guide</a></li>\n<li><a href=\"#how-to-set-up-this-workflow\" rel=\"ugc nofollow\">How to Set Up This Workflow</a></li>\n</ul>\n<hr>\n<h2>Problem Statement &amp; Target Audience</h2>\n<h3><strong>Who is this for?</strong></h3>\n<p>This workflow is ideal for content creators, researchers, and developers who need to:</p>\n<ul>\n<li>Extract <strong>subtitles</strong> from YouTube videos automatically.</li>\n<li><strong>Format and clean</strong> transcript data for readability.</li>\n<li>Use transcripts for <strong>summarization, content repurposing, or language analysis</strong>.</li>\n</ul>\n<hr>\n<h2>Pre-conditions &amp; API Requirements</h2>\n<h3><strong>API Required</strong></h3>\n<ul>\n<li><strong>YouTube Transcript API</strong> (<a href=\"https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3/playground\" rel=\"ugc nofollow\" target=\"_blank\">RapidAPI</a>)</li>\n</ul>\n<h3><strong>n8n Setup Prerequisites</strong></h3>\n<ul>\n<li>A running <strong>n8n instance</strong> (<a href=\"https://docs.n8n.io/\" rel=\"ugc nofollow\" target=\"_blank\">Installation Guide</a>)</li>\n<li>A <strong>RapidAPI account</strong> to access the <strong>YouTube Transcript API</strong></li>\n<li>An <strong>API key</strong> from RapidAPI to authenticate requests</li>\n</ul>\n<hr>\n<h2>Step-by-Step Workflow Explanation</h2>\n<h3><strong>1. Input YouTube Video URL (Trigger)</strong></h3>\n<ul>\n<li>This step provides a simple input form where users enter a YouTube video URL.</li>\n</ul>\n<h3><strong>2. HTTP Request Node (Retrieve Transcript Data)</strong></h3>\n<ul>\n<li>Makes a <strong>POST request</strong> to the YouTube Transcript API via RapidAPI.</li>\n<li>Passes the video URL received from the input form.</li>\n<li>Uses an <strong>environment variable</strong> to store the API key securely.</li>\n</ul>\n<h3><strong>3. Function Node (Process Transcript)</strong></h3>\n<ul>\n<li><strong>Receives</strong> the API response containing the <strong>raw transcript</strong>.</li>\n<li><strong>Processes and cleans</strong> the transcript:\n<ul>\n<li>Removes unwanted characters.</li>\n<li>Formats text for readability.</li>\n</ul>\n</li>\n<li><strong>Handles errors</strong> when no transcript is available.</li>\n<li><strong>Outputs</strong> both the <strong>raw and cleaned transcript</strong> for further use.</li>\n</ul>\n<h3><strong>4. Set Field Node (Response Formatting)</strong></h3>\n<ul>\n<li><strong>Structures</strong> the processed transcript data into a user-friendly format.</li>\n<li><strong>Returns</strong> the final transcript data to the client.</li>\n</ul>\n<hr>\n<h2>Customization Guide</h2>\n<h3><strong>1. Modify Transcript Cleaning Rules</strong></h3>\n<ul>\n<li>Update the <strong>Function Node</strong> to apply custom text processing, such as:\n<ul>\n<li>Removing timestamps.</li>\n<li>Changing the output format (e.g., JSON, plain text).</li>\n</ul>\n</li>\n</ul>\n<h3><strong>2. Store Transcripts in a Database</strong></h3>\n<ul>\n<li>Add a <strong>Database Node</strong> (e.g., MySQL, PostgreSQL, or Firebase) to save transcripts.</li>\n</ul>\n<h3><strong>3. Generate Summaries from Transcripts</strong></h3>\n<ul>\n<li>Integrate <strong>AI services</strong> (e.g., OpenAI, Google Gemini) to summarize transcripts.</li>\n</ul>\n<h3><strong>4. Convert Transcripts into Speech</strong></h3>\n<ul>\n<li>Use <strong>ElevenLabs API</strong> to generate an AI-powered voiceover from transcripts.</li>\n</ul>\n<hr>\n<h2>How to Set Up This Workflow</h2>\n<h3><strong>Step 1: Import the Workflow into n8n</strong></h3>\n<ul>\n<li>Download or copy the workflow JSON file.</li>\n<li>Import it into your <strong>n8n instance</strong>.</li>\n</ul>\n<h3><strong>Step 2: Set Up the API Key</strong></h3>\n<ul>\n<li>Sign up for the <strong><a href=\"https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3/playground\" rel=\"ugc nofollow\" target=\"_blank\">YouTube Transcript API</a></strong>.</li>\n<li>Subscribe to the api.</li>\n<li>Copy and paste your api key where the \"your_api_key\" is.</li>\n</ul>\n<h3><strong>Step 3: Activate the Workflow</strong></h3>\n<ul>\n<li>Start the workflow in <strong>n8n</strong>.</li>\n<li>Enter a <strong>YouTube video URL</strong> in the input form.</li>\n<li>The workflow will return a <strong>cleaned transcript</strong>.</li>\n</ul>\n<hr>\n<p>This workflow ensures seamless YouTube transcript extraction and processing with minimal manual effort. ðŸš€</p>\n</div><!--]-->"
}