{
  "title": "Generate Knowledge Base Articles with GPT & Perplexity AI for Contentful CMS",
  "url": "https://n8n.io/workflows/4012-generate-knowledge-base-articles-with-gpt-and-perplexity-ai-for-contentful-cms/",
  "category": "Marketing",
  "category_url": "https://n8n.io/workflows/categories/marketing/?sort=createdAt:desc",
  "author": "Cristiano Varriale",
  "publish_date": "Last update a day ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"WwEFqNK4YP6UJcg2\",\"meta\":{\"instanceId\":\"6bcff5ef8a06e8086902526a05c2a4c7bf5da8101f89e582301ed78094606f40\",\"templateCredsSetupCompleted\":true},\"name\":\"Auto Knowledge Base Article Generator\",\"tags\":[],\"nodes\":[{\"id\":\"17900021-8da3-4bd9-9d79-5d20d879ddc7\",\"name\":\"Create Perplexity Content\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1220,380],\"parameters\":{\"url\":\"https://api.perplexity.ai/chat/completions\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"model\\\": \\\"sonar-deep-research\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"Conduct an in-depth research on '{{ $json.output.parseJson().title }}', covering essential topics, recommended resources, and best practices. Additionally, please address these improvements: '{{ $json.output.parseJson().improvements }}'. The returned data should be at least 1000 words and use a combination of headers, tables, bold, and italics\\\"\\n    }\\n  ],\\n  \\\"max_tokens\\\": 60000,\\n  \\\"temperature\\\": 0.7,\\n  \\\"top_p\\\": 0.9,\\n  \\\"top_k\\\": 50,\\n  \\\"stream\\\": false,\\n  \\\"presence_penalty\\\": 0,\\n  \\\"frequency_penalty\\\": 0\\n}\",\"sendBody\":true,\"jsonHeaders\":\"{\\n  \\\"Authorization\\\": \\\"Bearer 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\\\",\\n  \\\"Content-Type\\\": \\\"application/json\\\"\\n}\",\"sendHeaders\":true,\"specifyBody\":\"json\",\"specifyHeaders\":\"json\"},\"typeVersion\":4.2},{\"id\":\"0cb3f3a7-92bd-4ff3-8a89-b6fc29513e65\",\"name\":\"AI Writer Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[720,380],\"parameters\":{\"text\":\"=Please create or revise an article about \\\"{{ $json.chatInput }}\\\".\\n\\nOr an article is already written because title: {{ $json.title }} is defined. Reference it to rewrite the {{ $json.content }} field\\n\\nDo not change the title, either the chatinput or the input article title. This is the title, do not change it.\\n\\nIf an article is NOT given, pick new categories in:\\n- getting-started\\n- learning-paths\\n- certifications\\n- programming\\n- applications\\n- career\\n\\nDo not make up a category, it should be the same in the exact case as above\\n\\nIf an article is given, only make ammendments to the content based on these specific improvements to include: \\\"{{ $json.improvements }}\\\".\\n\\nInclude the improvements key only if it is an input, and in that case don't change it\\n\\nRemember to return valid JSON with the fields:\\n{\\n  \\\"title\\\": \\\"...\\\",\\n  \\\"slug\\\": \\\"...\\\",\\n  \\\"category\\\": {\\n    \\\"id\\\": \\\"...\\\"\\n  },\\n  \\\"description\\\": \\\"...\\\",\\n  \\\"keywords\\\": [...],\\n  \\\"content\\\": \\\"...\\\",\\n  \\\"metaTitle\\\": \\\"...\\\",\\n  \\\"metaDescription\\\": \\\"...\\\",\\n  \\\"readingTime\\\": \\\"...\\\",\\n  \\\"difficulty\\\": \\\"...\\\"\\n  \\\"content\\\": \\\"...\\\"\\n}\",\"options\":{\"systemMessage\":\"You are a writing assistant. You will receive instructions to create or update an article in JSON format with the following structure:\\n\\n{\\n  \\\"title\\\": \\\"<string>\\\",\\n  \\\"slug\\\": \\\"<string>\\\",\\n  \\\"category\\\": {\\n    \\\"id\\\": \\\"<string>\\\" // e.g., \\\"getting-started\\\", \\\"learning-paths\\\", etc.\\n  },\\n  \\\"description\\\": \\\"<string>\\\",\\n  \\\"keywords\\\": [\\\"<string>\\\", \\\"<string>\\\", ...],\\n  \\\"content\\\": \\\"<string>\\\",\\n  \\\"metaTitle\\\": \\\"<string>\\\",\\n  \\\"metaDescription\\\": \\\"<string>\\\",\\n  \\\"readingTime\\\": \\\"<number or string>\\\",\\n  \\\"difficulty\\\": \\\"<string>\\\"\\n}\\n\\nYour task:\\n1. Produce a complete article in the above format, or revise the existing article if provided.\\n2. Make sure the text is clear, specific, and helpful to the reader.\\n3. Return valid JSON only – do not include extra commentary or fields beyond the above structure.\\n4. If any information is missing from the user instructions, make reasonable assumptions.\\n\"},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"bc62facb-c5cb-465d-89b1-a65a893c3ce1\",\"name\":\"AI Editor Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[2280,380],\"parameters\":{\"text\":\"={{ $json }}\",\"options\":{\"maxIterations\":5,\"systemMessage\":\"=You are an editorial AI assistant. Your role is to review and evaluate a draft article represented as a JSON object.\\n\\nCategory IDs:\\n- \\\"getting-started\\\"\\n- \\\"learning-paths\\\"\\n- \\\"certifications\\\"\\n- \\\"programming\\\"\\n- \\\"applications\\\"\\n- \\\"career\\\"\\n\\nInput Format:\\n\\n{\\n  \\\"title\\\": \\\"<string>\\\",\\n  \\\"slug\\\": \\\"<string>\\\",\\n  \\\"category\\\": { \\\"id\\\": \\\"<string>\\\" },\\n  \\\"description\\\": \\\"<string>\\\",\\n  \\\"keywords\\\": [\\\"<string>\\\", \\\"...\\\"],\\n  \\\"content\\\": \\\"<string>\\\",\\n  \\\"metaTitle\\\": \\\"<string>\\\",\\n  \\\"metaDescription\\\": \\\"<string>\\\",\\n  \\\"readingTime\\\": \\\"<string | number>\\\",\\n  \\\"difficulty\\\": \\\"<string>\\\"\\n}\\n\\nYour Tasks:\\n\\n1. Evaluate the quality of the article — especially the title, description, content, and metadata.\\n2. Comment on clarity, specificity, usefulness, and overall quality.\\n3. If improvements are needed, add an \\\"improvements\\\" field describing exactly what to fix.\\n4. Set the \\\"action\\\" field:\\n- \\\"rewrite\\\" if improvements are needed.\\n- \\\"submit\\\" if the article is high quality.\\n5. Include all fields from the original input in your output.\\n6. If \\\"action\\\" is \\\"submit\\\", set \\\"improvements\\\" to null.\\n7. Avoid repeating feedback across iterations.\\n8. After 2 iterations, automatically call the accept-and-publish tool and set the \\\"action\\\" to \\\"submit\\\".\\n9. VERY IMPORTANT: Do NOT modify any of the input fields\\n10. VERY IMPORTANT: Do NOT truncate the sources or modify the content field in any way\\n\\n✅ Output Format:\\n\\n{\\n  \\\"title\\\": \\\"...\\\",\\n  \\\"action\\\": \\\"rewrite | submit\\\",\\n  \\\"improvements\\\": \\\"... | null\\\",\\n  \\\"slug\\\": \\\"...\\\",\\n  \\\"category\\\": {\\n    \\\"id\\\": \\\"...\\\"\\n  },\\n  \\\"description\\\": \\\"...\\\",\\n  \\\"keywords\\\": [\\\"...\\\"],\\n  \\\"content\\\": \\\"...\\\",\\n  \\\"metaTitle\\\": \\\"...\\\",\\n  \\\"metaDescription\\\": \\\"...\\\",\\n  \\\"readingTime\\\": \\\"...\\\",\\n  \\\"difficulty\\\": \\\"...\\\"\\n}\\n\\nTone: Be concise, direct, and constructive. Focus on maximizing clarity, usefulness, and readability for the end reader.\"},\"promptType\":\"define\",\"hasOutputParser\":true},\"retryOnFail\":true,\"typeVersion\":1.7},{\"id\":\"8c08d67a-b916-4cfd-89cd-16b34250bcb2\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[680,640],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-3.5-turbo\",\"cachedResultName\":\"gpt-3.5-turbo\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"KLN8ZfDzv8mW6pyu\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"97bb1374-f502-4152-a5a3-bc5d46a18171\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[2200,660],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4.5-preview\",\"cachedResultName\":\"gpt-4.5-preview\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"KLN8ZfDzv8mW6pyu\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"1c422e76-5b1a-4615-b379-ab39d4bd13b4\",\"name\":\"Accept and Publish\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[2500,680],\"parameters\":{\"name\":\"submit\",\"workflowId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"uIREtTV8TRuF3lru\",\"cachedResultName\":\"Publish to Contentful\"},\"description\":\"Call this tool when the article quality is above the threshold we need\",\"workflowInputs\":{\"value\":{\"slug\":\"=  {{ $json.slug }}\",\"title\":\"={{ $('Format').item.json.title }}\",\"content\":\"={{ $json.content }}\",\"category\":\"={{ $json.category }}\",\"keywords\":\"={{ $json.keywords }}\",\"metaTitle\":\"={{ $json.metaTitle }}\",\"difficulty\":\"={{ $json.difficulty }}\",\"description\":\"={{ $json.description }}\",\"readingTime\":\"={{ $json.readingTime }}\",\"metaDescription\":\"={{ $json.metaDescription }}\"},\"schema\":[{\"id\":\"title\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"title\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"action\",\"type\":\"string\",\"display\":true,\"removed\":true,\"required\":false,\"displayName\":\"action\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"improvements\",\"type\":\"string\",\"display\":true,\"removed\":true,\"required\":false,\"displayName\":\"improvements\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"slug\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"slug\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"category\",\"type\":\"object\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"category\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"description\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"description\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"keywords\",\"type\":\"array\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"keywords\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"content\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"content\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"metaTitle\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"metaTitle\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"metaDescription\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"metaDescription\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"readingTime\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"readingTime\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"difficulty\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"difficulty\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2},{\"id\":\"b6807e84-900a-48fc-a869-862824c62ba1\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-60,660],\"webhookId\":\"7ed20abc-d8bc-4426-95f1-b9778c075ddf\",\"parameters\":{\"public\":true,\"options\":{},\"initialMessages\":\"What topics should I write about?\"},\"typeVersion\":1.1},{\"id\":\"e3021ac4-9444-4689-af0c-a4bbd4729c35\",\"name\":\"JSON.parse1\",\"type\":\"n8n-nodes-base.code\",\"position\":[1320,120],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"const outputText = $json.output;\\n\\n// Parse JSON from ChatGPT response\\nconst parsedOutput = JSON.parse(outputText);\\n\\n// Return parsed object for next nodes\\nreturn parsedOutput;\"},\"typeVersion\":2},{\"id\":\"d6a5eccd-c8e3-4ee0-beb0-7b8fc8428b91\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1840,380],\"parameters\":{\"numberInputs\":3},\"typeVersion\":3},{\"id\":\"8461a1a0-a984-4ec1-bc93-3a1a312caf55\",\"name\":\"Format\",\"type\":\"n8n-nodes-base.code\",\"position\":[2060,380],\"parameters\":{\"jsCode\":\"// Get all items passed into this node as an array\\nconst items = $input.all();\\n\\n// If you always have at least two items:\\nconst firstItem = items[0].json;\\nconst secondItem = items[1].json;\\nconst thirdItem = items[2].json;\\n\\n// Overwrite the first item’s “content” with the second item’s “content”\\nfirstItem.content = secondItem.content;\\nfirstItem.iterationCount = thirdItem.iterationCount\\n\\n// Return a single new item containing the merged result\\nreturn [\\n  {\\n    json: firstItem\\n  }\\n];\"},\"typeVersion\":2},{\"id\":\"9b9a82fb-990c-4be0-aee9-ed80f0631c28\",\"name\":\"JSON.parse\",\"type\":\"n8n-nodes-base.code\",\"position\":[3300,840],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"const outputText = $json.output;\\n\\n// Parse JSON from ChatGPT response\\nconst parsedOutput = JSON.parse(outputText);\\n\\n// Return parsed object for next nodes\\nreturn parsedOutput;\"},\"typeVersion\":2},{\"id\":\"066dfd10-e97a-44a8-89e0-5b2b5c4a6244\",\"name\":\"Format Perplexity Output & Add Citations\",\"type\":\"n8n-nodes-base.code\",\"position\":[1480,380],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"const data = { ...$json };\\n\\n// Clean out <think> block if present\\ndata.content = $json.choices[0].message.content.replace(/<think>[\\\\s\\\\S]*?<\\\\/think>/g, '').trim();\\n\\n// Convert citations array to markdown link list\\nconst citations = $json.citations\\n  .map((url, i) => `- [${i + 1}](${url})`)\\n  .join('\\\\n');\\n\\ndata.content += `\\\\n\\\\n---\\\\n\\\\n### Sources\\\\n${citations}`;\\n\\nreturn data;\"},\"typeVersion\":2},{\"id\":\"fc9d9e93-568a-41af-a295-8736617b157e\",\"name\":\"Initialize Count\",\"type\":\"n8n-nodes-base.set\",\"position\":[340,660],\"parameters\":{\"values\":{\"number\":[{\"name\":\"iterationCount\"}]},\"options\":{}},\"typeVersion\":1},{\"id\":\"b0e636dd-f572-4ee2-832f-4bb4167b011b\",\"name\":\"Increment Count\",\"type\":\"n8n-nodes-base.function\",\"position\":[1400,740],\"parameters\":{\"functionCode\":\"const current = $json.iterationCount || 0;\\n\\nreturn [{ iterationCount: current + 1 }];\"},\"typeVersion\":1},{\"id\":\"86689f0e-9607-4eda-bcd6-36241d0cbe63\",\"name\":\"Check Limit\",\"type\":\"n8n-nodes-base.if\",\"position\":[2660,380],\"parameters\":{\"conditions\":{\"number\":[{\"value1\":\"={{ $json.iterationCount }}\",\"value2\":3,\"operation\":\"largerEqual\"}]}},\"typeVersion\":1},{\"id\":\"0f42b0f3-0b96-40df-9c06-2a6d31e142d9\",\"name\":\"Stop Here\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[2980,300],\"parameters\":{},\"typeVersion\":1},{\"id\":\"1e61b3ba-e9bd-43c7-8217-d4a22f707318\",\"name\":\"Execute Workflow\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[3740,300],\"parameters\":{\"options\":{},\"workflowId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"uIREtTV8TRuF3lru\",\"cachedResultName\":\"Publish to Contentful\"},\"workflowInputs\":{\"value\":{\"slug\":\"={{ $json.slug }}\",\"title\":\"={{ $json.title }}\",\"content\":\"={{ $json.content }}\",\"category\":\"={{ $json.category }}\",\"keywords\":\"={{ $json.keywords }}\",\"metaTitle\":\"={{ $json.metaTitle }}\",\"difficulty\":\"={{ $json.difficulty }}\",\"description\":\"={{ $json.description }}\",\"readingTime\":\"={{ $json.readingTime }}\",\"metaDescription\":\"={{ $json.metaDescription }}\"},\"schema\":[{\"id\":\"title\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"title\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"slug\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"slug\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"category\",\"type\":\"object\",\"display\":true,\"required\":false,\"displayName\":\"category\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"description\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"description\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"keywords\",\"type\":\"array\",\"display\":true,\"required\":false,\"displayName\":\"keywords\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"content\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"content\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"metaTitle\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"metaTitle\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"metaDescription\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"metaDescription\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"readingTime\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"readingTime\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"difficulty\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"difficulty\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":true}},\"typeVersion\":1.2},{\"id\":\"04526224-e48c-4032-9c92-475c6bf9cd0a\",\"name\":\"JSON.parse3\",\"type\":\"n8n-nodes-base.code\",\"position\":[3280,300],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"const outputText = $json.output;\\n\\n// Parse JSON from ChatGPT response\\nconst parsedOutput = JSON.parse(outputText);\\n\\n// Return parsed object for next nodes\\nreturn parsedOutput;\"},\"typeVersion\":2},{\"id\":\"0303ab91-b788-4074-a15d-239565528dec\",\"name\":\"should submit\",\"type\":\"n8n-nodes-base.if\",\"position\":[2980,680],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"3c1f6cb2-a556-4c74-885e-05e4f757997b\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"submit\",\"rightValue\":\"={{ $json.output.parseJson().action }}\"}]}},\"typeVersion\":2.2},{\"id\":\"4f68e1ad-0b7c-41ca-a9cc-d220017cc1bd\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[540,80],\"parameters\":{\"color\":6,\"width\":940,\"height\":680,\"content\":\"## Writer Agent\\n\\n- Focuses on writing for all the fields in contentful\\n- Has a specified format for input and output\\n- Handles implementing feedback from editor agent\"},\"typeVersion\":1},{\"id\":\"f5e9968a-0681-4b72-9bb3-98750f55565e\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2620,120],\"parameters\":{\"color\":3,\"width\":860,\"height\":880,\"content\":\"## Count Incrementer\\n\\n- Tracks a variable count to ensure the flow hits a max number of feedback iterations.\\n- This is critical for feedback to avoid hitting an infinite loop.\"},\"typeVersion\":1},{\"id\":\"462e6c9a-162a-4f66-b846-14b29517454c\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2140,160],\"parameters\":{\"width\":460,\"height\":640,\"content\":\"## Editor Agent\\n\\n- Sole purpose is to look at the quality of output for the previous combo of perplexity & openAI Agent.\\n- Determines if it is publishable or not.\"},\"typeVersion\":1},{\"id\":\"27149a0a-ab95-4f73-a20c-34167ac56d2a\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[3580,60],\"parameters\":{\"color\":4,\"width\":460,\"height\":480,\"content\":\"## Publish To Contentful\\n\\n- Publishes to Contentful by converting the fields to the appropriate fields for the contentful POST create content API.\\n- Converts the article to Rich Text formatting specifically for Contentful by using another AI formatter trained on it's specs.\\n\\nemail us if you want that flow too: christian@varritech.com\"},\"typeVersion\":1}],\"active\":true,\"pinData\":{},\"settings\":{\"callerPolicy\":\"workflowsFromSameOwner\",\"errorWorkflow\":\"AKus9UvKRJfvTZBA\",\"executionOrder\":\"v1\",\"executionTimeout\":1800},\"versionId\":\"69ce37b2-0909-4d9e-af89-992e22888bd8\",\"connections\":{\"Merge\":{\"main\":[[{\"node\":\"Format\",\"type\":\"main\",\"index\":0}]]},\"Format\":{\"main\":[[{\"node\":\"AI Editor Agent\",\"type\":\"main\",\"index\":0}]]},\"Stop Here\":{\"main\":[[{\"node\":\"JSON.parse3\",\"type\":\"main\",\"index\":0}]]},\"JSON.parse\":{\"main\":[[{\"node\":\"AI Writer Agent\",\"type\":\"main\",\"index\":0},{\"node\":\"Increment Count\",\"type\":\"main\",\"index\":0}]]},\"Check Limit\":{\"main\":[[{\"node\":\"Stop Here\",\"type\":\"main\",\"index\":0}],[{\"node\":\"should submit\",\"type\":\"main\",\"index\":0}]]},\"JSON.parse1\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]},\"JSON.parse3\":{\"main\":[[{\"node\":\"Execute Workflow\",\"type\":\"main\",\"index\":0}]]},\"should submit\":{\"main\":[[{\"node\":\"JSON.parse3\",\"type\":\"main\",\"index\":0}],[{\"node\":\"JSON.parse\",\"type\":\"main\",\"index\":0}]]},\"AI Editor Agent\":{\"main\":[[{\"node\":\"Check Limit\",\"type\":\"main\",\"index\":0}]]},\"AI Writer Agent\":{\"main\":[[{\"node\":\"Create Perplexity Content\",\"type\":\"main\",\"index\":0},{\"node\":\"JSON.parse1\",\"type\":\"main\",\"index\":0}]]},\"Increment Count\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":2}]]},\"Initialize Count\":{\"main\":[[{\"node\":\"AI Writer Agent\",\"type\":\"main\",\"index\":0},{\"node\":\"Increment Count\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Writer Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Accept and Publish\":{\"ai_tool\":[[{\"node\":\"AI Editor Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"AI Editor Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Create Perplexity Content\":{\"main\":[[{\"node\":\"Format Perplexity Output & Add Citations\",\"type\":\"main\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"Initialize Count\",\"type\":\"main\",\"index\":0}]]},\"Format Perplexity Output & Add Citations\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]}}}",
  "readme": "## Workflow: Auto Knowledge Base Article Generator\n\n### 🏗️ Architecture Overview\n\nThis workflow automates the end-to-end creation of a structured knowledge-base article from a simple chat prompt:\n\n  1. **Chat Trigger** → Receives user request\n  2. **AI Drafting Loop** → Generates & refines JSON article via AI agents\n  3. **Perplexity Research Call** → Deep-dive content generation\n  4. **Editorial Loop** → Up to 3 AI-driven revisions\n  5. **Contentful Publish** → Pushes final JSON into CMS\n\n\n\n* * *\n\n### 📦 Node-by-Node Breakdown\n    \n    \n    flowchart LR\n      A[Webhook: Chat Trigger] --&gt; B[AI Writer Agent]\n      B --&gt; C[HTTP Request: Perplexity Content]\n      C --&gt; D[Function: Format Output & Citations]\n      D --&gt; E[Loop Start: Initialize Count]\n      E --&gt; F[AI Editor Agent]\n      F --&gt; G{action == \"rewrite\"?}\n      G -- yes --&gt; H[Function: Merge Improvements]\n      H --&gt; I[Increment Count] --&gt; F\n      G -- no --&gt; J[Stop Loop]\n      J --&gt; K[HTTP Request: Publish to Contentful]\n    \n\n### Webhook: Chat Trigger\n\n**Type** : HTTP Webhook (POST /webhook/knowledge-article)\n\n**Payload** :\n    \n    \n    { \n    \t\"chatInput\": \"What topics should I write about?\" \n    }\n    \n\n**Purpose** : Kicks off the workflow on that chat prompt.\n\n### AI Writer Agent\n\n**Inputs** : chatInput or existing article JSON\n\n**Outputs** :\n    \n    \n    {\n      \"title\": \"...\",\n      \"slug\": \"...\",\n      \"category.id\": \"...\",\n      \"description\": \"...\",\n      \"keywords\": [...],\n      \"content\": \"...\",\n      \"metaTitle\": \"...\",\n      \"metaDescription\": \"...\",\n      \"readingTime\": 5,\n      \"difficulty\": \"intermediate\"\n    }\n    \n\n**Purpose** : Generates the article skeleton (metadata + initial content).\n\n# HTTP Request: Perplexity Content\n\n**Method:** POST\n\n**URL:** <https://api.perplexity.ai/research>\n\n**Body:**\n    \n    \n    {\n      \"model\": \"sonar-deep-research\",\n      \"query\": \"{{ $json.title }}\",\n      \"length\": 1000\n    }\n    \n\n**Purpose:** Retrieves a long-form, deeply researched draft for the article body.\n\n## Function: Format Output & Citations\n\n**Logic:**\n\n  * Parse raw Perplexity response\n  * Extract source URIs\n  * Append them under a sources markdown list\n\n\n\n## Editorial Loop\n\n  1. Initialize Counter to 0\n  2. AI Editor Agent \n    * Reads draft JSON\n    * Returns either: \n      * `action: \"rewrite\" + improvements: [...]`\n      * or `action: \"submit\"`\n  3. Merge Improvements (if rewriting) \n    * Applies suggested updates to JSON fields\n  4. Limit Check \n    * Stops after 3 iterations or on \"submit\"\n\n\n\n## HTTP Request: Publish to Contentful\n\n**Method:** PUT\n\n**URL:** [https://cdn.contentful.com/spaces/{space}/environments/master/entries/{entryId}](https://cdn.contentful.com/spaces/%7Bspace%7D/environments/master/entries/%7BentryId%7D)\n\n**Headers:**\n\n  * Authorization: Bearer <token>\n  * Content-Type: application/vnd.contentful.management.v1+json\n\n\n\n**Body:** Maps JSON → Contentful entry fields\n\n**Outcome:** Publishes the finalized article live.\n\n## 🔍 Design Rationale & Best Practices\n\n### Separation of Concerns\n\nWriter vs. Editor agents isolate creative drafting from quality review.\n\n### Idempotent Loop\n\nCounter + action flags prevent infinite retries.\n\n### Extensibility\n\nSwap in different research APIs or CMS targets with minimal changes.\n\n### Structured JSON\n\nEnsures predictable input/output for each node.\n",
  "readme_html": "<!--[--><div data-v-859c7806=\"\"><h2>Workflow: Auto Knowledge Base Article Generator</h2>\n<h3>🏗️ Architecture Overview</h3>\n<p>This workflow automates the end-to-end creation of a structured knowledge-base article from a simple chat prompt:</p>\n<ol>\n<li><strong>Chat Trigger</strong> → Receives user request</li>\n<li><strong>AI Drafting Loop</strong> → Generates &amp; refines JSON article via AI agents</li>\n<li><strong>Perplexity Research Call</strong> → Deep-dive content generation</li>\n<li><strong>Editorial Loop</strong> → Up to 3 AI-driven revisions</li>\n<li><strong>Contentful Publish</strong> → Pushes final JSON into CMS</li>\n</ol>\n<hr>\n<h3>📦 Node-by-Node Breakdown</h3>\n<pre><code>flowchart LR\n  A[Webhook: Chat Trigger] --&amp;gt; B[AI Writer Agent]\n  B --&amp;gt; C[HTTP Request: Perplexity Content]\n  C --&amp;gt; D[Function: Format Output &amp; Citations]\n  D --&amp;gt; E[Loop Start: Initialize Count]\n  E --&amp;gt; F[AI Editor Agent]\n  F --&amp;gt; G{action == \"rewrite\"?}\n  G -- yes --&amp;gt; H[Function: Merge Improvements]\n  H --&amp;gt; I[Increment Count] --&amp;gt; F\n  G -- no --&amp;gt; J[Stop Loop]\n  J --&amp;gt; K[HTTP Request: Publish to Contentful]\n</code></pre>\n<h3>Webhook: Chat Trigger</h3>\n<p><strong>Type</strong>: HTTP Webhook (POST /webhook/knowledge-article)</p>\n<p><strong>Payload</strong>:</p>\n<pre><code>{ \n\t\"chatInput\": \"What topics should I write about?\" \n}\n</code></pre>\n<p><strong>Purpose</strong>: Kicks off the workflow on that chat prompt.</p>\n<h3>AI Writer Agent</h3>\n<p><strong>Inputs</strong>: chatInput or existing article JSON</p>\n<p><strong>Outputs</strong>:</p>\n<pre><code>{\n  \"title\": \"...\",\n  \"slug\": \"...\",\n  \"category.id\": \"...\",\n  \"description\": \"...\",\n  \"keywords\": [...],\n  \"content\": \"...\",\n  \"metaTitle\": \"...\",\n  \"metaDescription\": \"...\",\n  \"readingTime\": 5,\n  \"difficulty\": \"intermediate\"\n}\n</code></pre>\n<p><strong>Purpose</strong>: Generates the article skeleton (metadata + initial content).</p>\n<h1>HTTP Request: Perplexity Content</h1>\n<p><strong>Method:</strong> POST</p>\n<p><strong>URL:</strong> <a href=\"https://api.perplexity.ai/research\" rel=\"ugc nofollow\" target=\"_blank\">https://api.perplexity.ai/research</a></p>\n<p><strong>Body:</strong></p>\n<pre><code>{\n  \"model\": \"sonar-deep-research\",\n  \"query\": \"{{ $json.title }}\",\n  \"length\": 1000\n}\n</code></pre>\n<p><strong>Purpose:</strong> Retrieves a long-form, deeply researched draft for the article body.</p>\n<h2>Function: Format Output &amp; Citations</h2>\n<p><strong>Logic:</strong></p>\n<ul>\n<li>Parse raw Perplexity response</li>\n<li>Extract source URIs</li>\n<li>Append them under a sources markdown list</li>\n</ul>\n<h2>Editorial Loop</h2>\n<ol>\n<li>Initialize Counter to 0</li>\n<li>AI Editor Agent\n<ul>\n<li>Reads draft JSON</li>\n<li>Returns either:\n<ul>\n<li><code>action: \"rewrite\" + improvements: [...]</code></li>\n<li>or <code>action: \"submit\"</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Merge Improvements (if rewriting)\n<ul>\n<li>Applies suggested updates to JSON fields</li>\n</ul>\n</li>\n<li>Limit Check\n<ul>\n<li>Stops after 3 iterations or on \"submit\"</li>\n</ul>\n</li>\n</ol>\n<h2>HTTP Request: Publish to Contentful</h2>\n<p><strong>Method:</strong> PUT</p>\n<p><strong>URL:</strong> <a href=\"https://cdn.contentful.com/spaces/%7Bspace%7D/environments/master/entries/%7BentryId%7D\" rel=\"ugc nofollow\" target=\"_blank\">https://cdn.contentful.com/spaces/{space}/environments/master/entries/{entryId}</a></p>\n<p><strong>Headers:</strong></p>\n<ul>\n<li>Authorization: Bearer &lt;token&gt;</li>\n<li>Content-Type: application/vnd.contentful.management.v1+json</li>\n</ul>\n<p><strong>Body:</strong> Maps JSON → Contentful entry fields</p>\n<p><strong>Outcome:</strong> Publishes the finalized article live.</p>\n<h2>🔍 Design Rationale &amp; Best Practices</h2>\n<h3>Separation of Concerns</h3>\n<p>Writer vs. Editor agents isolate creative drafting from quality review.</p>\n<h3>Idempotent Loop</h3>\n<p>Counter + action flags prevent infinite retries.</p>\n<h3>Extensibility</h3>\n<p>Swap in different research APIs or CMS targets with minimal changes.</p>\n<h3>Structured JSON</h3>\n<p>Ensures predictable input/output for each node.</p>\n</div><!--]-->",
  "readme_zh": "## 工作流：知识库文章自动生成器\n\n### 🏗️ 架构概览\n\n本工作流实现从简单聊天提示到结构化知识库文章的端到端自动化生成：\n\n1. **聊天触发器** → 接收用户请求  \n2. **AI草拟循环** → 通过AI代理生成并优化JSON格式文章  \n3. **Perplexity研究调用** → 深度内容生成  \n4. **编辑循环** → 最多3轮AI驱动的修订  \n5. **Contentful发布** → 将最终JSON推送至CMS  \n\n* * *\n\n### 📦 节点详解\n    \n    \n    flowchart LR\n      A[Webhook: 聊天触发器] --&gt; B[AI写作代理]\n      B --&gt; C[HTTP请求: Perplexity内容]\n      C --&gt; D[函数: 格式化输出与引用]\n      D --&gt; E[循环开始: 初始化计数器]\n      E --&gt; F[AI编辑代理]\n      F --&gt; G{action == \"重写\"?}\n      G -- 是 --&gt; H[函数: 合并改进]\n      H --&gt; I[计数器递增] --&gt; F\n      G -- 否 --&gt; J[终止循环]\n      J --&gt; K[HTTP请求: 发布到Contentful]\n    \n\n### Webhook: 聊天触发器\n\n**类型** : HTTP Webhook (POST /webhook/knowledge-article)\n\n**载荷** :\n    \n    \n    { \n    \t\"chatInput\": \"我应该写哪些主题？\" \n    }\n    \n\n**功能** : 根据聊天提示触发工作流。\n\n### AI写作代理\n\n**输入** : chatInput或现有文章JSON\n\n**输出** :\n    \n    \n    {\n      \"title\": \"...\",\n      \"slug\": \"...\",\n      \"category.id\": \"...\",\n      \"description\": \"...\",\n      \"keywords\": [...],\n      \"content\": \"...\",\n      \"metaTitle\": \"...\",\n      \"metaDescription\": \"...\",\n      \"readingTime\": 5,\n      \"difficulty\": \"intermediate\"\n    }\n    \n\n**功能** : 生成文章框架（元数据+初始内容）。\n\n### HTTP请求: Perplexity内容\n\n**方法:** POST\n\n**URL:** <https://api.perplexity.ai/research>\n\n**请求体:**\n    \n    \n    {\n      \"model\": \"sonar-deep-research\",\n      \"query\": \"{{ $json.title }}\",\n      \"length\": 1000\n    }\n    \n\n**功能:** 获取文章主体的长篇幅深度研究草稿。\n\n## 函数: 格式化输出与引用\n\n**逻辑:**\n\n* 解析原始Perplexity响应  \n* 提取来源URI  \n* 以Markdown列表形式追加来源  \n\n## 编辑循环\n\n1. 初始化计数器为0  \n2. AI编辑代理  \n   * 读取草稿JSON  \n   * 返回以下两种结果之一：  \n     * `action: \"重写\" + improvements: [...]`  \n     * 或 `action: \"提交\"`  \n3. 合并改进（若重写）  \n   * 将建议更新应用到JSON字段  \n4. 限制检查  \n   * 达到3次迭代或收到\"提交\"指令时终止  \n\n## HTTP请求: 发布到Contentful\n\n**方法:** PUT\n\n**URL:** [https://cdn.contentful.com/spaces/{space}/environments/master/entries/{entryId}](https://cdn.contentful.com/spaces/%7Bspace%7D/environments/master/entries/%7BentryId%7D)\n\n**请求头:**\n\n* Authorization: Bearer <token>  \n* Content-Type: application/vnd.contentful.management.v1+json  \n\n**请求体:** 将JSON映射至Contentful条目字段\n\n**结果:** 实时发布最终文章。\n\n## 🔍 设计原理与最佳实践\n\n### 关注点分离\n\n写作代理与编辑代理将创意草拟与质量评审隔离。\n\n### 幂等循环\n\n计数器+动作标志防止无限重试。\n\n### 可扩展性\n\n只需最小改动即可更换研究API或CMS目标。\n\n### 结构化JSON\n\n确保每个节点具有可预测的输入/输出。",
  "title_zh": "使用GPT和Perplexity AI为Contentful CMS生成知识库文章",
  "publish_date_zh": "最近更新于一天前",
  "workflow_json_zh": "{\n  \"id\": \"WwEFqNK4YP6UJcg2\",\n  \"meta\": {\n    \"instanceId\": \"6bcff5ef8a06e8086902526a05c2a4c7bf5da8101f89e582301ed78094606f40\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Auto Knowledge Base Article Generator\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"17900021-8da3-4bd9-9d79-5d20d879ddc7\",\n      \"name\": \"Create Perplexity Content\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1220,\n        380\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.perplexity.ai/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"sonar-deep-research\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"Conduct an in-depth research on '{{ $json.output.parseJson().title }}', covering essential topics, recommended resources, and best practices. Additionally, please address these improvements: '{{ $json.output.parseJson().improvements }}'. The returned data should be at least 1000 words and use a combination of headers, tables, bold, and italics\\\"\\n    }\\n  ],\\n  \\\"max_tokens\\\": 60000,\\n  \\\"temperature\\\": 0.7,\\n  \\\"top_p\\\": 0.9,\\n  \\\"top_k\\\": 50,\\n  \\\"stream\\\": false,\\n  \\\"presence_penalty\\\": 0,\\n  \\\"frequency_penalty\\\": 0\\n}\",\n        \"sendBody\": true,\n        \"jsonHeaders\": \"{\\n  \\\"Authorization\\\": \\\"Bearer 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\\\",\\n  \\\"Content-Type\\\": \\\"application/json\\\"\\n}\",\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"specifyHeaders\": \"json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"0cb3f3a7-92bd-4ff3-8a89-b6fc29513e65\",\n      \"name\": \"AI Writer Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        720,\n        380\n      ],\n      \"parameters\": {\n        \"text\": \"=Please create or revise an article about \\\"{{ $json.chatInput }}\\\".\\n\\nOr an article is already written because title: {{ $json.title }} is defined. Reference it to rewrite the {{ $json.content }} field\\n\\nDo not change the title, either the chatinput or the input article title. This is the title, do not change it.\\n\\nIf an article is NOT given, pick new categories in:\\n- getting-started\\n- learning-paths\\n- certifications\\n- programming\\n- applications\\n- career\\n\\nDo not make up a category, it should be the same in the exact case as above\\n\\nIf an article is given, only make ammendments to the content based on these specific improvements to include: \\\"{{ $json.improvements }}\\\".\\n\\nInclude the improvements key only if it is an input, and in that case don't change it\\n\\nRemember to return valid JSON with the fields:\\n{\\n  \\\"title\\\": \\\"...\\\",\\n  \\\"slug\\\": \\\"...\\\",\\n  \\\"category\\\": {\\n    \\\"id\\\": \\\"...\\\"\\n  },\\n  \\\"description\\\": \\\"...\\\",\\n  \\\"keywords\\\": [...],\\n  \\\"content\\\": \\\"...\\\",\\n  \\\"metaTitle\\\": \\\"...\\\",\\n  \\\"metaDescription\\\": \\\"...\\\",\\n  \\\"readingTime\\\": \\\"...\\\",\\n  \\\"difficulty\\\": \\\"...\\\"\\n  \\\"content\\\": \\\"...\\\"\\n}\",\n        \"options\": {\n          \"systemMessage\": \"You are a writing assistant. You will receive instructions to create or update an article in JSON format with the following structure:\\n\\n{\\n  \\\"title\\\": \\\"<string>\\\",\\n  \\\"slug\\\": \\\"<string>\\\",\\n  \\\"category\\\": {\\n    \\\"id\\\": \\\"<string>\\\" // e.g., \\\"getting-started\\\", \\\"learning-paths\\\", etc.\\n  },\\n  \\\"description\\\": \\\"<string>\\\",\\n  \\\"keywords\\\": [\\\"<string>\\\", \\\"<string>\\\", ...],\\n  \\\"content\\\": \\\"<string>\\\",\\n  \\\"metaTitle\\\": \\\"<string>\\\",\\n  \\\"metaDescription\\\": \\\"<string>\\\",\\n  \\\"readingTime\\\": \\\"<number or string>\\\",\\n  \\\"difficulty\\\": \\\"<string>\\\"\\n}\\n\\nYour task:\\n1. Produce a complete article in the above format, or revise the existing article if provided.\\n2. Make sure the text is clear, specific, and helpful to the reader.\\n3. Return valid JSON only – do not include extra commentary or fields beyond the above structure.\\n4. If any information is missing from the user instructions, make reasonable assumptions.\\n\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"bc62facb-c5cb-465d-89b1-a65a893c3ce1\",\n      \"name\": \"AI Editor Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        2280,\n        380\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json }}\",\n        \"options\": {\n          \"maxIterations\": 5,\n          \"systemMessage\": \"=You are an editorial AI assistant. Your role is to review and evaluate a draft article represented as a JSON object.\\n\\nCategory IDs:\\n- \\\"getting-started\\\"\\n- \\\"learning-paths\\\"\\n- \\\"certifications\\\"\\n- \\\"programming\\\"\\n- \\\"applications\\\"\\n- \\\"career\\\"\\n\\nInput Format:\\n\\n{\\n  \\\"title\\\": \\\"<string>\\\",\\n  \\\"slug\\\": \\\"<string>\\\",\\n  \\\"category\\\": { \\\"id\\\": \\\"<string>\\\" },\\n  \\\"description\\\": \\\"<string>\\\",\\n  \\\"keywords\\\": [\\\"<string>\\\", \\\"...\\\"],\\n  \\\"content\\\": \\\"<string>\\\",\\n  \\\"metaTitle\\\": \\\"<string>\\\",\\n  \\\"metaDescription\\\": \\\"<string>\\\",\\n  \\\"readingTime\\\": \\\"<string | number>\\\",\\n  \\\"difficulty\\\": \\\"<string>\\\"\\n}\\n\\nYour Tasks:\\n\\n1. Evaluate the quality of the article — especially the title, description, content, and metadata.\\n2. Comment on clarity, specificity, usefulness, and overall quality.\\n3. If improvements are needed, add an \\\"improvements\\\" field describing exactly what to fix.\\n4. Set the \\\"action\\\" field:\\n- \\\"rewrite\\\" if improvements are needed.\\n- \\\"submit\\\" if the article is high quality.\\n5. Include all fields from the original input in your output.\\n6. If \\\"action\\\" is \\\"submit\\\", set \\\"improvements\\\" to null.\\n7. Avoid repeating feedback across iterations.\\n8. After 2 iterations, automatically call the accept-and-publish tool and set the \\\"action\\\" to \\\"submit\\\".\\n9. VERY IMPORTANT: Do NOT modify any of the input fields\\n10. VERY IMPORTANT: Do NOT truncate the sources or modify the content field in any way\\n\\n✅ Output Format:\\n\\n{\\n  \\\"title\\\": \\\"...\\\",\\n  \\\"action\\\": \\\"rewrite | submit\\\",\\n  \\\"improvements\\\": \\\"... | null\\\",\\n  \\\"slug\\\": \\\"...\\\",\\n  \\\"category\\\": {\\n    \\\"id\\\": \\\"...\\\"\\n  },\\n  \\\"description\\\": \\\"...\\\",\\n  \\\"keywords\\\": [\\\"...\\\"],\\n  \\\"content\\\": \\\"...\\\",\\n  \\\"metaTitle\\\": \\\"...\\\",\\n  \\\"metaDescription\\\": \\\"...\\\",\\n  \\\"readingTime\\\": \\\"...\\\",\\n  \\\"difficulty\\\": \\\"...\\\"\\n}\\n\\nTone: Be concise, direct, and constructive. Focus on maximizing clarity, usefulness, and readability for the end reader.\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"8c08d67a-b916-4cfd-89cd-16b34250bcb2\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        680,\n        640\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-3.5-turbo\",\n          \"cachedResultName\": \"gpt-3.5-turbo\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"KLN8ZfDzv8mW6pyu\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"97bb1374-f502-4152-a5a3-bc5d46a18171\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        2200,\n        660\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.5-preview\",\n          \"cachedResultName\": \"gpt-4.5-preview\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"KLN8ZfDzv8mW6pyu\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"1c422e76-5b1a-4615-b379-ab39d4bd13b4\",\n      \"name\": \"Accept and Publish\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        2500,\n        680\n      ],\n      \"parameters\": {\n        \"name\": \"submit\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"uIREtTV8TRuF3lru\",\n          \"cachedResultName\": \"Publish to Contentful\"\n        },\n        \"description\": \"Call this tool when the article quality is above the threshold we need\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"slug\": \"=  {{ $json.slug }}\",\n            \"title\": \"={{ $('Format').item.json.title }}\",\n            \"content\": \"={{ $json.content }}\",\n            \"category\": \"={{ $json.category }}\",\n            \"keywords\": \"={{ $json.keywords }}\",\n            \"metaTitle\": \"={{ $json.metaTitle }}\",\n            \"difficulty\": \"={{ $json.difficulty }}\",\n            \"description\": \"={{ $json.description }}\",\n            \"readingTime\": \"={{ $json.readingTime }}\",\n            \"metaDescription\": \"={{ $json.metaDescription }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"title\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"title\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"action\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"required\": false,\n              \"displayName\": \"action\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"improvements\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"required\": false,\n              \"displayName\": \"improvements\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"slug\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"slug\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"category\",\n              \"type\": \"object\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"category\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"description\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"description\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"keywords\",\n              \"type\": \"array\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"keywords\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"content\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"content\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"metaTitle\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"metaTitle\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"metaDescription\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"metaDescription\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"readingTime\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"readingTime\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"difficulty\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"difficulty\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"b6807e84-900a-48fc-a869-862824c62ba1\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -60,\n        660\n      ],\n      \"webhookId\": \"7ed20abc-d8bc-4426-95f1-b9778c075ddf\",\n      \"parameters\": {\n        \"public\": true,\n        \"options\": {},\n        \"initialMessages\": \"What topics should I write about?\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"e3021ac4-9444-4689-af0c-a4bbd4729c35\",\n      \"name\": \"JSON.parse1\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1320,\n        120\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const outputText = $json.output;\\n\\n// Parse JSON from ChatGPT response\\nconst parsedOutput = JSON.parse(outputText);\\n\\n// Return parsed object for next nodes\\nreturn parsedOutput;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d6a5eccd-c8e3-4ee0-beb0-7b8fc8428b91\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1840,\n        380\n      ],\n      \"parameters\": {\n        \"numberInputs\": 3\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"8461a1a0-a984-4ec1-bc93-3a1a312caf55\",\n      \"name\": \"Format\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2060,\n        380\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get all items passed into this node as an array\\nconst items = $input.all();\\n\\n// If you always have at least two items:\\nconst firstItem = items[0].json;\\nconst secondItem = items[1].json;\\nconst thirdItem = items[2].json;\\n\\n// Overwrite the first item’s “content” with the second item’s “content”\\nfirstItem.content = secondItem.content;\\nfirstItem.iterationCount = thirdItem.iterationCount\\n\\n// Return a single new item containing the merged result\\nreturn [\\n  {\\n    json: firstItem\\n  }\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9b9a82fb-990c-4be0-aee9-ed80f0631c28\",\n      \"name\": \"JSON.parse\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        3300,\n        840\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const outputText = $json.output;\\n\\n// Parse JSON from ChatGPT response\\nconst parsedOutput = JSON.parse(outputText);\\n\\n// Return parsed object for next nodes\\nreturn parsedOutput;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"066dfd10-e97a-44a8-89e0-5b2b5c4a6244\",\n      \"name\": \"Format Perplexity Output & Add Citations\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1480,\n        380\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const data = { ...$json };\\n\\n// Clean out <think> block if present\\ndata.content = $json.choices[0].message.content.replace(/<think>[\\\\s\\\\S]*?<\\\\/think>/g, '').trim();\\n\\n// Convert citations array to markdown link list\\nconst citations = $json.citations\\n  .map((url, i) => `- [${i + 1}](${url})`)\\n  .join('\\\\n');\\n\\ndata.content += `\\\\n\\\\n---\\\\n\\\\n### Sources\\\\n${citations}`;\\n\\nreturn data;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"fc9d9e93-568a-41af-a295-8736617b157e\",\n      \"name\": \"Initialize Count\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        340,\n        660\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"number\": [\n            {\n              \"name\": \"iterationCount\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b0e636dd-f572-4ee2-832f-4bb4167b011b\",\n      \"name\": \"Increment Count\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1400,\n        740\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const current = $json.iterationCount || 0;\\n\\nreturn [{ iterationCount: current + 1 }];\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"86689f0e-9607-4eda-bcd6-36241d0cbe63\",\n      \"name\": \"Check Limit\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2660,\n        380\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"number\": [\n            {\n              \"value1\": \"={{ $json.iterationCount }}\",\n              \"value2\": 3,\n              \"operation\": \"largerEqual\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0f42b0f3-0b96-40df-9c06-2a6d31e142d9\",\n      \"name\": \"Stop Here\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2980,\n        300\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1e61b3ba-e9bd-43c7-8217-d4a22f707318\",\n      \"name\": \"Execute Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        3740,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"uIREtTV8TRuF3lru\",\n          \"cachedResultName\": \"Publish to Contentful\"\n        },\n        \"workflowInputs\": {\n          \"value\": {\n            \"slug\": \"={{ $json.slug }}\",\n            \"title\": \"={{ $json.title }}\",\n            \"content\": \"={{ $json.content }}\",\n            \"category\": \"={{ $json.category }}\",\n            \"keywords\": \"={{ $json.keywords }}\",\n            \"metaTitle\": \"={{ $json.metaTitle }}\",\n            \"difficulty\": \"={{ $json.difficulty }}\",\n            \"description\": \"={{ $json.description }}\",\n            \"readingTime\": \"={{ $json.readingTime }}\",\n            \"metaDescription\": \"={{ $json.metaDescription }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"title\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"title\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"slug\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"slug\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"category\",\n              \"type\": \"object\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"category\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"description\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"description\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"keywords\",\n              \"type\": \"array\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"keywords\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"content\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"content\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"metaTitle\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"metaTitle\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"metaDescription\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"metaDescription\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"readingTime\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"readingTime\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"difficulty\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"difficulty\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": true\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"04526224-e48c-4032-9c92-475c6bf9cd0a\",\n      \"name\": \"JSON.parse3\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        3280,\n        300\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const outputText = $json.output;\\n\\n// Parse JSON from ChatGPT response\\nconst parsedOutput = JSON.parse(outputText);\\n\\n// Return parsed object for next nodes\\nreturn parsedOutput;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0303ab91-b788-4074-a15d-239565528dec\",\n      \"name\": \"should submit\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2980,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"3c1f6cb2-a556-4c74-885e-05e4f757997b\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"submit\",\n              \"rightValue\": \"={{ $json.output.parseJson().action }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"4f68e1ad-0b7c-41ca-a9cc-d220017cc1bd\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        540,\n        80\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 940,\n        \"height\": 680,\n        \"content\": \"## 写作代理\\n\\n- 专注于为Contentful平台所有字段撰写内容\\n- 具备标准化的输入输出格式规范\\n- 负责落实编辑代理的反馈意见\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f5e9968a-0681-4b72-9bb3-98750f55565e\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2620,\n        120\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 860,\n        \"height\": 880,\n        \"content\": \"## 计数器增量器\\n\\n- 追踪变量计数以确保流程达到最大反馈迭代次数\\n- 该功能对反馈机制至关重要，可避免陷入无限循环\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"462e6c9a-162a-4f66-b846-14b29517454c\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2140,\n        160\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 640,\n        \"content\": \"## 编辑代理\\n\\n- 唯一职责是评估先前由Perplexity与OpenAI代理组合生成内容的质量\\n- 判定内容是否达到可发布标准\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"27149a0a-ab95-4f73-a20c-34167ac56d2a\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3580,\n        60\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 460,\n        \"height\": 480,\n        \"content\": \"## 发布至Contentful\\n\\n- 通过将字段转换为适用于Contentful POST创建内容API的相应字段，实现内容发布。\\n- 使用专为Contentful规范训练的AI格式化工具，将文章转换为富文本格式。\\n\\n如需获取该流程，请邮件联系：christian@varritech.com\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"errorWorkflow\": \"AKus9UvKRJfvTZBA\",\n    \"executionOrder\": \"v1\",\n    \"executionTimeout\": 1800\n  },\n  \"versionId\": \"69ce37b2-0909-4d9e-af89-992e22888bd8\",\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Editor Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Stop Here\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"JSON.parse3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"JSON.parse\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Writer Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Increment Count\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Limit\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Stop Here\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"should submit\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"JSON.parse1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"JSON.parse3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Execute Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"should submit\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"JSON.parse3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"JSON.parse\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Editor Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Limit\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Writer Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Perplexity Content\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"JSON.parse1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Increment Count\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 2\n          }\n        ]\n      ]\n    },\n    \"Initialize Count\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Writer Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Increment Count\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Writer Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Accept and Publish\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Editor Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Editor Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create Perplexity Content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format Perplexity Output & Add Citations\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Initialize Count\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format Perplexity Output & Add Citations\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    }\n  }\n}"
}