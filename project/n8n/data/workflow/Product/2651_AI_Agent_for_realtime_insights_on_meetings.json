{
  "title": "AI Agent for realtime insights on meetings",
  "url": "https://n8n.io/workflows/2651-ai-agent-for-realtime-insights-on-meetings/",
  "category": "Product",
  "category_url": "https://n8n.io/workflows/categories/product/?count=20",
  "author": "Mark Shcherbakov",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-23",
  "content": "",
  "workflow_json": "{\"nodes\":[{\"id\":\"d44489b8-8cb7-4776-8c16-a8bb01e52171\",\"name\":\"OpenAI1\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[300,-300],\"parameters\":{\"text\":\"={{ \\n     JSON.parse($('Insert Transcription Part').item.json.dialog)\\n        .filter(item => item.date_updated && new Date(item.date_updated) >= new Date($('Insert Transcription Part').item.json.date_updated))\\n        .sort((a, b) => a.order - b.order)\\n        .map(item => `${item.words}\\\\n${item.speaker}`)\\n        .join('\\\\n\\\\n')\\n}}\",\"memory\":\"threadId\",\"prompt\":\"define\",\"options\":{},\"resource\":\"assistant\",\"threadId\":\"={{ $json.thread_id }}\",\"assistantId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"asst_D5t6bNnNpenmfC7PmvywMqyR\",\"cachedResultName\":\"5minAI - Realtime Agent\"}},\"credentials\":{\"openAiApi\":{\"id\":\"SphXAX7rlwRLkiox\",\"name\":\"Test club key\"}},\"typeVersion\":1.6},{\"id\":\"3425f1c1-ad68-495e-bb9a-95ea92e7cf23\",\"name\":\"Insert Transcription Part\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[-120,-300],\"parameters\":{\"query\":\"UPDATE public.data\\nSET output = jsonb_set(\\n    output,\\n    '{dialog}', \\n    (\\n        COALESCE(\\n            (output->'dialog')::jsonb, \\n            '[]'::jsonb  -- Initialize as empty array if dialog does not exist\\n        ) || jsonb_build_object(\\n            'order', (COALESCE(jsonb_array_length(output->'dialog'), 0) + 1),  -- Calculate the next order\\n            'words', '{{ $('Webhook2').item.json.body.data.transcript.words.map(word => word.text.replace(/'/g, \\\"''\\\")).join(\\\" \\\") }}',\\n            'speaker', '{{ $('Webhook2').item.json.body.data.transcript.speaker }}',\\n            'language', '{{ $('Webhook2').item.json.body.data.transcript.language }}',\\n            'speaker_id', ('{{ $('Webhook2').item.json.body.data.transcript.speaker_id }}')::int,\\n  'date_updated', to_jsonb('{{ $now }}'::text)\\n        )\\n    )\\n)\\nWHERE input->>'recall_bot_id' = $1\\nReturning input->>'openai_thread_id' as thread_id;\",\"options\":{\"queryReplacement\":\"={{ $('Scenario 2 Start - Webhook').item.json.body.data.bot_id }}\"},\"operation\":\"executeQuery\"},\"credentials\":{\"postgres\":{\"id\":\"AO9cER6p8uX7V07T\",\"name\":\"Postgres 5minai\"}},\"typeVersion\":2.5},{\"id\":\"9bcc0605-fc35-4842-a3f4-30ef902f35c1\",\"name\":\"Create Note\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[180,-120],\"parameters\":{\"query\":\"UPDATE public.data\\nSET output = jsonb_set(\\n    output,\\n    '{notes}', \\n    (\\n        COALESCE(\\n            (output->'notes')::jsonb, \\n            '[]'::jsonb  -- Initialize as empty array if dialog does not exist\\n        ) || jsonb_build_object(\\n            'order', (COALESCE(jsonb_array_length(output->'notes'), 0) + 1),  -- Calculate the next order\\n            'text', '{{ $fromAI(\\\"note\\\",\\\"Text of note.\\\") }}'\\n        )\\n    )\\n)\\nWHERE input->>'recall_bot_id' = $1\",\"options\":{\"queryReplacement\":\"={{ $('Scenario 2 Start - Webhook').item.json.body.data.bot_id }}\"},\"operation\":\"executeQuery\",\"descriptionType\":\"manual\",\"toolDescription\":\"Create note record.\"},\"credentials\":{\"postgres\":{\"id\":\"AO9cER6p8uX7V07T\",\"name\":\"Postgres 5minai\"}},\"typeVersion\":2.5},{\"id\":\"0831c139-ca4b-4b4c-aa7f-7495c4ca0110\",\"name\":\"Create Recall bot\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-60,-980],\"parameters\":{\"url\":\"https://us-west-2.recall.ai/api/v1/bot\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"meeting_url\\\":\\\"{{ $json.meeting_url }}\\\",\\n  \\\"transcription_options\\\": {\\n    \\\"provider\\\": \\\"assembly_ai\\\"\\n  }\\n,\\n\\\"real_time_transcription\\\": {\\n    \\\"destination_url\\\": \\\"https://n8n.lowcoding.dev/webhook/d074ca1e-52f9-47af-8587-8c24d431f9cd\\\"\\n  },\\n\\\"automatic_leave\\\": {\\n  \\\"silence_detection\\\": {\\n    \\\"timeout\\\": 300, \\n    \\\"activate_after\\\": 600\\n  },\\n  \\\"bot_detection\\\": {\\n    \\\"using_participant_events\\\": {\\n      \\\"timeout\\\": 600, \\n      \\\"activate_after\\\": 1200\\n    }\\n  },\\n  \\\"waiting_room_timeout\\\": 600,\\n  \\\"noone_joined_timeout\\\": 600,\\n  \\\"everyone_left_timeout\\\": 2,\\n  \\\"in_call_not_recording_timeout\\\": 600,\\n  \\\"recording_permission_denied_timeout\\\": 600\\n}\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"lfHu7Kn7L7SH3LAF\",\"name\":\"Recall\"}},\"typeVersion\":4.2},{\"id\":\"e1122b5b-3af5-4836-802c-40c3a0eb3c93\",\"name\":\"Create OpenAI thread\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[140,-980],\"parameters\":{\"url\":\"https://api.openai.com/v1/threads\",\"method\":\"POST\",\"options\":{},\"sendHeaders\":true,\"authentication\":\"predefinedCredentialType\",\"headerParameters\":{\"parameters\":[{\"name\":\"OpenAI-Beta\",\"value\":\"assistants=v2\"}]},\"nodeCredentialType\":\"openAiApi\"},\"credentials\":{\"openAiApi\":{\"id\":\"SphXAX7rlwRLkiox\",\"name\":\"Test club key\"}},\"typeVersion\":4.2},{\"id\":\"784c123d-adbb-4265-9485-2c88dd3091c2\",\"name\":\"Create data record\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[320,-980],\"parameters\":{\"tableId\":\"data\",\"fieldsUi\":{\"fieldValues\":[{\"fieldId\":\"input\",\"fieldValue\":\"={{ {\\\"openai_thread_id\\\": $('Create OpenAI thread').item.json.id, \\\"recall_bot_id\\\": $('Create Recall bot').item.json.id, \\\"meeting_url\\\":$('Webhook').item.json.body.meeting_url } }}\"},{\"fieldId\":\"output\",\"fieldValue\":\"={{ {\\\"dialog\\\":[]} }}\"}]}},\"credentials\":{\"supabaseApi\":{\"id\":\"iVKNf5qv3ZFhq0ZV\",\"name\":\"Supabase 5minAI\"}},\"typeVersion\":1},{\"id\":\"f455c7de-1e64-4a28-9eef-11d19c982813\",\"name\":\"Sticky Note9\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-900,-380],\"parameters\":{\"color\":7,\"width\":330.5152611046425,\"height\":239.5888196628349,\"content\":\"### ... or watch set up video [10 min]\\n[![Youtube Thumbnail](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773273/Youtube%20Thumbs/Realtim%20AI%20Agent.png)](https://www.youtube.com/watch?v=rtaX6BMiTeo)\\n\"},\"typeVersion\":1},{\"id\":\"ea90c110-18ad-4f4b-90ab-fcb88b92e709\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1200,-1060],\"parameters\":{\"color\":7,\"width\":636,\"height\":657,\"content\":\"![5min Logo](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773200/Skool%20Assets/ejm3hqnvhgwpnu2fv92s.png)\\n## AI Agent for realtime insights on meetings\\n**Made by [Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/) from community [5minAI](https://www.skool.com/5minai)**\\n\\nTranscribing meetings manually can be tedious and prone to error. This workflow automates the transcription process in real-time, ensuring that key discussions and decisions are accurately captured and easily accessible for later review, thus enhancing productivity and clarity in communications.\\n\\nThe workflow employs an AI-powered assistant to join virtual meetings and capture discussions through real-time transcription. Key functionalities include:\\n- Automatic joining of meetings on platforms like Zoom, Google Meet, and others with the ability to provide real-time transcription.\\n- Integration with transcription APIs (e.g., AssemblyAI) to deliver seamless and accurate capture of dialogue.\\n- Structuring and storing transcriptions efficiently in a database for easy retrieval and analysis.\\n\\n1. **Real-Time Transcription**: The assistant captures audio during meetings and transcribes it in real-time, allowing participants to focus on discussions.\\n2. **Keyword Recognition**: Key phrases can trigger specific actions, such as noting important points or making prompts to the assistant.\\n3. **Structured Data Management**: The assistant maintains a database of transcriptions linked to meeting details for organized storage and quick access later.\"},\"typeVersion\":1},{\"id\":\"378c19bb-0e4a-43d3-9ba5-2a77ebfb5b83\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1200,-380],\"parameters\":{\"color\":7,\"width\":280,\"height\":626,\"content\":\"### Set up steps\\n\\n#### Preparation\\n\\n1. **Create Recall.ai API key**\\n2. **Setup Supabase account and table**\\n```\\ncreate table\\n  public.data (\\n    id uuid not null default gen_random_uuid (),\\n    date_created timestamp with time zone not null default (now() at time zone 'utc'::text),\\n    input jsonb null,\\n    output jsonb null,\\n    constraint data_pkey primary key (id),\\n  ) tablespace pg_default;\\n\\n```\\n3. **Create OpenAI API key**\\n\\n#### Development\\n\\n1. **Bot Creation**: \\n   - Use a node to create the bot that will join meetings. Provide the meeting URL and set transcription options within the API request.\\n\\n2. **Authentication**: \\n   - Configure authentication settings via a Bearer token for interacting with your transcription service.\\n\\n3. **Webhook Setup**: \\n   - Create a webhook to receive real-time transcription updates, ensuring timely data capture during meetings.\\n\\n4. **Join Meeting**: \\n   - Set the bot to join the specified meeting and actively listen to capture conversations.\\n\\n5. **Transcription Handling**: \\n   - Combine transcription fragments into cohesive sentences and manage dialog arrays for coherence.\\n\\n6. **Trigger Actions on Keywords**: \\n   - Set up keyword recognition that can initiate requests to the OpenAI API for additional interactions based on captured dialogue.\\n\\n7. **Output and Summary Generation**: \\n   - Produce insights and summary notes from the transcriptions that can be stored back into the database for future reference.\"},\"typeVersion\":1},{\"id\":\"9a4ff741-ccfd-42e9-883e-43297a73e2c3\",\"name\":\"Scenario 1 Start - Edit Fields\",\"type\":\"n8n-nodes-base.set\",\"position\":[-260,-980],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"4891fa6e-2dd5-4433-925c-5497ec82e8ab\",\"name\":\"meeting_url\",\"type\":\"string\",\"value\":\"https://meet.google.com/iix-vrav-kuc\"}]}},\"typeVersion\":3.4},{\"id\":\"a4368763-b96e-45e7-884d-aa0cbae2d276\",\"name\":\"Scenario 2 Start - Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-320,-300],\"webhookId\":\"7f176935-cb83-4147-ac14-48c8d747863a\",\"parameters\":{\"path\":\"d074ca1e-52f9-47af-8587-8c24d431f9cd\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":2},{\"id\":\"107b26af-d1d2-40c7-ad4f-7193d3ae9b70\",\"name\":\"If Jimmy word\",\"type\":\"n8n-nodes-base.if\",\"position\":[80,-300],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"ba6c2ae5-d0f4-4242-9cf8-97cb84335a93\",\"operator\":{\"type\":\"string\",\"operation\":\"contains\"},\"leftValue\":\"={{ $('Scenario 2 Start - Webhook').item.json.body.data.transcript.words.map(word => word.text.replace(/'/g, \\\"''\\\")).join(\\\" \\\") }}\",\"rightValue\":\"=Jimmy\"}]}},\"typeVersion\":2.2},{\"id\":\"49cf34f6-86cf-42cc-9da4-3efb37e6f565\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-380,-1040],\"parameters\":{\"width\":920,\"height\":400,\"content\":\"## Scenario 1\\n\\n\"},\"typeVersion\":1},{\"id\":\"34660f39-6ecc-4f2d-98e8-a2c529255e98\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-380,-360],\"parameters\":{\"width\":1020,\"height\":420,\"content\":\"## Scenario 2\\n\\n\"},\"typeVersion\":1},{\"id\":\"5027e72d-2b2c-40b4-921e-c4f40d85f251\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-200,-120],\"parameters\":{\"color\":3,\"width\":270,\"height\":80,\"content\":\"### Replace Supabase credentials\"},\"typeVersion\":1},{\"id\":\"dddea341-da40-4b6a-ae25-a8417e869cc9\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-100,-780],\"parameters\":{\"color\":3,\"width\":200,\"height\":80,\"content\":\"### Replace server location\\n\\n\"},\"typeVersion\":1},{\"id\":\"e8e76c2a-f949-400e-92b2-39da8034b471\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[340,-100],\"parameters\":{\"color\":4,\"width\":270,\"height\":80,\"content\":\"### Replace OpenAI credentials\"},\"typeVersion\":1},{\"id\":\"729a5f6e-5aea-4908-9a82-2a7d7bea1322\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[140,-780],\"parameters\":{\"color\":3,\"width\":290,\"height\":80,\"content\":\"### Replace credentials\"},\"typeVersion\":1},{\"id\":\"31178e90-62ce-4bf8-8381-dc8138088889\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-320,-780],\"parameters\":{\"color\":3,\"width\":200,\"height\":80,\"content\":\"### Replace meeting url\\n\\n\"},\"typeVersion\":1}],\"pinData\":{\"Create Recall bot\":[{\"id\":\"ab35fa56-e42b-47c6-b716-eac8d12af601\",\"join_at\":null,\"metadata\":{},\"recording\":null,\"video_url\":null,\"recordings\":[],\"meeting_url\":{\"platform\":\"google_meet\",\"meeting_id\":\"zst-ymag-zoa\"},\"status_changes\":[{\"code\":\"ready\",\"message\":null,\"sub_code\":null,\"created_at\":\"2024-11-01T11:29:32.364684Z\"}],\"meeting_metadata\":null,\"calendar_meetings\":[],\"meeting_participants\":[]}],\"Insert Transcription Part\":[{\"dialog\":\"[{\\\"order\\\": 1, \\\"words\\\": \\\"Wait.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 2, \\\"words\\\": \\\"A bit.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 3, \\\"words\\\": \\\"It's not even subtitles and it's not even a real. It's. A Google Meet.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 4, \\\"words\\\": \\\"Same story. I wasn't prepared. I don't know what to tell you. Maybe my AI body can help me.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 5, \\\"words\\\": \\\"What truth?\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 6, \\\"words\\\": \\\"You can get the same AI body in one day. Just drop AI in comment and I will. Send you a guide.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 7, \\\"words\\\": \\\"As it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 8, \\\"words\\\": \\\"As it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 9, \\\"words\\\": \\\"As it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 10, \\\"words\\\": \\\"Let's it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 11, \\\"words\\\": \\\"Let's it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 12, \\\"words\\\": \\\"Let's it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100, \\\"date_updated\\\": \\\"2024-11-22T08:41:24.164+01:00\\\"}, {\\\"order\\\": 13, \\\"words\\\": \\\"Let's it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100, \\\"date_updated\\\": \\\"2024-11-22T08:50:11.330+01:00\\\"}]\",\"thread_id\":\"thread_0g7p3iE7MYmDPiUuPiZP5vfR\",\"date_updated\":\"2024-11-22T08:37:55.751+01:00\"}],\"Scenario 2 Start - Webhook\":[{\"body\":{\"data\":{\"bot_id\":\"0032c6e2-78e9-46e7-a2ef-41d7b853ef48\",\"transcript\":{\"words\":[{\"text\":\"Let's\",\"end_time\":11.88,\"start_time\":11.68},{\"text\":\"it\",\"end_time\":12.12,\"start_time\":11.88},{\"text\":\"works\",\"end_time\":12.44,\"start_time\":12.12},{\"text\":\"well.\",\"end_time\":12.48,\"start_time\":12.44}],\"source\":\"smart_annotator\",\"speaker\":\"Mark S.\",\"is_final\":true,\"language\":null,\"speaker_id\":100,\"original_transcript_id\":32},\"recording_id\":\"ee1ad589-39fe-4ed5-b96f-cd14c63f3bc2\"},\"event\":\"bot.transcription\"},\"query\":{},\"params\":{},\"headers\":{\"host\":\"n8n.lowcoding.dev\",\"accept\":\"*/*\",\"content-type\":\"application/json\",\"content-length\":\"495\",\"accept-encoding\":\"gzip\",\"x-forwarded-for\":\"52.10.191.34\",\"x-forwarded-host\":\"n8n.lowcoding.dev\",\"x-forwarded-proto\":\"https\"},\"webhookUrl\":\"https://n8n.lowcoding.dev/webhook/d074ca1e-52f9-47af-8587-8c24d431f9cd\",\"executionMode\":\"production\"}]},\"connections\":{\"OpenAI1\":{\"main\":[[]]},\"Create Note\":{\"ai_tool\":[[{\"node\":\"OpenAI1\",\"type\":\"ai_tool\",\"index\":0}]]},\"If Jimmy word\":{\"main\":[[{\"node\":\"OpenAI1\",\"type\":\"main\",\"index\":0}]]},\"Create Recall bot\":{\"main\":[[{\"node\":\"Create OpenAI thread\",\"type\":\"main\",\"index\":0}],[]]},\"Create data record\":{\"main\":[[]]},\"Create OpenAI thread\":{\"main\":[[{\"node\":\"Create data record\",\"type\":\"main\",\"index\":0}]]},\"Insert Transcription Part\":{\"main\":[[{\"node\":\"If Jimmy word\",\"type\":\"main\",\"index\":0}]]},\"Scenario 2 Start - Webhook\":{\"main\":[[{\"node\":\"Insert Transcription Part\",\"type\":\"main\",\"index\":0}]]},\"Scenario 1 Start - Edit Fields\":{\"main\":[[{\"node\":\"Create Recall bot\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "### Video Guide\n\nI prepared a detailed guide explaining how to build an AI-powered meeting assistant that provides real-time transcription and insights during virtual meetings.\n\n[![Test](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773273/Youtube%20Thumbs/Realtim%20AI%20Agent.png)](https://www.youtube.com/watch?v=rtaX6BMiTeo)\n\n[Youtube Link](https://www.youtube.com/watch?v=rtaX6BMiTeo)\n\n### Who is this for?\n\nThis workflow is ideal for business professionals, project managers, and team leaders who require effective transcription of meetings for improved documentation and note-taking. It's particularly beneficial for those who conduct frequent virtual meetings across various platforms like Zoom and Google Meet.\n\n### What problem does this workflow solve?\n\nTranscribing meetings manually can be tedious and prone to error. This workflow automates the transcription process in real-time, ensuring that key discussions and decisions are accurately captured and easily accessible for later review, thus enhancing productivity and clarity in communications.\n\n### What this workflow does\n\nThe workflow employs an AI-powered assistant to join virtual meetings and capture discussions through real-time transcription. Key functionalities include:\n\n  * Automatic joining of meetings on platforms like Zoom, Google Meet, and others with the ability to provide real-time transcription.\n  * Integration with transcription APIs (e.g., AssemblyAI) to deliver seamless and accurate capture of dialogue.\n  * Structuring and storing transcriptions efficiently in a database for easy retrieval and analysis.\n\n\n  1. **Real-Time Transcription** : The assistant captures audio during meetings and transcribes it in real-time, allowing participants to focus on discussions.\n  2. **Keyword Recognition** : Key phrases can trigger specific actions, such as noting important points or making prompts to the assistant.\n  3. **Structured Data Management** : The assistant maintains a database of transcriptions linked to meeting details for organized storage and quick access later.\n\n\n\n### Setup\n\n#### Preparation\n\n  1. **Create[Recall.ai](http://Recall.ai) API key**\n  2. **Setup Supabase account and table**\n\n\n    \n    \n    create table\n      public.data (\n        id uuid not null default gen_random_uuid (),\n        date_created timestamp with time zone not null default (now() at time zone 'utc'::text),\n        input jsonb null,\n        output jsonb null,\n        constraint data_pkey primary key (id),\n      ) tablespace pg_default;\n    \n    \n\n  1. **Create OpenAI API key**\n\n\n\n#### Development\n\n  1. **Bot Creation** :\n\n     * Use a node to create the bot that will join meetings. Provide the meeting URL and set transcription options within the API request.\n  2. **Authentication** :\n\n     * Configure authentication settings via a Bearer token for interacting with your transcription service.\n  3. **Webhook Setup** :\n\n     * Create a webhook to receive real-time transcription updates, ensuring timely data capture during meetings.\n  4. **Join Meeting** :\n\n     * Set the bot to join the specified meeting and actively listen to capture conversations.\n  5. **Transcription Handling** :\n\n     * Combine transcription fragments into cohesive sentences and manage dialog arrays for coherence.\n  6. **Trigger Actions on Keywords** :\n\n     * Set up keyword recognition that can initiate requests to the OpenAI API for additional interactions based on captured dialogue.\n  7. **Output and Summary Generation** :\n\n     * Produce insights and summary notes from the transcriptions that can be stored back into the database for future reference.\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h3>Video Guide</h3>\n<p>I prepared a detailed guide explaining how to build an AI-powered meeting assistant that provides real-time transcription and insights during virtual meetings.</p>\n<p><a href=\"https://www.youtube.com/watch?v=rtaX6BMiTeo\" rel=\"ugc nofollow\" target=\"_blank\"><img src=\"https://res.cloudinary.com/de9jgixzm/image/upload/v1739773273/Youtube%20Thumbs/Realtim%20AI%20Agent.png\" alt=\"Test\"></a></p>\n<p><a href=\"https://www.youtube.com/watch?v=rtaX6BMiTeo\" rel=\"ugc nofollow\" target=\"_blank\">Youtube Link</a></p>\n<h3>Who is this for?</h3>\n<p>This workflow is ideal for business professionals, project managers, and team leaders who require effective transcription of meetings for improved documentation and note-taking. It's particularly beneficial for those who conduct frequent virtual meetings across various platforms like Zoom and Google Meet.</p>\n<h3>What problem does this workflow solve?</h3>\n<p>Transcribing meetings manually can be tedious and prone to error. This workflow automates the transcription process in real-time, ensuring that key discussions and decisions are accurately captured and easily accessible for later review, thus enhancing productivity and clarity in communications.</p>\n<h3>What this workflow does</h3>\n<p>The workflow employs an AI-powered assistant to join virtual meetings and capture discussions through real-time transcription. Key functionalities include:</p>\n<ul>\n<li>Automatic joining of meetings on platforms like Zoom, Google Meet, and others with the ability to provide real-time transcription.</li>\n<li>Integration with transcription APIs (e.g., AssemblyAI) to deliver seamless and accurate capture of dialogue.</li>\n<li>Structuring and storing transcriptions efficiently in a database for easy retrieval and analysis.</li>\n</ul>\n<ol>\n<li><strong>Real-Time Transcription</strong>: The assistant captures audio during meetings and transcribes it in real-time, allowing participants to focus on discussions.</li>\n<li><strong>Keyword Recognition</strong>: Key phrases can trigger specific actions, such as noting important points or making prompts to the assistant.</li>\n<li><strong>Structured Data Management</strong>: The assistant maintains a database of transcriptions linked to meeting details for organized storage and quick access later.</li>\n</ol>\n<h3>Setup</h3>\n<h4>Preparation</h4>\n<ol>\n<li><strong>Create <a href=\"http://Recall.ai\" rel=\"ugc nofollow\" target=\"_blank\">Recall.ai</a> API key</strong></li>\n<li><strong>Setup Supabase account and table</strong></li>\n</ol>\n<pre><code>create table\n  public.data (\n    id uuid not null default gen_random_uuid (),\n    date_created timestamp with time zone not null default (now() at time zone 'utc'::text),\n    input jsonb null,\n    output jsonb null,\n    constraint data_pkey primary key (id),\n  ) tablespace pg_default;\n\n</code></pre>\n<ol>\n<li><strong>Create OpenAI API key</strong></li>\n</ol>\n<h4>Development</h4>\n<ol>\n<li>\n<p><strong>Bot Creation</strong>:</p>\n<ul>\n<li>Use a node to create the bot that will join meetings. Provide the meeting URL and set transcription options within the API request.</li>\n</ul>\n</li>\n<li>\n<p><strong>Authentication</strong>:</p>\n<ul>\n<li>Configure authentication settings via a Bearer token for interacting with your transcription service.</li>\n</ul>\n</li>\n<li>\n<p><strong>Webhook Setup</strong>:</p>\n<ul>\n<li>Create a webhook to receive real-time transcription updates, ensuring timely data capture during meetings.</li>\n</ul>\n</li>\n<li>\n<p><strong>Join Meeting</strong>:</p>\n<ul>\n<li>Set the bot to join the specified meeting and actively listen to capture conversations.</li>\n</ul>\n</li>\n<li>\n<p><strong>Transcription Handling</strong>:</p>\n<ul>\n<li>Combine transcription fragments into cohesive sentences and manage dialog arrays for coherence.</li>\n</ul>\n</li>\n<li>\n<p><strong>Trigger Actions on Keywords</strong>:</p>\n<ul>\n<li>Set up keyword recognition that can initiate requests to the OpenAI API for additional interactions based on captured dialogue.</li>\n</ul>\n</li>\n<li>\n<p><strong>Output and Summary Generation</strong>:</p>\n<ul>\n<li>Produce insights and summary notes from the transcriptions that can be stored back into the database for future reference.</li>\n</ul>\n</li>\n</ol>\n</div><!--]-->",
  "readme_zh": "### 视频指南\n\n我制作了一份详细指南，讲解如何构建一个AI驱动的会议助手，在虚拟会议中提供实时转录和智能分析。\n\n[![演示视频](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773273/Youtube%20Thumbs/Realtim%20AI%20Agent.png)](https://www.youtube.com/watch?v=rtaX6BMiTeo)\n\n[YouTube视频链接](https://www.youtube.com/watch?v=rtaX6BMiTeo)\n\n### 适用人群\n\n本方案特别适合商务人士、项目经理和团队领导者——这些需要高效会议记录来完善文档和笔记的群体。对于频繁使用Zoom、Google Meet等平台开展线上会议的用户尤为实用。\n\n### 解决什么痛点？\n\n人工记录会议既耗时又容易出错。该方案通过实时自动化转录流程，确保关键讨论和决策被精准捕捉，便于后续查阅，从而提升沟通效率和清晰度。\n\n### 核心功能\n\n这套AI助手系统能主动加入虚拟会议并实时转录讨论内容，主要功能包括：\n\n* **自动入会**：支持Zoom、Google Meet等平台，提供实时文字转写\n* **API集成**：无缝对接AssemblyAI等转录接口，实现高准确率对话捕捉\n* **结构化存储**：将转录内容高效存入数据库，便于检索分析\n\n**三大核心模块**：\n1. **实时转录**：在会议进行时同步转录音频，让参与者专注讨论\n2. **关键词触发**：识别特定短语可触发动作（如标记重点/发起提示）\n3. **数据管理**：建立会议转录数据库，关联会议详情实现结构化存储\n\n### 配置指南\n\n#### 前期准备\n1. 获取[Recall.ai](http://Recall.ai)的API密钥\n2. 注册Supabase并创建数据表\n```sql\ncreate table\n  public.data (\n    id uuid not null default gen_random_uuid (),\n    date_created timestamp with time zone not null default (now() at time zone 'utc'::text),\n    input jsonb null,\n    output jsonb null,\n    constraint data_pkey primary key (id),\n  ) tablespace pg_default;\n```\n3. 申请OpenAI API密钥\n\n#### 开发流程\n1. **创建会议机器人**：\n   - 通过节点创建入会机器人，在API请求中配置会议URL和转录选项\n2. **认证设置**：\n   - 使用Bearer token配置转录服务的身份验证\n3. **配置Webhook**：\n   - 创建实时接收转录更新的回调接口\n4. **入会监听**：\n   - 设置机器人加入指定会议并启动语音捕捉\n5. **转录处理**：\n   - 将语音片段合成连贯语句，维护对话数组的完整性\n6. **关键词响应**：\n   - 设置关键词触发机制，可调用OpenAI API进行智能交互\n7. **输出总结**：\n   - 生成会议摘要和洞察报告，回存至数据库供后续调阅",
  "title_zh": "实时会议洞察AI代理",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"id\": \"d44489b8-8cb7-4776-8c16-a8bb01e52171\",\n      \"name\": \"OpenAI1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        300,\n        -300\n      ],\n      \"parameters\": {\n        \"text\": \"={{ \\n     JSON.parse($('Insert Transcription Part').item.json.dialog)\\n        .filter(item => item.date_updated && new Date(item.date_updated) >= new Date($('Insert Transcription Part').item.json.date_updated))\\n        .sort((a, b) => a.order - b.order)\\n        .map(item => `${item.words}\\\\n${item.speaker}`)\\n        .join('\\\\n\\\\n')\\n}}\",\n        \"memory\": \"threadId\",\n        \"prompt\": \"define\",\n        \"options\": {},\n        \"resource\": \"assistant\",\n        \"threadId\": \"={{ $json.thread_id }}\",\n        \"assistantId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"asst_D5t6bNnNpenmfC7PmvywMqyR\",\n          \"cachedResultName\": \"5minAI - Realtime Agent\"\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"SphXAX7rlwRLkiox\",\n          \"name\": \"Test club key\"\n        }\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"3425f1c1-ad68-495e-bb9a-95ea92e7cf23\",\n      \"name\": \"Insert Transcription Part\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"position\": [\n        -120,\n        -300\n      ],\n      \"parameters\": {\n        \"query\": \"UPDATE public.data\\nSET output = jsonb_set(\\n    output,\\n    '{dialog}', \\n    (\\n        COALESCE(\\n            (output->'dialog')::jsonb, \\n            '[]'::jsonb  -- Initialize as empty array if dialog does not exist\\n        ) || jsonb_build_object(\\n            'order', (COALESCE(jsonb_array_length(output->'dialog'), 0) + 1),  -- Calculate the next order\\n            'words', '{{ $('Webhook2').item.json.body.data.transcript.words.map(word => word.text.replace(/'/g, \\\"''\\\")).join(\\\" \\\") }}',\\n            'speaker', '{{ $('Webhook2').item.json.body.data.transcript.speaker }}',\\n            'language', '{{ $('Webhook2').item.json.body.data.transcript.language }}',\\n            'speaker_id', ('{{ $('Webhook2').item.json.body.data.transcript.speaker_id }}')::int,\\n  'date_updated', to_jsonb('{{ $now }}'::text)\\n        )\\n    )\\n)\\nWHERE input->>'recall_bot_id' = $1\\nReturning input->>'openai_thread_id' as thread_id;\",\n        \"options\": {\n          \"queryReplacement\": \"={{ $('Scenario 2 Start - Webhook').item.json.body.data.bot_id }}\"\n        },\n        \"operation\": \"executeQuery\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"AO9cER6p8uX7V07T\",\n          \"name\": \"Postgres 5minai\"\n        }\n      },\n      \"typeVersion\": 2.5\n    },\n    {\n      \"id\": \"9bcc0605-fc35-4842-a3f4-30ef902f35c1\",\n      \"name\": \"Create Note\",\n      \"type\": \"n8n-nodes-base.postgresTool\",\n      \"position\": [\n        180,\n        -120\n      ],\n      \"parameters\": {\n        \"query\": \"UPDATE public.data\\nSET output = jsonb_set(\\n    output,\\n    '{notes}', \\n    (\\n        COALESCE(\\n            (output->'notes')::jsonb, \\n            '[]'::jsonb  -- Initialize as empty array if dialog does not exist\\n        ) || jsonb_build_object(\\n            'order', (COALESCE(jsonb_array_length(output->'notes'), 0) + 1),  -- Calculate the next order\\n            'text', '{{ $fromAI(\\\"note\\\",\\\"Text of note.\\\") }}'\\n        )\\n    )\\n)\\nWHERE input->>'recall_bot_id' = $1\",\n        \"options\": {\n          \"queryReplacement\": \"={{ $('Scenario 2 Start - Webhook').item.json.body.data.bot_id }}\"\n        },\n        \"operation\": \"executeQuery\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Create note record.\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"AO9cER6p8uX7V07T\",\n          \"name\": \"Postgres 5minai\"\n        }\n      },\n      \"typeVersion\": 2.5\n    },\n    {\n      \"id\": \"0831c139-ca4b-4b4c-aa7f-7495c4ca0110\",\n      \"name\": \"Create Recall bot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -60,\n        -980\n      ],\n      \"parameters\": {\n        \"url\": \"https://us-west-2.recall.ai/api/v1/bot\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"meeting_url\\\":\\\"{{ $json.meeting_url }}\\\",\\n  \\\"transcription_options\\\": {\\n    \\\"provider\\\": \\\"assembly_ai\\\"\\n  }\\n,\\n\\\"real_time_transcription\\\": {\\n    \\\"destination_url\\\": \\\"https://n8n.lowcoding.dev/webhook/d074ca1e-52f9-47af-8587-8c24d431f9cd\\\"\\n  },\\n\\\"automatic_leave\\\": {\\n  \\\"silence_detection\\\": {\\n    \\\"timeout\\\": 300, \\n    \\\"activate_after\\\": 600\\n  },\\n  \\\"bot_detection\\\": {\\n    \\\"using_participant_events\\\": {\\n      \\\"timeout\\\": 600, \\n      \\\"activate_after\\\": 1200\\n    }\\n  },\\n  \\\"waiting_room_timeout\\\": 600,\\n  \\\"noone_joined_timeout\\\": 600,\\n  \\\"everyone_left_timeout\\\": 2,\\n  \\\"in_call_not_recording_timeout\\\": 600,\\n  \\\"recording_permission_denied_timeout\\\": 600\\n}\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"lfHu7Kn7L7SH3LAF\",\n          \"name\": \"Recall\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e1122b5b-3af5-4836-802c-40c3a0eb3c93\",\n      \"name\": \"Create OpenAI thread\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        140,\n        -980\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.openai.com/v1/threads\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"OpenAI-Beta\",\n              \"value\": \"assistants=v2\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"SphXAX7rlwRLkiox\",\n          \"name\": \"Test club key\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"784c123d-adbb-4265-9485-2c88dd3091c2\",\n      \"name\": \"Create data record\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        320,\n        -980\n      ],\n      \"parameters\": {\n        \"tableId\": \"data\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"input\",\n              \"fieldValue\": \"={{ {\\\"openai_thread_id\\\": $('Create OpenAI thread').item.json.id, \\\"recall_bot_id\\\": $('Create Recall bot').item.json.id, \\\"meeting_url\\\":$('Webhook').item.json.body.meeting_url } }}\"\n            },\n            {\n              \"fieldId\": \"output\",\n              \"fieldValue\": \"={{ {\\\"dialog\\\":[]} }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"iVKNf5qv3ZFhq0ZV\",\n          \"name\": \"Supabase 5minAI\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f455c7de-1e64-4a28-9eef-11d19c982813\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -900,\n        -380\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 330.5152611046425,\n        \"height\": 239.5888196628349,\n        \"content\": \"### ...或观看安装视频 [10分钟]\\n[![YouTube缩略图](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773273/Youtube%20Thumbs/Realtim%20AI%20Agent.png)](https://www.youtube.com/watch?v=rtaX6BMiTeo)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ea90c110-18ad-4f4b-90ab-fcb88b92e709\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1200,\n        -1060\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 636,\n        \"height\": 657,\n        \"content\": \"![5min Logo](https://res.cloudinary.com/de9jgixzm/image/upload/v1739773200/Skool%20Assets/ejm3hqnvhgwpnu2fv92s.png)\\n## 会议实时洞察AI助手\\n**由[5minAI社区](https://www.skool.com/5minai)的[Mark Shcherbakov](https://www.linkedin.com/in/marklowcoding/)开发**\\n\\n人工转录会议既繁琐又容易出错。本工作流实现了实时自动转录，确保关键讨论和决策被准确记录并便于后续查阅，从而提升沟通效率与清晰度。\\n\\n该工作流采用AI助手参与虚拟会议，通过实时转录捕捉讨论内容。核心功能包括：\\n- 自动加入Zoom、Google Meet等平台会议并提供实时转录\\n- 集成AssemblyAI等转录API实现流畅精准的对话捕捉\\n- 将转录内容结构化存储至数据库，便于检索分析\\n\\n1. **实时转录**：助手在会议期间捕捉音频并实时转写，让参会者专注讨论\\n2. **关键词识别**：特定短语可触发操作，如标记重点或向助手发送提示\\n3. **结构化数据管理**：助手建立与会议详情关联的转录数据库，实现有序存储与快速调用\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"378c19bb-0e4a-43d3-9ba5-2a77ebfb5b83\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1200,\n        -380\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 280,\n        \"height\": 626,\n        \"content\": \"### 设置步骤\\n\\n#### 准备工作\\n\\n1. **创建Recall.ai API密钥**\\n2. **配置Supabase账户及数据表**\\n```\\n创建表\\n  公开数据表 (\\n    id 字段 唯一标识符 非空 默认生成随机UUID(),\\n    创建时间 时间戳 带时区 非空 默认 (当前时间 UTC 时区),\\n    输入数据 jsonb 类型 可为空,\\n    输出数据 jsonb 类型 可为空,\\n    主键约束 数据主键 (id字段),\\n  ) 表空间设置为 pg_default;\\n\\n```\\n3. **创建OpenAI API密钥**\\n\\n#### 开发流程\\n\\n1. **机器人创建**： \\n   - 通过节点创建参会机器人。提供会议URL并在API请求中设置转录选项。\\n\\n2. **认证配置**： \\n   - 使用Bearer令牌配置转录服务的身份验证设置。\\n\\n3. **网络钩子设置**： \\n   - 创建实时接收转录更新的网络钩子，确保会议期间数据及时捕获。\\n\\n4. **加入会议**： \\n   - 设置机器人加入指定会议并主动监听对话内容。\\n\\n5. **转录处理**： \\n   - 将转录片段合并为连贯语句，管理对话数组以确保内容连贯性。\\n\\n6. **关键词触发操作**： \\n   - 建立关键词识别机制，可基于捕获的对话内容向OpenAI API发起附加交互请求。\\n\\n7. **输出与摘要生成**： \\n   - 从转录内容生成洞察分析和总结笔记，回存至数据库供后续查阅。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9a4ff741-ccfd-42e9-883e-43297a73e2c3\",\n      \"name\": \"Scenario 1 Start - Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -260,\n        -980\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"4891fa6e-2dd5-4433-925c-5497ec82e8ab\",\n              \"name\": \"meeting_url\",\n              \"type\": \"string\",\n              \"value\": \"https://meet.google.com/iix-vrav-kuc\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a4368763-b96e-45e7-884d-aa0cbae2d276\",\n      \"name\": \"Scenario 2 Start - Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -320,\n        -300\n      ],\n      \"webhookId\": \"7f176935-cb83-4147-ac14-48c8d747863a\",\n      \"parameters\": {\n        \"path\": \"d074ca1e-52f9-47af-8587-8c24d431f9cd\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"107b26af-d1d2-40c7-ad4f-7193d3ae9b70\",\n      \"name\": \"If Jimmy word\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        80,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"ba6c2ae5-d0f4-4242-9cf8-97cb84335a93\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $('Scenario 2 Start - Webhook').item.json.body.data.transcript.words.map(word => word.text.replace(/'/g, \\\"''\\\")).join(\\\" \\\") }}\",\n              \"rightValue\": \"=Jimmy\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"49cf34f6-86cf-42cc-9da4-3efb37e6f565\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -380,\n        -1040\n      ],\n      \"parameters\": {\n        \"width\": 920,\n        \"height\": 400,\n        \"content\": \"## 情景一\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"34660f39-6ecc-4f2d-98e8-a2c529255e98\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -380,\n        -360\n      ],\n      \"parameters\": {\n        \"width\": 1020,\n        \"height\": 420,\n        \"content\": \"## 场景二\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5027e72d-2b2c-40b4-921e-c4f40d85f251\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -200,\n        -120\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 270,\n        \"height\": 80,\n        \"content\": \"### 替换Supabase凭据\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dddea341-da40-4b6a-ae25-a8417e869cc9\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -100,\n        -780\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 200,\n        \"height\": 80,\n        \"content\": \"### 更换服务器位置\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e8e76c2a-f949-400e-92b2-39da8034b471\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        340,\n        -100\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 270,\n        \"height\": 80,\n        \"content\": \"### 替换OpenAI凭据\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"729a5f6e-5aea-4908-9a82-2a7d7bea1322\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        140,\n        -780\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 290,\n        \"height\": 80,\n        \"content\": \"### 替换凭据\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"31178e90-62ce-4bf8-8381-dc8138088889\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -320,\n        -780\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 200,\n        \"height\": 80,\n        \"content\": \"### 替换会议链接\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {\n    \"Create Recall bot\": [\n      {\n        \"id\": \"ab35fa56-e42b-47c6-b716-eac8d12af601\",\n        \"join_at\": null,\n        \"metadata\": {},\n        \"recording\": null,\n        \"video_url\": null,\n        \"recordings\": [],\n        \"meeting_url\": {\n          \"platform\": \"google_meet\",\n          \"meeting_id\": \"zst-ymag-zoa\"\n        },\n        \"status_changes\": [\n          {\n            \"code\": \"ready\",\n            \"message\": null,\n            \"sub_code\": null,\n            \"created_at\": \"2024-11-01T11:29:32.364684Z\"\n          }\n        ],\n        \"meeting_metadata\": null,\n        \"calendar_meetings\": [],\n        \"meeting_participants\": []\n      }\n    ],\n    \"Insert Transcription Part\": [\n      {\n        \"dialog\": \"[{\\\"order\\\": 1, \\\"words\\\": \\\"Wait.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 2, \\\"words\\\": \\\"A bit.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 3, \\\"words\\\": \\\"It's not even subtitles and it's not even a real. It's. A Google Meet.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 4, \\\"words\\\": \\\"Same story. I wasn't prepared. I don't know what to tell you. Maybe my AI body can help me.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 5, \\\"words\\\": \\\"What truth?\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 6, \\\"words\\\": \\\"You can get the same AI body in one day. Just drop AI in comment and I will. Send you a guide.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": null, \\\"speaker_id\\\": 100}, {\\\"order\\\": 7, \\\"words\\\": \\\"As it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 8, \\\"words\\\": \\\"As it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 9, \\\"words\\\": \\\"As it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 10, \\\"words\\\": \\\"Let's it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 11, \\\"words\\\": \\\"Let's it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100}, {\\\"order\\\": 12, \\\"words\\\": \\\"Let's it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100, \\\"date_updated\\\": \\\"2024-11-22T08:41:24.164+01:00\\\"}, {\\\"order\\\": 13, \\\"words\\\": \\\"Let's it works well.\\\", \\\"speaker\\\": \\\"Mark S.\\\", \\\"language\\\": \\\"null\\\", \\\"speaker_id\\\": 100, \\\"date_updated\\\": \\\"2024-11-22T08:50:11.330+01:00\\\"}]\",\n        \"thread_id\": \"thread_0g7p3iE7MYmDPiUuPiZP5vfR\",\n        \"date_updated\": \"2024-11-22T08:37:55.751+01:00\"\n      }\n    ],\n    \"Scenario 2 Start - Webhook\": [\n      {\n        \"body\": {\n          \"data\": {\n            \"bot_id\": \"0032c6e2-78e9-46e7-a2ef-41d7b853ef48\",\n            \"transcript\": {\n              \"words\": [\n                {\n                  \"text\": \"Let's\",\n                  \"end_time\": 11.88,\n                  \"start_time\": 11.68\n                },\n                {\n                  \"text\": \"it\",\n                  \"end_time\": 12.12,\n                  \"start_time\": 11.88\n                },\n                {\n                  \"text\": \"works\",\n                  \"end_time\": 12.44,\n                  \"start_time\": 12.12\n                },\n                {\n                  \"text\": \"well.\",\n                  \"end_time\": 12.48,\n                  \"start_time\": 12.44\n                }\n              ],\n              \"source\": \"smart_annotator\",\n              \"speaker\": \"Mark S.\",\n              \"is_final\": true,\n              \"language\": null,\n              \"speaker_id\": 100,\n              \"original_transcript_id\": 32\n            },\n            \"recording_id\": \"ee1ad589-39fe-4ed5-b96f-cd14c63f3bc2\"\n          },\n          \"event\": \"bot.transcription\"\n        },\n        \"query\": {},\n        \"params\": {},\n        \"headers\": {\n          \"host\": \"n8n.lowcoding.dev\",\n          \"accept\": \"*/*\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"495\",\n          \"accept-encoding\": \"gzip\",\n          \"x-forwarded-for\": \"52.10.191.34\",\n          \"x-forwarded-host\": \"n8n.lowcoding.dev\",\n          \"x-forwarded-proto\": \"https\"\n        },\n        \"webhookUrl\": \"https://n8n.lowcoding.dev/webhook/d074ca1e-52f9-47af-8587-8c24d431f9cd\",\n        \"executionMode\": \"production\"\n      }\n    ]\n  },\n  \"connections\": {\n    \"OpenAI1\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Create Note\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"OpenAI1\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If Jimmy word\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create Recall bot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create OpenAI thread\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        []\n      ]\n    },\n    \"Create data record\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Create OpenAI thread\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create data record\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Insert Transcription Part\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If Jimmy word\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Scenario 2 Start - Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Insert Transcription Part\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Scenario 1 Start - Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Recall bot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}