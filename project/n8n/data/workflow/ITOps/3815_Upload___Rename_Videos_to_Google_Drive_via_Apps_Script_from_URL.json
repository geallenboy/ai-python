{
  "title": "Upload & Rename Videos to Google Drive via Apps Script from URL",
  "url": "https://n8n.io/workflows/3815-upload-and-rename-videos-to-google-drive-via-apps-script-from-url/",
  "category": "ITOps",
  "category_url": "https://n8n.io/workflows/categories/it-ops/?sort=createdAt:desc",
  "author": "Joseph",
  "publish_date": "Last update 7 hours ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"wGv0NPBA0QLp4rQ6\",\"meta\":{\"instanceId\":\"b3c467df4053d13fe31cc98f3c66fa1d16300ba750506bfd019a0913cec71ea3\"},\"name\":\"Upload video to drive via google script\",\"tags\":[],\"nodes\":[{\"id\":\"b89e494d-f85d-4ad5-b0ba-5699f59a58d5\",\"name\":\"When clicking ‚ÄòTest workflow‚Äô\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-300,-40],\"parameters\":{},\"typeVersion\":1},{\"id\":\"061597f1-d57d-4733-bc9f-3a3070bd5e95\",\"name\":\"Rename Uploaded Video\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[180,-40],\"parameters\":{\"fileId\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"={{ $json.driveUrl }}\"},\"options\":{},\"operation\":\"update\",\"newUpdatedFileName\":\"Music Video 1\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"l8Cc2MEVE7foBfbK\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"7e8ff194-fdb7-43e4-afde-bba466ac9dd3\",\"name\":\"Send URL to GDrive Script and Upload\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-60,-40],\"parameters\":{\"url\":\"\\\"your_google_script_web_app_url\\\"\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"{\\n  \\\"videoUrl\\\": \\\"https://example.com/path/to/your.mp4\\\",\\n  \\\"secret\\\": \\\"your-strong-secret-here\\\"\\n}\",\"sendBody\":true,\"specifyBody\":\"json\"},\"typeVersion\":4.2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"b554bac3-27d2-498a-9e5a-b98cde9ea593\",\"connections\":{\"When clicking ‚ÄòTest workflow‚Äô\":{\"main\":[[{\"node\":\"Send URL to GDrive Script and Upload\",\"type\":\"main\",\"index\":0}]]},\"Send URL to GDrive Script and Upload\":{\"main\":[[{\"node\":\"Rename Uploaded Video\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## üìÑ Google Script Workflow: Upload File from URL to Google Drive (via n8n)\n\n### üîß Purpose:\n\nThis lightweight Google Apps Script acts as a server endpoint that receives a file URL (from `n8n`), downloads the file, uploads it to your specified Google Drive folder, and responds with the file‚Äôs metadata (like Drive file ID and URL). This is useful for large video/audio files that `n8n` cannot handle directly via HTTP Download nodes.\n\n* * *\n\n## üöÄ Setup Steps:\n\n### 1\\. **Create a New Script Project**\n\n  * Go to <https://script.google.com>\n  * Click **‚ÄúNew Project‚Äù**\n  * Rename the project to something like: `DriveUploader`\n\n\n\n* * *\n\n### 2\\. **Paste the Script Code**\n\nReplace the default `Code.gs` content with the following (your custom script):\n    \n    \n    function doPost(e) {\n      const SECRET_KEY = 'your-strong-secret-here'; // Set your secret key here\n    \n      try {\n        const data = JSON.parse(e.postData.contents);\n    \n        // üîí Check for correct secret key\n        if (!data.secret || data.secret !== SECRET_KEY) {\n          return ContentService.createTextOutput(\"Unauthorized\")\n            .setMimeType(ContentService.MimeType.TEXT);\n        }\n    \n        const videoUrl = data.videoUrl;\n        const folderId = 'YOUR_FOLDER_ID_HERE'; // Replace with your target folder ID\n        const folder = DriveApp.getFolderById(folderId);\n    \n        const response = UrlFetchApp.fetch(videoUrl);\n        const blob = response.getBlob();\n        const file = folder.createFile(blob);\n        file.setName('uploaded_video.mp4'); // You can customize the name\n    \n        return ContentService.createTextOutput(file.getUrl())\n          .setMimeType(ContentService.MimeType.TEXT);\n      } catch (err) {\n        return ContentService.createTextOutput(\"Error: \" + err.message)\n          .setMimeType(ContentService.MimeType.TEXT);\n      }\n    }\n    \n    \n    ---\n    ### 3. Generate & Set Up Secret Key\n    To allow authorized post requests to your script only, we need to generate a secret key from aany reliable key generator. \n    - You can head over to [acte](https://acte.ltd/utils/randomkeygen), click generate and copy the \"Encryption key 256\". \n    - Paste it in the 'your-strong-secret-here' placeholder in your script then click save\n     ```js\n      const SECRET_KEY = 'your-strong-secret-here'; // Set your secret key here;\n    \n\n### 4\\. **Replace Folder ID in Code**\n\n  * Open the target Drive folder in your browser\n  * The folder ID is the part of the URL after `/folders/`  \nExample:\n        \n        https://drive.google.com/drive/u/0/folders/1Xabc12345678defGHIJklmn\n        \n\n  * Paste that ID in the script:\n        \n        var folderId = \"1Xabc12345678defGHIJklmn\";\n        \n\n\n\n\n* * *\n\n### 5\\. **Set Up Deployment as Web App**\n\n  * Click **‚ÄúDeploy‚Äù > ‚ÄúManage Deployments‚Äù > ‚ÄúNew Deployment‚Äù**\n  * Under **Select type** , choose **Web app**\n  * Description: `Upload from URL to Drive`\n  * Execute as: **Me**\n  * Who has access: **Anyone**\n  * Click **Deploy**\n  * Authorize the script when prompted\n  * Copy the **Web App URL**\n\n\n\n* * *\n\n## üì§ How to Use in n8n\n\n### 1\\. **HTTP Request Node**\n\n  * Method: `POST`\n  * URL: (your web app URL)\n  * Secret Key: (Secret Key set in script)\n  * Body Content Type: `JSON`\n  * Paste code:\n\n\n    \n    \n    {\n      \"videoUrl\": \"https://example.com/path/to/your.mp4\",\n      \"secret\": \"your-strong-secret-here\"\n    }\n    \n\n  * `videoUrl`: The file download URL\n  * `secret`: The generated and set up secret key\n\n\n\n### 2\\. **Rename Node**\n\n  * A simple drive update node to rename the file using the file drive url returned from the script.\n\n\n\n* * *\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>üìÑ Google Script Workflow: Upload File from URL to Google Drive (via n8n)</h2>\n<h3>üîß Purpose:</h3>\n<p>This lightweight Google Apps Script acts as a server endpoint that receives a file URL (from <code>n8n</code>), downloads the file, uploads it to your specified Google Drive folder, and responds with the file‚Äôs metadata (like Drive file ID and URL). This is useful for large video/audio files that <code>n8n</code> cannot handle directly via HTTP Download nodes.</p>\n<hr>\n<h2>üöÄ Setup Steps:</h2>\n<h3>1. <strong>Create a New Script Project</strong></h3>\n<ul>\n<li>Go to <a href=\"https://script.google.com\" rel=\"ugc nofollow\" target=\"_blank\">https://script.google.com</a></li>\n<li>Click <strong>‚ÄúNew Project‚Äù</strong></li>\n<li>Rename the project to something like: <code>DriveUploader</code></li>\n</ul>\n<hr>\n<h3>2. <strong>Paste the Script Code</strong></h3>\n<p>Replace the default <code>Code.gs</code> content with the following (your custom script):</p>\n<pre><code>function doPost(e) {\n  const SECRET_KEY = 'your-strong-secret-here'; // Set your secret key here\n\n  try {\n    const data = JSON.parse(e.postData.contents);\n\n    // üîí Check for correct secret key\n    if (!data.secret || data.secret !== SECRET_KEY) {\n      return ContentService.createTextOutput(\"Unauthorized\")\n        .setMimeType(ContentService.MimeType.TEXT);\n    }\n\n    const videoUrl = data.videoUrl;\n    const folderId = 'YOUR_FOLDER_ID_HERE'; // Replace with your target folder ID\n    const folder = DriveApp.getFolderById(folderId);\n\n    const response = UrlFetchApp.fetch(videoUrl);\n    const blob = response.getBlob();\n    const file = folder.createFile(blob);\n    file.setName('uploaded_video.mp4'); // You can customize the name\n\n    return ContentService.createTextOutput(file.getUrl())\n      .setMimeType(ContentService.MimeType.TEXT);\n  } catch (err) {\n    return ContentService.createTextOutput(\"Error: \" + err.message)\n      .setMimeType(ContentService.MimeType.TEXT);\n  }\n}\n\n\n---\n### 3. Generate &amp; Set Up Secret Key\nTo allow authorized post requests to your script only, we need to generate a secret key from aany reliable key generator. \n- You can head over to [acte](https://acte.ltd/utils/randomkeygen), click generate and copy the \"Encryption key 256\". \n- Paste it in the 'your-strong-secret-here' placeholder in your script then click save\n ```js\n  const SECRET_KEY = 'your-strong-secret-here'; // Set your secret key here;\n</code></pre>\n<h3>4. <strong>Replace Folder ID in Code</strong></h3>\n<ul>\n<li>Open the target Drive folder in your browser</li>\n<li>The folder ID is the part of the URL after <code>/folders/</code><br>\nExample:<pre><code>https://drive.google.com/drive/u/0/folders/1Xabc12345678defGHIJklmn\n</code></pre>\n</li>\n<li>Paste that ID in the script:<pre><code>var folderId = \"1Xabc12345678defGHIJklmn\";\n</code></pre>\n</li>\n</ul>\n<hr>\n<h3>5. <strong>Set Up Deployment as Web App</strong></h3>\n<ul>\n<li>Click <strong>‚ÄúDeploy‚Äù &gt; ‚ÄúManage Deployments‚Äù &gt; ‚ÄúNew Deployment‚Äù</strong></li>\n<li>Under <strong>Select type</strong>, choose <strong>Web app</strong></li>\n<li>Description: <code>Upload from URL to Drive</code></li>\n<li>Execute as: <strong>Me</strong></li>\n<li>Who has access: <strong>Anyone</strong></li>\n<li>Click <strong>Deploy</strong></li>\n<li>Authorize the script when prompted</li>\n<li>Copy the <strong>Web App URL</strong></li>\n</ul>\n<hr>\n<h2>üì§ How to Use in n8n</h2>\n<h3>1. <strong>HTTP Request Node</strong></h3>\n<ul>\n<li>Method: <code>POST</code></li>\n<li>URL: (your web app URL)</li>\n<li>Secret Key: (Secret Key set in script)</li>\n<li>Body Content Type: <code>JSON</code></li>\n<li>Paste code:</li>\n</ul>\n<pre><code>{\n  \"videoUrl\": \"https://example.com/path/to/your.mp4\",\n  \"secret\": \"your-strong-secret-here\"\n}\n</code></pre>\n<ul>\n<li><code>videoUrl</code>: The file download URL</li>\n<li><code>secret</code>: The generated and set up secret key</li>\n</ul>\n<h3>2. <strong>Rename Node</strong></h3>\n<ul>\n<li>A simple drive update node to rename the file using the file drive url returned from the script.</li>\n</ul>\n<hr>\n</div><!--]-->"
}