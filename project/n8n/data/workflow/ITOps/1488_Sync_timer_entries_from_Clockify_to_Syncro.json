{
  "title": "Sync timer entries from Clockify to Syncro",
  "url": "https://n8n.io/workflows/1488-sync-timer-entries-from-clockify-to-syncro/",
  "category": "ITOps",
  "category_url": "https://n8n.io/workflows/categories/it-ops/?sort=createdAt:desc",
  "author": "Jonathan",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-06",
  "content": "",
  "workflow_json": "{\"id\":\"3\",\"name\":\"Clockify to Syncro\",\"nodes\":[{\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[280,350],\"webhookId\":\"82b654d7-aeb2-4cc1-97a8-0ebd1a729202\",\"parameters\":{\"path\":\"82b654d7-aeb2-4cc1-97a8-0ebd1a729202\",\"options\":{},\"httpMethod\":\"POST\",\"responseData\":\"allEntries\",\"responseMode\":\"lastNode\"},\"typeVersion\":1},{\"name\":\"Google Sheets\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1830,350],\"parameters\":{\"range\":\"A:B\",\"options\":{\"valueInputMode\":\"USER_ENTERED\"},\"sheetId\":\"xxx\",\"operation\":\"append\"},\"credentials\":{\"googleApi\":\"Google\"},\"typeVersion\":1},{\"name\":\"ForGoogle\",\"type\":\"n8n-nodes-base.set\",\"position\":[1650,350],\"parameters\":{\"values\":{\"string\":[{\"name\":\"Syncro\",\"value\":\"={{$json[\\\"id\\\"]}}\"},{\"name\":\"Clockify\",\"value\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"id\\\"]}}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"name\":\"ForSyncro\",\"type\":\"n8n-nodes-base.set\",\"position\":[730,350],\"parameters\":{\"values\":{\"string\":[{\"name\":\"id\",\"value\":\"={{ $json[\\\"body\\\"][\\\"project\\\"][\\\"name\\\"].match(/\\\\[(\\\\d+)]/)[1] }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"name\":\"FindMatch\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1130,350],\"parameters\":{\"range\":\"A:B\",\"options\":{\"valueRenderMode\":\"UNFORMATTED_VALUE\",\"returnAllMatches\":true},\"sheetId\":\"xxx\",\"operation\":\"lookup\",\"lookupValue\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"id\\\"]}}\",\"lookupColumn\":\"=Clockify\"},\"credentials\":{\"googleApi\":\"Google\"},\"typeVersion\":1,\"alwaysOutputData\":true},{\"name\":\"IF\",\"type\":\"n8n-nodes-base.if\",\"position\":[1300,350],\"parameters\":{\"conditions\":{\"string\":[],\"boolean\":[{\"value1\":\"={{!!Object.keys($node[\\\"FindMatch\\\"].data).length}}\",\"value2\":true}]}},\"typeVersion\":1,\"alwaysOutputData\":false},{\"name\":\"NewSyncroTimer\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1490,350],\"parameters\":{\"url\":\"={{$node[\\\"EnvVariables\\\"].json[\\\"syncro_baseurl\\\"]}}/api/v1/tickets/{{$node[\\\"ForSyncro\\\"].json[\\\"id\\\"]}}/timer_entry\",\"options\":{},\"requestMethod\":\"POST\",\"authentication\":\"headerAuth\",\"bodyParametersUi\":{\"parameter\":[{\"name\":\"start_at\",\"value\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"timeInterval\\\"][\\\"start\\\"]}}\"},{\"name\":\"end_at\",\"value\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"timeInterval\\\"][\\\"end\\\"]}}\"},{\"name\":\"notes\",\"value\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"description\\\"]}}\"},{\"name\":\"user_id\",\"value\":\"={{$node[\\\"MatchTechnician\\\"].json[\\\"id\\\"]}}\"}]}},\"credentials\":{\"httpHeaderAuth\":\"Syncro\"},\"typeVersion\":1},{\"name\":\"UpdateSyncroTimer\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1490,580],\"parameters\":{\"url\":\"={{$node[\\\"EnvVariables\\\"].json[\\\"syncro_baseurl\\\"]}}/api/v1/tickets/{{$node[\\\"ForSyncro\\\"].json[\\\"id\\\"]}}/update_timer_entry\",\"options\":{\"followRedirect\":true},\"requestMethod\":\"PUT\",\"authentication\":\"headerAuth\",\"bodyParametersUi\":{\"parameter\":[{\"name\":\"timer_entry_id\",\"value\":\"={{$node[\\\"IF\\\"].json[\\\"Syncro\\\"]}}\"},{\"name\":\"start_time\",\"value\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"timeInterval\\\"][\\\"start\\\"]}}\"},{\"name\":\"end_time\",\"value\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"timeInterval\\\"][\\\"end\\\"]}}\"},{\"name\":\"notes\",\"value\":\"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"description\\\"]}}\"},{\"name\":\"user_id\",\"value\":\"={{$node[\\\"MatchTechnician\\\"].json[\\\"id\\\"]}}\"}]}},\"credentials\":{\"httpHeaderAuth\":\"Syncro\"},\"typeVersion\":1},{\"name\":\"EnvVariables\",\"type\":\"n8n-nodes-base.set\",\"position\":[580,350],\"parameters\":{\"values\":{\"string\":[{\"name\":\"syncro_baseurl\",\"value\":\"https://subdomain.syncromsp.com\"}]},\"options\":{}},\"typeVersion\":1},{\"name\":\"SetTechnicians\",\"type\":\"n8n-nodes-base.set\",\"position\":[870,350],\"parameters\":{\"values\":{\"string\":[{\"name\":\"Tech 1\",\"value\":\"1234\"},{\"name\":\"Tech 2\",\"value\":\"5678\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"name\":\"MatchTechnician\",\"type\":\"n8n-nodes-base.function\",\"position\":[1000,350],\"parameters\":{\"functionCode\":\"\\nconst results = [];\\n\\nconst user = $node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"user\\\"];\\n\\nconst persons = items[0].json\\n\\nfor (key of Object.keys(persons)) {\\n  if (key === user.name) {\\n    results.push({ json: { id: persons[key], name: key } })\\n  }\\n}\\n\\nreturn results;\"},\"typeVersion\":1},{\"name\":\"IF1\",\"type\":\"n8n-nodes-base.if\",\"position\":[420,350],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{$json[\\\"body\\\"][\\\"project\\\"][\\\"name\\\"]}}\",\"value2\":\"Ticket\",\"operation\":\"contains\"}]}},\"typeVersion\":1},{\"name\":\"NoOp\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[480,520],\"parameters\":{},\"typeVersion\":1}],\"active\":true,\"settings\":{},\"connections\":{\"IF\":{\"main\":[[{\"node\":\"UpdateSyncroTimer\",\"type\":\"main\",\"index\":0}],[{\"node\":\"NewSyncroTimer\",\"type\":\"main\",\"index\":0}]]},\"IF1\":{\"main\":[[{\"node\":\"EnvVariables\",\"type\":\"main\",\"index\":0}],[{\"node\":\"NoOp\",\"type\":\"main\",\"index\":0}]]},\"Webhook\":{\"main\":[[{\"node\":\"IF1\",\"type\":\"main\",\"index\":0}]]},\"FindMatch\":{\"main\":[[{\"node\":\"IF\",\"type\":\"main\",\"index\":0}]]},\"ForGoogle\":{\"main\":[[{\"node\":\"Google Sheets\",\"type\":\"main\",\"index\":0}]]},\"ForSyncro\":{\"main\":[[{\"node\":\"SetTechnicians\",\"type\":\"main\",\"index\":0}]]},\"EnvVariables\":{\"main\":[[{\"node\":\"ForSyncro\",\"type\":\"main\",\"index\":0}]]},\"NewSyncroTimer\":{\"main\":[[{\"node\":\"ForGoogle\",\"type\":\"main\",\"index\":0}]]},\"SetTechnicians\":{\"main\":[[{\"node\":\"MatchTechnician\",\"type\":\"main\",\"index\":0}]]},\"MatchTechnician\":{\"main\":[[{\"node\":\"FindMatch\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow will take a timer entry from Clockify and submit it to a matching ticket in Syncro. It saves the time entry ID from Clockify and the time entry ID from Syncro into a Google Sheets. Then, it will check if a match already exists from a previous update and will update the same time entry if the description or time is changed in Clockify. There is a Set node with the name and Syncro IDs of technicians.\n\nIf you have multiple technicians with the same name, this won't work for you. Likewise, if the name in Clockify doesn't exactly match what you put in the Set, it won't work. You also need to setup a webhook in Clockify set to trigger on \"Time entry updated (anyone)\" and pointed at your workflow. Configured this way, you can start and stop time entries at will and it won't do anything until you change the description.\n\n> This workflow is part of an MSP collection, The original can be found here: <https://github.com/bionemesis/n8nsyncro>\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>This workflow will take a timer entry from Clockify and submit it to a matching ticket in Syncro. It saves the time entry ID from Clockify and the time entry ID from Syncro into a Google Sheets. Then, it will check if a match already exists from a previous update and will update the same time entry if the description or time is changed in Clockify. There is a Set node with the name and Syncro IDs of technicians.</p>\n<p>If you have multiple technicians with the same name, this won't work for you. Likewise, if the name in Clockify doesn't exactly match what you put in the Set, it won't work. You also need to setup a webhook in Clockify set to trigger on \"Time entry updated (anyone)\" and pointed at your workflow. Configured this way, you can start and stop time entries at will and it won't do anything until you change the description.</p>\n<blockquote>\n<p>This workflow is part of an MSP collection, The original can be found here: <a href=\"https://github.com/bionemesis/n8nsyncro\" rel=\"ugc nofollow\" target=\"_blank\">https://github.com/bionemesis/n8nsyncro</a></p>\n</blockquote>\n</div><!--]-->",
  "readme_zh": "该工作流程将从Clockify提取计时条目并提交至Syncro中对应的工单。它会将Clockify的计时条目ID与Syncro的计时条目ID共同存储到Google Sheets表格中。当检测到Clockify中的描述或时间发生变更时，系统会核对历史更新记录中的匹配项，并对同一计时条目进行更新。流程中包含一个预设节点，其中存储了技术人员的姓名及其Syncro ID。\n\n注意：若存在同名技术人员，此流程将无法正常运行；同样，若Clockify中的姓名与预设节点中的记录不完全匹配，流程也会失效。您需要在Clockify中设置一个指向该工作流程的webhook，触发条件设为\"任何人更新计时条目\"。按此配置后，您可以自由启停计时条目，但仅在修改描述时才会触发流程操作。\n\n> 本工作流程属于MSP工具集的一部分，原始代码参见：<https://github.com/bionemesis/n8nsyncro>",
  "title_zh": "将Clockify中的计时条目同步至Syncro",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"id\": \"3\",\n  \"name\": \"Clockify to Syncro\",\n  \"nodes\": [\n    {\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        280,\n        350\n      ],\n      \"webhookId\": \"82b654d7-aeb2-4cc1-97a8-0ebd1a729202\",\n      \"parameters\": {\n        \"path\": \"82b654d7-aeb2-4cc1-97a8-0ebd1a729202\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseData\": \"allEntries\",\n        \"responseMode\": \"lastNode\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Google Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1830,\n        350\n      ],\n      \"parameters\": {\n        \"range\": \"A:B\",\n        \"options\": {\n          \"valueInputMode\": \"USER_ENTERED\"\n        },\n        \"sheetId\": \"xxx\",\n        \"operation\": \"append\"\n      },\n      \"credentials\": {\n        \"googleApi\": \"Google\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"ForGoogle\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1650,\n        350\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"Syncro\",\n              \"value\": \"={{$json[\\\"id\\\"]}}\"\n            },\n            {\n              \"name\": \"Clockify\",\n              \"value\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"id\\\"]}}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"ForSyncro\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        730,\n        350\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"={{ $json[\\\"body\\\"][\\\"project\\\"][\\\"name\\\"].match(/\\\\[(\\\\d+)]/)[1] }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"FindMatch\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1130,\n        350\n      ],\n      \"parameters\": {\n        \"range\": \"A:B\",\n        \"options\": {\n          \"valueRenderMode\": \"UNFORMATTED_VALUE\",\n          \"returnAllMatches\": true\n        },\n        \"sheetId\": \"xxx\",\n        \"operation\": \"lookup\",\n        \"lookupValue\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"id\\\"]}}\",\n        \"lookupColumn\": \"=Clockify\"\n      },\n      \"credentials\": {\n        \"googleApi\": \"Google\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"IF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1300,\n        350\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [],\n          \"boolean\": [\n            {\n              \"value1\": \"={{!!Object.keys($node[\\\"FindMatch\\\"].data).length}}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"name\": \"NewSyncroTimer\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1490,\n        350\n      ],\n      \"parameters\": {\n        \"url\": \"={{$node[\\\"EnvVariables\\\"].json[\\\"syncro_baseurl\\\"]}}/api/v1/tickets/{{$node[\\\"ForSyncro\\\"].json[\\\"id\\\"]}}/timer_entry\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"authentication\": \"headerAuth\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"start_at\",\n              \"value\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"timeInterval\\\"][\\\"start\\\"]}}\"\n            },\n            {\n              \"name\": \"end_at\",\n              \"value\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"timeInterval\\\"][\\\"end\\\"]}}\"\n            },\n            {\n              \"name\": \"notes\",\n              \"value\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"description\\\"]}}\"\n            },\n            {\n              \"name\": \"user_id\",\n              \"value\": \"={{$node[\\\"MatchTechnician\\\"].json[\\\"id\\\"]}}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": \"Syncro\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"UpdateSyncroTimer\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1490,\n        580\n      ],\n      \"parameters\": {\n        \"url\": \"={{$node[\\\"EnvVariables\\\"].json[\\\"syncro_baseurl\\\"]}}/api/v1/tickets/{{$node[\\\"ForSyncro\\\"].json[\\\"id\\\"]}}/update_timer_entry\",\n        \"options\": {\n          \"followRedirect\": true\n        },\n        \"requestMethod\": \"PUT\",\n        \"authentication\": \"headerAuth\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"timer_entry_id\",\n              \"value\": \"={{$node[\\\"IF\\\"].json[\\\"Syncro\\\"]}}\"\n            },\n            {\n              \"name\": \"start_time\",\n              \"value\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"timeInterval\\\"][\\\"start\\\"]}}\"\n            },\n            {\n              \"name\": \"end_time\",\n              \"value\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"timeInterval\\\"][\\\"end\\\"]}}\"\n            },\n            {\n              \"name\": \"notes\",\n              \"value\": \"={{$node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"description\\\"]}}\"\n            },\n            {\n              \"name\": \"user_id\",\n              \"value\": \"={{$node[\\\"MatchTechnician\\\"].json[\\\"id\\\"]}}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": \"Syncro\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"EnvVariables\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        580,\n        350\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"syncro_baseurl\",\n              \"value\": \"https://subdomain.syncromsp.com\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SetTechnicians\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        870,\n        350\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"Tech 1\",\n              \"value\": \"1234\"\n            },\n            {\n              \"name\": \"Tech 2\",\n              \"value\": \"5678\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"MatchTechnician\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1000,\n        350\n      ],\n      \"parameters\": {\n        \"functionCode\": \"\\nconst results = [];\\n\\nconst user = $node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"user\\\"];\\n\\nconst persons = items[0].json\\n\\nfor (key of Object.keys(persons)) {\\n  if (key === user.name) {\\n    results.push({ json: { id: persons[key], name: key } })\\n  }\\n}\\n\\nreturn results;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"IF1\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        420,\n        350\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$json[\\\"body\\\"][\\\"project\\\"][\\\"name\\\"]}}\",\n              \"value2\": \"Ticket\",\n              \"operation\": \"contains\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"NoOp\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        480,\n        520\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"settings\": {},\n  \"connections\": {\n    \"IF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"UpdateSyncroTimer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"NewSyncroTimer\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"EnvVariables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"NoOp\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"FindMatch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ForGoogle\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ForSyncro\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SetTechnicians\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"EnvVariables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"ForSyncro\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"NewSyncroTimer\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"ForGoogle\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SetTechnicians\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"MatchTechnician\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MatchTechnician\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"FindMatch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}