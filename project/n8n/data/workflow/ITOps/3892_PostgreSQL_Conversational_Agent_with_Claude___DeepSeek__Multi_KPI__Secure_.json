{
  "title": "PostgreSQL Conversational Agent with Claude & DeepSeek (Multi-KPI, Secure)",
  "url": "https://n8n.io/workflows/3892-postgresql-conversational-agent-with-claude-and-deepseek-multi-kpi-secure/",
  "category": "ITOps",
  "category_url": "https://n8n.io/workflows/categories/it-ops/?sort=createdAt:desc",
  "author": "hippolyte-hu",
  "publish_date": "Last update 8 days ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"Wsw6HdSAFk8y7jxh\",\"meta\":{\"instanceId\":\"1fc85153dfc4ea22a8172f0d7347fa9f591f71e2064dc331f7bdc1d7ee422e7a\",\"templateId\":\"3631\",\"templateCredsSetupCompleted\":true},\"name\":\"Build your own PostgreSQL MCP server(No visuals)\",\"tags\":[],\"nodes\":[{\"id\":\"735a96e6-a254-4c0c-8268-88c33db886e8\",\"name\":\"GetTableSchema\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[-40,920],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"aba773b1-8fd0-4b5a-953f-c2de44029b68\",\"name\":\"ListTables\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[60,1020],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"217bac36-8448-4f91-b53f-2ffb8dcb13c1\",\"name\":\"When Executed by Another Workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[760,880],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"8752c39a-5bb6-4696-a591-cb7a4f649586\",\"name\":\"CreateTableRecords\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[180,1020],\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"448c74a8-8051-4aeb-be50-98f61b4c1476\",\"name\":\"ReadTableRecord\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[1260,720],\"parameters\":{},\"typeVersion\":2.6,\"alwaysOutputData\":true},{\"id\":\"a51c89a7-3c6e-4c71-83f7-c17dea2fac6a\",\"name\":\"Operation\",\"type\":\"n8n-nodes-base.switch\",\"position\":[920,880],\"parameters\":{},\"typeVersion\":3.2},{\"id\":\"0ee5c0cf-cb53-41a7-a81e-1eca93648eee\",\"name\":\"UpdateTableRecord\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[1260,1040],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"2f0fafb5-e369-4550-99df-04983c4f0080\",\"name\":\"UpdateTableRecords\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[300,1040],\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"40deab57-d6f3-4f40-8368-ae0b5c0830e7\",\"name\":\"CreateTableRecord\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[1260,880],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"e6d70398-2fda-4ad4-9fa9-9277b0e8037f\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-120,500],\"parameters\":{\"content\":\"\"},\"typeVersion\":1},{\"id\":\"13154e61-77a4-40bb-b2a1-49c43af5e8c8\",\"name\":\"PostgreSQL MCP Server\",\"type\":\"@n8n/n8n-nodes-langchain.mcpTrigger\",\"position\":[120,580],\"webhookId\":\"9007e426-56a9-489f-a131-28b63d76ddfa\",\"parameters\":{},\"typeVersion\":1},{\"id\":\"62e57740-0e1c-46ce-8a12-d963dfe47d65\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[720,500],\"parameters\":{\"content\":\"\"},\"typeVersion\":1},{\"id\":\"87fba2e8-96d1-48e1-bd2e-fefbf6d1ba74\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[300,1440],\"webhookId\":\"5c88c23d-5544-46f9-867c-4ea03b41ed62\",\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"19d4bfb8-ab2f-447f-8d58-4bfe2b7d182c\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[540,1400],\"parameters\":{},\"typeVersion\":1.8},{\"id\":\"87781b4a-1c07-4447-b28f-bc9010dfe672\",\"name\":\"Simple Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[540,1760],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"3ff30556-c402-47d7-b0d4-200c61006cb9\",\"name\":\"MCP Client\",\"type\":\"@n8n/n8n-nodes-langchain.mcpClientTool\",\"position\":[700,1760],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a43e3dc5-adbf-4ae5-b46a-d04654cebbf0\",\"name\":\"Anthropic Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatAnthropic\",\"position\":[360,1740],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"b683d331-989f-4b09-8158-df302fe12cab\",\"name\":\"Think\",\"type\":\"@n8n/n8n-nodes-langchain.toolThink\",\"position\":[1000,1720],\"parameters\":{},\"typeVersion\":1},{\"id\":\"cf864de0-57a5-4537-b42c-5ad12da49d01\",\"name\":\"get table details\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[540,860],\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"01300da8-259d-43ca-9185-2f16cf7e2913\",\"name\":\"ReadTableRows\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[480,1020],\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"9bdb7802-23ad-45d2-a35e-1de546aa8903\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-80,1320],\"parameters\":{\"content\":\"\"},\"typeVersion\":1}],\"active\":true,\"pinData\":{},\"settings\":{},\"versionId\":\"ab18f1aa-d451-4aa8-b682-e8d3ab6697b7\",\"connections\":{\"Think\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"AI Agent\":{\"main\":[[]]},\"Operation\":{\"main\":[[{\"node\":\"ReadTableRecord\",\"type\":\"main\",\"index\":0}],[{\"node\":\"CreateTableRecord\",\"type\":\"main\",\"index\":0}],[{\"node\":\"UpdateTableRecord\",\"type\":\"main\",\"index\":0}]]},\"ListTables\":{\"ai_tool\":[[{\"node\":\"PostgreSQL MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"MCP Client\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"ReadTableRows\":{\"ai_tool\":[[{\"node\":\"PostgreSQL MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"Simple Memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"GetTableSchema\":{\"ai_tool\":[[{\"node\":\"PostgreSQL MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"ReadTableRecord\":{\"main\":[[]]},\"get table details\":{\"ai_tool\":[[{\"node\":\"PostgreSQL MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"CreateTableRecords\":{\"ai_tool\":[[{\"node\":\"PostgreSQL MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"UpdateTableRecords\":{\"ai_tool\":[[{\"node\":\"PostgreSQL MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"Anthropic Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"When Executed by Another Workflow\":{\"main\":[[{\"node\":\"Operation\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# 🧠 Conversational PostgreSQL Agent\n\nEnable AI-driven conversations with your PostgreSQL database using a secure and visual-free agent powered by n8n’s Model Context Protocol (MCP). This template allows users to ask multiple KPIs in a single message, returning consolidated insights — more efficient than the original Conversing with Data template.\n\n* * *\n\n## 🚀 Why This Template\n\nUnlike the Conversing with Data workflow, which handles one KPI per message, this version:\n\n  * ✅ Supports multi-KPI questions\n  * ✅ Returns structured, human-readable reports\n  * ✅ Uses fewer AI calls, making it faster and cheaper\n  * ✅ Avoids raw SQL execution for enhanced security\n\n\n\n💲 **Estimated cost per full multi-request run: ~$0.01**\n\nThis template is optimized for efficiency. Each message can return 2–4 KPIs (You can change the MaxIteration of the Agent to make it more, it is currently set up at 30 iterations) using a single Claude 3.5 Haiku session and DeepSeek-based SQL generation — balancing speed, reasoning, and affordability.\n\n* * *\n\n## 💬 Sample Use Case\n\n**User:**  \n“Can you show product performance, revenue trends, and top 5 customers?”\n\n**Agent:**\n\n  * Uses `ListTables` and `GetTableSchema`\n  * Generates three SQL queries using `get_query_and_data`\n  * Returns:\n\n\n\n📊 **Product Performance**\n\n  1. High-Waist Jeans — 10 units, $1,027 revenue\n  2. Denim Jacket — 10 units, $783 revenue\n\n\n\n📈 **Sales Trends**\n\n  * Peak Month: January 2024 — 32 units, $2,378\n  * Average Monthly Units: 10–16\n\n\n\n🧍 **Customer Insights**\n\n  1. Bob Brown — $1,520 spent\n  2. Diana Wilson — $925 spent\n\n\n\nAll from one natural prompt.\n\n* * *\n\n## 🖼️ Real-World Interaction Screenshot\n\n![novisual_sql.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/novisual_sql_cff3d9a8b4.png)\n\n* * *\n\n## 🧰 What’s Inside\n\nNode | Purpose  \n---|---  \nMCP Server Trigger | Receives user queries via `/mcp/...`  \nAI Agent + Memory | Understands and plans multi-step queries  \nThink Tool | Breaks down the user’s question into structured goals  \nget_query_and_data | Generates SQL securely from natural language  \nListTables, GetSchema | AI tools to explore DB safely  \nRead/Insert/Update Tools | Execute structured operations (never raw SQL)  \ncheckdatabase Subflow | Validates SQL, formats response as clean text  \n  \n* * *\n\n## 🤖 Model Selection Recommendations\n\nThis template uses two types of models, selected for cost-performance balance and role alignment:\n\n**1\\. Claude 3.5 Haiku (Anthropic) – for the MCP Agent**  \nThe main conversational agent uses Claude 3.5 Haiku, ideal for MCP because it was built by Anthropic — the creators of the MCP standard. It’s fast, affordable, and performs excellently in tool-calling and reasoning tasks.\n\n**2\\. DeepSeek – for the SQL subworkflow**  \nThe subworkflow that turns natural language into SQL uses DeepSeek. It’s one of the most affordable and performant models available today for structured outputs like SQL, making it a perfect fit for utility logic.\n\n✅ This setup provides top-tier reasoning + low-cost execution.\n\n* * *\n\n## 🔐 Security Benefits\n\n  * No raw SQL accepted from the user or LLM\n  * All queries are parameterized\n  * Schema is dynamically retrieved\n  * Final output is clean, safe, and human-readable\n\n\n\n* * *\n\n## 🧪 Try a Prompt\n\n> “Show me the top 5 products by units sold and revenue, total monthly sales trend, and top 5 customers by spending.”\n\nIn one message, the agent will:\n\n  * Generate and run multiple queries\n  * Use the schema to validate logic\n  * Return a single, comprehensive answer\n\n\n\n* * *\n\n## 🛠 How to Use\n\n  1. 📥 Upload both workflow files into your n8n instance: \n    * `Build_your_own_PostgreSQL_MCP_server_No_visuals_.json`\n    * `checkdatabase.json`\n  2. 🔐 Set up PostgreSQL credentials (e.g. “Postgres account 3”)\n  3. 🧠 Confirm model setup: \n    * Claude 3.5 Haiku for the main agent\n    * DeepSeek for the subflow\n  4. 🌐 Use the `/mcp/...` URL from the MCP Server Trigger to connect your frontend or chatbot\n  5. 🗣 Ask questions naturally — the agent takes care of planning, querying, and formatting\n\n\n\n* * *\n\n## 🔄 Customization Ideas\n\n  * Swap Claude or DeepSeek for OpenAI, Mistral, Gemini, etc.\n  * Export insights to Slack, Notion, or Google Sheets\n  * Add Switch nodes to control access to specific tables\n  * Integrate with any front-end app, internal dashboard, or bot\n\n\n\n* * *\n\n## 📦 What's Included\n\n  * `Build_your_own_PostgreSQL_MCP_server_No_visuals_.json` – MCP agent logic\n  * `checkdatabase.json` – SQL generation and formatting utility workflow\n\n\n\n📝 These must be uploaded into your n8n workspace for the template to function.\n\n* * *\n\n## 📊 Comparison: Conversing with Data vs This Workflow\n\nFeature | Conversing with Data | This Workflow  \n---|---|---  \nHandles multi-KPI questions | ❌ No | ✅ Yes  \nSecure query execution | ✅ Yes | ✅ Yes  \nStructured response | ⚠️ JSON / raw | ✅ Clean natural language  \nCost-efficiency | ⚠️ More calls | ✅ Optimized with fewer calls  \nEndpoint support | ❌ Manual interaction | ✅ MCP-ready (`/mcp/...`)  \n  \n🔗 Prefer something more lightweight and cost-sensitive?  \nTry the original Conversing with Data template (single KPI + chart support):  \n[Conversing with Data: Transforming Text into SQL Queries and Visual Curves](https://n8n.io/workflows/3497-conversing-with-data-transforming-text-into-sql-queries-and-visual-curves)\n\n> I used this version for over 3 months and only spent **$0.80 total** , making it a great entry point if you're just getting started or on a limited budget.\n\n* * *\n\n## 📚 More from the Same Creator\n\nLooking for a different kind of AI reporting workflow?\n\nExplore:  \n**Customer Feedback Analysis with AI, QuickChart & HTML Report Generator**  \n→ Automatically analyze customer input and generate full reports with insights and charts.  \n[Customer Feedback Analysis with AI, QuickChart & HTML Report Generator](https://n8n.io/workflows/3642-customer-feedback-analysis-with-ai-quickchart-and-html-report-generator)\n",
  "readme_html": "<!--[--><div data-v-859c7806=\"\"><h1>🧠 Conversational PostgreSQL Agent</h1>\n<p>Enable AI-driven conversations with your PostgreSQL database using a secure and visual-free agent powered by n8n’s Model Context Protocol (MCP). This template allows users to ask multiple KPIs in a single message, returning consolidated insights — more efficient than the original Conversing with Data template.</p>\n<hr>\n<h2>🚀 Why This Template</h2>\n<p>Unlike the Conversing with Data workflow, which handles one KPI per message, this version:</p>\n<ul>\n<li>✅ Supports multi-KPI questions</li>\n<li>✅ Returns structured, human-readable reports</li>\n<li>✅ Uses fewer AI calls, making it faster and cheaper</li>\n<li>✅ Avoids raw SQL execution for enhanced security</li>\n</ul>\n<p>💲 <strong>Estimated cost per full multi-request run: ~$0.01</strong></p>\n<p>This template is optimized for efficiency. Each message can return 2–4 KPIs (You can change the MaxIteration of the Agent to make it more, it is currently set up at 30 iterations) using a single Claude 3.5 Haiku session and DeepSeek-based SQL generation — balancing speed, reasoning, and affordability.</p>\n<hr>\n<h2>💬 Sample Use Case</h2>\n<p><strong>User:</strong><br>\n“Can you show product performance, revenue trends, and top 5 customers?”</p>\n<p><strong>Agent:</strong></p>\n<ul>\n<li>Uses <code>ListTables</code> and <code>GetTableSchema</code></li>\n<li>Generates three SQL queries using <code>get_query_and_data</code></li>\n<li>Returns:</li>\n</ul>\n<p>📊 <strong>Product Performance</strong></p>\n<ol>\n<li>High-Waist Jeans — 10 units, $1,027 revenue</li>\n<li>Denim Jacket — 10 units, $783 revenue</li>\n</ol>\n<p>📈 <strong>Sales Trends</strong></p>\n<ul>\n<li>Peak Month: January 2024 — 32 units, $2,378</li>\n<li>Average Monthly Units: 10–16</li>\n</ul>\n<p>🧍 <strong>Customer Insights</strong></p>\n<ol>\n<li>Bob Brown — $1,520 spent</li>\n<li>Diana Wilson — $925 spent</li>\n</ol>\n<p>All from one natural prompt.</p>\n<hr>\n<h2>🖼️ Real-World Interaction Screenshot</h2>\n<p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/novisual_sql_cff3d9a8b4.png\" alt=\"novisual_sql.png\"></p>\n<hr>\n<h2>🧰 What’s Inside</h2>\n<table>\n<thead>\n<tr>\n<th>Node</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>MCP Server Trigger</td>\n<td>Receives user queries via <code>/mcp/...</code></td>\n</tr>\n<tr>\n<td>AI Agent + Memory</td>\n<td>Understands and plans multi-step queries</td>\n</tr>\n<tr>\n<td>Think Tool</td>\n<td>Breaks down the user’s question into structured goals</td>\n</tr>\n<tr>\n<td>get_query_and_data</td>\n<td>Generates SQL securely from natural language</td>\n</tr>\n<tr>\n<td>ListTables, GetSchema</td>\n<td>AI tools to explore DB safely</td>\n</tr>\n<tr>\n<td>Read/Insert/Update Tools</td>\n<td>Execute structured operations (never raw SQL)</td>\n</tr>\n<tr>\n<td>checkdatabase Subflow</td>\n<td>Validates SQL, formats response as clean text</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>🤖 Model Selection Recommendations</h2>\n<p>This template uses two types of models, selected for cost-performance balance and role alignment:</p>\n<p><strong>1. Claude 3.5 Haiku (Anthropic) – for the MCP Agent</strong><br>\nThe main conversational agent uses Claude 3.5 Haiku, ideal for MCP because it was built by Anthropic — the creators of the MCP standard. It’s fast, affordable, and performs excellently in tool-calling and reasoning tasks.</p>\n<p><strong>2. DeepSeek – for the SQL subworkflow</strong><br>\nThe subworkflow that turns natural language into SQL uses DeepSeek. It’s one of the most affordable and performant models available today for structured outputs like SQL, making it a perfect fit for utility logic.</p>\n<p>✅ This setup provides top-tier reasoning + low-cost execution.</p>\n<hr>\n<h2>🔐 Security Benefits</h2>\n<ul>\n<li>No raw SQL accepted from the user or LLM</li>\n<li>All queries are parameterized</li>\n<li>Schema is dynamically retrieved</li>\n<li>Final output is clean, safe, and human-readable</li>\n</ul>\n<hr>\n<h2>🧪 Try a Prompt</h2>\n<blockquote>\n<p>“Show me the top 5 products by units sold and revenue, total monthly sales trend, and top 5 customers by spending.”</p>\n</blockquote>\n<p>In one message, the agent will:</p>\n<ul>\n<li>Generate and run multiple queries</li>\n<li>Use the schema to validate logic</li>\n<li>Return a single, comprehensive answer</li>\n</ul>\n<hr>\n<h2>🛠 How to Use</h2>\n<ol>\n<li>📥 Upload both workflow files into your n8n instance:\n<ul>\n<li><code>Build_your_own_PostgreSQL_MCP_server_No_visuals_.json</code></li>\n<li><code>checkdatabase.json</code></li>\n</ul>\n</li>\n<li>🔐 Set up PostgreSQL credentials (e.g. “Postgres account 3”)</li>\n<li>🧠 Confirm model setup:\n<ul>\n<li>Claude 3.5 Haiku for the main agent</li>\n<li>DeepSeek for the subflow</li>\n</ul>\n</li>\n<li>🌐 Use the <code>/mcp/...</code> URL from the MCP Server Trigger to connect your frontend or chatbot</li>\n<li>🗣 Ask questions naturally — the agent takes care of planning, querying, and formatting</li>\n</ol>\n<hr>\n<h2>🔄 Customization Ideas</h2>\n<ul>\n<li>Swap Claude or DeepSeek for OpenAI, Mistral, Gemini, etc.</li>\n<li>Export insights to Slack, Notion, or Google Sheets</li>\n<li>Add Switch nodes to control access to specific tables</li>\n<li>Integrate with any front-end app, internal dashboard, or bot</li>\n</ul>\n<hr>\n<h2>📦 What's Included</h2>\n<ul>\n<li><code>Build_your_own_PostgreSQL_MCP_server_No_visuals_.json</code> – MCP agent logic</li>\n<li><code>checkdatabase.json</code> – SQL generation and formatting utility workflow</li>\n</ul>\n<p>📝 These must be uploaded into your n8n workspace for the template to function.</p>\n<hr>\n<h2>📊 Comparison: Conversing with Data vs This Workflow</h2>\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Conversing with Data</th>\n<th>This Workflow</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Handles multi-KPI questions</td>\n<td>❌ No</td>\n<td>✅ Yes</td>\n</tr>\n<tr>\n<td>Secure query execution</td>\n<td>✅ Yes</td>\n<td>✅ Yes</td>\n</tr>\n<tr>\n<td>Structured response</td>\n<td>⚠️ JSON / raw</td>\n<td>✅ Clean natural language</td>\n</tr>\n<tr>\n<td>Cost-efficiency</td>\n<td>⚠️ More calls</td>\n<td>✅ Optimized with fewer calls</td>\n</tr>\n<tr>\n<td>Endpoint support</td>\n<td>❌ Manual interaction</td>\n<td>✅ MCP-ready (<code>/mcp/...</code>)</td>\n</tr>\n</tbody>\n</table>\n<p>🔗 Prefer something more lightweight and cost-sensitive?<br>\nTry the original Conversing with Data template (single KPI + chart support):<br>\n<a href=\"https://n8n.io/workflows/3497-conversing-with-data-transforming-text-into-sql-queries-and-visual-curves\" rel=\"ugc nofollow\" target=\"_blank\">Conversing with Data: Transforming Text into SQL Queries and Visual Curves</a></p>\n<blockquote>\n<p>I used this version for over 3 months and only spent <strong>$0.80 total</strong>, making it a great entry point if you're just getting started or on a limited budget.</p>\n</blockquote>\n<hr>\n<h2>📚 More from the Same Creator</h2>\n<p>Looking for a different kind of AI reporting workflow?</p>\n<p>Explore:<br>\n<strong>Customer Feedback Analysis with AI, QuickChart &amp; HTML Report Generator</strong><br>\n→ Automatically analyze customer input and generate full reports with insights and charts.<br>\n<a href=\"https://n8n.io/workflows/3642-customer-feedback-analysis-with-ai-quickchart-and-html-report-generator\" rel=\"ugc nofollow\" target=\"_blank\">Customer Feedback Analysis with AI, QuickChart &amp; HTML Report Generator</a></p>\n</div><!--]-->"
}