{
  "title": "Create Teams Notifications for new Tickets in ConnectWise with Redis",
  "url": "https://n8n.io/workflows/2352-create-teams-notifications-for-new-tickets-in-connectwise-with-redis/",
  "category": "ITOps",
  "category_url": "https://n8n.io/workflows/categories/it-ops/?sort=createdAt:desc",
  "author": "Gavin",
  "publish_date": "Last update 9 months ago",
  "publish_date_absolute": "2024-08-06",
  "content": "",
  "workflow_json": "{\"id\":\"0H2mo5k35e0nzMEE\",\"meta\":{\"instanceId\":\"2e2d423885cf86d4b5420a96c93cd261c847d0419e9bb242fa12caf4a4c298c3\",\"templateCredsSetupCompleted\":true},\"name\":\"New Ticket Alerts to Teams\",\"tags\":[],\"nodes\":[{\"id\":\"80c29a2a-c005-4a19-a71e-3e862a4f9b49\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-120,540],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"*/1 8-16 * * 1-5\"}]}},\"typeVersion\":1.1},{\"id\":\"24b7e81c-51ea-4a0f-9684-e5aef53021ad\",\"name\":\"Add Filterable Parameter\",\"type\":\"n8n-nodes-base.code\",\"position\":[460,460],\"parameters\":{\"jsCode\":\"for (const item of $input.all()) {\\n  // Assuming 'id' is the field with the Connectwise Ticket ID\\n  // Convert 'id' to a string to ensure it has quotes in the JSON output\\n  item.json.id = item.json.id.toString();\\n\\n  // If 'filterOnThis' is another field you want to set with the id as a string\\n  item.json.FilterOnThis = item.json.id;\\n\\n  // ... any other operations you want to perform on each item\\n}\\n\\nreturn $input.all();\"},\"typeVersion\":2},{\"id\":\"1ab5a549-34a2-4bed-9c4c-9c268bf04e0d\",\"name\":\"Query Database\",\"type\":\"n8n-nodes-base.redis\",\"position\":[460,620],\"parameters\":{\"key\":\"={{ $json.id.toString() }}\",\"keyType\":\"string\",\"options\":{},\"operation\":\"get\",\"propertyName\":\"=Tickets\"},\"credentials\":{\"redis\":{\"id\":\"nm82iTY9aRTp8ZQm\",\"name\":\"Redis-Dispatch\"}},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"c6f3bb14-3385-4b5a-95b1-f0ac787d056a\",\"name\":\"Filter Out Tickets that have already been sent\",\"type\":\"n8n-nodes-base.merge\",\"position\":[780,540],\"parameters\":{\"mode\":\"combine\",\"options\":{\"fuzzyCompare\":true},\"joinMode\":\"keepNonMatches\",\"mergeByFields\":{\"values\":[{\"field1\":\"FilterOnThis\",\"field2\":\"Tickets\"}]},\"outputDataFrom\":\"input1\"},\"typeVersion\":2.1},{\"id\":\"18bb4e45-cfaf-47b7-88fa-4edb316f05d5\",\"name\":\"Get New Tickets\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[180,540],\"parameters\":{\"url\":\"https://na.myconnectwise.net/v4_6_release/apis/3.0/service/tickets?conditions=(status/name=\\\"New\\\" or status/name=\\\"New (email)\\\" or status/name=\\\"New (portal)\\\") and (board/id=25 or board/id=26 or board/id=1 or board/id=28) and parentTicketId=null&PageSize=999\",\"options\":{},\"sendHeaders\":true,\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"clientId\",\"value\":\"934a9a6d-480a-4502-ab77-46bd80b368d7\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"MlbbiZdsGxeWRyMH\",\"name\":\"Header Auth account\"}},\"typeVersion\":4.1},{\"id\":\"5a827e46-b257-4078-ba1f-a27bfba7cb02\",\"name\":\"Combine like Companies\",\"type\":\"n8n-nodes-base.code\",\"position\":[1040,620],\"parameters\":{\"jsCode\":\"// would need to be adapted to your specific data structure.\\nreturn Object.values(items.reduce((accumulator, current) => {\\n  const siteName = current.json.siteName; // assuming 'siteName' is the common property\\n  const companyName = current.json.company; // replace with the correct path to the company name\\n  const ticketType = current.json.recordType; // replace with the correct path to the ticket type\\n\\n  // Use a combined key of siteName and companyName to group tickets\\n  const groupKey = `${siteName} - ${companyName}`;\\n\\n  if (!accumulator[groupKey]) {\\n    accumulator[groupKey] = {\\n      siteName,\\n      companyName,\\n      ticketType,\\n      tickets: []\\n    };\\n  }\\n\\n  // Create a string that combines the ticket number and summary with a <br> for HTML line breaks\\n  const ticketInfo = `${current.json.id}: ${current.json.summary}<br>`;\\n  accumulator[groupKey].tickets.push(ticketInfo);\\n\\n  // If ticketType is not consistent within the same groupKey, handle accordingly\\n  if (!accumulator[groupKey].ticketType) {\\n    accumulator[groupKey].ticketType = ticketType;\\n  } else if (accumulator[groupKey].ticketType !== ticketType) {\\n    // Handle the case where different ticket types exist within the same groupKey\\n    accumulator[groupKey].ticketType += `, ${ticketType}`;\\n  }\\n\\n  return accumulator;\\n}, {})).map(group => {\\n  // Join the tickets array into a single string, separating each ticket with an empty string (effectively nothing)\\n  const ticketsString = group.tickets.join('');\\n\\n  // Return the final object structure, with each property as needed\\n  return {\\n    siteName: group.siteName,\\n    companyName: group.companyName,\\n    ticketType: group.ticketType,\\n    tickets: ticketsString // This is now a single string with <br> as separators\\n  };\\n});\\n\"},\"typeVersion\":2},{\"id\":\"0a69f405-cb56-4cb5-b56c-9015602376eb\",\"name\":\"Teams to Dispatch\",\"type\":\"n8n-nodes-base.microsoftTeams\",\"position\":[1320,540],\"parameters\":{\"chatId\":\"19:3a9ec7df-5b99-4311-9a78-61ac2192da07_449d57c9-64d0-496f-ad07-147a6b388a32@unq.gbl.spaces\",\"message\":\"=Hey Dispatch Team!, A new {{ $json.ticketType }} has come in.<br><br> <strong>Ticket:</strong> {{ $json.tickets }} <strong>Company: </strong> {{ $json.companyName.name }}\",\"options\":{},\"resource\":\"chatMessage\",\"messageType\":\"html\"},\"credentials\":{\"microsoftTeamsOAuth2Api\":{\"id\":\"9eUxYgQYNgePrgUD\",\"name\":\"Microsoft Teams account\"}},\"typeVersion\":1.1},{\"id\":\"59beaef0-77af-4ae2-a68d-43313e933a10\",\"name\":\"Log in Redis\",\"type\":\"n8n-nodes-base.redis\",\"position\":[1040,460],\"parameters\":{\"key\":\"={{ $json.id }}\",\"value\":\"={{ $json.id }}\",\"operation\":\"set\"},\"credentials\":{\"redis\":{\"id\":\"nm82iTY9aRTp8ZQm\",\"name\":\"Redis-Dispatch\"}},\"typeVersion\":1}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"ab7ae9df-5adf-4be4-8c56-39b433641673\",\"connections\":{\"Query Database\":{\"main\":[[{\"node\":\"Filter Out Tickets that have already been sent\",\"type\":\"main\",\"index\":1}]]},\"Get New Tickets\":{\"main\":[[{\"node\":\"Query Database\",\"type\":\"main\",\"index\":0},{\"node\":\"Add Filterable Parameter\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Get New Tickets\",\"type\":\"main\",\"index\":0}]]},\"Combine like Companies\":{\"main\":[[{\"node\":\"Teams to Dispatch\",\"type\":\"main\",\"index\":0}]]},\"Add Filterable Parameter\":{\"main\":[[{\"node\":\"Filter Out Tickets that have already been sent\",\"type\":\"main\",\"index\":0}]]},\"Filter Out Tickets that have already been sent\":{\"main\":[[{\"node\":\"Combine like Companies\",\"type\":\"main\",\"index\":0},{\"node\":\"Log in Redis\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This Workflow does a HTTPs request to ConnectWise Manage through their REST API.\n\nIt will pull all tickets in the \"New\" status or whichever status you like, and notify your dispatch team/personnel whenever a new ticket comes in using Microsoft Teams.\n\nVideo Explanation <https://youtu.be/yaSVCybSWbM>\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>This Workflow does a HTTPs request to ConnectWise Manage through their REST API.</p>\n<p>It will pull all tickets in the \"New\" status or whichever status you like, and notify your dispatch team/personnel whenever a new ticket comes in using Microsoft Teams.</p>\n<p>Video Explanation <a href=\"https://youtu.be/yaSVCybSWbM\" rel=\"ugc nofollow\" target=\"_blank\">https://youtu.be/yaSVCybSWbM</a></p>\n</div><!--]-->",
  "readme_zh": "此工作流程通过REST API向ConnectWise Manage发起HTTPS请求。\n\n它能提取所有处于\"新建\"状态或您指定的任何状态的工单，并在新工单到达时通过Microsoft Teams通知您的调度团队/人员。\n\n视频讲解 <https://youtu.be/yaSVCybSWbM>",
  "title_zh": "在ConnectWise中利用Redis创建新工单的Teams通知",
  "publish_date_zh": "最后更新于9个月前",
  "workflow_json_zh": "{\n  \"id\": \"0H2mo5k35e0nzMEE\",\n  \"meta\": {\n    \"instanceId\": \"2e2d423885cf86d4b5420a96c93cd261c847d0419e9bb242fa12caf4a4c298c3\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"New Ticket Alerts to Teams\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"80c29a2a-c005-4a19-a71e-3e862a4f9b49\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -120,\n        540\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"*/1 8-16 * * 1-5\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"24b7e81c-51ea-4a0f-9684-e5aef53021ad\",\n      \"name\": \"Add Filterable Parameter\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        460,\n        460\n      ],\n      \"parameters\": {\n        \"jsCode\": \"for (const item of $input.all()) {\\n  // Assuming 'id' is the field with the Connectwise Ticket ID\\n  // Convert 'id' to a string to ensure it has quotes in the JSON output\\n  item.json.id = item.json.id.toString();\\n\\n  // If 'filterOnThis' is another field you want to set with the id as a string\\n  item.json.FilterOnThis = item.json.id;\\n\\n  // ... any other operations you want to perform on each item\\n}\\n\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1ab5a549-34a2-4bed-9c4c-9c268bf04e0d\",\n      \"name\": \"Query Database\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        460,\n        620\n      ],\n      \"parameters\": {\n        \"key\": \"={{ $json.id.toString() }}\",\n        \"keyType\": \"string\",\n        \"options\": {},\n        \"operation\": \"get\",\n        \"propertyName\": \"=Tickets\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"nm82iTY9aRTp8ZQm\",\n          \"name\": \"Redis-Dispatch\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"c6f3bb14-3385-4b5a-95b1-f0ac787d056a\",\n      \"name\": \"Filter Out Tickets that have already been sent\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        780,\n        540\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"fuzzyCompare\": true\n        },\n        \"joinMode\": \"keepNonMatches\",\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"FilterOnThis\",\n              \"field2\": \"Tickets\"\n            }\n          ]\n        },\n        \"outputDataFrom\": \"input1\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"18bb4e45-cfaf-47b7-88fa-4edb316f05d5\",\n      \"name\": \"Get New Tickets\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        180,\n        540\n      ],\n      \"parameters\": {\n        \"url\": \"https://na.myconnectwise.net/v4_6_release/apis/3.0/service/tickets?conditions=(status/name=\\\"New\\\" or status/name=\\\"New (email)\\\" or status/name=\\\"New (portal)\\\") and (board/id=25 or board/id=26 or board/id=1 or board/id=28) and parentTicketId=null&PageSize=999\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"clientId\",\n              \"value\": \"934a9a6d-480a-4502-ab77-46bd80b368d7\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"MlbbiZdsGxeWRyMH\",\n          \"name\": \"Header Auth account\"\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"5a827e46-b257-4078-ba1f-a27bfba7cb02\",\n      \"name\": \"Combine like Companies\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1040,\n        620\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// would need to be adapted to your specific data structure.\\nreturn Object.values(items.reduce((accumulator, current) => {\\n  const siteName = current.json.siteName; // assuming 'siteName' is the common property\\n  const companyName = current.json.company; // replace with the correct path to the company name\\n  const ticketType = current.json.recordType; // replace with the correct path to the ticket type\\n\\n  // Use a combined key of siteName and companyName to group tickets\\n  const groupKey = `${siteName} - ${companyName}`;\\n\\n  if (!accumulator[groupKey]) {\\n    accumulator[groupKey] = {\\n      siteName,\\n      companyName,\\n      ticketType,\\n      tickets: []\\n    };\\n  }\\n\\n  // Create a string that combines the ticket number and summary with a <br> for HTML line breaks\\n  const ticketInfo = `${current.json.id}: ${current.json.summary}<br>`;\\n  accumulator[groupKey].tickets.push(ticketInfo);\\n\\n  // If ticketType is not consistent within the same groupKey, handle accordingly\\n  if (!accumulator[groupKey].ticketType) {\\n    accumulator[groupKey].ticketType = ticketType;\\n  } else if (accumulator[groupKey].ticketType !== ticketType) {\\n    // Handle the case where different ticket types exist within the same groupKey\\n    accumulator[groupKey].ticketType += `, ${ticketType}`;\\n  }\\n\\n  return accumulator;\\n}, {})).map(group => {\\n  // Join the tickets array into a single string, separating each ticket with an empty string (effectively nothing)\\n  const ticketsString = group.tickets.join('');\\n\\n  // Return the final object structure, with each property as needed\\n  return {\\n    siteName: group.siteName,\\n    companyName: group.companyName,\\n    ticketType: group.ticketType,\\n    tickets: ticketsString // This is now a single string with <br> as separators\\n  };\\n});\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0a69f405-cb56-4cb5-b56c-9015602376eb\",\n      \"name\": \"Teams to Dispatch\",\n      \"type\": \"n8n-nodes-base.microsoftTeams\",\n      \"position\": [\n        1320,\n        540\n      ],\n      \"parameters\": {\n        \"chatId\": \"19:3a9ec7df-5b99-4311-9a78-61ac2192da07_449d57c9-64d0-496f-ad07-147a6b388a32@unq.gbl.spaces\",\n        \"message\": \"=Hey Dispatch Team!, A new {{ $json.ticketType }} has come in.<br><br> <strong>Ticket:</strong> {{ $json.tickets }} <strong>Company: </strong> {{ $json.companyName.name }}\",\n        \"options\": {},\n        \"resource\": \"chatMessage\",\n        \"messageType\": \"html\"\n      },\n      \"credentials\": {\n        \"microsoftTeamsOAuth2Api\": {\n          \"id\": \"9eUxYgQYNgePrgUD\",\n          \"name\": \"Microsoft Teams account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"59beaef0-77af-4ae2-a68d-43313e933a10\",\n      \"name\": \"Log in Redis\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        1040,\n        460\n      ],\n      \"parameters\": {\n        \"key\": \"={{ $json.id }}\",\n        \"value\": \"={{ $json.id }}\",\n        \"operation\": \"set\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"nm82iTY9aRTp8ZQm\",\n          \"name\": \"Redis-Dispatch\"\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"ab7ae9df-5adf-4be4-8c56-39b433641673\",\n  \"connections\": {\n    \"Query Database\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Out Tickets that have already been sent\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Get New Tickets\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Query Database\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Add Filterable Parameter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get New Tickets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine like Companies\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Teams to Dispatch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add Filterable Parameter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Out Tickets that have already been sent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Out Tickets that have already been sent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine like Companies\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Log in Redis\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}