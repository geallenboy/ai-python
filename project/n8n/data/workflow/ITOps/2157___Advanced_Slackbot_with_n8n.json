{
  "title": "ü§ñ Advanced Slackbot with n8n",
  "url": "https://n8n.io/workflows/2157-advanced-slackbot-with-n8n/",
  "category": "ITOps",
  "category_url": "https://n8n.io/workflows/categories/it-ops/?sort=createdAt:desc",
  "author": "Mutasem",
  "publish_date": "Last update a year ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"nodes\":[{\"id\":\"8e0a3745-348b-42db-82cc-55676c897ad7\",\"name\":\"Start thread\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1260,180],\"parameters\":{\"text\":\"=üßµ Got request to `{{ $json.command }}` from @{{$json.user}}\",\"select\":\"channel\",\"channelId\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $json.alerts_channel }}\"},\"otherOptions\":{\"link_names\":true}},\"credentials\":{\"slackApi\":{\"id\":\"26\",\"name\":\"Cloudbot bot token\"}},\"typeVersion\":2},{\"id\":\"ee413d6c-dad3-4e57-b08d-ffd0f84c682e\",\"name\":\"send help\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[880,560],\"parameters\":{\"url\":\"={{ $json.response_url }}\",\"options\":{},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"responseFormat\":\"string\",\"bodyParametersJson\":\"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"‚ÑπÔ∏è <{{ $json.help_docs_url }}|You can find help page here>\\\"\\n}\\n]\\n}\"},\"typeVersion\":1},{\"id\":\"47c146f9-1223-46a7-bfd6-0fa6ff701efe\",\"name\":\"Validate Slack token\",\"type\":\"n8n-nodes-base.if\",\"position\":[320,280],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $json.slack_token }}\",\"value2\":\"={{ $json.request_token }}\"}]}},\"typeVersion\":1},{\"id\":\"7733505c-d02c-4cb2-be78-f2272e5b7d6e\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-440,-140],\"parameters\":{\"color\":5,\"width\":549.1826144791862,\"height\":326.46772464213774,\"content\":\"## üë®‚Äçüé§ Setup\\n1. Add Slack command and point it up to the webhook\\n2. Add the following to the **Set config** node\\n- `alerts_channel` with alerts channel to start threads on\\n- `instance_url` with this instance url to make it easy to debug\\n- `slack_token` with slack bot token to validate request\\n- `slack_secret_signature` with slack secret signature to validate request\\n- `help_docs_url` with help url to help users understand the commands \\n3. Build other workflows to call and add them to `commands` in **Set Config**. Each command must be mapped to a workflow id with an `Execute Workflow Trigger` node\\n4. Activate workflow üöÄ\"},\"typeVersion\":1},{\"id\":\"30355072-5d75-4deb-af67-909ba59e6eb3\",\"name\":\"Reply to user that command was received\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueRegularOutput\",\"position\":[500,40],\"parameters\":{\"url\":\"={{ $json.response_url }}\",\"options\":{},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"responseFormat\":\"string\",\"bodyParametersJson\":\"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"‚ÑπÔ∏è Got command `{{ $json.command_name }} {{ $json.command_text }}`\\\"\\n}\\n]\\n}\"},\"typeVersion\":1},{\"id\":\"a2217c45-700e-4923-96e4-455a733bc1e4\",\"name\":\"if has workflow\",\"type\":\"n8n-nodes-base.if\",\"position\":[740,280],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d0a35e4f-3141-4e94-bb1a-fe7747a58dfc\",\"operator\":{\"type\":\"object\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json.workflow }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"id\":\"7ff12aa4-680f-42af-aa2f-c9dd6a733976\",\"name\":\"Set config\",\"type\":\"n8n-nodes-base.set\",\"position\":[-100,280],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"ba8fd958-188a-4e27-bdf1-928de8ae7d4f\",\"name\":\"commands\",\"type\":\"object\",\"value\":\"={{\\n{\\n  \\\"info\\\": { workflowId: 142, startThread: false },\\n  \\\"delete-user\\\": { workflowId: \\\"pTh9HMZVYcQNXypJ\\\" }\\n}\\n}}\"},{\"id\":\"105d2881-72b7-4547-a076-83ddb0966256\",\"name\":\"alerts_channel\",\"type\":\"string\",\"value\":\"#adore_bot_test\"},{\"id\":\"9672bea2-3a6a-4162-9966-107bf2ddbee5\",\"name\":\"instance_url\",\"type\":\"string\",\"value\":\"https://x.app.n8n.cloud/\"},{\"id\":\"52b53b37-5f69-4fb8-9569-f62788d91af1\",\"name\":\"slack_token\",\"type\":\"string\",\"value\":\"FILL_TOKEN_HERE\"},{\"id\":\"4d8d06f2-f1a5-4eb2-a559-42d98ceddffb\",\"name\":\"slack_secret_signature\",\"type\":\"string\",\"value\":\"FILL_SECRET_HERE\"},{\"id\":\"c2c7de20-a264-495e-934e-dda1a0bc64b9\",\"name\":\"help_docs_url\",\"type\":\"string\",\"value\":\"ADD_LINK_HERE\"}]},\"includeOtherFields\":true},\"typeVersion\":3.3},{\"id\":\"4c730be9-d3f5-45ee-8f2b-b6bfd685ea78\",\"name\":\"Send debug url\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueRegularOutput\",\"position\":[1260,440],\"parameters\":{\"url\":\"={{ $json.response_url }}\",\"options\":{},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"responseFormat\":\"string\",\"bodyParametersJson\":\"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"<{{ $json.instance_url }}/workflow/{{ $workflow.id }}/executions/{{ $execution.id }}|To debug entry point execution>\\\"\\n}\\n]\\n}\"},\"retryOnFail\":false,\"typeVersion\":2},{\"id\":\"f4ccc237-d703-4963-8112-cc38ae9d6b2a\",\"name\":\"if create thread\",\"type\":\"n8n-nodes-base.if\",\"position\":[980,280],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"7eadbf0d-f8ec-45cf-abf3-aafb8d7e16b4\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ $json.workflow.startThread }}\",\"rightValue\":\"\"},{\"id\":\"2f28e7dd-6473-4f85-a449-674e00b29b4d\",\"operator\":{\"type\":\"boolean\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.workflow.startThread }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"id\":\"ed9f2ed8-5266-42a3-9d47-621050e5bf97\",\"name\":\"Alert user that thread was created\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueRegularOutput\",\"position\":[1260,0],\"parameters\":{\"url\":\"={{ $json.response_url }}\",\"options\":{},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"responseFormat\":\"string\",\"bodyParametersJson\":\"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"üßµ Thread created on {{ $json.alerts_channel }}\\\"\\n}\\n]\\n}\"},\"retryOnFail\":false,\"typeVersion\":2},{\"id\":\"9904180a-e937-43fd-9b04-627e860d693a\",\"name\":\"Add debug info\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1540,60],\"parameters\":{\"text\":\"=<{{ $vars.instance_url }}/workflow/{{ $workflow.id }}/executions/{{ $execution.id }}|To debug entry point execution>\",\"select\":\"channel\",\"channelId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $json.channel }}\"},\"otherOptions\":{\"thread_ts\":{\"replyValues\":{\"thread_ts\":\"={{ $json.message.ts }}\"}}}},\"credentials\":{\"slackApi\":{\"id\":\"26\",\"name\":\"Cloudbot bot token\"}},\"typeVersion\":2},{\"id\":\"6b385f75-4ebf-46c8-a799-babdb6231f4e\",\"name\":\"Execute target workflow\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[1940,500],\"parameters\":{\"options\":{},\"workflowId\":\"={{ $json.commands.info.workflowId }}\"},\"typeVersion\":1},{\"id\":\"5fde8d57-6ef3-4b01-9422-16fd2f176c5d\",\"name\":\"Add thread info\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1760,320],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combinationMode\":\"multiplex\"},\"typeVersion\":2},{\"id\":\"c4892e34-53af-4d95-a3b6-ca16fdef1aa7\",\"name\":\"Handle other commands\",\"type\":\"n8n-nodes-base.switch\",\"position\":[640,620],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"help\",\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.command }}\",\"rightValue\":\"help\"}]},\"renameOutput\":true}]},\"options\":{\"fallbackOutput\":\"extra\"}},\"typeVersion\":3},{\"id\":\"7dabe06a-8d87-4e68-b8d9-53bf7f29a9ab\",\"name\":\"Set thread info\",\"type\":\"n8n-nodes-base.set\",\"position\":[1540,240],\"parameters\":{\"values\":{\"string\":[{\"name\":\"channel_id\",\"value\":\"={{ $json.channel }}\"},{\"name\":\"thread_ts\",\"value\":\"={{ $json.message.ts }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"id\":\"e56875c4-ce2b-4639-aabc-21f1562a3858\",\"name\":\"Unknown command\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[880,740],\"parameters\":{\"url\":\"={{ $json.response_url }}\",\"options\":{},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"responseFormat\":\"string\",\"bodyParametersJson\":\"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"ü§∑üèΩ‚Äç‚ôÇÔ∏è Sorry, unknown command `{{ $json.command }}`\\\"\\n}\\n]\\n}\"},\"typeVersion\":1},{\"id\":\"3fab88ce-4a80-483b-b558-12e111f16c98\",\"name\":\"Set vars\",\"type\":\"n8n-nodes-base.set\",\"position\":[-280,280],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"8fa0d712-1076-49b7-82da-e98390182ac6\",\"name\":\"command_text\",\"type\":\"string\",\"value\":\"={{ $json.body.text }}\"},{\"id\":\"ef82aa1f-2882-4970-b10a-86e7faef6562\",\"name\":\"user\",\"type\":\"string\",\"value\":\"={{ $json.body.user_name }}\"},{\"id\":\"633fe37e-850c-4e95-8728-f19ceb4afe76\",\"name\":\"response_url\",\"type\":\"string\",\"value\":\"={{ $json.body.response_url }}\"},{\"id\":\"bbab2bb9-3e90-41c4-b5be-8c7873c61707\",\"name\":\"request_token\",\"type\":\"string\",\"value\":\"={{ $json.body.token }}\"},{\"id\":\"3e6dd0e2-fec4-48cb-a44c-1342a8eb619c\",\"name\":\"command_name\",\"type\":\"string\",\"value\":\"={{ $json.body.command }}\"}]}},\"typeVersion\":3.3},{\"id\":\"99cab485-4099-4505-9c9e-33ea389818e5\",\"name\":\"Webhook to call for Slack command\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-480,280],\"webhookId\":\"a14585bb-b757-410e-a5b2-5f05a087b388\",\"parameters\":{\"path\":\"a14585bb-b757-410e-a5b2-5f05a087b388\",\"options\":{\"rawBody\":true,\"responseData\":\"Wait for it...\",\"binaryPropertyName\":\"data\"},\"httpMethod\":\"POST\"},\"typeVersion\":1.1},{\"id\":\"09dc7ecf-a577-427e-a193-ed29d260c5fe\",\"name\":\"Reply to user directly\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1460,900],\"parameters\":{\"url\":\"={{ $json.response_url }}\",\"options\":{},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"responseFormat\":\"string\",\"bodyParametersJson\":\"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"<{{ $json.instance_url }}workflow/{{ $workflow.id }}/executions/{{ $execution.id }}|To debug subworkflow execution>\\\"\\n}\\n]\\n}\"},\"typeVersion\":2,\"continueOnFail\":true},{\"id\":\"a38b3343-8e8e-4d6c-95ef-66efafdfa913\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1160,660],\"parameters\":{\"width\":1255.4495374151727,\"height\":655.2393233866135,\"content\":\"## Example subworkflow for command WITHOUT Slack thread..\\n\\n### Build this in a separate workflow\\n### and add the id to `commands` in **Set Config**\"},\"typeVersion\":1},{\"id\":\"87f764b3-135c-4dc3-8633-b58e2c3a4e2d\",\"name\":\"Command workflow trigger\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"disabled\":true,\"position\":[1220,1020],\"parameters\":{},\"typeVersion\":1},{\"id\":\"3a52d7e3-ef56-47db-844a-1efb6c20ad35\",\"name\":\"if has flag\",\"type\":\"n8n-nodes-base.if\",\"position\":[1400,1120],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d8478e87-6e7c-40ea-a28d-099a3896001b\",\"operator\":{\"type\":\"array\",\"operation\":\"contains\",\"rightType\":\"any\"},\"leftValue\":\"={{ $json.flags }}\",\"rightValue\":\"--full-info\"}]}},\"typeVersion\":2},{\"id\":\"78718555-e266-4f58-ab9d-6e78f50afac2\",\"name\":\"If matches env variable\",\"type\":\"n8n-nodes-base.if\",\"position\":[1620,1120],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"1ccb9f5d-0e7d-44f9-86e3-d5c0e15cb648\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.env.env }}\",\"rightValue\":\"prod\"}]}},\"typeVersion\":2},{\"id\":\"0ca15a51-2e56-4ef4-8be6-96f45ed17867\",\"name\":\"Found user\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2220,1120],\"parameters\":{\"url\":\"={{ $('Command workflow trigger').item.json.response_url }}\",\"options\":{},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"responseFormat\":\"string\",\"bodyParametersJson\":\"={{ $json.slack_message }}\"},\"typeVersion\":2,\"continueOnFail\":true},{\"id\":\"ad83305f-9ca5-428f-a731-9afe3a82258a\",\"name\":\"Format data into nice structure\",\"type\":\"n8n-nodes-base.code\",\"position\":[2040,1120],\"parameters\":{\"jsCode\":\"const user = {\\n  id: '1',\\n  email: 'mutasem@n8n.io',\\n  name: 'Mutasem Aldmour',\\n  username: 'mutasem',\\n  profile_url: 'https://n8n.io/creators/mutasem/',\\n}\\n\\nconst fields = [\\n    `*id:*\\\\n${user.id}`,\\n    `*email:*\\\\n${user.email}`,\\n    `*name:*\\\\n${user.name}`,\\n    `*urls:*\\\\n<${user.profile_url}|creator profile>`\\n];\\n\\n// remember no more than 10 fields per section\\nconst output = {\\n    \\\"blocks\\\":\\n    [\\n        {\\n            \\\"type\\\": \\\"section\\\",\\n            \\\"text\\\":\\n            {\\n                \\\"type\\\": \\\"mrkdwn\\\",\\n                \\\"text\\\": `User: *${user.username}*`\\n            }\\n        },\\n        {\\n            \\\"type\\\": \\\"section\\\",\\n            \\\"fields\\\": fields.map((text) => {\\n                    return {\\n                        \\\"type\\\": \\\"mrkdwn\\\",\\n                        text,\\n                    };\\n                })\\n        }\\n    ]\\n}\\n\\nreturn { slack_message: output };\"},\"typeVersion\":1},{\"id\":\"6bdbd120-68ac-46ad-bd34-c43d7a447be4\",\"name\":\"REPLACE ME WITH TRIGGER\",\"type\":\"n8n-nodes-base.set\",\"position\":[1240,1680],\"parameters\":{\"options\":{}},\"typeVersion\":3.3},{\"id\":\"e2b0b88d-be4a-4b66-be15-3e8c6052d0f7\",\"name\":\"Delete user here for example\",\"type\":\"n8n-nodes-base.postgres\",\"disabled\":true,\"position\":[1500,1800],\"parameters\":{\"table\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"=user\"},\"where\":{\"values\":[{\"value\":\"={{ $json.params[0] }}\",\"column\":\"username\"}]},\"schema\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"public\"},\"options\":{},\"operation\":\"deleteTable\",\"deleteCommand\":\"delete\"},\"typeVersion\":2.3},{\"id\":\"b0dc9a07-4957-4643-972b-49952d6fc001\",\"name\":\"Get user here for example\",\"type\":\"n8n-nodes-base.postgres\",\"disabled\":true,\"position\":[1840,1120],\"parameters\":{\"table\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"test\"},\"where\":{\"values\":[{\"value\":\"={{ $json.params[0] }}\",\"column\":\"username\"}]},\"schema\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"public\"},\"options\":{},\"operation\":\"select\"},\"typeVersion\":2.3},{\"id\":\"1f2eff56-a89b-4d6d-af8b-477c81c8bab3\",\"name\":\"Confirm user was deleted\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1720,1800],\"parameters\":{\"text\":\"Deleted user  ‚úÖ\",\"select\":\"channel\",\"channelId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $('Command workflow trigger').item.json.channel_id }}\"},\"otherOptions\":{\"thread_ts\":{\"replyValues\":{\"thread_ts\":\"={{ $('Command workflow trigger').item.json.thread_ts }}\"}}}},\"credentials\":{\"slackApi\":{\"id\":\"26\",\"name\":\"Cloudbot bot token\"}},\"typeVersion\":2},{\"id\":\"0c0d0487-a594-4e88-b777-21b4816115cd\",\"name\":\"Replying to thread\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1500,1580],\"parameters\":{\"text\":\"=<{{ $json.instance_url }}workflow/{{ $workflow.id }}/executions/{{ $execution.id }}|To debug subworkflow execution>\",\"select\":\"channel\",\"channelId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $json.channel_id }}\"},\"otherOptions\":{\"thread_ts\":{\"replyValues\":{\"thread_ts\":\"={{ $json.thread_ts }}\"}}}},\"credentials\":{\"slackApi\":{\"id\":\"26\",\"name\":\"Cloudbot bot token\"}},\"typeVersion\":2},{\"id\":\"2c055ef4-4c0a-475d-b521-30002a45950b\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1160,1380],\"parameters\":{\"width\":961.7738517807816,\"height\":589.0078772779973,\"content\":\"## Example subworkflow for command WITH Slack thread..\\n\\n### Build this in a second separate workflow\\n### and add the id to `commands` in **Set Config**\\n\\nUsed Edit Fields node here as trigger because you can only have one\\nExecute Workflow Trigger per workflow\"},\"typeVersion\":1},{\"id\":\"aec1b842-1219-4367-9238-3c7a118ce68f\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-80,460],\"parameters\":{\"color\":7,\"width\":150,\"height\":83.26656725254155,\"content\":\"### üëÜüèΩ Set all custom config here \"},\"typeVersion\":1},{\"id\":\"dd8f1a00-dfd4-4966-a76c-3c8e2a243bab\",\"name\":\"parse command\",\"type\":\"n8n-nodes-base.code\",\"position\":[560,280],\"parameters\":{\"jsCode\":\"const text = $input.first().json.command_text;\\nconst parts = text.split(' ');\\n\\n\\n// GET COMMAND\\n// for example /cloudbot info mutasem\\n// should return \\\"info\\\"\\nconst command = parts[0];\\n\\n\\n// GET FLAGS \\n// for example /cloudbot info mutasem --test --flag\\n// should return ['--test', '--flag']\\nconst flags = parts.filter((part) => part.startsWith('--'));\\n\\n\\n// GET PARAMS\\n// for example /cloudbot info mutasem test\\n// should return [\\\"mutasem\\\", \\\"test\\\"]\\nlet params = parts\\n  .filter((part, i) => i > 0 && !part.startsWith('--'));\\nparams = params.filter((param, i) => {\\n  if (param === '-e') {\\n    return false;\\n  }\\n  if (params[i - 1] === '-e') {\\n    return false;\\n  }\\n\\n  return true;\\n});\\n\\n\\n// GET ENV VARS\\n// for example /cloudbot info mutasem -e env=prod\\n// should return {env: \\\"prod\\\"}\\nconst env = parts.filter((val, i) => {\\n  return i > 0 && parts[i - 1] === '-e';\\n})\\n  .reduce((accu, opt) => {\\n  if (!opt.includes('=')) {\\n    return accu;\\n  }\\n\\n  const key = opt.split('=')[0];\\n  const val = opt.split('=')[1];\\n  \\n  accu[key] = clean(val);\\n  return accu;\\n}, {});\\n\\n// Add workflow to run\\nconst commands = $input.first().json.commands;\\nlet workflow;\\nif (commands[command]) {\\n  workflow = commands[command];\\n}\\n\\nreturn {\\n  ...$input.first().json,\\n  command,\\n  flags,\\n  env,\\n  params,\\n  workflow,\\n}\\n\\nfunction clean(str) {\\n  return str.replaceAll(`‚Äò`, '\\\\'').replaceAll('‚Äú', '\\\"').replaceAll('‚Äù', '\\\"').replaceAll('‚Äô', '\\\\'');\\n}\"},\"typeVersion\":1},{\"id\":\"22b8502c-dec3-4456-9947-639761517881\",\"name\":\"Validate webhook signature\",\"type\":\"n8n-nodes-base.code\",\"position\":[100,280],\"parameters\":{\"jsCode\":\"const SIGNING_SECRET = $input.first().json.slack_secret_signature;\\nconst item = $('Webhook to call for Slack command').first();\\n\\nif (!item.binary) {\\n  throw new Error('Missing binary data');\\n}\\n\\nconst crypto = require('crypto');\\nconst { binary: { data } } = item;\\n\\nif (\\n  !item.json.headers['x-slack-request-timestamp'] ||\\n  Math.abs(\\n    Math.floor(new Date().getTime() / 1000) -\\n      +item.json.headers['x-slack-request-timestamp']\\n  ) > 300\\n) {\\n  throw new Error('Unauthorized, request not fresh');\\n}\\n\\nconst rawBody = Buffer.from(data.data, 'base64').toString()\\n\\n// compute the basestring\\nconst baseStr = `v0:${item.json.headers['x-slack-request-timestamp']}:${rawBody}`;\\n\\n// extract the received signature from the request headers\\nconst receivedSignature = item.json.headers['x-slack-signature'];\\n\\nconst expectedSignature = `v0=${crypto.createHmac('sha256', SIGNING_SECRET)\\n.update(baseStr, 'utf8')\\n.digest('hex')}`;\\n\\n// match the two signatures\\nif (expectedSignature !== receivedSignature) {\\nthrow new Error('Unauthorized, umatched signatures');\\n}\\n\\nreturn $input.all();\"},\"typeVersion\":2}],\"pinData\":{},\"connections\":{\"Set vars\":{\"main\":[[{\"node\":\"Set config\",\"type\":\"main\",\"index\":0}]]},\"Set config\":{\"main\":[[{\"node\":\"Validate webhook signature\",\"type\":\"main\",\"index\":0}]]},\"if has flag\":{\"main\":[[{\"node\":\"If matches env variable\",\"type\":\"main\",\"index\":0}]]},\"Start thread\":{\"main\":[[{\"node\":\"Add debug info\",\"type\":\"main\",\"index\":0},{\"node\":\"Set thread info\",\"type\":\"main\",\"index\":0}]]},\"parse command\":{\"main\":[[{\"node\":\"if has workflow\",\"type\":\"main\",\"index\":0}]]},\"Add thread info\":{\"main\":[[{\"node\":\"Execute target workflow\",\"type\":\"main\",\"index\":0}]]},\"Set thread info\":{\"main\":[[{\"node\":\"Add thread info\",\"type\":\"main\",\"index\":0}]]},\"if has workflow\":{\"main\":[[{\"node\":\"if create thread\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Handle other commands\",\"type\":\"main\",\"index\":0}]]},\"if create thread\":{\"main\":[[{\"node\":\"Start thread\",\"type\":\"main\",\"index\":0},{\"node\":\"Alert user that thread was created\",\"type\":\"main\",\"index\":0},{\"node\":\"Add thread info\",\"type\":\"main\",\"index\":1}],[{\"node\":\"Send debug url\",\"type\":\"main\",\"index\":0},{\"node\":\"Execute target workflow\",\"type\":\"main\",\"index\":0}]]},\"Validate Slack token\":{\"main\":[[{\"node\":\"Reply to user that command was received\",\"type\":\"main\",\"index\":0},{\"node\":\"parse command\",\"type\":\"main\",\"index\":0}]]},\"Handle other commands\":{\"main\":[[{\"node\":\"send help\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Unknown command\",\"type\":\"main\",\"index\":0}]]},\"If matches env variable\":{\"main\":[[{\"node\":\"Get user here for example\",\"type\":\"main\",\"index\":0}]]},\"REPLACE ME WITH TRIGGER\":{\"main\":[[{\"node\":\"Replying to thread\",\"type\":\"main\",\"index\":0},{\"node\":\"Delete user here for example\",\"type\":\"main\",\"index\":0}]]},\"Command workflow trigger\":{\"main\":[[{\"node\":\"Reply to user directly\",\"type\":\"main\",\"index\":0},{\"node\":\"if has flag\",\"type\":\"main\",\"index\":0}]]},\"Get user here for example\":{\"main\":[[{\"node\":\"Format data into nice structure\",\"type\":\"main\",\"index\":0}]]},\"Validate webhook signature\":{\"main\":[[{\"node\":\"Validate Slack token\",\"type\":\"main\",\"index\":0}]]},\"Delete user here for example\":{\"main\":[[{\"node\":\"Confirm user was deleted\",\"type\":\"main\",\"index\":0}]]},\"Format data into nice structure\":{\"main\":[[{\"node\":\"Found user\",\"type\":\"main\",\"index\":0}]]},\"Webhook to call for Slack command\":{\"main\":[[{\"node\":\"Set vars\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Use case\n\nSlackbots are super powerful. At n8n, we have been using them to get a lot done.. But it can become hard to manage and maintain many different operations that a workflow can do.\n\nThis is the base workflow we use for our most powerful internal Slackbots. They handle a lot from running e2e tests for Github branch to deleting a user. By splitting the workflow into many subworkflows, we are able to handle each command seperately, making it easier to debug as well as support new usecases.\n\nIn this template, you can find eveything to setup your own Slackbot (and I made it simple, there's only one node to configure üòâ). After that, you need to build your commands directly.\n\nThis bot can create a new thread on an alerts channel and respond there.  \n![Screenshot 20240301 at 07.54.07.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_07_54_07_f662495e33.png)  \n![Screenshot 20240301 at 08.03.33.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_03_33_a479113dbe.png)\n\nOr reply directly to the user.  \n![Screenshot 20240301 at 07.53.41.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_07_53_41_6efd9f7ccf.png)\n\nIt responds for help request to return a help page.  \n![Screenshot 20240301 at 08.16.40.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_16_40_6ede8f7bb7.png)\n\nIt automatically handles unknown commands.  \n![Screenshot 20240301 at 08.16.54.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_16_54_29e80d395d.png)\n\nIt also supports flags and environment variables. For example `/cloudbot-test info mutasem --full-info -e env=prod` would give you the following info, when calling subworkflow.  \n![Screenshot 20240301 at 08.34.31.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_34_31_32223e8495.png)\n\n## How to setup\n\n  1. Add Slack command and point it up to the webhook. For example.  \n![Screenshot 20240229 at 22.09.40.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_02_29_at_22_09_40_6bd557f60a.png)\n  2. Add the following to the **Set config** node\n\n\n  * `alerts_channel` with alerts channel to start threads on\n  * `instance_url` with this instance url to make it easy to debug\n  * `slack_token` with slack bot token to validate request\n  * `slack_secret_signature` with slack secret signature to validate request\n  * `help_docs_url` with help url to help users understand the commands\n\n\n  1. Build other workflows to call and add them to `commands` in **Set Config**. Each command must be mapped to a workflow id with an `Execute Workflow Trigger` node\n  2. Activate workflow üöÄ\n\n\n\n## How to adjust\n\n  1. Add your own commands.\n  2. Depending on your need, you might need to lock down who can call this.\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>Use case</h2>\n<p>Slackbots are super powerful. At n8n, we have been using them to get a lot done.. But it can become hard to manage and maintain many different operations that a workflow can do.</p>\n<p>This is the base workflow we use for our most powerful internal Slackbots. They handle a lot from running e2e tests for Github branch to deleting a user. By splitting the workflow into many subworkflows, we are able to handle each command seperately, making it easier to debug as well as support new usecases.</p>\n<p>In this template, you can find eveything to setup your own Slackbot (and I made it simple, there's only one node to configure üòâ). After that, you need to build your commands directly.</p>\n<p>This bot can create a new thread on an alerts channel and respond there.<br>\n<img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_07_54_07_f662495e33.png\" alt=\"Screenshot 20240301 at 07.54.07.png\"><br>\n<img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_03_33_a479113dbe.png\" alt=\"Screenshot 20240301 at 08.03.33.png\"></p>\n<p>Or reply directly to the user.<br>\n<img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_07_53_41_6efd9f7ccf.png\" alt=\"Screenshot 20240301 at 07.53.41.png\"></p>\n<p>It responds for help request to return a help page.<br>\n<img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_16_40_6ede8f7bb7.png\" alt=\"Screenshot 20240301 at 08.16.40.png\"></p>\n<p>It automatically handles unknown commands.<br>\n<img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_16_54_29e80d395d.png\" alt=\"Screenshot 20240301 at 08.16.54.png\"></p>\n<p>It also supports flags and environment variables. For example <code>/cloudbot-test info mutasem --full-info -e env=prod</code> would give you the following info, when calling subworkflow.<br>\n<img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_34_31_32223e8495.png\" alt=\"Screenshot 20240301 at 08.34.31.png\"></p>\n<h2>How to setup</h2>\n<ol>\n<li>Add Slack command and point it up to the webhook. For example.<br>\n<img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_02_29_at_22_09_40_6bd557f60a.png\" alt=\"Screenshot 20240229 at 22.09.40.png\"></li>\n<li>Add the following to the <strong>Set config</strong> node</li>\n</ol>\n<ul>\n<li><code>alerts_channel</code> with alerts channel to start threads on</li>\n<li><code>instance_url</code> with this instance url to make it easy to debug</li>\n<li><code>slack_token</code> with slack bot token to validate request</li>\n<li><code>slack_secret_signature</code> with slack secret signature to validate request</li>\n<li><code>help_docs_url</code> with help url to help users understand the commands</li>\n</ul>\n<ol>\n<li>Build other workflows to call and add them to <code>commands</code> in <strong>Set Config</strong>. Each command must be mapped to a workflow id with an <code>Execute Workflow Trigger</code> node</li>\n<li>Activate workflow üöÄ</li>\n</ol>\n<h2>How to adjust</h2>\n<ol>\n<li>Add your own commands.</li>\n<li>Depending on your need, you might need to lock down who can call this.</li>\n</ol>\n</div><!--]-->",
  "readme_zh": "## ‰ΩøÁî®Âú∫ÊôØ\n\nSlackÊú∫Âô®‰∫∫ÂäüËÉΩÊûÅÂÖ∂Âº∫Â§ß„ÄÇÂú®n8nÔºåÊàë‰ª¨‰∏ÄÁõ¥Âà©Áî®ÂÆÉ‰ª¨È´òÊïàÂÆåÊàêÂêÑÁ±ª‰ªªÂä°„ÄÇ‰ΩÜÈöèÁùÄÂ∑•‰ΩúÊµÅÂäüËÉΩÊó•ÁõäÂ§çÊùÇÔºåÁÆ°ÁêÜÁª¥Êä§Â§ö‰∏™Êìç‰Ωú‰ºöÂèòÂæóÂõ∞Èöæ„ÄÇ\n\nËøôÊòØÊàë‰ª¨ÂÜÖÈÉ®ÊúÄÂº∫Â§ßSlackÊú∫Âô®‰∫∫ÁöÑÂü∫Á°ÄÂ∑•‰ΩúÊµÅÊ®°ÊùøÔºåÂèØÂ§ÑÁêÜ‰ªéGithubÂàÜÊîØÁ´ØÂà∞Á´ØÊµãËØïÂà∞Âà†Èô§Áî®Êà∑Á≠âÂêÑÁ±ªÊåá‰ª§„ÄÇÈÄöËøáÂ∞ÜÂ∑•‰ΩúÊµÅÊãÜÂàÜ‰∏∫Â§ö‰∏™Â≠êÊµÅÁ®ãÔºåÊàë‰ª¨ËÉΩÁã¨Á´ãÂ§ÑÁêÜÊØèÊù°Êåá‰ª§ÔºåÊó¢‰æø‰∫éË∞ÉËØï‰πüÊòì‰∫éÊâ©Â±ïÊñ∞ÂäüËÉΩ„ÄÇ\n\nÊú¨Ê®°ÊùøÂåÖÂê´Êê≠Âª∫‰∏ìÂ±ûSlackÊú∫Âô®‰∫∫ÁöÑÂÆåÊï¥ÈÖçÁΩÆÔºàÂ∑≤ÂÅöÁÆÄÂåñÔºå‰ªÖÈúÄÈÖçÁΩÆ‰∏Ä‰∏™ËäÇÁÇπüòâÔºâÔºåÂêéÁª≠Âè™ÈúÄ‰∏ìÊ≥®ÊûÑÂª∫ÂÖ∑‰ΩìÊåá‰ª§„ÄÇ\n\nËØ•Êú∫Âô®‰∫∫ÊîØÊåÅÂú®ÂëäË≠¶È¢ëÈÅìÂàõÂª∫Êñ∞ËØùÈ¢òÂπ∂ÂìçÂ∫îÔºö  \n![ÂëäË≠¶È¢ëÈÅìÂìçÂ∫îÊà™Âõæ](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_07_54_07_f662495e33.png)  \n![ÂëäË≠¶È¢ëÈÅìÂìçÂ∫îÊà™Âõæ2](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_03_33_a479113dbe.png)\n\n‰πüÂèØÁõ¥Êé•ÁßÅ‰ø°ÂõûÂ§çÁî®Êà∑Ôºö  \n![ÁßÅ‰ø°ÂìçÂ∫îÊà™Âõæ](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_07_53_41_6efd9f7ccf.png)\n\nËá™Âä®ÂìçÂ∫îÂ∏ÆÂä©ËØ∑Ê±ÇËøîÂõûËØ¥ÊòéÈ°µÔºö  \n![Â∏ÆÂä©ÊñáÊ°£Êà™Âõæ](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_16_40_6ede8f7bb7.png)\n\nÊô∫ËÉΩÂ§ÑÁêÜÊú™Áü•Êåá‰ª§Ôºö  \n![Êú™Áü•Êåá‰ª§ÊèêÁ§∫Êà™Âõæ](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_16_54_29e80d395d.png)\n\nÊîØÊåÅÂèÇÊï∞Ê†áËÆ∞‰∏éÁéØÂ¢ÉÂèòÈáè„ÄÇ‰æãÂ¶ÇÊâßË°å`/cloudbot-test info mutasem --full-info -e env=prod`Êó∂ÔºåË∞ÉÁî®Â≠êÊµÅÁ®ãÂ∞ÜËøîÂõûÔºö  \n![ÂèÇÊï∞Ë∞ÉÁî®Á§∫‰æãÊà™Âõæ](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_03_01_at_08_34_31_32223e8495.png)\n\n## ÈÖçÁΩÆÊåáÂçó\n\n1. Ê∑ªÂä†SlackÊåá‰ª§Âπ∂ÈÖçÁΩÆwebhookÊåáÂêë  \n![Êåá‰ª§ÈÖçÁΩÆÊà™Âõæ](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_02_29_at_22_09_40_6bd557f60a.png)\n\n2. Âú®**Set config**ËäÇÁÇπÈÖçÁΩÆ‰ª•‰∏ãÂèÇÊï∞Ôºö\n   * `alerts_channel` - ËØùÈ¢òÂëäË≠¶È¢ëÈÅì\n   * `instance_url` - ÂÆû‰æãÂú∞ÂùÄÔºà‰æø‰∫éË∞ÉËØïÔºâ\n   * `slack_token` - Êú∫Âô®‰∫∫‰ª§ÁâåÔºàËØ∑Ê±ÇÈ™åËØÅÔºâ\n   * `slack_secret_signature` - Á≠æÂêçÂØÜÈí•ÔºàËØ∑Ê±ÇÈ™åËØÅÔºâ\n   * `help_docs_url` - Â∏ÆÂä©ÊñáÊ°£ÈìæÊé•\n\n3. ÂàõÂª∫ÂÖ∂‰ªñÂ∑•‰ΩúÊµÅÂπ∂Ê∑ªÂä†Âà∞**Set Config**ÁöÑ`commands`‰∏≠ÔºåÊØè‰∏™Êåá‰ª§ÈúÄÈÄöËøá`Execute Workflow Trigger`ËäÇÁÇπÂÖ≥ËÅîÂØπÂ∫îÂ∑•‰ΩúÊµÅID\n\n4. ÊøÄÊ¥ªÂ∑•‰ΩúÊµÅ üöÄ\n\n## ÂÆöÂà∂Âª∫ËÆÆ\n\n1. Ê∑ªÂä†Ëá™ÂÆö‰πâÊåá‰ª§\n2. Ê†πÊçÆÈúÄÊ±ÇËÆæÁΩÆÊåá‰ª§Ë∞ÉÁî®ÊùÉÈôê",
  "title_zh": "ü§ñ Âü∫‰∫én8nÁöÑÈ´òÁ∫ßSlackbot",
  "publish_date_zh": "ÊúÄÂêé‰∏ÄÊ¨°Êõ¥Êñ∞‰∫é‰∏ÄÂπ¥Ââç",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"id\": \"8e0a3745-348b-42db-82cc-55676c897ad7\",\n      \"name\": \"Start thread\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        1260,\n        180\n      ],\n      \"parameters\": {\n        \"text\": \"=üßµ Got request to `{{ $json.command }}` from @{{$json.user}}\",\n        \"select\": \"channel\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $json.alerts_channel }}\"\n        },\n        \"otherOptions\": {\n          \"link_names\": true\n        }\n      },\n      \"credentials\": {\n        \"slackApi\": {\n          \"id\": \"26\",\n          \"name\": \"Cloudbot bot token\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ee413d6c-dad3-4e57-b08d-ffd0f84c682e\",\n      \"name\": \"send help\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        880,\n        560\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.response_url }}\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"responseFormat\": \"string\",\n        \"bodyParametersJson\": \"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"‚ÑπÔ∏è <{{ $json.help_docs_url }}|You can find help page here>\\\"\\n}\\n]\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"47c146f9-1223-46a7-bfd6-0fa6ff701efe\",\n      \"name\": \"Validate Slack token\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        320,\n        280\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.slack_token }}\",\n              \"value2\": \"={{ $json.request_token }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7733505c-d02c-4cb2-be78-f2272e5b7d6e\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 549.1826144791862,\n        \"height\": 326.46772464213774,\n        \"content\": \"## üë®‚Äçüé§ ÈÖçÁΩÆÊ≠•È™§\\n1. Ê∑ªÂä†SlackÊñúÊù†ÂëΩ‰ª§Âπ∂Â∞ÜÂÖ∂ÊåáÂêëËØ•webhookÂú∞ÂùÄ\\n2. Âú®**ÈÖçÁΩÆËÆæÁΩÆ**ËäÇÁÇπ‰∏≠Ê∑ªÂä†‰ª•‰∏ãÂèÇÊï∞Ôºö\\n- `alerts_channel` ËÆæÁΩÆÂëäË≠¶Ê∂àÊÅØÁöÑÂàùÂßãÂèëÂ∏ÉÈ¢ëÈÅì\\n- `instance_url` ÈÖçÁΩÆÂΩìÂâçÂÆû‰æãURL‰æø‰∫éË∞ÉËØï\\n- `slack_token` Â°´ÂÖ•SlackÊú∫Âô®‰∫∫‰ª§ÁâåÁî®‰∫éËØ∑Ê±ÇÈ™åËØÅ\\n- `slack_secret_signature` ËÆæÁΩÆSlackÁ≠æÂêçÂØÜÈí•Áî®‰∫éËØ∑Ê±ÇÈ™åËØÅ\\n- `help_docs_url` Ê∑ªÂä†Â∏ÆÂä©ÊñáÊ°£ÈìæÊé•Êñπ‰æøÁî®Êà∑ÁêÜËß£ÂëΩ‰ª§\\n3. ÊûÑÂª∫ÂÖ∂‰ªñÂ∑•‰ΩúÊµÅÂπ∂ÈÄöËøá**ÈÖçÁΩÆËÆæÁΩÆ**ËäÇÁÇπÁöÑ`commands`ÂèÇÊï∞Ê≥®ÂÜåÔºàÊØè‰∏™ÂëΩ‰ª§ÈúÄÈÄöËøá`ÊâßË°åÂ∑•‰ΩúÊµÅËß¶ÂèëÂô®`ËäÇÁÇπÂÖ≥ËÅîÂØπÂ∫îÂ∑•‰ΩúÊµÅIDÔºâ\\n4. ÊøÄÊ¥ªÂ∑•‰ΩúÊµÅ üöÄ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"30355072-5d75-4deb-af67-909ba59e6eb3\",\n      \"name\": \"Reply to user that command was received\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        500,\n        40\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.response_url }}\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"responseFormat\": \"string\",\n        \"bodyParametersJson\": \"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"‚ÑπÔ∏è Got command `{{ $json.command_name }} {{ $json.command_text }}`\\\"\\n}\\n]\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a2217c45-700e-4923-96e4-455a733bc1e4\",\n      \"name\": \"if has workflow\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        740,\n        280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"d0a35e4f-3141-4e94-bb1a-fe7747a58dfc\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.workflow }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7ff12aa4-680f-42af-aa2f-c9dd6a733976\",\n      \"name\": \"Set config\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -100,\n        280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ba8fd958-188a-4e27-bdf1-928de8ae7d4f\",\n              \"name\": \"commands\",\n              \"type\": \"object\",\n              \"value\": \"={{\\n{\\n  \\\"info\\\": { workflowId: 142, startThread: false },\\n  \\\"delete-user\\\": { workflowId: \\\"pTh9HMZVYcQNXypJ\\\" }\\n}\\n}}\"\n            },\n            {\n              \"id\": \"105d2881-72b7-4547-a076-83ddb0966256\",\n              \"name\": \"alerts_channel\",\n              \"type\": \"string\",\n              \"value\": \"#adore_bot_test\"\n            },\n            {\n              \"id\": \"9672bea2-3a6a-4162-9966-107bf2ddbee5\",\n              \"name\": \"instance_url\",\n              \"type\": \"string\",\n              \"value\": \"https://x.app.n8n.cloud/\"\n            },\n            {\n              \"id\": \"52b53b37-5f69-4fb8-9569-f62788d91af1\",\n              \"name\": \"slack_token\",\n              \"type\": \"string\",\n              \"value\": \"FILL_TOKEN_HERE\"\n            },\n            {\n              \"id\": \"4d8d06f2-f1a5-4eb2-a559-42d98ceddffb\",\n              \"name\": \"slack_secret_signature\",\n              \"type\": \"string\",\n              \"value\": \"FILL_SECRET_HERE\"\n            },\n            {\n              \"id\": \"c2c7de20-a264-495e-934e-dda1a0bc64b9\",\n              \"name\": \"help_docs_url\",\n              \"type\": \"string\",\n              \"value\": \"ADD_LINK_HERE\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"4c730be9-d3f5-45ee-8f2b-b6bfd685ea78\",\n      \"name\": \"Send debug url\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        1260,\n        440\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.response_url }}\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"responseFormat\": \"string\",\n        \"bodyParametersJson\": \"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"<{{ $json.instance_url }}/workflow/{{ $workflow.id }}/executions/{{ $execution.id }}|To debug entry point execution>\\\"\\n}\\n]\\n}\"\n      },\n      \"retryOnFail\": false,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f4ccc237-d703-4963-8112-cc38ae9d6b2a\",\n      \"name\": \"if create thread\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        980,\n        280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"7eadbf0d-f8ec-45cf-abf3-aafb8d7e16b4\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.workflow.startThread }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"2f28e7dd-6473-4f85-a449-674e00b29b4d\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.workflow.startThread }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ed9f2ed8-5266-42a3-9d47-621050e5bf97\",\n      \"name\": \"Alert user that thread was created\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        1260,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.response_url }}\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"responseFormat\": \"string\",\n        \"bodyParametersJson\": \"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"üßµ Thread created on {{ $json.alerts_channel }}\\\"\\n}\\n]\\n}\"\n      },\n      \"retryOnFail\": false,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9904180a-e937-43fd-9b04-627e860d693a\",\n      \"name\": \"Add debug info\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        1540,\n        60\n      ],\n      \"parameters\": {\n        \"text\": \"=<{{ $vars.instance_url }}/workflow/{{ $workflow.id }}/executions/{{ $execution.id }}|To debug entry point execution>\",\n        \"select\": \"channel\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.channel }}\"\n        },\n        \"otherOptions\": {\n          \"thread_ts\": {\n            \"replyValues\": {\n              \"thread_ts\": \"={{ $json.message.ts }}\"\n            }\n          }\n        }\n      },\n      \"credentials\": {\n        \"slackApi\": {\n          \"id\": \"26\",\n          \"name\": \"Cloudbot bot token\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6b385f75-4ebf-46c8-a799-babdb6231f4e\",\n      \"name\": \"Execute target workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        1940,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"workflowId\": \"={{ $json.commands.info.workflowId }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5fde8d57-6ef3-4b01-9422-16fd2f176c5d\",\n      \"name\": \"Add thread info\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1760,\n        320\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"multiplex\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c4892e34-53af-4d95-a3b6-ca16fdef1aa7\",\n      \"name\": \"Handle other commands\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        640,\n        620\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"help\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.command }}\",\n                    \"rightValue\": \"help\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"7dabe06a-8d87-4e68-b8d9-53bf7f29a9ab\",\n      \"name\": \"Set thread info\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1540,\n        240\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"channel_id\",\n              \"value\": \"={{ $json.channel }}\"\n            },\n            {\n              \"name\": \"thread_ts\",\n              \"value\": \"={{ $json.message.ts }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e56875c4-ce2b-4639-aabc-21f1562a3858\",\n      \"name\": \"Unknown command\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        880,\n        740\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.response_url }}\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"responseFormat\": \"string\",\n        \"bodyParametersJson\": \"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"ü§∑üèΩ‚Äç‚ôÇÔ∏è Sorry, unknown command `{{ $json.command }}`\\\"\\n}\\n]\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3fab88ce-4a80-483b-b558-12e111f16c98\",\n      \"name\": \"Set vars\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -280,\n        280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"8fa0d712-1076-49b7-82da-e98390182ac6\",\n              \"name\": \"command_text\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.text }}\"\n            },\n            {\n              \"id\": \"ef82aa1f-2882-4970-b10a-86e7faef6562\",\n              \"name\": \"user\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.user_name }}\"\n            },\n            {\n              \"id\": \"633fe37e-850c-4e95-8728-f19ceb4afe76\",\n              \"name\": \"response_url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.response_url }}\"\n            },\n            {\n              \"id\": \"bbab2bb9-3e90-41c4-b5be-8c7873c61707\",\n              \"name\": \"request_token\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.token }}\"\n            },\n            {\n              \"id\": \"3e6dd0e2-fec4-48cb-a44c-1342a8eb619c\",\n              \"name\": \"command_name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.command }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"99cab485-4099-4505-9c9e-33ea389818e5\",\n      \"name\": \"Webhook to call for Slack command\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -480,\n        280\n      ],\n      \"webhookId\": \"a14585bb-b757-410e-a5b2-5f05a087b388\",\n      \"parameters\": {\n        \"path\": \"a14585bb-b757-410e-a5b2-5f05a087b388\",\n        \"options\": {\n          \"rawBody\": true,\n          \"responseData\": \"Wait for it...\",\n          \"binaryPropertyName\": \"data\"\n        },\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"09dc7ecf-a577-427e-a193-ed29d260c5fe\",\n      \"name\": \"Reply to user directly\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1460,\n        900\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.response_url }}\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"responseFormat\": \"string\",\n        \"bodyParametersJson\": \"={\\n\\\"attachments\\\": [\\n{\\n\\\"text\\\": \\\"<{{ $json.instance_url }}workflow/{{ $workflow.id }}/executions/{{ $execution.id }}|To debug subworkflow execution>\\\"\\n}\\n]\\n}\"\n      },\n      \"typeVersion\": 2,\n      \"continueOnFail\": true\n    },\n    {\n      \"id\": \"a38b3343-8e8e-4d6c-95ef-66efafdfa913\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1160,\n        660\n      ],\n      \"parameters\": {\n        \"width\": 1255.4495374151727,\n        \"height\": 655.2393233866135,\n        \"content\": \"## Êó†SlackÁ∫øÁ®ãÂëΩ‰ª§ÁöÑÁ§∫‰æãÂ≠êÊµÅÁ®ã\\n\\n### ËØ∑Âú®‰∏Ä‰∏™Áã¨Á´ãÁöÑÂ∑•‰ΩúÊµÅ‰∏≠ÊûÑÂª∫Ê≠§ÊµÅÁ®ã\\n### Âπ∂Â∞ÜÊµÅÁ®ãIDÊ∑ªÂä†Âà∞**ËÆæÁΩÆÈÖçÁΩÆ**‰∏≠ÁöÑ`commands`ÈÉ®ÂàÜ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"87f764b3-135c-4dc3-8633-b58e2c3a4e2d\",\n      \"name\": \"Command workflow trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"disabled\": true,\n      \"position\": [\n        1220,\n        1020\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3a52d7e3-ef56-47db-844a-1efb6c20ad35\",\n      \"name\": \"if has flag\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1400,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"d8478e87-6e7c-40ea-a28d-099a3896001b\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"contains\",\n                \"rightType\": \"any\"\n              },\n              \"leftValue\": \"={{ $json.flags }}\",\n              \"rightValue\": \"--full-info\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"78718555-e266-4f58-ab9d-6e78f50afac2\",\n      \"name\": \"If matches env variable\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1620,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"1ccb9f5d-0e7d-44f9-86e3-d5c0e15cb648\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.env.env }}\",\n              \"rightValue\": \"prod\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0ca15a51-2e56-4ef4-8be6-96f45ed17867\",\n      \"name\": \"Found user\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2220,\n        1120\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('Command workflow trigger').item.json.response_url }}\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"responseFormat\": \"string\",\n        \"bodyParametersJson\": \"={{ $json.slack_message }}\"\n      },\n      \"typeVersion\": 2,\n      \"continueOnFail\": true\n    },\n    {\n      \"id\": \"ad83305f-9ca5-428f-a731-9afe3a82258a\",\n      \"name\": \"Format data into nice structure\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2040,\n        1120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const user = {\\n  id: '1',\\n  email: 'mutasem@n8n.io',\\n  name: 'Mutasem Aldmour',\\n  username: 'mutasem',\\n  profile_url: 'https://n8n.io/creators/mutasem/',\\n}\\n\\nconst fields = [\\n    `*id:*\\\\n${user.id}`,\\n    `*email:*\\\\n${user.email}`,\\n    `*name:*\\\\n${user.name}`,\\n    `*urls:*\\\\n<${user.profile_url}|creator profile>`\\n];\\n\\n// remember no more than 10 fields per section\\nconst output = {\\n    \\\"blocks\\\":\\n    [\\n        {\\n            \\\"type\\\": \\\"section\\\",\\n            \\\"text\\\":\\n            {\\n                \\\"type\\\": \\\"mrkdwn\\\",\\n                \\\"text\\\": `User: *${user.username}*`\\n            }\\n        },\\n        {\\n            \\\"type\\\": \\\"section\\\",\\n            \\\"fields\\\": fields.map((text) => {\\n                    return {\\n                        \\\"type\\\": \\\"mrkdwn\\\",\\n                        text,\\n                    };\\n                })\\n        }\\n    ]\\n}\\n\\nreturn { slack_message: output };\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6bdbd120-68ac-46ad-bd34-c43d7a447be4\",\n      \"name\": \"REPLACE ME WITH TRIGGER\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1240,\n        1680\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"e2b0b88d-be4a-4b66-be15-3e8c6052d0f7\",\n      \"name\": \"Delete user here for example\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"disabled\": true,\n      \"position\": [\n        1500,\n        1800\n      ],\n      \"parameters\": {\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"=user\"\n        },\n        \"where\": {\n          \"values\": [\n            {\n              \"value\": \"={{ $json.params[0] }}\",\n              \"column\": \"username\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"public\"\n        },\n        \"options\": {},\n        \"operation\": \"deleteTable\",\n        \"deleteCommand\": \"delete\"\n      },\n      \"typeVersion\": 2.3\n    },\n    {\n      \"id\": \"b0dc9a07-4957-4643-972b-49952d6fc001\",\n      \"name\": \"Get user here for example\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"disabled\": true,\n      \"position\": [\n        1840,\n        1120\n      ],\n      \"parameters\": {\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"test\"\n        },\n        \"where\": {\n          \"values\": [\n            {\n              \"value\": \"={{ $json.params[0] }}\",\n              \"column\": \"username\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"public\"\n        },\n        \"options\": {},\n        \"operation\": \"select\"\n      },\n      \"typeVersion\": 2.3\n    },\n    {\n      \"id\": \"1f2eff56-a89b-4d6d-af8b-477c81c8bab3\",\n      \"name\": \"Confirm user was deleted\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        1720,\n        1800\n      ],\n      \"parameters\": {\n        \"text\": \"Deleted user  ‚úÖ\",\n        \"select\": \"channel\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $('Command workflow trigger').item.json.channel_id }}\"\n        },\n        \"otherOptions\": {\n          \"thread_ts\": {\n            \"replyValues\": {\n              \"thread_ts\": \"={{ $('Command workflow trigger').item.json.thread_ts }}\"\n            }\n          }\n        }\n      },\n      \"credentials\": {\n        \"slackApi\": {\n          \"id\": \"26\",\n          \"name\": \"Cloudbot bot token\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0c0d0487-a594-4e88-b777-21b4816115cd\",\n      \"name\": \"Replying to thread\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        1500,\n        1580\n      ],\n      \"parameters\": {\n        \"text\": \"=<{{ $json.instance_url }}workflow/{{ $workflow.id }}/executions/{{ $execution.id }}|To debug subworkflow execution>\",\n        \"select\": \"channel\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.channel_id }}\"\n        },\n        \"otherOptions\": {\n          \"thread_ts\": {\n            \"replyValues\": {\n              \"thread_ts\": \"={{ $json.thread_ts }}\"\n            }\n          }\n        }\n      },\n      \"credentials\": {\n        \"slackApi\": {\n          \"id\": \"26\",\n          \"name\": \"Cloudbot bot token\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2c055ef4-4c0a-475d-b521-30002a45950b\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1160,\n        1380\n      ],\n      \"parameters\": {\n        \"width\": 961.7738517807816,\n        \"height\": 589.0078772779973,\n        \"content\": \"## Á§∫‰æãÂ≠êÊµÅÁ®ãÔºöÁî®‰∫éÂ∏¶SlackÁ∫øÁ®ãÁöÑÂëΩ‰ª§\\n\\n### Âú®Á¨¨‰∫å‰∏™Áã¨Á´ãÁöÑÂ∑•‰ΩúÊµÅ‰∏≠ÊûÑÂª∫Ê≠§ÊµÅÁ®ã\\n### Âπ∂Â∞ÜIDÊ∑ªÂä†Âà∞**ËÆæÁΩÆÈÖçÁΩÆ**‰∏≠ÁöÑ`commands`ÈÉ®ÂàÜ\\n\\nÊ≠§Â§Ñ‰ΩøÁî®ÁºñËæëÂ≠óÊÆµËäÇÁÇπ‰Ωú‰∏∫Ëß¶ÂèëÂô®ÔºåÂõ†‰∏∫ÊØè‰∏™Â∑•‰ΩúÊµÅÂè™ËÉΩÊúâ‰∏Ä‰∏™ÊâßË°åÂ∑•‰ΩúÊµÅËß¶ÂèëÂô®\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aec1b842-1219-4367-9238-3c7a118ce68f\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -80,\n        460\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 150,\n        \"height\": 83.26656725254155,\n        \"content\": \"### üëÜüèΩ Âú®Ê≠§ËÆæÁΩÆÊâÄÊúâËá™ÂÆö‰πâÈÖçÁΩÆ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dd8f1a00-dfd4-4966-a76c-3c8e2a243bab\",\n      \"name\": \"parse command\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        560,\n        280\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const text = $input.first().json.command_text;\\nconst parts = text.split(' ');\\n\\n\\n// GET COMMAND\\n// for example /cloudbot info mutasem\\n// should return \\\"info\\\"\\nconst command = parts[0];\\n\\n\\n// GET FLAGS \\n// for example /cloudbot info mutasem --test --flag\\n// should return ['--test', '--flag']\\nconst flags = parts.filter((part) => part.startsWith('--'));\\n\\n\\n// GET PARAMS\\n// for example /cloudbot info mutasem test\\n// should return [\\\"mutasem\\\", \\\"test\\\"]\\nlet params = parts\\n  .filter((part, i) => i > 0 && !part.startsWith('--'));\\nparams = params.filter((param, i) => {\\n  if (param === '-e') {\\n    return false;\\n  }\\n  if (params[i - 1] === '-e') {\\n    return false;\\n  }\\n\\n  return true;\\n});\\n\\n\\n// GET ENV VARS\\n// for example /cloudbot info mutasem -e env=prod\\n// should return {env: \\\"prod\\\"}\\nconst env = parts.filter((val, i) => {\\n  return i > 0 && parts[i - 1] === '-e';\\n})\\n  .reduce((accu, opt) => {\\n  if (!opt.includes('=')) {\\n    return accu;\\n  }\\n\\n  const key = opt.split('=')[0];\\n  const val = opt.split('=')[1];\\n  \\n  accu[key] = clean(val);\\n  return accu;\\n}, {});\\n\\n// Add workflow to run\\nconst commands = $input.first().json.commands;\\nlet workflow;\\nif (commands[command]) {\\n  workflow = commands[command];\\n}\\n\\nreturn {\\n  ...$input.first().json,\\n  command,\\n  flags,\\n  env,\\n  params,\\n  workflow,\\n}\\n\\nfunction clean(str) {\\n  return str.replaceAll(`‚Äò`, '\\\\'').replaceAll('‚Äú', '\\\"').replaceAll('‚Äù', '\\\"').replaceAll('‚Äô', '\\\\'');\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"22b8502c-dec3-4456-9947-639761517881\",\n      \"name\": \"Validate webhook signature\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        100,\n        280\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const SIGNING_SECRET = $input.first().json.slack_secret_signature;\\nconst item = $('Webhook to call for Slack command').first();\\n\\nif (!item.binary) {\\n  throw new Error('Missing binary data');\\n}\\n\\nconst crypto = require('crypto');\\nconst { binary: { data } } = item;\\n\\nif (\\n  !item.json.headers['x-slack-request-timestamp'] ||\\n  Math.abs(\\n    Math.floor(new Date().getTime() / 1000) -\\n      +item.json.headers['x-slack-request-timestamp']\\n  ) > 300\\n) {\\n  throw new Error('Unauthorized, request not fresh');\\n}\\n\\nconst rawBody = Buffer.from(data.data, 'base64').toString()\\n\\n// compute the basestring\\nconst baseStr = `v0:${item.json.headers['x-slack-request-timestamp']}:${rawBody}`;\\n\\n// extract the received signature from the request headers\\nconst receivedSignature = item.json.headers['x-slack-signature'];\\n\\nconst expectedSignature = `v0=${crypto.createHmac('sha256', SIGNING_SECRET)\\n.update(baseStr, 'utf8')\\n.digest('hex')}`;\\n\\n// match the two signatures\\nif (expectedSignature !== receivedSignature) {\\nthrow new Error('Unauthorized, umatched signatures');\\n}\\n\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Set vars\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set config\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set config\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validate webhook signature\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"if has flag\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If matches env variable\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Start thread\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add debug info\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Set thread info\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"parse command\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"if has workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add thread info\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Execute target workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set thread info\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add thread info\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"if has workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"if create thread\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Handle other commands\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"if create thread\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Start thread\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Alert user that thread was created\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Add thread info\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ],\n        [\n          {\n            \"node\": \"Send debug url\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Execute target workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validate Slack token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Reply to user that command was received\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"parse command\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Handle other commands\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"send help\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Unknown command\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If matches env variable\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get user here for example\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"REPLACE ME WITH TRIGGER\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Replying to thread\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Delete user here for example\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Command workflow trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Reply to user directly\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"if has flag\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get user here for example\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format data into nice structure\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validate webhook signature\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validate Slack token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Delete user here for example\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Confirm user was deleted\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format data into nice structure\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Found user\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook to call for Slack command\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set vars\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}