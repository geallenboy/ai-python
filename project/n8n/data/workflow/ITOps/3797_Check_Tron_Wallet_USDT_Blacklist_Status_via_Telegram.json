{
  "title": "Check Tron Wallet USDT Blacklist Status via Telegram",
  "url": "https://n8n.io/workflows/3797-check-tron-wallet-usdt-blacklist-status-via-telegram/",
  "category": "ITOps",
  "category_url": "https://n8n.io/workflows/categories/it-ops/?sort=createdAt:desc",
  "author": "FORK SOFTWARE TECHNOLOGIES INC.",
  "publish_date": "Last update 6 days ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"RMxcTgpFGpE3RdLZ\",\"meta\":{\"instanceId\":\"1a1a56e303d37d31a273d2dd1d2c6ab5d45185370759d2a4763eabe48f3be2df\",\"templateCredsSetupCompleted\":true},\"name\":\"Telegram Tron Wallet Blacklist Checker\",\"tags\":[],\"nodes\":[{\"id\":\"fbd55c61-91ad-43e7-aa89-c30d14fc3b92\",\"name\":\"Telegram Trigger\",\"type\":\"n8n-nodes-base.telegramTrigger\",\"position\":[-240,-40],\"webhookId\":\"b384e76e-5f33-452c-b4eb-13a8d5fc377e\",\"parameters\":{\"updates\":[\"message\"],\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"utGUX9B8SmbwjN5s\",\"name\":\"Telegram account\"}},\"typeVersion\":1},{\"id\":\"f7b2d70e-9a5c-4a31-b445-68e9a37cfdb3\",\"name\":\"Telegram Send Message\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1160,-60],\"webhookId\":\"4148b55e-c227-491c-8a3a-f9579c604cc3\",\"parameters\":{\"text\":\"={{ $json.text }}\",\"chatId\":\"={{ $('Telegram Trigger').item.json.message.from.id }}\",\"additionalFields\":{\"reply_to_message_id\":\"={{ $('Telegram Trigger').item.json.message.message_id }}\"}},\"credentials\":{\"telegramApi\":{\"id\":\"utGUX9B8SmbwjN5s\",\"name\":\"Telegram account\"}},\"typeVersion\":1},{\"id\":\"2ed30255-373c-485b-bffe-ab3682ddb3b8\",\"name\":\"Check Wallet Address Format\",\"type\":\"n8n-nodes-base.if\",\"position\":[60,-40],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"bc914e89-d74c-479e-9246-f028a9efe2bc\",\"operator\":{\"type\":\"string\",\"operation\":\"regex\"},\"leftValue\":\"={{ $json.message.text }}\",\"rightValue\":\"T[A-Za-z1-9]{33}\"}]}},\"typeVersion\":2.2},{\"id\":\"8a05f33e-71bd-4053-b182-baf721a3a650\",\"name\":\"Tron BlackList Stable Token Api Request\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[380,-60],\"parameters\":{\"url\":\"=https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress={{ $json.message.text }}\",\"options\":{}},\"typeVersion\":1},{\"id\":\"f4e89604-4721-45b9-a7e6-57d0d1e77a10\",\"name\":\"Check Api Response\",\"type\":\"n8n-nodes-base.code\",\"position\":[760,-60],\"parameters\":{\"jsCode\":\"const response = items[0].json;\\nlet message;\\n\\nif (response.total && response.total > 0) {\\n  message = `ðŸš¨ðŸ›‘ **This Wallet is Blacklisted!** ðŸ›‘ðŸš¨: ${response.data[0].blackAddress}`;\\n} else {\\n  message = `âœ…ðŸ’š **This Wallet is NOT Blacklisted!** ðŸ’šâœ….`;\\n}\\n\\nreturn [\\n  {\\n    json: {\\n      text: message,\\n    },\\n  },\\n];\"},\"typeVersion\":2},{\"id\":\"71e16929-f5f8-4d71-8fa0-d5230e4e7b5a\",\"name\":\"Set Error Message (Wallet Address Format)\",\"type\":\"n8n-nodes-base.code\",\"position\":[600,320],\"parameters\":{\"jsCode\":\"return [\\n  {\\n    json: {\\n      text: 'Please enter your wallet address correctly and completely.',\\n    },\\n  },\\n];\"},\"typeVersion\":2},{\"id\":\"34835c57-19bf-49c2-935c-74deb0c5c3f0\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-340,-200],\"parameters\":{\"color\":4,\"width\":1760,\"height\":700,\"content\":\"## TRON USDT Blacklist Checker\\n**This template checks USDT wallets on the TRON blockchain and queries whether they have been blacklisted.**\"},\"typeVersion\":1}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"0595cea0-5444-42aa-a988-5169f29b85b2\",\"connections\":{\"Telegram Trigger\":{\"main\":[[{\"node\":\"Check Wallet Address Format\",\"type\":\"main\",\"index\":0}]]},\"Check Api Response\":{\"main\":[[{\"node\":\"Telegram Send Message\",\"type\":\"main\",\"index\":0}]]},\"Check Wallet Address Format\":{\"main\":[[{\"node\":\"Tron BlackList Stable Token Api Request\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Set Error Message (Wallet Address Format)\",\"type\":\"main\",\"index\":0}]]},\"Tron BlackList Stable Token Api Request\":{\"main\":[[{\"node\":\"Check Api Response\",\"type\":\"main\",\"index\":0}]]},\"Set Error Message (Wallet Address Format)\":{\"main\":[[{\"node\":\"Telegram Send Message\",\"type\":\"main\",\"index\":0}]]}},\"description\":\"This n8n workflow template allows users to check if a Tron wallet address is blacklisted on the USDT contract via a Telegram bot. When a user sends the command {walletAddress} through the Telegram bot, the workflow queries the Tronscan API to determine if the provided wallet address is blacklisted. The result is then sent back to the user via the Telegram bot.\"}",
  "readme": "![n8ntorn.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/n8n_torn_c6b06b680d.png)  \n**Description**  \nThis n8n workflow template allows users to check if a Tron wallet address is blacklisted on the USDT contract via a Telegram bot. When a user sends the command {walletAddress} through the Telegram bot, the workflow queries the Tronscan API to determine if the provided wallet address is blacklisted. The result is then sent back to the user via the Telegram bot.\n\n**Detailed Description**  \n**Workflow Overview**  \nThis workflow is designed to interact with users through a Telegram bot and check if a given Tron wallet address is blacklisted on the USDT contract. The workflow consists of four main nodes:\n\n  1. **Telegram Trigger Node:** Listens for messages from the Telegram bot.\n  2. **HTTP Request Node:** Sends a GET request to the Tronscan API to check the blacklist status of the provided wallet address.\n  3. **Function Node:** Processes the API response and formats the message to be sent back to the user.\n  4. **Telegram Send Message Node:** Sends the formatted message back to the user via the Telegram bot.\n\n\n\n**Nodes Configuration**\n\n**1.Telegram Trigger Node**\n\n  * Event: Message\n  * Update Types: Message\n  * Command: /sorgu\n  * Description: This node listens for the {walletAddress} command followed by a wallet address from the user.\n\n\n\n**2.HTTP Request Node**\n\n  * Method: GET\n  * URL: <https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress=>{{ $json.message.text }}\n  * Response Format: JSON\n  * Description: This node sends a GET request to the Tronscan API using the wallet address provided by the user.\n\n\n\n**3.Code Node**  \nCheck Api Response:\n    \n    \n    let message;\n    \n    if (response.total && response.total &gt; 0) {\n      message = `ðŸš¨ðŸ›‘ **This Wallet is Blacklisted!** ðŸ›‘ðŸš¨: ${response.data[0].blackAddress}`;\n    } else {\n      message = `âœ…ðŸ’š **This Wallet is NOT Blacklisted!** ðŸ’šâœ….`;\n    }\n    \n    return [\n      {\n        json: {\n          text: message,\n        },\n      },\n    ];\n    \n\n  * **Description:** This node processes the API response to determine if the wallet address is blacklisted and formats the message to be sent back to the user.\n\n\n\n**4.Telegram Send Message Node**\n\n  * Resource: Message\n  * Operation: Send\n  * Chat ID: ={{$json[\"chat_id\"]}}\n  * Text: ={{$json[\"text\"]}}\n  * Description: This node sends the formatted message back to the user via the Telegram bot.\n\n\n\n**How to Use**\n\n  1. Set Up Telegram Bot: Create a Telegram bot and obtain the API token. Configure the bot to listen for the **{walletAddress}** command.\n\n  2. Import Workflow: Import this workflow into your n8n instance.\n\n  3. Configure Credentials: Add your Telegram API credentials to the Telegram Trigger and Telegram Send Message nodes.\n\n  4. Run Workflow: Start the workflow. Users can now send the **{walletAddress}** command to the Telegram bot to check if a Tron wallet address is blacklisted.\n\n\n\n\n**Example Usage**  \nUser Telegram Command: {TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t}  \nAPI Request: <https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t>  \nAPI Response:\n    \n    \n      \"total\": 1,\n      \"data\": [\n        {\n          \"blackAddress\": \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\",\n          \"tokenName\": \"USDT\",\n          \"num\": \"367583344429\",\n          \"time\": 1593184959,\n          \"transHash\": \"af4bc4d793f82ca5ba500cf13cf93ca3e7a56fccc2aabf8b09e55fc756500ea8\",\n          \"contractAddress\": \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\n        }\n      ]\n    }\n    \n    \n\nBot Response: ðŸš¨ðŸ›‘ **This Wallet is Blacklisted!** ðŸ›‘ðŸš¨: TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\n\n> This workflow provides a simple and efficient way to check the blacklist status of Tron wallet addresses via a Telegram bot, making it easy for users to stay informed about the status of their wallets.\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/n8n_torn_c6b06b680d.png\" alt=\"n8ntorn.png\"><br>\n<strong>Description</strong><br>\nThis n8n workflow template allows users to check if a Tron wallet address is blacklisted on the USDT contract via a Telegram bot. When a user sends the command {walletAddress} through the Telegram bot, the workflow queries the Tronscan API to determine if the provided wallet address is blacklisted. The result is then sent back to the user via the Telegram bot.</p>\n<p><strong>Detailed Description</strong><br>\n<strong>Workflow Overview</strong><br>\nThis workflow is designed to interact with users through a Telegram bot and check if a given Tron wallet address is blacklisted on the USDT contract. The workflow consists of four main nodes:</p>\n<ol>\n<li><strong>Telegram Trigger Node:</strong> Listens for messages from the Telegram bot.</li>\n<li><strong>HTTP Request Node:</strong> Sends a GET request to the Tronscan API to check the blacklist status of the provided wallet address.</li>\n<li><strong>Function Node:</strong> Processes the API response and formats the message to be sent back to the user.</li>\n<li><strong>Telegram Send Message Node:</strong> Sends the formatted message back to the user via the Telegram bot.</li>\n</ol>\n<p><strong>Nodes Configuration</strong></p>\n<p><strong>1.Telegram Trigger Node</strong></p>\n<ul>\n<li>Event: Message</li>\n<li>Update Types: Message</li>\n<li>Command: /sorgu</li>\n<li>Description: This node listens for the {walletAddress} command followed by a wallet address from the user.</li>\n</ul>\n<p><strong>2.HTTP Request Node</strong></p>\n<ul>\n<li>Method: GET</li>\n<li>URL: <a href=\"https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress=\" rel=\"ugc nofollow\" target=\"_blank\">https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress=</a>{{ $json.message.text }}</li>\n<li>Response Format: JSON</li>\n<li>Description: This node sends a GET request to the Tronscan API using the wallet address provided by the user.</li>\n</ul>\n<p><strong>3.Code Node</strong><br>\nCheck Api Response:</p>\n<pre><code>let message;\n\nif (response.total &amp;&amp; response.total &amp;gt; 0) {\n  message = `ðŸš¨ðŸ›‘ **This Wallet is Blacklisted!** ðŸ›‘ðŸš¨: ${response.data[0].blackAddress}`;\n} else {\n  message = `âœ…ðŸ’š **This Wallet is NOT Blacklisted!** ðŸ’šâœ….`;\n}\n\nreturn [\n  {\n    json: {\n      text: message,\n    },\n  },\n];\n</code></pre>\n<ul>\n<li><strong>Description:</strong> This node processes the API response to determine if the wallet address is blacklisted and formats the message to be sent back to the user.</li>\n</ul>\n<p><strong>4.Telegram Send Message Node</strong></p>\n<ul>\n<li>Resource: Message</li>\n<li>Operation: Send</li>\n<li>Chat ID: ={{$json[\"chat_id\"]}}</li>\n<li>Text: ={{$json[\"text\"]}}</li>\n<li>Description: This node sends the formatted message back to the user via the Telegram bot.</li>\n</ul>\n<p><strong>How to Use</strong></p>\n<ol>\n<li>\n<p>Set Up Telegram Bot: Create a Telegram bot and obtain the API token. Configure the bot to listen for the <strong>{walletAddress}</strong> command.</p>\n</li>\n<li>\n<p>Import Workflow: Import this workflow into your n8n instance.</p>\n</li>\n<li>\n<p>Configure Credentials: Add your Telegram API credentials to the Telegram Trigger and Telegram Send Message nodes.</p>\n</li>\n<li>\n<p>Run Workflow: Start the workflow. Users can now send the <strong>{walletAddress}</strong> command to the Telegram bot to check if a Tron wallet address is blacklisted.</p>\n</li>\n</ol>\n<p><strong>Example Usage</strong><br>\nUser Telegram Command: {TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t}<br>\nAPI Request: <a href=\"https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\" rel=\"ugc nofollow\" target=\"_blank\">https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t</a><br>\nAPI Response:</p>\n<pre><code>  \"total\": 1,\n  \"data\": [\n    {\n      \"blackAddress\": \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\",\n      \"tokenName\": \"USDT\",\n      \"num\": \"367583344429\",\n      \"time\": 1593184959,\n      \"transHash\": \"af4bc4d793f82ca5ba500cf13cf93ca3e7a56fccc2aabf8b09e55fc756500ea8\",\n      \"contractAddress\": \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\n    }\n  ]\n}\n\n</code></pre>\n<p>Bot Response: ðŸš¨ðŸ›‘ <strong>This Wallet is Blacklisted!</strong> ðŸ›‘ðŸš¨: TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t</p>\n<blockquote>\n<p>This workflow provides a simple and efficient way to check the blacklist status of Tron wallet addresses via a Telegram bot, making it easy for users to stay informed about the status of their wallets.</p>\n</blockquote>\n</div><!--]-->"
}