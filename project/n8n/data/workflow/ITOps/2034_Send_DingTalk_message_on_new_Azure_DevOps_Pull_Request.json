{
  "title": "Send DingTalk message on new Azure DevOps Pull Request",
  "url": "https://n8n.io/workflows/2034-send-dingtalk-message-on-new-azure-devops-pull-request/",
  "category": "ITOps",
  "category_url": "https://n8n.io/workflows/categories/it-ops/?sort=createdAt:desc",
  "author": "PretenderX",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-06",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"dbd43d88d26a9e30d8aadc002c9e77f1400c683dd34efe3778d43d27250dde50\"},\"nodes\":[{\"id\":\"44eb446d-3775-4fe0-8f76-67f46913531e\",\"name\":\"LoadDingTalkAccountMap\",\"type\":\"n8n-nodes-base.mySql\",\"position\":[-600,720],\"parameters\":{\"table\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"tfs_dingtalk_account_map\",\"cachedResultName\":\"tfs_dingtalk_account_map\"},\"options\":{},\"operation\":\"select\",\"returnAll\":true},\"credentials\":{\"mySql\":{\"id\":\"235\",\"name\":\"MySQL account\"}},\"typeVersion\":2.2},{\"id\":\"25d2a3aa-af18-4ff2-af6c-c2bf6618a511\",\"name\":\"ReceiveTfsPullRequestCreatedMessage\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-860,720],\"webhookId\":\"05a0f565-7a1e-44f2-956d-1c68982ce314\",\"parameters\":{\"path\":\"pr-notify-template\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":1},{\"id\":\"70d69753-9408-4a99-85a4-9dc4486fc460\",\"name\":\"BuildDingTalkWebHookData\",\"type\":\"n8n-nodes-base.code\",\"position\":[-340,720],\"parameters\":{\"jsCode\":\"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\nconsole.log(\\\"items:\\\");\\nconsole.log(items);\\n\\nvar mapUserMobile = function (tfsAccount) {\\n  for(var i = 0; i < items.length; i++) {\\n    var map = items[i].json;\\n    if(tfsAccount.lastIndexOf(map.TfsAccount) != -1) {\\n      return map.DingTalkMobile;\\n    }\\n  }\\n\\n  return null;\\n}\\nvar mapUserName = function (tfsAccount) {\\n  for(var i = 0; i < items.length; i++) {\\n    var map = items[i].json;\\n    if(tfsAccount.lastIndexOf(map.TfsAccount) != -1) {\\n      return map.UserName;\\n    }\\n  }\\n\\n  return null;\\n}\\n\\nvar tfsMessage = $node[\\\"ReceiveTfsPullRequestCreatedMessage\\\"].json.body;\\nconsole.log(\\\"TFS Message:\\\");\\nconsole.log(tfsMessage);\\n\\nvar output = {};\\nvar atMobiles = [];\\nvar isAtAll = false;\\nvar atUsers = [];\\nvar messageText = tfsMessage.message.markdown;\\nvar prCreatorTfsDomainName = tfsMessage.resource.createdBy.uniqueName;\\nvar prCreatorTfsDisplayName = tfsMessage.resource.createdBy.displayName;\\nvar prCreatorDingTalkName = mapUserName(prCreatorTfsDomainName);\\n\\nif (prCreatorDingTalkName !== null) {\\n  messageText = messageText.replace(prCreatorTfsDisplayName, prCreatorDingTalkName);\\n}\\n\\nfor (reviewer of tfsMessage.resource.reviewers) {\\n  console.log(reviewer.uniqueName);\\n  if(reviewer.uniqueName.lastIndexOf(\\\"团队\\\") != -1) {\\n    //当@所有人时，消息内容中的手机号就不会被转义成用户名了，暂时不启用该功能\\n    isAtAll = true;\\n    continue;\\n  }\\n\\n  var mobile = mapUserMobile(reviewer.uniqueName);\\n\\n  if(mobile !== null) {\\n    atMobiles.push(mobile);\\n  }\\n\\n  var userName = mapUserName(reviewer.uniqueName);\\n\\n  if(userName !== null) {\\n    atUsers.push(userName);\\n  }\\n}\\n\\nif(isAtAll) {\\n  atUsers.unshift(\\\"所有人\\\");\\n  atMobiles = [];\\n} else {\\n  atUsers = atMobiles;\\n}\\n\\nif (atUsers.length > 0) {\\n  messageText = messageText + \\\"<br />请 @\\\" + atUsers.join(\\\" @\\\") + \\\" 评审\\\";\\n}\\n\\noutput.isAtAll = isAtAll;\\noutput.text = messageText;\\noutput.atMobiles = atMobiles.join(\\\", \\\");\\n\\nconsole.log('Done:');\\nconsole.log(output);\\n\\nreturn [{json: output}];\"},\"typeVersion\":2},{\"id\":\"dc6c235b-c1ac-4195-a404-e79c8ad1c8ef\",\"name\":\"SendDingTalkMessageViaWebHook\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-80,720],\"parameters\":{\"url\":\"https://oapi.dingtalk.com/robot/send?access_token=4d684f0389cd4c24997c815344890faafeb9d300c25edf5e31151662a87e77c7\",\"options\":{},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"bodyParametersJson\":\"={\\n\\t\\\"at\\\":\\n\\t{\\n\\t\\t\\\"atMobiles\\\": [{{$json[\\\"atMobiles\\\"]}}],\\n\\t\\t\\\"isAtAll\\\": \\\"{{$json[\\\"isAtAll\\\"]}}\\\"\\n\\t},\\n\\t\\\"msgtype\\\": \\\"markdown\\\",\\n\\t\\\"markdown\\\":\\n\\t{\\n\\t\\t\\\"title\\\": \\\"New PR Notify\\\",\\n\\t\\t\\\"text\\\": \\\"{{$json[\\\"text\\\"]}}\\\"\\n\\t}\\n}\"},\"typeVersion\":1},{\"id\":\"3476a787-387b-43e2-8646-6a682656f231\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1449,560],\"parameters\":{\"width\":484,\"height\":540,\"content\":\"## Send DingTalk message on new Azure DevOps Pull Request\\nThis template automates sending a DingTalk message on new Azure Dev Ops Pull Request Created Events. It uses a MySQL database to store mappings between Azure users and DingTalk users; so the right users get notified. \\n\\n### Set up instructions\\n1. Define the path value of ReceiveTfsPullRequestCreatedMessage Webhook node of your own, copy the webhook url to create a Azure DevOps ServiceHook that call webhook with Pull Request Created event.\\n2. In order to configure the LoadDingTalkAccountMap node, you need to create a MySQL table as below:\\n|Name|Type|Length|Key|\\n|-|-|-|-|\\n|TfsAccount|varchar|255|\\n|UserName|varchar|255|\\n|DingTalkMobile|varchar|255|\\n3. You can customize the Ding Talk message content by editing the BuildDingTalkWebHookData node.\\n4. Define the URL of SendDingTalkMessageViaWebHook Http Request node as your Ding Talk group chat robot webhook URL.\\n5. Send test of production message from Azure DevOps to test.\\n\\n\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"LoadDingTalkAccountMap\":{\"main\":[[{\"node\":\"BuildDingTalkWebHookData\",\"type\":\"main\",\"index\":0}]]},\"BuildDingTalkWebHookData\":{\"main\":[[{\"node\":\"SendDingTalkMessageViaWebHook\",\"type\":\"main\",\"index\":0}]]},\"ReceiveTfsPullRequestCreatedMessage\":{\"main\":[[{\"node\":\"LoadDingTalkAccountMap\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This template automates sending a DingTalk message on new Azure Dev Ops Pull Request Created Events. It uses a MySQL database to store mappings between Azure users and DingTalk users; so the right users get notified.\n\n### Set up instructions\n\n  1. Define the path value of ReceiveTfsPullRequestCreatedMessage Webhook node of your own, copy the webhook url to create a Azure DevOps ServiceHook that call webhook with Pull Request Created event.\n  2. In order to configure the LoadDingTalkAccountMap node, you need to create a MySQL table as below:  \n|Name|Type|Length|Key|  \n|-|-|-|-|  \n|TfsAccount|varchar|255|  \n|UserName|varchar|255|  \n|DingTalkMobile|varchar|255|\n  3. You can customize the Ding Talk message content by editing the BuildDingTalkWebHookData node.\n  4. Define the URL of SendDingTalkMessageViaWebHook Http Request node as your Ding Talk group chat robot webhook URL.\n  5. Send test of production message from Azure DevOps to test.\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>This template automates sending a DingTalk message on new Azure Dev Ops Pull Request Created Events. It uses a MySQL database to store mappings between Azure users and DingTalk users; so the right users get notified.</p>\n<h3>Set up instructions</h3>\n<ol>\n<li>Define the path value of ReceiveTfsPullRequestCreatedMessage Webhook node of your own, copy the webhook url to create a Azure DevOps ServiceHook that call webhook with Pull Request Created event.</li>\n<li>In order to configure the LoadDingTalkAccountMap node, you need to create a MySQL table as below:<br>\n|Name|Type|Length|Key|<br>\n|-|-|-|-|<br>\n|TfsAccount|varchar|255|<br>\n|UserName|varchar|255|<br>\n|DingTalkMobile|varchar|255|</li>\n<li>You can customize the Ding Talk message content by editing the BuildDingTalkWebHookData node.</li>\n<li>Define the URL of SendDingTalkMessageViaWebHook Http Request node as your Ding Talk group chat robot webhook URL.</li>\n<li>Send test of production message from Azure DevOps to test.</li>\n</ol>\n</div><!--]-->",
  "readme_zh": "此模板用于在Azure DevOps创建新的拉取请求（Pull Request）事件时自动发送钉钉消息。它利用MySQL数据库存储Azure用户与钉钉用户的映射关系，确保通知能准确送达对应人员。\n\n### 配置说明\n\n1. **配置Webhook接收地址**  \n   自定义`ReceiveTfsPullRequestCreatedMessage`节点的路径值，复制生成的Webhook URL至Azure DevOps创建服务钩子（ServiceHook），选择\"拉取请求创建\"事件触发该Webhook。\n\n2. **配置用户映射表**  \n   为`LoadDingTalkAccountMap`节点创建MySQL表，结构如下：  \n|字段名|类型|长度|键|  \n|-|-|-|-|  \n|TfsAccount|varchar|255|主键|  \n|UserName|varchar|255||  \n|DingTalkMobile|varchar|255||\n\n3. **自定义消息内容**  \n   通过编辑`BuildDingTalkWebHookData`节点自由定制钉钉消息模板。\n\n4. **设置机器人Webhook**  \n   在`SendDingTalkMessageViaWebHook`节点的HTTP请求中配置钉钉群聊机器人的Webhook URL。\n\n5. **测试验证**  \n   从Azure DevOps发送测试/生产消息以验证流程。",
  "title_zh": "在新Azure DevOps拉取请求时发送钉钉消息",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"dbd43d88d26a9e30d8aadc002c9e77f1400c683dd34efe3778d43d27250dde50\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"44eb446d-3775-4fe0-8f76-67f46913531e\",\n      \"name\": \"LoadDingTalkAccountMap\",\n      \"type\": \"n8n-nodes-base.mySql\",\n      \"position\": [\n        -600,\n        720\n      ],\n      \"parameters\": {\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"tfs_dingtalk_account_map\",\n          \"cachedResultName\": \"tfs_dingtalk_account_map\"\n        },\n        \"options\": {},\n        \"operation\": \"select\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"mySql\": {\n          \"id\": \"235\",\n          \"name\": \"MySQL account\"\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"25d2a3aa-af18-4ff2-af6c-c2bf6618a511\",\n      \"name\": \"ReceiveTfsPullRequestCreatedMessage\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -860,\n        720\n      ],\n      \"webhookId\": \"05a0f565-7a1e-44f2-956d-1c68982ce314\",\n      \"parameters\": {\n        \"path\": \"pr-notify-template\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"70d69753-9408-4a99-85a4-9dc4486fc460\",\n      \"name\": \"BuildDingTalkWebHookData\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -340,\n        720\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\nconsole.log(\\\"items:\\\");\\nconsole.log(items);\\n\\nvar mapUserMobile = function (tfsAccount) {\\n  for(var i = 0; i < items.length; i++) {\\n    var map = items[i].json;\\n    if(tfsAccount.lastIndexOf(map.TfsAccount) != -1) {\\n      return map.DingTalkMobile;\\n    }\\n  }\\n\\n  return null;\\n}\\nvar mapUserName = function (tfsAccount) {\\n  for(var i = 0; i < items.length; i++) {\\n    var map = items[i].json;\\n    if(tfsAccount.lastIndexOf(map.TfsAccount) != -1) {\\n      return map.UserName;\\n    }\\n  }\\n\\n  return null;\\n}\\n\\nvar tfsMessage = $node[\\\"ReceiveTfsPullRequestCreatedMessage\\\"].json.body;\\nconsole.log(\\\"TFS Message:\\\");\\nconsole.log(tfsMessage);\\n\\nvar output = {};\\nvar atMobiles = [];\\nvar isAtAll = false;\\nvar atUsers = [];\\nvar messageText = tfsMessage.message.markdown;\\nvar prCreatorTfsDomainName = tfsMessage.resource.createdBy.uniqueName;\\nvar prCreatorTfsDisplayName = tfsMessage.resource.createdBy.displayName;\\nvar prCreatorDingTalkName = mapUserName(prCreatorTfsDomainName);\\n\\nif (prCreatorDingTalkName !== null) {\\n  messageText = messageText.replace(prCreatorTfsDisplayName, prCreatorDingTalkName);\\n}\\n\\nfor (reviewer of tfsMessage.resource.reviewers) {\\n  console.log(reviewer.uniqueName);\\n  if(reviewer.uniqueName.lastIndexOf(\\\"团队\\\") != -1) {\\n    //当@所有人时，消息内容中的手机号就不会被转义成用户名了，暂时不启用该功能\\n    isAtAll = true;\\n    continue;\\n  }\\n\\n  var mobile = mapUserMobile(reviewer.uniqueName);\\n\\n  if(mobile !== null) {\\n    atMobiles.push(mobile);\\n  }\\n\\n  var userName = mapUserName(reviewer.uniqueName);\\n\\n  if(userName !== null) {\\n    atUsers.push(userName);\\n  }\\n}\\n\\nif(isAtAll) {\\n  atUsers.unshift(\\\"所有人\\\");\\n  atMobiles = [];\\n} else {\\n  atUsers = atMobiles;\\n}\\n\\nif (atUsers.length > 0) {\\n  messageText = messageText + \\\"<br />请 @\\\" + atUsers.join(\\\" @\\\") + \\\" 评审\\\";\\n}\\n\\noutput.isAtAll = isAtAll;\\noutput.text = messageText;\\noutput.atMobiles = atMobiles.join(\\\", \\\");\\n\\nconsole.log('Done:');\\nconsole.log(output);\\n\\nreturn [{json: output}];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"dc6c235b-c1ac-4195-a404-e79c8ad1c8ef\",\n      \"name\": \"SendDingTalkMessageViaWebHook\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -80,\n        720\n      ],\n      \"parameters\": {\n        \"url\": \"https://oapi.dingtalk.com/robot/send?access_token=4d684f0389cd4c24997c815344890faafeb9d300c25edf5e31151662a87e77c7\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"bodyParametersJson\": \"={\\n\\t\\\"at\\\":\\n\\t{\\n\\t\\t\\\"atMobiles\\\": [{{$json[\\\"atMobiles\\\"]}}],\\n\\t\\t\\\"isAtAll\\\": \\\"{{$json[\\\"isAtAll\\\"]}}\\\"\\n\\t},\\n\\t\\\"msgtype\\\": \\\"markdown\\\",\\n\\t\\\"markdown\\\":\\n\\t{\\n\\t\\t\\\"title\\\": \\\"New PR Notify\\\",\\n\\t\\t\\\"text\\\": \\\"{{$json[\\\"text\\\"]}}\\\"\\n\\t}\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3476a787-387b-43e2-8646-6a682656f231\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1449,\n        560\n      ],\n      \"parameters\": {\n        \"width\": 484,\n        \"height\": 540,\n        \"content\": \"## 在Azure DevOps新建拉取请求时发送钉钉消息  \\n此模板可自动在Azure DevOps创建拉取请求事件时发送钉钉通知。通过MySQL数据库存储Azure用户与钉钉用户的映射关系，确保准确触达相关人员。\\n\\n### 配置说明  \\n1. **配置Webhook接收地址**  \\n   在ReceiveTfsPullRequestCreatedMessage节点中定义专属路径值，复制生成的webhook地址，在Azure DevOps创建服务钩子(ServiceHook)，选择\\\"拉取请求创建\\\"事件并指向该URL。\\n\\n2. **配置用户映射表**  \\n   为LoadDingTalkAccountMap节点创建MySQL数据表，结构如下：  \\n   |字段名|类型|长度|键|  \\n   |-|-|-|-|  \\n   |TfsAccount|varchar|255|  \\n   |UserName|varchar|255|  \\n   |DingTalkMobile|varchar|255|  \\n\\n3. **自定义消息内容**  \\n   通过编辑BuildDingTalkWebHookData节点可自由定制钉钉消息模板。\\n\\n4. **绑定钉钉机器人**  \\n   在SendDingTalkMessageViaWebHook节点的HTTP请求中配置钉钉群聊机器人Webhook地址。\\n\\n5. **测试验证**  \\n   从Azure DevOps发送测试/生产消息进行全流程验证。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"LoadDingTalkAccountMap\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"BuildDingTalkWebHookData\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"BuildDingTalkWebHookData\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SendDingTalkMessageViaWebHook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ReceiveTfsPullRequestCreatedMessage\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"LoadDingTalkAccountMap\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}