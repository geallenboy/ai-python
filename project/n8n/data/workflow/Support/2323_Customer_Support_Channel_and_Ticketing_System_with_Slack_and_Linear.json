{
  "title": "Customer Support Channel and Ticketing System with Slack and Linear",
  "url": "https://n8n.io/workflows/2323-customer-support-channel-and-ticketing-system-with-slack-and-linear/",
  "category": "Support",
  "category_url": "https://n8n.io/workflows/categories/support/?count=20",
  "author": "Jimleuk",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-06",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"26ba763460b97c249b82942b23b6384876dfeb9327513332e743c5f6219c2b8e\"},\"nodes\":[{\"id\":\"2b3112a9-046e-4aae-8fcc-95bddf3bb02e\",\"name\":\"Slack\",\"type\":\"n8n-nodes-base.slack\",\"position\":[828,327],\"parameters\":{\"limit\":10,\"query\":\"in:#n8n-tickets has::ticket:\",\"options\":{},\"operation\":\"search\"},\"credentials\":{\"slackApi\":{\"id\":\"VfK3js0YdqBdQLGP\",\"name\":\"Slack account\"}},\"typeVersion\":2.2},{\"id\":\"65fd6821-4d19-436c-81d9-9bdb0f5efddd\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[1920,480],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1},{\"id\":\"85125704-7363-40de-af84-f267f8c7e919\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[2100,480],\"parameters\":{\"jsonSchema\":\"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"title\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"summary\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"ideas\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n    },\\n    \\\"priority\\\": { \\\"type\\\": \\\"string\\\" }\\n  }\\n}\"},\"typeVersion\":1.1},{\"id\":\"eda8851a-1929-4f2f-9149-627c0fe62fbc\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[628,327],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"minutes\"}]}},\"typeVersion\":1.2},{\"id\":\"ad0d56b5-5caf-4fc0-bdbb-4e6207e4eb03\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[580,112.87898199907983],\"parameters\":{\"color\":7,\"width\":432.4578914269739,\"height\":427.09547550768553,\"content\":\"## 1. Query Slack for Messages \\n[Read more about the Slack Trigger](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack)\\n\\nSlack API search uses the same search syntax found in the app. Here, we'll use it to filter the latest messages with the ticket emoji within our designated channel called #n8n-tickets. \"},\"typeVersion\":1},{\"id\":\"d4ebe5b3-6d9a-4547-8af8-0985206c4ca4\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1040,180.44851541532478],\"parameters\":{\"color\":7,\"width\":711.6907825442045,\"height\":632.7258798316449,\"content\":\"## 2. Decide If We Need to Create a New Ticket \\n[Read more about using Linear](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.linear)\\n\\nFor generated issues, we add the message id to the description of the message so that we can check them at this point in the workflow to avoid duplicates.\"},\"typeVersion\":1},{\"id\":\"b2920271-6698-47a4-8cac-ea4cec7b47d6\",\"name\":\"Get Values\",\"type\":\"n8n-nodes-base.set\",\"position\":[1100,360],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={\\n  \\\"id\\\": \\\"#{{ $json.permalink.split('/').last() }}\\\",\\n  \\\"type\\\": \\\"{{ $json.type }}\\\",\\n  \\\"title\\\": \\\"__NOT_SET__\\\",\\n  \\\"channel\\\": \\\"{{ $json.channel.name }}\\\",\\n  \\\"user\\\": \\\"{{ $json.username }} ({{ $json.user }})\\\",\\n  \\\"ts\\\": \\\"{{ $json.ts }}\\\",\\n  \\\"permalink\\\": \\\"{{ $json.permalink }}\\\",\\n  \\\"message\\\": \\\"{{ $json.text.replaceAll('\\\"','\\\\\\\\\\\"').replaceAll('\\\\n', '\\\\\\\\n') }}\\\"\\n}\"},\"typeVersion\":3.3},{\"id\":\"c4a4db2a-5d1c-4726-8c98-aef57fdcfaa6\",\"name\":\"Create New Ticket?\",\"type\":\"n8n-nodes-base.if\",\"position\":[1600,360],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"c11109b6-ee45-4b52-adc3-4be5fe420202\",\"operator\":{\"type\":\"boolean\",\"operation\":\"false\",\"singleValue\":true},\"leftValue\":\"={{ Boolean(($json.hashes ?? []).includes($json.id)) }}\",\"rightValue\":\"=false\"}]}},\"typeVersion\":2},{\"id\":\"46acb0de-1df1-4116-8aaf-704ec6644d7c\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1780,80],\"parameters\":{\"color\":7,\"width\":530.6864600881105,\"height\":578.3950618708791,\"content\":\"## 3. Use AI to Generate Ticket Contents\\n[Read more about using Basic LLM Chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\\n\\nFor this demo, we've instructed the AI to do the following:\\n* Generate a descriptive title of the issue\\n* Summarise the user message into an actionable request.\\n* Determine a prority based on tone and context of the user message. \\n* Can offer possible fixes through use of tools or RAG. (not implemented)\\n\"},\"typeVersion\":1},{\"id\":\"503d4ae7-9d5b-4dab-94a2-da28bc0e49da\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[200,120],\"parameters\":{\"width\":359.6648027457353,\"height\":400.4748439127683,\"content\":\"## Try It Out!\\n### This workflow does the following:\\n* Monitors a Slack channel for new user messages asking for assistance\\n* Only user messages which are tagged with the ticket(🎫) emoji are processed.\\n* Linear is first checked to see if a ticket was created for the user message.\\n* User messages are sent to ChatGPT to generate title, description and priority.\\n* Support ticket is created in Linear.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Hacking!\"},\"typeVersion\":1},{\"id\":\"11e423a4-36b6-4ecd-8bf7-58a7d4a1aa9a\",\"name\":\"Get Existing Issues\",\"type\":\"n8n-nodes-base.linear\",\"position\":[1260,360],\"parameters\":{\"operation\":\"getAll\"},\"credentials\":{\"linearApi\":{\"id\":\"Nn0F7T9FtvRUtEbe\",\"name\":\"Linear account\"}},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"413fde96-346a-468e-80b7-d465bd8add14\",\"name\":\"Generate Ticket Using ChatGPT\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[1920,320],\"parameters\":{\"text\":\"=The \\\"user issue\\\" is enclosed by 3 backticks:\\n```\\n{{ $('Get Values').item.json.message }}\\n```\\nYou will complete the following 4 tasks:\\n1. Generate a title intended for a support ticket based on the user issue only. Be descriptive but use no more than 10 words.\\n2. Summarise the user issue only by identifying the key expectations and steps that were taken to reach the conclusion.\\n3. Offer at most 3 suggestions to debug or resolve the user issue only. ignore the previous issues for this task.\\n4. Identify the urgency of the user issue only and denote the priority as one of \\\"low\\\", \\\"medium\\\", \\\"high\\\" or \\\"urgent\\\". If you cannot determine the urgency of the issue, then assign the \\\"low\\\" priority. Also consider that requests which require action either today or tomorrow should be prioritised as \\\"high\\\".\",\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.4},{\"id\":\"66aecf53-6e8a-4ee8-88c3-be6b7d8d0527\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2340,206],\"parameters\":{\"color\":7,\"width\":374.7406065828194,\"height\":352.3865785298774,\"content\":\"## 4. Create New Ticket in Linear\\n[Read more about using Linear](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.linear)\\n\\nWith our ticket contents generated, we can now create our ticket in Linear for support to handle.\\n\"},\"typeVersion\":1},{\"id\":\"f7898b7b-f60a-4315-a870-8c8ec4ad848f\",\"name\":\"Create Ticket\",\"type\":\"n8n-nodes-base.linear\",\"position\":[2480,380],\"parameters\":{\"title\":\"={{ $json.output.title }}\",\"teamId\":\"1c721608-321d-4132-ac32-6e92d04bb487\",\"additionalFields\":{\"stateId\":\"92962324-3d1f-4cf8-993b-0c982cc95245\",\"priorityId\":\"={{ { 'urgent': 1, 'high': 2, 'medium': 3, 'low': 4 }[$json.output.priority.toLowerCase()] ?? 0 }}\",\"description\":\"=## {{ $json.output.summary }}\\n\\n### Suggestions\\n{{ $json.output.ideas.map(idea => '* ' + idea).join('\\\\n') }}\\n\\n## Original Message\\n{{ $('Get Values').item.json[\\\"user\\\"] }} asks:\\n> {{ $('Get Values').item.json[\\\"message\\\"] }}\\n\\n### Metadata\\nchannel: {{ $('Get Values').item.json.channel }}\\nts: {{ $('Get Values').item.json.ts }}\\npermalink: {{ $('Get Values').item.json.permalink }}\\nhash: {{ $('Get Values').item.json.id }}\\n\"}},\"credentials\":{\"linearApi\":{\"id\":\"Nn0F7T9FtvRUtEbe\",\"name\":\"Linear account\"}},\"typeVersion\":1},{\"id\":\"0b706c12-6ce0-41af-ad4b-9d98d7d03a41\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1440,360],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combinationMode\":\"multiplex\"},\"typeVersion\":2.1},{\"id\":\"d5b30127-f237-459d-860a-2589e3b54fb8\",\"name\":\"Get Hashes Only\",\"type\":\"n8n-nodes-base.set\",\"position\":[1260,640],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"9b0e8527-ea17-4b1e-ba62-287111f4b37e\",\"name\":\"hashes\",\"type\":\"array\",\"value\":\"={{ $json.descriptions.map(desc => desc.match(/hash\\\\:\\\\s([\\\\w#]+)/i)[1]) }}\"}]}},\"typeVersion\":3.3},{\"id\":\"9de103e1-b6a4-4454-b1b9-73eff730fcb6\",\"name\":\"Collect Descriptions\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[1260,500],\"parameters\":{\"options\":{},\"fieldsToAggregate\":{\"fieldToAggregate\":[{\"renameField\":true,\"outputFieldName\":\"descriptions\",\"fieldToAggregate\":\"description\"}]}},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"af34916f-7888-4d41-aee6-752b78e88c0c\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[780,300],\"parameters\":{\"width\":204.96868508214473,\"height\":296.735132421306,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n🚨**Required**\\n* Set the Slack channel to monitor here.\"},\"typeVersion\":1},{\"id\":\"58ab44f7-5fe5-4804-8bf1-36f351d86528\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2440,360],\"parameters\":{\"width\":183.49787916474958,\"height\":296.735132421306,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n🚨**Required**\\n* Set the Linear Team Name or ID here.\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Merge\":{\"main\":[[{\"node\":\"Create New Ticket?\",\"type\":\"main\",\"index\":0}]]},\"Slack\":{\"main\":[[{\"node\":\"Get Values\",\"type\":\"main\",\"index\":0}]]},\"Get Values\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0},{\"node\":\"Get Existing Issues\",\"type\":\"main\",\"index\":0}]]},\"Get Hashes Only\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Slack\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Generate Ticket Using ChatGPT\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Create New Ticket?\":{\"main\":[[{\"node\":\"Generate Ticket Using ChatGPT\",\"type\":\"main\",\"index\":0}]]},\"Get Existing Issues\":{\"main\":[[{\"node\":\"Collect Descriptions\",\"type\":\"main\",\"index\":0}]]},\"Collect Descriptions\":{\"main\":[[{\"node\":\"Get Hashes Only\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Generate Ticket Using ChatGPT\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Generate Ticket Using ChatGPT\":{\"main\":[[{\"node\":\"Create Ticket\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This n8n workflow demonstrates how to create a really simple yet effective customer support channel and pipeline by combining Slack, Linear and AI tools.\n\nBuilt on n8n's ability to integrate anything, this workflow is intended for small support teams who want to maximise re-use of the tools they already have with an interface which is doesn't require any onboarding.\n\n**Read the blog post here** : <https://blog.n8n.io/automated-customer-support-tickets-with-n8n-slack-linear-and-ai/>\n\n## How it works\n\n  * The workflow is connected to a slack channel setup with the customer to capture support issues.\n  * Only messages which are tagged with a \"✅\" reaction are captured by the workflow. Messages are tagged by the support team in the channel.\n  * Each captured support issue is sent to the AI model to classify, prioritise and rewrite into a support ticket.\n  * The generated support ticket is uploaded to Linear for the support team to investigate and track.\n  * Support team is able to report back to the user via the channel when issue is fixed.\n\n\n\n## Requirements\n\n  * Slack channel to be monitored\n  * Linear account and project\n\n\n\n## Customising this workflow\n\nDon't have Linear? This workflow can work just as well with traditional ticketing systems like JIRA.\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>This n8n workflow demonstrates how to create a really simple yet effective customer support channel and pipeline by combining Slack, Linear and AI tools.</p>\n<p>Built on n8n's ability to integrate anything, this workflow is intended for small support teams who want to maximise re-use of the tools they already have with an interface which is doesn't require any onboarding.</p>\n<p><strong>Read the blog post here</strong>: <a href=\"https://blog.n8n.io/automated-customer-support-tickets-with-n8n-slack-linear-and-ai/\" rel=\"ugc nofollow\" target=\"_blank\">https://blog.n8n.io/automated-customer-support-tickets-with-n8n-slack-linear-and-ai/</a></p>\n<h2>How it works</h2>\n<ul>\n<li>The workflow is connected to a slack channel setup with the customer to capture support issues.</li>\n<li>Only messages which are tagged with a \"✅\" reaction are captured by the workflow. Messages are tagged by the support team in the channel.</li>\n<li>Each captured support issue is sent to the AI model to classify, prioritise and rewrite into a support ticket.</li>\n<li>The generated support ticket is uploaded to Linear for the support team to investigate and track.</li>\n<li>Support team is able to report back to the user via the channel when issue is fixed.</li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>Slack channel to be monitored</li>\n<li>Linear account and project</li>\n</ul>\n<h2>Customising this workflow</h2>\n<p>Don't have Linear? This workflow can work just as well with traditional ticketing systems like JIRA.</p>\n</div><!--]-->",
  "readme_zh": "这个n8n工作流展示了如何通过整合Slack、Linear和AI工具，创建一个极其简单却高效的客户支持渠道与处理流程。\n\n基于n8n强大的集成能力，该工作流专为小型支持团队设计，旨在最大化复用现有工具，其界面设计无需任何培训即可上手。\n\n**阅读博客原文**：<https://blog.n8n.io/automated-customer-support-tickets-with-n8n-slack-linear-and-ai/>\n\n## 运作原理\n\n  * 工作流连接至与客户共用的Slack频道，用于收集支持请求\n  * 仅带有\"✅\"表情标记的消息会被工作流捕获（标记操作由支持团队在频道内完成）\n  * 每个被捕获的问题会发送至AI模型进行分类、优先级判定，并重写为标准化工单\n  * 生成的工单自动提交至Linear平台供支持团队跟踪处理\n  * 问题解决后，支持团队可通过原频道向用户反馈进展\n\n## 环境要求\n\n  * 需监控的Slack频道\n  * Linear账户及项目空间\n\n## 定制方案\n\n没有Linear？本工作流同样适用于JIRA等传统工单系统。",
  "title_zh": "集成Slack与Linear的客户支持渠道与工单系统",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"26ba763460b97c249b82942b23b6384876dfeb9327513332e743c5f6219c2b8e\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"2b3112a9-046e-4aae-8fcc-95bddf3bb02e\",\n      \"name\": \"Slack\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        828,\n        327\n      ],\n      \"parameters\": {\n        \"limit\": 10,\n        \"query\": \"in:#n8n-tickets has::ticket:\",\n        \"options\": {},\n        \"operation\": \"search\"\n      },\n      \"credentials\": {\n        \"slackApi\": {\n          \"id\": \"VfK3js0YdqBdQLGP\",\n          \"name\": \"Slack account\"\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"65fd6821-4d19-436c-81d9-9bdb0f5efddd\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1920,\n        480\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"85125704-7363-40de-af84-f267f8c7e919\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        2100,\n        480\n      ],\n      \"parameters\": {\n        \"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"title\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"summary\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"ideas\\\": {\\n      \\\"type\\\": \\\"array\\\",\\n      \\\"items\\\": { \\\"type\\\": \\\"string\\\" }\\n    },\\n    \\\"priority\\\": { \\\"type\\\": \\\"string\\\" }\\n  }\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"eda8851a-1929-4f2f-9149-627c0fe62fbc\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        628,\n        327\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"minutes\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"ad0d56b5-5caf-4fc0-bdbb-4e6207e4eb03\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        580,\n        112.87898199907983\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 432.4578914269739,\n        \"height\": 427.09547550768553,\n        \"content\": \"## 1. 查询Slack消息\\n[详细了解Slack触发器](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack)\\n\\nSlack API搜索功能采用与应用内相同的搜索语法。此处我们将使用该功能，在名为#n8n-tickets的指定频道中筛选出最近带有票务表情符号的消息。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d4ebe5b3-6d9a-4547-8af8-0985206c4ca4\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1040,\n        180.44851541532478\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 711.6907825442045,\n        \"height\": 632.7258798316449,\n        \"content\": \"## 2. 判断是否需要创建新工单  \\n[进一步了解如何使用Linear](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.linear)  \\n\\n对于已生成的问题，我们会将消息ID添加到消息描述中，以便在此工作流程节点进行检查，避免重复创建。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b2920271-6698-47a4-8cac-ea4cec7b47d6\",\n      \"name\": \"Get Values\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1100,\n        360\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={\\n  \\\"id\\\": \\\"#{{ $json.permalink.split('/').last() }}\\\",\\n  \\\"type\\\": \\\"{{ $json.type }}\\\",\\n  \\\"title\\\": \\\"__NOT_SET__\\\",\\n  \\\"channel\\\": \\\"{{ $json.channel.name }}\\\",\\n  \\\"user\\\": \\\"{{ $json.username }} ({{ $json.user }})\\\",\\n  \\\"ts\\\": \\\"{{ $json.ts }}\\\",\\n  \\\"permalink\\\": \\\"{{ $json.permalink }}\\\",\\n  \\\"message\\\": \\\"{{ $json.text.replaceAll('\\\"','\\\\\\\\\\\"').replaceAll('\\\\n', '\\\\\\\\n') }}\\\"\\n}\"\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"c4a4db2a-5d1c-4726-8c98-aef57fdcfaa6\",\n      \"name\": \"Create New Ticket?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1600,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"c11109b6-ee45-4b52-adc3-4be5fe420202\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"false\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ Boolean(($json.hashes ?? []).includes($json.id)) }}\",\n              \"rightValue\": \"=false\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"46acb0de-1df1-4116-8aaf-704ec6644d7c\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1780,\n        80\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 530.6864600881105,\n        \"height\": 578.3950618708791,\n        \"content\": \"## 3. 使用AI生成工单内容\\n[详细了解基础LLM链的使用](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\\n\\n本演示中，我们已对AI作出如下指令：\\n* 生成描述性问题标题\\n* 将用户消息总结为可执行的需求\\n* 根据用户消息的语气和上下文判定优先级\\n* 可通过工具或RAG技术提供潜在解决方案（未实现）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"503d4ae7-9d5b-4dab-94a2-da28bc0e49da\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        200,\n        120\n      ],\n      \"parameters\": {\n        \"width\": 359.6648027457353,\n        \"height\": 400.4748439127683,\n        \"content\": \"## 试试看吧！\\n### 该工作流程执行以下操作：\\n* 监控Slack频道中用户请求帮助的新消息\\n* 仅处理带有票据(🎫)表情符号标记的用户消息\\n* 首先检查Linear是否已为该用户消息创建票据\\n* 将用户消息发送至ChatGPT以生成标题、描述和优先级\\n* 在Linear中创建支持票据\\n\\n### 需要帮助？\\n加入[Discord](https://discord.com/invite/XPKeKXeB7d)或在[论坛](https://community.n8n.io/)提问！\\n\\n祝您玩得愉快！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"11e423a4-36b6-4ecd-8bf7-58a7d4a1aa9a\",\n      \"name\": \"Get Existing Issues\",\n      \"type\": \"n8n-nodes-base.linear\",\n      \"position\": [\n        1260,\n        360\n      ],\n      \"parameters\": {\n        \"operation\": \"getAll\"\n      },\n      \"credentials\": {\n        \"linearApi\": {\n          \"id\": \"Nn0F7T9FtvRUtEbe\",\n          \"name\": \"Linear account\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"413fde96-346a-468e-80b7-d465bd8add14\",\n      \"name\": \"Generate Ticket Using ChatGPT\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        1920,\n        320\n      ],\n      \"parameters\": {\n        \"text\": \"=The \\\"user issue\\\" is enclosed by 3 backticks:\\n```\\n{{ $('Get Values').item.json.message }}\\n```\\nYou will complete the following 4 tasks:\\n1. Generate a title intended for a support ticket based on the user issue only. Be descriptive but use no more than 10 words.\\n2. Summarise the user issue only by identifying the key expectations and steps that were taken to reach the conclusion.\\n3. Offer at most 3 suggestions to debug or resolve the user issue only. ignore the previous issues for this task.\\n4. Identify the urgency of the user issue only and denote the priority as one of \\\"low\\\", \\\"medium\\\", \\\"high\\\" or \\\"urgent\\\". If you cannot determine the urgency of the issue, then assign the \\\"low\\\" priority. Also consider that requests which require action either today or tomorrow should be prioritised as \\\"high\\\".\",\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.4\n    },\n    {\n      \"id\": \"66aecf53-6e8a-4ee8-88c3-be6b7d8d0527\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2340,\n        206\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 374.7406065828194,\n        \"height\": 352.3865785298774,\n        \"content\": \"## 4. 在Linear中创建新工单\\n[了解更多关于Linear的使用](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.linear)\\n\\n工单内容生成后，我们现在可以在Linear中创建工单以便支持团队处理。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f7898b7b-f60a-4315-a870-8c8ec4ad848f\",\n      \"name\": \"Create Ticket\",\n      \"type\": \"n8n-nodes-base.linear\",\n      \"position\": [\n        2480,\n        380\n      ],\n      \"parameters\": {\n        \"title\": \"={{ $json.output.title }}\",\n        \"teamId\": \"1c721608-321d-4132-ac32-6e92d04bb487\",\n        \"additionalFields\": {\n          \"stateId\": \"92962324-3d1f-4cf8-993b-0c982cc95245\",\n          \"priorityId\": \"={{ { 'urgent': 1, 'high': 2, 'medium': 3, 'low': 4 }[$json.output.priority.toLowerCase()] ?? 0 }}\",\n          \"description\": \"=## {{ $json.output.summary }}\\n\\n### Suggestions\\n{{ $json.output.ideas.map(idea => '* ' + idea).join('\\\\n') }}\\n\\n## Original Message\\n{{ $('Get Values').item.json[\\\"user\\\"] }} asks:\\n> {{ $('Get Values').item.json[\\\"message\\\"] }}\\n\\n### Metadata\\nchannel: {{ $('Get Values').item.json.channel }}\\nts: {{ $('Get Values').item.json.ts }}\\npermalink: {{ $('Get Values').item.json.permalink }}\\nhash: {{ $('Get Values').item.json.id }}\\n\"\n        }\n      },\n      \"credentials\": {\n        \"linearApi\": {\n          \"id\": \"Nn0F7T9FtvRUtEbe\",\n          \"name\": \"Linear account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0b706c12-6ce0-41af-ad4b-9d98d7d03a41\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1440,\n        360\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"multiplex\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"d5b30127-f237-459d-860a-2589e3b54fb8\",\n      \"name\": \"Get Hashes Only\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1260,\n        640\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"9b0e8527-ea17-4b1e-ba62-287111f4b37e\",\n              \"name\": \"hashes\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.descriptions.map(desc => desc.match(/hash\\\\:\\\\s([\\\\w#]+)/i)[1]) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"9de103e1-b6a4-4454-b1b9-73eff730fcb6\",\n      \"name\": \"Collect Descriptions\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        1260,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldsToAggregate\": {\n          \"fieldToAggregate\": [\n            {\n              \"renameField\": true,\n              \"outputFieldName\": \"descriptions\",\n              \"fieldToAggregate\": \"description\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"af34916f-7888-4d41-aee6-752b78e88c0c\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        780,\n        300\n      ],\n      \"parameters\": {\n        \"width\": 204.96868508214473,\n        \"height\": 296.735132421306,\n        \"content\": \"🚨**必填项**\\n* 在此设置需要监控的Slack频道。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"58ab44f7-5fe5-4804-8bf1-36f351d86528\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2440,\n        360\n      ],\n      \"parameters\": {\n        \"width\": 183.49787916474958,\n        \"height\": 296.735132421306,\n        \"content\": \"🚨**必填项**\\n* 在此处填写Linear团队名称或ID。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create New Ticket?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Slack\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Values\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Values\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get Existing Issues\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Hashes Only\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Slack\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Generate Ticket Using ChatGPT\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create New Ticket?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Ticket Using ChatGPT\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Existing Issues\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Collect Descriptions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Collect Descriptions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Hashes Only\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Generate Ticket Using ChatGPT\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Ticket Using ChatGPT\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Ticket\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}