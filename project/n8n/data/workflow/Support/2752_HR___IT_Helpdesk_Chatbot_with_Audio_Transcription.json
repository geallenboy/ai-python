{
  "title": "HR & IT Helpdesk Chatbot with Audio Transcription",
  "url": "https://n8n.io/workflows/2752-hr-and-it-helpdesk-chatbot-with-audio-transcription/",
  "category": "Support",
  "category_url": "https://n8n.io/workflows/categories/support/?count=20",
  "author": "Felipe Braga",
  "publish_date": "Last update 3 months ago",
  "publish_date_absolute": "2025-02-06",
  "content": "",
  "workflow_json": "{\"id\":\"zmgSshZ5xESr3ozl\",\"meta\":{\"instanceId\":\"1fedaf0aa3a5d200ffa1bbc98554b56cac895dd5d001907cb6f1c7a3c0a78215\",\"templateCredsSetupCompleted\":true},\"name\":\"HR & IT Helpdesk Chatbot with Audio Transcription\",\"tags\":[],\"nodes\":[{\"id\":\"c6cb921e-97ac-48f6-9d79-133993dd6ef7\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-300,-280],\"parameters\":{\"color\":7,\"width\":780,\"height\":460,\"content\":\"## 1. Download & Extract Internal Policy Documents\\n[Read more about the HTTP Request Tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\\n\\nBegin by importing the PDF documents that contain your internal policies and FAQs—these will become the knowledge base for your Internal Helpdesk Assistant. For example, you can store a company handbook or IT/HR policy PDFs on a shared drive or cloud storage and reference a direct download link here.\\n\\nIn this demonstration, we'll use the **HTTP Request node** to fetch the PDF file from a given URL and then parse its text contents using the **Extract from File node**. Once extracted, these text chunks will be used to build the vector store that underpins your helpdesk chatbot’s responses.\\n\\n[Example Employee Handbook with Policies](https://s3.amazonaws.com/scschoolfiles/656/employee_handbook_print_1.pdf)\"},\"typeVersion\":1},{\"id\":\"450a254c-eec3-41ea-a11d-eb87b62ee4f4\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-80,20],\"parameters\":{},\"typeVersion\":1},{\"id\":\"0972f31c-1f62-430c-8beb-bef8976cd0eb\",\"name\":\"HTTP Request\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[100,20],\"parameters\":{\"url\":\"https://s3.amazonaws.com/scschoolfiles/656/employee_handbook_print_1.pdf\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"bf523255-39f5-410a-beb7-6331139c5f9b\",\"name\":\"Extract from File\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[280,20],\"parameters\":{\"options\":{},\"operation\":\"pdf\"},\"typeVersion\":1},{\"id\":\"88901c7c-e747-44c7-87d9-e14ac99a93db\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[540,-280],\"parameters\":{\"color\":7,\"width\":780,\"height\":1020,\"content\":\"## 2. Create Internal Policy Vector Store\\n[Read more about the In-Memory Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\\n\\nVector stores power the retrieval process by matching a user's natural language questions to relevant chunks of text. We'll transform your extracted internal policy text into vector embeddings and store them in a database-like structure.\\n\\nWe will be using PostgreSQL which has production ready vector support.\\n\\n**How it works**  \\n1. The text extracted in Step 1 is split into manageable segments (chunks).  \\n2. An embedding model transforms these segments into numerical vectors.  \\n3. These vectors, along with metadata, are stored in PostgreSQL.  \\n4. When users ask a question, their query is embedded and matched to the most relevant vectors, improving the accuracy of the chatbot's response.\"},\"typeVersion\":1},{\"id\":\"8d6472ab-dcff-4d24-a320-109787bce52a\",\"name\":\"Create HR Policies\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStorePGVector\",\"position\":[620,100],\"parameters\":{\"mode\":\"insert\",\"options\":{}},\"credentials\":{\"postgres\":{\"id\":\"wQK6JXyS5y1icHw3\",\"name\":\"Postgres account\"}},\"typeVersion\":1},{\"id\":\"e669b3fb-aaf1-4df8-855b-d3142215b308\",\"name\":\"Embeddings OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[600,320],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"J2D6m1evHLUJOMhO\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"e25418af-65bb-4628-9b26-ec59cae7b2b4\",\"name\":\"Default Data Loader\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[760,340],\"parameters\":{\"options\":{},\"jsonData\":\"={{ $('Extract from File').item.json.text }}\",\"jsonMode\":\"expressionData\"},\"typeVersion\":1},{\"id\":\"a4538deb-8406-4a5b-9b1e-4e2f859943c8\",\"name\":\"Recursive Character Text Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\"position\":[860,560],\"parameters\":{\"options\":{},\"chunkSize\":2000},\"typeVersion\":1},{\"id\":\"7ee0e861-1576-4b0c-b2ef-3fc023371907\",\"name\":\"Telegram Trigger\",\"type\":\"n8n-nodes-base.telegramTrigger\",\"position\":[1420,240],\"webhookId\":\"65f501de-3c14-4089-9b9d-8956676bebf3\",\"parameters\":{\"updates\":[\"message\"],\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"jSdrxiRKb8yfG6Ty\",\"name\":\"Telegram account\"}},\"typeVersion\":1.1},{\"id\":\"bcf1e82e-0e83-4783-a59f-857a6d1528b6\",\"name\":\"Verify Message Type\",\"type\":\"n8n-nodes-base.switch\",\"position\":[1620,240],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"Text\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"operator\":{\"type\":\"array\",\"operation\":\"contains\",\"rightType\":\"any\"},\"leftValue\":\"={{ $json.message.keys()}}\",\"rightValue\":\"text\"}]},\"renameOutput\":true},{\"outputKey\":\"Audio\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d16eb899-cccb-41b6-921e-172c525ff92c\",\"operator\":{\"type\":\"array\",\"operation\":\"contains\",\"rightType\":\"any\"},\"leftValue\":\"={{ $json.message.keys()}}\",\"rightValue\":\"voice\"}]},\"renameOutput\":true}]},\"options\":{\"fallbackOutput\":\"extra\"}},\"typeVersion\":3.2,\"alwaysOutputData\":false},{\"id\":\"d403f864-c781-48fc-a62b-de0c8bfedf06\",\"name\":\"OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[2340,380],\"parameters\":{\"options\":{},\"resource\":\"audio\",\"operation\":\"transcribe\",\"binaryPropertyName\":\"=data\"},\"credentials\":{\"openAiApi\":{\"id\":\"J2D6m1evHLUJOMhO\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.8},{\"id\":\"5b17c8f1-4bee-4f2a-abcb-74fe72d4cdfd\",\"name\":\"Telegram1\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[2120,380],\"parameters\":{\"fileId\":\"={{ $json.message.voice.file_id }}\",\"resource\":\"file\"},\"credentials\":{\"telegramApi\":{\"id\":\"jSdrxiRKb8yfG6Ty\",\"name\":\"Telegram account\"}},\"typeVersion\":1.2},{\"id\":\"cc6862cb-acfc-465b-b142-dd5fdc12fb13\",\"name\":\"Unsupported Message Type\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[2200,560],\"parameters\":{\"text\":\"I'm not able to process this message type.\",\"chatId\":\"={{ $json.message.chat.id }}\",\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"jSdrxiRKb8yfG6Ty\",\"name\":\"Telegram account\"}},\"typeVersion\":1.2},{\"id\":\"8b97aaa1-ea0d-4b11-89c9-9ac6376c0760\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[2860,400],\"parameters\":{\"text\":\"={{ $json.text }}\",\"options\":{\"systemMessage\":\"You are a helpful assistant for HR and employee policies\"},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"e0d5416e-a799-46a2-83e3-fa6919ec0e36\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[2800,840],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"J2D6m1evHLUJOMhO\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.1},{\"id\":\"9149f41d-692e-49bc-ad70-848492d2c345\",\"name\":\"Postgres Chat Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\"position\":[3060,840],\"parameters\":{\"sessionKey\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"sessionIdType\":\"customKey\"},\"credentials\":{\"postgres\":{\"id\":\"wQK6JXyS5y1icHw3\",\"name\":\"Postgres account\"}},\"typeVersion\":1.3},{\"id\":\"a1f68887-da44-4bff-86fc-f607a5bd0ab6\",\"name\":\"Answer questions with a vector store\",\"type\":\"@n8n/n8n-nodes-langchain.toolVectorStore\",\"position\":[3360,580],\"parameters\":{\"name\":\"hr_employee_policies\",\"description\":\"data for HR and employee policies\"},\"typeVersion\":1},{\"id\":\"76220fe4-2448-4b32-92d8-68c564cc702d\",\"name\":\"Postgres PGVector Store\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStorePGVector\",\"position\":[3220,780],\"parameters\":{\"options\":{}},\"credentials\":{\"postgres\":{\"id\":\"wQK6JXyS5y1icHw3\",\"name\":\"Postgres account\"}},\"typeVersion\":1},{\"id\":\"055fd294-7483-45ce-b58a-c90075199f5f\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[3640,780],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"J2D6m1evHLUJOMhO\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.1},{\"id\":\"cc13eac7-8163-45bf-8d8a-9cf72659e357\",\"name\":\"Embeddings OpenAI1\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[3300,920],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"J2D6m1evHLUJOMhO\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"d46e415e-75ff-46b8-b382-cdcda216b1ed\",\"name\":\"Telegram\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[4200,420],\"parameters\":{\"text\":\"={{ $json.output }}\",\"chatId\":\"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"jSdrxiRKb8yfG6Ty\",\"name\":\"Telegram account\"}},\"typeVersion\":1.2},{\"id\":\"ddf623a1-0a5e-48c9-b897-6a339895a891\",\"name\":\"Edit Fields\",\"type\":\"n8n-nodes-base.set\",\"position\":[2120,200],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"403b336f-87ce-4bef-a5f2-1640425f8198\",\"name\":\"text\",\"type\":\"string\",\"value\":\"={{ $json.message.text }}\"}]},\"includeOtherFields\":true},\"typeVersion\":3.4},{\"id\":\"4ae84e17-cfc1-425c-930d-949da7308b78\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1340,-280],\"parameters\":{\"color\":4,\"width\":1300,\"height\":1020,\"content\":\"## 3. Handling Messages with Fallback Support\\n\\nThis workflow processes Telegram messages to handle **text** and **voice** inputs, with a fallback for unsupported message types. Here’s how it works:\\n\\n1. **Trigger Node**:\\n   - The workflow starts with a Telegram trigger that listens for incoming messages.\\n\\n2. **Message Type Check**:\\n   - The workflow verifies the type of message received:\\n     - **Text Message**: If the message contains `$json.message.text`, it is sent directly to the agent.\\n     - **Voice Message**: If the message contains `$json.message.voice`, the audio is transcribed into text using a transcription service, and the result is sent to the agent.\\n\\n3. **Fallback Path**:\\n   - If the message is neither text nor voice, a fallback response is returned:\\n     `\\\"Sorry, I couldn’t process your message. Please try again.\\\"`\\n\\n4. **Unified Output**:\\n   - Both text messages and transcribed voice messages are converted into the same format before sending to the agent, ensuring consistency in handling.\\n\"},\"typeVersion\":1},{\"id\":\"86ad4e08-ef2d-405e-8861-bff38e1db651\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[220,220],\"parameters\":{\"width\":260,\"height\":80,\"content\":\"The setup needs to be run at the start or when data is changed\"},\"typeVersion\":1},{\"id\":\"b05c4437-00fb-40f6-87fa-8dc564b16005\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2680,-280],\"parameters\":{\"color\":4,\"width\":1180,\"height\":1420,\"content\":\"## 4. HR & IT AI Agent Provides Helpdesk Support  \\nn8n's AI agents allow you to create intelligent and interactive workflows that can access and retrieve data from internal knowledgebases. In this workflow, the AI agent is configured to provide answers for HR and IT queries by performing Retrieval-Augmented Generation (RAG) on internal documents.\\n\\n### How It Works:\\n- **Internal Knowledgebase Access**: A **Vector store tool** is used to connect the agent to the HR & IT knowledgebase built earlier in the workflow. This enables the agent to fetch accurate and specific answers for employee queries.\\n- **Chat Memory**: A **Chat memory subnode** tracks the conversation, allowing the agent to maintain context across multiple queries from the same user, creating a personalized and cohesive experience.\\n- **Dynamic Query Responses**: Whether employees ask about policies, leave balances, or technical troubleshooting, the agent retrieves relevant data from the vector store and crafts a natural language response.\\n\\nBy integrating the AI agent with a vector store and chat memory, this workflow empowers your HR & IT helpdesk chatbot to provide quick, accurate, and conversational support to employees. \\n\\nPostgrSQL is used for all steps to simplify development in production.\"},\"typeVersion\":1},{\"id\":\"b266ca42-de62-4341-9aff-33ee0ac68045\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[3900,300],\"parameters\":{\"color\":4,\"width\":540,\"height\":280,\"content\":\"## 5. Send Message\\n\\nThe simplest and most important part :)\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"7b1d11ca-9b56-4c5f-9189-26d536c24b76\",\"connections\":{\"OpenAI\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"AI Agent\":{\"main\":[[{\"node\":\"Telegram\",\"type\":\"main\",\"index\":0}]]},\"Telegram1\":{\"main\":[[{\"node\":\"OpenAI\",\"type\":\"main\",\"index\":0}]]},\"Edit Fields\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"HTTP Request\":{\"main\":[[{\"node\":\"Extract from File\",\"type\":\"main\",\"index\":0}]]},\"Telegram Trigger\":{\"main\":[[{\"node\":\"Verify Message Type\",\"type\":\"main\",\"index\":0}]]},\"Embeddings OpenAI\":{\"ai_embedding\":[[{\"node\":\"Create HR Policies\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Extract from File\":{\"main\":[[{\"node\":\"Create HR Policies\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Embeddings OpenAI1\":{\"ai_embedding\":[[{\"node\":\"Postgres PGVector Store\",\"type\":\"ai_embedding\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"Answer questions with a vector store\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Default Data Loader\":{\"ai_document\":[[{\"node\":\"Create HR Policies\",\"type\":\"ai_document\",\"index\":0}]]},\"Verify Message Type\":{\"main\":[[{\"node\":\"Edit Fields\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Telegram1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Unsupported Message Type\",\"type\":\"main\",\"index\":0}]]},\"Postgres Chat Memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Postgres PGVector Store\":{\"ai_vectorStore\":[[{\"node\":\"Answer questions with a vector store\",\"type\":\"ai_vectorStore\",\"index\":0}]]},\"Recursive Character Text Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Default Data Loader\",\"type\":\"ai_textSplitter\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"HTTP Request\",\"type\":\"main\",\"index\":0}]]},\"Answer questions with a vector store\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]}}}",
  "readme": "An intelligent chatbot that assists employees by answering common HR or IT questions, supporting both **text** and **audio messages**. This unique feature ensures employees can conveniently ask questions via voice messages, which are transcribed and processed just like text queries.\n\n* * *\n\n### How It Works\n\n  1. **Message Capture** : When an employee sends a message to the chatbot in WhatsApp or Telegram (text or audio), the chatbot captures the input.\n  2. **Audio Transcription** : For audio messages, the chatbot transcribes the content into text using an AI-powered transcription service (e.g., Whisper, Google Cloud Speech-to-Text).\n  3. **Query Processing** : \n     * The transcribed text (or directly entered text) is sent to an AI service (e.g., OpenAI) to generate embeddings.\n     * These embeddings are used to search a vector database (e.g., Supabase or Qdrant) containing the company’s internal HR and IT documentation.\n     * The most relevant data is retrieved and sent back to the AI service to compose a concise and helpful response.\n  4. **Response Delivery** : The chatbot sends the final response back to the employee, whether the input was text or audio.\n\n\n\n* * *\n\n### Set Up Steps\n\n  * **Estimated Time** : 20–25 minutes\n  * **Prerequisites** : \n    1. Create an account with an AI provider (e.g., OpenAI).\n    2. Connect WhatsApp or Telegram credentials in n8n.\n    3. Set up a transcription service (e.g., Whisper or Google Cloud Speech-to-Text).\n    4. Configure a vector database (e.g., Supabase or Qdrant) and add your internal HR and IT documentation.\n    5. Import the workflow template into n8n and update environment variables for your credentials.\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>An intelligent chatbot that assists employees by answering common HR or IT questions, supporting both <strong>text</strong> and <strong>audio messages</strong>. This unique feature ensures employees can conveniently ask questions via voice messages, which are transcribed and processed just like text queries.</p>\n<hr>\n<h3>How It Works</h3>\n<ol>\n<li><strong>Message Capture</strong>: When an employee sends a message to the chatbot in WhatsApp or Telegram (text or audio), the chatbot captures the input.</li>\n<li><strong>Audio Transcription</strong>: For audio messages, the chatbot transcribes the content into text using an AI-powered transcription service (e.g., Whisper, Google Cloud Speech-to-Text).</li>\n<li><strong>Query Processing</strong>:\n<ul>\n<li>The transcribed text (or directly entered text) is sent to an AI service (e.g., OpenAI) to generate embeddings.</li>\n<li>These embeddings are used to search a vector database (e.g., Supabase or Qdrant) containing the company’s internal HR and IT documentation.</li>\n<li>The most relevant data is retrieved and sent back to the AI service to compose a concise and helpful response.</li>\n</ul>\n</li>\n<li><strong>Response Delivery</strong>: The chatbot sends the final response back to the employee, whether the input was text or audio.</li>\n</ol>\n<hr>\n<h3>Set Up Steps</h3>\n<ul>\n<li><strong>Estimated Time</strong>: 20–25 minutes</li>\n<li><strong>Prerequisites</strong>:\n<ol>\n<li>Create an account with an AI provider (e.g., OpenAI).</li>\n<li>Connect WhatsApp or Telegram credentials in n8n.</li>\n<li>Set up a transcription service (e.g., Whisper or Google Cloud Speech-to-Text).</li>\n<li>Configure a vector database (e.g., Supabase or Qdrant) and add your internal HR and IT documentation.</li>\n<li>Import the workflow template into n8n and update environment variables for your credentials.</li>\n</ol>\n</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "一款智能聊天机器人，通过解答常见人力资源或IT问题为员工提供支持，同时兼容**文字**和**语音消息**。其独特功能在于支持员工通过语音消息便捷提问，系统会将语音转录为文字后像处理文本查询一样进行分析。\n\n* * *\n\n### 运作原理\n\n  1. **消息捕获**：当员工通过WhatsApp或Telegram向聊天机器人发送文字或语音消息时，系统自动捕获输入内容。\n  2. **语音转录**：若为语音消息，则通过AI转录服务（如Whisper、谷歌云语音转文字）将内容转化为文本。\n  3. **查询处理**：\n     * 将转录文本（或直接输入的文本）发送至AI服务（如OpenAI）生成嵌入向量\n     * 通过向量数据库（如Supabase或Qdrant）检索公司内部人力资源和IT文档库\n     * 获取最相关数据并返回AI服务生成简明有效的答复\n  4. **回复传递**：无论原始输入是文字还是语音，最终答复都将通过聊天机器人返回给员工\n\n* * *\n\n### 配置步骤\n\n  * **预计耗时**：20-25分钟\n  * **先决条件**：\n    1. 注册AI服务商账号（如OpenAI）\n    2. 在n8n中配置WhatsApp或Telegram凭证\n    3. 设置语音转录服务（如Whisper或谷歌云语音转文字）\n    4. 部署向量数据库（如Supabase或Qdrant）并导入公司内部人力资源和IT文档\n    5. 将工作流模板导入n8n，并更新凭证相关的环境变量",
  "title_zh": "人力资源与IT服务台聊天机器人（含音频转录功能）",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"zmgSshZ5xESr3ozl\",\n  \"meta\": {\n    \"instanceId\": \"1fedaf0aa3a5d200ffa1bbc98554b56cac895dd5d001907cb6f1c7a3c0a78215\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"HR & IT Helpdesk Chatbot with Audio Transcription\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"c6cb921e-97ac-48f6-9d79-133993dd6ef7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -300,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 780,\n        \"height\": 460,\n        \"content\": \"## 1. 下载并提取内部政策文档\\n[详细了解HTTP请求工具](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\\n\\n首先导入包含内部政策与常见问题的PDF文档——这些将构成内部帮助台助理的知识库。例如，您可将公司手册或IT/HR政策PDF存放在共享驱动器或云存储中，并在此处引用直接下载链接。\\n\\n本演示将使用**HTTP请求节点**从指定URL获取PDF文件，再通过**文件内容提取节点**解析文本内容。提取后的文本片段将用于构建向量数据库，作为帮助台聊天机器人应答的底层支持。\\n\\n[政策类员工手册示例](https://s3.amazonaws.com/scschoolfiles/656/employee_handbook_print_1.pdf)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"450a254c-eec3-41ea-a11d-eb87b62ee4f4\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -80,\n        20\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0972f31c-1f62-430c-8beb-bef8976cd0eb\",\n      \"name\": \"HTTP Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        100,\n        20\n      ],\n      \"parameters\": {\n        \"url\": \"https://s3.amazonaws.com/scschoolfiles/656/employee_handbook_print_1.pdf\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"bf523255-39f5-410a-beb7-6331139c5f9b\",\n      \"name\": \"Extract from File\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        280,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"pdf\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"88901c7c-e747-44c7-87d9-e14ac99a93db\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        540,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 780,\n        \"height\": 1020,\n        \"content\": \"## 2. 创建内部政策向量存储库\\n[深入了解内存向量存储](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\\n\\n向量存储库通过将用户的自然语言问题与相关文本片段进行匹配，为检索过程提供动力。我们将把提取的内部政策文本转化为向量嵌入，并将其存储在类似数据库的结构中。\\n\\n我们将使用具备生产级向量支持能力的PostgreSQL数据库。\\n\\n**实现原理**  \\n1. 将第一步提取的文本分割为可管理的段落（块）  \\n2. 通过嵌入模型将这些段落转换为数值向量  \\n3. 这些向量与元数据一同存入PostgreSQL数据库  \\n4. 当用户提问时，其查询会被向量化并与最相关的存储向量匹配，从而提升聊天机器人回答的准确性\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d6472ab-dcff-4d24-a320-109787bce52a\",\n      \"name\": \"Create HR Policies\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePGVector\",\n      \"position\": [\n        620,\n        100\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"wQK6JXyS5y1icHw3\",\n          \"name\": \"Postgres account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e669b3fb-aaf1-4df8-855b-d3142215b308\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        600,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"J2D6m1evHLUJOMhO\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"e25418af-65bb-4628-9b26-ec59cae7b2b4\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        760,\n        340\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"jsonData\": \"={{ $('Extract from File').item.json.text }}\",\n        \"jsonMode\": \"expressionData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4538deb-8406-4a5b-9b1e-4e2f859943c8\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        860,\n        560\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"chunkSize\": 2000\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7ee0e861-1576-4b0c-b2ef-3fc023371907\",\n      \"name\": \"Telegram Trigger\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        1420,\n        240\n      ],\n      \"webhookId\": \"65f501de-3c14-4089-9b9d-8956676bebf3\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"jSdrxiRKb8yfG6Ty\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"bcf1e82e-0e83-4783-a59f-857a6d1528b6\",\n      \"name\": \"Verify Message Type\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1620,\n        240\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"Text\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"array\",\n                      \"operation\": \"contains\",\n                      \"rightType\": \"any\"\n                    },\n                    \"leftValue\": \"={{ $json.message.keys()}}\",\n                    \"rightValue\": \"text\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"Audio\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"d16eb899-cccb-41b6-921e-172c525ff92c\",\n                    \"operator\": {\n                      \"type\": \"array\",\n                      \"operation\": \"contains\",\n                      \"rightType\": \"any\"\n                    },\n                    \"leftValue\": \"={{ $json.message.keys()}}\",\n                    \"rightValue\": \"voice\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"d403f864-c781-48fc-a62b-de0c8bfedf06\",\n      \"name\": \"OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        2340,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"audio\",\n        \"operation\": \"transcribe\",\n        \"binaryPropertyName\": \"=data\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"J2D6m1evHLUJOMhO\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"5b17c8f1-4bee-4f2a-abcb-74fe72d4cdfd\",\n      \"name\": \"Telegram1\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        2120,\n        380\n      ],\n      \"parameters\": {\n        \"fileId\": \"={{ $json.message.voice.file_id }}\",\n        \"resource\": \"file\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"jSdrxiRKb8yfG6Ty\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"cc6862cb-acfc-465b-b142-dd5fdc12fb13\",\n      \"name\": \"Unsupported Message Type\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        2200,\n        560\n      ],\n      \"parameters\": {\n        \"text\": \"I'm not able to process this message type.\",\n        \"chatId\": \"={{ $json.message.chat.id }}\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"jSdrxiRKb8yfG6Ty\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8b97aaa1-ea0d-4b11-89c9-9ac6376c0760\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        2860,\n        400\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.text }}\",\n        \"options\": {\n          \"systemMessage\": \"You are a helpful assistant for HR and employee policies\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"e0d5416e-a799-46a2-83e3-fa6919ec0e36\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        2800,\n        840\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"J2D6m1evHLUJOMhO\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"9149f41d-692e-49bc-ad70-848492d2c345\",\n      \"name\": \"Postgres Chat Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\n      \"position\": [\n        3060,\n        840\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"sessionIdType\": \"customKey\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"wQK6JXyS5y1icHw3\",\n          \"name\": \"Postgres account\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"a1f68887-da44-4bff-86fc-f607a5bd0ab6\",\n      \"name\": \"Answer questions with a vector store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolVectorStore\",\n      \"position\": [\n        3360,\n        580\n      ],\n      \"parameters\": {\n        \"name\": \"hr_employee_policies\",\n        \"description\": \"data for HR and employee policies\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"76220fe4-2448-4b32-92d8-68c564cc702d\",\n      \"name\": \"Postgres PGVector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePGVector\",\n      \"position\": [\n        3220,\n        780\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"wQK6JXyS5y1icHw3\",\n          \"name\": \"Postgres account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"055fd294-7483-45ce-b58a-c90075199f5f\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        3640,\n        780\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"J2D6m1evHLUJOMhO\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"cc13eac7-8163-45bf-8d8a-9cf72659e357\",\n      \"name\": \"Embeddings OpenAI1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        3300,\n        920\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"J2D6m1evHLUJOMhO\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"d46e415e-75ff-46b8-b382-cdcda216b1ed\",\n      \"name\": \"Telegram\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        4200,\n        420\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.output }}\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"jSdrxiRKb8yfG6Ty\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"ddf623a1-0a5e-48c9-b897-6a339895a891\",\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2120,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"403b336f-87ce-4bef-a5f2-1640425f8198\",\n              \"name\": \"text\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.message.text }}\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"4ae84e17-cfc1-425c-930d-949da7308b78\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1340,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1300,\n        \"height\": 1020,\n        \"content\": \"## 3. 支持回退机制的消息处理流程\\n\\n该工作流用于处理Telegram消息，支持**文本**和**语音**输入，并对未支持的消息类型提供回退处理。具体运作方式如下：\\n\\n1. **触发节点**：\\n   - 工作流通过Telegram触发器启动，持续监听传入消息。\\n\\n2. **消息类型校验**：\\n   - 系统会判断接收到的消息类型：\\n     - **文本消息**：若消息包含`$json.message.text`字段，则直接转发给智能体处理。\\n     - **语音消息**：若消息包含`$json.message.voice`字段，则通过语音转写服务将音频转换为文本后发送给智能体。\\n\\n3. **回退路径**：\\n   - 若消息既非文本也非语音，则返回默认提示：\\n     `\\\"抱歉，我无法处理该类型消息，请重新尝试。\\\"`\\n\\n4. **统一输出格式**：\\n   - 文本消息和转写后的语音消息在发送至智能体前，均会被转换为统一格式，确保处理逻辑的一致性。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"86ad4e08-ef2d-405e-8861-bff38e1db651\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        220,\n        220\n      ],\n      \"parameters\": {\n        \"width\": 260,\n        \"height\": 80,\n        \"content\": \"设置需要在开始时或数据变更时运行。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b05c4437-00fb-40f6-87fa-8dc564b16005\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2680,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1180,\n        \"height\": 1420,\n        \"content\": \"## 4. 人力资源与IT人工智能助手提供工单支持  \\nn8n的人工智能助手支持创建智能交互式工作流，能够从内部知识库访问并检索数据。本工作流中，AI助手通过实施检索增强生成（RAG）技术，针对内部文档为人力资源和IT类查询提供解答。\\n\\n### 运行机制：\\n- **内部知识库连接**：通过**向量存储工具**将助手与前期构建的HR&IT知识库关联，确保为员工咨询获取精准答案  \\n- **对话记忆功能**：**聊天记忆子节点**持续追踪对话上下文，使助手能在同一用户的多轮咨询中保持语境连贯，打造个性化服务体验  \\n- **动态应答系统**：无论是政策解读、假期余额查询还是技术故障排除，助手都能从向量存储中提取相关信息并生成自然语言回复  \\n\\n该工作流通过将AI助手与向量存储及对话记忆系统集成，使人资与IT帮助台聊天机器人能够为员工提供快速、准确且富有对话性的支持。\\n\\n所有环节均采用PostgreSQL数据库，以简化生产环境中的开发流程。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b266ca42-de62-4341-9aff-33ee0ac68045\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3900,\n        300\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 540,\n        \"height\": 280,\n        \"content\": \"## 5. 发送消息\\n\\n最简单也是最重要的部分 :)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"7b1d11ca-9b56-4c5f-9189-26d536c24b76\",\n  \"connections\": {\n    \"OpenAI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract from File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Verify Message Type\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Create HR Policies\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract from File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create HR Policies\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Postgres PGVector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Answer questions with a vector store\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Create HR Policies\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Verify Message Type\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Telegram1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Unsupported Message Type\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Postgres Chat Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Postgres PGVector Store\": {\n      \"ai_vectorStore\": [\n        [\n          {\n            \"node\": \"Answer questions with a vector store\",\n            \"type\": \"ai_vectorStore\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Answer questions with a vector store\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}