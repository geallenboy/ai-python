{
  "title": "Hacker News Job Listing Scraper and Parser",
  "url": "https://n8n.io/workflows/2924-hacker-news-job-listing-scraper-and-parser/",
  "category": "HR",
  "category_url": "https://n8n.io/workflows/categories/hr/?count=20",
  "author": "Julian Kaiser",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-07",
  "content": "",
  "workflow_json": "{\"id\":\"0JsHmmyeHw5Ffz5m\",\"meta\":{\"instanceId\":\"d4d7965840e96e50a3e02959a8487c692901dfa8d5cc294134442c67ce1622d3\",\"templateCredsSetupCompleted\":true},\"name\":\"HN Who is Hiring Scrape\",\"tags\":[],\"nodes\":[{\"id\":\"f7cdb3ee-9bb0-4006-829a-d4ce797191d5\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-20,-220],\"parameters\":{},\"typeVersion\":1},{\"id\":\"0475e25d-9bf4-450d-abd3-a04608a438a4\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[60,-620],\"parameters\":{\"width\":460,\"height\":340,\"content\":\"## Go to https://hn.algolia.com\\n- filter by \\\"Ask HN: Who is hiring?\\\" (important with quotes for full match)\\n- sort by date\\n- Chrome Network Tab > find API call > click \\\"Copy as cURL\\\"\\n- n8n HTTP node -> import cURL and paste \\n- I've set the API key as Header Auth so you will have to do the above yourself to make this work\"},\"typeVersion\":1},{\"id\":\"a686852b-ff84-430b-92bb-ce02a6808e19\",\"name\":\"Split Out\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[400,-220],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"hits\"},\"typeVersion\":1},{\"id\":\"cdaaa738-d561-4fa0-b2c7-8ea9e6778eb1\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1260,-620],\"parameters\":{\"width\":500,\"height\":340,\"content\":\"## Go to HN API \\nhttps://github.com/HackerNews/API\\n\\nWe'll need following endpoints: \\n- For example, a story: https://hacker-news.firebaseio.com/v0/item/8863.json?print=pretty\\n- comment: https://hacker-news.firebaseio.com/v0/item/2921983.json?print=pretty\\n\\n\"},\"typeVersion\":1},{\"id\":\"4f353598-9e32-4be4-9e7b-c89cc05305fd\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[2680,-20],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"Fbb2ueT0XP5xMRme\",\"name\":\"OpenAi account 2\"}},\"typeVersion\":1.2},{\"id\":\"5bd0d7cc-497a-497c-aa4c-589d9ceeca14\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[2840,-20],\"parameters\":{\"schemaType\":\"manual\",\"inputSchema\":\"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"company\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Name of the hiring company\\\"\\n    },\\n    \\\"title\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Job title/role being advertised\\\"\\n    },\\n    \\\"location\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Work location including remote/hybrid status\\\"\\n    },\\n    \\\"type\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"enum\\\": [\\n        \\\"FULL_TIME\\\",\\n        \\\"PART_TIME\\\",\\n        \\\"CONTRACT\\\",\\n        \\\"INTERNSHIP\\\",\\n        \\\"FREELANCE\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Employment type (Full-time, Contract, etc)\\\"\\n    },\\n    \\\"work_location\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"enum\\\": [\\n        \\\"REMOTE\\\",\\n        \\\"HYBRID\\\",\\n        \\\"ON_SITE\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Work arrangement type\\\"\\n    },\\n    \\\"salary\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Compensation details if provided\\\"\\n    },\\n    \\\"description\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Main job description text including requirements and team info\\\"\\n    },\\n    \\\"apply_url\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Direct application/job posting URL\\\"\\n    },\\n    \\\"company_url\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Company website or careers page\\\"\\n    }\\n  }\\n}\\n\"},\"typeVersion\":1.2},{\"id\":\"b84ca004-6f3b-4577-8910-61b8584b161d\",\"name\":\"Search for Who is hiring posts\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[200,-220],\"parameters\":{\"url\":\"https://uj5wyc0l7x-dsn.algolia.net/1/indexes/Item_dev_sort_date/query\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"{\\n  \\\"query\\\": \\\"\\\\\\\"Ask HN: Who is hiring\\\\\\\"\\\",\\n  \\\"analyticsTags\\\": [\\n    \\\"web\\\"\\n  ],\\n  \\\"page\\\": 0,\\n  \\\"hitsPerPage\\\": 30,\\n  \\\"minWordSizefor1Typo\\\": 4,\\n  \\\"minWordSizefor2Typos\\\": 8,\\n  \\\"advancedSyntax\\\": true,\\n  \\\"ignorePlurals\\\": false,\\n  \\\"clickAnalytics\\\": true,\\n  \\\"minProximity\\\": 7,\\n  \\\"numericFilters\\\": [],\\n  \\\"tagFilters\\\": [\\n    [\\n      \\\"story\\\"\\n    ],\\n    []\\n  ],\\n  \\\"typoTolerance\\\": \\\"min\\\",\\n  \\\"queryType\\\": \\\"prefixNone\\\",\\n  \\\"restrictSearchableAttributes\\\": [\\n    \\\"title\\\",\\n    \\\"comment_text\\\",\\n    \\\"url\\\",\\n    \\\"story_text\\\",\\n    \\\"author\\\"\\n  ],\\n  \\\"getRankingInfo\\\": true\\n}\",\"sendBody\":true,\"sendQuery\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"x-algolia-agent\",\"value\":\"Algolia for JavaScript (4.13.1); Browser (lite)\"},{\"name\":\"x-algolia-application-id\",\"value\":\"UJ5WYC0L7X\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"Accept\",\"value\":\"*/*\"},{\"name\":\"Accept-Language\",\"value\":\"en-GB,en-US;q=0.9,en;q=0.8\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Origin\",\"value\":\"https://hn.algolia.com\"},{\"name\":\"Referer\",\"value\":\"https://hn.algolia.com/\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"empty\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"cors\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"cross-site\"},{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\"},{\"name\":\"sec-ch-ua\",\"value\":\"\\\"Chromium\\\";v=\\\"133\\\", \\\"Not(A:Brand\\\";v=\\\"99\\\"\"},{\"name\":\"sec-ch-ua-mobile\",\"value\":\"?0\"},{\"name\":\"sec-ch-ua-platform\",\"value\":\"\\\"macOS\\\"\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"oVEXp2ZbYCXypMVz\",\"name\":\"Algolia Auth\"}},\"typeVersion\":4.2},{\"id\":\"205e66f6-cd6b-4cfd-a6ec-2226c35ddaac\",\"name\":\"Get relevant data\",\"type\":\"n8n-nodes-base.set\",\"position\":[700,-220],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"73dd2325-faa7-4650-bd78-5fc97cc202de\",\"name\":\"title\",\"type\":\"string\",\"value\":\"={{ $json.title }}\"},{\"id\":\"44918eac-4510-440e-9ac0-bf14d2b2f3af\",\"name\":\"createdAt\",\"type\":\"string\",\"value\":\"={{ $json.created_at }}\"},{\"id\":\"00eb6f09-2c22-411c-949c-886b2d95b6eb\",\"name\":\"updatedAt\",\"type\":\"string\",\"value\":\"={{ $json.updated_at }}\"},{\"id\":\"2b4f9da6-f60e-46e0-ba9d-3242fa955a55\",\"name\":\"storyId\",\"type\":\"string\",\"value\":\"={{ $json.story_id }}\"}]}},\"typeVersion\":3.4},{\"id\":\"16bc5628-8a29-4eac-8be9-b4e9da802e1e\",\"name\":\"Get latest post\",\"type\":\"n8n-nodes-base.filter\",\"position\":[900,-220],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d7dd7175-2a50-45aa-bd3e-4c248c9193c4\",\"operator\":{\"type\":\"dateTime\",\"operation\":\"after\"},\"leftValue\":\"={{ $json.createdAt }}\",\"rightValue\":\"={{$now.minus({days: 30})}} \"}]}},\"typeVersion\":2.2},{\"id\":\"92e1ef74-5ae1-4195-840b-115184db464f\",\"name\":\"Split out children (jobs)\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1460,-220],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"kids\"},\"typeVersion\":1},{\"id\":\"d0836aae-b98a-497f-a6f7-0ad563c262a0\",\"name\":\"Trun into structured data\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[2600,-220],\"parameters\":{\"text\":\"={{ $json.cleaned_text }}\",\"messages\":{\"messageValues\":[{\"message\":\"Extract the JSON data\"}]},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.5},{\"id\":\"fd818a93-627c-435d-91ba-5d759d5a9004\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2600,-620],\"parameters\":{\"width\":840,\"height\":340,\"content\":\"## Data Structure\\n\\nWe use Openai GPT-4o-mini to transform the raw data in a unified data structure. Feel free to change this.\\n\\n```json\\n{\\n  \\\"company\\\": \\\"Name of the hiring company\\\",\\n  \\\"title\\\": \\\"Job title/role being advertised\\\",\\n  \\\"location\\\": \\\"Work location including remote/hybrid status\\\",\\n  \\\"type\\\": \\\"Employment type (Full-time, Contract, etc)\\\",\\n  \\\"salary\\\": \\\"Compensation details if provided\\\",\\n  \\\"description\\\": \\\"Main job description text including requirements and team info\\\",\\n  \\\"apply_url\\\": \\\"Direct application/job posting URL\\\",\\n  \\\"company_url\\\": \\\"Company website or careers page\\\"\\n}\\n```\"},\"typeVersion\":1},{\"id\":\"b70c5578-5b81-467a-8ac2-65374e4e52f3\",\"name\":\"Extract text\",\"type\":\"n8n-nodes-base.set\",\"position\":[1860,-220],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"6affa370-56ce-4ad8-8534-8f753fdf07fc\",\"name\":\"text\",\"type\":\"string\",\"value\":\"={{ $json.text }}\"}]}},\"typeVersion\":3.4},{\"id\":\"acb68d88-9417-42e9-9bcc-7c2fa95c4afd\",\"name\":\"Clean text\",\"type\":\"n8n-nodes-base.code\",\"position\":[2060,-220],\"parameters\":{\"jsCode\":\"// In a Function node in n8n\\nconst inputData = $input.all();\\n\\nfunction cleanAllPosts(data) {\\n    return data.map(item => {\\n        try {\\n            // Check if item exists and has the expected structure\\n            if (!item || typeof item !== 'object') {\\n                return { cleaned_text: '', error: 'Invalid item structure' };\\n            }\\n\\n            // Get the text, with multiple fallbacks\\n            let text = '';\\n            if (typeof item === 'string') {\\n                text = item;\\n            } else if (item.json && item.json.text) {\\n                text = item.json.text;\\n            } else if (typeof item.json === 'string') {\\n                text = item.json;\\n            } else {\\n                text = JSON.stringify(item);\\n            }\\n\\n            // Make sure text is a string\\n            text = String(text);\\n            \\n            // Perform the cleaning operations\\n            try {\\n                text = text.replace(/&#x2F;/g, '/');\\n                text = text.replace(/&#x27;/g, \\\"'\\\");\\n                text = text.replace(/&\\\\w+;/g, ' ');\\n                text = text.replace(/<[^>]*>/g, '');\\n                text = text.replace(/\\\\|\\\\s*/g, '| ');\\n                text = text.replace(/\\\\s+/g, ' ');\\n                text = text.replace(/\\\\s*(https?:\\\\/\\\\/[^\\\\s]+)\\\\s*/g, '\\\\n$1\\\\n');\\n                text = text.replace(/\\\\n{3,}/g, '\\\\n\\\\n');\\n                text = text.trim();\\n            } catch (cleaningError) {\\n                console.log('Error during text cleaning:', cleaningError);\\n                // Return original text if cleaning fails\\n                return { cleaned_text: text, warning: 'Partial cleaning applied' };\\n            }\\n\\n            return { cleaned_text: text };\\n            \\n        } catch (error) {\\n            console.log('Error processing item:', error);\\n            return { \\n                cleaned_text: '', \\n                error: `Processing error: ${error.message}`,\\n                original: item\\n            };\\n        }\\n    }).filter(result => result.cleaned_text || result.error); \\n}\\n\\ntry {\\n    return cleanAllPosts(inputData);\\n} catch (error) {\\n    console.log('Fatal error:', error);\\n    return [{ \\n        cleaned_text: '', \\n        error: `Fatal error: ${error.message}`,\\n        input: inputData \\n    }];\\n}\\n\"},\"typeVersion\":2},{\"id\":\"a0727b55-565d-47c0-9ab5-0f001f4b9941\",\"name\":\"Limit for testing (optional)\",\"type\":\"n8n-nodes-base.limit\",\"position\":[2280,-220],\"parameters\":{\"maxItems\":5},\"typeVersion\":1},{\"id\":\"650baf5e-c2ac-443d-8a2b-6df89717186f\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[580,-620],\"parameters\":{\"width\":540,\"height\":340,\"content\":\"## Clean the result \\n\\n```json\\n{\\n\\\"title\\\": \\\"Ask HN: Who is hiring? (February 2025)\\\",\\n\\\"createdAt\\\": \\\"2025-02-03T16:00:43Z\\\",\\n\\\"updatedAt\\\": \\\"2025-02-17T08:35:44Z\\\",\\n\\\"storyId\\\": \\\"42919502\\\"\\n},\\n{\\n\\\"title\\\": \\\"Ask HN: Who is hiring? (January 2025)\\\",\\n\\\"createdAt\\\": \\\"2025-01-02T16:00:09Z\\\",\\n\\\"updatedAt\\\": \\\"2025-02-13T00:03:24Z\\\",\\n\\\"storyId\\\": \\\"42575537\\\"\\n},\\n```\"},\"typeVersion\":1},{\"id\":\"1ca5c39f-f21d-455a-b63a-702e7e3ba02b\",\"name\":\"Write results to airtable\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[3040,-220],\"parameters\":{\"base\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"appM2JWvA5AstsGdn\",\"cachedResultUrl\":\"https://airtable.com/appM2JWvA5AstsGdn\",\"cachedResultName\":\"HN Who is hiring?\"},\"table\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"tblGvcOjqbliwM7AS\",\"cachedResultUrl\":\"https://airtable.com/appM2JWvA5AstsGdn/tblGvcOjqbliwM7AS\",\"cachedResultName\":\"Table 1\"},\"columns\":{\"value\":{\"type\":\"={{ $json.output.type }}\",\"title\":\"={{ $json.output.title }}\",\"salary\":\"={{ $json.output.salary }}\",\"company\":\"={{ $json.output.company }}\",\"location\":\"={{ $json.output.location }}\",\"apply_url\":\"={{ $json.output.apply_url }}\",\"company_url\":\"={{ $json.output.company_url }}\",\"description\":\"={{ $json.output.description }}\"},\"schema\":[{\"id\":\"title\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"title\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"company\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"company\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"location\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"location\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"type\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"type\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"salary\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"salary\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"description\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"description\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"apply_url\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"apply_url\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"company_url\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"company_url\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"posted_date\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":false,\"required\":false,\"displayName\":\"posted_date\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"create\"},\"credentials\":{\"airtableTokenApi\":{\"id\":\"IudXLNj7CDuc5M5a\",\"name\":\"Airtable Personal Access Token account\"}},\"typeVersion\":2.1},{\"id\":\"d71fa024-86a0-4f74-b033-1f755574080c\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-520,-300],\"parameters\":{\"width\":380,\"height\":500,\"content\":\"## Hacker News - Who is Hiring Scrape\\n\\nIn this template we setup a scraper for the monthly HN Who is Hiring post. This way we can scrape the data and transform it to a common data strcutre.\\n\\nFirst we use the [Algolia Search](https://hn.algolia.com/) provided by hackernews to drill down the results.\\n\\nWe can use the official [Hacker News API](https://github.com/HackerNews/API\\n) to get the post data and also all the replies!\\n\\nThis will obviously work for any kind of post on hacker news! Get creative 😃\\n\\nAll you need is an Openai Account to structure the text data and an Airtable Account (or similar) to write the results to a list.\\n\\nCopy my base https://airtable.com/appM2JWvA5AstsGdn/shrAuo78cJt5C2laR\"},\"typeVersion\":1},{\"id\":\"7466fb0c-9f0c-4adf-a6de-b2cf09032719\",\"name\":\"HI API: Get the individual job post\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1660,-220],\"parameters\":{\"url\":\"=https://hacker-news.firebaseio.com/v0/item/{{ $json.kids }}.json?print=pretty\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"184abccf-5838-49bf-9922-e0300c6b145e\",\"name\":\"HN API: Get Main Post\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1260,-220],\"parameters\":{\"url\":\"=https://hacker-news.firebaseio.com/v0/item/{{ $json.storyId }}.json?print=pretty\",\"options\":{}},\"typeVersion\":4.2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"387f7084-58fa-4643-9351-73c870d3f028\",\"connections\":{\"Split Out\":{\"main\":[[{\"node\":\"Get relevant data\",\"type\":\"main\",\"index\":0}]]},\"Clean text\":{\"main\":[[{\"node\":\"Limit for testing (optional)\",\"type\":\"main\",\"index\":0}]]},\"Extract text\":{\"main\":[[{\"node\":\"Clean text\",\"type\":\"main\",\"index\":0}]]},\"Get latest post\":{\"main\":[[{\"node\":\"HN API: Get Main Post\",\"type\":\"main\",\"index\":0}]]},\"Get relevant data\":{\"main\":[[{\"node\":\"Get latest post\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Trun into structured data\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"HN API: Get Main Post\":{\"main\":[[{\"node\":\"Split out children (jobs)\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Trun into structured data\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Split out children (jobs)\":{\"main\":[[{\"node\":\"HI API: Get the individual job post\",\"type\":\"main\",\"index\":0}]]},\"Trun into structured data\":{\"main\":[[{\"node\":\"Write results to airtable\",\"type\":\"main\",\"index\":0}]]},\"Limit for testing (optional)\":{\"main\":[[{\"node\":\"Trun into structured data\",\"type\":\"main\",\"index\":0}]]},\"Search for Who is hiring posts\":{\"main\":[[{\"node\":\"Split Out\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Search for Who is hiring posts\",\"type\":\"main\",\"index\":0}]]},\"HI API: Get the individual job post\":{\"main\":[[{\"node\":\"Extract text\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This automated workflow scrapes and processes the monthly \"Who is Hiring\" thread from Hacker News, transforming raw job listings into structured data for analysis or integration with other systems. Perfect for job seekers, recruiters, or anyone looking to monitor tech job market trends.\n\n## How it works\n\nAutomatically fetches the latest \"Who is Hiring\" thread from Hacker News  \nExtracts and cleans relevant job posting data using the HN API  \nSplits and processes individual job listings into structured format  \nParses key information like location, role, requirements, and company details  \nOutputs clean, structured data ready for analysis or export\n\n## Set up steps\n\n  1. Configure API access to [Hacker News](https://github.com/HackerNews/API) (no authentication required)\n  2. Follow the steps to get your cURL command from <https://hn.algolia.com/>\n  3. Set up desired output format (JSON structured data or custom format)\n  4. Optional: Configure additional parsing rules for specific job listing information\n  5. Optional: Set up integration with preferred storage or analysis tools  \nThe workflow transforms unstructured job listings into clean, structured data following this pattern:\n\n\n  * Input: Raw HN thread comments\n  * Process: Extract, clean, and parse text\n  * Output: Structured job listing data\n\n\n\nThis template saves hours of manual work collecting and organizing job listings, making it easier to track and analyze tech job opportunities from Hacker News's popular monthly hiring threads.\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>This automated workflow scrapes and processes the monthly \"Who is Hiring\" thread from Hacker News, transforming raw job listings into structured data for analysis or integration with other systems. Perfect for job seekers, recruiters, or anyone looking to monitor tech job market trends.</p>\n<h2>How it works</h2>\n<p>Automatically fetches the latest \"Who is Hiring\" thread from Hacker News<br>\nExtracts and cleans relevant job posting data using the HN API<br>\nSplits and processes individual job listings into structured format<br>\nParses key information like location, role, requirements, and company details<br>\nOutputs clean, structured data ready for analysis or export</p>\n<h2>Set up steps</h2>\n<ol>\n<li>Configure API access to <a href=\"https://github.com/HackerNews/API\" rel=\"ugc nofollow\" target=\"_blank\">Hacker News</a> (no authentication required)</li>\n<li>Follow the steps to get your cURL command from <a href=\"https://hn.algolia.com/\" rel=\"ugc nofollow\" target=\"_blank\">https://hn.algolia.com/</a></li>\n<li>Set up desired output format (JSON structured data or custom format)</li>\n<li>Optional: Configure additional parsing rules for specific job listing information</li>\n<li>Optional: Set up integration with preferred storage or analysis tools<br>\nThe workflow transforms unstructured job listings into clean, structured data following this pattern:</li>\n</ol>\n<ul>\n<li>Input: Raw HN thread comments</li>\n<li>Process: Extract, clean, and parse text</li>\n<li>Output: Structured job listing data</li>\n</ul>\n<p>This template saves hours of manual work collecting and organizing job listings, making it easier to track and analyze tech job opportunities from Hacker News's popular monthly hiring threads.</p>\n</div><!--]-->",
  "readme_zh": "该自动化工作流抓取并处理Hacker News每月发布的\"Who is Hiring\"讨论帖，将原始招聘信息转化为结构化数据以供分析或与其他系统集成。特别适合求职者、招聘人员或任何希望追踪科技就业市场趋势的人士。\n\n## 运作原理\n\n自动获取Hacker News最新\"Who is Hiring\"讨论帖  \n通过HN API提取并清洗相关招聘信息  \n将单个职位列表拆分处理为结构化格式  \n解析关键信息（如工作地点、职位、任职要求及公司详情）  \n输出可用于分析或导出的整洁结构化数据\n\n## 配置步骤\n\n1. 配置[Hacker News](https://github.com/HackerNews/API)的API访问权限（无需认证）  \n2. 按照<https://hn.algolia.com/>指引获取cURL命令  \n3. 设置所需输出格式（JSON结构化数据或自定义格式）  \n4. 可选：配置特定招聘信息的额外解析规则  \n5. 可选：设置与首选存储或分析工具的集成  \n\n该工作流遵循以下模式将非结构化招聘信息转化为整洁的结构化数据：\n\n* 输入：原始HN讨论帖评论  \n* 处理：文本提取、清洗与解析  \n* 输出：结构化职位列表数据  \n\n此模板可节省人工收集整理招聘信息的大量时间，使追踪分析Hacker News热门月度招聘帖中的科技职位机会变得更加便捷。",
  "title_zh": "黑客新闻职位列表抓取与解析工具",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"id\": \"0JsHmmyeHw5Ffz5m\",\n  \"meta\": {\n    \"instanceId\": \"d4d7965840e96e50a3e02959a8487c692901dfa8d5cc294134442c67ce1622d3\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"HN Who is Hiring Scrape\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"f7cdb3ee-9bb0-4006-829a-d4ce797191d5\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -20,\n        -220\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0475e25d-9bf4-450d-abd3-a04608a438a4\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        60,\n        -620\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 340,\n        \"content\": \"## 前往 https://hn.algolia.com\\n- 筛选条件设为\\\"Ask HN: Who is hiring?\\\"（注意带引号确保完全匹配）\\n- 按日期排序\\n- 打开Chrome开发者工具的网络选项卡 > 找到API调用 > 点击\\\"复制为cURL\\\"\\n- 在n8n的HTTP节点中 -> 选择导入cURL并粘贴\\n- 我已将API密钥设置为Header Auth认证方式，因此你需要自行完成上述操作才能使流程生效\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a686852b-ff84-430b-92bb-ce02a6808e19\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        400,\n        -220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"hits\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cdaaa738-d561-4fa0-b2c7-8ea9e6778eb1\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1260,\n        -620\n      ],\n      \"parameters\": {\n        \"width\": 500,\n        \"height\": 340,\n        \"content\": \"## 访问HN API\\nhttps://github.com/HackerNews/API\\n\\n我们需要使用以下接口端点：\\n- 示例故事：https://hacker-news.firebaseio.com/v0/item/8863.json?print=pretty\\n- 示例评论：https://hacker-news.firebaseio.com/v0/item/2921983.json?print=pretty\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4f353598-9e32-4be4-9e7b-c89cc05305fd\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        2680,\n        -20\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"Fbb2ueT0XP5xMRme\",\n          \"name\": \"OpenAi account 2\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"5bd0d7cc-497a-497c-aa4c-589d9ceeca14\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        2840,\n        -20\n      ],\n      \"parameters\": {\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"company\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Name of the hiring company\\\"\\n    },\\n    \\\"title\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Job title/role being advertised\\\"\\n    },\\n    \\\"location\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Work location including remote/hybrid status\\\"\\n    },\\n    \\\"type\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"enum\\\": [\\n        \\\"FULL_TIME\\\",\\n        \\\"PART_TIME\\\",\\n        \\\"CONTRACT\\\",\\n        \\\"INTERNSHIP\\\",\\n        \\\"FREELANCE\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Employment type (Full-time, Contract, etc)\\\"\\n    },\\n    \\\"work_location\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"enum\\\": [\\n        \\\"REMOTE\\\",\\n        \\\"HYBRID\\\",\\n        \\\"ON_SITE\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Work arrangement type\\\"\\n    },\\n    \\\"salary\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Compensation details if provided\\\"\\n    },\\n    \\\"description\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Main job description text including requirements and team info\\\"\\n    },\\n    \\\"apply_url\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Direct application/job posting URL\\\"\\n    },\\n    \\\"company_url\\\": {\\n      \\\"type\\\": [\\n        \\\"string\\\",\\n        null\\n      ],\\n      \\\"description\\\": \\\"Company website or careers page\\\"\\n    }\\n  }\\n}\\n\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"b84ca004-6f3b-4577-8910-61b8584b161d\",\n      \"name\": \"Search for Who is hiring posts\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        200,\n        -220\n      ],\n      \"parameters\": {\n        \"url\": \"https://uj5wyc0l7x-dsn.algolia.net/1/indexes/Item_dev_sort_date/query\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"{\\n  \\\"query\\\": \\\"\\\\\\\"Ask HN: Who is hiring\\\\\\\"\\\",\\n  \\\"analyticsTags\\\": [\\n    \\\"web\\\"\\n  ],\\n  \\\"page\\\": 0,\\n  \\\"hitsPerPage\\\": 30,\\n  \\\"minWordSizefor1Typo\\\": 4,\\n  \\\"minWordSizefor2Typos\\\": 8,\\n  \\\"advancedSyntax\\\": true,\\n  \\\"ignorePlurals\\\": false,\\n  \\\"clickAnalytics\\\": true,\\n  \\\"minProximity\\\": 7,\\n  \\\"numericFilters\\\": [],\\n  \\\"tagFilters\\\": [\\n    [\\n      \\\"story\\\"\\n    ],\\n    []\\n  ],\\n  \\\"typoTolerance\\\": \\\"min\\\",\\n  \\\"queryType\\\": \\\"prefixNone\\\",\\n  \\\"restrictSearchableAttributes\\\": [\\n    \\\"title\\\",\\n    \\\"comment_text\\\",\\n    \\\"url\\\",\\n    \\\"story_text\\\",\\n    \\\"author\\\"\\n  ],\\n  \\\"getRankingInfo\\\": true\\n}\",\n        \"sendBody\": true,\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-algolia-agent\",\n              \"value\": \"Algolia for JavaScript (4.13.1); Browser (lite)\"\n            },\n            {\n              \"name\": \"x-algolia-application-id\",\n              \"value\": \"UJ5WYC0L7X\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"*/*\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-GB,en-US;q=0.9,en;q=0.8\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Origin\",\n              \"value\": \"https://hn.algolia.com\"\n            },\n            {\n              \"name\": \"Referer\",\n              \"value\": \"https://hn.algolia.com/\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"cross-site\"\n            },\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\"\n            },\n            {\n              \"name\": \"sec-ch-ua\",\n              \"value\": \"\\\"Chromium\\\";v=\\\"133\\\", \\\"Not(A:Brand\\\";v=\\\"99\\\"\"\n            },\n            {\n              \"name\": \"sec-ch-ua-mobile\",\n              \"value\": \"?0\"\n            },\n            {\n              \"name\": \"sec-ch-ua-platform\",\n              \"value\": \"\\\"macOS\\\"\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"oVEXp2ZbYCXypMVz\",\n          \"name\": \"Algolia Auth\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"205e66f6-cd6b-4cfd-a6ec-2226c35ddaac\",\n      \"name\": \"Get relevant data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        700,\n        -220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"73dd2325-faa7-4650-bd78-5fc97cc202de\",\n              \"name\": \"title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.title }}\"\n            },\n            {\n              \"id\": \"44918eac-4510-440e-9ac0-bf14d2b2f3af\",\n              \"name\": \"createdAt\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.created_at }}\"\n            },\n            {\n              \"id\": \"00eb6f09-2c22-411c-949c-886b2d95b6eb\",\n              \"name\": \"updatedAt\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.updated_at }}\"\n            },\n            {\n              \"id\": \"2b4f9da6-f60e-46e0-ba9d-3242fa955a55\",\n              \"name\": \"storyId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.story_id }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"16bc5628-8a29-4eac-8be9-b4e9da802e1e\",\n      \"name\": \"Get latest post\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        900,\n        -220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"d7dd7175-2a50-45aa-bd3e-4c248c9193c4\",\n              \"operator\": {\n                \"type\": \"dateTime\",\n                \"operation\": \"after\"\n              },\n              \"leftValue\": \"={{ $json.createdAt }}\",\n              \"rightValue\": \"={{$now.minus({days: 30})}} \"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"92e1ef74-5ae1-4195-840b-115184db464f\",\n      \"name\": \"Split out children (jobs)\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1460,\n        -220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"kids\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d0836aae-b98a-497f-a6f7-0ad563c262a0\",\n      \"name\": \"Trun into structured data\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        2600,\n        -220\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.cleaned_text }}\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"Extract the JSON data\"\n            }\n          ]\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"fd818a93-627c-435d-91ba-5d759d5a9004\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2600,\n        -620\n      ],\n      \"parameters\": {\n        \"width\": 840,\n        \"height\": 340,\n        \"content\": \"## 数据结构\\n\\n我们使用OpenAI GPT-4o-mini将原始数据转换为统一的数据结构，您可以根据需要自行调整。\\n\\n```json\\n{\\n  \\\"company\\\": \\\"招聘公司名称\\\",\\n  \\\"title\\\": \\\"招聘职位/岗位名称\\\",\\n  \\\"location\\\": \\\"工作地点（包含远程/混合办公信息）\\\",\\n  \\\"type\\\": \\\"雇佣类型（全职、合同制等）\\\",\\n  \\\"salary\\\": \\\"薪酬详情（如有提供）\\\",\\n  \\\"description\\\": \\\"主要职位描述文本（包含任职要求和团队信息）\\\",\\n  \\\"apply_url\\\": \\\"直接申请/职位发布链接\\\",\\n  \\\"company_url\\\": \\\"公司官网或招聘页面\\\"\\n}\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b70c5578-5b81-467a-8ac2-65374e4e52f3\",\n      \"name\": \"Extract text\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1860,\n        -220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6affa370-56ce-4ad8-8534-8f753fdf07fc\",\n              \"name\": \"text\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"acb68d88-9417-42e9-9bcc-7c2fa95c4afd\",\n      \"name\": \"Clean text\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2060,\n        -220\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// In a Function node in n8n\\nconst inputData = $input.all();\\n\\nfunction cleanAllPosts(data) {\\n    return data.map(item => {\\n        try {\\n            // Check if item exists and has the expected structure\\n            if (!item || typeof item !== 'object') {\\n                return { cleaned_text: '', error: 'Invalid item structure' };\\n            }\\n\\n            // Get the text, with multiple fallbacks\\n            let text = '';\\n            if (typeof item === 'string') {\\n                text = item;\\n            } else if (item.json && item.json.text) {\\n                text = item.json.text;\\n            } else if (typeof item.json === 'string') {\\n                text = item.json;\\n            } else {\\n                text = JSON.stringify(item);\\n            }\\n\\n            // Make sure text is a string\\n            text = String(text);\\n            \\n            // Perform the cleaning operations\\n            try {\\n                text = text.replace(/&#x2F;/g, '/');\\n                text = text.replace(/&#x27;/g, \\\"'\\\");\\n                text = text.replace(/&\\\\w+;/g, ' ');\\n                text = text.replace(/<[^>]*>/g, '');\\n                text = text.replace(/\\\\|\\\\s*/g, '| ');\\n                text = text.replace(/\\\\s+/g, ' ');\\n                text = text.replace(/\\\\s*(https?:\\\\/\\\\/[^\\\\s]+)\\\\s*/g, '\\\\n$1\\\\n');\\n                text = text.replace(/\\\\n{3,}/g, '\\\\n\\\\n');\\n                text = text.trim();\\n            } catch (cleaningError) {\\n                console.log('Error during text cleaning:', cleaningError);\\n                // Return original text if cleaning fails\\n                return { cleaned_text: text, warning: 'Partial cleaning applied' };\\n            }\\n\\n            return { cleaned_text: text };\\n            \\n        } catch (error) {\\n            console.log('Error processing item:', error);\\n            return { \\n                cleaned_text: '', \\n                error: `Processing error: ${error.message}`,\\n                original: item\\n            };\\n        }\\n    }).filter(result => result.cleaned_text || result.error); \\n}\\n\\ntry {\\n    return cleanAllPosts(inputData);\\n} catch (error) {\\n    console.log('Fatal error:', error);\\n    return [{ \\n        cleaned_text: '', \\n        error: `Fatal error: ${error.message}`,\\n        input: inputData \\n    }];\\n}\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a0727b55-565d-47c0-9ab5-0f001f4b9941\",\n      \"name\": \"Limit for testing (optional)\",\n      \"type\": \"n8n-nodes-base.limit\",\n      \"position\": [\n        2280,\n        -220\n      ],\n      \"parameters\": {\n        \"maxItems\": 5\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"650baf5e-c2ac-443d-8a2b-6df89717186f\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        580,\n        -620\n      ],\n      \"parameters\": {\n        \"width\": 540,\n        \"height\": 340,\n        \"content\": \"## 清理后的结果\\n\\n```json\\n{\\n\\\"标题\\\": \\\"HN提问：谁在招聘？（2025年2月）\\\",\\n\\\"创建时间\\\": \\\"2025-02-03T16:00:43Z\\\",\\n\\\"更新时间\\\": \\\"2025-02-17T08:35:44Z\\\",\\n\\\"故事ID\\\": \\\"42919502\\\"\\n},\\n{\\n\\\"标题\\\": \\\"HN提问：谁在招聘？（2025年1月）\\\",\\n\\\"创建时间\\\": \\\"2025-01-02T16:00:09Z\\\",\\n\\\"更新时间\\\": \\\"2025-02-13T00:03:24Z\\\",\\n\\\"故事ID\\\": \\\"42575537\\\"\\n},\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1ca5c39f-f21d-455a-b63a-702e7e3ba02b\",\n      \"name\": \"Write results to airtable\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        3040,\n        -220\n      ],\n      \"parameters\": {\n        \"base\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"appM2JWvA5AstsGdn\",\n          \"cachedResultUrl\": \"https://airtable.com/appM2JWvA5AstsGdn\",\n          \"cachedResultName\": \"HN Who is hiring?\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"tblGvcOjqbliwM7AS\",\n          \"cachedResultUrl\": \"https://airtable.com/appM2JWvA5AstsGdn/tblGvcOjqbliwM7AS\",\n          \"cachedResultName\": \"Table 1\"\n        },\n        \"columns\": {\n          \"value\": {\n            \"type\": \"={{ $json.output.type }}\",\n            \"title\": \"={{ $json.output.title }}\",\n            \"salary\": \"={{ $json.output.salary }}\",\n            \"company\": \"={{ $json.output.company }}\",\n            \"location\": \"={{ $json.output.location }}\",\n            \"apply_url\": \"={{ $json.output.apply_url }}\",\n            \"company_url\": \"={{ $json.output.company_url }}\",\n            \"description\": \"={{ $json.output.description }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"title\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"title\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"company\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"company\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"location\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"location\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"type\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"type\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"salary\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"salary\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"description\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"description\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"apply_url\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"apply_url\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"company_url\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"company_url\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"posted_date\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"posted_date\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"create\"\n      },\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"IudXLNj7CDuc5M5a\",\n          \"name\": \"Airtable Personal Access Token account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"d71fa024-86a0-4f74-b033-1f755574080c\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -520,\n        -300\n      ],\n      \"parameters\": {\n        \"width\": 380,\n        \"height\": 500,\n        \"content\": \"## Hacker News - 招聘信息爬虫模板\\n\\n本模板用于设置每月HN招聘帖的爬虫程序。通过该程序，我们可以抓取数据并将其转换为通用数据结构。\\n\\n首先，我们使用HackerNews提供的[Algolia搜索](https://hn.algolia.com/)来筛选结果。\\n\\n我们可以通过官方[Hacker News API](https://github.com/HackerNews/API)获取帖子数据及所有回复！\\n\\n显然，这个方法适用于Hacker News上的任何类型帖子！发挥你的创意吧😃\\n\\n你只需要一个OpenAI账号来结构化文本数据，以及一个Airtable账号（或类似工具）将结果写入列表。\\n\\n复制我的基础模板：https://airtable.com/appM2JWvA5AstsGdn/shrAuo78cJt5C2laR\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7466fb0c-9f0c-4adf-a6de-b2cf09032719\",\n      \"name\": \"HI API: Get the individual job post\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1660,\n        -220\n      ],\n      \"parameters\": {\n        \"url\": \"=https://hacker-news.firebaseio.com/v0/item/{{ $json.kids }}.json?print=pretty\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"184abccf-5838-49bf-9922-e0300c6b145e\",\n      \"name\": \"HN API: Get Main Post\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1260,\n        -220\n      ],\n      \"parameters\": {\n        \"url\": \"=https://hacker-news.firebaseio.com/v0/item/{{ $json.storyId }}.json?print=pretty\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"387f7084-58fa-4643-9351-73c870d3f028\",\n  \"connections\": {\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get relevant data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Clean text\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Limit for testing (optional)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract text\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clean text\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get latest post\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HN API: Get Main Post\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get relevant data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get latest post\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Trun into structured data\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HN API: Get Main Post\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split out children (jobs)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Trun into structured data\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split out children (jobs)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HI API: Get the individual job post\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Trun into structured data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Write results to airtable\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Limit for testing (optional)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Trun into structured data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search for Who is hiring posts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Search for Who is hiring posts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HI API: Get the individual job post\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract text\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}