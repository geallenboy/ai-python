{
  "title": "RAG:Context-Aware Chunking | Google Drive to Pinecone via OpenRouter & Gemini",
  "url": "https://n8n.io/workflows/2871-ragcontext-aware-chunking-or-google-drive-to-pinecone-via-openrouter-and-gemini/",
  "category": "BuildingBlocks",
  "category_url": "https://n8n.io/workflows/categories/building-blocks/?sort=createdAt:desc",
  "author": "Udit Rawat",
  "publish_date": "Last update 3 months ago",
  "publish_date_absolute": "2025-02-07",
  "content": "",
  "workflow_json": "{\"id\":\"VY4WBXuNDPxmOO5e\",\"meta\":{\"instanceId\":\"d16fb7d4b3eb9b9d4ad2ee6a7fbae593d73e9715e51f583c2a0e9acd1781c08e\",\"templateCredsSetupCompleted\":true},\"name\":\"RAG:Context-Aware Chunking | Google Drive to Pinecone via OpenRouter & Gemini\",\"tags\":[{\"id\":\"XZIQK6NdzGvgbZFd\",\"name\":\"Sell\",\"createdAt\":\"2025-01-15T12:28:48.424Z\",\"updatedAt\":\"2025-01-15T12:28:48.424Z\"}],\"nodes\":[{\"id\":\"7abbfa6e-4b17-4656-9b82-377b1bacf539\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[0,0],\"parameters\":{},\"typeVersion\":1},{\"id\":\"448ec137-bf64-46b4-bf15-c7a040faa306\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[1100,0],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"f22557ee-7f37-40cd-9063-a9a759274663\",\"name\":\"OpenRouter Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\"position\":[20,440],\"parameters\":{\"options\":{}},\"credentials\":{\"openRouterApi\":{\"id\":\"ddH6iNlm09UxrXvu\",\"name\":\"Auto: OpenRouter\"}},\"typeVersion\":1},{\"id\":\"57e8792e-25ae-43d5-b4e9-e87642365ee9\",\"name\":\"Pinecone Vector Store\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStorePinecone\",\"position\":[780,360],\"parameters\":{\"mode\":\"insert\",\"options\":{},\"pineconeIndex\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"context-rag-test\",\"cachedResultName\":\"context-rag-test\"}},\"credentials\":{\"pineconeApi\":{\"id\":\"R3QGXSEIRTEAZttK\",\"name\":\"Auto: PineconeApi\"}},\"typeVersion\":1},{\"id\":\"0a8c2426-0aaf-424a-b246-336a9034aba8\",\"name\":\"Embeddings Google Gemini\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini\",\"position\":[720,540],\"parameters\":{\"modelName\":\"models/text-embedding-004\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"9idxGZRZ3BAKDoxq\",\"name\":\"Google Gemini(PaLM) Api account\"}},\"typeVersion\":1},{\"id\":\"edc587bd-494d-43e8-b6d6-26adab7af3dc\",\"name\":\"Default Data Loader\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[920,540],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"a82d4e0b-248e-426d-9ef3-f25e7078ceb3\",\"name\":\"Recursive Character Text Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\"position\":[840,680],\"parameters\":{\"options\":{},\"chunkSize\":100000},\"typeVersion\":1},{\"id\":\"8571b92f-5587-454f-9700-ea04ca35311b\",\"name\":\"Get Document From Google Drive\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[220,0],\"parameters\":{\"fileId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1gm0jxFTLuiWB5u4esEjzoCPImrVqu0AEMIKBIesTf9M\",\"cachedResultUrl\":\"https://docs.google.com/document/d/1gm0jxFTLuiWB5u4esEjzoCPImrVqu0AEMIKBIesTf9M/edit?usp=drivesdk\",\"cachedResultName\":\"Udit Rawat - Details\"},\"options\":{\"googleFileConversion\":{\"conversion\":{\"docsToFormat\":\"text/plain\"}}},\"operation\":\"download\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"SsiQguNA8w3Wwv4w\",\"name\":\"Auto: Google Drive\"}},\"typeVersion\":3},{\"id\":\"2bed3d0f-3d65-4394-87f1-e73320a43a4a\",\"name\":\"Extract Text Data From Google Document\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[440,0],\"parameters\":{\"options\":{},\"operation\":\"text\"},\"typeVersion\":1},{\"id\":\"837fa691-6c66-434b-ba82-d1cad9aecdf7\",\"name\":\"Split Document Text Into Sections\",\"type\":\"n8n-nodes-base.code\",\"position\":[660,0],\"parameters\":{\"jsCode\":\"let split_text = \\\"—---------------------------—-------------[SECTIONEND]—---------------------------—-------------\\\";\\nfor (const item of $input.all()) {\\n  item.json.section = item.json.data.split(split_text);\\n  item.json.document = JSON.stringify(item.json.section)\\n}\\nreturn $input.all();\"},\"typeVersion\":2},{\"id\":\"cc801e7e-e01b-421a-9211-08322ef8a0b2\",\"name\":\"Prepare Sections For Looping\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[880,0],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"section\"},\"typeVersion\":1},{\"id\":\"658cb8df-92e3-4b25-8f37-e5f959d913dc\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-40,-100],\"parameters\":{\"width\":1300,\"height\":280,\"content\":\"## Prepare Document. \\nThis section is responsible for downloading the file from Google Drive, splitting the text into sections by detecting separators, and preparing them for looping.\"},\"typeVersion\":1},{\"id\":\"82ee9194-484a-46db-b75c-bec34201c7e2\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-220,220],\"parameters\":{\"width\":780,\"height\":360,\"content\":\"## Prepare context\\nIn this section, the \\nagent node will prepare \\ncontext for a section \\n(chunk of text), which \\nwill then be passed for \\nconversion into a vectors \\nalong with the section itself.\"},\"typeVersion\":1},{\"id\":\"2f6950df-ead1-479a-aa51-7768121a4eb2\",\"name\":\"AI Agent - Prepare Context\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[40,260],\"parameters\":{\"text\":\"=<document> \\n{{ $('Split Document Text Into Sections').item.json.document }}\\n</document> \\nHere is the chunk we want to situate within the whole document \\n<chunk> \\n{{ $json.section }}\\n</chunk> \\nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. \",\"agent\":\"conversationalAgent\",\"options\":{},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"34a465fc-a505-445a-9211-bcd830381354\",\"name\":\"Concatenate the context and section text\",\"type\":\"n8n-nodes-base.set\",\"position\":[400,260],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"e5fb0381-5d23-46e2-a0d1-438240b80a3e\",\"name\":\"=section_chunk\",\"type\":\"string\",\"value\":\"={{ $json.output }}. {{ $('Loop Over Items').item.json.section }}\"}]}},\"typeVersion\":3.4},{\"id\":\"4a7a788c-8e5b-453c-ae52-a4522048992d\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[640,220],\"parameters\":{\"width\":580,\"height\":600,\"content\":\"## Convert Text To Vectors\\nIn this step, the Pinecone node converts the provided text into vectors using Google Gemini and stores them in the Pinecone vector database.\"},\"typeVersion\":1},{\"id\":\"45798b49-fc78-417c-a752-4dd1a8882cd7\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-460,-120],\"parameters\":{\"width\":400,\"height\":300,\"content\":\"## Video Demo\\n[![Video Thumbnail](https://img.youtube.com/vi/qBeWP65I4hg/maxresdefault.jpg)](https://www.youtube.com/watch?v=qBeWP65I4hg)\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"4f0e2203-5850-4a32-b1dd-5adc57fa43ff\",\"connections\":{\"Loop Over Items\":{\"main\":[[],[{\"node\":\"AI Agent - Prepare Context\",\"type\":\"main\",\"index\":0}]]},\"Default Data Loader\":{\"ai_document\":[[{\"node\":\"Pinecone Vector Store\",\"type\":\"ai_document\",\"index\":0}]]},\"OpenRouter Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent - Prepare Context\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Pinecone Vector Store\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Embeddings Google Gemini\":{\"ai_embedding\":[[{\"node\":\"Pinecone Vector Store\",\"type\":\"ai_embedding\",\"index\":0}]]},\"AI Agent - Prepare Context\":{\"main\":[[{\"node\":\"Concatenate the context and section text\",\"type\":\"main\",\"index\":0}]]},\"Prepare Sections For Looping\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Get Document From Google Drive\":{\"main\":[[{\"node\":\"Extract Text Data From Google Document\",\"type\":\"main\",\"index\":0}]]},\"Recursive Character Text Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Default Data Loader\",\"type\":\"ai_textSplitter\",\"index\":0}]]},\"Split Document Text Into Sections\":{\"main\":[[{\"node\":\"Prepare Sections For Looping\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Get Document From Google Drive\",\"type\":\"main\",\"index\":0}]]},\"Extract Text Data From Google Document\":{\"main\":[[{\"node\":\"Split Document Text Into Sections\",\"type\":\"main\",\"index\":0}]]},\"Concatenate the context and section text\":{\"main\":[[{\"node\":\"Pinecone Vector Store\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "Workflow based **on** the following article.  \n<https://www.anthropic.com/news/contextual-retrieval>\n\nThis n8n automation is designed to extract, process, and store content from documents into a **Pinecone** vector store using context-based chunking. The workflow enhances retrieval accuracy in **RAG (Retrieval-Augmented Generation)** setups by ensuring each chunk retains meaningful context.\n\n**Workflow Breakdown:**  \n🔹 **Google Drive** \\- Retrieve Document:  \nThe automation starts by fetching a source document from Google Drive. This document contains structured content, with predefined boundary markers for easy segmentation.\n\n🔹 **Extract Text Content** \\- Once retrieved, the document’s text is extracted for processing. Special section boundary markers are used to divide the text into logical sections.\n\n🔹 **Code Node** \\- Create Context-Based Chunks:  \nA custom code node processes the extracted text, identifying section boundaries and splitting the document into meaningful chunks. Each chunk is structured to retain its context within the entire document.\n\n🔹 **Loop Node** \\- Process Each Chunk:  \nThe workflow loops through each chunk, ensuring they are processed individually while maintaining a connection to the overall document context.\n\n🔹 **Agent Node** \\- Generate Context for Each Chunk:  \nWe use an Agent node powered by OpenAI’s GPT-4.0-mini via OpenRouter to generate contextual metadata for each chunk, ensuring better retrieval accuracy.\n\n🔹 **Prepend Context to Chunks & Create Embeddings** \\- The generated context is prepended to the original chunk, creating context-rich embeddings that improve searchability.\n\n🔹 **Google Gemini** \\- Text Embeddings:  \nThe processed text is passed through Google Gemini text-embedding-004, which converts the text into semantic vector representations.\n\n🔹 **Pinecone Vector Store** \\- Store Embeddings:  \nThe final embeddings, along with the enriched chunk content and metadata, are stored in Pinecone, making them easily retrievable for RAG-based AI applications.\n\n**Use Case:**  \nThis automation enhances RAG retrieval by ensuring each chunk is contextually aware of the entire document, leading to more accurate AI responses. It’s perfect for applications that require semantic search, AI-powered knowledge management, or intelligent document retrieval.\n\nBy implementing context-based chunking, this workflow ensures that LLMs retrieve the most relevant data, improving response quality and accuracy in AI-driven applications.\n\n[![Video Thumbnail](https://img.youtube.com/vi/qBeWP65I4hg/maxresdefault.jpg)](https://www.youtube.com/watch?v=qBeWP65I4hg)\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>Workflow based <strong>on</strong> the following article.<br>\n<a href=\"https://www.anthropic.com/news/contextual-retrieval\" rel=\"ugc nofollow\" target=\"_blank\">https://www.anthropic.com/news/contextual-retrieval</a></p>\n<p>This n8n automation is designed to extract, process, and store content from documents into a <strong>Pinecone</strong> vector store using context-based chunking. The workflow enhances retrieval accuracy in <strong>RAG (Retrieval-Augmented Generation)</strong> setups by ensuring each chunk retains meaningful context.</p>\n<p><strong>Workflow Breakdown:</strong><br>\n🔹 <strong>Google Drive</strong> - Retrieve Document:<br>\nThe automation starts by fetching a source document from Google Drive. This document contains structured content, with predefined boundary markers for easy segmentation.</p>\n<p>🔹 <strong>Extract Text Content</strong> - Once retrieved, the document’s text is extracted for processing. Special section boundary markers are used to divide the text into logical sections.</p>\n<p>🔹 <strong>Code Node</strong> - Create Context-Based Chunks:<br>\nA custom code node processes the extracted text, identifying section boundaries and splitting the document into meaningful chunks. Each chunk is structured to retain its context within the entire document.</p>\n<p>🔹 <strong>Loop Node</strong> - Process Each Chunk:<br>\nThe workflow loops through each chunk, ensuring they are processed individually while maintaining a connection to the overall document context.</p>\n<p>🔹 <strong>Agent Node</strong> - Generate Context for Each Chunk:<br>\nWe use an Agent node powered by OpenAI’s GPT-4.0-mini via OpenRouter to generate contextual metadata for each chunk, ensuring better retrieval accuracy.</p>\n<p>🔹 <strong>Prepend Context to Chunks &amp; Create Embeddings</strong> - The generated context is prepended to the original chunk, creating context-rich embeddings that improve searchability.</p>\n<p>🔹 <strong>Google Gemini</strong> - Text Embeddings:<br>\nThe processed text is passed through Google Gemini text-embedding-004, which converts the text into semantic vector representations.</p>\n<p>🔹 <strong>Pinecone Vector Store</strong> - Store Embeddings:<br>\nThe final embeddings, along with the enriched chunk content and metadata, are stored in Pinecone, making them easily retrievable for RAG-based AI applications.</p>\n<p><strong>Use Case:</strong><br>\nThis automation enhances RAG retrieval by ensuring each chunk is contextually aware of the entire document, leading to more accurate AI responses. It’s perfect for applications that require semantic search, AI-powered knowledge management, or intelligent document retrieval.</p>\n<p>By implementing context-based chunking, this workflow ensures that LLMs retrieve the most relevant data, improving response quality and accuracy in AI-driven applications.</p>\n<p><a href=\"https://www.youtube.com/watch?v=qBeWP65I4hg\" rel=\"ugc nofollow\" target=\"_blank\"><img src=\"https://img.youtube.com/vi/qBeWP65I4hg/maxresdefault.jpg\" alt=\"Video Thumbnail\"></a></p>\n</div><!--]-->",
  "readme_zh": "基于以下文章的**工作流**  \n<https://www.anthropic.com/news/contextual-retrieval>\n\n该n8n自动化流程通过上下文分块技术，实现从文档中提取、处理内容并存储至**Pinecone**向量数据库。工作流通过确保每个文本块保留完整语义上下文，显著提升**RAG（检索增强生成）**系统的检索精度。\n\n**流程分解:**  \n🔹 **Google Drive文档获取**  \n自动化流程首先从Google Drive获取源文档。文档内含结构化内容，并预设了便于分割的边界标记符。\n\n🔹 **文本内容提取**  \n提取文档文本后，利用特殊章节边界标记将内容划分为逻辑段落。\n\n🔹 **代码节点创建上下文分块**  \n自定义代码节点识别边界标记，将文档分割为保留完整语义上下文的文本块。每个分块均保持与原文的语境关联。\n\n🔹 **循环节点处理分块**  \n工作流遍历每个文本块进行独立处理，同时维护其与整体文档的上下文关联。\n\n🔹 **智能代理生成分块上下文**  \n通过OpenRouter调用的GPT-4.0-mini代理节点为每个分块生成上下文元数据，提升检索准确性。\n\n🔹 **上下文增强与向量化**  \n生成的上下文信息被插入原始分块，形成富含语义的文本嵌入表示。\n\n🔹 **Google Gemini文本向量化**  \n采用Google Gemini的text-embedding-004模型将处理后的文本转换为语义向量。\n\n🔹 **Pinecone向量存储**  \n最终生成的向量与增强后的文本内容、元数据一并存入Pinecone，便于RAG类AI应用检索调用。\n\n**应用场景:**  \n本方案通过上下文感知的分块技术优化RAG检索效果，特别适合需要语义搜索、AI知识管理或智能文档检索的系统。基于上下文的分块策略能确保大语言模型获取最相关数据，显著提升AI应用的响应质量与准确性。\n\n[![视频缩略图](https://img.youtube.com/vi/qBeWP65I4hg/maxresdefault.jpg)](https://www.youtube.com/watch?v=qBeWP65I4hg)",
  "title_zh": "RAG：上下文感知分块 | 通过OpenRouter和Gemini实现从Google Drive到Pinecone的传输",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"VY4WBXuNDPxmOO5e\",\n  \"meta\": {\n    \"instanceId\": \"d16fb7d4b3eb9b9d4ad2ee6a7fbae593d73e9715e51f583c2a0e9acd1781c08e\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"RAG:Context-Aware Chunking | Google Drive to Pinecone via OpenRouter & Gemini\",\n  \"tags\": [\n    {\n      \"id\": \"XZIQK6NdzGvgbZFd\",\n      \"name\": \"Sell\",\n      \"createdAt\": \"2025-01-15T12:28:48.424Z\",\n      \"updatedAt\": \"2025-01-15T12:28:48.424Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"7abbfa6e-4b17-4656-9b82-377b1bacf539\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"448ec137-bf64-46b4-bf15-c7a040faa306\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        1100,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"f22557ee-7f37-40cd-9063-a9a759274663\",\n      \"name\": \"OpenRouter Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\n      \"position\": [\n        20,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openRouterApi\": {\n          \"id\": \"ddH6iNlm09UxrXvu\",\n          \"name\": \"Auto: OpenRouter\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"57e8792e-25ae-43d5-b4e9-e87642365ee9\",\n      \"name\": \"Pinecone Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStorePinecone\",\n      \"position\": [\n        780,\n        360\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"pineconeIndex\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"context-rag-test\",\n          \"cachedResultName\": \"context-rag-test\"\n        }\n      },\n      \"credentials\": {\n        \"pineconeApi\": {\n          \"id\": \"R3QGXSEIRTEAZttK\",\n          \"name\": \"Auto: PineconeApi\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0a8c2426-0aaf-424a-b246-336a9034aba8\",\n      \"name\": \"Embeddings Google Gemini\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsGoogleGemini\",\n      \"position\": [\n        720,\n        540\n      ],\n      \"parameters\": {\n        \"modelName\": \"models/text-embedding-004\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"9idxGZRZ3BAKDoxq\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"edc587bd-494d-43e8-b6d6-26adab7af3dc\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        920,\n        540\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a82d4e0b-248e-426d-9ef3-f25e7078ceb3\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        840,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"chunkSize\": 100000\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8571b92f-5587-454f-9700-ea04ca35311b\",\n      \"name\": \"Get Document From Google Drive\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        220,\n        0\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1gm0jxFTLuiWB5u4esEjzoCPImrVqu0AEMIKBIesTf9M\",\n          \"cachedResultUrl\": \"https://docs.google.com/document/d/1gm0jxFTLuiWB5u4esEjzoCPImrVqu0AEMIKBIesTf9M/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Udit Rawat - Details\"\n        },\n        \"options\": {\n          \"googleFileConversion\": {\n            \"conversion\": {\n              \"docsToFormat\": \"text/plain\"\n            }\n          }\n        },\n        \"operation\": \"download\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"SsiQguNA8w3Wwv4w\",\n          \"name\": \"Auto: Google Drive\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"2bed3d0f-3d65-4394-87f1-e73320a43a4a\",\n      \"name\": \"Extract Text Data From Google Document\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        440,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"text\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"837fa691-6c66-434b-ba82-d1cad9aecdf7\",\n      \"name\": \"Split Document Text Into Sections\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        660,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let split_text = \\\"—---------------------------—-------------[SECTIONEND]—---------------------------—-------------\\\";\\nfor (const item of $input.all()) {\\n  item.json.section = item.json.data.split(split_text);\\n  item.json.document = JSON.stringify(item.json.section)\\n}\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"cc801e7e-e01b-421a-9211-08322ef8a0b2\",\n      \"name\": \"Prepare Sections For Looping\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        880,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"section\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"658cb8df-92e3-4b25-8f37-e5f959d913dc\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -40,\n        -100\n      ],\n      \"parameters\": {\n        \"width\": 1300,\n        \"height\": 280,\n        \"content\": \"## 准备文档  \\n该部分负责从Google Drive下载文件，通过检测分隔符将文本分割成多个段落，并为后续循环处理做好准备。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82ee9194-484a-46db-b75c-bec34201c7e2\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -220,\n        220\n      ],\n      \"parameters\": {\n        \"width\": 780,\n        \"height\": 360,\n        \"content\": \"## 准备上下文\\n在本节中，代理节点将为文本片段（文本块）准备上下文信息，随后该上下文将与文本片段本身一并传递以进行向量化转换。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2f6950df-ead1-479a-aa51-7768121a4eb2\",\n      \"name\": \"AI Agent - Prepare Context\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        40,\n        260\n      ],\n      \"parameters\": {\n        \"text\": \"=<document> \\n{{ $('Split Document Text Into Sections').item.json.document }}\\n</document> \\nHere is the chunk we want to situate within the whole document \\n<chunk> \\n{{ $json.section }}\\n</chunk> \\nPlease give a short succinct context to situate this chunk within the overall document for the purposes of improving search retrieval of the chunk. Answer only with the succinct context and nothing else. \",\n        \"agent\": \"conversationalAgent\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"34a465fc-a505-445a-9211-bcd830381354\",\n      \"name\": \"Concatenate the context and section text\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        400,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"e5fb0381-5d23-46e2-a0d1-438240b80a3e\",\n              \"name\": \"=section_chunk\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output }}. {{ $('Loop Over Items').item.json.section }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"4a7a788c-8e5b-453c-ae52-a4522048992d\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        640,\n        220\n      ],\n      \"parameters\": {\n        \"width\": 580,\n        \"height\": 600,\n        \"content\": \"## 文本向量化转换\\n在此步骤中，Pinecone节点通过Google Gemini将提供的文本转化为向量，并将其存储至Pinecone向量数据库中。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"45798b49-fc78-417c-a752-4dd1a8882cd7\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 400,\n        \"height\": 300,\n        \"content\": \"## 视频演示\\n[![视频缩略图](https://img.youtube.com/vi/qBeWP65I4hg/maxresdefault.jpg)](https://www.youtube.com/watch?v=qBeWP65I4hg)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"4f0e2203-5850-4a32-b1dd-5adc57fa43ff\",\n  \"connections\": {\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"AI Agent - Prepare Context\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Pinecone Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenRouter Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent - Prepare Context\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Pinecone Vector Store\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings Google Gemini\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Pinecone Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent - Prepare Context\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Concatenate the context and section text\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare Sections For Looping\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Document From Google Drive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Text Data From Google Document\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Document Text Into Sections\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare Sections For Looping\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Document From Google Drive\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Text Data From Google Document\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Document Text Into Sections\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Concatenate the context and section text\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Pinecone Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}