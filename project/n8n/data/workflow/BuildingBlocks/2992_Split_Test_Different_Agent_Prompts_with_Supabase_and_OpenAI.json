{
  "title": "Split Test Different Agent Prompts with Supabase and OpenAI",
  "url": "https://n8n.io/workflows/2992-split-test-different-agent-prompts-with-supabase-and-openai/",
  "category": "BuildingBlocks",
  "category_url": "https://n8n.io/workflows/categories/building-blocks/?sort=createdAt:desc",
  "author": "Chris Carr",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-07",
  "content": "",
  "workflow_json": "{\"id\":\"TEA7K9MSVQGCWKe6\",\"meta\":{\"instanceId\":\"ac63467607103d9c95dd644384984672b90b1cb03e07edbaf18fe72b2a6c45bb\",\"templateCredsSetupCompleted\":true},\"name\":\"A/B Split Testing\",\"tags\":[],\"nodes\":[{\"id\":\"e8404493-4297-4169-a72f-89e668ae5fbc\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-1460,-140],\"webhookId\":\"334e3a8d-73d2-4d3c-9927-158c1169ef5e\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"582e1c1b-12ff-42ff-8130-48f94eebd706\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[220,-160],\"parameters\":{\"text\":\"={{ $('When chat message received').item.json.chatInput }}\",\"options\":{\"systemMessage\":\"={{ $json.prompt }}\"},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"39ca5c70-11d4-4f86-bde5-0f9827297be9\",\"name\":\"Check If Session Exists\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[-960,-140],\"parameters\":{\"filters\":{\"conditions\":[{\"keyName\":\"session_id\",\"keyValue\":\"={{ $('When chat message received').item.json.sessionId }}\"}]},\"tableId\":\"split_test_sessions\",\"operation\":\"get\"},\"credentials\":{\"supabaseApi\":{\"id\":\"1iEg1EzFrF29iqp2\",\"name\":\"Supabase (bsde.ai)\"}},\"executeOnce\":false,\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"35f2c270-9571-41ba-ab7c-47a6742d7d90\",\"name\":\"If Session Does Exist\",\"type\":\"n8n-nodes-base.if\",\"position\":[-720,-140],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"4270c464-6874-45d2-aa3b-606f45544c3d\",\"operator\":{\"type\":\"number\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.id }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"ec00ad92-96e9-4936-a547-2a2715ff5c32\",\"name\":\"Assign Path To Session\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[-400,-20],\"parameters\":{\"tableId\":\"split_test_sessions\",\"fieldsUi\":{\"fieldValues\":[{\"fieldId\":\"show_alternative\",\"fieldValue\":\"={{ Math.random() < 0.5 }}\"},{\"fieldId\":\"session_id\",\"fieldValue\":\"={{ $('When chat message received').item.json.sessionId }}\"}]}},\"credentials\":{\"supabaseApi\":{\"id\":\"1iEg1EzFrF29iqp2\",\"name\":\"Supabase (bsde.ai)\"}},\"typeVersion\":1},{\"id\":\"92ee7145-30ae-41e9-bc04-eef03b84485e\",\"name\":\"Define Path Values\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1200,-140],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"9581a184-a120-4b1f-8408-cfe97520d107\",\"name\":\"baseline_value\",\"type\":\"string\",\"value\":\"The dog's name is Ben\"},{\"id\":\"1752f2c4-4ce4-4893-b8db-1c59131c298a\",\"name\":\"alternative_value\",\"type\":\"string\",\"value\":\"The dog's name is Tom\"}]}},\"typeVersion\":3.4},{\"id\":\"23c1b4e2-2ba2-4237-bb4b-b92da127d201\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[300,60],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"1OMpAMAKR9l3eUDI\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"be3f14b9-68c7-457d-b5bf-a6abbadf5b67\",\"name\":\"Postgres Chat Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\"position\":[480,60],\"parameters\":{\"tableName\":\"n8n_split_test_chat_histories\",\"sessionKey\":\"={{ $('When chat message received').item.json.sessionId }}\",\"sessionIdType\":\"customKey\"},\"credentials\":{\"postgres\":{\"id\":\"tzLXHvhykxvYghPC\",\"name\":\"bsde.ai Supabase (Session Pooler)\"}},\"typeVersion\":1.3},{\"id\":\"1c20d274-2482-4551-a4ea-64860eb35276\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1520,-260],\"parameters\":{\"color\":7,\"width\":220,\"height\":300,\"content\":\"## 1. Receive Message\\n\\n\"},\"typeVersion\":1},{\"id\":\"ee22d3b1-d447-4e35-8ac4-d093edf6deee\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1280,-340],\"parameters\":{\"color\":7,\"width\":1340,\"height\":500,\"content\":\"## 2. Determine Prompt for LLM\\n\"},\"typeVersion\":1},{\"id\":\"7d90ec00-5fca-4b0d-bc1f-e8b8c179b960\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[80,-240],\"parameters\":{\"color\":7,\"width\":520,\"height\":440,\"content\":\"## 3. AI Agent\"},\"typeVersion\":1},{\"id\":\"b9b9e0e8-53c1-4d6a-bbdc-c2a13d740dfb\",\"name\":\"Get Correct Prompt\",\"type\":\"n8n-nodes-base.set\",\"position\":[-80,-160],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"08de68ec-0f12-43ee-98ab-59d8a414f114\",\"name\":\"prompt\",\"type\":\"string\",\"value\":\"={{ $json.show_alternative ? $('Define Path Values').item.json.alternative_value : $('Define Path Values').item.json.baseline_value }}\"}]}},\"typeVersion\":3.4},{\"id\":\"2b78ce9b-e6b4-4744-8ddf-00f8ae990fc8\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1260,-240],\"parameters\":{\"color\":5,\"width\":220,\"height\":260,\"content\":\"### Modification\\nSet the values of the  baseline and alternative prompts\"},\"typeVersion\":1},{\"id\":\"0646f176-407a-41ee-b602-34bd681fc421\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[100,40],\"parameters\":{\"color\":5,\"width\":340,\"height\":140,\"content\":\"### Modification\\nReplace this sub-node \\nto use a different language\\n model\"},\"typeVersion\":1},{\"id\":\"a391018c-5d28-4384-89e1-0435758a6945\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1480,-600],\"parameters\":{\"width\":520,\"height\":240,\"content\":\"### Setup\\n1. Create a table in Supabase called **split_test_sessions**. It needs to have the following columns: **session_id** (`text`) and **show_alternative** (`bool`)\\n2. Add your **Supabase**, **OpenAI**, and **PostgreSQL** credentials\\n3. Modify the **Define Path Values** node to set the baseline and alternative prompt values.\\n4. Activate the workflow and test by sending messages through n8n's inbuilt chat\\n5. Experiment with different chat sessions to test see both prompts in action\"},\"typeVersion\":1},{\"id\":\"2382d146-f0c1-4de6-9e90-b17c304df692\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2120,-360],\"parameters\":{\"width\":560,\"height\":480,\"content\":\"\\n## Split Test Different Agent Prompts with Supabase and OpenAI\\n### Use Case\\nOftentimes, it's useful to test different settings for a large language model in production against various metrics. Split testing is a good method for doing this.\\n### What it Does\\nThis workflow randomly assigns chat sessions to one of two prompts, the baseline and the alternative. The agent will use the same prompt for all interactions in that chat session.\\n### How it Works\\n1. When messages arrive, a table containing information regarding session ID and which prompt to use is checked to see if the chat already exists\\n2. If it does not, the session ID is added to the table and a prompt is randomly assigned\\n3. These values are then used to generate a response\\n### Next Steps\\n- Modify the workflow to test different LLM settings such as temperature\\n- Add a method to measure the efficacy of the two alternative prompts\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"339c6f2f-e4d1-4922-9442-2c1a78e96067\",\"connections\":{\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Define Path Values\":{\"main\":[[{\"node\":\"Check If Session Exists\",\"type\":\"main\",\"index\":0}]]},\"Get Correct Prompt\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Postgres Chat Memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"If Session Does Exist\":{\"main\":[[{\"node\":\"Get Correct Prompt\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Assign Path To Session\",\"type\":\"main\",\"index\":0}]]},\"Assign Path To Session\":{\"main\":[[{\"node\":\"Get Correct Prompt\",\"type\":\"main\",\"index\":0}]]},\"Check If Session Exists\":{\"main\":[[{\"node\":\"If Session Does Exist\",\"type\":\"main\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"Define Path Values\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Split Test Agent Prompts with Supabase and OpenAI\n\n### Use Case\n\nOftentimes, it's useful to test different settings for a large language model in production against various metrics. Split testing is a good method for doing this.\n\n### What it Does\n\nThis workflow randomly assigns chat sessions to one of two prompts, the baseline and the alternative. The agent will use the same prompt for all interactions in that chat session.\n\n### How it Works\n\n  1. When messages arrive, a table containing information regarding session ID and which prompt to use is checked to see if the chat already exists\n  2. If it does not, the session ID is added to the table and a prompt is randomly assigned\n  3. These values are then used to generate a response\n\n\n\n### Setup\n\n  1. Create a table in Supabase called **split_test_sessions**. It needs to have the following columns: **session_id** (`text`) and **show_alternative** (`bool`)\n  2. Add your **Supabase** , **OpenAI** , and **PostgreSQL** credentials\n  3. Modify the **Define Path Values** node to set the baseline and alternative prompt values.\n  4. Activate the workflow and test by sending messages through n8n's inbuilt chat\n  5. Experiment with different chat sessions to test see both prompts in action\n\n\n\n### Next Steps\n\n  * Modify the workflow to test different LLM settings such as temperature\n  * Add a method to measure the efficacy of the two alternative prompts\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>Split Test Agent Prompts with Supabase and OpenAI</h2>\n<h3>Use Case</h3>\n<p>Oftentimes, it's useful to test different settings for a large language model in production against various metrics. Split testing is a good method for doing this.</p>\n<h3>What it Does</h3>\n<p>This workflow randomly assigns chat sessions to one of two prompts, the baseline and the alternative. The agent will use the same prompt for all interactions in that chat session.</p>\n<h3>How it Works</h3>\n<ol>\n<li>When messages arrive, a table containing information regarding session ID and which prompt to use is checked to see if the chat already exists</li>\n<li>If it does not, the session ID is added to the table and a prompt is randomly assigned</li>\n<li>These values are then used to generate a response</li>\n</ol>\n<h3>Setup</h3>\n<ol>\n<li>Create a table in Supabase called <strong>split_test_sessions</strong>. It needs to have the following columns: <strong>session_id</strong> (<code>text</code>) and <strong>show_alternative</strong> (<code>bool</code>)</li>\n<li>Add your <strong>Supabase</strong>, <strong>OpenAI</strong>, and <strong>PostgreSQL</strong> credentials</li>\n<li>Modify the <strong>Define Path Values</strong> node to set the baseline and alternative prompt values.</li>\n<li>Activate the workflow and test by sending messages through n8n's inbuilt chat</li>\n<li>Experiment with different chat sessions to test see both prompts in action</li>\n</ol>\n<h3>Next Steps</h3>\n<ul>\n<li>Modify the workflow to test different LLM settings such as temperature</li>\n<li>Add a method to measure the efficacy of the two alternative prompts</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "## 使用Supabase与OpenAI进行代理提示词分桶测试\n\n### 应用场景\n\n在生产环境中，针对不同指标测试大语言模型的各种参数设置通常很有价值。分桶测试是实现这一目标的有效方法。\n\n### 功能说明\n\n本工作流会随机将聊天会话分配至两种提示词方案之一：基准方案或替代方案。代理将在该会话的所有交互中持续使用相同的提示词。\n\n### 运行原理\n\n1. 当消息到达时，系统会检查包含会话ID和提示词方案的记录表，确认是否已存在对应会话\n2. 若不存在，则将新会话ID加入记录表并随机分配提示词方案\n3. 最终基于这些参数生成响应内容\n\n### 配置指南\n\n1. 在Supabase创建名为**split_test_sessions**的数据表，需包含两个字段：**session_id**（文本类型）和**show_alternative**（布尔类型）\n2. 配置您的**Supabase**、**OpenAI**和**PostgreSQL**服务凭证\n3. 修改**定义路径值**节点以设置基准提示词和替代提示词内容\n4. 激活工作流后，通过n8n内置聊天功能发送消息进行测试\n5. 创建不同会话以观察两种提示词方案的实际效果\n\n### 后续扩展\n\n* 调整工作流以测试不同LLM参数（如温度系数）\n* 添加评估两种提示词方案效果的量化方法",
  "title_zh": "使用Supabase和OpenAI进行不同代理提示的拆分测试",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"id\": \"TEA7K9MSVQGCWKe6\",\n  \"meta\": {\n    \"instanceId\": \"ac63467607103d9c95dd644384984672b90b1cb03e07edbaf18fe72b2a6c45bb\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"A/B Split Testing\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"e8404493-4297-4169-a72f-89e668ae5fbc\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -1460,\n        -140\n      ],\n      \"webhookId\": \"334e3a8d-73d2-4d3c-9927-158c1169ef5e\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"582e1c1b-12ff-42ff-8130-48f94eebd706\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        220,\n        -160\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('When chat message received').item.json.chatInput }}\",\n        \"options\": {\n          \"systemMessage\": \"={{ $json.prompt }}\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"39ca5c70-11d4-4f86-bde5-0f9827297be9\",\n      \"name\": \"Check If Session Exists\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        -960,\n        -140\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"session_id\",\n              \"keyValue\": \"={{ $('When chat message received').item.json.sessionId }}\"\n            }\n          ]\n        },\n        \"tableId\": \"split_test_sessions\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"1iEg1EzFrF29iqp2\",\n          \"name\": \"Supabase (bsde.ai)\"\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"35f2c270-9571-41ba-ab7c-47a6742d7d90\",\n      \"name\": \"If Session Does Exist\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -720,\n        -140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"4270c464-6874-45d2-aa3b-606f45544c3d\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.id }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"ec00ad92-96e9-4936-a547-2a2715ff5c32\",\n      \"name\": \"Assign Path To Session\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        -400,\n        -20\n      ],\n      \"parameters\": {\n        \"tableId\": \"split_test_sessions\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"show_alternative\",\n              \"fieldValue\": \"={{ Math.random() < 0.5 }}\"\n            },\n            {\n              \"fieldId\": \"session_id\",\n              \"fieldValue\": \"={{ $('When chat message received').item.json.sessionId }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"1iEg1EzFrF29iqp2\",\n          \"name\": \"Supabase (bsde.ai)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"92ee7145-30ae-41e9-bc04-eef03b84485e\",\n      \"name\": \"Define Path Values\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1200,\n        -140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"9581a184-a120-4b1f-8408-cfe97520d107\",\n              \"name\": \"baseline_value\",\n              \"type\": \"string\",\n              \"value\": \"The dog's name is Ben\"\n            },\n            {\n              \"id\": \"1752f2c4-4ce4-4893-b8db-1c59131c298a\",\n              \"name\": \"alternative_value\",\n              \"type\": \"string\",\n              \"value\": \"The dog's name is Tom\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"23c1b4e2-2ba2-4237-bb4b-b92da127d201\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        300,\n        60\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"1OMpAMAKR9l3eUDI\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"be3f14b9-68c7-457d-b5bf-a6abbadf5b67\",\n      \"name\": \"Postgres Chat Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\n      \"position\": [\n        480,\n        60\n      ],\n      \"parameters\": {\n        \"tableName\": \"n8n_split_test_chat_histories\",\n        \"sessionKey\": \"={{ $('When chat message received').item.json.sessionId }}\",\n        \"sessionIdType\": \"customKey\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"tzLXHvhykxvYghPC\",\n          \"name\": \"bsde.ai Supabase (Session Pooler)\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"1c20d274-2482-4551-a4ea-64860eb35276\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1520,\n        -260\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 220,\n        \"height\": 300,\n        \"content\": \"## 1. 接收消息\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ee22d3b1-d447-4e35-8ac4-d093edf6deee\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1280,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1340,\n        \"height\": 500,\n        \"content\": \"## 2. 确定LLM的提示词\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7d90ec00-5fca-4b0d-bc1f-e8b8c179b960\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        80,\n        -240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 520,\n        \"height\": 440,\n        \"content\": \"## 3. 人工智能代理\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b9b9e0e8-53c1-4d6a-bbdc-c2a13d740dfb\",\n      \"name\": \"Get Correct Prompt\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -80,\n        -160\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"08de68ec-0f12-43ee-98ab-59d8a414f114\",\n              \"name\": \"prompt\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.show_alternative ? $('Define Path Values').item.json.alternative_value : $('Define Path Values').item.json.baseline_value }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"2b78ce9b-e6b4-4744-8ddf-00f8ae990fc8\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1260,\n        -240\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 260,\n        \"content\": \"### 修改\\n设置基准提示和替代提示的值\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0646f176-407a-41ee-b602-34bd681fc421\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        40\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 340,\n        \"height\": 140,\n        \"content\": \"### 修改\\n将此子节点替换为使用不同的语言模型\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a391018c-5d28-4384-89e1-0435758a6945\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1480,\n        -600\n      ],\n      \"parameters\": {\n        \"width\": 520,\n        \"height\": 240,\n        \"content\": \"### 设置步骤\\n1. 在Supabase中创建名为**split_test_sessions**的表，需包含以下列：**session_id**（文本类型）和**show_alternative**（布尔类型）\\n2. 添加你的**Supabase**、**OpenAI**和**PostgreSQL**凭证\\n3. 修改**定义路径值**节点以设置基准提示和替代提示的值\\n4. 激活工作流，通过n8n内置聊天功能发送消息进行测试\\n5. 尝试不同的聊天会话，观察两种提示的实际效果\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2382d146-f0c1-4de6-9e90-b17c304df692\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2120,\n        -360\n      ],\n      \"parameters\": {\n        \"width\": 560,\n        \"height\": 480,\n        \"content\": \"## 使用Supabase与OpenAI进行代理提示的拆分测试\\n### 应用场景\\n在生产环境中针对不同指标测试大语言模型的各种设置通常很有价值，拆分测试是实现这一目标的有效方法。\\n### 功能说明\\n该工作流程会随机将聊天会话分配给两种提示方案之一（基准方案与替代方案），代理将在该会话的所有交互中持续使用相同的提示模板。\\n### 实现原理\\n1. 当消息到达时，系统会检查记录会话ID与对应提示方案的映射表，确认是否已存在该聊天会话\\n2. 若不存在，则将新会话ID插入映射表并随机分配提示方案\\n3. 最终根据这些参数生成响应内容\\n### 后续优化\\n- 调整工作流程以测试不同LLM参数（如温度系数）\\n- 新增评估两种替代提示方案效能的量化方法\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"339c6f2f-e4d1-4922-9442-2c1a78e96067\",\n  \"connections\": {\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Define Path Values\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check If Session Exists\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Correct Prompt\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Postgres Chat Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If Session Does Exist\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Correct Prompt\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Assign Path To Session\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Assign Path To Session\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Correct Prompt\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check If Session Exists\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If Session Does Exist\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Define Path Values\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}