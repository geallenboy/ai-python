{
  "title": "Validate TOTP Token (without creating a credential)",
  "url": "https://n8n.io/workflows/2379-validate-totp-token-without-creating-a-credential/",
  "category": "BuildingBlocks",
  "category_url": "https://n8n.io/workflows/categories/building-blocks/?sort=createdAt:desc",
  "author": "Bazhard",
  "publish_date": "Last update 8 months ago",
  "publish_date_absolute": "2024-09-07",
  "content": "",
  "workflow_json": "{\"name\":\"TOTP VALIDATION (WITHOUT CREATING CREDENTIAL)\",\"nodes\":[{\"id\":\"56f102c4-5b84-4e30-955c-0ea1221c328f\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[480,680],\"parameters\":{},\"typeVersion\":1},{\"id\":\"4f562819-ee42-42ad-b821-aff2cbebbc0f\",\"name\":\"TOTP VALIDATION\",\"type\":\"n8n-nodes-base.code\",\"position\":[920,680],\"parameters\":{\"language\":\"python\",\"pythonCode\":\"import hmac\\nimport hashlib\\nimport time\\nimport base64\\n\\ndef base32_decode(key):\\n    \\\"\\\"\\\"Decodes a base32 key into bytes\\\"\\\"\\\"\\n    key += '=' * (-len(key) % 8)  # Add necessary '=' for valid length\\n    return base64.b32decode(key.upper(), casefold=True)\\n\\ndef generate_totp(secret, interval=30, digits=6):\\n    \\\"\\\"\\\"Generates a TOTP code based on a secret key\\\"\\\"\\\"\\n    interval_count = int(time.time() // interval)\\n    interval_bytes = interval_count.to_bytes(8, byteorder='big')\\n\\n    hmac_hash = hmac.new(secret, interval_bytes, hashlib.sha1).digest()\\n    \\n    offset = hmac_hash[-1] & 0x0F\\n    binary_code = ((hmac_hash[offset] & 0x7F) << 24 |\\n                   (hmac_hash[offset + 1] & 0xFF) << 16 |\\n                   (hmac_hash[offset + 2] & 0xFF) << 8 |\\n                   (hmac_hash[offset + 3] & 0xFF))\\n    \\n    otp_code = binary_code % (10 ** digits)\\n    \\n    # Format with leading zeros if necessary\\n    otp_code_str = str(otp_code).zfill(digits)\\n    \\n    return otp_code_str\\n\\ndef verify_totp(secret, code, interval=30, digits=6):\\n    \\\"\\\"\\\"Checks whether the TOTP code is valid\\\"\\\"\\\"\\n    secret_bytes = base32_decode(secret)\\n    generated_code = generate_totp(secret_bytes, interval, digits)\\n    \\n    return generated_code == code\\n\\n# Example of use\\nsecret = _input.item.json.totp_secret_example  # Secret key base32 (example)\\ncode =  _input.item.json.code_to_verify_example # Code to check (example)\\n\\n# Return 1 if code is valid. Return 0 if invalid\\nif verify_totp(secret, code):\\n    return [{\\\"status\\\": 1}]\\nelse:\\n    return [{\\\"status\\\": 0}]\"},\"typeVersion\":2},{\"id\":\"9760b31c-5ba8-4001-9cbe-2be2ae58d58e\",\"name\":\"IF CODE IS VALID\",\"type\":\"n8n-nodes-base.if\",\"position\":[1140,680],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"470cf368-daee-4136-b907-a3539765871d\",\"operator\":{\"type\":\"number\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.status }}\",\"rightValue\":1}]}},\"typeVersion\":2.1},{\"id\":\"3a029863-8fd0-42ef-b8ff-9f7cdf6e8d94\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[440,180],\"parameters\":{\"width\":883,\"height\":430,\"content\":\"## TOTP Validation with Function Node\\n\\nThis template allows you to verify if a 6-digit TOTP code is valid using the corresponding TOTP secret. It can be used in an authentication system.\\n### Example usage:\\n- You retrieve the user's TOTP secret from a database, then you want to verify if the 2FA code provided by the user is valid.\\n\\n## Setup Guidelines\\n\\nYou only need the \\\"TOTP VALIDATION\\\" node.\\nYou will need to modify lines 39 and 40 of the \\\"TOTP VALIDATION\\\" node with the correct values for your specific context.\\n\\n## Testing the Template\\nYou can define a sample secret and code in the \\\"EXAMPLE FIELDS\\\" node below, then click \\\"Test Workflow\\\".\\nIf the code is valid for the provided secret, the flow will proceed to the \\\"true\\\" branch of the \\\"IF CODE IS VALID\\\" node. Otherwise, it will go to the \\\"false\\\" branch.\"},\"typeVersion\":1},{\"id\":\"f660a50f-2c33-49bb-b975-8d51e9bf24ed\",\"name\":\"EXAMPLE FIELDS\",\"type\":\"n8n-nodes-base.set\",\"position\":[700,680],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"03a66bf9-1bf4-44c0-92e0-edd45929e467\",\"name\":\"code_to_verify_example\",\"type\":\"string\",\"value\":\"516620\"},{\"id\":\"7bb18b0a-1851-4f27-a91f-5f93b663cfd0\",\"name\":\"totp_secret_example\",\"type\":\"string\",\"value\":\"CNSUKUMZLQJEZJ3\"}]}},\"typeVersion\":3.4}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"connections\":{\"EXAMPLE FIELDS\":{\"main\":[[{\"node\":\"TOTP VALIDATION\",\"type\":\"main\",\"index\":0}]]},\"TOTP VALIDATION\":{\"main\":[[{\"node\":\"IF CODE IS VALID\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"EXAMPLE FIELDS\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## TOTP Validation with Function Node\n\nThis template allows you to verify if a 6-digit TOTP code is valid using the corresponding TOTP secret. It can be used in an authentication system.  \nThe inputs need to be:\n\n  * a base32 totp secret (String)\n  * a 6 digits code (String)\n\n\n\n++Important:++ The 6-digit code must be in text format. If the code starts with zeros and is treated as a number, it could cause validation issues.\n\nThe function node will generate a 6-digit code from the TOTP secret, then compare it with the provided code. If they match, it will return `1` otherwise, it will return `0`.\n\n## Example usage:\n\n  * You retrieve the user's TOTP secret from a database, then you want to verify if the 2FA code provided by the user is valid.\n\n\n\n## Setup Guidelines\n\nYou only need the ==`TOTP VALIDATION`== node.  \n==You will need to modify lines `39` and `40`== of the node with the correct values for your specific context.\n\n## Testing the Template\n\nYou can define a sample secret and code in the `EXAMPLE FIELDS` node of the template, then click `\"Test Workflow\"`.  \nIf the code is valid for the provided secret, the flow will proceed to the `true` branch of the `IF CODE IS VALID` node. Otherwise, it will go to the `false` branch.\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>TOTP Validation with Function Node</h2>\n<p>This template allows you to verify if a 6-digit TOTP code is valid using the corresponding TOTP secret. It can be used in an authentication system.<br>\nThe inputs need to be:</p>\n<ul>\n<li>a base32 totp secret (String)</li>\n<li>a 6 digits code (String)</li>\n</ul>\n<p>++Important:++ The 6-digit code must be in text format. If the code starts with zeros and is treated as a number, it could cause validation issues.</p>\n<p>The function node will generate a 6-digit code from the TOTP secret, then compare it with the provided code. If they match, it will return <code>1</code> otherwise, it will return <code>0</code>.</p>\n<h2>Example usage:</h2>\n<ul>\n<li>You retrieve the user's TOTP secret from a database, then you want to verify if the 2FA code provided by the user is valid.</li>\n</ul>\n<h2>Setup Guidelines</h2>\n<p>You only need the ==<code>TOTP VALIDATION</code>== node.<br>\n==You will need to modify lines <code>39</code> and <code>40</code>== of the node with the correct values for your specific context.</p>\n<h2>Testing the Template</h2>\n<p>You can define a sample secret and code in the <code>EXAMPLE FIELDS</code> node of the template, then click <code>\"Test Workflow\"</code>.<br>\nIf the code is valid for the provided secret, the flow will proceed to the <code>true</code> branch of the <code>IF CODE IS VALID</code> node. Otherwise, it will go to the <code>false</code> branch.</p>\n</div><!--]-->",
  "readme_zh": "## 使用函数节点进行TOTP验证\n\n本模板允许您通过对应的TOTP密钥来验证6位数动态密码的有效性，适用于认证系统。  \n需要输入以下参数：\n\n  *  base32格式的TOTP密钥（字符串类型）\n  *  6位数验证码（字符串类型）\n\n++重要说明：++ 6位数验证码必须以文本格式传递。若验证码以零开头且被当作数字处理，可能导致验证失败。\n\n函数节点将根据TOTP密钥生成6位数验证码，并与用户提供的验证码进行比对。若匹配则返回`1`，否则返回`0`。\n\n## 使用示例：\n\n  * 从数据库获取用户的TOTP密钥后，需要验证用户提供的双重认证码是否有效。",
  "title_zh": "验证TOTP令牌（不创建凭证）",
  "publish_date_zh": "最后更新于8个月前",
  "workflow_json_zh": "{\n  \"name\": \"TOTP VALIDATION (WITHOUT CREATING CREDENTIAL)\",\n  \"nodes\": [\n    {\n      \"id\": \"56f102c4-5b84-4e30-955c-0ea1221c328f\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        480,\n        680\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4f562819-ee42-42ad-b821-aff2cbebbc0f\",\n      \"name\": \"TOTP VALIDATION\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        920,\n        680\n      ],\n      \"parameters\": {\n        \"language\": \"python\",\n        \"pythonCode\": \"import hmac\\nimport hashlib\\nimport time\\nimport base64\\n\\ndef base32_decode(key):\\n    \\\"\\\"\\\"Decodes a base32 key into bytes\\\"\\\"\\\"\\n    key += '=' * (-len(key) % 8)  # Add necessary '=' for valid length\\n    return base64.b32decode(key.upper(), casefold=True)\\n\\ndef generate_totp(secret, interval=30, digits=6):\\n    \\\"\\\"\\\"Generates a TOTP code based on a secret key\\\"\\\"\\\"\\n    interval_count = int(time.time() // interval)\\n    interval_bytes = interval_count.to_bytes(8, byteorder='big')\\n\\n    hmac_hash = hmac.new(secret, interval_bytes, hashlib.sha1).digest()\\n    \\n    offset = hmac_hash[-1] & 0x0F\\n    binary_code = ((hmac_hash[offset] & 0x7F) << 24 |\\n                   (hmac_hash[offset + 1] & 0xFF) << 16 |\\n                   (hmac_hash[offset + 2] & 0xFF) << 8 |\\n                   (hmac_hash[offset + 3] & 0xFF))\\n    \\n    otp_code = binary_code % (10 ** digits)\\n    \\n    # Format with leading zeros if necessary\\n    otp_code_str = str(otp_code).zfill(digits)\\n    \\n    return otp_code_str\\n\\ndef verify_totp(secret, code, interval=30, digits=6):\\n    \\\"\\\"\\\"Checks whether the TOTP code is valid\\\"\\\"\\\"\\n    secret_bytes = base32_decode(secret)\\n    generated_code = generate_totp(secret_bytes, interval, digits)\\n    \\n    return generated_code == code\\n\\n# Example of use\\nsecret = _input.item.json.totp_secret_example  # Secret key base32 (example)\\ncode =  _input.item.json.code_to_verify_example # Code to check (example)\\n\\n# Return 1 if code is valid. Return 0 if invalid\\nif verify_totp(secret, code):\\n    return [{\\\"status\\\": 1}]\\nelse:\\n    return [{\\\"status\\\": 0}]\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9760b31c-5ba8-4001-9cbe-2be2ae58d58e\",\n      \"name\": \"IF CODE IS VALID\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1140,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"470cf368-daee-4136-b907-a3539765871d\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.status }}\",\n              \"rightValue\": 1\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"3a029863-8fd0-42ef-b8ff-9f7cdf6e8d94\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        440,\n        180\n      ],\n      \"parameters\": {\n        \"width\": 883,\n        \"height\": 430,\n        \"content\": \"## 使用函数节点验证TOTP\\n\\n本模板允许您通过对应的TOTP密钥来验证6位TOTP代码的有效性，适用于身份认证系统。\\n### 使用场景示例：\\n- 从数据库获取用户的TOTP密钥后，需要验证用户提供的双重认证代码是否有效。\\n\\n## 配置指南\\n\\n仅需使用\\\"TOTP验证\\\"节点。\\n您需要根据实际使用场景修改\\\"TOTP验证\\\"节点中第39和40行的参数值。\\n\\n## 测试模板\\n您可以在下方的\\\"示例字段\\\"节点中设置测试用的密钥和验证码，然后点击\\\"测试工作流\\\"。\\n若验证码与密钥匹配，流程将进入\\\"验证通过\\\"分支；若验证失败，则进入\\\"验证失败\\\"分支。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f660a50f-2c33-49bb-b975-8d51e9bf24ed\",\n      \"name\": \"EXAMPLE FIELDS\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        700,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"03a66bf9-1bf4-44c0-92e0-edd45929e467\",\n              \"name\": \"code_to_verify_example\",\n              \"type\": \"string\",\n              \"value\": \"516620\"\n            },\n            {\n              \"id\": \"7bb18b0a-1851-4f27-a91f-5f93b663cfd0\",\n              \"name\": \"totp_secret_example\",\n              \"type\": \"string\",\n              \"value\": \"CNSUKUMZLQJEZJ3\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"connections\": {\n    \"EXAMPLE FIELDS\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"TOTP VALIDATION\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"TOTP VALIDATION\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF CODE IS VALID\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"EXAMPLE FIELDS\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}