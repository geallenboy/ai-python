{
  "title": "Convert an XML file to JSON via webhook call",
  "url": "https://n8n.io/workflows/2222-convert-an-xml-file-to-json-via-webhook-call/",
  "category": "BuildingBlocks",
  "category_url": "https://n8n.io/workflows/categories/building-blocks/?sort=createdAt:desc",
  "author": "n8n Team",
  "publish_date": "Last update a year ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"257476b1ef58bf3cb6a46e65fac7ee34a53a5e1a8492d5c6e4da5f87c9b82833\",\"templateId\":\"2222\"},\"nodes\":[{\"id\":\"a131803a-ab1d-4a89-b51d-8a875fa2caaf\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[440,267.87369152409246],\"parameters\":{\"width\":344,\"height\":303,\"content\":\"## Testing \\n\\nTesting can be done with CURL or similar.\\n\\nFor File posting using Form Data\\ncurl -X POST -F file=@filepath.xml <WEBHOOK_URL>\\n\\nThis can also be tested using the Test workflow\"},\"typeVersion\":1},{\"id\":\"f9ae7afb-48a6-45bf-9c55-0e5fd63afede\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1720,747.8736915240925],\"parameters\":{\"color\":4,\"width\":496,\"height\":256,\"content\":\"## Response\\nWhere possible we will be returning a JSON object.\\n```\\n{\\n  \\\"status\\\": \\\"ok\\\",\\n  \\\"data\\\": { // JSON DATA }\\n}\\n```\\nIf there is an error\\n```\\n{\\n  \\\"status\\\": \\\"error\\\",\\n  \\\"data\\\": \\\"error message to display\\\"\\n}\\n```\"},\"typeVersion\":1},{\"id\":\"f37712fb-88cc-4d5a-9c37-6b9d962052e2\",\"name\":\"Extract From File\",\"type\":\"n8n-nodes-base.extractFromFile\",\"onError\":\"continueErrorOutput\",\"position\":[1080,307.87369152409246],\"parameters\":{\"options\":{},\"operation\":\"xml\",\"destinationKey\":\"xml\",\"binaryPropertyName\":\"data0\"},\"typeVersion\":1},{\"id\":\"e70c134d-a546-447d-a0cb-96c5573232e1\",\"name\":\"Error Response\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"onError\":\"continueErrorOutput\",\"position\":[1480,1067.8736915240925],\"parameters\":{\"options\":{\"responseCode\":500},\"respondWith\":\"json\",\"responseBody\":\"{\\n  \\\"status\\\": \\\"error\\\",\\n  \\\"data\\\": \\\"There was a problem converting your XML. Please refresh the page and try again.\\\"\\n}\"},\"typeVersion\":1},{\"id\":\"eacf0315-75fb-4461-b5d3-d8e7c5572492\",\"name\":\"POST\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[460,587.8736915240925],\"webhookId\":\"add125c9-1591-4e1c-b68c-8032b99b6010\",\"parameters\":{\"path\":\"tool/xml-to-json\",\"options\":{\"binaryPropertyName\":\"data\"},\"httpMethod\":\"POST\",\"responseMode\":\"responseNode\"},\"typeVersion\":1.1},{\"id\":\"37cb0178-2010-4cfb-8f12-84e8a45a3553\",\"name\":\"XML\",\"type\":\"n8n-nodes-base.xml\",\"onError\":\"continueErrorOutput\",\"position\":[1380,407.87369152409246],\"parameters\":{\"options\":{},\"dataPropertyName\":\"xml\"},\"typeVersion\":1},{\"id\":\"4aa36858-f9ee-4653-81d5-7276347abcc2\",\"name\":\"Success Response\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"onError\":\"continueErrorOutput\",\"position\":[1500,667.8736915240925],\"parameters\":{\"options\":{\"responseCode\":200},\"respondWith\":\"json\",\"responseBody\":\"={\\n  \\\"status\\\": \\\"OK\\\",\\n  \\\"data\\\": {{ JSON.stringify($json) }}\\n}\"},\"typeVersion\":1},{\"id\":\"0425203d-8185-4b27-b7b5-3b4f0e775981\",\"name\":\"Already JSON\",\"type\":\"n8n-nodes-base.set\",\"position\":[1080,667.8736915240925],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={{ $json.body }}\\n\"},\"typeVersion\":3.3},{\"id\":\"9ac12f08-a09b-45e9-8ebd-55ff6d8a63bd\",\"name\":\"Change Field\",\"type\":\"n8n-nodes-base.set\",\"onError\":\"continueErrorOutput\",\"position\":[1080,487.87369152409246],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"b2e3bec3-221e-4f1d-b439-f75174f68ed1\",\"name\":\"xml\",\"type\":\"string\",\"value\":\"={{ $json.body }}\"}]}},\"typeVersion\":3.3},{\"id\":\"d722f969-f3d3-4f4a-9fbd-4e2d30556408\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[380,240],\"parameters\":{\"color\":7,\"width\":1917.663445686706,\"height\":1027.3921976438187,\"content\":\"\"},\"typeVersion\":1},{\"id\":\"7618bd02-6d56-44a1-aaa3-de805e1ef18d\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"position\":[660,587.8736915240925],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"File\",\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"operator\":{\"type\":\"object\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $binary }}\",\"rightValue\":\"\"}]},\"renameOutput\":true},{\"outputKey\":\"Data\",\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"8930ce1a-a4cc-4094-b08f-a23a13dec40c\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.headers['content-type'] }}\",\"rightValue\":\"text/plain\"}]},\"renameOutput\":true},{\"outputKey\":\"appXML\",\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"e3108952-daa2-425c-8c70-7d2ce0949e0c\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.headers['content-type'] }}\",\"rightValue\":\"=application/xml\"}]},\"renameOutput\":true}]},\"options\":{\"fallbackOutput\":\"extra\"}},\"typeVersion\":3},{\"id\":\"b8bde0ed-7d85-4582-89c4-08a0829c4df8\",\"name\":\"Send to Error Channel\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1760,1067.8736915240925],\"parameters\":{\"text\":\":interrobang: Error in XML to JSON tool\",\"select\":\"channel\",\"blocksUi\":\"={\\n\\t\\\"blocks\\\": [\\n{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\":interrobang: Error in XML to JSON tool\\\"\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"*Time:*\\\\n{{ $now.format('dd/MM/yyyy HH:mm:ss') }}\\\\n*Execution ID:*\\\\n{{ $execution.id }}\\\\n\\\"\\n\\t\\t\\t},\\n\\t\\t\\t\\\"accessory\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"button\\\",\\n\\t\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"Go to Error\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"value\\\": \\\"error\\\",\\n\\t\\t\\t\\t\\\"url\\\": \\\"https://internal.users.n8n.cloud/workflow/{{ $workflow.id }}/executions/{{ $execution.id }}\\\",\\n\\t\\t\\t\\t\\\"action_id\\\": \\\"button-action\\\",\\n\\t\\t\\t\\t\\\"style\\\": \\\"primary\\\"\\n\\t\\t\\t}\\n\\t\\t}\\n\\t]\\n}\",\"channelId\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"#alerts-xml-to-json\"},\"messageType\":\"block\",\"otherOptions\":{}},\"credentials\":{\"slackApi\":{\"id\":\"6\",\"name\":\"Idea Bot\"}},\"typeVersion\":2.1}],\"pinData\":{},\"connections\":{\"XML\":{\"main\":[[{\"node\":\"Success Response\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]},\"POST\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"Switch\":{\"main\":[[{\"node\":\"Extract From File\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Change Field\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Already JSON\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]},\"Already JSON\":{\"main\":[[{\"node\":\"Success Response\",\"type\":\"main\",\"index\":0}]]},\"Change Field\":{\"main\":[[{\"node\":\"XML\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]},\"Error Response\":{\"main\":[[{\"node\":\"Send to Error Channel\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Send to Error Channel\",\"type\":\"main\",\"index\":0}]]},\"Success Response\":{\"main\":[null,[{\"node\":\"Send to Error Channel\",\"type\":\"main\",\"index\":0}]]},\"Extract From File\":{\"main\":[[{\"node\":\"XML\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Who this template is for\n\nThis template is for everyone who needs to work with XML data a lot and wants to convert it to JSON instead.\n\n## Use case\n\nMany products still work with XML files as their main language. Unfortunately, not every software still supports XML, as many switched to more modern storing languages such as JSON. This workflow is designed to handle the conversion of XML data to JSON format via a webhook call, with error handling and Slack notifications integrated into the process.\n\n## How this workflow works\n\n  1. **Triggering the workflow:**\n     * This workflow initiates upon receiving an HTTP POST request at the webhook endpoint specified in the \"POST\" node. The endpoint, designated as <WEBHOOK_URL>, can be accessed externally by sending a POST request to that URL.\n  2. **Data routing and processing:**\n     * Upon receiving the POST request, the Switch node routes the workflow's path based on conditions determined by the content type of the incoming data or any encountered errors.\n     * The Extract From File and Edit Fields (Set) nodes manage XML input processing, adapting their actions according to the data's content type.\n  3. **XML to JSON conversion** : \n     * The XML data extracted from the input is passed through the \"XML\" node, which performs the conversion process, transforming it into JSON format.\n  4. **Response handling:**\n\n\n  * If the XML-to-JSON conversion is successful, a success response is sent back with a status of \"OK\" and the converted JSON data.\n  * If there are any errors during the XML-to-JSON conversion process, an error response is sent back with a status of \"error\" and an error message.\n  * Error handling: in case of an error during processing, the workflow sends a notification to a Slack channel designated for error reporting.\n\n\n\n## **Set up steps**\n\n  1. Set up your own <WEBHOOK_URL> in the Webhook node. While building or testing a workflow, use a test webhook URL. When your workflow is ready, switch to using the production webhook URL.\n  2. Set credentials for Slack.\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>Who this template is for</h2>\n<p>This template is for everyone who needs to work with XML data a lot and wants to convert it to JSON instead.</p>\n<h2>Use case</h2>\n<p>Many products still work with XML files as their main language. Unfortunately, not every software still supports XML, as many switched to more modern storing languages such as JSON. This workflow is designed to handle the conversion of XML data to JSON format via a webhook call, with error handling and Slack notifications integrated into the process.</p>\n<h2>How this workflow works</h2>\n<ol>\n<li><strong>Triggering the workflow:</strong>\n<ul>\n<li>This workflow initiates upon receiving an HTTP POST request at the webhook endpoint specified in the \"POST\" node. The endpoint, designated as &lt;WEBHOOK_URL&gt;, can be accessed externally by sending a POST request to that URL.</li>\n</ul>\n</li>\n<li><strong>Data routing and processing:</strong>\n<ul>\n<li>Upon receiving the POST request, the Switch node routes the workflow's path based on conditions determined by the content type of the incoming data or any encountered errors.</li>\n<li>The Extract From File and Edit Fields (Set) nodes manage XML input processing, adapting their actions according to the data's content type.</li>\n</ul>\n</li>\n<li><strong>XML to JSON conversion</strong>:\n<ul>\n<li>The XML data extracted from the input is passed through the \"XML\" node, which performs the conversion process, transforming it into JSON format.</li>\n</ul>\n</li>\n<li><strong>Response handling:</strong></li>\n</ol>\n<ul>\n<li>If the XML-to-JSON conversion is successful, a success response is sent back with a status of \"OK\" and the converted JSON data.</li>\n<li>If there are any errors during the XML-to-JSON conversion process, an error response is sent back with a status of \"error\" and an error message.</li>\n<li>Error handling: in case of an error during processing, the workflow sends a notification to a Slack channel designated for error reporting.</li>\n</ul>\n<h2><strong>Set up steps</strong></h2>\n<ol>\n<li>Set up your own &lt;WEBHOOK_URL&gt; in the Webhook node. While building or testing a workflow, use a test webhook URL. When your workflow is ready, switch to using the production webhook URL.</li>\n<li>Set credentials for Slack.</li>\n</ol>\n</div><!--]-->",
  "readme_zh": "## 适用对象\n\n本模板适用于需要频繁处理XML数据并希望将其转换为JSON格式的所有用户。\n\n## 使用场景\n\n当前仍有大量产品以XML文件作为主要数据交互格式。然而随着技术演进，许多软件已转向JSON等现代数据存储格式，导致XML兼容性逐渐弱化。本工作流通过Webhook调用实现XML到JSON的转换，并内置错误处理机制与Slack通知功能。\n\n## 工作流运行机制\n\n1. **触发机制**：\n   * 当指定Webhook端点（配置于\"POST\"节点中的<WEBHOOK_URL>）收到HTTP POST请求时，工作流即被触发。该端点支持外部系统通过向该URL发送POST请求进行调用。\n\n2. **数据路由与处理**：\n   * 接收POST请求后，Switch节点根据传入数据的Content-Type或错误类型进行条件分支路由\n   * Extract From File与Edit Fields(Set)节点协同处理XML输入，其操作逻辑会根据数据类型动态调整\n\n3. **格式转换引擎**：\n   * 通过专用\"XML\"节点将提取的XML数据转换为标准JSON格式\n\n4. **响应处理**：\n   * 转换成功时返回状态码\"OK\"及JSON格式数据\n   * 转换失败时返回\"error\"状态及错误详情\n   * 异常处理：当流程出现错误时，系统将自动向预设的Slack错误报告频道发送通知\n\n## 配置步骤\n\n1. **Webhook配置**：\n   * 在Webhook节点中配置<WEBHOOK_URL>。开发测试阶段可使用测试用webhook URL，正式环境请切换至生产环境URL\n\n2. **Slack凭证设置**：\n   * 配置Slack通知所需的身份验证凭据",
  "title_zh": "通过Webhook调用将XML文件转换为JSON",
  "publish_date_zh": "上次更新于一年前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"257476b1ef58bf3cb6a46e65fac7ee34a53a5e1a8492d5c6e4da5f87c9b82833\",\n    \"templateId\": \"2222\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"a131803a-ab1d-4a89-b51d-8a875fa2caaf\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        440,\n        267.87369152409246\n      ],\n      \"parameters\": {\n        \"width\": 344,\n        \"height\": 303,\n        \"content\": \"## 测试\\n\\n可通过CURL或类似工具进行测试。\\n\\n使用表单数据提交文件时：\\ncurl -X POST -F file=@文件路径.xml <WEBHOOK_URL>\\n\\n也可通过测试工作流进行验证\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f9ae7afb-48a6-45bf-9c55-0e5fd63afede\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1720,\n        747.8736915240925\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 496,\n        \"height\": 256,\n        \"content\": \"## 响应\\n在可能的情况下，我们将返回一个JSON对象。\\n```\\n{\\n  \\\"status\\\": \\\"ok\\\",\\n  \\\"data\\\": { // JSON数据 }\\n}\\n```\\n如果出现错误\\n```\\n{\\n  \\\"status\\\": \\\"error\\\",\\n  \\\"data\\\": \\\"需要显示的错误信息\\\"\\n}\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f37712fb-88cc-4d5a-9c37-6b9d962052e2\",\n      \"name\": \"Extract From File\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1080,\n        307.87369152409246\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"xml\",\n        \"destinationKey\": \"xml\",\n        \"binaryPropertyName\": \"data0\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e70c134d-a546-447d-a0cb-96c5573232e1\",\n      \"name\": \"Error Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1480,\n        1067.8736915240925\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 500\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"status\\\": \\\"error\\\",\\n  \\\"data\\\": \\\"There was a problem converting your XML. Please refresh the page and try again.\\\"\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eacf0315-75fb-4461-b5d3-d8e7c5572492\",\n      \"name\": \"POST\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        460,\n        587.8736915240925\n      ],\n      \"webhookId\": \"add125c9-1591-4e1c-b68c-8032b99b6010\",\n      \"parameters\": {\n        \"path\": \"tool/xml-to-json\",\n        \"options\": {\n          \"binaryPropertyName\": \"data\"\n        },\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"37cb0178-2010-4cfb-8f12-84e8a45a3553\",\n      \"name\": \"XML\",\n      \"type\": \"n8n-nodes-base.xml\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1380,\n        407.87369152409246\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"dataPropertyName\": \"xml\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4aa36858-f9ee-4653-81d5-7276347abcc2\",\n      \"name\": \"Success Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1500,\n        667.8736915240925\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={\\n  \\\"status\\\": \\\"OK\\\",\\n  \\\"data\\\": {{ JSON.stringify($json) }}\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0425203d-8185-4b27-b7b5-3b4f0e775981\",\n      \"name\": \"Already JSON\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1080,\n        667.8736915240925\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={{ $json.body }}\\n\"\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"9ac12f08-a09b-45e9-8ebd-55ff6d8a63bd\",\n      \"name\": \"Change Field\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1080,\n        487.87369152409246\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b2e3bec3-221e-4f1d-b439-f75174f68ed1\",\n              \"name\": \"xml\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"d722f969-f3d3-4f4a-9fbd-4e2d30556408\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        380,\n        240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1917.663445686706,\n        \"height\": 1027.3921976438187,\n        \"content\": \"\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7618bd02-6d56-44a1-aaa3-de805e1ef18d\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        660,\n        587.8736915240925\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"File\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"object\",\n                      \"operation\": \"notEmpty\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $binary }}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"Data\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"8930ce1a-a4cc-4094-b08f-a23a13dec40c\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.headers['content-type'] }}\",\n                    \"rightValue\": \"text/plain\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"appXML\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"e3108952-daa2-425c-8c70-7d2ce0949e0c\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.headers['content-type'] }}\",\n                    \"rightValue\": \"=application/xml\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"b8bde0ed-7d85-4582-89c4-08a0829c4df8\",\n      \"name\": \"Send to Error Channel\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        1760,\n        1067.8736915240925\n      ],\n      \"parameters\": {\n        \"text\": \":interrobang: Error in XML to JSON tool\",\n        \"select\": \"channel\",\n        \"blocksUi\": \"={\\n\\t\\\"blocks\\\": [\\n{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\":interrobang: Error in XML to JSON tool\\\"\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"*Time:*\\\\n{{ $now.format('dd/MM/yyyy HH:mm:ss') }}\\\\n*Execution ID:*\\\\n{{ $execution.id }}\\\\n\\\"\\n\\t\\t\\t},\\n\\t\\t\\t\\\"accessory\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"button\\\",\\n\\t\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"Go to Error\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"value\\\": \\\"error\\\",\\n\\t\\t\\t\\t\\\"url\\\": \\\"https://internal.users.n8n.cloud/workflow/{{ $workflow.id }}/executions/{{ $execution.id }}\\\",\\n\\t\\t\\t\\t\\\"action_id\\\": \\\"button-action\\\",\\n\\t\\t\\t\\t\\\"style\\\": \\\"primary\\\"\\n\\t\\t\\t}\\n\\t\\t}\\n\\t]\\n}\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"#alerts-xml-to-json\"\n        },\n        \"messageType\": \"block\",\n        \"otherOptions\": {}\n      },\n      \"credentials\": {\n        \"slackApi\": {\n          \"id\": \"6\",\n          \"name\": \"Idea Bot\"\n        }\n      },\n      \"typeVersion\": 2.1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"XML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"POST\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract From File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Change Field\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Already JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Already JSON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Change Field\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"XML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error Response\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send to Error Channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Send to Error Channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Success Response\": {\n      \"main\": [\n        null,\n        [\n          {\n            \"node\": \"Send to Error Channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract From File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"XML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}