{
  "title": "Convert Parquet, Feather, ORC & Avro Files with ParquetReader",
  "url": "https://n8n.io/workflows/3365-convert-parquet-feather-orc-and-avro-files-with-parquetreader/",
  "category": "Other",
  "category_url": "https://n8n.io/workflows/categories/other/?sort=createdAt:desc",
  "author": "ParquetReader",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"VU0kmvnWzctSFm2M\",\"meta\":{\"instanceId\":\"534a4ec070e550167af0cc407c76e029ac0ae69bef901c2f9ef440d79bfa5792\"},\"name\":\"Convert Parquet, Avro, ORC & Feather via ParquetReader to JSON\",\"tags\":[{\"id\":\"1PTaY70kFjD8F12p\",\"name\":\"Convert\",\"createdAt\":\"2025-03-30T09:38:16.466Z\",\"updatedAt\":\"2025-03-30T09:38:16.466Z\"},{\"id\":\"98v0QSKrvfH5dl34\",\"name\":\"Avro\",\"createdAt\":\"2025-03-30T09:38:06.656Z\",\"updatedAt\":\"2025-03-30T09:38:06.656Z\"},{\"id\":\"Q0sqo52DKATPDab2\",\"name\":\"ORC\",\"createdAt\":\"2025-03-30T09:38:09.923Z\",\"updatedAt\":\"2025-03-30T09:38:09.923Z\"},{\"id\":\"b1s8WFj3TfMpoOQu\",\"name\":\"Feather\",\"createdAt\":\"2025-03-30T09:38:12.227Z\",\"updatedAt\":\"2025-03-30T09:38:12.227Z\"},{\"id\":\"fFnESRcynarFqlLf\",\"name\":\"Parquet\",\"createdAt\":\"2025-03-30T09:38:04.286Z\",\"updatedAt\":\"2025-03-30T09:38:04.286Z\"}],\"nodes\":[{\"id\":\"651a10dc-1c91-4957-bcdd-3e55d7328f04\",\"name\":\"Send to Parquet API\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1100,440],\"parameters\":{\"url\":\"https://api.parquetreader.com/parquet?source=n8n\",\"options\":{\"bodyContentType\":\"multipart-form-data\"},\"requestMethod\":\"POST\",\"jsonParameters\":true,\"sendBinaryData\":true,\"binaryPropertyName\":\"=file0\"},\"typeVersion\":1},{\"id\":\"42a7e623-ca11-4d38-94bb-cfb48d021a5c\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"notes\":\"Example trigger flow:\\n\\ncurl -X POST http://localhost:5678/webhook-test/convert \\\\\\n  -F \\\"file=@converted.parquet\\\"\",\"position\":[900,440],\"webhookId\":\"0b1223c9-c117-45f9-9931-909f2db28955\",\"parameters\":{\"path\":\"convert\",\"options\":{\"binaryPropertyName\":\"file\"},\"httpMethod\":\"POST\",\"responseData\":\"allEntries\",\"responseMode\":\"lastNode\"},\"notesInFlow\":false,\"typeVersion\":2},{\"id\":\"9b87f027-7ef2-40a7-88d7-a0ae9ef73375\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[0,0],\"parameters\":{\"width\":840,\"height\":580,\"content\":\"### ✅ **How to Use This Flow**\\n\\n#### 📥 Trigger via File Upload\\n\\nYou can trigger this flow by sending a `POST` request with a file using **curl**, **Postman**, or **from another n8n flow**.\\n\\n#### 🔧 Example (via `curl`):\\n```bash\\ncurl -X POST http://localhost:5678/webhook-test/convert \\\\\\n-F \\\"file=@converted.parquet\\\"\\n```\\n> Replace `converted.parquet` with your local file path. You can also send Avro, ORC or Feather files.\\n\\n#### 🔁 Reuse from Other Flows\\nYou can **reuse this flow** by calling the webhook from another n8n workflow using an **HTTP Request** node.  \\nMake sure to send the file as **form-data** with the field name `file`.\\n\\n#### 🔍 What This Flow Does:\\n- Receives the uploaded file via webhook (`file`)\\n- Sends it to `https://api.parquetreader.com/parquet` as `multipart/form-data` (field name: `file`)\\n- Receives parsed data, schema, and metadata\\n\"},\"typeVersion\":1},{\"id\":\"06d3e569-8724-48f2-951f-a1af5e0f9362\",\"name\":\"Parse API Response\",\"type\":\"n8n-nodes-base.code\",\"position\":[1280,440],\"parameters\":{\"jsCode\":\"const item = items[0];\\n\\n// Convert `data` (stringified JSON array) → actual array\\nif (typeof item.json.data === 'string') {\\n  item.json.data = JSON.parse(item.json.data);\\n}\\n\\n// Convert `meta_data` (stringified JSON object) → actual object\\nif (typeof item.json.meta_data === 'string') {\\n  item.json.meta_data = JSON.parse(item.json.meta_data);\\n}\\n\\nreturn [item];\\n\"},\"typeVersion\":2}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"c10e1897-094e-42c6-bde9-1724972ada3e\",\"connections\":{\"Webhook\":{\"main\":[[{\"node\":\"Send to Parquet API\",\"type\":\"main\",\"index\":0}]]},\"Send to Parquet API\":{\"main\":[[{\"node\":\"Parse API Response\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# 📄 Convert Parquet, Feather, ORC & Avro Files with ParquetReader\n\nThis workflow allows you to upload and inspect Parquet, Feather, ORC, or Avro files via the [ParquetReader API](https://parquetreader.com). It instantly returns a structured **JSON preview** of your data — including rows, schema, and metadata — without needing to write any custom code.\n\n* * *\n\n## ✅ Perfect For\n\n  * Validating schema and structure before syncing or transformation\n  * Previewing raw columnar files on the fly\n  * Automating QA, ETL, or CI/CD workflows\n  * Converting Parquet, Avro, Feather, or ORC to JSON\n\n\n\n* * *\n\n## ⚙️ Use Cases\n\n  * Catch schema mismatches before pipeline runs\n  * Automate column audits in incoming data files\n  * Enrich metadata catalogs with real-time schema detection\n  * Integrate file validation into automated workflows\n\n\n\n* * *\n\n## 🚀 How to Use This Workflow\n\n#### 📥 Trigger via File Upload\n\nYou can trigger this flow by sending a `POST` request with a file using **curl** , **Postman** , or **from another n8n flow**.\n\n#### 🔧 Example (via `curl`):\n    \n    \n    curl -X POST http://localhost:5678/webhook-test/convert \\\n    -F \"file=@converted.parquet\"\n    \n\n> Replace `converted.parquet` with your local file path. You can also send Avro, ORC or Feather files.\n\n#### 🔁 Reuse from Other Flows\n\nYou can **reuse this flow** by calling the webhook from another n8n workflow using an **HTTP Request** node.  \nMake sure to send the file as **form-data** with the field name `file`.\n\n#### 🔍 What This Flow Does:\n\n  * Receives the uploaded file via webhook (`file`)\n  * Sends it to `https://api.parquetreader.com/parquet` as `multipart/form-data` (field name: `file`)\n  * Receives parsed data (rows), schema, and metadata in JSON format\n\n\n\n* * *\n\n## 🧪 Example JSON Response from this flow\n    \n    \n    {\n      \"data\": [\n        {\n          \"full_name\": \"Pamela Cabrera\",\n          \"email\": \"bobbyharrison@example.net\",\n          \"age\": \"24\",\n          \"active\": \"True\",\n          \"latitude\": \"-36.1577385\",\n          \"longitude\": \"63.014954\",\n          \"company\": \"Carter, Shaw and Parks\",\n          \"country\": \"Honduras\"\n        }\n      ],\n      \"meta_data\": {\n        \"created_by\": \"pyarrow\",\n        \"num_columns\": 21,\n        \"num_rows\": 10,\n        \"serialized_size\": 7598,\n        \"format_version\": \"0.12\"\n      },\n      \"schema\": [\n        { \"column_name\": \"full_name\", \"column_type\": \"string\" },\n        { \"column_name\": \"email\", \"column_type\": \"string\" },\n        { \"column_name\": \"age\", \"column_type\": \"int64\" },\n        { \"column_name\": \"active\", \"column_type\": \"bool\" },\n        { \"column_name\": \"latitude\", \"column_type\": \"double\" },\n        { \"column_name\": \"longitude\", \"column_type\": \"double\" },\n        { \"column_name\": \"company\", \"column_type\": \"string\" },\n        { \"column_name\": \"country\", \"column_type\": \"string\" }\n      ]\n    }\n    \n    \n\n* * *\n\n## 🔐 API Info\n\n  * Authentication: None required\n  * Supported formats: .parquet, .avro, .orc, .feather\n  * Free usage: No signup needed; API is currently open to the public\n  * Limits: Usage and file size limits may apply in the future (TBD)\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h1>📄 Convert Parquet, Feather, ORC &amp; Avro Files with ParquetReader</h1>\n<p>This workflow allows you to upload and inspect Parquet, Feather, ORC, or Avro files via the <a href=\"https://parquetreader.com\" rel=\"ugc nofollow\" target=\"_blank\">ParquetReader API</a>. It instantly returns a structured <strong>JSON preview</strong> of your data — including rows, schema, and metadata — without needing to write any custom code.</p>\n<hr>\n<h2>✅ Perfect For</h2>\n<ul>\n<li>Validating schema and structure before syncing or transformation</li>\n<li>Previewing raw columnar files on the fly</li>\n<li>Automating QA, ETL, or CI/CD workflows</li>\n<li>Converting Parquet, Avro, Feather, or ORC to JSON</li>\n</ul>\n<hr>\n<h2>⚙️ Use Cases</h2>\n<ul>\n<li>Catch schema mismatches before pipeline runs</li>\n<li>Automate column audits in incoming data files</li>\n<li>Enrich metadata catalogs with real-time schema detection</li>\n<li>Integrate file validation into automated workflows</li>\n</ul>\n<hr>\n<h2>🚀 How to Use This Workflow</h2>\n<h4>📥 Trigger via File Upload</h4>\n<p>You can trigger this flow by sending a <code>POST</code> request with a file using <strong>curl</strong>, <strong>Postman</strong>, or <strong>from another n8n flow</strong>.</p>\n<h4>🔧 Example (via <code>curl</code>):</h4>\n<pre><code>curl -X POST http://localhost:5678/webhook-test/convert \\\n-F \"file=@converted.parquet\"\n</code></pre>\n<blockquote>\n<p>Replace <code>converted.parquet</code> with your local file path. You can also send Avro, ORC or Feather files.</p>\n</blockquote>\n<h4>🔁 Reuse from Other Flows</h4>\n<p>You can <strong>reuse this flow</strong> by calling the webhook from another n8n workflow using an <strong>HTTP Request</strong> node.<br>\nMake sure to send the file as <strong>form-data</strong> with the field name <code>file</code>.</p>\n<h4>🔍 What This Flow Does:</h4>\n<ul>\n<li>Receives the uploaded file via webhook (<code>file</code>)</li>\n<li>Sends it to <code>https://api.parquetreader.com/parquet</code> as <code>multipart/form-data</code> (field name: <code>file</code>)</li>\n<li>Receives parsed data (rows), schema, and metadata in JSON format</li>\n</ul>\n<hr>\n<h2>🧪 Example JSON Response from this flow</h2>\n<pre><code>{\n  \"data\": [\n    {\n      \"full_name\": \"Pamela Cabrera\",\n      \"email\": \"bobbyharrison@example.net\",\n      \"age\": \"24\",\n      \"active\": \"True\",\n      \"latitude\": \"-36.1577385\",\n      \"longitude\": \"63.014954\",\n      \"company\": \"Carter, Shaw and Parks\",\n      \"country\": \"Honduras\"\n    }\n  ],\n  \"meta_data\": {\n    \"created_by\": \"pyarrow\",\n    \"num_columns\": 21,\n    \"num_rows\": 10,\n    \"serialized_size\": 7598,\n    \"format_version\": \"0.12\"\n  },\n  \"schema\": [\n    { \"column_name\": \"full_name\", \"column_type\": \"string\" },\n    { \"column_name\": \"email\", \"column_type\": \"string\" },\n    { \"column_name\": \"age\", \"column_type\": \"int64\" },\n    { \"column_name\": \"active\", \"column_type\": \"bool\" },\n    { \"column_name\": \"latitude\", \"column_type\": \"double\" },\n    { \"column_name\": \"longitude\", \"column_type\": \"double\" },\n    { \"column_name\": \"company\", \"column_type\": \"string\" },\n    { \"column_name\": \"country\", \"column_type\": \"string\" }\n  ]\n}\n\n</code></pre>\n<hr>\n<h2>🔐 API Info</h2>\n<ul>\n<li>Authentication: None required</li>\n<li>Supported formats: .parquet, .avro, .orc, .feather</li>\n<li>Free usage: No signup needed; API is currently open to the public</li>\n<li>Limits: Usage and file size limits may apply in the future (TBD)</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "# 📄 使用ParquetReader转换Parquet、Feather、ORC和Avro文件\n\n本工作流允许您通过[ParquetReader API](https://parquetreader.com)上传并检查Parquet、Feather、ORC或Avro文件。无需编写任何自定义代码，即可立即获取数据的结构化**JSON预览**，包括行数据、模式和元数据。\n\n* * *\n\n## ✅ 适用场景\n\n  * 在同步或转换前验证模式和结构\n  * 即时预览原始列式文件\n  * 自动化QA、ETL或CI/CD工作流\n  * 将Parquet、Avro、Feather或ORC转换为JSON\n\n* * *\n\n## ⚙️ 使用案例\n\n  * 在管道运行前捕获模式不匹配\n  * 自动化审核传入数据文件的列\n  * 通过实时模式检测丰富元数据目录\n  * 将文件验证集成到自动化工作流中\n\n* * *\n\n## 🚀 如何使用此工作流\n\n#### 📥 通过文件上传触发\n\n您可以通过**curl**、**Postman**或**从另一个n8n工作流**发送带有文件的`POST`请求来触发此流程。\n\n#### 🔧 示例（通过`curl`）：\n    \n    \n    curl -X POST http://localhost:5678/webhook-test/convert \\\n    -F \"file=@converted.parquet\"\n    \n\n> 将`converted.parquet`替换为您本地文件的路径。您也可以发送Avro、ORC或Feather文件。\n\n#### 🔁 从其他工作流复用\n\n您可以通过在另一个n8n工作流中使用**HTTP请求**节点调用此webhook来**复用此流程**。  \n确保以**form-data**形式发送文件，字段名为`file`。\n\n#### 🔍 此流程的功能：\n\n  * 通过webhook接收上传的文件（`file`）\n  * 以`multipart/form-data`形式（字段名：`file`）将其发送至`https://api.parquetreader.com/parquet`\n  * 接收解析后的数据（行）、模式和元数据（JSON格式）\n\n* * *\n\n## 🧪 此工作流的JSON响应示例\n    \n    \n    {\n      \"data\": [\n        {\n          \"full_name\": \"Pamela Cabrera\",\n          \"email\": \"bobbyharrison@example.net\",\n          \"age\": \"24\",\n          \"active\": \"True\",\n          \"latitude\": \"-36.1577385\",\n          \"longitude\": \"63.014954\",\n          \"company\": \"Carter, Shaw and Parks\",\n          \"country\": \"Honduras\"\n        }\n      ],\n      \"meta_data\": {\n        \"created_by\": \"pyarrow\",\n        \"num_columns\": 21,\n        \"num_rows\": 10,\n        \"serialized_size\": 7598,\n        \"format_version\": \"0.12\"\n      },\n      \"schema\": [\n        { \"column_name\": \"full_name\", \"column_type\": \"string\" },\n        { \"column_name\": \"email\", \"column_type\": \"string\" },\n        { \"column_name\": \"age\", \"column_type\": \"int64\" },\n        { \"column_name\": \"active\", \"column_type\": \"bool\" },\n        { \"column_name\": \"latitude\", \"column_type\": \"double\" },\n        { \"column_name\": \"longitude\", \"column_type\": \"double\" },\n        { \"column_name\": \"company\", \"column_type\": \"string\" },\n        { \"column_name\": \"country\", \"column_type\": \"string\" }\n      ]\n    }\n    \n    \n\n* * *\n\n## 🔐 API信息\n\n  * 认证：无需认证\n  * 支持格式：.parquet、.avro、.orc、.feather\n  * 免费使用：无需注册；目前对公众开放\n  * 限制：未来可能会设置使用和文件大小限制（待定）",
  "title_zh": "使用ParquetReader转换Parquet、Feather、ORC及Avro文件",
  "publish_date_zh": "最后一次更新于一个月前",
  "workflow_json_zh": "{\n  \"id\": \"VU0kmvnWzctSFm2M\",\n  \"meta\": {\n    \"instanceId\": \"534a4ec070e550167af0cc407c76e029ac0ae69bef901c2f9ef440d79bfa5792\"\n  },\n  \"name\": \"Convert Parquet, Avro, ORC & Feather via ParquetReader to JSON\",\n  \"tags\": [\n    {\n      \"id\": \"1PTaY70kFjD8F12p\",\n      \"name\": \"Convert\",\n      \"createdAt\": \"2025-03-30T09:38:16.466Z\",\n      \"updatedAt\": \"2025-03-30T09:38:16.466Z\"\n    },\n    {\n      \"id\": \"98v0QSKrvfH5dl34\",\n      \"name\": \"Avro\",\n      \"createdAt\": \"2025-03-30T09:38:06.656Z\",\n      \"updatedAt\": \"2025-03-30T09:38:06.656Z\"\n    },\n    {\n      \"id\": \"Q0sqo52DKATPDab2\",\n      \"name\": \"ORC\",\n      \"createdAt\": \"2025-03-30T09:38:09.923Z\",\n      \"updatedAt\": \"2025-03-30T09:38:09.923Z\"\n    },\n    {\n      \"id\": \"b1s8WFj3TfMpoOQu\",\n      \"name\": \"Feather\",\n      \"createdAt\": \"2025-03-30T09:38:12.227Z\",\n      \"updatedAt\": \"2025-03-30T09:38:12.227Z\"\n    },\n    {\n      \"id\": \"fFnESRcynarFqlLf\",\n      \"name\": \"Parquet\",\n      \"createdAt\": \"2025-03-30T09:38:04.286Z\",\n      \"updatedAt\": \"2025-03-30T09:38:04.286Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"651a10dc-1c91-4957-bcdd-3e55d7328f04\",\n      \"name\": \"Send to Parquet API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1100,\n        440\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.parquetreader.com/parquet?source=n8n\",\n        \"options\": {\n          \"bodyContentType\": \"multipart-form-data\"\n        },\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"sendBinaryData\": true,\n        \"binaryPropertyName\": \"=file0\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"42a7e623-ca11-4d38-94bb-cfb48d021a5c\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"notes\": \"Example trigger flow:\\n\\ncurl -X POST http://localhost:5678/webhook-test/convert \\\\\\n  -F \\\"file=@converted.parquet\\\"\",\n      \"position\": [\n        900,\n        440\n      ],\n      \"webhookId\": \"0b1223c9-c117-45f9-9931-909f2db28955\",\n      \"parameters\": {\n        \"path\": \"convert\",\n        \"options\": {\n          \"binaryPropertyName\": \"file\"\n        },\n        \"httpMethod\": \"POST\",\n        \"responseData\": \"allEntries\",\n        \"responseMode\": \"lastNode\"\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9b87f027-7ef2-40a7-88d7-a0ae9ef73375\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"width\": 840,\n        \"height\": 580,\n        \"content\": \"### ✅ **如何使用此流程**\\n\\n#### 📥 通过文件上传触发\\n您可以通过发送带有文件的`POST`请求（使用**curl**、**Postman**或**从另一个n8n流程**）来触发此流程。\\n\\n#### 🔧 示例（通过`curl`）：\\n```bash\\ncurl -X POST http://localhost:5678/webhook-test/convert \\\\\\n-F \\\"file=@converted.parquet\\\"\\n```\\n> 将`converted.parquet`替换为您本地的文件路径。您也可以发送Avro、ORC或Feather格式的文件。\\n\\n#### 🔁 从其他流程复用\\n您可以通过在另一个n8n工作流中使用**HTTP请求**节点调用此Webhook来**复用此流程**。  \\n请确保以**form-data**形式发送文件，并将字段名称设为`file`。\\n\\n#### 🔍 此流程的功能：\\n- 通过Webhook接收上传的文件（`file`）\\n- 将其作为`multipart/form-data`发送至`https://api.parquetreader.com/parquet`（字段名称：`file`）\\n- 接收解析后的数据、架构及元数据\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"06d3e569-8724-48f2-951f-a1af5e0f9362\",\n      \"name\": \"Parse API Response\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1280,\n        440\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const item = items[0];\\n\\n// Convert `data` (stringified JSON array) → actual array\\nif (typeof item.json.data === 'string') {\\n  item.json.data = JSON.parse(item.json.data);\\n}\\n\\n// Convert `meta_data` (stringified JSON object) → actual object\\nif (typeof item.json.meta_data === 'string') {\\n  item.json.meta_data = JSON.parse(item.json.meta_data);\\n}\\n\\nreturn [item];\\n\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"c10e1897-094e-42c6-bde9-1724972ada3e\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send to Parquet API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send to Parquet API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse API Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}