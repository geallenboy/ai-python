{
  "title": "Bitrix24 AI-Powered RAG Chatbot for Open Line Channels",
  "url": "https://n8n.io/workflows/3094-bitrix24-ai-powered-rag-chatbot-for-open-line-channels/",
  "category": "Other",
  "category_url": "https://n8n.io/workflows/categories/other/?sort=createdAt:desc",
  "author": "Ferenc Erb",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-23",
  "content": "",
  "workflow_json": "{\"id\":\"TBiW9x7O4ijo4yOX\",\"meta\":{\"instanceId\":\"255b605d49a6677a536746e05401de51bb4c62e65036d9acdb9908f6567f0361\"},\"name\":\"Bitrix24 Open Chanel RAG Chatbot Application Workflow example with Webhook Integration\",\"tags\":[{\"id\":\"2ziILYLz4IbTkFf5\",\"name\":\"Tech demo\",\"createdAt\":\"2025-02-17T08:43:26.445Z\",\"updatedAt\":\"2025-02-17T08:43:26.445Z\"},{\"id\":\"BedOB2iRpKR26bcZ\",\"name\":\"Chatbot\",\"createdAt\":\"2025-02-17T08:43:26.436Z\",\"updatedAt\":\"2025-02-17T08:43:26.436Z\"},{\"id\":\"DvSHJwHwuObn0cxx\",\"name\":\"Open Channels\",\"createdAt\":\"2025-03-04T07:27:28.499Z\",\"updatedAt\":\"2025-03-04T07:27:28.499Z\"},{\"id\":\"YJcjKoBRFN1HXH5e\",\"name\":\"Bitrix24\",\"createdAt\":\"2025-02-17T08:43:26.424Z\",\"updatedAt\":\"2025-02-17T08:43:26.424Z\"}],\"nodes\":[{\"id\":\"dbd7b2c0-2b27-4c23-beb7-eec128da0787\",\"name\":\"Bitrix24 Handler\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-1280,620],\"webhookId\":\"bde38660-2604-4e00-afc0-5ebceebb7f0a\",\"parameters\":{\"path\":\"bitrix24/openchannel-rag-bothandler.php\",\"options\":{},\"httpMethod\":\"POST\",\"responseMode\":\"responseNode\"},\"typeVersion\":1},{\"id\":\"0ead4d82-4d9b-4392-af4c-2c315068b983\",\"name\":\"Credentials\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1040,620],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"030f8f90-2669-4c20-9eab-c572c4b7c70c\",\"name\":\"CLIENT_ID\",\"type\":\"string\",\"value\":\"local.67c8f9e81cb353.30162021\"},{\"id\":\"de9bbb7a-b782-4540-b259-527625db8490\",\"name\":\"CLIENT_SECRET\",\"type\":\"string\",\"value\":\"Db5943DCy4JhYq4oU0yNb21Hx8WimQeThczOYk03uJrVroc8R4\"},{\"id\":\"86b7aff7-1e25-4b12-a366-23cf34e5a405\",\"name\":\"application_token\",\"type\":\"string\",\"value\":\"={{ $json.body['auth[application_token]'] }}\"},{\"id\":\"69bbcb1f-ba6e-42eb-be8a-ee0707ce997d\",\"name\":\"domain\",\"type\":\"string\",\"value\":\"={{ $json.body['auth[domain]'] }}\\n\"},{\"id\":\"dc1b0515-f06a-4731-b0dc-912a8d04e56b\",\"name\":\"access_token\",\"type\":\"string\",\"value\":\"={{ $json.body['auth[access_token]'] }}\"},{\"id\":\"94fdeed8-9437-417e-9c2a-fa853620a340\",\"name\":\"storageName\",\"type\":\"string\",\"value\":\"Shared drive\"},{\"id\":\"8564e421-dfce-437c-a7c3-ac6a180594b8\",\"name\":\"folderName\",\"type\":\"string\",\"value\":\"Open line chat bot documents\"}]},\"includeOtherFields\":true},\"typeVersion\":3.4},{\"id\":\"67b225b8-c2c2-4570-81cb-4c533ae75465\",\"name\":\"Validate Token\",\"type\":\"n8n-nodes-base.if\",\"position\":[-820,620],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"da73d0ba-6eeb-405e-89fe-9d041fd2e0cd\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.CLIENT_ID }}\",\"rightValue\":\"={{ $json.application_token }}\"},{\"id\":\"4ba90f7b-0299-4097-9ae7-6e4dee428a74\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"1\",\"rightValue\":\"1\"}]}},\"typeVersion\":2.2},{\"id\":\"4fee1441-4e30-4070-b596-15e121ca7320\",\"name\":\"Route Event\",\"type\":\"n8n-nodes-base.switch\",\"position\":[-620,520],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"ONIMBOTMESSAGEADD\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.body.event }}\",\"rightValue\":\"ONIMBOTMESSAGEADD\"}]},\"renameOutput\":true},{\"outputKey\":\"ONIMBOTJOINCHAT\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"e9125f57-129e-4026-86ff-746d40b92b04\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.body.event }}\",\"rightValue\":\"ONIMBOTJOINCHAT\"}]},\"renameOutput\":true},{\"outputKey\":\"ONAPPINSTALL\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2db7bed5-fd88-4900-b8d2-e27b49c2fcca\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.body.event }}\",\"rightValue\":\"ONAPPINSTALL\"}]},\"renameOutput\":true},{\"outputKey\":\"ONIMBOTDELETE\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"b708d339-fd46-470d-b0d5-ff2eb405f5ce\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.body.event }}\",\"rightValue\":\"ONIMBOTDELETE\"}]},\"renameOutput\":true}]},\"options\":{}},\"typeVersion\":3.2},{\"id\":\"c21f6d64-0543-4958-9f64-501dce37893f\",\"name\":\"Process Message\",\"type\":\"n8n-nodes-base.function\",\"position\":[-420,400],\"parameters\":{\"functionCode\":\"// Process Message Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get message data from the correct path\\nconst message = item.json.body['data[PARAMS][MESSAGE]'];\\nconst dialogId = item.json.body['data[PARAMS][DIALOG_ID]'];\\n\\nconst sessionId = item.json.body['data[PARAMS][CHAT_ENTITY_DATA_1]'].split(\\\"|\\\")[5];\\n\\nconst botId = Object.keys(item.json.body)\\n  .filter(key => key.startsWith(\\\"data[BOT]\\\") && key.endsWith(\\\"[BOT_ID]\\\"))\\n  .map(key => $json.body[key])\\n  .shift() || null;\\nconst userId = item.json.body['data[USER][ID]'];\\n\\n// Get auth data\\nconst auth = {\\n  access_token: item.json.access_token,\\n  domain: item.json.domain\\n};\\n\\nif (message.toLowerCase() === \\\"what's hot\\\") {\\n  return {\\n    json: {\\n      DIALOG_ID: dialogId,\\n      SESSION_ID: sessionId,\\n      BOT_ID: botId,\\n      USER_ID: userId,\\n      MESSAGE_ORI: message,\\n      MESSAGE: \\\"Hi! I am an example-bot.\\\\nI repeat what you say\\\",\\n      AUTH: auth.access_token,\\n      DOMAIN: auth.domain\\n    }\\n  };\\n} else {\\n  return {\\n    json: {\\n      DIALOG_ID: dialogId,\\n      SESSION_ID: sessionId,\\n      BOT_ID: botId,\\n      USER_ID: userId,\\n      MESSAGE_ORI: message,\\n      MESSAGE: `You said:\\\\n${message}`,\\n      AUTH: auth.access_token,\\n      DOMAIN: auth.domain\\n    }\\n  };\\n}\"},\"typeVersion\":1},{\"id\":\"06a59835-2999-44b6-81bd-0601e5570113\",\"name\":\"Process Join\",\"type\":\"n8n-nodes-base.function\",\"position\":[-420,780],\"parameters\":{\"functionCode\":\"// Process Join Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get dialog ID from the correct path\\nconst dialogId = item.json.body['data[PARAMS][DIALOG_ID]'];\\n\\n// Get auth data\\nconst auth = {\\n  access_token: item.json.access_token,\\n  domain: item.json.domain\\n};\\n\\nconst message = \\n  'ITR Menu:\\\\n' +\\n  '[send=1]1. find out more about me[/send]\\\\n' +\\n  '[send=0]0. wait for operator response[/send]';\\n\\nreturn {\\n  json: {\\n    DIALOG_ID: dialogId,\\n    MESSAGE: message,\\n    AUTH: auth.access_token,\\n    DOMAIN: auth.domain\\n  }\\n};\"},\"typeVersion\":1},{\"id\":\"40accf33-c217-497c-8172-6106eb15800f\",\"name\":\"Process Install\",\"type\":\"n8n-nodes-base.function\",\"position\":[-420,940],\"parameters\":{\"functionCode\":\"// Process Install Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get the webhook URL from input\\nconst handlerBackUrl = item.json.webhookUrl;\\n\\n// Get auth data directly from item.json\\nconst auth = {\\n  access_token: item.json.access_token,\\n  application_token: item.json.application_token,\\n  domain: item.json.domain\\n};\\n\\nreturn {\\n  json: {\\n    handler_back_url: handlerBackUrl,\\n    CODE: 'OpenChanelExampleBot',\\n    TYPE: 'O',\\n    OPENLINE: 'Y',\\n    EVENT_MESSAGE_ADD: handlerBackUrl,\\n    EVENT_WELCOME_MESSAGE: handlerBackUrl,\\n    EVENT_BOT_DELETE: handlerBackUrl,\\n    PROPERTIES: {\\n      NAME: 'Open chanel Bot',\\n      LAST_NAME: 'Example',\\n      COLOR: 'AQUA',\\n      EMAIL: 'no@example.com',\\n      PERSONAL_BIRTHDAY: '2020-07-18',\\n      WORK_POSITION: 'Report on affairs',\\n      PERSONAL_GENDER: 'M'\\n    },\\n    // Use the auth data from item.json\\n    AUTH: auth.access_token,\\n    CLIENT_ID: auth.application_token,\\n    DOMAIN: auth.domain\\n  }\\n};\"},\"typeVersion\":1},{\"id\":\"22a7c363-ab5a-4adc-9de4-268f3f3739f3\",\"name\":\"Register Bot\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-220,940],\"parameters\":{\"url\":\"=https://{{ $json.DOMAIN }}/rest/imbot.register?auth={{$json.AUTH}}\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"CODE\",\"value\":\"OpenChanelExampleBot\"},{\"name\":\"TYPE\",\"value\":\"O\"},{\"name\":\"EVENT_MESSAGE_ADD\",\"value\":\"={{$json.handler_back_url}}\"},{\"name\":\"EVENT_WELCOME_MESSAGE\",\"value\":\"={{$json.handler_back_url}}\"},{\"name\":\"EVENT_BOT_DELETE\",\"value\":\"={{$json.handler_back_url}}\"},{\"name\":\"PROPERTIES\",\"value\":\"={{ {\\n  NAME: 'Bot',\\n  LAST_NAME: 'Example',\\n  COLOR: 'AQUA',\\n  EMAIL: 'no@example.com',\\n  PERSONAL_BIRTHDAY: '2020-07-18',\\n  WORK_POSITION: 'Report on affairs',\\n  PERSONAL_GENDER: 'M'\\n} }}\"},{\"name\":\"CLIENT_ID\",\"value\":\"={{ $json.CLIENT_ID }}\"},{\"name\":\"CLIENT_SECRET\",\"value\":\"={{ $json.AUTH }}\"},{\"name\":\"OPENLINE\",\"value\":\"Y\"}]}},\"typeVersion\":4.2},{\"id\":\"e728c7eb-b169-4757-b4f4-b99ec4db0184\",\"name\":\"Send Message\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[740,420],\"parameters\":{\"url\":\"=https://{{ $json.data.DOMAIN }}/rest/imbot.message.add?auth={{ $json.data.AUTH }}\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"DIALOG_ID\",\"value\":\"={{ $json.data.DIALOG_ID }}\"},{\"name\":\"MESSAGE\",\"value\":\"={{ $json.data.MESSAGE }}\"},{\"name\":\"AUTH\",\"value\":\"={{ $json.data.AUTH }}\"}]}},\"typeVersion\":4.2},{\"id\":\"1a1fae0e-d74f-48b9-8ec8-4e926763de28\",\"name\":\"Send Join Message\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-220,780],\"parameters\":{\"url\":\"=https://{{$json.DOMAIN}}/rest/imbot.message.add?auth={{$json.AUTH}}\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"DIALOG_ID\",\"value\":\"={{ $json.DIALOG_ID }}\"},{\"name\":\"MESSAGE\",\"value\":\"={{ $json.MESSAGE }}\"},{\"name\":\"AUTH\",\"value\":\"={{ $json.AUTH }}\"}]}},\"typeVersion\":4.2},{\"id\":\"f377d8eb-2a90-4ca5-8bd8-122c8df2ced3\",\"name\":\"Process Delete\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[-420,1100],\"parameters\":{},\"typeVersion\":1},{\"id\":\"faa4c61e-faf4-4bd7-b096-706d3c5cf366\",\"name\":\"Success Response\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[1200,700],\"parameters\":{\"options\":{\"responseCode\":200},\"respondWith\":\"json\",\"responseBody\":\"={\\n  \\\"result\\\": true\\n}\"},\"typeVersion\":1.1},{\"id\":\"ade154b4-64d9-4ecd-8a83-328002c98569\",\"name\":\"Error Response\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[-820,780],\"parameters\":{\"options\":{\"responseCode\":401},\"respondWith\":\"json\",\"responseBody\":\"={{\\n  \\\"result\\\": false,\\n  \\\"error\\\": \\\"Invalid application token\\\"\\n}}\"},\"typeVersion\":1.1},{\"id\":\"a5866396-3a25-4bbf-81b2-56a8d35fc63b\",\"name\":\"Merge parameters for Subworkflow\",\"type\":\"n8n-nodes-base.merge\",\"position\":[-180,1340],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineAll\"},\"typeVersion\":3},{\"id\":\"feb3e1c0-4556-4d77-9e5e-42eb2c10a5f8\",\"name\":\"Get a list of available storages\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-860,2080],\"parameters\":{\"url\":\"=https://{{ $json.domain }}/rest/disk.storage.getlist.json?auth={{ $json.access_token }}\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n\\\"filter\\\": {\\n\\t\\t\\t\\t\\\"ENTITY_TYPE\\\": \\\"common\\\",\\n\\t\\t\\t\\t\\\"%NAME\\\": \\\"{{ $json.storageName }}\\\"\\n  }\\n}\\n\",\"sendBody\":true,\"specifyBody\":\"json\"},\"typeVersion\":4.2},{\"id\":\"7bb0412e-57ab-4a63-aec2-5db64b83ef7e\",\"name\":\"Get a list of List of Files and Folders\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-640,2080],\"parameters\":{\"url\":\"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.storage.getchildren.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n\\\"id\\\": {{ $json.result[0].ID }},\\n\\\"filter\\\": {\\n\\t\\t\\t\\t\\\"TYPE\\\": \\\"folder\\\",\\n\\t\\t\\t\\t\\\"%NAME\\\": \\\"{{ $('Execute Workflow Trigger').item.json.folderName }}\\\"\\n  }\\n}\\n\",\"sendBody\":true,\"specifyBody\":\"json\"},\"typeVersion\":4.2},{\"id\":\"5528a3be-375a-4077-a346-2eb77cf9160f\",\"name\":\"Get a list of Folders files\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-420,2080],\"parameters\":{\"url\":\"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.folder.getchildren.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"id\",\"value\":\"={{ $json.result[0].ID }}\"}]}},\"typeVersion\":4.2},{\"id\":\"f713eda1-f51e-484d-a98a-f359bc7ce654\",\"name\":\"Download file\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[280,2080],\"parameters\":{\"url\":\"={{ $json.DOWNLOAD_URL }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"3b2c67ea-bb6c-49c8-b55f-ffde7d1d8e83\",\"name\":\"Default Data Loader\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[700,2280],\"parameters\":{\"loader\":\"pdfLoader\",\"options\":{\"splitPages\":true},\"dataType\":\"binary\"},\"typeVersion\":1},{\"id\":\"0b5c2963-3692-469d-a1ce-66fe598dc25f\",\"name\":\"Recursive Character Text Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\"position\":[840,2460],\"parameters\":{\"options\":{},\"chunkOverlap\":100},\"typeVersion\":1},{\"id\":\"52bfdf6b-0fb1-4e85-b31d-ec6c9ef912d8\",\"name\":\"Split Out folder files and folders\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[-180,2080],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"result\"},\"typeVersion\":1},{\"id\":\"fd53fca7-d11d-4254-be56-9a62b6f0fadf\",\"name\":\"Filter for files\",\"type\":\"n8n-nodes-base.filter\",\"position\":[40,2080],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"6e68a8be-c155-41c7-ace4-bf76bfd362fc\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.TYPE }}\",\"rightValue\":\"file\"}]}},\"typeVersion\":2.2},{\"id\":\"748a65d3-dceb-4787-a068-b364371b392b\",\"name\":\"Move files to Vector stored folder\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[520,1860],\"parameters\":{\"url\":\"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.file.moveto.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"id\",\"value\":\"={{ $json.ID }}\"},{\"name\":\"targetFolderId\",\"value\":\"={{ $('Get a list of Folders files').item.json.result[0].ID }}\"}]}},\"executeOnce\":false,\"typeVersion\":4.2},{\"id\":\"47f3aec5-c3cb-4d3e-97bc-8b708ccc0db5\",\"name\":\"Execute Workflow Trigger\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[-1080,2080],\"parameters\":{},\"typeVersion\":1},{\"id\":\"9d3eb788-96cf-4c01-af5f-2beb1f6fa7b8\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1160,1780],\"parameters\":{\"width\":2168.7691983135305,\"height\":818.1434255918864,\"content\":\"Subworkflow for Register Bot\\nHere are files vector stored for Open line chanel bot\\nAfter files are stored they are moved to subfolder\"},\"typeVersion\":1},{\"id\":\"91c26264-a61d-426c-a044-e2b287e54de0\",\"name\":\"Qdrant Vector Store\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\"position\":[580,2080],\"parameters\":{\"mode\":\"insert\",\"options\":{\"collectionConfig\":\"\"},\"qdrantCollection\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"bitrix-docs\",\"cachedResultName\":\"bitrix-docs\"}},\"typeVersion\":1},{\"id\":\"0dd69952-402e-4d9e-a44f-7cf96ab4055e\",\"name\":\"Embeddings Ollama\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOllama\",\"position\":[500,2280],\"parameters\":{\"model\":\"nomic-embed-text:latest\"},\"typeVersion\":1},{\"id\":\"fcfbfe53-da04-48f2-9a62-204a8f1f06a8\",\"name\":\"Vector Store Retriever\",\"type\":\"@n8n/n8n-nodes-langchain.retrieverVectorStore\",\"position\":[140,240],\"parameters\":{\"topK\":10},\"typeVersion\":1},{\"id\":\"22d3be40-b74a-453f-8f52-8974b1527d49\",\"name\":\"Question and Answer Chain\",\"type\":\"@n8n/n8n-nodes-langchain.chainRetrievalQa\",\"position\":[0,0],\"parameters\":{\"text\":\"={{ $json.MESSAGE_ORI }}\",\"options\":{\"systemPromptTemplate\":\"=Use the following pieces of context to answer the user's question.\\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\\n\\n----------------\\n{context}\\n\\nYour response must contain **only** the following key-value pairs:\\n- `\\\"DIALOG_ID\\\"`: **Use exactly** this value from the input: `{{ $json.DIALOG_ID }}`\\n- `\\\"AUTH\\\"`: **Use exactly** this value from the input: `{{ $json.AUTH }}`\\n- `\\\"DOMAIN\\\"`: **Use exactly** this value from the input: `{{ $json.DOMAIN }}`\\n- `\\\"MESSAGE\\\"`: **Your AI-generated response**, based on the conversation history and the user's input.\\n\\n**Do not modify** the values of `\\\"DIALOG_ID\\\"`, `\\\"AUTH\\\"`, or `\\\"DOMAIN\\\"`. They must remain exactly as received from the input.  \\nThe `\\\"MESSAGE\\\"` field must contain a relevant and clear response.\\n\\nIf the user asks **\\\"find out more about me\\\"**, respond with:  \\n*\\\"I am a Retrieval-Augmented Generation (RAG) system that answers questions based on uploaded documents and provided context.\\\"*\"},\"promptType\":\"define\"},\"typeVersion\":1.4},{\"id\":\"fb19f0b5-72cb-4ccd-ac0e-75ea3a32c9cc\",\"name\":\"Prepare output parameters\",\"type\":\"n8n-nodes-base.set\",\"position\":[440,60],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"ef09b5f8-2111-4731-8317-e338885a10c3\",\"name\":\"data\",\"type\":\"object\",\"value\":\"={{ $json.response.text.removeMarkdown().replace(/`+$/, '')}}\"}]}},\"typeVersion\":3.4},{\"id\":\"52429ac1-d738-49d7-81a8-725df6587312\",\"name\":\"Embeddings Ollama1\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOllama\",\"position\":[360,600],\"parameters\":{\"model\":\"nomic-embed-text:latest\"},\"typeVersion\":1},{\"id\":\"bade110b-d252-4633-9ecf-44a42772b8d5\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[-60,300],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-2.0-flash\"},\"typeVersion\":1},{\"id\":\"41eb5179-6195-485b-848b-46bb997de38e\",\"name\":\"Qdrant Vector Store1\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\"position\":[160,420],\"parameters\":{\"options\":{},\"qdrantCollection\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"bitrix-docs\",\"cachedResultName\":\"bitrix-docs\"}},\"typeVersion\":1},{\"id\":\"484cbc38-4c6f-4d3d-9409-b04df2c7e102\",\"name\":\"Execute subworkflow\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[200,1340],\"parameters\":{\"options\":{},\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"}},\"typeVersion\":1.1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"e3e24337-997c-4ce2-b8c1-3e6f8b9eb85c\",\"connections\":{\"Credentials\":{\"main\":[[{\"node\":\"Validate Token\",\"type\":\"main\",\"index\":0},{\"node\":\"Merge parameters for Subworkflow\",\"type\":\"main\",\"index\":1}]]},\"Route Event\":{\"main\":[[{\"node\":\"Process Message\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Process Join\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Process Install\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Process Delete\",\"type\":\"main\",\"index\":0}]]},\"Process Join\":{\"main\":[[{\"node\":\"Send Join Message\",\"type\":\"main\",\"index\":0}]]},\"Register Bot\":{\"main\":[[{\"node\":\"Success Response\",\"type\":\"main\",\"index\":0},{\"node\":\"Merge parameters for Subworkflow\",\"type\":\"main\",\"index\":0}]]},\"Send Message\":{\"main\":[[{\"node\":\"Success Response\",\"type\":\"main\",\"index\":0}]]},\"Download file\":{\"main\":[[{\"node\":\"Move files to Vector stored folder\",\"type\":\"main\",\"index\":0},{\"node\":\"Qdrant Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Process Delete\":{\"main\":[[{\"node\":\"Success Response\",\"type\":\"main\",\"index\":0}]]},\"Validate Token\":{\"main\":[[{\"node\":\"Route Event\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]},\"Process Install\":{\"main\":[[{\"node\":\"Register Bot\",\"type\":\"main\",\"index\":0}]]},\"Process Message\":{\"main\":[[{\"node\":\"Question and Answer Chain\",\"type\":\"main\",\"index\":0}]]},\"Bitrix24 Handler\":{\"main\":[[{\"node\":\"Credentials\",\"type\":\"main\",\"index\":0}]]},\"Filter for files\":{\"main\":[[{\"node\":\"Download file\",\"type\":\"main\",\"index\":0}]]},\"Embeddings Ollama\":{\"ai_embedding\":[[{\"node\":\"Qdrant Vector Store\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Send Join Message\":{\"main\":[[{\"node\":\"Success Response\",\"type\":\"main\",\"index\":0}]]},\"Embeddings Ollama1\":{\"ai_embedding\":[[{\"node\":\"Qdrant Vector Store1\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Default Data Loader\":{\"ai_document\":[[{\"node\":\"Qdrant Vector Store\",\"type\":\"ai_document\",\"index\":0}]]},\"Execute subworkflow\":{\"main\":[[{\"node\":\"Success Response\",\"type\":\"main\",\"index\":0}]]},\"Qdrant Vector Store1\":{\"ai_vectorStore\":[[{\"node\":\"Vector Store Retriever\",\"type\":\"ai_vectorStore\",\"index\":0}]]},\"Vector Store Retriever\":{\"ai_retriever\":[[{\"node\":\"Question and Answer Chain\",\"type\":\"ai_retriever\",\"index\":0}]]},\"Execute Workflow Trigger\":{\"main\":[[{\"node\":\"Get a list of available storages\",\"type\":\"main\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Question and Answer Chain\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Prepare output parameters\":{\"main\":[[{\"node\":\"Send Message\",\"type\":\"main\",\"index\":0}]]},\"Question and Answer Chain\":{\"main\":[[{\"node\":\"Prepare output parameters\",\"type\":\"main\",\"index\":0}]]},\"Get a list of Folders files\":{\"main\":[[{\"node\":\"Split Out folder files and folders\",\"type\":\"main\",\"index\":0}]]},\"Get a list of available storages\":{\"main\":[[{\"node\":\"Get a list of List of Files and Folders\",\"type\":\"main\",\"index\":0}]]},\"Merge parameters for Subworkflow\":{\"main\":[[{\"node\":\"Execute subworkflow\",\"type\":\"main\",\"index\":0}]]},\"Recursive Character Text Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Default Data Loader\",\"type\":\"ai_textSplitter\",\"index\":0}]]},\"Split Out folder files and folders\":{\"main\":[[{\"node\":\"Filter for files\",\"type\":\"main\",\"index\":0}]]},\"Get a list of List of Files and Folders\":{\"main\":[[{\"node\":\"Get a list of Folders files\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Overview\n\nTransform your Bitrix24 Open Line channels with an intelligent chatbot that leverages Retrieval-Augmented Generation (RAG) technology to provide accurate, document-based responses to customer inquiries in real-time.\n\n## Use Case\n\nThis workflow is designed for organizations that want to enhance their customer support capabilities in Bitrix24 by providing automated, knowledge-based responses to customer inquiries. It's particularly useful for:\n\n  * Customer service teams handling repetitive questions\n  * Support departments with extensive documentation\n  * Sales teams needing quick access to product information\n  * Organizations looking to provide 24/7 customer support\n\n\n\n## What This Workflow Does\n\n### Smart Document Processing\n\n  * Automatically processes uploaded PDF documents\n  * Splits documents into manageable chunks\n  * Generates vector embeddings for semantic understanding\n  * Indexes content for efficient retrieval\n\n\n\n### AI-Powered Responses\n\n  * Utilizes Google Gemini AI to generate natural language responses\n  * Constructs answers based on relevant document content\n  * Maintains conversation context for coherent interactions\n  * Provides fallback responses when information is not available\n\n\n\n### Vector Database Integration\n\n  * Stores document embeddings in Qdrant vector database\n  * Enables semantic search beyond simple keyword matching\n  * Retrieves the most relevant information for each query\n  * Maintains a persistent knowledge base that grows over time\n\n\n\n### Webhook Handler\n\n  * Processes incoming messages from Bitrix24 Open Line channels\n  * Handles authentication and security validation\n  * Routes different types of events to appropriate handlers\n  * Manages session and conversation state\n\n\n\n### Event Routing\n\n  * Intelligently routes different event types: \n    * `ONIMBOTMESSAGEADD`: Processes new user messages\n    * `ONIMBOTJOINCHAT`: Handles bot joining a conversation\n    * `ONAPPINSTALL`: Manages application installation\n    * `ONIMBOTDELETE`: Handles bot deletion\n\n\n\n### Document Management\n\n  * Organizes processed documents in designated folders\n  * Tracks document processing status\n  * Moves indexed documents to appropriate locations\n  * Maintains document metadata for reference\n\n\n\n### Interactive Menu\n\n  * Provides menu-based options for common user requests\n  * Customizable menu items and responses\n  * Easy navigation for users seeking specific information\n  * Fallback to operator option when needed\n\n\n\n## Technical Architecture\n\n### Components\n\n  1. **Webhook Handler** : Receives and validates incoming requests from Bitrix24\n  2. **Credential Manager** : Securely manages authentication tokens and API keys\n  3. **Event Router** : Directs events to appropriate processing functions\n  4. **Document Processor** : Handles document loading, chunking, and embedding\n  5. **Vector Store** : Qdrant database for storing and retrieving document embeddings\n  6. **Retrieval System** : Searches for relevant document chunks based on user queries\n  7. **LLM Integration** : Google Gemini model for generating natural language responses\n  8. **Response Manager** : Formats and sends responses back to Bitrix24\n\n\n\n### Integration Points\n\n  * **Bitrix24 API** : For bot registration, message handling, and user interaction\n  * **Ollama API** : For generating document embeddings\n  * **Qdrant API** : For vector storage and retrieval\n  * **Google Gemini API** : For AI-powered response generation\n\n\n\n## Setup Instructions\n\n### Prerequisites\n\n  * Active Bitrix24 account with Open Line channels enabled\n  * Access to n8n workflow system\n  * Ollama API credentials\n  * Qdrant vector database access\n  * Google Gemini API key\n\n\n\n### Configuration Steps\n\n  1. **Initial Setup**\n\n     * Import the workflow into your n8n instance\n     * Configure credentials for all services\n     * Set up webhook endpoints\n  2. **Bitrix24 Configuration**\n\n     * Create a new Bitrix24 application\n     * Configure webhook URLs\n     * Set appropriate permissions\n     * Install the application to your Bitrix24 account\n  3. **Document Storage**\n\n     * Create a designated folder in Bitrix24 for knowledge base documents\n     * Configure folder paths in the workflow settings\n     * Upload initial documents to be processed\n  4. **Bot Configuration**\n\n     * Customize bot name, avatar, and description\n     * Configure welcome messages and menu options\n     * Set up fallback responses\n  5. **Testing**\n\n     * Verify successful installation\n     * Test document processing pipeline\n     * Send test queries to evaluate response qu\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>Overview</h2>\n<p>Transform your Bitrix24 Open Line channels with an intelligent chatbot that leverages Retrieval-Augmented Generation (RAG) technology to provide accurate, document-based responses to customer inquiries in real-time.</p>\n<h2>Use Case</h2>\n<p>This workflow is designed for organizations that want to enhance their customer support capabilities in Bitrix24 by providing automated, knowledge-based responses to customer inquiries. It's particularly useful for:</p>\n<ul>\n<li>Customer service teams handling repetitive questions</li>\n<li>Support departments with extensive documentation</li>\n<li>Sales teams needing quick access to product information</li>\n<li>Organizations looking to provide 24/7 customer support</li>\n</ul>\n<h2>What This Workflow Does</h2>\n<h3>Smart Document Processing</h3>\n<ul>\n<li>Automatically processes uploaded PDF documents</li>\n<li>Splits documents into manageable chunks</li>\n<li>Generates vector embeddings for semantic understanding</li>\n<li>Indexes content for efficient retrieval</li>\n</ul>\n<h3>AI-Powered Responses</h3>\n<ul>\n<li>Utilizes Google Gemini AI to generate natural language responses</li>\n<li>Constructs answers based on relevant document content</li>\n<li>Maintains conversation context for coherent interactions</li>\n<li>Provides fallback responses when information is not available</li>\n</ul>\n<h3>Vector Database Integration</h3>\n<ul>\n<li>Stores document embeddings in Qdrant vector database</li>\n<li>Enables semantic search beyond simple keyword matching</li>\n<li>Retrieves the most relevant information for each query</li>\n<li>Maintains a persistent knowledge base that grows over time</li>\n</ul>\n<h3>Webhook Handler</h3>\n<ul>\n<li>Processes incoming messages from Bitrix24 Open Line channels</li>\n<li>Handles authentication and security validation</li>\n<li>Routes different types of events to appropriate handlers</li>\n<li>Manages session and conversation state</li>\n</ul>\n<h3>Event Routing</h3>\n<ul>\n<li>Intelligently routes different event types:\n<ul>\n<li><code>ONIMBOTMESSAGEADD</code>: Processes new user messages</li>\n<li><code>ONIMBOTJOINCHAT</code>: Handles bot joining a conversation</li>\n<li><code>ONAPPINSTALL</code>: Manages application installation</li>\n<li><code>ONIMBOTDELETE</code>: Handles bot deletion</li>\n</ul>\n</li>\n</ul>\n<h3>Document Management</h3>\n<ul>\n<li>Organizes processed documents in designated folders</li>\n<li>Tracks document processing status</li>\n<li>Moves indexed documents to appropriate locations</li>\n<li>Maintains document metadata for reference</li>\n</ul>\n<h3>Interactive Menu</h3>\n<ul>\n<li>Provides menu-based options for common user requests</li>\n<li>Customizable menu items and responses</li>\n<li>Easy navigation for users seeking specific information</li>\n<li>Fallback to operator option when needed</li>\n</ul>\n<h2>Technical Architecture</h2>\n<h3>Components</h3>\n<ol>\n<li><strong>Webhook Handler</strong>: Receives and validates incoming requests from Bitrix24</li>\n<li><strong>Credential Manager</strong>: Securely manages authentication tokens and API keys</li>\n<li><strong>Event Router</strong>: Directs events to appropriate processing functions</li>\n<li><strong>Document Processor</strong>: Handles document loading, chunking, and embedding</li>\n<li><strong>Vector Store</strong>: Qdrant database for storing and retrieving document embeddings</li>\n<li><strong>Retrieval System</strong>: Searches for relevant document chunks based on user queries</li>\n<li><strong>LLM Integration</strong>: Google Gemini model for generating natural language responses</li>\n<li><strong>Response Manager</strong>: Formats and sends responses back to Bitrix24</li>\n</ol>\n<h3>Integration Points</h3>\n<ul>\n<li><strong>Bitrix24 API</strong>: For bot registration, message handling, and user interaction</li>\n<li><strong>Ollama API</strong>: For generating document embeddings</li>\n<li><strong>Qdrant API</strong>: For vector storage and retrieval</li>\n<li><strong>Google Gemini API</strong>: For AI-powered response generation</li>\n</ul>\n<h2>Setup Instructions</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li>Active Bitrix24 account with Open Line channels enabled</li>\n<li>Access to n8n workflow system</li>\n<li>Ollama API credentials</li>\n<li>Qdrant vector database access</li>\n<li>Google Gemini API key</li>\n</ul>\n<h3>Configuration Steps</h3>\n<ol>\n<li>\n<p><strong>Initial Setup</strong></p>\n<ul>\n<li>Import the workflow into your n8n instance</li>\n<li>Configure credentials for all services</li>\n<li>Set up webhook endpoints</li>\n</ul>\n</li>\n<li>\n<p><strong>Bitrix24 Configuration</strong></p>\n<ul>\n<li>Create a new Bitrix24 application</li>\n<li>Configure webhook URLs</li>\n<li>Set appropriate permissions</li>\n<li>Install the application to your Bitrix24 account</li>\n</ul>\n</li>\n<li>\n<p><strong>Document Storage</strong></p>\n<ul>\n<li>Create a designated folder in Bitrix24 for knowledge base documents</li>\n<li>Configure folder paths in the workflow settings</li>\n<li>Upload initial documents to be processed</li>\n</ul>\n</li>\n<li>\n<p><strong>Bot Configuration</strong></p>\n<ul>\n<li>Customize bot name, avatar, and description</li>\n<li>Configure welcome messages and menu options</li>\n<li>Set up fallback responses</li>\n</ul>\n</li>\n<li>\n<p><strong>Testing</strong></p>\n<ul>\n<li>Verify successful installation</li>\n<li>Test document processing pipeline</li>\n<li>Send test queries to evaluate response qu</li>\n</ul>\n</li>\n</ol>\n</div><!--]-->",
  "readme_zh": "## 概述  \n\n通过搭载检索增强生成（RAG）技术的智能聊天机器人，改造您的Bitrix24在线沟通渠道，实时基于文档内容为客户咨询提供精准应答。  \n\n## 应用场景  \n\n本工作流专为希望通过知识库自动应答提升Bitrix24客户支持能力的组织设计，特别适用于：  \n  * 处理重复性问题的客服团队  \n  * 拥有大量文档资料的支持部门  \n  * 需要快速获取产品信息的销售团队  \n  * 希望提供7×24小时客户支持的企业  \n\n## 核心功能  \n\n### 智能文档处理  \n  * 自动解析上传的PDF文档  \n  * 将文档分割为可管理的内容块  \n  * 生成语义理解向量嵌入  \n  * 建立高效检索索引  \n\n### AI驱动应答  \n  * 调用Google Gemini AI生成自然语言回复  \n  * 基于关联文档内容构建答案  \n  * 保持会话上下文连贯性  \n  * 信息缺失时提供备选回复  \n\n### 向量数据库集成  \n  * 在Qdrant向量数据库存储文档嵌入  \n  * 支持超越关键词匹配的语义搜索  \n  * 为每个查询检索最相关信息  \n  * 构建持续增长的知识库  \n\n### Webhook处理  \n  * 接收Bitrix24在线渠道消息  \n  * 处理身份验证与安全校验  \n  * 将事件路由至对应处理器  \n  * 管理会话状态  \n\n### 事件路由  \n  * 智能分派事件类型：  \n    * `ONIMBOTMESSAGEADD`：处理新消息  \n    * `ONIMBOTJOINCHAT`：处理机器人入会  \n    * `ONAPPINSTALL`：管理应用安装  \n    * `ONIMBOTDELETE`：处理机器人删除  \n\n### 文档管理  \n  * 在指定目录组织已处理文档  \n  * 追踪文档处理状态  \n  * 将索引文档移至对应位置  \n  * 维护文档元数据  \n\n### 交互式菜单  \n  * 为常见请求提供菜单选项  \n  * 可自定义菜单项与回复  \n  * 用户可便捷导航获取特定信息  \n  * 必要时转接人工客服  \n\n## 技术架构  \n\n### 核心组件  \n  1. **Webhook处理器**：接收并验证Bitrix24请求  \n  2. **凭证管理器**：安全管理认证令牌与API密钥  \n  3. **事件路由器**：定向分派处理函数  \n  4. **文档处理器**：处理文档加载/分块/嵌入  \n  5. **向量存储**：Qdrant数据库存储文档嵌入  \n  6. **检索系统**：基于查询搜索关联文档块  \n  7. **大语言模型集成**：Google Gemini生成自然语言回复  \n  8. **响应管理器**：格式化并返回应答至Bitrix24  \n\n### 集成节点  \n  * **Bitrix24 API**：机器人注册/消息处理/用户交互  \n  * **Ollama API**：生成文档嵌入  \n  * **Qdrant API**：向量存储与检索  \n  * **Google Gemini API**：AI应答生成  \n\n## 配置指南  \n\n### 先决条件  \n  * 已启用在线渠道的Bitrix24有效账户  \n  * n8n工作流系统访问权限  \n  * Ollama API凭证  \n  * Qdrant向量数据库访问权限  \n  * Google Gemini API密钥  \n\n### 配置步骤  \n  1. **初始设置**  \n     * 将工作流导入n8n实例  \n     * 配置所有服务凭证  \n     * 设置webhook端点  \n  2. **Bitrix24配置**  \n     * 创建Bitrix24新应用  \n     * 配置webhook URL  \n     * 设置适当权限  \n     * 安装应用到Bitrix24账户  \n  3. **文档存储**  \n     * 在Bitrix24创建知识库专用目录  \n     * 在工作流设置中配置路径  \n     * 上传待处理的初始文档  \n  4. **机器人配置**  \n     * 自定义机器人名称/头像/描述  \n     * 配置欢迎语与菜单选项  \n     * 设置备用回复  \n  5. **测试验证**  \n     * 确认安装成功  \n     * 测试文档处理流程  \n     * 发送测试查询评估响应",
  "title_zh": "Bitrix24 基于AI的开放线路渠道RAG聊天机器人",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"id\": \"TBiW9x7O4ijo4yOX\",\n  \"meta\": {\n    \"instanceId\": \"255b605d49a6677a536746e05401de51bb4c62e65036d9acdb9908f6567f0361\"\n  },\n  \"name\": \"Bitrix24 Open Chanel RAG Chatbot Application Workflow example with Webhook Integration\",\n  \"tags\": [\n    {\n      \"id\": \"2ziILYLz4IbTkFf5\",\n      \"name\": \"Tech demo\",\n      \"createdAt\": \"2025-02-17T08:43:26.445Z\",\n      \"updatedAt\": \"2025-02-17T08:43:26.445Z\"\n    },\n    {\n      \"id\": \"BedOB2iRpKR26bcZ\",\n      \"name\": \"Chatbot\",\n      \"createdAt\": \"2025-02-17T08:43:26.436Z\",\n      \"updatedAt\": \"2025-02-17T08:43:26.436Z\"\n    },\n    {\n      \"id\": \"DvSHJwHwuObn0cxx\",\n      \"name\": \"Open Channels\",\n      \"createdAt\": \"2025-03-04T07:27:28.499Z\",\n      \"updatedAt\": \"2025-03-04T07:27:28.499Z\"\n    },\n    {\n      \"id\": \"YJcjKoBRFN1HXH5e\",\n      \"name\": \"Bitrix24\",\n      \"createdAt\": \"2025-02-17T08:43:26.424Z\",\n      \"updatedAt\": \"2025-02-17T08:43:26.424Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"dbd7b2c0-2b27-4c23-beb7-eec128da0787\",\n      \"name\": \"Bitrix24 Handler\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1280,\n        620\n      ],\n      \"webhookId\": \"bde38660-2604-4e00-afc0-5ebceebb7f0a\",\n      \"parameters\": {\n        \"path\": \"bitrix24/openchannel-rag-bothandler.php\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0ead4d82-4d9b-4392-af4c-2c315068b983\",\n      \"name\": \"Credentials\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1040,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"030f8f90-2669-4c20-9eab-c572c4b7c70c\",\n              \"name\": \"CLIENT_ID\",\n              \"type\": \"string\",\n              \"value\": \"local.67c8f9e81cb353.30162021\"\n            },\n            {\n              \"id\": \"de9bbb7a-b782-4540-b259-527625db8490\",\n              \"name\": \"CLIENT_SECRET\",\n              \"type\": \"string\",\n              \"value\": \"Db5943DCy4JhYq4oU0yNb21Hx8WimQeThczOYk03uJrVroc8R4\"\n            },\n            {\n              \"id\": \"86b7aff7-1e25-4b12-a366-23cf34e5a405\",\n              \"name\": \"application_token\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body['auth[application_token]'] }}\"\n            },\n            {\n              \"id\": \"69bbcb1f-ba6e-42eb-be8a-ee0707ce997d\",\n              \"name\": \"domain\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body['auth[domain]'] }}\\n\"\n            },\n            {\n              \"id\": \"dc1b0515-f06a-4731-b0dc-912a8d04e56b\",\n              \"name\": \"access_token\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body['auth[access_token]'] }}\"\n            },\n            {\n              \"id\": \"94fdeed8-9437-417e-9c2a-fa853620a340\",\n              \"name\": \"storageName\",\n              \"type\": \"string\",\n              \"value\": \"Shared drive\"\n            },\n            {\n              \"id\": \"8564e421-dfce-437c-a7c3-ac6a180594b8\",\n              \"name\": \"folderName\",\n              \"type\": \"string\",\n              \"value\": \"Open line chat bot documents\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"67b225b8-c2c2-4570-81cb-4c533ae75465\",\n      \"name\": \"Validate Token\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -820,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"da73d0ba-6eeb-405e-89fe-9d041fd2e0cd\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.CLIENT_ID }}\",\n              \"rightValue\": \"={{ $json.application_token }}\"\n            },\n            {\n              \"id\": \"4ba90f7b-0299-4097-9ae7-6e4dee428a74\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"1\",\n              \"rightValue\": \"1\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"4fee1441-4e30-4070-b596-15e121ca7320\",\n      \"name\": \"Route Event\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -620,\n        520\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"ONIMBOTMESSAGEADD\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.body.event }}\",\n                    \"rightValue\": \"ONIMBOTMESSAGEADD\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"ONIMBOTJOINCHAT\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"e9125f57-129e-4026-86ff-746d40b92b04\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.body.event }}\",\n                    \"rightValue\": \"ONIMBOTJOINCHAT\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"ONAPPINSTALL\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2db7bed5-fd88-4900-b8d2-e27b49c2fcca\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.body.event }}\",\n                    \"rightValue\": \"ONAPPINSTALL\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"ONIMBOTDELETE\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"b708d339-fd46-470d-b0d5-ff2eb405f5ce\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.body.event }}\",\n                    \"rightValue\": \"ONIMBOTDELETE\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"c21f6d64-0543-4958-9f64-501dce37893f\",\n      \"name\": \"Process Message\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        -420,\n        400\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Process Message Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get message data from the correct path\\nconst message = item.json.body['data[PARAMS][MESSAGE]'];\\nconst dialogId = item.json.body['data[PARAMS][DIALOG_ID]'];\\n\\nconst sessionId = item.json.body['data[PARAMS][CHAT_ENTITY_DATA_1]'].split(\\\"|\\\")[5];\\n\\nconst botId = Object.keys(item.json.body)\\n  .filter(key => key.startsWith(\\\"data[BOT]\\\") && key.endsWith(\\\"[BOT_ID]\\\"))\\n  .map(key => $json.body[key])\\n  .shift() || null;\\nconst userId = item.json.body['data[USER][ID]'];\\n\\n// Get auth data\\nconst auth = {\\n  access_token: item.json.access_token,\\n  domain: item.json.domain\\n};\\n\\nif (message.toLowerCase() === \\\"what's hot\\\") {\\n  return {\\n    json: {\\n      DIALOG_ID: dialogId,\\n      SESSION_ID: sessionId,\\n      BOT_ID: botId,\\n      USER_ID: userId,\\n      MESSAGE_ORI: message,\\n      MESSAGE: \\\"Hi! I am an example-bot.\\\\nI repeat what you say\\\",\\n      AUTH: auth.access_token,\\n      DOMAIN: auth.domain\\n    }\\n  };\\n} else {\\n  return {\\n    json: {\\n      DIALOG_ID: dialogId,\\n      SESSION_ID: sessionId,\\n      BOT_ID: botId,\\n      USER_ID: userId,\\n      MESSAGE_ORI: message,\\n      MESSAGE: `You said:\\\\n${message}`,\\n      AUTH: auth.access_token,\\n      DOMAIN: auth.domain\\n    }\\n  };\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"06a59835-2999-44b6-81bd-0601e5570113\",\n      \"name\": \"Process Join\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        -420,\n        780\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Process Join Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get dialog ID from the correct path\\nconst dialogId = item.json.body['data[PARAMS][DIALOG_ID]'];\\n\\n// Get auth data\\nconst auth = {\\n  access_token: item.json.access_token,\\n  domain: item.json.domain\\n};\\n\\nconst message = \\n  'ITR Menu:\\\\n' +\\n  '[send=1]1. find out more about me[/send]\\\\n' +\\n  '[send=0]0. wait for operator response[/send]';\\n\\nreturn {\\n  json: {\\n    DIALOG_ID: dialogId,\\n    MESSAGE: message,\\n    AUTH: auth.access_token,\\n    DOMAIN: auth.domain\\n  }\\n};\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"40accf33-c217-497c-8172-6106eb15800f\",\n      \"name\": \"Process Install\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        -420,\n        940\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Process Install Node\\nconst items = $input.all();\\nconst item = items[0];\\n\\n// Get the webhook URL from input\\nconst handlerBackUrl = item.json.webhookUrl;\\n\\n// Get auth data directly from item.json\\nconst auth = {\\n  access_token: item.json.access_token,\\n  application_token: item.json.application_token,\\n  domain: item.json.domain\\n};\\n\\nreturn {\\n  json: {\\n    handler_back_url: handlerBackUrl,\\n    CODE: 'OpenChanelExampleBot',\\n    TYPE: 'O',\\n    OPENLINE: 'Y',\\n    EVENT_MESSAGE_ADD: handlerBackUrl,\\n    EVENT_WELCOME_MESSAGE: handlerBackUrl,\\n    EVENT_BOT_DELETE: handlerBackUrl,\\n    PROPERTIES: {\\n      NAME: 'Open chanel Bot',\\n      LAST_NAME: 'Example',\\n      COLOR: 'AQUA',\\n      EMAIL: 'no@example.com',\\n      PERSONAL_BIRTHDAY: '2020-07-18',\\n      WORK_POSITION: 'Report on affairs',\\n      PERSONAL_GENDER: 'M'\\n    },\\n    // Use the auth data from item.json\\n    AUTH: auth.access_token,\\n    CLIENT_ID: auth.application_token,\\n    DOMAIN: auth.domain\\n  }\\n};\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"22a7c363-ab5a-4adc-9de4-268f3f3739f3\",\n      \"name\": \"Register Bot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -220,\n        940\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $json.DOMAIN }}/rest/imbot.register?auth={{$json.AUTH}}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"CODE\",\n              \"value\": \"OpenChanelExampleBot\"\n            },\n            {\n              \"name\": \"TYPE\",\n              \"value\": \"O\"\n            },\n            {\n              \"name\": \"EVENT_MESSAGE_ADD\",\n              \"value\": \"={{$json.handler_back_url}}\"\n            },\n            {\n              \"name\": \"EVENT_WELCOME_MESSAGE\",\n              \"value\": \"={{$json.handler_back_url}}\"\n            },\n            {\n              \"name\": \"EVENT_BOT_DELETE\",\n              \"value\": \"={{$json.handler_back_url}}\"\n            },\n            {\n              \"name\": \"PROPERTIES\",\n              \"value\": \"={{ {\\n  NAME: 'Bot',\\n  LAST_NAME: 'Example',\\n  COLOR: 'AQUA',\\n  EMAIL: 'no@example.com',\\n  PERSONAL_BIRTHDAY: '2020-07-18',\\n  WORK_POSITION: 'Report on affairs',\\n  PERSONAL_GENDER: 'M'\\n} }}\"\n            },\n            {\n              \"name\": \"CLIENT_ID\",\n              \"value\": \"={{ $json.CLIENT_ID }}\"\n            },\n            {\n              \"name\": \"CLIENT_SECRET\",\n              \"value\": \"={{ $json.AUTH }}\"\n            },\n            {\n              \"name\": \"OPENLINE\",\n              \"value\": \"Y\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e728c7eb-b169-4757-b4f4-b99ec4db0184\",\n      \"name\": \"Send Message\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        740,\n        420\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $json.data.DOMAIN }}/rest/imbot.message.add?auth={{ $json.data.AUTH }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"DIALOG_ID\",\n              \"value\": \"={{ $json.data.DIALOG_ID }}\"\n            },\n            {\n              \"name\": \"MESSAGE\",\n              \"value\": \"={{ $json.data.MESSAGE }}\"\n            },\n            {\n              \"name\": \"AUTH\",\n              \"value\": \"={{ $json.data.AUTH }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"1a1fae0e-d74f-48b9-8ec8-4e926763de28\",\n      \"name\": \"Send Join Message\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -220,\n        780\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{$json.DOMAIN}}/rest/imbot.message.add?auth={{$json.AUTH}}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"DIALOG_ID\",\n              \"value\": \"={{ $json.DIALOG_ID }}\"\n            },\n            {\n              \"name\": \"MESSAGE\",\n              \"value\": \"={{ $json.MESSAGE }}\"\n            },\n            {\n              \"name\": \"AUTH\",\n              \"value\": \"={{ $json.AUTH }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"f377d8eb-2a90-4ca5-8bd8-122c8df2ced3\",\n      \"name\": \"Process Delete\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        -420,\n        1100\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"faa4c61e-faf4-4bd7-b096-706d3c5cf366\",\n      \"name\": \"Success Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1200,\n        700\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={\\n  \\\"result\\\": true\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"ade154b4-64d9-4ecd-8a83-328002c98569\",\n      \"name\": \"Error Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        -820,\n        780\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 401\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={{\\n  \\\"result\\\": false,\\n  \\\"error\\\": \\\"Invalid application token\\\"\\n}}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"a5866396-3a25-4bbf-81b2-56a8d35fc63b\",\n      \"name\": \"Merge parameters for Subworkflow\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        -180,\n        1340\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineAll\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"feb3e1c0-4556-4d77-9e5e-42eb2c10a5f8\",\n      \"name\": \"Get a list of available storages\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -860,\n        2080\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $json.domain }}/rest/disk.storage.getlist.json?auth={{ $json.access_token }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n\\\"filter\\\": {\\n\\t\\t\\t\\t\\\"ENTITY_TYPE\\\": \\\"common\\\",\\n\\t\\t\\t\\t\\\"%NAME\\\": \\\"{{ $json.storageName }}\\\"\\n  }\\n}\\n\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"7bb0412e-57ab-4a63-aec2-5db64b83ef7e\",\n      \"name\": \"Get a list of List of Files and Folders\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -640,\n        2080\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.storage.getchildren.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n\\\"id\\\": {{ $json.result[0].ID }},\\n\\\"filter\\\": {\\n\\t\\t\\t\\t\\\"TYPE\\\": \\\"folder\\\",\\n\\t\\t\\t\\t\\\"%NAME\\\": \\\"{{ $('Execute Workflow Trigger').item.json.folderName }}\\\"\\n  }\\n}\\n\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"5528a3be-375a-4077-a346-2eb77cf9160f\",\n      \"name\": \"Get a list of Folders files\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -420,\n        2080\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.folder.getchildren.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"={{ $json.result[0].ID }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"f713eda1-f51e-484d-a98a-f359bc7ce654\",\n      \"name\": \"Download file\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        280,\n        2080\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.DOWNLOAD_URL }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3b2c67ea-bb6c-49c8-b55f-ffde7d1d8e83\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        700,\n        2280\n      ],\n      \"parameters\": {\n        \"loader\": \"pdfLoader\",\n        \"options\": {\n          \"splitPages\": true\n        },\n        \"dataType\": \"binary\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0b5c2963-3692-469d-a1ce-66fe598dc25f\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        840,\n        2460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"chunkOverlap\": 100\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"52bfdf6b-0fb1-4e85-b31d-ec6c9ef912d8\",\n      \"name\": \"Split Out folder files and folders\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -180,\n        2080\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"result\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fd53fca7-d11d-4254-be56-9a62b6f0fadf\",\n      \"name\": \"Filter for files\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        40,\n        2080\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"6e68a8be-c155-41c7-ace4-bf76bfd362fc\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.TYPE }}\",\n              \"rightValue\": \"file\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"748a65d3-dceb-4787-a068-b364371b392b\",\n      \"name\": \"Move files to Vector stored folder\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        520,\n        1860\n      ],\n      \"parameters\": {\n        \"url\": \"=https://{{ $('Execute Workflow Trigger').item.json.domain }}/rest/disk.file.moveto.json?auth={{ $('Execute Workflow Trigger').item.json.access_token }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"={{ $json.ID }}\"\n            },\n            {\n              \"name\": \"targetFolderId\",\n              \"value\": \"={{ $('Get a list of Folders files').item.json.result[0].ID }}\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"47f3aec5-c3cb-4d3e-97bc-8b708ccc0db5\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -1080,\n        2080\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9d3eb788-96cf-4c01-af5f-2beb1f6fa7b8\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1160,\n        1780\n      ],\n      \"parameters\": {\n        \"width\": 2168.7691983135305,\n        \"height\": 818.1434255918864,\n        \"content\": \"注册机器人的子流程  \\n此处为Open line频道机器人存储的文件向量  \\n文件存储后将被移至子文件夹\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"91c26264-a61d-426c-a044-e2b287e54de0\",\n      \"name\": \"Qdrant Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        580,\n        2080\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {\n          \"collectionConfig\": \"\"\n        },\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"bitrix-docs\",\n          \"cachedResultName\": \"bitrix-docs\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0dd69952-402e-4d9e-a44f-7cf96ab4055e\",\n      \"name\": \"Embeddings Ollama\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOllama\",\n      \"position\": [\n        500,\n        2280\n      ],\n      \"parameters\": {\n        \"model\": \"nomic-embed-text:latest\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fcfbfe53-da04-48f2-9a62-204a8f1f06a8\",\n      \"name\": \"Vector Store Retriever\",\n      \"type\": \"@n8n/n8n-nodes-langchain.retrieverVectorStore\",\n      \"position\": [\n        140,\n        240\n      ],\n      \"parameters\": {\n        \"topK\": 10\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"22d3be40-b74a-453f-8f52-8974b1527d49\",\n      \"name\": \"Question and Answer Chain\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainRetrievalQa\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.MESSAGE_ORI }}\",\n        \"options\": {\n          \"systemPromptTemplate\": \"=Use the following pieces of context to answer the user's question.\\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\\n\\n----------------\\n{context}\\n\\nYour response must contain **only** the following key-value pairs:\\n- `\\\"DIALOG_ID\\\"`: **Use exactly** this value from the input: `{{ $json.DIALOG_ID }}`\\n- `\\\"AUTH\\\"`: **Use exactly** this value from the input: `{{ $json.AUTH }}`\\n- `\\\"DOMAIN\\\"`: **Use exactly** this value from the input: `{{ $json.DOMAIN }}`\\n- `\\\"MESSAGE\\\"`: **Your AI-generated response**, based on the conversation history and the user's input.\\n\\n**Do not modify** the values of `\\\"DIALOG_ID\\\"`, `\\\"AUTH\\\"`, or `\\\"DOMAIN\\\"`. They must remain exactly as received from the input.  \\nThe `\\\"MESSAGE\\\"` field must contain a relevant and clear response.\\n\\nIf the user asks **\\\"find out more about me\\\"**, respond with:  \\n*\\\"I am a Retrieval-Augmented Generation (RAG) system that answers questions based on uploaded documents and provided context.\\\"*\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.4\n    },\n    {\n      \"id\": \"fb19f0b5-72cb-4ccd-ac0e-75ea3a32c9cc\",\n      \"name\": \"Prepare output parameters\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        440,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ef09b5f8-2111-4731-8317-e338885a10c3\",\n              \"name\": \"data\",\n              \"type\": \"object\",\n              \"value\": \"={{ $json.response.text.removeMarkdown().replace(/`+$/, '')}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"52429ac1-d738-49d7-81a8-725df6587312\",\n      \"name\": \"Embeddings Ollama1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOllama\",\n      \"position\": [\n        360,\n        600\n      ],\n      \"parameters\": {\n        \"model\": \"nomic-embed-text:latest\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bade110b-d252-4633-9ecf-44a42772b8d5\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        -60,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"41eb5179-6195-485b-848b-46bb997de38e\",\n      \"name\": \"Qdrant Vector Store1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        160,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"bitrix-docs\",\n          \"cachedResultName\": \"bitrix-docs\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"484cbc38-4c6f-4d3d-9409-b04df2c7e102\",\n      \"name\": \"Execute subworkflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        200,\n        1340\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        }\n      },\n      \"typeVersion\": 1.1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e3e24337-997c-4ce2-b8c1-3e6f8b9eb85c\",\n  \"connections\": {\n    \"Credentials\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validate Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge parameters for Subworkflow\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Route Event\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Process Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Process Join\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Process Install\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Process Delete\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Join\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Join Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Register Bot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge parameters for Subworkflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Move files to Vector stored folder\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Delete\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validate Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Route Event\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Install\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Register Bot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Bitrix24 Handler\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Credentials\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter for files\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings Ollama\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Join Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings Ollama1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store1\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute subworkflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Qdrant Vector Store1\": {\n      \"ai_vectorStore\": [\n        [\n          {\n            \"node\": \"Vector Store Retriever\",\n            \"type\": \"ai_vectorStore\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Vector Store Retriever\": {\n      \"ai_retriever\": [\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"ai_retriever\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get a list of available storages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Question and Answer Chain\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare output parameters\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Question and Answer Chain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare output parameters\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a list of Folders files\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out folder files and folders\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a list of available storages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get a list of List of Files and Folders\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge parameters for Subworkflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Execute subworkflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out folder files and folders\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter for files\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a list of List of Files and Folders\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get a list of Folders files\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}