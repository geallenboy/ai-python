{
  "title": "Generate Dynamic Line Chart from JSON Data to Upload to Google Drive",
  "url": "https://n8n.io/workflows/3578-generate-dynamic-line-chart-from-json-data-to-upload-to-google-drive/",
  "category": "Other",
  "category_url": "https://n8n.io/workflows/categories/other/?sort=createdAt:desc",
  "author": "Lucas Correia",
  "publish_date": "Last update 18 days ago",
  "publish_date_absolute": "2025-05-05",
  "content": "",
  "workflow_json": "",
  "readme": "## What Does This Flow Do?\n\nThis workflow demonstrates how to dynamically generate a line chart using the QuickChart node based on data provided in a JSON object and then upload the resulting chart image to Google Drive.\n\n![chart.jpg](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/chart_c6e9377bda.jpg)\n\n## Use Cases\n\n  * You can use it in presentations or requesting for chart generation from a software with HTTP requests.\n  * Automated report generation (e.g., daily sales charts).\n  * Visualizing data fetched from APIs or databases.\n  * Simple monitoring dashboards.\n  * Adding charts to internal tools or notifications.\n\n\n\n## How it Works\n\n  1. **Trigger:** The workflow starts manually when you click 'Test workflow'.\n  2. **Set Sample Data:** A Set node (`Edit Fields: Set JSON data to test`) defines a sample JSON object named `jsonData`. This object contains: \n     * `reportTitle`: A title (not used in the chart generation in this example, but useful for context).\n     * `labels`: An array of strings representing the labels for the chart's X-axis (e.g., [\"Q1\", \"Q2\", \"Q3\", \"Q4\"]).\n     * `salesData`: An array of numbers representing the data points for the chart's Y-axis (e.g., [1250, 1800, 1550, 2100]).\n  3. **Generate Chart:** The QuickChart node is configured to: \n     * Create a `line` chart.\n     * Dynamically read labels from the `jsonData.labels` array (`Labels Mode: From Array`).\n     * Use the `jsonData.salesData` array as the input data (Note: This configuration places data in the top-level 'Data' field. For more complex charts with multiple datasets or specific dataset options, configure datasets under 'Dataset Options' instead).\n     * The node outputs the generated chart image as binary data in a field named `data`.\n  4. **Upload to Google Drive:** The Google Drive node (`Google Drive: Upload File`): \n     * Takes the binary data (`data`) from the QuickChart node.\n     * Uploads the image to your specified Google Drive folder.\n     * Dynamically names the file based on its extension (e.g., `chart.png`).\n\n\n\n## Setup Steps\n\n  1. **Import:** Import this template into your n8n instance.\n  2. **Configure Google Drive Credentials:**\n     * Select the `Google Drive: Upload File` node.\n     * You **MUST** configure your own Google Drive credentials. Click on the 'Credentials' dropdown and either select existing credentials or create new ones by following the authentication prompts.\n  3. **(Optional) Customize Google Drive Folder:** In the `Google Drive: Upload File` node, you can change the `Drive ID` and `Folder ID` to specify exactly where the chart should be uploaded.\n  4. **Activate:** Activate the workflow if you want it to run automatically based on a different trigger.\n\n\n\n## How to Use & Customize\n\n  * **Change Input Data:** Modify the `labels` and `salesData` arrays within the `Edit Fields: Set JSON data to test` node to use your own data. Ensure the number of labels matches the number of data points.\n  * **Use Real Data Sources:** Replace the `Edit Fields: Set JSON data to test` node with nodes that fetch data from real sources like: \n    * HTTP Request (APIs)\n    * Postgres / MongoDB nodes (Databases)\n    * Google Sheets node\n    * Ensure the output data from your source node is formatted similarly (providing `labels` and `salesData` arrays). You might need another Set node to structure the data correctly before the QuickChart node.\n  * **Change Chart Type:** In the QuickChart node, modify the `Chart Type` parameter (e.g., change from `line` to `bar`, `pie`, `doughnut`, etc.).\n  * **Customize Chart Appearance:** Explore the `Chart Options` parameter within the QuickChart node to add titles, change colors, modify axes, etc., using QuickChart's standard JSON configuration options.\n  * **Use Datasets (Recommended for Complex Charts):** For multiple lines/bars or more control, configure datasets explicitly in the QuickChart node: \n    * Remove the expression from the top-level `Data` field.\n    * Go to `Dataset Options` -> `Add option` -> `Add dataset`.\n    * Set the `Data` field within the dataset using an expression like `{{ $json.jsonData.salesData }}`.\n    * You can add multiple datasets this way.\n  * **Change Output Destination:** Replace the `Google Drive: Upload File` node with other nodes to handle the chart image differently: \n    * `Write Binary File`: Save the chart to the local filesystem where n8n is running.\n    * `Slack` / `Discord` / `Telegram`: Send the chart to messaging platforms.\n    * `Move Binary Data`: Convert the image to Base64 to embed in HTML or return via webhook response.\n\n\n\n## Nodes Used\n\n  * Manual Trigger\n  * Set\n  * QuickChart\n  * Google Drive\n\n\n\n* * *\n\n**Tags:** (Suggestions for tags field)\n\n`QuickChart`, `Chart`, `Visualization`, `Line Chart`, `Google Drive`, `Reporting`, `Automation`\n\n* * *\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>What Does This Flow Do?</h2>\n<p>This workflow demonstrates how to dynamically generate a line chart using the QuickChart node based on data provided in a JSON object and then upload the resulting chart image to Google Drive.</p>\n<p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/chart_c6e9377bda.jpg\" alt=\"chart.jpg\"></p>\n<h2>Use Cases</h2>\n<ul>\n<li>You can use it in presentations or requesting for chart generation from a software with HTTP requests.</li>\n<li>Automated report generation (e.g., daily sales charts).</li>\n<li>Visualizing data fetched from APIs or databases.</li>\n<li>Simple monitoring dashboards.</li>\n<li>Adding charts to internal tools or notifications.</li>\n</ul>\n<h2>How it Works</h2>\n<ol>\n<li><strong>Trigger:</strong> The workflow starts manually when you click 'Test workflow'.</li>\n<li><strong>Set Sample Data:</strong> A Set node (<code>Edit Fields: Set JSON data to test</code>) defines a sample JSON object named <code>jsonData</code>. This object contains:\n<ul>\n<li><code>reportTitle</code>: A title (not used in the chart generation in this example, but useful for context).</li>\n<li><code>labels</code>: An array of strings representing the labels for the chart's X-axis (e.g., [\"Q1\", \"Q2\", \"Q3\", \"Q4\"]).</li>\n<li><code>salesData</code>: An array of numbers representing the data points for the chart's Y-axis (e.g., [1250, 1800, 1550, 2100]).</li>\n</ul>\n</li>\n<li><strong>Generate Chart:</strong> The QuickChart node is configured to:\n<ul>\n<li>Create a <code>line</code> chart.</li>\n<li>Dynamically read labels from the <code>jsonData.labels</code> array (<code>Labels Mode: From Array</code>).</li>\n<li>Use the <code>jsonData.salesData</code> array as the input data (Note: This configuration places data in the top-level 'Data' field. For more complex charts with multiple datasets or specific dataset options, configure datasets under 'Dataset Options' instead).</li>\n<li>The node outputs the generated chart image as binary data in a field named <code>data</code>.</li>\n</ul>\n</li>\n<li><strong>Upload to Google Drive:</strong> The Google Drive node (<code>Google Drive: Upload File</code>):\n<ul>\n<li>Takes the binary data (<code>data</code>) from the QuickChart node.</li>\n<li>Uploads the image to your specified Google Drive folder.</li>\n<li>Dynamically names the file based on its extension (e.g., <code>chart.png</code>).</li>\n</ul>\n</li>\n</ol>\n<h2>Setup Steps</h2>\n<ol>\n<li><strong>Import:</strong> Import this template into your n8n instance.</li>\n<li><strong>Configure Google Drive Credentials:</strong>\n<ul>\n<li>Select the <code>Google Drive: Upload File</code> node.</li>\n<li>You <strong>MUST</strong> configure your own Google Drive credentials. Click on the 'Credentials' dropdown and either select existing credentials or create new ones by following the authentication prompts.</li>\n</ul>\n</li>\n<li><strong>(Optional) Customize Google Drive Folder:</strong> In the <code>Google Drive: Upload File</code> node, you can change the <code>Drive ID</code> and <code>Folder ID</code> to specify exactly where the chart should be uploaded.</li>\n<li><strong>Activate:</strong> Activate the workflow if you want it to run automatically based on a different trigger.</li>\n</ol>\n<h2>How to Use &amp; Customize</h2>\n<ul>\n<li><strong>Change Input Data:</strong> Modify the <code>labels</code> and <code>salesData</code> arrays within the <code>Edit Fields: Set JSON data to test</code> node to use your own data. Ensure the number of labels matches the number of data points.</li>\n<li><strong>Use Real Data Sources:</strong> Replace the <code>Edit Fields: Set JSON data to test</code> node with nodes that fetch data from real sources like:\n<ul>\n<li>HTTP Request (APIs)</li>\n<li>Postgres / MongoDB nodes (Databases)</li>\n<li>Google Sheets node</li>\n<li>Ensure the output data from your source node is formatted similarly (providing <code>labels</code> and <code>salesData</code> arrays). You might need another Set node to structure the data correctly before the QuickChart node.</li>\n</ul>\n</li>\n<li><strong>Change Chart Type:</strong> In the QuickChart node, modify the <code>Chart Type</code> parameter (e.g., change from <code>line</code> to <code>bar</code>, <code>pie</code>, <code>doughnut</code>, etc.).</li>\n<li><strong>Customize Chart Appearance:</strong> Explore the <code>Chart Options</code> parameter within the QuickChart node to add titles, change colors, modify axes, etc., using QuickChart's standard JSON configuration options.</li>\n<li><strong>Use Datasets (Recommended for Complex Charts):</strong> For multiple lines/bars or more control, configure datasets explicitly in the QuickChart node:\n<ul>\n<li>Remove the expression from the top-level <code>Data</code> field.</li>\n<li>Go to <code>Dataset Options</code> -&gt; <code>Add option</code> -&gt; <code>Add dataset</code>.</li>\n<li>Set the <code>Data</code> field within the dataset using an expression like <code>{{ $json.jsonData.salesData }}</code>.</li>\n<li>You can add multiple datasets this way.</li>\n</ul>\n</li>\n<li><strong>Change Output Destination:</strong> Replace the <code>Google Drive: Upload File</code> node with other nodes to handle the chart image differently:\n<ul>\n<li><code>Write Binary File</code>: Save the chart to the local filesystem where n8n is running.</li>\n<li><code>Slack</code> / <code>Discord</code> / <code>Telegram</code>: Send the chart to messaging platforms.</li>\n<li><code>Move Binary Data</code>: Convert the image to Base64 to embed in HTML or return via webhook response.</li>\n</ul>\n</li>\n</ul>\n<h2>Nodes Used</h2>\n<ul>\n<li>Manual Trigger</li>\n<li>Set</li>\n<li>QuickChart</li>\n<li>Google Drive</li>\n</ul>\n<hr>\n<p><strong>Tags:</strong> (Suggestions for tags field)</p>\n<p><code>QuickChart</code>, <code>Chart</code>, <code>Visualization</code>, <code>Line Chart</code>, <code>Google Drive</code>, <code>Reporting</code>, <code>Automation</code></p>\n<hr>\n</div><!--]-->",
  "readme_zh": "## 该流程有何功能？\n\n此工作流演示了如何基于JSON对象提供的数据，通过QuickChart节点动态生成折线图，并将生成的图表图片上传至Google云端硬盘。\n\n![chart.jpg](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/chart_c6e9377bda.jpg)\n\n## 应用场景\n\n* 可用于演示报告或通过HTTP请求向软件申请生成图表\n* 自动化报告生成（如每日销售图表）\n* 可视化来自API或数据库的数据\n* 简易监控仪表盘\n* 为内部工具或通知添加图表\n\n## 运作原理\n\n1. **触发机制**：点击\"测试工作流\"时手动启动流程\n2. **设置样本数据**：Set节点（`编辑字段：设置测试用JSON数据`）定义名为`jsonData`的样本JSON对象，包含：\n   * `reportTitle`：图表标题（本示例未用于图表生成，但可提供上下文）\n   * `labels`：字符串数组，表示图表X轴标签（如[\"第一季度\",\"第二季度\",\"第三季度\",\"第四季度\"]）\n   * `salesData`：数值数组，表示图表Y轴数据点（如[1250,1800,1550,2100]）\n3. **生成图表**：QuickChart节点配置为：\n   * 创建`折线图`\n   * 动态读取`jsonData.labels`数组的标签（`标签模式：来自数组`）\n   * 使用`jsonData.salesData`数组作为输入数据（注：此配置将数据置于顶层\"数据\"字段。如需多数据集或特定数据集选项，应在\"数据集选项\"下配置）\n   * 节点输出生成的图表二进制数据至名为`data`的字段\n4. **上传至Google云端硬盘**：Google Drive节点（`Google云端硬盘：上传文件`）：\n   * 获取QuickChart节点的二进制数据（`data`）\n   * 将图片上传至指定Google云端硬盘文件夹\n   * 根据文件扩展名动态命名（如`chart.png`）\n\n## 配置步骤\n\n1. **导入**：将此模板导入n8n实例\n2. **配置Google云端硬盘凭证**：\n   * 选择`Google云端硬盘：上传文件`节点\n   * **必须**配置自有Google Drive凭证。点击\"凭证\"下拉菜单，选择现有凭证或按认证提示新建\n3. **（可选）自定义Google云端硬盘文件夹**：在`Google云端硬盘：上传文件`节点中，可修改`云端硬盘ID`和`文件夹ID`指定上传位置\n4. **激活**：如需基于其他触发器自动运行，请激活工作流\n\n## 使用与自定义指南\n\n* **修改输入数据**：在`编辑字段：设置测试用JSON数据`节点中调整`labels`和`salesData`数组。确保标签数量与数据点匹配\n* **使用真实数据源**：可替换Set节点为以下数据获取节点：\n  * HTTP请求（API）\n  * Postgres/MongoDB节点（数据库）\n  * Google表格节点\n  * 需确保源节点输出数据格式相似（提供`labels`和`salesData`数组），可能需额外Set节点预处理数据\n* **更改图表类型**：在QuickChart节点修改`图表类型`参数（如将`line`改为`bar`/`pie`/`doughnut`等）\n* **自定义图表外观**：通过QuickChart节点的`图表选项`参数，使用标准JSON配置添加标题、更改颜色、调整坐标轴等\n* **使用数据集（推荐复杂图表）**：如需多线条/柱状图或更精细控制：\n  * 清除顶层`数据`字段表达式\n  * 进入`数据集选项`→`添加选项`→`添加数据集`\n  * 在数据集内使用`{{ $json.jsonData.salesData }}`等表达式设置`数据`字段\n  * 可依此添加多个数据集\n* **更改输出目标**：可替换Google Drive节点为：\n  * `写入二进制文件`：保存图表至n8n运行所在本地文件系统\n  * `Slack`/`Discord`/`Telegram`：发送图表至通讯平台\n  * `移动二进制数据`：将图片转为Base64嵌入HTML或通过webhook响应返回\n\n## 使用节点\n\n* 手动触发器\n* Set\n* QuickChart\n* Google云端硬盘\n\n* * *\n\n**标签建议**：\n`QuickChart`、`图表`、`可视化`、`折线图`、`Google云端硬盘`、`报告`、`自动化`\n\n* * *",
  "title_zh": "从JSON数据生成动态折线图并上传至Google Drive",
  "publish_date_zh": "上次更新于18天前"
}