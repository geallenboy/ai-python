{
  "title": "Spotify: Discover Weekly Archive",
  "url": "https://n8n.io/workflows/2044-spotify-discover-weekly-archive/",
  "category": "Other",
  "category_url": "https://n8n.io/workflows/categories/other/?sort=createdAt:desc",
  "author": "JYLN",
  "publish_date": "Last update a year ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"dbd383feb42b0206c833e3d762df280d0cce35cf96037fb2d6f3533c171dc540\"},\"nodes\":[{\"id\":\"b605b875-85cf-4210-8027-ce7b9b7069b9\",\"name\":\"CRON\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"notes\":\"Every Monday @ 8:30am\",\"position\":[820,360],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"30 8 * * MON\"}]}},\"notesInFlow\":true,\"typeVersion\":1.1},{\"id\":\"edd9d7b6-9ac4-4acf-8f4b-4cbe943dfd34\",\"name\":\"Get User's Playlists\",\"type\":\"n8n-nodes-base.spotify\",\"position\":[1060,360],\"parameters\":{\"resource\":\"playlist\",\"operation\":\"getUserPlaylists\",\"returnAll\":true},\"credentials\":{\"spotifyOAuth2Api\":{\"id\":\"\",\"name\":\"Placeholder\"}},\"typeVersion\":1},{\"id\":\"98cf8fdc-556a-452a-8df6-16a98c17613e\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"notes\":\"Find Discover and Archive playlist by name\",\"position\":[1280,360],\"parameters\":{\"rules\":{\"rules\":[{\"value2\":\"Discover Weekly\",\"outputKey\":\"disc\"},{\"value2\":\"Discover Weekly Archive\",\"outputKey\":\"arch\"}]},\"value1\":\"={{ $json.name }}\",\"dataType\":\"string\"},\"notesInFlow\":true,\"typeVersion\":2},{\"id\":\"d27ee5c1-86d8-4a6a-adcb-90bf59280550\",\"name\":\"Get Discover Tracks\",\"type\":\"n8n-nodes-base.spotify\",\"position\":[1560,240],\"parameters\":{\"id\":\"={{ $json.uri }}\",\"resource\":\"playlist\",\"operation\":\"getTracks\",\"returnAll\":true},\"credentials\":{\"spotifyOAuth2Api\":{\"id\":\"\",\"name\":\"Placeholder\"}},\"typeVersion\":1},{\"id\":\"e276dce6-d3d2-41a0-96b6-68e115ed198e\",\"name\":\"Get Archive Tracks\",\"type\":\"n8n-nodes-base.spotify\",\"position\":[1560,460],\"parameters\":{\"id\":\"={{ $json.uri }}\",\"resource\":\"playlist\",\"operation\":\"getTracks\",\"returnAll\":true},\"credentials\":{\"spotifyOAuth2Api\":{\"id\":\"\",\"name\":\"Placeholder\"}},\"typeVersion\":1},{\"id\":\"c619085b-424d-4ff5-b3eb-fa0eed05ce0d\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1840,360],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"joinMode\":\"keepNonMatches\",\"mergeByFields\":{\"values\":[{\"field1\":\"track.uri\",\"field2\":\"track.uri\"}]},\"outputDataFrom\":\"input1\"},\"typeVersion\":2.1,\"alwaysOutputData\":true},{\"id\":\"6981f3b3-e1d4-415b-b2c2-d05646271270\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1760,180],\"parameters\":{\"color\":7,\"width\":262,\"height\":354,\"content\":\"#### Purpose\\n\\nCompares tracks using `Combine` operation to output **non-matching** Discover Weekly tracks to ensure that duplicates are not appended to the Archive playlist\"},\"typeVersion\":1},{\"id\":\"65a9ef93-afac-4f86-9203-73e24bcdb500\",\"name\":\"Check if tracks to add is NOT empty\",\"type\":\"n8n-nodes-base.if\",\"position\":[2100,360],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"81f9e3a7-eef0-462c-9d82-db894b19a110\",\"operator\":{\"type\":\"object\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"id\":\"604717ae-90ab-412b-bc83-15399d18c0d4\",\"name\":\"Add tracks to Archive playlist\",\"type\":\"n8n-nodes-base.spotify\",\"position\":[2360,220],\"parameters\":{\"id\":\"={{ $('Switch').all(1).first().json.uri }}\",\"trackID\":\"={{ $json.track.uri }}\",\"resource\":\"playlist\",\"additionalFields\":{}},\"credentials\":{\"spotifyOAuth2Api\":{\"id\":\"\",\"name\":\"Placeholder\"}},\"typeVersion\":1},{\"id\":\"34ddb49e-ebfe-46ff-a348-959befe5e86c\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2580,280],\"parameters\":{\"color\":7,\"width\":634,\"height\":190,\"content\":\"### Do anything else here\\n\\nFor example, in my personal workflow, after the tracks have been added to to my Archive playlist, I send a `POST` request to my self-hosted [NTFY](https://docs.ntfy.sh) server to notify me that my Discover Weekly playlist has refreshed, and I also provide the links to easily open the playlists within the notification that is sent.\\n\\nThe possibilities are endless with n8n!\"},\"typeVersion\":1},{\"id\":\"c5c18f22-2c1f-4e65-83fc-7f89c5e44828\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[820,-418.42807424594014],\"parameters\":{\"color\":4,\"width\":605.1751740139206,\"height\":733.4280742459401,\"content\":\"## README\\n\\nThis workflow will automatically archive your Spotify `Discover Weekly` playlist to a separate playlist. One additional caveat this workflow addresses is it will compare the refreshed `Discover Weekly` tracks against your archive playlist's existing tracks to ensure only unique tracks are added to your archive playlist. This helps reduce clutter within the archive playlist. \\n\\n### Setup Instructions (Required)\\n1. **Within your Spotify account, create a new playlist**\\n  You may name this playlist whatever you like. The default name within the workflow is `Discover Weekly Archive`. If you decide on another name, ensure you update the `Switch` node output with the key of `arch` to the name of the playlist you set.\\n\\n2. **Create your Spotify credential(s) and update each Spotify node with your created credential**\\n  Follow the instructions within the [n8n docs](https://docs.n8n.io/integrations/builtin/credentials/spotify/) to create your Spotify credential, then select the credential in the `Get User's Playlists`, `Get Discover Tracks`, `Get Archive Tracks`, and `Add tracks to Archive playlist` nodes.\\n\\n3. **Activate the workflow to run workflow based on the Cron expression set in the `Schedule` trigger node.**\\n\\n### Optional Setup\\n- Update the Cron expression within the `Schedule` trigger node with an earlier or later time if your `GENERIC_TIMEZONE` is set. You may also consider setting the workflow timezone as well. For assistance with Cron expressions, refer to the [n8n docs](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/#generate-a-custom-cron-expression).\\n- Add nodes to the end of the workflow to send notifications, update a spreadsheet, or any other operation/action you'd like to perform in conjunction with archiving your Discover Weekly tracks\\n- Setup a error workflow to handle any thing that goes wrong within the workflow. You can find an example [here](https://n8n.io/workflows/696-send-email-via-gmail-on-workflow-error/) or more information concerning handling errors within the [n8n docs](https://docs.n8n.io/courses/level-two/chapter-4/).\\n\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"CRON\":{\"main\":[[{\"node\":\"Get User's Playlists\",\"type\":\"main\",\"index\":0}]]},\"Merge\":{\"main\":[[{\"node\":\"Check if tracks to add is NOT empty\",\"type\":\"main\",\"index\":0}]]},\"Switch\":{\"main\":[[{\"node\":\"Get Discover Tracks\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get Archive Tracks\",\"type\":\"main\",\"index\":0}]]},\"Get Archive Tracks\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]},\"Get Discover Tracks\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]},\"Get User's Playlists\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"Check if tracks to add is NOT empty\":{\"main\":[[{\"node\":\"Add tracks to Archive playlist\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This updated workflow will automatically archive your Spotify `Discover Weekly` tracks to another **manually created** playlist, without the nuisance of duplicate tracks. It utilizes the latest verisons of n8n's [`Schedule trigger`](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/), [`Spotify`](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.spotify/), [`Switch`](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/), [`Merge`](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.merge/), and [`IF`](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/) nodes.\n\nSpecial thanks to [trey](https://community.n8n.io/u/trey) for their original version of the workflow, as well as [ihortom](https://community.n8n.io/u/ihortom) for their [help with navigating the `Switch` node's outputs](https://community.n8n.io/t/targeting-previous-switch-node-outputs/34919).\n\n#### To use this workflow, you'll need to:\n\n  * Create a playlist for use as the archive playlist within your Spotify account\n  * Create and select your Spotify credentials within each Spotify node within the workflow\n\n\n\nSee workflow `README` for additional information and optional setup steps.\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>This updated workflow will automatically archive your Spotify <code>Discover Weekly</code> tracks to another <strong>manually created</strong> playlist, without the nuisance of duplicate tracks. It utilizes the latest verisons of n8n's <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/\" rel=\"ugc nofollow\" target=\"_blank\"><code>Schedule trigger</code></a>, <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.spotify/\" rel=\"ugc nofollow\" target=\"_blank\"><code>Spotify</code></a>, <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/\" rel=\"ugc nofollow\" target=\"_blank\"><code>Switch</code></a>, <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.merge/\" rel=\"ugc nofollow\" target=\"_blank\"><code>Merge</code></a>, and <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/\" rel=\"ugc nofollow\" target=\"_blank\"><code>IF</code></a> nodes.</p>\n<p>Special thanks to <a href=\"https://community.n8n.io/u/trey\" rel=\"ugc nofollow\" target=\"_blank\">trey</a> for their original version of the workflow, as well as <a href=\"https://community.n8n.io/u/ihortom\" rel=\"ugc nofollow\" target=\"_blank\">ihortom</a> for their <a href=\"https://community.n8n.io/t/targeting-previous-switch-node-outputs/34919\" rel=\"ugc nofollow\" target=\"_blank\">help with navigating the <code>Switch</code> node's outputs</a>.</p>\n<h4>To use this workflow, you'll need to:</h4>\n<ul>\n<li>Create a playlist for use as the archive playlist within your Spotify account</li>\n<li>Create and select your Spotify credentials within each Spotify node within the workflow</li>\n</ul>\n<p>See workflow <code>README</code> for additional information and optional setup steps.</p>\n</div><!--]-->",
  "readme_zh": "这一更新后的工作流将自动把您的Spotify《每周发现》歌单中的曲目归档至另一个**手动创建**的播放列表，且有效避免重复曲目的困扰。该流程采用了n8n最新版本的[`定时触发器`](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/)、[`Spotify节点`](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.spotify/)、[`条件分支`](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/)、[`数据合并`](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.merge/)以及[`逻辑判断`](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.if/)节点。\n\n特别鸣谢[trey](https://community.n8n.io/u/trey)提供工作流原始版本，以及[ihortom](https://community.n8n.io/u/ihortom)关于[`条件分支节点输出定向`](https://community.n8n.io/t/targeting-previous-switch-node-outputs/34919)的技术支持。\n\n#### 使用本工作流前，您需要：\n\n* 在Spotify账户内预先创建归档用的目标播放列表\n* 在工作流每个Spotify节点中配置并选择您的Spotify认证信息\n\n更多配置说明及可选设置步骤，请参阅工作流`README`文件。",
  "title_zh": "Spotify：每周发现歌单存档",
  "publish_date_zh": "最后一次更新于一年前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"dbd383feb42b0206c833e3d762df280d0cce35cf96037fb2d6f3533c171dc540\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"b605b875-85cf-4210-8027-ce7b9b7069b9\",\n      \"name\": \"CRON\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"notes\": \"Every Monday @ 8:30am\",\n      \"position\": [\n        820,\n        360\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"30 8 * * MON\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"edd9d7b6-9ac4-4acf-8f4b-4cbe943dfd34\",\n      \"name\": \"Get User's Playlists\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        1060,\n        360\n      ],\n      \"parameters\": {\n        \"resource\": \"playlist\",\n        \"operation\": \"getUserPlaylists\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"spotifyOAuth2Api\": {\n          \"id\": \"\",\n          \"name\": \"Placeholder\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"98cf8fdc-556a-452a-8df6-16a98c17613e\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"notes\": \"Find Discover and Archive playlist by name\",\n      \"position\": [\n        1280,\n        360\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"Discover Weekly\",\n              \"outputKey\": \"disc\"\n            },\n            {\n              \"value2\": \"Discover Weekly Archive\",\n              \"outputKey\": \"arch\"\n            }\n          ]\n        },\n        \"value1\": \"={{ $json.name }}\",\n        \"dataType\": \"string\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d27ee5c1-86d8-4a6a-adcb-90bf59280550\",\n      \"name\": \"Get Discover Tracks\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        1560,\n        240\n      ],\n      \"parameters\": {\n        \"id\": \"={{ $json.uri }}\",\n        \"resource\": \"playlist\",\n        \"operation\": \"getTracks\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"spotifyOAuth2Api\": {\n          \"id\": \"\",\n          \"name\": \"Placeholder\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e276dce6-d3d2-41a0-96b6-68e115ed198e\",\n      \"name\": \"Get Archive Tracks\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        1560,\n        460\n      ],\n      \"parameters\": {\n        \"id\": \"={{ $json.uri }}\",\n        \"resource\": \"playlist\",\n        \"operation\": \"getTracks\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"spotifyOAuth2Api\": {\n          \"id\": \"\",\n          \"name\": \"Placeholder\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c619085b-424d-4ff5-b3eb-fa0eed05ce0d\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1840,\n        360\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"joinMode\": \"keepNonMatches\",\n        \"mergeByFields\": {\n          \"values\": [\n            {\n              \"field1\": \"track.uri\",\n              \"field2\": \"track.uri\"\n            }\n          ]\n        },\n        \"outputDataFrom\": \"input1\"\n      },\n      \"typeVersion\": 2.1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"6981f3b3-e1d4-415b-b2c2-d05646271270\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1760,\n        180\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 262,\n        \"height\": 354,\n        \"content\": \"#### 目的\\n\\n通过使用`合并`操作比较曲目，输出**不匹配**的每周发现歌曲，以确保不会将重复内容添加到存档播放列表中。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"65a9ef93-afac-4f86-9203-73e24bcdb500\",\n      \"name\": \"Check if tracks to add is NOT empty\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2100,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"81f9e3a7-eef0-462c-9d82-db894b19a110\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"604717ae-90ab-412b-bc83-15399d18c0d4\",\n      \"name\": \"Add tracks to Archive playlist\",\n      \"type\": \"n8n-nodes-base.spotify\",\n      \"position\": [\n        2360,\n        220\n      ],\n      \"parameters\": {\n        \"id\": \"={{ $('Switch').all(1).first().json.uri }}\",\n        \"trackID\": \"={{ $json.track.uri }}\",\n        \"resource\": \"playlist\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"spotifyOAuth2Api\": {\n          \"id\": \"\",\n          \"name\": \"Placeholder\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"34ddb49e-ebfe-46ff-a348-959befe5e86c\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2580,\n        280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 634,\n        \"height\": 190,\n        \"content\": \"### 在此处执行其他操作\\n\\n例如，在我的个人工作流程中，当曲目被添加到我的存档播放列表后，我会向自托管的[NTFY](https://docs.ntfy.sh)服务器发送一个`POST`请求，通知我\\\"每周发现\\\"播放列表已更新，并在发送的通知中附带快速打开播放列表的链接。\\n\\n借助n8n，可能性是无限的！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c5c18f22-2c1f-4e65-83fc-7f89c5e44828\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        820,\n        -418.42807424594014\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 605.1751740139206,\n        \"height\": 733.4280742459401,\n        \"content\": \"## 使用说明\\n\\n本工作流将自动把您的Spotify《每周发现》歌单归档至独立播放列表。其独特之处在于：每次运行时会比对更新后的《每周发现》曲目与归档列表中现有曲目，确保仅添加未收录的曲目，有效避免归档列表内容重复。\\n\\n### 基础配置（必选项）\\n1. **创建归档播放列表**\\n  在您的Spotify账户中新建播放列表，名称可自定义（工作流默认命名为\\\"Discover Weekly Archive\\\"）。若使用自定义名称，请务必在`Switch`节点中将`arch`键值更新为您设定的播放列表名称。\\n\\n2. **配置Spotify凭证**\\n  参照[n8n官方文档](https://docs.n8n.io/integrations/builtin/credentials/spotify/)创建凭证后，依次在以下节点配置：\\n  - 获取用户播放列表(`Get User's Playlists`)\\n  - 获取发现歌单曲目(`Get Discover Tracks`)\\n  - 获取归档曲目(`Get Archive Tracks`)\\n  - 添加曲目至归档列表(`Add tracks to Archive playlist`)\\n\\n3. **激活定时任务**\\n  根据`Schedule`触发器节点设置的Cron表达式启用工作流自动运行。\\n\\n### 可选配置\\n- **调整执行时间**  \\n  若已设置`GENERIC_TIMEZONE`时区，可修改`Schedule`节点的Cron表达式变更执行时间。工作流时区亦可单独设置，Cron表达式生成指南参见[n8n文档](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/#generate-a-custom-cron-expression)。\\n\\n- **扩展功能**  \\n  可在工作流末端添加节点实现：\\n  - 发送通知\\n  - 更新电子表格\\n  - 其他与归档操作联动的自定义行为\\n\\n- **错误处理**  \\n  建议配置错误处理工作流，参考[邮件报警示例](https://n8n.io/workflows/696-send-email-via-gmail-on-workflow-error/)或查阅[n8n错误处理专题](https://docs.n8n.io/courses/level-two/chapter-4/)。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"CRON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get User's Playlists\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check if tracks to add is NOT empty\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Discover Tracks\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Archive Tracks\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Archive Tracks\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Get Discover Tracks\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get User's Playlists\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check if tracks to add is NOT empty\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add tracks to Archive playlist\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}