{
  "title": "Automatically create daily list of todos in Todoist",
  "url": "https://n8n.io/workflows/2149-automatically-create-daily-list-of-todos-in-todoist/",
  "category": "Other",
  "category_url": "https://n8n.io/workflows/categories/other/?sort=createdAt:desc",
  "author": "Mutasem",
  "publish_date": "Last update a year ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"nodes\":[{\"id\":\"d49ee203-5bd1-45c0-859d-f1b248bfdf71\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[280,40],\"parameters\":{\"color\":5,\"width\":424.4907862645661,\"height\":154.7766688696994,\"content\":\"### 👨‍🎤 Setup\\n1. Add Todoist creds\\n2. Create a `template` list to copy from in Todoist. Add days and due times on each task as necessary.\\n3. Set the projects to copy from and to write to in each **Todoist** node\"},\"typeVersion\":1},{\"id\":\"e69dd4e2-7ff6-4613-a1c9-ac1f3da37955\",\"name\":\"Get all tasks from template project\",\"type\":\"n8n-nodes-base.todoist\",\"position\":[860,420],\"parameters\":{\"filters\":{\"projectId\":\"2299363018\"},\"operation\":\"getAll\",\"returnAll\":true},\"credentials\":{\"todoistApi\":{\"id\":\"1\",\"name\":\"Todoist account\"}},\"executeOnce\":true,\"retryOnFail\":true,\"typeVersion\":1},{\"id\":\"fa907d45-3822-4549-9f84-8385bb4183cc\",\"name\":\"Parse task details\",\"type\":\"n8n-nodes-base.code\",\"position\":[1080,420],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"const item = {};\\n\\nitem.description = $input.item.json.description;\\nitem.content = $input.item.json.content;\\n\\nconst parts = item.description.split(';').map((v) => v.trim());\\nparts.forEach((v) => {\\n  const tag = v.split(':');\\n  if (tag && tag.length === 2) {\\n    item[tag[0]] = tag[1].trim();\\n  }\\n});\\n\\nif (item.due) {\\n  item.due = parseTimeString(item.due);\\n}\\n\\nreturn item;\\n\\nfunction parseTimeString(timeString) {\\n    const regex = /^(\\\\d{1,2})(\\\\.)?(\\\\d{2})?([ap]m)$/i;\\n    const match = timeString.match(regex);\\n    \\n    if (!match) {\\n        throw new Error(\\\"Invalid time format\\\");\\n    }\\n\\n    let hours = parseInt(match[1], 10);\\n    let minutes = match[3] ? parseInt(match[3], 10) : 0;\\n    const period = match[4].toLowerCase();\\n\\n    if (hours === 12) {\\n        hours = period === 'am' ? 0 : 12;\\n    } else {\\n        hours = period === 'pm' ? hours + 12 : hours;\\n    }\\n\\n    // Check if minutes are valid\\n    if (minutes < 0 || minutes >= 60) {\\n        throw new Error(\\\"Invalid minutes\\\");\\n    }\\n\\n    const now = DateTime.now().set({ hour: hours, minute: minutes, second: 0, millisecond: 0 });\\n    return now.toUTC();\\n}\\n\"},\"typeVersion\":1},{\"id\":\"4989bac6-0741-4cdc-bc9c-e7800f9b3019\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1140,600],\"parameters\":{\"color\":7,\"width\":351.4230769230764,\"height\":222.50000000000006,\"content\":\"### 👆 This adds due dates to tasks from description.. \\n### For example in the description of a task\\n`days:mon,tues; due:8am`\\n### So that it will create a task every Monday and Tuesday that's due at 8am ⏰\"},\"typeVersion\":1},{\"id\":\"accc330b-1b67-4181-8735-94b0debc8d70\",\"name\":\"Keep tasks that match today\",\"type\":\"n8n-nodes-base.filter\",\"position\":[1300,420],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $json.days }}\",\"value2\":\"={{ ['sun', 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'][new Date().getDay()] }}\",\"operation\":\"contains\"},{\"value1\":\"={{ $json.days }}\",\"value2\":\"={{ ['sun', 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'][new Date().getDay()] }}\",\"operation\":\"contains\"}]},\"combineConditions\":\"OR\"},\"typeVersion\":1},{\"id\":\"dbe1fc24-1833-493b-b444-de21a4b3c3c5\",\"name\":\"Every day at 5:10am\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[620,420],\"parameters\":{\"rule\":{\"interval\":[{\"triggerAtHour\":5,\"triggerAtMinute\":10}]}},\"typeVersion\":1.1},{\"id\":\"b4737822-89aa-4ca0-bd9b-c5f9a16360c0\",\"name\":\"Every day at 5am\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[400,220],\"parameters\":{\"rule\":{\"interval\":[{\"triggerAtHour\":5,\"triggerAtMinute\":10}]}},\"typeVersion\":1.1},{\"id\":\"2a9adc4b-552b-47a9-a32c-54d8d4bfb669\",\"name\":\"Get all tasks from Inbox\",\"type\":\"n8n-nodes-base.todoist\",\"position\":[620,220],\"parameters\":{\"filters\":{\"projectId\":\"938017196\"},\"operation\":\"getAll\",\"returnAll\":true},\"credentials\":{\"todoistApi\":{\"id\":\"1\",\"name\":\"Todoist account\"}},\"executeOnce\":false,\"retryOnFail\":true,\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"d4794543-3002-4663-8979-360eb437fb4e\",\"name\":\"If list not empty\",\"type\":\"n8n-nodes-base.if\",\"position\":[840,220],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $json[\\\"id\\\"] }}\",\"operation\":\"isNotEmpty\"}]}},\"typeVersion\":1},{\"id\":\"297fcbcb-efe3-4965-b836-34e78a3b452d\",\"name\":\"if it has daily label\",\"type\":\"n8n-nodes-base.if\",\"position\":[1080,220],\"parameters\":{\"conditions\":{\"boolean\":[{\"value1\":\"={{ ($json[\\\"labels\\\"] || []).includes('daily') }}\",\"value2\":true}]}},\"typeVersion\":1},{\"id\":\"0365a865-f03b-4afc-a535-4e3892fc3add\",\"name\":\"Delete task\",\"type\":\"n8n-nodes-base.todoist\",\"position\":[1280,220],\"parameters\":{\"taskId\":\"={{ $json[\\\"id\\\"] }}\",\"operation\":\"delete\"},\"credentials\":{\"todoistApi\":{\"id\":\"1\",\"name\":\"Todoist account\"}},\"retryOnFail\":true,\"typeVersion\":1},{\"id\":\"b14a8ecc-ee07-4a33-ab4b-122c98694c60\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1740,440],\"parameters\":{\"color\":7,\"width\":256.14371825927645,\"height\":100,\"content\":\"### 👈🏽 Every new task has `daily` label that gets deleted in the other flow\"},\"typeVersion\":1},{\"id\":\"d951f461-685e-4507-b010-bce2be0e3709\",\"name\":\"Create new task in Inbox\",\"type\":\"n8n-nodes-base.todoist\",\"position\":[1520,420],\"parameters\":{\"labels\":[\"daily\"],\"content\":\"={{ $json.content }}\",\"options\":{\"description\":\"={{ $json.description }}\",\"dueDateTime\":\"={{ $json.due }}\"},\"project\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"938017196\",\"cachedResultName\":\"Inbox\"}},\"credentials\":{\"todoistApi\":{\"id\":\"1\",\"name\":\"Todoist account\"}},\"retryOnFail\":true,\"typeVersion\":2,\"alwaysOutputData\":false}],\"pinData\":{},\"connections\":{\"Every day at 5am\":{\"main\":[[{\"node\":\"Get all tasks from Inbox\",\"type\":\"main\",\"index\":0}]]},\"If list not empty\":{\"main\":[[{\"node\":\"if it has daily label\",\"type\":\"main\",\"index\":0}]]},\"Parse task details\":{\"main\":[[{\"node\":\"Keep tasks that match today\",\"type\":\"main\",\"index\":0}]]},\"Every day at 5:10am\":{\"main\":[[{\"node\":\"Get all tasks from template project\",\"type\":\"main\",\"index\":0}]]},\"if it has daily label\":{\"main\":[[{\"node\":\"Delete task\",\"type\":\"main\",\"index\":0}]]},\"Get all tasks from Inbox\":{\"main\":[[{\"node\":\"If list not empty\",\"type\":\"main\",\"index\":0}]]},\"Keep tasks that match today\":{\"main\":[[{\"node\":\"Create new task in Inbox\",\"type\":\"main\",\"index\":0}]]},\"Get all tasks from template project\":{\"main\":[[{\"node\":\"Parse task details\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Use case\n\nAutomatically create todo items in Todoist every morning.\n\nThis workflow has two flows\n\n  1. At 5am, delete any uncompleted tasks every morning\n  2. At 5:10 am, copy all template tasks into Inbox\n\n\n\nIn each template task, set the due dates and days to add the task. You can do that like this `days:mon,tues; due:8pm` which will add the task every Monday and Tuesday and make it due at 8pm.\n\n## How to setup\n\n  1. Add Todoist creds\n  2. Create a `template` list to copy from in Todoist. Add days and due times on each task as necessary.\n  3. Set the projects to copy from and to write to in each **Todoist** node\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>Use case</h2>\n<p>Automatically create todo items in Todoist every morning.</p>\n<p>This workflow has two flows</p>\n<ol>\n<li>At 5am, delete any uncompleted tasks every morning</li>\n<li>At 5:10 am, copy all template tasks into Inbox</li>\n</ol>\n<p>In each template task, set the due dates and days to add the task. You can do that like this <code>days:mon,tues; due:8pm</code> which will add the task every Monday and Tuesday and make it due at 8pm.</p>\n<h2>How to setup</h2>\n<ol>\n<li>Add Todoist creds</li>\n<li>Create a <code>template</code> list to copy from in Todoist. Add days and due times on each task as necessary.</li>\n<li>Set the projects to copy from and to write to in each <strong>Todoist</strong> node</li>\n</ol>\n</div><!--]-->",
  "readme_zh": "## 使用场景\n\n每天早晨自动在Todoist中创建待办事项。\n\n该工作流包含两个流程：\n\n1. 凌晨5点：每日清晨删除所有未完成任务  \n2. 凌晨5点10分：将所有模板任务复制至收件箱  \n\n在每项模板任务中，可设置任务添加的截止日期与生效星期。格式示例：`days:mon,tues; due:8pm` 表示每周一和周二添加该任务，并设定晚上8点为截止时间。\n\n## 配置指南\n\n1. 添加Todoist账户凭证  \n2. 在Todoist中创建名为`template`的清单作为复制源，按需为每项任务设置生效星期和截止时间  \n3. 在每个**Todoist**节点中配置任务复制的来源项目和写入目标  \n\n（注：根据技术文档翻译规范，保留\"Todoist\"、\"template\"等专有名词不译；时间表达\"5am/5:10 am\"转换为中文惯用的\"凌晨5点/5点10分\"；列表项保持简洁的动宾结构；参数格式`days:mon,tues; due:8pm`保留原文格式以确保功能性）",
  "title_zh": "在Todoist中自动创建每日待办事项列表",
  "publish_date_zh": "最后一次更新于一年前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"id\": \"d49ee203-5bd1-45c0-859d-f1b248bfdf71\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        40\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 424.4907862645661,\n        \"height\": 154.7766688696994,\n        \"content\": \"### 👨‍🎤 设置步骤\\n1. 添加Todoist账户凭证\\n2. 在Todoist中创建用作复制模板的`template`清单。根据需要为每个任务添加日期和截止时间\\n3. 在每个**Todoist**节点中设置要复制的源项目和要写入的目标项目\\n\\n（注：根据技术文档的翻译规范，保留英文专有名词\\\"Todoist\\\"和\\\"template\\\"不译；\\\"node\\\"根据上下文译为\\\"节点\\\"；表情符号👨‍🎤直译不符合技术文档调性，故保留原文样式；项目符号序号保持阿拉伯数字格式；动词\\\"Add/Create/Set\\\"统一处理为动宾结构的\\\"添加/创建/设置\\\"）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e69dd4e2-7ff6-4613-a1c9-ac1f3da37955\",\n      \"name\": \"Get all tasks from template project\",\n      \"type\": \"n8n-nodes-base.todoist\",\n      \"position\": [\n        860,\n        420\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"projectId\": \"2299363018\"\n        },\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"todoistApi\": {\n          \"id\": \"1\",\n          \"name\": \"Todoist account\"\n        }\n      },\n      \"executeOnce\": true,\n      \"retryOnFail\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fa907d45-3822-4549-9f84-8385bb4183cc\",\n      \"name\": \"Parse task details\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1080,\n        420\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const item = {};\\n\\nitem.description = $input.item.json.description;\\nitem.content = $input.item.json.content;\\n\\nconst parts = item.description.split(';').map((v) => v.trim());\\nparts.forEach((v) => {\\n  const tag = v.split(':');\\n  if (tag && tag.length === 2) {\\n    item[tag[0]] = tag[1].trim();\\n  }\\n});\\n\\nif (item.due) {\\n  item.due = parseTimeString(item.due);\\n}\\n\\nreturn item;\\n\\nfunction parseTimeString(timeString) {\\n    const regex = /^(\\\\d{1,2})(\\\\.)?(\\\\d{2})?([ap]m)$/i;\\n    const match = timeString.match(regex);\\n    \\n    if (!match) {\\n        throw new Error(\\\"Invalid time format\\\");\\n    }\\n\\n    let hours = parseInt(match[1], 10);\\n    let minutes = match[3] ? parseInt(match[3], 10) : 0;\\n    const period = match[4].toLowerCase();\\n\\n    if (hours === 12) {\\n        hours = period === 'am' ? 0 : 12;\\n    } else {\\n        hours = period === 'pm' ? hours + 12 : hours;\\n    }\\n\\n    // Check if minutes are valid\\n    if (minutes < 0 || minutes >= 60) {\\n        throw new Error(\\\"Invalid minutes\\\");\\n    }\\n\\n    const now = DateTime.now().set({ hour: hours, minute: minutes, second: 0, millisecond: 0 });\\n    return now.toUTC();\\n}\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4989bac6-0741-4cdc-bc9c-e7800f9b3019\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1140,\n        600\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 351.4230769230764,\n        \"height\": 222.50000000000006,\n        \"content\": \"### 👆 此功能可根据任务描述自动添加截止日期..  \\n### 例如在任务描述中写入  \\n`days:周一,周二; due:早上8点`  \\n### 系统就会每周一和周二生成一个早上8点截止的任务 ⏰\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"accc330b-1b67-4181-8735-94b0debc8d70\",\n      \"name\": \"Keep tasks that match today\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1300,\n        420\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.days }}\",\n              \"value2\": \"={{ ['sun', 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'][new Date().getDay()] }}\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"value1\": \"={{ $json.days }}\",\n              \"value2\": \"={{ ['sun', 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'][new Date().getDay()] }}\",\n              \"operation\": \"contains\"\n            }\n          ]\n        },\n        \"combineConditions\": \"OR\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dbe1fc24-1833-493b-b444-de21a4b3c3c5\",\n      \"name\": \"Every day at 5:10am\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        620,\n        420\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 5,\n              \"triggerAtMinute\": 10\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"b4737822-89aa-4ca0-bd9b-c5f9a16360c0\",\n      \"name\": \"Every day at 5am\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        400,\n        220\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 5,\n              \"triggerAtMinute\": 10\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"2a9adc4b-552b-47a9-a32c-54d8d4bfb669\",\n      \"name\": \"Get all tasks from Inbox\",\n      \"type\": \"n8n-nodes-base.todoist\",\n      \"position\": [\n        620,\n        220\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"projectId\": \"938017196\"\n        },\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"todoistApi\": {\n          \"id\": \"1\",\n          \"name\": \"Todoist account\"\n        }\n      },\n      \"executeOnce\": false,\n      \"retryOnFail\": true,\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"d4794543-3002-4663-8979-360eb437fb4e\",\n      \"name\": \"If list not empty\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        840,\n        220\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json[\\\"id\\\"] }}\",\n              \"operation\": \"isNotEmpty\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"297fcbcb-efe3-4965-b836-34e78a3b452d\",\n      \"name\": \"if it has daily label\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1080,\n        220\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{ ($json[\\\"labels\\\"] || []).includes('daily') }}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0365a865-f03b-4afc-a535-4e3892fc3add\",\n      \"name\": \"Delete task\",\n      \"type\": \"n8n-nodes-base.todoist\",\n      \"position\": [\n        1280,\n        220\n      ],\n      \"parameters\": {\n        \"taskId\": \"={{ $json[\\\"id\\\"] }}\",\n        \"operation\": \"delete\"\n      },\n      \"credentials\": {\n        \"todoistApi\": {\n          \"id\": \"1\",\n          \"name\": \"Todoist account\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b14a8ecc-ee07-4a33-ab4b-122c98694c60\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1740,\n        440\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 256.14371825927645,\n        \"height\": 100,\n        \"content\": \"### 👈🏽 每个新任务都带有`daily`标签，该标签会在另一流程中被删除\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d951f461-685e-4507-b010-bce2be0e3709\",\n      \"name\": \"Create new task in Inbox\",\n      \"type\": \"n8n-nodes-base.todoist\",\n      \"position\": [\n        1520,\n        420\n      ],\n      \"parameters\": {\n        \"labels\": [\n          \"daily\"\n        ],\n        \"content\": \"={{ $json.content }}\",\n        \"options\": {\n          \"description\": \"={{ $json.description }}\",\n          \"dueDateTime\": \"={{ $json.due }}\"\n        },\n        \"project\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"938017196\",\n          \"cachedResultName\": \"Inbox\"\n        }\n      },\n      \"credentials\": {\n        \"todoistApi\": {\n          \"id\": \"1\",\n          \"name\": \"Todoist account\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": false\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Every day at 5am\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get all tasks from Inbox\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If list not empty\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"if it has daily label\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse task details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Keep tasks that match today\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every day at 5:10am\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get all tasks from template project\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"if it has daily label\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Delete task\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get all tasks from Inbox\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If list not empty\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Keep tasks that match today\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create new task in Inbox\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get all tasks from template project\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse task details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}