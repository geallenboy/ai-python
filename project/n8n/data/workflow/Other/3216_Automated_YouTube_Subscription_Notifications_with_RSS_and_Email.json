{
  "title": "Automated YouTube Subscription Notifications with RSS and Email",
  "url": "https://n8n.io/workflows/3216-automated-youtube-subscription-notifications-with-rss-and-email/",
  "category": "Other",
  "category_url": "https://n8n.io/workflows/categories/other/?sort=createdAt:desc",
  "author": "Sweenu",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"4a8c4d3ed2f4423694f8ac022d1c321551900c7ab47e0c03549acecec1ab4a89\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"a5292068-5ace-4372-9869-46100ae81b8f\",\"name\":\"Get video details\",\"type\":\"n8n-nodes-base.youTube\",\"notes\":\"Make a call to the YouTube API so that we have the thumbnail for the email and the duration to filter out shorts.\",\"position\":[1000,-60],\"parameters\":{\"part\":[\"contentDetails\",\"snippet\",\"id\"],\"options\":{},\"videoId\":\"={{ $json.id.replace(\\\"yt:video:\\\", \\\"\\\") }}\",\"resource\":\"video\",\"operation\":\"get\"},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"5lD8Hahvq4r7Og0F\",\"name\":\"YouTube account\"}},\"typeVersion\":1},{\"id\":\"b9eb34aa-90c4-492a-a33e-37a32812fa32\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-840,-160],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"hours\",\"hoursInterval\":1,\"triggerAtMinute\":47}]}},\"typeVersion\":1.2},{\"id\":\"8f0dbe74-53e5-4b14-86f6-eb0f502c8471\",\"name\":\"Filter out shorts\",\"type\":\"n8n-nodes-base.if\",\"notes\":\"Sometime, some live broadcasts that are then posted as regular videos do not have a duration. That is why we check if `duration` is present in `contentDetails`.\",\"position\":[1180,-60],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":1,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"5342ecc0-d764-4bef-8161-d1f571fcb931\",\"operator\":{\"type\":\"string\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.contentDetails.duration }}\",\"rightValue\":\"\\\"duration\\\"\"},{\"id\":\"b82e3373-a28b-49bd-afa0-4f48cafe2bfe\",\"operator\":{\"type\":\"number\",\"operation\":\"gt\"},\"leftValue\":\"={{ Duration.fromISO($json.contentDetails.duration).as('seconds') }}\",\"rightValue\":61}]}},\"notesInFlow\":false,\"typeVersion\":2},{\"id\":\"14d54ed0-f5c0-4992-af56-0af2d8973963\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-900,-340],\"parameters\":{\"color\":7,\"width\":220,\"height\":460,\"content\":\"### Default frequency: every hour\\nChanging it here is enough if you want to check for new videos at a higher or lower frequency. You don't have to edit anything else.\"},\"typeVersion\":1},{\"id\":\"c4acbb10-1f57-4934-a324-f26d0532767c\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-660,-340],\"parameters\":{\"color\":5,\"width\":880,\"height\":460,\"content\":\"### Get my subscriptions from the YouTube Data v3 API\\nYou can expect to use 1 quota per 50 subscriptions per run, which is well within the 10 000/req a day allowed by default.\"},\"typeVersion\":1},{\"id\":\"4ae2d2f3-53b5-4431-90d8-06e41a6950e2\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[480,-160],\"parameters\":{\"color\":4,\"width\":440,\"height\":280,\"content\":\"### Get the 15 latest videos of each channel with RSS\\nUsing the YouTube API instead would cost too many quotas to make it viable.\"},\"typeVersion\":1},{\"id\":\"48894d79-7e59-49fc-beb5-445fb5ca2ff6\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[940,-160],\"parameters\":{\"color\":3,\"width\":400,\"height\":280,\"content\":\"### Call YouTube's API for more data\\nWe need the thumbnails for the email and the duration to filter out shorts.\"},\"typeVersion\":1},{\"id\":\"e3da3f97-138c-481e-a763-9a3c9e402928\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1360,-160],\"parameters\":{\"color\":6,\"width\":260,\"height\":280,\"content\":\"### Configure your email here\\nTo go to the video from the email, simply click on the thumbnail.\"},\"typeVersion\":1},{\"id\":\"0d092c3d-b2e1-4468-a044-c6cf0f37672b\",\"name\":\"Get latest 15 videos of each channel\",\"type\":\"n8n-nodes-base.rssFeedRead\",\"notes\":\"YouTube provides an RSS feed for each channel with the 15 latest videos.\\nWe use this instead of the YouTube Data v3 API, as search requests cost a lot of \\\"quota points\\\" and would easily put us over the daily limit with just one workflow run.\",\"position\":[540,-60],\"parameters\":{\"url\":\"=https://www.youtube.com/feeds/videos.xml?channel_id={{ $json.snippet.resourceId.channelId }}\",\"options\":{}},\"typeVersion\":1.1},{\"id\":\"34823384-d8a5-415a-87ff-203d65aa9a75\",\"name\":\"Get my subscriptions\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"Get subscriptions from YouTube Data v3 API\",\"position\":[-600,-160],\"parameters\":{\"url\":\"https://www.googleapis.com/youtube/v3/subscriptions\",\"options\":{\"pagination\":{\"pagination\":{\"parameters\":{\"parameters\":[{\"name\":\"pageToken\",\"value\":\"={{ $response.body.nextPageToken }}\"}]},\"completeExpression\":\"={{ !('nextPageToken' in $response.body) }}\",\"paginationCompleteWhen\":\"other\"}}},\"sendQuery\":true,\"authentication\":\"predefinedCredentialType\",\"queryParameters\":{\"parameters\":[{\"name\":\"mine\",\"value\":\"true\"},{\"name\":\"part\",\"value\":\"snippet,contentDetails\"},{\"name\":\"maxResults\",\"value\":\"50\"}]},\"nodeCredentialType\":\"youTubeOAuth2Api\"},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"5lD8Hahvq4r7Og0F\",\"name\":\"YouTube account\"}},\"notesInFlow\":true,\"typeVersion\":4.2},{\"id\":\"534e38f3-ac40-4194-8821-5926ee581605\",\"name\":\"Check for errors\",\"type\":\"n8n-nodes-base.if\",\"position\":[-400,-160],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"5972ff90-aa5a-470c-aa96-87138eb60565\",\"operator\":{\"type\":\"object\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.error }}\",\"rightValue\":\"error\"}]}},\"typeVersion\":2.2},{\"id\":\"2d872c0f-30b9-4ffc-aba0-6644bf05d7bb\",\"name\":\"Only keep channels with unwatched videos\",\"type\":\"n8n-nodes-base.filter\",\"notes\":\"It's not a perfect indicator for new videos but helps reduce the amount of channels to process.\",\"position\":[40,-60],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"4734ee8c-1655-47be-bd45-a9527aee2833\",\"operator\":{\"type\":\"number\",\"operation\":\"gt\"},\"leftValue\":\"={{ $json.contentDetails.newItemCount }}\",\"rightValue\":0}]}},\"typeVersion\":2.2},{\"id\":\"c7bd97ec-47c1-40b4-955d-bf89d3cde330\",\"name\":\"Keep only videos published since last run\",\"type\":\"n8n-nodes-base.filter\",\"notes\":\"We dynamically figure out the last run's execution time through the settings of the \\\"Schedule Trigger\\\" node.\",\"position\":[740,-60],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"65d905a2-c89e-41f3-a2cf-0d1a76c48d8e\",\"operator\":{\"type\":\"dateTime\",\"operation\":\"after\"},\"leftValue\":\"={{ $json.pubDate.toDateTime() }}\",\"rightValue\":\"={{ \\n  $('Schedule Trigger').item.json.timestamp.toDateTime().minus(\\n    $('Schedule Trigger').params.rule.interval[0].hoursInterval,\\n    $('Schedule Trigger').params.rule.interval[0].field\\n  ).toISO()\\n}}\"}]}},\"typeVersion\":2.2},{\"id\":\"72341b1f-a391-4210-b3ca-4e74ae1f2e1b\",\"name\":\"Send an email for each new video\",\"type\":\"n8n-nodes-base.emailSend\",\"notes\":\"The expression in the HTML for the thumbnail simply selects the last element of the thumbnails array so that we get the best possible resolution thumbnail available.\",\"position\":[1440,-60],\"webhookId\":\"44bf0e95-98e5-4b5b-a7c5-c802379ab3b0\",\"parameters\":{\"html\":\"=<h1 style=\\\"text-align: center;\\\">{{ $json.snippet.title }}</h1>\\n<a href=\\\"https://www.youtube.com/watch?v={{ $json.id }}\\\">\\n  <img src=\\\"{{ $json.snippet.thumbnails[Object.keys($json.snippet.thumbnails)[Object.keys($json.snippet.thumbnails).length - 1]].url }}\\\" alt=\\\"Watch on YouTube\\\" style=\\\"width:100%; height:auto; max-width:640px; display:block; margin: 10px auto;\\\">\\n</a>\",\"options\":{\"appendAttribution\":false},\"subject\":\"={{ $json.snippet.channelTitle }}\",\"toEmail\":\"My Name <to@email.com>\",\"fromEmail\":\"YouTube <from@email.com>\"},\"credentials\":{\"smtp\":{\"id\":\"ThrKm6bLUg1owKn1\",\"name\":\"SMTP account\"}},\"notesInFlow\":false,\"typeVersion\":2.1},{\"id\":\"b82cfbd5-71e3-418f-9b6d-6d0ec007733a\",\"name\":\"If the HTTP request failed, throw the error\",\"type\":\"n8n-nodes-base.stopAndError\",\"position\":[-180,-260],\"parameters\":{\"errorMessage\":\"=Status code: {{ $json.error.code }}\\nMessage: {{ $json.error.message }}\"},\"typeVersion\":1},{\"id\":\"e89eca92-896f-46b5-8a4b-149d51682faa\",\"name\":\"Split out subscriptions to process individually\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[-180,-60],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"items\"},\"typeVersion\":1},{\"id\":\"0e00fda6-1489-4c1a-8205-22e620a554c5\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[240,-240],\"parameters\":{\"width\":220,\"height\":360,\"content\":\"## Manually filter out channels\\nTo find the channel ID of a channel, click on the description → Share channel → Copy channel ID\"},\"typeVersion\":1},{\"id\":\"bcc2e57c-23b2-42b7-81ab-cdd88b70b8a3\",\"name\":\"Filter out channels\",\"type\":\"n8n-nodes-base.filter\",\"notes\":\"Optional step\",\"position\":[300,-60],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"b27b14a9-c86c-4ebd-8a0f-4e7db722796e\",\"operator\":{\"type\":\"array\",\"operation\":\"notContains\",\"rightType\":\"any\"},\"leftValue\":\"={{[\\n  \\\"exampleChannelId1\\\",\\n  \\\"exampleChannelId2\\\"\\n]}}\",\"rightValue\":\"={{ $json.snippet.resourceId.channelId }}\"}]}},\"notesInFlow\":true,\"typeVersion\":2.2}],\"pinData\":{},\"connections\":{\"Check for errors\":{\"main\":[[{\"node\":\"If the HTTP request failed, throw the error\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Split out subscriptions to process individually\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Get my subscriptions\",\"type\":\"main\",\"index\":0}]]},\"Filter out shorts\":{\"main\":[[{\"node\":\"Send an email for each new video\",\"type\":\"main\",\"index\":0}],[]]},\"Get video details\":{\"main\":[[{\"node\":\"Filter out shorts\",\"type\":\"main\",\"index\":0}]]},\"Filter out channels\":{\"main\":[[{\"node\":\"Get latest 15 videos of each channel\",\"type\":\"main\",\"index\":0}]]},\"Get my subscriptions\":{\"main\":[[{\"node\":\"Check for errors\",\"type\":\"main\",\"index\":0}]]},\"Send an email for each new video\":{\"main\":[[]]},\"Get latest 15 videos of each channel\":{\"main\":[[{\"node\":\"Keep only videos published since last run\",\"type\":\"main\",\"index\":0}]]},\"Only keep channels with unwatched videos\":{\"main\":[[{\"node\":\"Filter out channels\",\"type\":\"main\",\"index\":0}]]},\"Keep only videos published since last run\":{\"main\":[[{\"node\":\"Get video details\",\"type\":\"main\",\"index\":0}]]},\"Split out subscriptions to process individually\":{\"main\":[[{\"node\":\"Only keep channels with unwatched videos\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Who is this template for?\n\nYou are in the bad habit of always checking your feed to see if there are new videos? This workflow will help you get rid of this habit by delivering an email notification for each new video posted from the channels you are subscribed to. No need to check your feed again: no email = no new video.\n\n### Example email\n\n![YouTube n8n.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/You_Tube_n8n_5717ff1069.png)\n\n## How it works\n\nEvery hour (by default), we:\n\n  * Fetch all your YouTube subscriptions from the YouTube Data v3 API.\n  * Get a list of the latest videos of each channel through RSS (we don't use YouTube's API for this step as it would put us over the daily quota).\n  * Send you a simple yet beautiful email for each new video that was published since the last run of the workflow. To go to the video, simply click on the thumbnail.\n\n\n\n### Caveats\n\nBecause of the way this workflow is implemented, if your n8n instance stops, you will not get emails for the videos you missed when your instance is back online.  \nThe situation could be improved if n8n gave us an easy way to access the last successful execution's timestamp.\n\n## Set up instructions\n\n  1. Complete the `Set up credentials` step when you first open the workflow. You'll need YouTube OAuth2 API and SMTP credentials.\n  2. In the `Send an email for each new video` step, set the email address from which the email will be sent (an email address that your SMTP credentials allow sending from) and the email address to which you are going to send the email to (can be the same).\n\n\n\n### Optional steps\n\n  1. From the `Schedule Trigger` step, you can change the check frequency (default: every hour).\n  2. If there are channels that you do not want notifications from, you can add their channel ID to the list in the `Filter out channels` step.  \nTo get a channel's ID, go to its main page, click on the description, then \"Share channel\" and finally \"Copy channel ID\".\n  3. By default, shorts are excluded. But if you want them, simply remove the `Filter out shorts` step from the workflow.\n\n\n\nTemplate was created in n8n v1.84.0\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h2>Who is this template for?</h2>\n<p>You are in the bad habit of always checking your feed to see if there are new videos? This workflow will help you get rid of this habit by delivering an email notification for each new video posted from the channels you are subscribed to. No need to check your feed again: no email = no new video.</p>\n<h3>Example email</h3>\n<p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/You_Tube_n8n_5717ff1069.png\" alt=\"YouTube n8n.png\"></p>\n<h2>How it works</h2>\n<p>Every hour (by default), we:</p>\n<ul>\n<li>Fetch all your YouTube subscriptions from the YouTube Data v3 API.</li>\n<li>Get a list of the latest videos of each channel through RSS (we don't use YouTube's API for this step as it would put us over the daily quota).</li>\n<li>Send you a simple yet beautiful email for each new video that was published since the last run of the workflow. To go to the video, simply click on the thumbnail.</li>\n</ul>\n<h3>Caveats</h3>\n<p>Because of the way this workflow is implemented, if your n8n instance stops, you will not get emails for the videos you missed when your instance is back online.<br>\nThe situation could be improved if n8n gave us an easy way to access the last successful execution's timestamp.</p>\n<h2>Set up instructions</h2>\n<ol>\n<li>Complete the <code>Set up credentials</code> step when you first open the workflow. You'll need YouTube OAuth2 API and SMTP credentials.</li>\n<li>In the <code>Send an email for each new video</code> step, set the email address from which the email will be sent (an email address that your SMTP credentials allow sending from) and the email address to which you are going to send the email to (can be the same).</li>\n</ol>\n<h3>Optional steps</h3>\n<ol>\n<li>From the <code>Schedule Trigger</code> step, you can change the check frequency (default: every hour).</li>\n<li>If there are channels that you do not want notifications from, you can add their channel ID to the list in the <code>Filter out channels</code> step.<br>\nTo get a channel's ID, go to its main page, click on the description, then \"Share channel\" and finally \"Copy channel ID\".</li>\n<li>By default, shorts are excluded. But if you want them, simply remove the <code>Filter out shorts</code> step from the workflow.</li>\n</ol>\n<p>Template was created in n8n v1.84.0</p>\n</div><!--]-->",
  "readme_zh": "## 模板适用对象\n\n你是否养成了总爱刷新动态页查看新视频的坏习惯？本工作流将通过为你订阅的频道每发布一个新视频时发送邮件通知，助你戒除这一习惯。无需再反复查看动态页：没有邮件=没有新视频。\n\n### 邮件示例\n\n![YouTube n8n.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/You_Tube_n8n_5717ff1069.png)\n\n## 运作原理\n\n默认每小时会执行以下操作：\n\n* 通过YouTube Data v3 API获取你所有的YouTube订阅频道\n* 通过RSS获取每个频道的最新视频列表（此步骤不使用YouTube API以避免超出每日配额限制）\n* 为自上次工作流运行后新发布的每个视频发送简洁美观的邮件通知。点击缩略图即可跳转观看视频\n\n### 注意事项\n\n由于实现机制限制，若n8n实例停止运行，在实例恢复后将不会补发停机期间错过的视频通知邮件。  \n若n8n能提供获取最近成功执行时间戳的便捷方式，此情况将得到改善。\n\n## 设置指南\n\n1. 首次打开工作流时完成`设置凭证`步骤，需配置YouTube OAuth2 API和SMTP凭证\n2. 在`为每个新视频发送邮件`步骤中，设置发件邮箱（需SMTP凭证授权的邮箱地址）和收件邮箱（可与发件邮箱相同）\n\n### 可选配置\n\n1. 通过`计划触发器`步骤可调整检查频率（默认每小时一次）\n2. 若需屏蔽特定频道的通知，可在`过滤频道`步骤中添加对应频道ID  \n获取频道ID方法：进入频道主页 → 点击简介 → 选择\"分享频道\" → 点击\"复制频道ID\"\n3. 默认排除短视频内容，如需接收请移除工作流中的`过滤短视频`步骤\n\n本模板创建于n8n v1.84.0版本",
  "title_zh": "Automated YouTube Subscription Notifications with RSS and Email",
  "publish_date_zh": "上次更新于一个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"4a8c4d3ed2f4423694f8ac022d1c321551900c7ab47e0c03549acecec1ab4a89\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"a5292068-5ace-4372-9869-46100ae81b8f\",\n      \"name\": \"Get video details\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"notes\": \"Make a call to the YouTube API so that we have the thumbnail for the email and the duration to filter out shorts.\",\n      \"position\": [\n        1000,\n        -60\n      ],\n      \"parameters\": {\n        \"part\": [\n          \"contentDetails\",\n          \"snippet\",\n          \"id\"\n        ],\n        \"options\": {},\n        \"videoId\": \"={{ $json.id.replace(\\\"yt:video:\\\", \\\"\\\") }}\",\n        \"resource\": \"video\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"5lD8Hahvq4r7Og0F\",\n          \"name\": \"YouTube account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b9eb34aa-90c4-492a-a33e-37a32812fa32\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -840,\n        -160\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"hours\",\n              \"hoursInterval\": 1,\n              \"triggerAtMinute\": 47\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8f0dbe74-53e5-4b14-86f6-eb0f502c8471\",\n      \"name\": \"Filter out shorts\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"notes\": \"Sometime, some live broadcasts that are then posted as regular videos do not have a duration. That is why we check if `duration` is present in `contentDetails`.\",\n      \"position\": [\n        1180,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 1,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"5342ecc0-d764-4bef-8161-d1f571fcb931\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.contentDetails.duration }}\",\n              \"rightValue\": \"\\\"duration\\\"\"\n            },\n            {\n              \"id\": \"b82e3373-a28b-49bd-afa0-4f48cafe2bfe\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gt\"\n              },\n              \"leftValue\": \"={{ Duration.fromISO($json.contentDetails.duration).as('seconds') }}\",\n              \"rightValue\": 61\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"14d54ed0-f5c0-4992-af56-0af2d8973963\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -900,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 220,\n        \"height\": 460,\n        \"content\": \"### 默认频率：每小时  \\n若需以更高或更低频率检查新视频，仅在此处修改即可，无需调整其他设置。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c4acbb10-1f57-4934-a324-f26d0532767c\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -660,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 880,\n        \"height\": 460,\n        \"content\": \"### 通过YouTube Data v3 API获取我的订阅内容  \\n每次请求每50个订阅预计消耗1个配额，远低于默认允许的每日10,000次请求上限。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4ae2d2f3-53b5-4431-90d8-06e41a6950e2\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        480,\n        -160\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 440,\n        \"height\": 280,\n        \"content\": \"### 通过RSS获取每个频道最新的15个视频\\n使用YouTube API会消耗过多配额，导致方案不可行。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"48894d79-7e59-49fc-beb5-445fb5ca2ff6\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        940,\n        -160\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 400,\n        \"height\": 280,\n        \"content\": \"### 调用YouTube的API获取更多数据\\n我们需要邮件中显示的缩略图以及视频时长，以便过滤掉短视频内容。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e3da3f97-138c-481e-a763-9a3c9e402928\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1360,\n        -160\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 260,\n        \"height\": 280,\n        \"content\": \"### 在此配置您的电子邮件\\n要从邮件进入视频，只需点击缩略图即可。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0d092c3d-b2e1-4468-a044-c6cf0f37672b\",\n      \"name\": \"Get latest 15 videos of each channel\",\n      \"type\": \"n8n-nodes-base.rssFeedRead\",\n      \"notes\": \"YouTube provides an RSS feed for each channel with the 15 latest videos.\\nWe use this instead of the YouTube Data v3 API, as search requests cost a lot of \\\"quota points\\\" and would easily put us over the daily limit with just one workflow run.\",\n      \"position\": [\n        540,\n        -60\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.youtube.com/feeds/videos.xml?channel_id={{ $json.snippet.resourceId.channelId }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"34823384-d8a5-415a-87ff-203d65aa9a75\",\n      \"name\": \"Get my subscriptions\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Get subscriptions from YouTube Data v3 API\",\n      \"position\": [\n        -600,\n        -160\n      ],\n      \"parameters\": {\n        \"url\": \"https://www.googleapis.com/youtube/v3/subscriptions\",\n        \"options\": {\n          \"pagination\": {\n            \"pagination\": {\n              \"parameters\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"pageToken\",\n                    \"value\": \"={{ $response.body.nextPageToken }}\"\n                  }\n                ]\n              },\n              \"completeExpression\": \"={{ !('nextPageToken' in $response.body) }}\",\n              \"paginationCompleteWhen\": \"other\"\n            }\n          }\n        },\n        \"sendQuery\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"mine\",\n              \"value\": \"true\"\n            },\n            {\n              \"name\": \"part\",\n              \"value\": \"snippet,contentDetails\"\n            },\n            {\n              \"name\": \"maxResults\",\n              \"value\": \"50\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"youTubeOAuth2Api\"\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"5lD8Hahvq4r7Og0F\",\n          \"name\": \"YouTube account\"\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"534e38f3-ac40-4194-8821-5926ee581605\",\n      \"name\": \"Check for errors\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -400,\n        -160\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"5972ff90-aa5a-470c-aa96-87138eb60565\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.error }}\",\n              \"rightValue\": \"error\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"2d872c0f-30b9-4ffc-aba0-6644bf05d7bb\",\n      \"name\": \"Only keep channels with unwatched videos\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"notes\": \"It's not a perfect indicator for new videos but helps reduce the amount of channels to process.\",\n      \"position\": [\n        40,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"4734ee8c-1655-47be-bd45-a9527aee2833\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gt\"\n              },\n              \"leftValue\": \"={{ $json.contentDetails.newItemCount }}\",\n              \"rightValue\": 0\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"c7bd97ec-47c1-40b4-955d-bf89d3cde330\",\n      \"name\": \"Keep only videos published since last run\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"notes\": \"We dynamically figure out the last run's execution time through the settings of the \\\"Schedule Trigger\\\" node.\",\n      \"position\": [\n        740,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"65d905a2-c89e-41f3-a2cf-0d1a76c48d8e\",\n              \"operator\": {\n                \"type\": \"dateTime\",\n                \"operation\": \"after\"\n              },\n              \"leftValue\": \"={{ $json.pubDate.toDateTime() }}\",\n              \"rightValue\": \"={{ \\n  $('Schedule Trigger').item.json.timestamp.toDateTime().minus(\\n    $('Schedule Trigger').params.rule.interval[0].hoursInterval,\\n    $('Schedule Trigger').params.rule.interval[0].field\\n  ).toISO()\\n}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"72341b1f-a391-4210-b3ca-4e74ae1f2e1b\",\n      \"name\": \"Send an email for each new video\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"notes\": \"The expression in the HTML for the thumbnail simply selects the last element of the thumbnails array so that we get the best possible resolution thumbnail available.\",\n      \"position\": [\n        1440,\n        -60\n      ],\n      \"webhookId\": \"44bf0e95-98e5-4b5b-a7c5-c802379ab3b0\",\n      \"parameters\": {\n        \"html\": \"=<h1 style=\\\"text-align: center;\\\">{{ $json.snippet.title }}</h1>\\n<a href=\\\"https://www.youtube.com/watch?v={{ $json.id }}\\\">\\n  <img src=\\\"{{ $json.snippet.thumbnails[Object.keys($json.snippet.thumbnails)[Object.keys($json.snippet.thumbnails).length - 1]].url }}\\\" alt=\\\"Watch on YouTube\\\" style=\\\"width:100%; height:auto; max-width:640px; display:block; margin: 10px auto;\\\">\\n</a>\",\n        \"options\": {\n          \"appendAttribution\": false\n        },\n        \"subject\": \"={{ $json.snippet.channelTitle }}\",\n        \"toEmail\": \"My Name <to@email.com>\",\n        \"fromEmail\": \"YouTube <from@email.com>\"\n      },\n      \"credentials\": {\n        \"smtp\": {\n          \"id\": \"ThrKm6bLUg1owKn1\",\n          \"name\": \"SMTP account\"\n        }\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"b82cfbd5-71e3-418f-9b6d-6d0ec007733a\",\n      \"name\": \"If the HTTP request failed, throw the error\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        -180,\n        -260\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"=Status code: {{ $json.error.code }}\\nMessage: {{ $json.error.message }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e89eca92-896f-46b5-8a4b-149d51682faa\",\n      \"name\": \"Split out subscriptions to process individually\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -180,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"items\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0e00fda6-1489-4c1a-8205-22e620a554c5\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        240,\n        -240\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 360,\n        \"content\": \"## 手动筛选频道  \\n要查找某个频道的频道ID，请点击描述→分享频道→复制频道ID\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bcc2e57c-23b2-42b7-81ab-cdd88b70b8a3\",\n      \"name\": \"Filter out channels\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"notes\": \"Optional step\",\n      \"position\": [\n        300,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"b27b14a9-c86c-4ebd-8a0f-4e7db722796e\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"notContains\",\n                \"rightType\": \"any\"\n              },\n              \"leftValue\": \"={{[\\n  \\\"exampleChannelId1\\\",\\n  \\\"exampleChannelId2\\\"\\n]}}\",\n              \"rightValue\": \"={{ $json.snippet.resourceId.channelId }}\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2.2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Check for errors\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If the HTTP request failed, throw the error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Split out subscriptions to process individually\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get my subscriptions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter out shorts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send an email for each new video\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        []\n      ]\n    },\n    \"Get video details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter out shorts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter out channels\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get latest 15 videos of each channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get my subscriptions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check for errors\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send an email for each new video\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Get latest 15 videos of each channel\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Keep only videos published since last run\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Only keep channels with unwatched videos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter out channels\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Keep only videos published since last run\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get video details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split out subscriptions to process individually\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Only keep channels with unwatched videos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}