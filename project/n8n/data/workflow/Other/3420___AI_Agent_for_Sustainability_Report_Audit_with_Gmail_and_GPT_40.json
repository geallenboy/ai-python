{
  "title": "🌲 AI Agent for Sustainability Report Audit with Gmail and GPT-40",
  "url": "https://n8n.io/workflows/3420-ai-agent-for-sustainability-report-audit-with-gmail-and-gpt-40/",
  "category": "Other",
  "category_url": "https://n8n.io/workflows/categories/other/?sort=createdAt:desc",
  "author": "Samir Saci",
  "publish_date": "Last update 20 days ago",
  "publish_date_absolute": "2025-05-02",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"=\"},\"nodes\":[{\"id\":\"a2d54127-d1d1-44d2-859e-b89e2e6c3b4d\",\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[260,260],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"=\",\"operator\":{\"type\":\"string\",\"operation\":\"contains\"},\"leftValue\":\"={{ $json.subject }}\",\"rightValue\":\"CSRD Reporting\"}]}},\"typeVersion\":2.2},{\"id\":\"6a664023-ea8c-4973-b3ac-13a9e0664a58\",\"name\":\"Check the format\",\"type\":\"n8n-nodes-base.code\",\"position\":[960,260],\"parameters\":{\"jsCode\":\"const content = $input.first().json.xhtml_content;\\n\\n// Helper to extract tags\\nfunction extractTags(tagName) {\\n  const regex = new RegExp(`<${tagName}[^>]*>(.*?)<\\\\\\\\/${tagName}>`, 'gs');\\n  let matches = [];\\n  let match;\\n  while ((match = regex.exec(content)) !== null) {\\n    matches.push(match[1].trim());\\n  }\\n  return matches;\\n}\\n\\n// Basic Tests\\nconst headerPresent = /<ix:header>/i.test(content);\\nconst governanceTag = /<ix:nonNumeric[^>]*name=\\\"esrs:SustainabilityGovernance\\\"/i.test(content);\\nconst strategyTag = /<ix:nonNumeric[^>]*name=\\\"esrs:StrategySustainability\\\"/i.test(content);\\n\\n// KPI Tags\\nconst kpiTags = [\\\"esrs:GHGScope1Emissions\\\", \\\"esrs:GHGScope2Emissions\\\", \\\"esrs:GHGScope3Emissions\\\"];\\nconst kpiMatches = kpiTags.filter(tag => content.includes(tag));\\n\\n// Check for empty tags\\nconst emptyNonNumeric = (content.match(/<ix:nonNumeric[^>]*>\\\\s*<\\\\/ix:nonNumeric>/g) || []).length;\\n\\n// Check duplicate text\\nconst nonNumericValues = extractTags(\\\"ix:nonNumeric\\\");\\nconst duplicates = [...new Set(nonNumericValues.filter((v, i, arr) => arr.indexOf(v) !== i))];\\n\\n// Final Result\\nreturn [\\n  {\\n    json: {\\n      audit_results:{\\n      total_nonNumeric_tags: nonNumericValues.length,\\n      total_kpis_found: kpiMatches.length,\\n      empty_disclosures: emptyNonNumeric,\\n      governance_check: governanceTag ? \\\"PASS\\\" : \\\"MISSING\\\",\\n      strategy_check: strategyTag ? \\\"PASS\\\" : \\\"MISSING\\\",\\n      header_check: headerPresent ? \\\"PASS\\\" : \\\"MISSING\\\",\\n      duplicate_disclosures: duplicates,\\n      }\\n\\n    }\\n  }\\n];\\n\"},\"typeVersion\":2},{\"id\":\"a16b613e-a7c2-4079-9ff9-46c485019ca3\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[1240,260],\"parameters\":{\"text\":\"=Generate an email to the sustainability team summarizing this CSRD XHTML report audit:\\n\\n{{JSON.stringify($json.audit_results, null, 2)}}\\n\\nReturn the output in the following JSON format:\\n\\n{\\n  \\\"subject\\\": \\\"...\\\",\\n  \\\"body\\\": \\\"...\\\"\\n}\",\"options\":{\"systemMessage\":\"=You are LogiGreen CSRD Audit Bot, an ESG compliance assistant writing professional email summaries based on automated XHTML audits for CSRD compliance. Your role is to translate JSON audit results into clear, actionable summaries. Keep a neutral, helpful tone and highlight any risks or missing disclosures. Include key findings and suggest next steps if needed.\\n\\nWrite emails in plain English with no markdown (avoid **, #, ##, etc.).\\nFormat your message with proper line breaks for readability.\\nAlways sign with:\\nBest regards,\\nLogiGreen CSRD Audit Bot\"},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.8},{\"id\":\"3dcbaf39-58be-465e-9ec2-0b2a9a8c8fe3\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[1200,420],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"typeVersion\":1.2},{\"id\":\"6e742627-f315-4ee2-be1b-023b38103978\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[1500,440],\"parameters\":{\"jsonSchemaExample\":\"{\\n  \\\"subject\\\": \\\"CSRD XHTML Report Audit – Key Findings and Next Steps\\\",\\n  \\\"body\\\": \\\"Content of the email\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"994e5b98-5bda-4a4f-a3eb-cb521de9d88a\",\"name\":\"Reply\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1620,260],\"webhookId\":\"=\",\"parameters\":{\"message\":\"={{ $json.output.body }}\",\"options\":{},\"emailType\":\"text\",\"messageId\":\"={{ $('Gmail').item.json.id }}\",\"operation\":\"reply\"},\"notesInFlow\":true,\"typeVersion\":2.1},{\"id\":\"8a7fbdcb-2197-437e-b3ba-126c7942ba4d\",\"name\":\"Extract the HTML\",\"type\":\"n8n-nodes-base.code\",\"position\":[800,260],\"parameters\":{\"jsCode\":\"return [\\n  {\\n    json: {\\n      xhtml_content:$input.first().json.data \\n    }\\n  }\\n];\\n\"},\"typeVersion\":2},{\"id\":\"90f271b9-4b8b-49ef-90cc-d10d8e22a203\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[20,-140],\"parameters\":{\"color\":7,\"width\":380,\"height\":680,\"content\":\"### 1. Workflow Trigger with Gmail Trigger\\nThe workflow is triggered by a new email received in your Gmail mailbox. \\nIf the subject includes the string \\\"CSRD Reporting\\\" we proceed, if not we do nothing.\\n\\n#### How to setup?\\n- **Gmail Trigger Node:** set up your Gmail API credentials\\n[Learn more about the Gmail Trigger Node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)\\n\"},\"typeVersion\":1},{\"id\":\"803a758c-fba4-4f48-818b-1272c4509e81\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[440,-140],\"parameters\":{\"color\":7,\"width\":640,\"height\":680,\"content\":\"### 2. Extract and Process the xHTML report\\nThis block extract the attachment file from the email, process the xHTML and perform the audit of the content.\\n\\n#### How to setup?\\n- **Gmail Node:** set up your Gmail API credentials\\n[Learn more about the Gmail Trigger Node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)\\n\"},\"typeVersion\":1},{\"id\":\"0b72f7d8-23ce-4243-b2e5-e3ff5c7f163e\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1120,-140],\"parameters\":{\"color\":7,\"width\":640,\"height\":680,\"content\":\"### 3. AI Agent write and sends an audit report to the send\\nThis summarize the results of the analysis in an email sent as a reply to the sender.\\n\\n#### How to setup?\\n- **Gmail Node:** set up your Gmail API credentials\\n[Learn more about the Gmail Trigger Node](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)\\n- **AI Agent with the Chat Model**:\\n   1. Add a **chat model** with the required credentials *(Example: Open AI 4o-mini)*\\n   2. Adapt the system prompt to the format of emails you want to send\\n  [Learn more about the AI Agent Node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)\\n\"},\"typeVersion\":1},{\"id\":\"18103fec-6761-4604-872e-dab251211ba0\",\"name\":\"HTML from binary\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[660,260],\"parameters\":{\"options\":{},\"operation\":\"text\",\"binaryPropertyName\":\"attachment_0\"},\"notesInFlow\":true,\"typeVersion\":1},{\"id\":\"5c31c49d-2324-4d08-a5b5-309925266517\",\"name\":\"Email Trigger\",\"type\":\"n8n-nodes-base.gmailTrigger\",\"position\":[40,260],\"parameters\":{\"simple\":false,\"filters\":{},\"options\":{},\"pollTimes\":{\"item\":[{\"mode\":\"everyMinute\"}]}},\"notesInFlow\":true,\"typeVersion\":1.2},{\"id\":\"bacbd57d-af9b-49c8-82ae-c74aa2898fc8\",\"name\":\"Download Attachment\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[480,260],\"webhookId\":\"=\",\"parameters\":{\"simple\":false,\"options\":{\"downloadAttachments\":true},\"messageId\":\"={{ $json.id }}\",\"operation\":\"get\"},\"notesInFlow\":true,\"typeVersion\":2.1},{\"id\":\"af087293-0c3c-4c96-9523-ddb9ed238e00\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1780,-140],\"parameters\":{\"width\":780,\"height\":540,\"content\":\"### 4. Do you need more details?\\nFind a step-by-step guide in this tutorial\\n![Guide](https://www.samirsaci.com/content/images/2025/04/temp-2.png)\\n[🎥 Watch My Tutorial](https://www.youtube.com/watch?v=npeJZv5U7og)\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"AI Agent\":{\"main\":[[{\"node\":\"Reply\",\"type\":\"main\",\"index\":0}]]},\"Email Trigger\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]},\"Check the format\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Extract the HTML\":{\"main\":[[{\"node\":\"Check the format\",\"type\":\"main\",\"index\":0}]]},\"HTML from binary\":{\"main\":[[{\"node\":\"Extract the HTML\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"AI Agent\",\"type\":\"ai_outputParser\",\"index\":0}]]}}}",
  "readme": "_Tags: Sustainability, CSRD, Reporting, ESG, Compliance, Automation_\n\n### Context\n\nHey! I'm Samir, a **Supply Chain Engineer and Data Scientist from Paris** , founder of  \n[LogiGreen Consulting](https://www.logi-green.com/)\n\nWe help **companies automate sustainability workflows** using AI, Data Analytics, and No-Code tools like N8N.\n\n> Sustainability Reporting meets Automation with n8n!\n\n📬 For business inquiries, you can add me on [Here](https://www.linkedin.com/in/samir-saci)\n\n### What is a CSRD XHTML Report?\n\nUnder the **Corporate Sustainability Reporting Directive (CSRD)** , companies must publish their ESG disclosures in a **machine-readable XHTML format** , embedding **XBRL tags** that make the report structured and standardized.\n\n![What is XHTML](https://www.samirsaci.com/content/images/2025/04/temp.png)\n\nThese files must follow strict formatting and tagging rules to ensure **compliance** , **traceability** , and **accessibility** for both regulators and analysts.\n\n### Who is this template for?\n\nThis workflow is designed for **sustainability teams, ESG consultants** , or **developers** who want to **automatically check the structure and format** of CSRD reports submitted in XHTML.\n\n### How does it work?\n\nThis N8N workflow automates the audit process:\n\n  1. **📤 Input Node** → Uploads or fetches the XHTML file via URL or Webhook.\n  2. **🧪 Validates Structure** → Uses a custom code node to parse HTML and identify required tags (e.g., `&lt;ix:nonNumeric&gt;`, namespaces).\n  3. **📋 Outputs a Report** → Returns a summary report of errors, warnings, and key metadata (like entity name, reporting period).\n  4. **📤 Export Option** → Save the results in Google Sheets or send via email.\n\n\n\n### Prerequisite\n\n  * A sample XHTML file that you can find in my [GitHub Repository](https://github.com/samirsaci/n8n-templates)\n  * **Google Sheets API** and **OpenAI API** credentials\n\n\n\n### Next Steps\n\nFollow the **sticky notes** inside each node to adjust parsing rules or extend validation to specific XBRL tags relevant to your sector (e.g., GHG emissions, water usage).\n\n**📺 Check my complete tutorial to understand how to use it: **  \n![CSRD Parser Visual](https://www.samirsaci.com/content/images/2025/04/temp-2.png)  \n🎥 [Check My Tutorial](https://youtu.be/npeJZv5U7og)\n\n🚀 Interested in combining **CSRD compliance** with **automation and analytics**? Let’s connect on [LinkedIn](https://www.linkedin.com/in/samir-saci)\n\n### Notes\n\n  * This workflow includes an example XHTML file to test the validator.\n  * You can plug this into your internal systems or even extend it with AI to **auto-summarize the sustainability report**.\n\n\n\n_This workflow has been created with N8N 1.82.1_  \n_Submitted: April 3rd, 2025_\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p><em>Tags: Sustainability, CSRD, Reporting, ESG, Compliance, Automation</em></p>\n<h3>Context</h3>\n<p>Hey! I'm Samir, a <strong>Supply Chain Engineer and Data Scientist from Paris</strong>, founder of<br>\n<a href=\"https://www.logi-green.com/\" rel=\"ugc nofollow\" target=\"_blank\">LogiGreen Consulting</a></p>\n<p>We help <strong>companies automate sustainability workflows</strong> using AI, Data Analytics, and No-Code tools like N8N.</p>\n<blockquote>\n<p>Sustainability Reporting meets Automation with n8n!</p>\n</blockquote>\n<p>📬 For business inquiries, you can add me on <a href=\"https://www.linkedin.com/in/samir-saci\" rel=\"ugc nofollow\" target=\"_blank\">Here</a></p>\n<h3>What is a CSRD XHTML Report?</h3>\n<p>Under the <strong>Corporate Sustainability Reporting Directive (CSRD)</strong>, companies must publish their ESG disclosures in a <strong>machine-readable XHTML format</strong>, embedding <strong>XBRL tags</strong> that make the report structured and standardized.</p>\n<p><img src=\"https://www.samirsaci.com/content/images/2025/04/temp.png\" alt=\"What is XHTML\"></p>\n<p>These files must follow strict formatting and tagging rules to ensure <strong>compliance</strong>, <strong>traceability</strong>, and <strong>accessibility</strong> for both regulators and analysts.</p>\n<h3>Who is this template for?</h3>\n<p>This workflow is designed for <strong>sustainability teams, ESG consultants</strong>, or <strong>developers</strong> who want to <strong>automatically check the structure and format</strong> of CSRD reports submitted in XHTML.</p>\n<h3>How does it work?</h3>\n<p>This N8N workflow automates the audit process:</p>\n<ol>\n<li><strong>📤 Input Node</strong> → Uploads or fetches the XHTML file via URL or Webhook.</li>\n<li><strong>🧪 Validates Structure</strong> → Uses a custom code node to parse HTML and identify required tags (e.g., <code>&amp;lt;ix:nonNumeric&amp;gt;</code>, namespaces).</li>\n<li><strong>📋 Outputs a Report</strong> → Returns a summary report of errors, warnings, and key metadata (like entity name, reporting period).</li>\n<li><strong>📤 Export Option</strong> → Save the results in Google Sheets or send via email.</li>\n</ol>\n<h3>Prerequisite</h3>\n<ul>\n<li>A sample XHTML file that you can find in my <a href=\"https://github.com/samirsaci/n8n-templates\" rel=\"ugc nofollow\" target=\"_blank\">GitHub Repository</a></li>\n<li><strong>Google Sheets API</strong> and <strong>OpenAI API</strong> credentials</li>\n</ul>\n<h3>Next Steps</h3>\n<p>Follow the <strong>sticky notes</strong> inside each node to adjust parsing rules or extend validation to specific XBRL tags relevant to your sector (e.g., GHG emissions, water usage).</p>\n<p>**📺 Check my complete tutorial to understand how to use it: **<br>\n<img src=\"https://www.samirsaci.com/content/images/2025/04/temp-2.png\" alt=\"CSRD Parser Visual\"><br>\n🎥 <a href=\"https://youtu.be/npeJZv5U7og\" rel=\"ugc nofollow\" target=\"_blank\">Check My Tutorial</a></p>\n<p>🚀 Interested in combining <strong>CSRD compliance</strong> with <strong>automation and analytics</strong>? Let’s connect on <a href=\"https://www.linkedin.com/in/samir-saci\" rel=\"ugc nofollow\" target=\"_blank\">LinkedIn</a></p>\n<h3>Notes</h3>\n<ul>\n<li>This workflow includes an example XHTML file to test the validator.</li>\n<li>You can plug this into your internal systems or even extend it with AI to <strong>auto-summarize the sustainability report</strong>.</li>\n</ul>\n<p><em>This workflow has been created with N8N 1.82.1</em><br>\n<em>Submitted: April 3rd, 2025</em></p>\n</div><!--]-->",
  "readme_zh": "_标签：可持续发展、CSRD、报告、ESG、合规、自动化_\n\n### 背景介绍  \n大家好！我是Samir，一名**来自巴黎的供应链工程师兼数据科学家**，也是  \n[LogiGreen咨询公司](https://www.logi-green.com/)的创始人。  \n\n我们通过人工智能、数据分析和N8N等无代码工具，帮助企业**自动化可持续发展工作流程**。  \n\n> 当可持续发展报告遇上N8N自动化！  \n\n📬 商务合作请通过[LinkedIn](https://www.linkedin.com/in/samir-saci)联系我  \n\n### 什么是CSRD XHTML报告？  \n根据《企业可持续发展报告指令》（CSRD），企业必须以**机器可读的XHTML格式**发布ESG披露信息，并嵌入**XBRL标签**，使报告结构化和标准化。  \n\n![XHTML示意图](https://www.samirsaci.com/content/images/2025/04/temp.png)  \n\n这些文件需遵循严格的格式和标签规则，以确保**合规性**、**可追溯性**，并便于监管机构和分析师**访问**。  \n\n### 适用对象  \n本模板适用于**可持续发展团队、ESG顾问**或**开发人员**，用于**自动检查**提交的XHTML格式CSRD报告的结构和格式。  \n\n### 工作原理  \n此N8N工作流可自动化审计流程：  \n1. **📤 输入节点** → 通过URL或Webhook上传或获取XHTML文件  \n2. **🧪 结构验证** → 使用自定义代码节点解析HTML，识别必要标签（如`&lt;ix:nonNumeric&gt;`、命名空间）  \n3. **📋 生成报告** → 输出包含错误、警告和关键元数据（如实体名称、报告周期）的摘要报告  \n4. **📤 导出选项** → 将结果保存至Google表格或通过邮件发送  \n\n### 前提条件  \n- 示例XHTML文件（可从[GitHub仓库](https://github.com/samirsaci/n8n-templates)获取）  \n- **Google Sheets API**和**OpenAI API**凭证  \n\n### 后续步骤  \n根据节点内的**便签提示**调整解析规则，或针对行业特定XBRL标签（如温室气体排放、用水量）扩展验证功能。  \n\n**📺 观看完整教程视频了解使用方法：**  \n![CSRD解析工具可视化](https://www.samirsaci.com/content/images/2025/04/temp-2.png)  \n🎥 [点击查看教程](https://youtu.be/npeJZv5U7og)  \n\n🚀 想将**CSRD合规**与**自动化及分析**结合？欢迎通过[LinkedIn](https://www.linkedin.com/in/samir-saci)联系！  \n\n### 注意事项  \n- 工作流包含测试用的示例XHTML文件  \n- 可接入内部系统，或结合AI实现**可持续发展报告自动摘要**  \n\n_本工作流基于N8N 1.82.1版本创建_  \n_提交日期：2025年4月3日_",
  "title_zh": "🌲 集成Gmail与GPT-40的可持续性报告审计AI助手",
  "publish_date_zh": "上次更新于20天前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"=\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"a2d54127-d1d1-44d2-859e-b89e2e6c3b4d\",\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        260,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"=\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $json.subject }}\",\n              \"rightValue\": \"CSRD Reporting\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"6a664023-ea8c-4973-b3ac-13a9e0664a58\",\n      \"name\": \"Check the format\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        960,\n        260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const content = $input.first().json.xhtml_content;\\n\\n// Helper to extract tags\\nfunction extractTags(tagName) {\\n  const regex = new RegExp(`<${tagName}[^>]*>(.*?)<\\\\\\\\/${tagName}>`, 'gs');\\n  let matches = [];\\n  let match;\\n  while ((match = regex.exec(content)) !== null) {\\n    matches.push(match[1].trim());\\n  }\\n  return matches;\\n}\\n\\n// Basic Tests\\nconst headerPresent = /<ix:header>/i.test(content);\\nconst governanceTag = /<ix:nonNumeric[^>]*name=\\\"esrs:SustainabilityGovernance\\\"/i.test(content);\\nconst strategyTag = /<ix:nonNumeric[^>]*name=\\\"esrs:StrategySustainability\\\"/i.test(content);\\n\\n// KPI Tags\\nconst kpiTags = [\\\"esrs:GHGScope1Emissions\\\", \\\"esrs:GHGScope2Emissions\\\", \\\"esrs:GHGScope3Emissions\\\"];\\nconst kpiMatches = kpiTags.filter(tag => content.includes(tag));\\n\\n// Check for empty tags\\nconst emptyNonNumeric = (content.match(/<ix:nonNumeric[^>]*>\\\\s*<\\\\/ix:nonNumeric>/g) || []).length;\\n\\n// Check duplicate text\\nconst nonNumericValues = extractTags(\\\"ix:nonNumeric\\\");\\nconst duplicates = [...new Set(nonNumericValues.filter((v, i, arr) => arr.indexOf(v) !== i))];\\n\\n// Final Result\\nreturn [\\n  {\\n    json: {\\n      audit_results:{\\n      total_nonNumeric_tags: nonNumericValues.length,\\n      total_kpis_found: kpiMatches.length,\\n      empty_disclosures: emptyNonNumeric,\\n      governance_check: governanceTag ? \\\"PASS\\\" : \\\"MISSING\\\",\\n      strategy_check: strategyTag ? \\\"PASS\\\" : \\\"MISSING\\\",\\n      header_check: headerPresent ? \\\"PASS\\\" : \\\"MISSING\\\",\\n      duplicate_disclosures: duplicates,\\n      }\\n\\n    }\\n  }\\n];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a16b613e-a7c2-4079-9ff9-46c485019ca3\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        1240,\n        260\n      ],\n      \"parameters\": {\n        \"text\": \"=Generate an email to the sustainability team summarizing this CSRD XHTML report audit:\\n\\n{{JSON.stringify($json.audit_results, null, 2)}}\\n\\nReturn the output in the following JSON format:\\n\\n{\\n  \\\"subject\\\": \\\"...\\\",\\n  \\\"body\\\": \\\"...\\\"\\n}\",\n        \"options\": {\n          \"systemMessage\": \"=You are LogiGreen CSRD Audit Bot, an ESG compliance assistant writing professional email summaries based on automated XHTML audits for CSRD compliance. Your role is to translate JSON audit results into clear, actionable summaries. Keep a neutral, helpful tone and highlight any risks or missing disclosures. Include key findings and suggest next steps if needed.\\n\\nWrite emails in plain English with no markdown (avoid **, #, ##, etc.).\\nFormat your message with proper line breaks for readability.\\nAlways sign with:\\nBest regards,\\nLogiGreen CSRD Audit Bot\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"3dcbaf39-58be-465e-9ec2-0b2a9a8c8fe3\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1200,\n        420\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"6e742627-f315-4ee2-be1b-023b38103978\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1500,\n        440\n      ],\n      \"parameters\": {\n        \"jsonSchemaExample\": \"{\\n  \\\"subject\\\": \\\"CSRD XHTML Report Audit – Key Findings and Next Steps\\\",\\n  \\\"body\\\": \\\"Content of the email\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"994e5b98-5bda-4a4f-a3eb-cb521de9d88a\",\n      \"name\": \"Reply\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1620,\n        260\n      ],\n      \"webhookId\": \"=\",\n      \"parameters\": {\n        \"message\": \"={{ $json.output.body }}\",\n        \"options\": {},\n        \"emailType\": \"text\",\n        \"messageId\": \"={{ $('Gmail').item.json.id }}\",\n        \"operation\": \"reply\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"8a7fbdcb-2197-437e-b3ba-126c7942ba4d\",\n      \"name\": \"Extract the HTML\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        800,\n        260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"return [\\n  {\\n    json: {\\n      xhtml_content:$input.first().json.data \\n    }\\n  }\\n];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"90f271b9-4b8b-49ef-90cc-d10d8e22a203\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        20,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 380,\n        \"height\": 680,\n        \"content\": \"### 1. 使用Gmail触发器启动工作流  \\n该工作流由您Gmail邮箱收到的新邮件触发。  \\n若邮件主题包含字符串\\\"CSRD Reporting\\\"，则流程继续执行；否则不进行任何操作。  \\n\\n#### 如何设置？  \\n- **Gmail触发器节点：** 配置您的Gmail API凭证  \\n[了解更多关于Gmail触发器节点的信息](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)  \\n\\n（注：根据中文技术文档惯例，调整了被动语态为主动表述，优化了条件句的衔接逻辑，并保持超链接功能完整。URL中\\\"integrations\\\"疑似存在拼写错误，但为保持与原文一致未作修改）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"803a758c-fba4-4f48-818b-1272c4509e81\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        440,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 640,\n        \"height\": 680,\n        \"content\": \"### 2. 提取并处理xHTML报告  \\n该模块用于从电子邮件中提取附件文件，处理xHTML内容并执行内容审计。  \\n\\n#### 如何设置？  \\n- **Gmail节点：** 配置您的Gmail API凭证  \\n[了解更多关于Gmail触发器节点的信息](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0b72f7d8-23ce-4243-b2e5-e3ff5c7f163e\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1120,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 640,\n        \"height\": 680,\n        \"content\": \"### 3. AI代理撰写并发送审计报告  \\n此功能将分析结果汇总后，以回复邮件的形式发送给发件人。  \\n\\n#### 如何设置？  \\n- **Gmail节点**：配置您的Gmail API凭证  \\n[了解更多关于Gmail触发节点的信息](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)  \\n- **搭载聊天模型的AI代理**：  \\n  1. 添加具备所需凭证的**聊天模型**（例如：OpenAI 4o-mini）  \\n  2. 根据您希望发送的邮件格式调整系统提示  \\n[了解更多关于AI代理节点的信息](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)  \\n\\n（注：译文修复了原文中\\\"send\\\"未写完的句子，将\\\"summarize\\\"译为\\\"汇总\\\"以符合审计报告场景，并调整了技术文档特有的被动语态。链接保留英文原貌以确保功能准确性，同时采用\\\"节点\\\"\\\"凭证\\\"等中文技术文档常用术语。）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"18103fec-6761-4604-872e-dab251211ba0\",\n      \"name\": \"HTML from binary\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        660,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"text\",\n        \"binaryPropertyName\": \"attachment_0\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5c31c49d-2324-4d08-a5b5-309925266517\",\n      \"name\": \"Email Trigger\",\n      \"type\": \"n8n-nodes-base.gmailTrigger\",\n      \"position\": [\n        40,\n        260\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"filters\": {},\n        \"options\": {},\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyMinute\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"bacbd57d-af9b-49c8-82ae-c74aa2898fc8\",\n      \"name\": \"Download Attachment\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        480,\n        260\n      ],\n      \"webhookId\": \"=\",\n      \"parameters\": {\n        \"simple\": false,\n        \"options\": {\n          \"downloadAttachments\": true\n        },\n        \"messageId\": \"={{ $json.id }}\",\n        \"operation\": \"get\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"af087293-0c3c-4c96-9523-ddb9ed238e00\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1780,\n        -140\n      ],\n      \"parameters\": {\n        \"width\": 780,\n        \"height\": 540,\n        \"content\": \"### 4. 需要更详细的说明吗？\\n本教程提供分步指导\\n![指南](https://www.samirsaci.com/content/images/2025/04/temp-2.png)\\n[🎥 观看我的教程](https://www.youtube.com/watch?v=npeJZv5U7og)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Reply\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Email Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check the format\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract the HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check the format\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTML from binary\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract the HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}