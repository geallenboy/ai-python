{
  "title": "Travel Planning Assistant with MongoDB Atlas, Gemini LLM and Vector Search",
  "url": "https://n8n.io/workflows/3577-travel-planning-assistant-with-mongodb-atlas-gemini-llm-and-vector-search/",
  "category": "Other",
  "category_url": "https://n8n.io/workflows/categories/other/",
  "author": "Pavel Duchovny",
  "publish_date": "Last update 7 days ago",
  "publish_date_absolute": "2025-05-16",
  "content": "",
  "workflow_json": "{\"id\":\"znRwva47HzXesOYk\",\"meta\":{\"instanceId\":\"3be30861c4ebf6c36b608a223df086e2f2ea418bc2f7f7a746319c3c22897aa9\",\"templateCredsSetupCompleted\":true},\"name\":\"Travel AssistantAgent\",\"tags\":[],\"nodes\":[{\"id\":\"3742b914-9f9d-4c6e-bfdf-f494295182a3\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[0,0],\"webhookId\":\"c9b390dc-3f6a-475c-b168-28f3accd20a7\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"5b7fcae2-78ab-45f7-933b-3acf993832e6\",\"name\":\"MongoDB Chat Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryMongoDbChat\",\"position\":[320,220],\"parameters\":{\"databaseName\":\"test\"},\"credentials\":{\"mongoDb\":{\"id\":\"aEhI0wdmVEJ8c82Z\",\"name\":\"MongoDB account\"}},\"typeVersion\":1},{\"id\":\"eaba53fd-fc1c-404f-8720-eeea6cde088e\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[180,240],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-2.0-flash\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"7DECNCZTsje1tSvf\",\"name\":\"Google Gemini(PaLM) Api account\"}},\"typeVersion\":1},{\"id\":\"af440c3f-e81f-4e40-a349-6272c3b23517\",\"name\":\"MongoDB Atlas Vector Store\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas\",\"position\":[480,280],\"parameters\":{\"mode\":\"retrieve-as-tool\",\"topK\":10,\"options\":{},\"toolName\":\"PointofinterestKB\",\"metadata_field\":\"description\",\"mongoCollection\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"points_of_interest\",\"cachedResultName\":\"points_of_interest\"},\"toolDescription\":\"The list of Points of Interest from the database.\",\"vectorIndexName\":\"vector_index\"},\"credentials\":{\"mongoDb\":{\"id\":\"aEhI0wdmVEJ8c82Z\",\"name\":\"MongoDB account\"}},\"typeVersion\":1.1},{\"id\":\"17f2e6f3-d79c-4588-b4ee-bbfff61bc38d\",\"name\":\"Embeddings OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[580,500],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"z5h5wLH9yHstZl24\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"fc7ab263-9b1c-4e98-ae51-74248b91fe82\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[780,-420],\"parameters\":{\"width\":900,\"height\":960,\"content\":\"## AI Traveling Agent Powered by MongoDB Atlas for Memory and vector search.\\n\\n**Atlas MongoDB Memory Node**\\n\\n- The memory node allows the agent to persist and retrieve conversation based on threads in the database. It uses MongoDB felxible store capabilities to allow different type of threads and messages (Image, audio, video etc.) to be stored easily and effectivley \\n\\n\\n**Atlas MongoDB Vector Store Node**\\n\\n- Atlas Vector Store tool allows the agent to get up to date points of interest from our vector store database populated and embedded with OpenAI Embeddings.\\n\\n\\n### You will need to:\\n1. Setup your Google API Credentials for the Gemini LLM\\n2. Setup your OpenAI Credentials for the OpenAI embedding nodes.\\n3. [MongoDB Atlas project and Cluster](https://www.mongodb.com/docs/atlas/tutorial/create-new-cluster/). Get a hold of the connection string and make sure to have your IP Access list enabled (for ease of testing try `0.0.0.0/0` access.\\n4. Setup you MongoDB Credentials account with the correct connection string and database name.\\n5. **Vector Search Tool** - uses Atlas Vector Search index you will create on your database for the `points_of_interest` collection:\\n\\n```\\n// index name : \\\"vector_index\\\"\\n// If you change an embedding provider make sure the numDimensions correspond to the model.\\n{\\n  \\\"fields\\\": [\\n    {\\n      \\\"type\\\": \\\"vector\\\",\\n      \\\"path\\\": \\\"embedding\\\",\\n      \\\"numDimensions\\\": 1536,\\n      \\\"similarity\\\": \\\"cosine\\\"\\n    }\\n  ]\\n}\\n```\\n\\nOnce all of that is configured you will need to send the loading webhook with some data points (see example).\\n\\nThis should create vectorised data in  `points_of_interest` collection.\\n\\nOnce you have data points there try to ask the Agent questions about the data points and test the response. Eg. \\\"Where should I go for a romantic getaway?\\\"\\n\\n**Additional Resources**\\n- [MongoDB Atlas Vector Search](https://www.mongodb.com/docs/atlas/atlas-vector-search/tutorials/vector-search-quick-start/?utm=n8n.io)\\n- [n8n Atlas Vector Search docs](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremongodbatlas?utm=n8n.io)\"},\"typeVersion\":1},{\"id\":\"5a0353d2-410a-4059-8dc1-56a438e22cea\",\"name\":\"AI Traveling Planner Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[220,0],\"parameters\":{\"options\":{\"maxIterations\":10,\"systemMessage\":\"You are a helpful assistant for a trip planner. You have a vector search capability to locate points of interest, Use it and don't invent much.\"}},\"typeVersion\":1.8},{\"id\":\"e4c2c92d-6291-42c8-9d03-5abfe1a85a83\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[420,760],\"webhookId\":\"a48d5121-b453-4b5e-aa30-88ba3e16b931\",\"parameters\":{\"path\":\"ingestData\",\"options\":{\"rawBody\":true},\"httpMethod\":\"POST\"},\"typeVersion\":2},{\"id\":\"8ec1fa93-3eea-44e2-a66d-7f1e961cfa94\",\"name\":\"Default Data Loader\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[520,1200],\"parameters\":{\"options\":{},\"jsonData\":\"={{ $json.body.raw_body.point_of_interest.title }} - {{ $json.body.raw_body.point_of_interest.description }}\",\"jsonMode\":\"expressionData\"},\"typeVersion\":1},{\"id\":\"f723cca8-7bf4-4c93-932f-b558d21e8a4d\",\"name\":\"Recursive Character Text Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\"position\":[1060,1400],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"c4a5f12e-de9b-44d0-93b2-a06cb56a1a91\",\"name\":\"MongoDB Atlas Vector Store1\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas\",\"position\":[740,880],\"parameters\":{\"mode\":\"insert\",\"options\":{},\"metadata_field\":\"description\",\"mongoCollection\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"points_of_interest\",\"cachedResultName\":\"points_of_interest\"},\"vectorIndexName\":\"vector_index\",\"embeddingBatchSize\":1},\"credentials\":{\"mongoDb\":{\"id\":\"aEhI0wdmVEJ8c82Z\",\"name\":\"MongoDB account\"}},\"typeVersion\":1.1},{\"id\":\"cf3b0e71-73d5-4a54-bb64-a2d951cd7726\",\"name\":\"Embeddings OpenAI1\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[800,1100],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"z5h5wLH9yHstZl24\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"386538c3-81e7-4797-a4b6-81dea83fa778\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-440,940],\"parameters\":{\"width\":720,\"height\":360,\"content\":\"## CURL Command to Ingest Data.\\n\\nHere is an example of how you can load data into your webhook once its active and ready to get requests.\\n\\n```\\ncurl -X POST \\\"https://<account>.app.n8n.cloud/webhook-test/ingestData\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"raw_body\\\": {\\n      \\\"point_of_interest\\\": {\\n        \\\"title\\\": \\\"Eiffel Tower\\\",\\n        \\\"description\\\": \\\"Iconic iron lattice tower located on the Champ de Mars in Paris, France.\\\"\\n      }\\n    }\\n  }'\\n```\"},\"typeVersion\":1},{\"id\":\"0aa2676e-9f93-4b71-bd69-a4a8b2069496\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1040,620],\"parameters\":{\"width\":720,\"height\":360,\"content\":\"## Vector Search data ingestion\\n\\nUsing webhook to ingest data to the MongoDB `points_of_interest` \\ncollection. \\n\\nThis can be done in other ways like loading from wbesites/git/files or other supported data sources.\"},\"typeVersion\":1}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"4600a0b5-b04c-4bd7-9a71-66b498cf1cbb\",\"connections\":{\"Webhook\":{\"main\":[[{\"node\":\"MongoDB Atlas Vector Store1\",\"type\":\"main\",\"index\":0}]]},\"Embeddings OpenAI\":{\"ai_embedding\":[[{\"node\":\"MongoDB Atlas Vector Store\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Embeddings OpenAI1\":{\"ai_embedding\":[[{\"node\":\"MongoDB Atlas Vector Store1\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Default Data Loader\":{\"ai_document\":[[{\"node\":\"MongoDB Atlas Vector Store1\",\"type\":\"ai_document\",\"index\":0}]]},\"MongoDB Chat Memory\":{\"ai_memory\":[[{\"node\":\"AI Traveling Planner Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Traveling Planner Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"MongoDB Atlas Vector Store\":{\"ai_tool\":[[{\"node\":\"AI Traveling Planner Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"AI Traveling Planner Agent\",\"type\":\"main\",\"index\":0}]]},\"Recursive Character Text Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Default Data Loader\",\"type\":\"ai_textSplitter\",\"index\":0}]]}}}",
  "readme": "Building agentic AI workflows often requires multiple moving parts: memory management, document retrieval, vector similarity, and orchestration.\n\nUntil now, these pieces had to be custom-wired.\n\nBut with the new native n8n nodes for MongoDB Atlas, we reduce that overhead dramatically.\n\nWith just a few clicks:\n\n  * Store and recall long-term memory from MongoDB\n\n  * Query vector embeddings stored in Atlas Vector Search\n\n  * Use these results in your LLM chains and automation logic\n\n\n\n\nIn this example we present an ingestion and AI Agent flows that focus around Travel Planning. The different interest points that we want the agent to know about can be ingested into the vector store.\n\nThe AI Agent will use the vector store tool to get relevant context about those points of interest if it needs to.\n\n### Prerequisites\n\n  * [MongoDB Atlas project and Cluster](https://www.mongodb.com/docs/atlas/tutorial/create-new-cluster/)\n  * OpenAI Valid API Key for embeddings (can be other provider)\n  * Gemini API Key for the LLM (can be other provider)\n\n\n\n### How it works:\n\nThere are 2 main flows.\n\n  1. One is ingesting flow:\n\n\n  * Gets a document from a webhook and use MongoDB Vector Atlas to embed the document `title` and `description` into `points_of_interest` collection.\n  * Embeddings are stored in a field named `embedding`\n  * Embeddings used are OpenAI's but it can be any type of supported embedders.\n\n\n  1. Second flow is an AI Agent node with Chat Memory Stored in MongoDB Atlas and a Vector Search node as a tool:\n\n\n  * **Chat Message Trigger** : Chatting with the AI Agent will trigger the conversation store in the MongoDB Chat Memory node.\n  * When data is necessary like a location search or details it will go to the \"Vector Search\" tool.\n  * **Vector Search Tool** \\- uses Atlas Vector Search index created on the `points_of_interest` collection:\n\n\n    \n    \n    // index name : \"vector_index\"\n    // If you change an embedding provider make sure the numDimensions correspond to the model.\n    {\n      \"fields\": [\n        {\n          \"type\": \"vector\",\n          \"path\": \"embedding\",\n          \"numDimensions\": 1536,\n          \"similarity\": \"cosine\"\n        }\n      ]\n    }\n    \n\n**Additional Resources**\n\n  * [MongoDB Atlas Vector Search](https://www.mongodb.com/docs/atlas/atlas-vector-search/tutorials/vector-search-quick-start/?utm=n8n.io)\n  * [n8n Atlas Vector Search docs](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremongodbatlas?utm=n8n.io)\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p>Building agentic AI workflows often requires multiple moving parts: memory management, document retrieval, vector similarity, and orchestration.</p>\n<p>Until now, these pieces had to be custom-wired.</p>\n<p>But with the new native n8n nodes for MongoDB Atlas, we reduce that overhead dramatically.</p>\n<p>With just a few clicks:</p>\n<ul>\n<li>\n<p>Store and recall long-term memory from MongoDB</p>\n</li>\n<li>\n<p>Query vector embeddings stored in Atlas Vector Search</p>\n</li>\n<li>\n<p>Use these results in your LLM chains and automation logic</p>\n</li>\n</ul>\n<p>In this example we present an ingestion and AI Agent flows that focus around Travel Planning. The different interest points that we want the agent to know about can be ingested into the vector store.</p>\n<p>The AI Agent will use the vector store tool to get relevant context about those points of interest if it needs to.</p>\n<h3>Prerequisites</h3>\n<ul>\n<li><a href=\"https://www.mongodb.com/docs/atlas/tutorial/create-new-cluster/\" rel=\"ugc nofollow\" target=\"_blank\">MongoDB Atlas project and Cluster</a></li>\n<li>OpenAI Valid API Key for embeddings (can be other provider)</li>\n<li>Gemini API Key for the LLM (can be other provider)</li>\n</ul>\n<h3>How it works:</h3>\n<p>There are 2 main flows.</p>\n<ol>\n<li>One is ingesting flow:</li>\n</ol>\n<ul>\n<li>Gets a document from a webhook and use MongoDB Vector Atlas to embed the document <code>title</code> and <code>description</code> into <code>points_of_interest</code> collection.</li>\n<li>Embeddings are stored in a field named <code>embedding</code></li>\n<li>Embeddings used are OpenAI's but it can be any type of supported embedders.</li>\n</ul>\n<ol>\n<li>Second flow is an AI Agent node with Chat Memory Stored in MongoDB Atlas and a Vector Search node as a tool:</li>\n</ol>\n<ul>\n<li><strong>Chat Message Trigger</strong>: Chatting with the AI Agent will trigger the conversation store in the MongoDB Chat Memory node.</li>\n<li>When data is necessary like a location search or details it will go to the \"Vector Search\" tool.</li>\n<li><strong>Vector Search Tool</strong> - uses Atlas Vector Search index created on the <code>points_of_interest</code> collection:</li>\n</ul>\n<pre><code>// index name : \"vector_index\"\n// If you change an embedding provider make sure the numDimensions correspond to the model.\n{\n  \"fields\": [\n    {\n      \"type\": \"vector\",\n      \"path\": \"embedding\",\n      \"numDimensions\": 1536,\n      \"similarity\": \"cosine\"\n    }\n  ]\n}\n</code></pre>\n<p><strong>Additional Resources</strong></p>\n<ul>\n<li><a href=\"https://www.mongodb.com/docs/atlas/atlas-vector-search/tutorials/vector-search-quick-start/?utm=n8n.io\" rel=\"ugc nofollow\" target=\"_blank\">MongoDB Atlas Vector Search</a></li>\n<li><a href=\"https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremongodbatlas?utm=n8n.io\" rel=\"ugc nofollow\" target=\"_blank\">n8n Atlas Vector Search docs</a></li>\n</ul>\n</div><!--]-->",
  "readme_zh": "构建具备自主能力的AI工作流通常需要多个动态组件：记忆管理、文档检索、向量相似度计算和流程编排。\n\n以往这些组件必须手动定制连接。\n\n但现在，通过全新的MongoDB Atlas原生n8n节点，我们大幅降低了这一复杂度。\n\n仅需点击几下即可：\n  * 在MongoDB中存储并调用长期记忆\n  * 查询Atlas Vector Search存储的向量嵌入\n  * 将结果用于LLM链和自动化逻辑\n\n本示例展示了一个以旅行规划为核心的文档摄取与AI智能体流程。我们希望智能体了解的各类兴趣点信息，均可被摄取至向量数据库。\n\nAI智能体在需要时，会调用向量数据库工具获取相关兴趣点的上下文信息。\n\n### 先决条件\n  * [MongoDB Atlas项目及集群](https://www.mongodb.com/docs/atlas/tutorial/create-new-cluster/)\n  * 用于嵌入的OpenAI有效API密钥（可替换为其他供应商）\n  * 用于LLM的Gemini API密钥（可替换为其他供应商）\n\n### 工作原理\n包含两个核心流程：\n\n1. 文档摄取流程：\n  * 通过Webhook获取文档，使用MongoDB Vector Atlas将文档`标题`和`描述`嵌入至`points_of_interest`集合\n  * 嵌入数据存储在名为`embedding`的字段中\n  * 默认使用OpenAI嵌入模型，但支持任意兼容的嵌入器\n\n2. AI智能体流程（聊天记忆存储于MongoDB Atlas，向量搜索节点作为工具）：\n  * **聊天消息触发器**：与AI智能体的对话将触发MongoDB聊天记忆节点的存储\n  * 当需要位置搜索等数据时，将调用\"向量搜索\"工具\n  * **向量搜索工具** - 使用`points_of_interest`集合上创建的Atlas Vector Search索引：\n\n```json\n// 索引名称：\"vector_index\"\n// 更换嵌入供应商时，请确保numDimensions与模型匹配\n{\n  \"fields\": [\n    {\n      \"type\": \"vector\",\n      \"path\": \"embedding\",\n      \"numDimensions\": 1536,\n      \"similarity\": \"cosine\"\n    }\n  ]\n}\n```\n\n**扩展资源**\n  * [MongoDB Atlas向量搜索](https://www.mongodb.com/docs/atlas/atlas-vector-search/tutorials/vector-search-quick-start/?utm=n8n.io)\n  * [n8n Atlas向量搜索文档](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremongodbatlas?utm=n8n.io)",
  "title_zh": "基于MongoDB Atlas、Gemini大语言模型与向量搜索的智能行程规划助手",
  "publish_date_zh": "上次更新于7天前",
  "workflow_json_zh": "{\n  \"id\": \"znRwva47HzXesOYk\",\n  \"meta\": {\n    \"instanceId\": \"3be30861c4ebf6c36b608a223df086e2f2ea418bc2f7f7a746319c3c22897aa9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Travel AssistantAgent\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"3742b914-9f9d-4c6e-bfdf-f494295182a3\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"webhookId\": \"c9b390dc-3f6a-475c-b168-28f3accd20a7\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"5b7fcae2-78ab-45f7-933b-3acf993832e6\",\n      \"name\": \"MongoDB Chat Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryMongoDbChat\",\n      \"position\": [\n        320,\n        220\n      ],\n      \"parameters\": {\n        \"databaseName\": \"test\"\n      },\n      \"credentials\": {\n        \"mongoDb\": {\n          \"id\": \"aEhI0wdmVEJ8c82Z\",\n          \"name\": \"MongoDB account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eaba53fd-fc1c-404f-8720-eeea6cde088e\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        180,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"7DECNCZTsje1tSvf\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"af440c3f-e81f-4e40-a349-6272c3b23517\",\n      \"name\": \"MongoDB Atlas Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas\",\n      \"position\": [\n        480,\n        280\n      ],\n      \"parameters\": {\n        \"mode\": \"retrieve-as-tool\",\n        \"topK\": 10,\n        \"options\": {},\n        \"toolName\": \"PointofinterestKB\",\n        \"metadata_field\": \"description\",\n        \"mongoCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"points_of_interest\",\n          \"cachedResultName\": \"points_of_interest\"\n        },\n        \"toolDescription\": \"The list of Points of Interest from the database.\",\n        \"vectorIndexName\": \"vector_index\"\n      },\n      \"credentials\": {\n        \"mongoDb\": {\n          \"id\": \"aEhI0wdmVEJ8c82Z\",\n          \"name\": \"MongoDB account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"17f2e6f3-d79c-4588-b4ee-bbfff61bc38d\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        580,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"z5h5wLH9yHstZl24\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"fc7ab263-9b1c-4e98-ae51-74248b91fe82\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        780,\n        -420\n      ],\n      \"parameters\": {\n        \"width\": 900,\n        \"height\": 960,\n        \"content\": \"## 基于MongoDB Atlas记忆与向量搜索的AI旅行助手\\n\\n**Atlas MongoDB记忆节点**\\n- 记忆节点使AI助手能够基于数据库中的对话线程持久化存储和检索会话。借助MongoDB灵活的存储能力，可高效存储各类线程和消息（包括图片、音频、视频等多媒体内容）\\n\\n**Atlas MongoDB向量存储节点**\\n- 向量存储工具让AI助手能从预置OpenAI嵌入向量的数据库中，获取最新景点信息\\n\\n### 配置指南：\\n1. 为Gemini大语言模型配置Google API凭证\\n2. 为OpenAI嵌入节点配置OpenAI凭证\\n3. 创建[MongoDB Atlas项目与集群](https://www.mongodb.com/docs/atlas/tutorial/create-new-cluster/)，获取连接字符串并启用IP访问列表（测试阶段建议使用`0.0.0.0/0`开放访问）\\n4. 配置MongoDB账户凭证，确保连接字符串和数据库名称正确\\n5. **向量搜索工具** - 需在数据库的`points_of_interest`集合创建Atlas向量搜索索引：\\n\\n```\\n// 索引名称：\\\"vector_index\\\"\\n// 若更换嵌入模型提供商，请确保numDimensions参数与模型维度匹配\\n{\\n  \\\"fields\\\": [\\n    {\\n      \\\"type\\\": \\\"vector\\\",\\n      \\\"path\\\": \\\"embedding\\\",\\n      \\\"numDimensions\\\": 1536,\\n      \\\"similarity\\\": \\\"cosine\\\"\\n    }\\n  ]\\n}\\n```\\n\\n完成配置后，需通过加载webhook发送示例数据点。这将在`points_of_interest`集合中生成向量化数据。\\n\\n数据就绪后，可尝试询问AI助手相关问题，例如：\\\"推荐适合浪漫度假的地方？\\\"以测试响应效果。\\n\\n**扩展资源**\\n- [MongoDB Atlas向量搜索](https://www.mongodb.com/docs/atlas/atlas-vector-search/tutorials/vector-search-quick-start/?utm=n8n.io)\\n- [n8n Atlas向量搜索文档](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoremongodbatlas?utm=n8n.io)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5a0353d2-410a-4059-8dc1-56a438e22cea\",\n      \"name\": \"AI Traveling Planner Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        220,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"maxIterations\": 10,\n          \"systemMessage\": \"You are a helpful assistant for a trip planner. You have a vector search capability to locate points of interest, Use it and don't invent much.\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"e4c2c92d-6291-42c8-9d03-5abfe1a85a83\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        420,\n        760\n      ],\n      \"webhookId\": \"a48d5121-b453-4b5e-aa30-88ba3e16b931\",\n      \"parameters\": {\n        \"path\": \"ingestData\",\n        \"options\": {\n          \"rawBody\": true\n        },\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8ec1fa93-3eea-44e2-a66d-7f1e961cfa94\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        520,\n        1200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"jsonData\": \"={{ $json.body.raw_body.point_of_interest.title }} - {{ $json.body.raw_body.point_of_interest.description }}\",\n        \"jsonMode\": \"expressionData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f723cca8-7bf4-4c93-932f-b558d21e8a4d\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        1060,\n        1400\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c4a5f12e-de9b-44d0-93b2-a06cb56a1a91\",\n      \"name\": \"MongoDB Atlas Vector Store1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreMongoDBAtlas\",\n      \"position\": [\n        740,\n        880\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"metadata_field\": \"description\",\n        \"mongoCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"points_of_interest\",\n          \"cachedResultName\": \"points_of_interest\"\n        },\n        \"vectorIndexName\": \"vector_index\",\n        \"embeddingBatchSize\": 1\n      },\n      \"credentials\": {\n        \"mongoDb\": {\n          \"id\": \"aEhI0wdmVEJ8c82Z\",\n          \"name\": \"MongoDB account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"cf3b0e71-73d5-4a54-bb64-a2d951cd7726\",\n      \"name\": \"Embeddings OpenAI1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        800,\n        1100\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"z5h5wLH9yHstZl24\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"386538c3-81e7-4797-a4b6-81dea83fa778\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        940\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 360,\n        \"content\": \"## 数据接入的CURL命令示例\\n\\n当您的webhook激活并准备接收请求时，可通过以下示例命令加载数据：\\n\\n```\\ncurl -X POST \\\"https://<账户名>.app.n8n.cloud/webhook-test/ingestData\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"raw_body\\\": {\\n      \\\"point_of_interest\\\": {\\n        \\\"title\\\": \\\"埃菲尔铁塔\\\",\\n        \\\"description\\\": \\\"位于法国巴黎战神广场的标志性镂空结构铁塔\\\"\\n      }\\n    }\\n  }'\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0aa2676e-9f93-4b71-bd69-a4a8b2069496\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1040,\n        620\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 360,\n        \"content\": \"## 向量搜索数据接入\\n\\n通过Webhook将数据导入MongoDB的`points_of_interest`集合。\\n\\n也可采用其他方式实现数据接入，例如从网站/Git/文件或其他支持的数据源加载。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"4600a0b5-b04c-4bd7-9a71-66b498cf1cbb\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"MongoDB Atlas Vector Store1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"MongoDB Atlas Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"MongoDB Atlas Vector Store1\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"MongoDB Atlas Vector Store1\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MongoDB Chat Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Traveling Planner Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Traveling Planner Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MongoDB Atlas Vector Store\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Traveling Planner Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Traveling Planner Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}