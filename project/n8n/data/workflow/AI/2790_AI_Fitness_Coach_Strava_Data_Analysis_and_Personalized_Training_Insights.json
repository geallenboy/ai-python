{
  "title": "AI Fitness Coach Strava Data Analysis and Personalized Training Insights",
  "url": "https://n8n.io/workflows/2790-ai-fitness-coach-strava-data-analysis-and-personalized-training-insights/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "Amjid Ali",
  "publish_date": "Last update a month ago",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"32d80f55a35a7b57f8e47a2ac19558d9f5bcec983a5519d9c29ba713ff4f12c7\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"d9e3e2af-1db4-4ef1-a12a-c56df545e09e\",\"name\":\"Strava Trigger\",\"type\":\"n8n-nodes-base.stravaTrigger\",\"position\":[-60,0],\"webhookId\":\"c656f7eb-6176-48b1-a68f-7e169699cecb\",\"parameters\":{\"event\":\"update\",\"object\":\"activity\",\"options\":{}},\"credentials\":{\"stravaOAuth2Api\":{\"id\":\"lI69z0e9sP9DBcrp\",\"name\":\"Strava account\"}},\"typeVersion\":1},{\"id\":\"344106a7-f1ce-4ef0-be60-8b0dc6c92fe4\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[560,180],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-2.0-flash-exp\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"MqxJQHgdP5sIvdos\",\"name\":\"Google Gemini(PaLM) - ali@amjid\"}},\"typeVersion\":1},{\"id\":\"5ea7c2b8-0ddc-414e-b90c-d1269e074d16\",\"name\":\"Gmail\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1420,-200],\"webhookId\":\"70ab1218-b5a1-47e7-9e9e-89c5c4f84c15\",\"parameters\":{\"sendTo\":\"amjid@amjidali.com\",\"message\":\"={{ $json.html }}\",\"options\":{\"appendAttribution\":false},\"subject\":\"=\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"dYWFonU1YWbQ9MHf\",\"name\":\"Gmail account ali@amjidali\"}},\"typeVersion\":2.1},{\"id\":\"540e2273-c094-4339-a9d9-41cecbaa55d8\",\"name\":\"Combine Everything\",\"type\":\"n8n-nodes-base.code\",\"position\":[280,0],\"parameters\":{\"jsCode\":\"// Recursive function to flatten JSON into a single string\\nfunction flattenJson(obj, prefix = '') {\\n    let str = '';\\n    for (const key in obj) {\\n        if (typeof obj[key] === 'object' && obj[key] !== null) {\\n            str += flattenJson(obj[key], `${prefix}${key}.`);\\n        } else {\\n            str += `${prefix}${key}: ${obj[key]}\\\\n`;\\n        }\\n    }\\n    return str;\\n}\\n\\n// Get input data\\nconst data = $input.all();\\n\\n// Initialize a variable to store the final output\\nlet output = '';\\n\\n// Process each item\\ndata.forEach(item => {\\n    output += flattenJson(item.json);\\n    output += '\\\\n---\\\\n'; // Separator between records\\n});\\n\\n// Return the merged string as output\\nreturn [{ json: { data: output } }];\\n\"},\"typeVersion\":2},{\"id\":\"9db17380-36ee-4d8c-842c-f33215bb5e78\",\"name\":\"Fitness Coach\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[560,0],\"parameters\":{\"text\":\"=You are an Triathlon Coach specializing in guiding the athlete on running, swimming, and cycling. Your role is to analyze Strava data and provide personalized coaching to help users improve their performance. Your responses must be motivational, data-driven, and tailored to the user's fitness level, goals, and recent activity trends.\\n\\n#### Key Abilities:\\n1. **Analyze Activity Data**:\\n   - Evaluate performance metrics such as distance, pace, heart rate, power, elevation, cadence, and swim strokes.\\n   - Identify trends, strengths, and areas for improvement.\\n\\n2. **Provide Feedback**:\\n   - Break down the user's activities and explain their performance in detail (e.g., pacing consistency, effort levels, technique).\\n   - Highlight achievements and areas that need focus.\\n\\n3. **Create Improvement Plans**:\\n   - Suggest actionable steps to improve fitness, endurance, speed, or technique based on the user's goals and performance data.\\n   - Recommend specific workouts, recovery plans, or cross-training exercises tailored to the user's needs.\\n\\n4. **Set Goals and Challenges**:\\n   - Help the user set realistic short-term and long-term goals (e.g., achieving a new personal best, improving endurance, or preparing for a triathlon).\\n   - Suggest weekly or monthly challenges to stay motivated.\\n\\n5. **Motivational Coaching**:\\n   - Provide positive reinforcement and encouragement.\\n   - Help the user maintain consistency and avoid burnout.\\n\\n6. ** Data Analysis **\\n - Do some data formatting also when doing activities ensure to analyze the duration, time, pace etc, too many seonds will not make differnece, try to see the duration which is easy to understand, moreoover, the time of the day when i did activity and so on.\\n\\n***Capabilities as a Triathlong Coach:***\\n** Data Categorization and Context:**\\n\\nIdentify whether the activity is swimming, cycling, or running.\\n-For swimming, distinguish between pool swimming (laps, strokes) and open water swimming (long-distance, sighting).\\nAdapt recommendations based on activity type, terrain, weather, or other environmental factors.\\n**Activity-Specific Metrics:**\\n\\n -- Swim: Focus on distance, pace, SWOLF, stroke count, and stroke efficiency.\\n -- Bike: Analyze distance, average speed, cadence, power zones, heart rate, and elevation gain.\\n -- Run: Examine distance, pace, cadence, stride length, heart rate zones, and elevation changes.\\nPerformance Analysis and Recommendations:\\n\\n** Tailor feedback and advice based on the unique demands of each sport:\\n - Swimming: Emphasize technique (catch, pull, body position), pacing, and breathing drills.\\n - Cycling: Focus on power output, cadence optimization, endurance rides, and interval training.\\n - Running: Analyze pace consistency, cadence, stride efficiency, and running economy.\\nEnvironment-Specific Adjustments:\\n\\n - For swimming, account for differences in pool vs. open water conditions (e.g., sighting, drafting, and waves).\\nFor cycling, consider terrain (flat, hilly, or rolling) and wind resistance.\\n- For running, factor in surface type (road, trail, or track) and weather conditions.\\nIntegrated Triathlon Insights:\\n- \\nProvide guidance on how each discipline complements the others.\\nSuggest \\\"brick workouts\\\" (e.g., bike-to-run) for race-specific adaptations.\\nRecommend recovery strategies that address multi-sport training fatigue.\\nBehavior:\\nBe precise, detailed, and motivational.\\nTailor insights and recommendations to the specific activity type and the athlete’s experience level (beginner, intermediate, advanced).\\nUse clear, actionable language and explain the reasoning behind suggestions.\\nInputs You Will Receive:\\nStrava activity data in JSON or tabular format.\\nAthlete’s profile information, including goals, upcoming events, and experience level.\\nMetrics such as distance, pace, speed, cadence, heart rate zones, power, SWOLF, stroke count, and elevation.\\nOutput Requirements (Activity-Specific):\\nSwim (Pool):\\n\\nAnalyze stroke efficiency, pace consistency, SWOLF, and technique.\\nSuggest drills for stroke improvement (e.g., catch-up, fingertip drag).\\nRecommend pacing intervals (e.g., 10x100m at target pace with rest).\\nSwim (Open Water):\\n\\nEvaluate long-distance pacing and sighting frequency.\\nProvide tips on drafting, breathing bilaterally, and adapting to waves or currents.\\nSuggest open water-specific workouts (e.g., race-pace simulations with buoy turns).\\nBike:\\n\\nAnalyze power distribution across zones, cadence, and heart rate trends.\\nHighlight inefficiencies (e.g., low cadence on climbs or inconsistent power).\\nRecommend specific workouts (e.g., 3x12-minute FTP intervals with 5-minute rest).\\nSuggest gear and bike fit optimizations if needed.\\nRun:\\n\\nEvaluate pacing strategy, cadence, and heart rate zones.\\nIdentify inefficiencies in stride length or cadence.\\nRecommend workouts like tempo runs, intervals, or long runs with negative splits.\\nProvide race-day pacing strategies or tips for improving running economy.\\nCross-Discipline Integration:\\n\\nSuggest brick workouts to improve transitions (e.g., 30-minute bike + 10-minute run at race pace).\\nRecommend recovery sessions (e.g., easy swim or bike after a hard run).\\nAdvise on balancing training load across disciplines.\\n\\n#### Expectations:\\n- **Personalized Responses**: Always consider the user's activity history, goals, and fitness level when offering insights or advice.\\n- **Practical Guidance**: Provide clear, actionable recommendations.\\n- **Encouragement**: Keep the tone positive and motivational, celebrating progress while constructively addressing areas for improvement.\\n\\n#### Context Awareness:\\nYou have access to the user's Strava data, including:\\n- Activity type (e.g., run, swim, bike)\\n- Distance, pace, and time\\n- Heart rate and effort levels\\n- Elevation gain and route details\\n- Historical performance trends\\n\\n#### Example Prompts You Will Receive:\\n- \\\"Here are my recent running activities. How can I improve my pace?\\\"\\n- \\\"This is my swimming data from this week. What should I focus on to improve my technique?\\\"\\n- \\\"Analyze my cycling activity and tell me how I can climb better next time.\\\"\\n\\n\\n#### Goal:\\nHelp the user achieve their athletic potential by providing precise, actionable feedback and a customized plan to enhance their performance and enjoyment of their activities.\\n\\nHere is the Activity Data : \\n{{ $json.data }}\",\"agent\":\"conversationalAgent\",\"options\":{},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"7eaec341-33e0-492f-b87d-7a6dcf3d288e\",\"name\":\"Structure Output\",\"type\":\"n8n-nodes-base.code\",\"position\":[1020,-140],\"parameters\":{\"jsCode\":\"// Input JSON from the previous node\\nconst input = $json.output;\\n\\n// Split the input into sections based on double newlines\\nconst sections = input.split('\\\\n\\\\n');\\n\\n// Initialize the result array\\nconst result = [];\\n\\n// Process each section\\nsections.forEach((section) => {\\n    const trimmedSection = section.trim();\\n\\n    // Handle headings marked with ** (bold)\\n    if (/^\\\\*\\\\*(.*?)\\\\*\\\\*$/.test(trimmedSection)) {\\n        result.push({ type: 'heading', content: trimmedSection.replace(/\\\\*\\\\*(.*?)\\\\*\\\\*/, '<b>$1</b>') });\\n    }\\n    // Handle bullet lists marked with *\\n    else if (trimmedSection.startsWith('*')) {\\n        const listItems = trimmedSection.split('\\\\n').map((item) => item.trim().replace(/^\\\\*\\\\s/, ''));\\n        result.push({ type: 'list', items: listItems });\\n    }\\n    // Handle numbered lists\\n    else if (/^\\\\d+\\\\.\\\\s/.test(trimmedSection)) {\\n        const numberedItems = trimmedSection.split('\\\\n').map((item) => item.trim().replace(/^\\\\d+\\\\.\\\\s/, ''));\\n        result.push({ type: 'numbered-list', items: numberedItems });\\n    }\\n    // Handle paragraphs\\n    else {\\n        result.push({ type: 'paragraph', content: trimmedSection });\\n    }\\n});\\n\\n// Return the result array\\nreturn result.map(item => ({ json: item }));\\n\"},\"typeVersion\":2},{\"id\":\"c70da1ca-72c2-4a95-acaf-4efc23ae3f6e\",\"name\":\"Conver to HTML\",\"type\":\"n8n-nodes-base.code\",\"position\":[1060,60],\"parameters\":{\"jsCode\":\"// Get input data from n8n\\nconst inputData = $input.all(); // Fetch all input data items\\n\\n// Function to convert JSON data into a single HTML string\\nfunction convertToHTML(data) {\\n    let html = '';\\n\\n    data.forEach((item) => {\\n        switch (item.json.type) {\\n            case 'paragraph':\\n                html += `<p>${item.json.content}</p>`;\\n                break;\\n            case 'heading':\\n                html += `<h2>${item.json.content}</h2>`;\\n                break;\\n            case 'list':\\n                html += '<ul>';\\n                item.json.items.forEach((listItem) => {\\n                    html += `<li>${listItem}</li>`;\\n                });\\n                html += '</ul>';\\n                break;\\n            case 'numbered-list':\\n                html += '<ol>';\\n                item.json.items.forEach((listItem) => {\\n                    html += `<li>${listItem}</li>`;\\n                });\\n                html += '</ol>';\\n                break;\\n            default:\\n                break;\\n        }\\n    });\\n\\n    return html;\\n}\\n\\n// Convert inputData to a single HTML string\\nconst singleHTML = convertToHTML(inputData);\\n\\n// Return as a single item\\nreturn [{ json: { html: singleHTML } }];\\n\"},\"typeVersion\":2},{\"id\":\"b646220c-a0c9-4af7-a2a8-09cec619ecbf\",\"name\":\"Send Email\",\"type\":\"n8n-nodes-base.emailSend\",\"position\":[1420,0],\"parameters\":{\"html\":\"={{ $json.html }}\",\"options\":{\"appendAttribution\":false},\"subject\":\"=New Activity on Strava\",\"toEmail\":\"email@gmail.com\",\"fromEmail\":\"Fitness Coach <email@example.com>\"},\"credentials\":{\"smtp\":{\"id\":\"WpZf64vFcOT99dO6\",\"name\":\"SMTP OCI Amjid\"}},\"typeVersion\":2.1},{\"id\":\"06d6262d-dd72-4e57-bccb-31d87a9086c9\",\"name\":\"Code\",\"type\":\"n8n-nodes-base.code\",\"position\":[120,0],\"parameters\":{\"jsCode\":\"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\\nfor (const item of $input.all()) {\\n  item.json.myNewField = 1;\\n}\\n\\nreturn $input.all();\"},\"typeVersion\":2},{\"id\":\"14ce1a3c-573b-4b17-a9f1-eab5964ac9c8\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[460,-300],\"parameters\":{\"color\":7,\"width\":444,\"height\":649,\"content\":\"### Customer Experience Agent (AI)\\nThe AI Triathlon Coach is an intelligent, data-driven virtual assistant designed to help triathletes optimize their training and performance across swimming, cycling, and running. Using advanced algorithms, it analyzes activity data from platforms like Strava and provides actionable insights tailored to the athlete’s goals, experience level, and specific disciplines.\\nThis is connected to Gemini 2.0 Flash\\n\\n\"},\"typeVersion\":1},{\"id\":\"cccfdcfa-c981-4c8d-8177-d9597b50556c\",\"name\":\"Sticky Note12\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[940,-300],\"parameters\":{\"color\":5,\"width\":329,\"height\":655,\"content\":\"### Convert to HTML\\nNow the data will be structured and covnerted to HTML\"},\"typeVersion\":1},{\"id\":\"4618dd06-8754-4ba2-9d86-77d7a4bdbad2\",\"name\":\"Sticky Note13\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-80,-320],\"parameters\":{\"color\":6,\"width\":503,\"height\":651,\"content\":\"### Get Strava Trigger\\nIf you are using Strava, you can create API Key by logging in to : https://developers.strava.com/\\n\\nOnce data is capture you can then structure it, i am commbining all the activity data and sending to next node\"},\"typeVersion\":1},{\"id\":\"2f9626de-789f-4c28-b1bd-189dc1203d46\",\"name\":\"Sticky Note11\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-580,-320],\"parameters\":{\"color\":4,\"width\":475.27306699862953,\"height\":636.1483291619771,\"content\":\"## Developed by Amjid Ali\\n\\nThank you for using this workflow template. It has taken me countless hours of hard work, research, and dedication to develop, and I sincerely hope it adds value to your work.\\n\\nIf you find this template helpful, I kindly ask you to consider supporting my efforts. Your support will help me continue improving and creating more valuable resources.\\n\\nYou can contribute via PayPal here:\\n\\nhttp://paypal.me/pmptraining\\n\\nFor Full Course about ERPNext or Automation using AI follow below link\\n\\nhttp://lms.syncbricks.com\\n\\nAdditionally, when sharing this template, I would greatly appreciate it if you include my original information to ensure proper credit is given.\\n\\nThank you for your generosity and support!\\nEmail : amjid@amjidali.com\\nhttps://linkedin.com/in/amjidali\\nhttps://syncbricks.com\\nhttps://youtube.com/@syncbricks\"},\"typeVersion\":1},{\"id\":\"7b6fb4ba-a20b-40b0-9a40-33f18fb6d28b\",\"name\":\"Sticky Note16\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1300,-300],\"parameters\":{\"color\":4,\"width\":609,\"height\":655,\"content\":\"### Send Personalized Response\\nActivity is analized you can either get the response by Whatsapp , emal, a blog or anything\"},\"typeVersion\":1},{\"id\":\"30197511-1f5b-4d54-af6e-376a3c596b75\",\"name\":\"WhatsApp Business Cloud\",\"type\":\"n8n-nodes-base.whatsApp\",\"position\":[1420,200],\"parameters\":{\"operation\":\"send\",\"requestOptions\":{},\"additionalFields\":{}},\"credentials\":{\"whatsAppApi\":{\"id\":\"pDzUNbXM7NG3GZto\",\"name\":\"WhatsApp account\"}},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Code\":{\"main\":[[{\"node\":\"Combine Everything\",\"type\":\"main\",\"index\":0}]]},\"Send Email\":{\"main\":[[]]},\"Fitness Coach\":{\"main\":[[{\"node\":\"Structure Output\",\"type\":\"main\",\"index\":0}]]},\"Conver to HTML\":{\"main\":[[{\"node\":\"Send Email\",\"type\":\"main\",\"index\":0}]]},\"Strava Trigger\":{\"main\":[[{\"node\":\"Code\",\"type\":\"main\",\"index\":0}]]},\"Structure Output\":{\"main\":[[{\"node\":\"Conver to HTML\",\"type\":\"main\",\"index\":0}]]},\"Combine Everything\":{\"main\":[[{\"node\":\"Fitness Coach\",\"type\":\"main\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Fitness Coach\",\"type\":\"ai_languageModel\",\"index\":0}]]}}}",
  "readme": "### Detailed Title\n\n**\"Triathlon Coach AI Workflow: Strava Data Analysis and Personalized Training Insights using n8n\"**\n\n* * *\n\n### **Description**\n\nThis n8n workflow enables you to build an AI-driven virtual triathlon coach that seamlessly integrates with Strava to analyze activity data and provide athletes with actionable training insights. The workflow processes data from activities like swimming, cycling, and running, delivers personalized feedback, and sends motivational and performance improvement advice via email or WhatsApp.\n\n* * *\n\n### **Workflow Details**\n\n#### **Trigger: Strava Activity Updates**\n\n  * **Node:** `Strava Trigger`\n  * **Purpose:** Captures updates from Strava whenever an activity is recorded or modified. The data includes metrics like distance, pace, elevation, heart rate, and more.\n  * **Integration:** Uses Strava API for real-time synchronization.\n\n\n\n#### **Step 1: Data Preprocessing**\n\n  * **Node:** `Code`\n  * **Purpose:** Combines and flattens the raw Strava activity data into a structured format for easier processing in subsequent nodes.\n  * **Logic:** A recursive function flattens JSON input to create a clean and readable structure.\n\n\n\n#### **Step 2: AI Analysis with Google Gemini**\n\n  * **Node:** `Google Gemini Chat Model`\n  * **Purpose:** Leverages Google Gemini's advanced language model to analyze the activity data.\n  * **Functionality:**\n    * Identifies key performance metrics.\n    * Provides feedback and insights specific to the type of activity (e.g., running, swimming, or cycling).\n    * Offers tailored recommendations and motivational advice.\n\n\n\n#### **Step 3: Generate Structured Output**\n\n  * **Node:** `Structure Output`\n  * **Purpose:** Processes the AI-generated response to create a structured format, such as headings, paragraphs, and bullet lists.\n  * **Output:** Formats the response for clear communication.\n\n\n\n#### **Step 4: Convert to HTML**\n\n  * **Node:** `Convert to HTML`\n  * **Purpose:** Converts the structured output into an HTML format suitable for email or other presentation methods.\n  * **Output:** Ensures the response is visually appealing and easy to understand.\n\n\n\n#### **Step 5: Send Email with Training Insights**\n\n  * **Node:** `Send Email`\n  * **Purpose:** Sends a detailed email to the athlete with performance insights, training recommendations, and motivational messages.\n  * **Integration:** Utilizes Gmail or SMTP for secure and efficient email delivery.\n\n\n\n#### **Optional Step: WhatsApp Notifications**\n\n  * **Node:** `WhatsApp Business Cloud`\n  * **Purpose:** Sends a summary of the activity analysis and key recommendations via WhatsApp for instant access.\n  * **Integration:** Connects to WhatsApp Business Cloud for automated messaging.\n\n\n\n* * *\n\n### **Additional Notes**\n\n  1. **Customization:**\n\n     * You can modify the AI prompt to adapt the recommendations to the athlete's specific goals or fitness levels.\n     * The workflow is flexible and can accommodate additional nodes for more advanced analysis or output formats.\n  2. **Scalability:**\n\n     * Ideal for individual athletes or coaches managing multiple athletes.\n     * Can be expanded to include additional metrics or insights based on user preferences.\n  3. **Performance Metrics Handled:**\n\n     * **Swimming:** SWOLF, stroke count, pace.\n     * **Cycling:** Cadence, power zones, elevation.\n     * **Running:** Pacing, stride length, heart rate zones.\n\n\n\n* * *\n\n### **Implementation Steps**\n\n  1. **Set Up Strava API Key:**\n\n     * Log in to [Strava Developers](https://developers.strava.com/) to generate your API key.\n     * Integrate the API key into the `Strava Trigger` node.\n  2. **Configure Google Gemini Integration:**\n\n     * Use your Google Gemini (PaLM) API credentials in the `Google Gemini Chat Model` node.\n  3. **Customize Email and WhatsApp Messaging:**\n\n     * Update the `Send Email` and `WhatsApp Business Cloud` nodes with the recipient’s details.\n  4. **Automate Execution:**\n\n     * Deploy the workflow and use n8n's scheduling features or cron jobs for periodic execution.\n\n\n\n* * *\n\n### [GET n8n Now](https://www.udemy.com/course/mastering-n8n-ai-agents-api-automation-webhooks-no-code/?referralCode=0309FD70BE2D72630C09)\n\n### [N8N COURSE](https://www.udemy.com/course/mastering-n8n-ai-agents-api-automation-webhooks-no-code/?referralCode=0309FD70BE2D72630C09)\n\n### [n8n Book](https://lms.syncbricks.com/books/n8n/)\n\n### **Developer Notes**\n\n  * **Author:** Amjid Ali  \nimprovements.\n  * **Resources:**\n  * See in Action: [Syncbricks Youtube](http://youtube.com/@syncbricks)\n    * PayPal: [Support the Developer](http://paypal.me/pmptraining)\n    * Courses : [SyncBricks LMS](http://lms.syncbricks.com)\n\n\n\nBy using this workflow, triathletes and coaches can elevate training to the next level with AI-powered insights and actionable recommendations.\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h3>Detailed Title</h3>\n<p><strong>\"Triathlon Coach AI Workflow: Strava Data Analysis and Personalized Training Insights using n8n\"</strong></p>\n<hr>\n<h3><strong>Description</strong></h3>\n<p>This n8n workflow enables you to build an AI-driven virtual triathlon coach that seamlessly integrates with Strava to analyze activity data and provide athletes with actionable training insights. The workflow processes data from activities like swimming, cycling, and running, delivers personalized feedback, and sends motivational and performance improvement advice via email or WhatsApp.</p>\n<hr>\n<h3><strong>Workflow Details</strong></h3>\n<h4><strong>Trigger: Strava Activity Updates</strong></h4>\n<ul>\n<li><strong>Node:</strong> <code>Strava Trigger</code></li>\n<li><strong>Purpose:</strong> Captures updates from Strava whenever an activity is recorded or modified. The data includes metrics like distance, pace, elevation, heart rate, and more.</li>\n<li><strong>Integration:</strong> Uses Strava API for real-time synchronization.</li>\n</ul>\n<h4><strong>Step 1: Data Preprocessing</strong></h4>\n<ul>\n<li><strong>Node:</strong> <code>Code</code></li>\n<li><strong>Purpose:</strong> Combines and flattens the raw Strava activity data into a structured format for easier processing in subsequent nodes.</li>\n<li><strong>Logic:</strong> A recursive function flattens JSON input to create a clean and readable structure.</li>\n</ul>\n<h4><strong>Step 2: AI Analysis with Google Gemini</strong></h4>\n<ul>\n<li><strong>Node:</strong> <code>Google Gemini Chat Model</code></li>\n<li><strong>Purpose:</strong> Leverages Google Gemini's advanced language model to analyze the activity data.</li>\n<li><strong>Functionality:</strong>\n<ul>\n<li>Identifies key performance metrics.</li>\n<li>Provides feedback and insights specific to the type of activity (e.g., running, swimming, or cycling).</li>\n<li>Offers tailored recommendations and motivational advice.</li>\n</ul>\n</li>\n</ul>\n<h4><strong>Step 3: Generate Structured Output</strong></h4>\n<ul>\n<li><strong>Node:</strong> <code>Structure Output</code></li>\n<li><strong>Purpose:</strong> Processes the AI-generated response to create a structured format, such as headings, paragraphs, and bullet lists.</li>\n<li><strong>Output:</strong> Formats the response for clear communication.</li>\n</ul>\n<h4><strong>Step 4: Convert to HTML</strong></h4>\n<ul>\n<li><strong>Node:</strong> <code>Convert to HTML</code></li>\n<li><strong>Purpose:</strong> Converts the structured output into an HTML format suitable for email or other presentation methods.</li>\n<li><strong>Output:</strong> Ensures the response is visually appealing and easy to understand.</li>\n</ul>\n<h4><strong>Step 5: Send Email with Training Insights</strong></h4>\n<ul>\n<li><strong>Node:</strong> <code>Send Email</code></li>\n<li><strong>Purpose:</strong> Sends a detailed email to the athlete with performance insights, training recommendations, and motivational messages.</li>\n<li><strong>Integration:</strong> Utilizes Gmail or SMTP for secure and efficient email delivery.</li>\n</ul>\n<h4><strong>Optional Step: WhatsApp Notifications</strong></h4>\n<ul>\n<li><strong>Node:</strong> <code>WhatsApp Business Cloud</code></li>\n<li><strong>Purpose:</strong> Sends a summary of the activity analysis and key recommendations via WhatsApp for instant access.</li>\n<li><strong>Integration:</strong> Connects to WhatsApp Business Cloud for automated messaging.</li>\n</ul>\n<hr>\n<h3><strong>Additional Notes</strong></h3>\n<ol>\n<li>\n<p><strong>Customization:</strong></p>\n<ul>\n<li>You can modify the AI prompt to adapt the recommendations to the athlete's specific goals or fitness levels.</li>\n<li>The workflow is flexible and can accommodate additional nodes for more advanced analysis or output formats.</li>\n</ul>\n</li>\n<li>\n<p><strong>Scalability:</strong></p>\n<ul>\n<li>Ideal for individual athletes or coaches managing multiple athletes.</li>\n<li>Can be expanded to include additional metrics or insights based on user preferences.</li>\n</ul>\n</li>\n<li>\n<p><strong>Performance Metrics Handled:</strong></p>\n<ul>\n<li><strong>Swimming:</strong> SWOLF, stroke count, pace.</li>\n<li><strong>Cycling:</strong> Cadence, power zones, elevation.</li>\n<li><strong>Running:</strong> Pacing, stride length, heart rate zones.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3><strong>Implementation Steps</strong></h3>\n<ol>\n<li>\n<p><strong>Set Up Strava API Key:</strong></p>\n<ul>\n<li>Log in to <a href=\"https://developers.strava.com/\" rel=\"ugc nofollow\" target=\"_blank\">Strava Developers</a> to generate your API key.</li>\n<li>Integrate the API key into the <code>Strava Trigger</code> node.</li>\n</ul>\n</li>\n<li>\n<p><strong>Configure Google Gemini Integration:</strong></p>\n<ul>\n<li>Use your Google Gemini (PaLM) API credentials in the <code>Google Gemini Chat Model</code> node.</li>\n</ul>\n</li>\n<li>\n<p><strong>Customize Email and WhatsApp Messaging:</strong></p>\n<ul>\n<li>Update the <code>Send Email</code> and <code>WhatsApp Business Cloud</code> nodes with the recipient’s details.</li>\n</ul>\n</li>\n<li>\n<p><strong>Automate Execution:</strong></p>\n<ul>\n<li>Deploy the workflow and use n8n's scheduling features or cron jobs for periodic execution.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3><a href=\"https://www.udemy.com/course/mastering-n8n-ai-agents-api-automation-webhooks-no-code/?referralCode=0309FD70BE2D72630C09\" rel=\"ugc nofollow\" target=\"_blank\">GET n8n Now</a></h3>\n<h3><a href=\"https://www.udemy.com/course/mastering-n8n-ai-agents-api-automation-webhooks-no-code/?referralCode=0309FD70BE2D72630C09\" rel=\"ugc nofollow\" target=\"_blank\">N8N COURSE</a></h3>\n<h3><a href=\"https://lms.syncbricks.com/books/n8n/\" rel=\"ugc nofollow\" target=\"_blank\">n8n Book</a></h3>\n<h3><strong>Developer Notes</strong></h3>\n<ul>\n<li><strong>Author:</strong> Amjid Ali<br>\nimprovements.</li>\n<li><strong>Resources:</strong></li>\n<li>See in Action: <a href=\"http://youtube.com/@syncbricks\" rel=\"ugc nofollow\" target=\"_blank\">Syncbricks Youtube</a>\n<ul>\n<li>PayPal: <a href=\"http://paypal.me/pmptraining\" rel=\"ugc nofollow\" target=\"_blank\">Support the Developer</a></li>\n<li>Courses : <a href=\"http://lms.syncbricks.com\" rel=\"ugc nofollow\" target=\"_blank\">SyncBricks LMS</a></li>\n</ul>\n</li>\n</ul>\n<p>By using this workflow, triathletes and coaches can elevate training to the next level with AI-powered insights and actionable recommendations.</p>\n</div><!--]-->",
  "readme_zh": "### 详细标题  \n\n**《铁人三项AI教练工作流：基于n8n的Strava数据分析与个性化训练洞察》**  \n\n* * *  \n\n### **功能描述**  \n本n8n工作流可构建一个AI驱动的虚拟铁人三项教练，无缝对接Strava运动数据，为运动员提供可执行的训练建议。该工作流能处理游泳、骑行、跑步等活动数据，生成个性化反馈，并通过电子邮件或WhatsApp发送激励提示与表现提升方案。  \n\n* * *  \n\n### **工作流细节**  \n\n#### **触发器：Strava活动更新**  \n  - **节点:** `Strava触发器`  \n  - **功能:** 实时捕获Strava活动记录或编辑时的数据更新，包括距离、配速、海拔、心率等指标  \n  - **集成:** 通过Strava API实现数据同步  \n\n#### **步骤1：数据预处理**  \n  - **节点:** `代码`  \n  - **功能:** 将原始Strava活动数据整合并扁平化为结构化格式  \n  - **逻辑:** 递归函数处理JSON输入，生成清晰可读的数据结构  \n\n#### **步骤2：通过Google Gemini进行AI分析**  \n  - **节点:** `Google Gemini聊天模型`  \n  - **功能:** 调用Google Gemini高级语言模型解析运动数据  \n  - **分析维度:**  \n    - 识别关键表现指标  \n    - 根据运动类型（跑步/游泳/骑行）提供针对性反馈  \n    - 生成定制化训练建议与激励话术  \n\n#### **步骤3：结构化输出生成**  \n  - **节点:** `结构化输出`  \n  - **功能:** 将AI响应处理为标题、段落、项目符号等标准格式  \n  - **输出:** 优化内容可读性  \n\n#### **步骤4：HTML格式转换**  \n  - **节点:** `转换为HTML`  \n  - **功能:** 将结构化内容转为适合邮件展示的HTML格式  \n  - **输出:** 增强视觉呈现效果  \n\n#### **步骤5：发送训练洞察邮件**  \n  - **节点:** `发送邮件`  \n  - **功能:** 向运动员发送含表现分析、训练建议和激励内容的详细邮件  \n  - **集成:** 支持Gmail或SMTP协议  \n\n#### **可选步骤：WhatsApp通知**  \n  - **节点:** `WhatsApp商业云`  \n  - **功能:** 通过WhatsApp推送活动分析摘要与核心建议  \n  - **集成:** 连接WhatsApp商业云实现自动消息推送  \n\n* * *  \n\n### **补充说明**  \n1. **定制化能力**  \n   - 可修改AI提示词以适配运动员特定目标或体能水平  \n   - 支持扩展节点实现更高级分析或输出格式  \n2. **扩展性**  \n   - 适用于个人运动员或管理多运动员的教练  \n   - 可根据需求增加指标维度  \n3. **支持分析指标**  \n   - **游泳:** SWOLF效率值、划水次数、配速  \n   - **骑行:** 踏频、功率区间、爬升海拔  \n   - **跑步:** 步频、步幅、心率区间  \n\n* * *  \n\n### **部署步骤**  \n1. **配置Strava API密钥**  \n   - 登录[Strava开发者平台](https://developers.strava.com/)生成密钥  \n   - 将密钥集成至`Strava触发器`节点  \n2. **设置Google Gemini集成**  \n   - 在`Google Gemini聊天模型`节点中输入API凭证  \n3. **自定义消息渠道**  \n   - 在`发送邮件`和`WhatsApp商业云`节点配置接收人信息  \n4. **自动化执行**  \n   - 部署工作流后，使用n8n定时任务功能实现周期运行  \n\n* * *  \n\n### [立即获取n8n](https://www.udemy.com/course/mastering-n8n-ai-agents-api-automation-webhooks-no-code/?referralCode=0309FD70BE2D72630C09)  \n### [n8n课程](https://www.udemy.com/course/mastering-n8n-ai-agents-api-automation-webhooks-no-code/?referralCode=0309FD70BE2D72630C09)  \n### [n8n书籍](https://lms.syncbricks.com/books/n8n/)  \n\n### **开发者备注**  \n- **作者:** Amjid Ali  \n- **资源:**  \n  - 实战演示: [Syncbricks油管频道](http://youtube.com/@syncbricks)  \n  - 支持开发: [PayPal赞助](http://paypal.me/pmptraining)  \n  - 课程体系: [SyncBricks学习平台](http://lms.syncbricks.com)  \n\n通过该工作流，铁人三项运动员和教练可借助AI洞察将训练效果提升至新高度。",
  "title_zh": "AI健身教练Strava数据分析与个性化训练洞察",
  "publish_date_absolute": "",
  "publish_date_zh": "最近更新于一个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"32d80f55a35a7b57f8e47a2ac19558d9f5bcec983a5519d9c29ba713ff4f12c7\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"d9e3e2af-1db4-4ef1-a12a-c56df545e09e\",\n      \"name\": \"Strava Trigger\",\n      \"type\": \"n8n-nodes-base.stravaTrigger\",\n      \"position\": [\n        -60,\n        0\n      ],\n      \"webhookId\": \"c656f7eb-6176-48b1-a68f-7e169699cecb\",\n      \"parameters\": {\n        \"event\": \"update\",\n        \"object\": \"activity\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"stravaOAuth2Api\": {\n          \"id\": \"lI69z0e9sP9DBcrp\",\n          \"name\": \"Strava account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"344106a7-f1ce-4ef0-be60-8b0dc6c92fe4\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        560,\n        180\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash-exp\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"MqxJQHgdP5sIvdos\",\n          \"name\": \"Google Gemini(PaLM) - ali@amjid\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5ea7c2b8-0ddc-414e-b90c-d1269e074d16\",\n      \"name\": \"Gmail\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1420,\n        -200\n      ],\n      \"webhookId\": \"70ab1218-b5a1-47e7-9e9e-89c5c4f84c15\",\n      \"parameters\": {\n        \"sendTo\": \"amjid@amjidali.com\",\n        \"message\": \"={{ $json.html }}\",\n        \"options\": {\n          \"appendAttribution\": false\n        },\n        \"subject\": \"=\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"dYWFonU1YWbQ9MHf\",\n          \"name\": \"Gmail account ali@amjidali\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"540e2273-c094-4339-a9d9-41cecbaa55d8\",\n      \"name\": \"Combine Everything\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        280,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Recursive function to flatten JSON into a single string\\nfunction flattenJson(obj, prefix = '') {\\n    let str = '';\\n    for (const key in obj) {\\n        if (typeof obj[key] === 'object' && obj[key] !== null) {\\n            str += flattenJson(obj[key], `${prefix}${key}.`);\\n        } else {\\n            str += `${prefix}${key}: ${obj[key]}\\\\n`;\\n        }\\n    }\\n    return str;\\n}\\n\\n// Get input data\\nconst data = $input.all();\\n\\n// Initialize a variable to store the final output\\nlet output = '';\\n\\n// Process each item\\ndata.forEach(item => {\\n    output += flattenJson(item.json);\\n    output += '\\\\n---\\\\n'; // Separator between records\\n});\\n\\n// Return the merged string as output\\nreturn [{ json: { data: output } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9db17380-36ee-4d8c-842c-f33215bb5e78\",\n      \"name\": \"Fitness Coach\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        560,\n        0\n      ],\n      \"parameters\": {\n        \"text\": \"=You are an Triathlon Coach specializing in guiding the athlete on running, swimming, and cycling. Your role is to analyze Strava data and provide personalized coaching to help users improve their performance. Your responses must be motivational, data-driven, and tailored to the user's fitness level, goals, and recent activity trends.\\n\\n#### Key Abilities:\\n1. **Analyze Activity Data**:\\n   - Evaluate performance metrics such as distance, pace, heart rate, power, elevation, cadence, and swim strokes.\\n   - Identify trends, strengths, and areas for improvement.\\n\\n2. **Provide Feedback**:\\n   - Break down the user's activities and explain their performance in detail (e.g., pacing consistency, effort levels, technique).\\n   - Highlight achievements and areas that need focus.\\n\\n3. **Create Improvement Plans**:\\n   - Suggest actionable steps to improve fitness, endurance, speed, or technique based on the user's goals and performance data.\\n   - Recommend specific workouts, recovery plans, or cross-training exercises tailored to the user's needs.\\n\\n4. **Set Goals and Challenges**:\\n   - Help the user set realistic short-term and long-term goals (e.g., achieving a new personal best, improving endurance, or preparing for a triathlon).\\n   - Suggest weekly or monthly challenges to stay motivated.\\n\\n5. **Motivational Coaching**:\\n   - Provide positive reinforcement and encouragement.\\n   - Help the user maintain consistency and avoid burnout.\\n\\n6. ** Data Analysis **\\n - Do some data formatting also when doing activities ensure to analyze the duration, time, pace etc, too many seonds will not make differnece, try to see the duration which is easy to understand, moreoover, the time of the day when i did activity and so on.\\n\\n***Capabilities as a Triathlong Coach:***\\n** Data Categorization and Context:**\\n\\nIdentify whether the activity is swimming, cycling, or running.\\n-For swimming, distinguish between pool swimming (laps, strokes) and open water swimming (long-distance, sighting).\\nAdapt recommendations based on activity type, terrain, weather, or other environmental factors.\\n**Activity-Specific Metrics:**\\n\\n -- Swim: Focus on distance, pace, SWOLF, stroke count, and stroke efficiency.\\n -- Bike: Analyze distance, average speed, cadence, power zones, heart rate, and elevation gain.\\n -- Run: Examine distance, pace, cadence, stride length, heart rate zones, and elevation changes.\\nPerformance Analysis and Recommendations:\\n\\n** Tailor feedback and advice based on the unique demands of each sport:\\n - Swimming: Emphasize technique (catch, pull, body position), pacing, and breathing drills.\\n - Cycling: Focus on power output, cadence optimization, endurance rides, and interval training.\\n - Running: Analyze pace consistency, cadence, stride efficiency, and running economy.\\nEnvironment-Specific Adjustments:\\n\\n - For swimming, account for differences in pool vs. open water conditions (e.g., sighting, drafting, and waves).\\nFor cycling, consider terrain (flat, hilly, or rolling) and wind resistance.\\n- For running, factor in surface type (road, trail, or track) and weather conditions.\\nIntegrated Triathlon Insights:\\n- \\nProvide guidance on how each discipline complements the others.\\nSuggest \\\"brick workouts\\\" (e.g., bike-to-run) for race-specific adaptations.\\nRecommend recovery strategies that address multi-sport training fatigue.\\nBehavior:\\nBe precise, detailed, and motivational.\\nTailor insights and recommendations to the specific activity type and the athlete’s experience level (beginner, intermediate, advanced).\\nUse clear, actionable language and explain the reasoning behind suggestions.\\nInputs You Will Receive:\\nStrava activity data in JSON or tabular format.\\nAthlete’s profile information, including goals, upcoming events, and experience level.\\nMetrics such as distance, pace, speed, cadence, heart rate zones, power, SWOLF, stroke count, and elevation.\\nOutput Requirements (Activity-Specific):\\nSwim (Pool):\\n\\nAnalyze stroke efficiency, pace consistency, SWOLF, and technique.\\nSuggest drills for stroke improvement (e.g., catch-up, fingertip drag).\\nRecommend pacing intervals (e.g., 10x100m at target pace with rest).\\nSwim (Open Water):\\n\\nEvaluate long-distance pacing and sighting frequency.\\nProvide tips on drafting, breathing bilaterally, and adapting to waves or currents.\\nSuggest open water-specific workouts (e.g., race-pace simulations with buoy turns).\\nBike:\\n\\nAnalyze power distribution across zones, cadence, and heart rate trends.\\nHighlight inefficiencies (e.g., low cadence on climbs or inconsistent power).\\nRecommend specific workouts (e.g., 3x12-minute FTP intervals with 5-minute rest).\\nSuggest gear and bike fit optimizations if needed.\\nRun:\\n\\nEvaluate pacing strategy, cadence, and heart rate zones.\\nIdentify inefficiencies in stride length or cadence.\\nRecommend workouts like tempo runs, intervals, or long runs with negative splits.\\nProvide race-day pacing strategies or tips for improving running economy.\\nCross-Discipline Integration:\\n\\nSuggest brick workouts to improve transitions (e.g., 30-minute bike + 10-minute run at race pace).\\nRecommend recovery sessions (e.g., easy swim or bike after a hard run).\\nAdvise on balancing training load across disciplines.\\n\\n#### Expectations:\\n- **Personalized Responses**: Always consider the user's activity history, goals, and fitness level when offering insights or advice.\\n- **Practical Guidance**: Provide clear, actionable recommendations.\\n- **Encouragement**: Keep the tone positive and motivational, celebrating progress while constructively addressing areas for improvement.\\n\\n#### Context Awareness:\\nYou have access to the user's Strava data, including:\\n- Activity type (e.g., run, swim, bike)\\n- Distance, pace, and time\\n- Heart rate and effort levels\\n- Elevation gain and route details\\n- Historical performance trends\\n\\n#### Example Prompts You Will Receive:\\n- \\\"Here are my recent running activities. How can I improve my pace?\\\"\\n- \\\"This is my swimming data from this week. What should I focus on to improve my technique?\\\"\\n- \\\"Analyze my cycling activity and tell me how I can climb better next time.\\\"\\n\\n\\n#### Goal:\\nHelp the user achieve their athletic potential by providing precise, actionable feedback and a customized plan to enhance their performance and enjoyment of their activities.\\n\\nHere is the Activity Data : \\n{{ $json.data }}\",\n        \"agent\": \"conversationalAgent\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"7eaec341-33e0-492f-b87d-7a6dcf3d288e\",\n      \"name\": \"Structure Output\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1020,\n        -140\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Input JSON from the previous node\\nconst input = $json.output;\\n\\n// Split the input into sections based on double newlines\\nconst sections = input.split('\\\\n\\\\n');\\n\\n// Initialize the result array\\nconst result = [];\\n\\n// Process each section\\nsections.forEach((section) => {\\n    const trimmedSection = section.trim();\\n\\n    // Handle headings marked with ** (bold)\\n    if (/^\\\\*\\\\*(.*?)\\\\*\\\\*$/.test(trimmedSection)) {\\n        result.push({ type: 'heading', content: trimmedSection.replace(/\\\\*\\\\*(.*?)\\\\*\\\\*/, '<b>$1</b>') });\\n    }\\n    // Handle bullet lists marked with *\\n    else if (trimmedSection.startsWith('*')) {\\n        const listItems = trimmedSection.split('\\\\n').map((item) => item.trim().replace(/^\\\\*\\\\s/, ''));\\n        result.push({ type: 'list', items: listItems });\\n    }\\n    // Handle numbered lists\\n    else if (/^\\\\d+\\\\.\\\\s/.test(trimmedSection)) {\\n        const numberedItems = trimmedSection.split('\\\\n').map((item) => item.trim().replace(/^\\\\d+\\\\.\\\\s/, ''));\\n        result.push({ type: 'numbered-list', items: numberedItems });\\n    }\\n    // Handle paragraphs\\n    else {\\n        result.push({ type: 'paragraph', content: trimmedSection });\\n    }\\n});\\n\\n// Return the result array\\nreturn result.map(item => ({ json: item }));\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c70da1ca-72c2-4a95-acaf-4efc23ae3f6e\",\n      \"name\": \"Conver to HTML\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1060,\n        60\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get input data from n8n\\nconst inputData = $input.all(); // Fetch all input data items\\n\\n// Function to convert JSON data into a single HTML string\\nfunction convertToHTML(data) {\\n    let html = '';\\n\\n    data.forEach((item) => {\\n        switch (item.json.type) {\\n            case 'paragraph':\\n                html += `<p>${item.json.content}</p>`;\\n                break;\\n            case 'heading':\\n                html += `<h2>${item.json.content}</h2>`;\\n                break;\\n            case 'list':\\n                html += '<ul>';\\n                item.json.items.forEach((listItem) => {\\n                    html += `<li>${listItem}</li>`;\\n                });\\n                html += '</ul>';\\n                break;\\n            case 'numbered-list':\\n                html += '<ol>';\\n                item.json.items.forEach((listItem) => {\\n                    html += `<li>${listItem}</li>`;\\n                });\\n                html += '</ol>';\\n                break;\\n            default:\\n                break;\\n        }\\n    });\\n\\n    return html;\\n}\\n\\n// Convert inputData to a single HTML string\\nconst singleHTML = convertToHTML(inputData);\\n\\n// Return as a single item\\nreturn [{ json: { html: singleHTML } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"b646220c-a0c9-4af7-a2a8-09cec619ecbf\",\n      \"name\": \"Send Email\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        1420,\n        0\n      ],\n      \"parameters\": {\n        \"html\": \"={{ $json.html }}\",\n        \"options\": {\n          \"appendAttribution\": false\n        },\n        \"subject\": \"=New Activity on Strava\",\n        \"toEmail\": \"email@gmail.com\",\n        \"fromEmail\": \"Fitness Coach <email@example.com>\"\n      },\n      \"credentials\": {\n        \"smtp\": {\n          \"id\": \"WpZf64vFcOT99dO6\",\n          \"name\": \"SMTP OCI Amjid\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"06d6262d-dd72-4e57-bccb-31d87a9086c9\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        120,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\\nfor (const item of $input.all()) {\\n  item.json.myNewField = 1;\\n}\\n\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"14ce1a3c-573b-4b17-a9f1-eab5964ac9c8\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        -300\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 444,\n        \"height\": 649,\n        \"content\": \"### 客户体验专员（人工智能方向）  \\nAI铁人三项教练是一款智能化的数据驱动虚拟助手，专为帮助运动员优化游泳、骑行和跑步的专项训练及竞技表现而设计。该助手通过先进算法分析来自Strava等平台的运动数据，并根据运动员的个人目标、经验水平及专项特点提供可执行的训练建议。  \\n（本产品接入Gemini 2.0 Flash系统）  \\n\\n注：根据技术文本特性，采用以下处理方式：\\n1. 专业术语保留英文品牌名\\\"Strava\\\"和\\\"Gemini 2.0 Flash\\\"\\n2. \\\"data-driven\\\"译为\\\"数据驱动\\\"符合科技行业惯例\\n3. \\\"actionable insights\\\"意译为\\\"可执行的训练建议\\\"更符合运动场景\\n4. 使用\\\"智能化\\\"对应\\\"intelligent\\\"体现AI产品特征\\n5. 括号补充说明保持技术文档的完整性\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cccfdcfa-c981-4c8d-8177-d9597b50556c\",\n      \"name\": \"Sticky Note12\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        940,\n        -300\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 329,\n        \"height\": 655,\n        \"content\": \"### 转换为HTML\\n现在数据将被结构化并转换为HTML\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4618dd06-8754-4ba2-9d86-77d7a4bdbad2\",\n      \"name\": \"Sticky Note13\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -80,\n        -320\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 503,\n        \"height\": 651,\n        \"content\": \"### 获取Strava触发器\\n如果您正在使用Strava，可以通过登录以下网址创建API密钥：https://developers.strava.com/\\n\\n数据捕获后即可进行结构化处理，我会将所有活动数据整合并发送至下一节点\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2f9626de-789f-4c28-b1bd-189dc1203d46\",\n      \"name\": \"Sticky Note11\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -580,\n        -320\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 475.27306699862953,\n        \"height\": 636.1483291619771,\n        \"content\": \"## 由Amjid Ali开发\\n\\n感谢您使用此工作流模板。它凝聚了我无数小时的辛勤工作、研究及专注开发，衷心希望能为您的项目创造价值。\\n\\n若本模板对您有所帮助，恳请考虑支持我的持续创作。您的支持将助力我不断优化并产出更多优质资源。\\n\\n可通过PayPal进行赞助：\\nhttp://paypal.me/pmptraining\\n\\n获取ERPNext完整课程或AI自动化教程，请访问：\\nhttp://lms.syncbricks.com\\n\\n另请注意，在分享此模板时，若能保留原始作者信息以标明出处，我将不胜感激。\\n\\n感谢您的慷慨支持！\\n联系邮箱：amjid@amjidali.com\\n领英主页：https://linkedin.com/in/amjidali\\n官方网站：https://syncbricks.com\\nYouTube频道：https://youtube.com/@syncbricks\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7b6fb4ba-a20b-40b0-9a40-33f18fb6d28b\",\n      \"name\": \"Sticky Note16\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1300,\n        -300\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 609,\n        \"height\": 655,\n        \"content\": \"### 发送个性化回复\\n活动已分析完毕，您可以通过WhatsApp、电子邮件、博客或任何方式获取回复\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"30197511-1f5b-4d54-af6e-376a3c596b75\",\n      \"name\": \"WhatsApp Business Cloud\",\n      \"type\": \"n8n-nodes-base.whatsApp\",\n      \"position\": [\n        1420,\n        200\n      ],\n      \"parameters\": {\n        \"operation\": \"send\",\n        \"requestOptions\": {},\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"whatsAppApi\": {\n          \"id\": \"pDzUNbXM7NG3GZto\",\n          \"name\": \"WhatsApp account\"\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Everything\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Email\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Fitness Coach\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Structure Output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Conver to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Strava Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structure Output\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Conver to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Everything\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fitness Coach\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Fitness Coach\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}