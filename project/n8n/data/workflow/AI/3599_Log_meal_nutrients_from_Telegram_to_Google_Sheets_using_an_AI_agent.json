{
  "title": "Log meal nutrients from Telegram to Google Sheets using an AI agent",
  "url": "https://n8n.io/workflows/3599-log-meal-nutrients-from-telegram-to-google-sheets-using-an-ai-agent/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/",
  "author": "PollupAI",
  "publish_date": "Last update 9 days ago",
  "content": "",
  "workflow_json": "{\"nodes\":[{\"id\":\"cab4467e-449e-4823-abe5-eb0368883e9c\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[740,180],\"webhookId\":\"231e8ee3-320f-47c7-8368-03965732d709\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"a32a646b-80f2-46a4-81c2-7e3b5a4a192c\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[940,140],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{\"temperature\":0}},\"credentials\":{\"openAiApi\":{\"id\":\"1IOLtYX7aTspCAN8\",\"name\":\"OpenAI Pollup\"}},\"typeVersion\":1.2},{\"id\":\"3d934326-ad89-477f-9ab6-b97c04960597\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[1160,140],\"parameters\":{\"jsonSchemaExample\":\"\\n[{\\\"name\\\": \\\"total Protein\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total lipids\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total carbohydrats\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total potassium\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total magnesium\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total sodium\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total kcal\\\",\\n  \\\"quantity\\\": 248,\\n  \\\"unit\\\": \\\"kcal\\\"\\n},\\n  {\\n    \\\"reasoning\\\": \\\"this is my reasoning\\\"\\n  }\\n]\"},\"typeVersion\":1.2},{\"id\":\"5a086fb6-6f12-40b6-aa82-64bb2d76b730\",\"name\":\"Get Audio File\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[300,-280],\"webhookId\":\"36dfe00d-6f05-419a-a80a-f6c7321e9a7d\",\"parameters\":{\"fileId\":\"={{ $json.message.voice.file_id }}\",\"resource\":\"file\"},\"credentials\":{\"telegramApi\":{\"id\":\"ynY4cqTMvfHfi0bc\",\"name\":\"Mes repas bot\"}},\"typeVersion\":1.2},{\"id\":\"f72d4182-26e2-4026-8097-7e4cef50bfed\",\"name\":\"Transcribe Recording\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[520,-280],\"parameters\":{\"options\":{},\"resource\":\"audio\",\"operation\":\"transcribe\",\"binaryPropertyName\":\"=data\"},\"credentials\":{\"openAiApi\":{\"id\":\"1IOLtYX7aTspCAN8\",\"name\":\"OpenAI Pollup\"}},\"typeVersion\":1.6},{\"id\":\"0f3b227f-b15a-410c-9333-a40c3e1b95ee\",\"name\":\"Limit\",\"type\":\"n8n-nodes-base.limit\",\"position\":[1996,-80],\"parameters\":{},\"typeVersion\":1},{\"id\":\"fddaae3c-d7e6-4cb4-bb23-f734dcbefb85\",\"name\":\"Receive Telegram message\",\"type\":\"n8n-nodes-base.telegramTrigger\",\"position\":[-140,-180],\"webhookId\":\"34756bf0-27bd-4384-9e46-549473c307a0\",\"parameters\":{\"updates\":[\"message\",\"channel_post\"],\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"ynY4cqTMvfHfi0bc\",\"name\":\"Mes repas bot\"}},\"typeVersion\":1.2},{\"id\":\"9c6c00ca-e6f6-4f0b-b120-2249978379aa\",\"name\":\"If it's a voice message\",\"type\":\"n8n-nodes-base.if\",\"position\":[80,-180],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"fb7a6885-6149-4666-bd3a-5eebde28d601\",\"operator\":{\"type\":\"object\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.message.voice }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"97e56ec8-3a71-4e0d-a626-07a5113b09b7\",\"name\":\"Set chatInput from message\",\"type\":\"n8n-nodes-base.set\",\"position\":[740,-80],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"3af0daa0-795f-45e8-ae10-fca10950b855\",\"name\":\"chatInput\",\"type\":\"string\",\"value\":\"={{ $json.message.text }}\"}]}},\"typeVersion\":3.4},{\"id\":\"e1609f06-f769-4dfe-98e4-a56e95217307\",\"name\":\"Set chatInput from voice\",\"type\":\"n8n-nodes-base.set\",\"position\":[740,-280],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"3af0daa0-795f-45e8-ae10-fca10950b855\",\"name\":\"chatInput\",\"type\":\"string\",\"value\":\"={{ $json.text }}\"}]}},\"typeVersion\":3.4},{\"id\":\"42acb130-91f7-4d94-8b6b-c6b6b79f59f9\",\"name\":\"List of Ingredients and nutrients\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[960,-80],\"parameters\":{\"text\":\"=\\n*\\\"Approximate the kcals, protein, carbohydrates, lipids (fats), and electrolyte (sodium, potassium, magnesium, Zinc and Iron) content in the following dietary intake statement:  \\n\\n{{ $json.chatInput }}\\n\\nProvide estimates for each component based on typical nutritional values. Break down the contributions from each food item (steak, salad, vinaigrette) and give a total number for each nutrient.  \\n\\nGive the total result as a json, with as name, the name of the nutrient, as quantity, the total summed value, and as unit the unit that been chosen (gr, mg).\\nPut the reasoning in another variable called \\\"reasonning\\\"\\n\",\"options\":{\"systemMessage\":\"You are a nutrition expert.\"},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.8},{\"id\":\"b27195f2-cb45-45d8-ab87-60e76828f7c4\",\"name\":\"Explode the list\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1336,-80],\"parameters\":{\"include\":\"={{ $json.output }}\",\"options\":{},\"fieldToSplitOut\":\"output\"},\"typeVersion\":1},{\"id\":\"cf95c6a1-8ed4-45ee-90d0-fe87300c2968\",\"name\":\"Add date\",\"type\":\"n8n-nodes-base.code\",\"position\":[1556,-80],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"let entry = $input.item.json.output\\nlet my_date = new Date()\\n\\nlet my_date_f = (my_date.getTime() / 86400000) + 25569;\\nentry.my_date = my_date_f\\nreturn {json: entry}\"},\"typeVersion\":2},{\"id\":\"a0fd85ad-5cce-4419-af80-a6ff50a93631\",\"name\":\"Store in sheet\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1776,-80],\"parameters\":{\"columns\":{\"value\":{},\"schema\":[{\"id\":\"name\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"quantity\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"quantity\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"unit\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"unit\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"my_date\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"my_date\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"autoMapInputData\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1HdL1iwHvIhN44yW_HzRbjC--ZxItCfyX-wObjWzZHAc/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1HdL1iwHvIhN44yW_HzRbjC--ZxItCfyX-wObjWzZHAc\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1HdL1iwHvIhN44yW_HzRbjC--ZxItCfyX-wObjWzZHAc/edit?usp=drivesdk\",\"cachedResultName\":\"Mes repas\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"gdLmm513ROUyH6oU\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"06ee2513-0622-450b-b195-84cdef13cd27\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-200,-380],\"parameters\":{\"color\":4,\"height\":340,\"content\":\"## Send a Telegram message\\n1. To your channel with the list of what you ate during your last meal. \\nYour input can be a written or a voice message.\"},\"typeVersion\":1},{\"id\":\"fc4a2f5b-5565-4644-bd9f-74da73818698\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-680,-380],\"parameters\":{\"color\":5,\"width\":460,\"content\":\"## Setup\\n1. Create a telegram Bot by following the instructions [here](https://docs.n8n.io/integrations/builtin/credentials/telegram/).\\n2. Create an empty Google sheet and set it in \\\"Store in sheet\\\" along with your credentials\\n3. Set your creadential for your OpenAI account\\n\"},\"typeVersion\":1},{\"id\":\"9e4e2ead-0c19-4799-8004-adaf30a5e0b1\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1700,-220],\"parameters\":{\"color\":4,\"height\":320,\"content\":\"## Check your data\\n- to see if it seems correct \\n- you can filter and sum your nutrients to check if you had enough! \"},\"typeVersion\":1},{\"id\":\"e57b8eef-d72d-46b2-ae1b-5d61a2c22d01\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[260,-380],\"parameters\":{\"color\":4,\"width\":640,\"height\":260,\"content\":\"## If it's an Audio file\\nTRanscript it using openAI \"},\"typeVersion\":1},{\"id\":\"9bd1447e-bcde-4b4c-92c9-76120c9a42d2\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,80],\"parameters\":{\"color\":4,\"width\":340,\"height\":260,\"content\":\"## Testing\\nYou can chat with the workflow by clicking on \\\"open chat\\\" to test your input and the response\"},\"typeVersion\":1},{\"id\":\"ac3a7c88-782a-4943-a332-2509287df840\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[920,-220],\"parameters\":{\"color\":4,\"width\":340,\"height\":320,\"content\":\"## Personalize the prompt!!\\n- It's a very simple one, you can of course make it better!\"},\"typeVersion\":1},{\"id\":\"58642d48-d97e-4a3d-84ea-a4de580e4c25\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2140,-220],\"parameters\":{\"color\":4,\"height\":320,\"content\":\"## Personalize the response message\\nYou can send the response of the Agent\\nOr just be more polite! \"},\"typeVersion\":1},{\"id\":\"c6b8206c-bcb0-4034-8f99-9a4165770709\",\"name\":\"Respond message\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[2216,-80],\"webhookId\":\"8e646f8a-1f21-4719-b5f2-0cc5fad144df\",\"parameters\":{\"text\":\"Your meal has been saved\",\"chatId\":\"={{ $('If it's a voice message').item.json.message.chat.id }}\",\"additionalFields\":{\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"ynY4cqTMvfHfi0bc\",\"name\":\"Mes repas bot\"}},\"typeVersion\":1.2},{\"id\":\"414d1da4-94e0-454d-acf9-a8344d1168b4\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-680,-200],\"parameters\":{\"width\":460,\"height\":260,\"content\":\"## Contact me\\n- If you need any modification to this workflow\\n- if you need some help with this workflow\\n- Or if you need any workflow in n8n, Make, or Langchain / Langgraph\\n\\nWrite to me: [thomas@pollup.net](mailto:thomas@pollup.net)\\n\\nThis a light version of My Meals. I have a working \\\"Pro\\\" version with searches in the USDA database for each ingredients that return ALL the Nutrients.\\n\"},\"typeVersion\":1}],\"connections\":{\"Limit\":{\"main\":[[{\"node\":\"Respond message\",\"type\":\"main\",\"index\":0}]]},\"Add date\":{\"main\":[[{\"node\":\"Store in sheet\",\"type\":\"main\",\"index\":0}]]},\"Get Audio File\":{\"main\":[[{\"node\":\"Transcribe Recording\",\"type\":\"main\",\"index\":0}]]},\"Store in sheet\":{\"main\":[[{\"node\":\"Limit\",\"type\":\"main\",\"index\":0}]]},\"Explode the list\":{\"main\":[[{\"node\":\"Add date\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"List of Ingredients and nutrients\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Transcribe Recording\":{\"main\":[[{\"node\":\"Set chatInput from voice\",\"type\":\"main\",\"index\":0}]]},\"If it's a voice message\":{\"main\":[[{\"node\":\"Get Audio File\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Set chatInput from message\",\"type\":\"main\",\"index\":0}]]},\"Receive Telegram message\":{\"main\":[[{\"node\":\"If it's a voice message\",\"type\":\"main\",\"index\":0}]]},\"Set chatInput from voice\":{\"main\":[[{\"node\":\"List of Ingredients and nutrients\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"List of Ingredients and nutrients\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Set chatInput from message\":{\"main\":[[{\"node\":\"List of Ingredients and nutrients\",\"type\":\"main\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"List of Ingredients and nutrients\",\"type\":\"main\",\"index\":0}]]},\"List of Ingredients and nutrients\":{\"main\":[[{\"node\":\"Explode the list\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Who is this for?\n\nThis workflow is ideal for individuals focused on nutrition tracking, meal planning, or diet optimization—whether you’re a health-conscious individual, fitness coach, or developer working on a healthtech app. It also fits well for anyone who wants to capture their meal data via voice or text, without manually entering everything into a spreadsheet.\n\n## What problem is this workflow solving?\n\nManually logging meals and breaking down their nutritional content is time-consuming and often skipped. This workflow automates that process using Telegram for input, OpenAI for natural language understanding, and Google Sheets for structured tracking. It enables users to record meals by typing or sending voice messages, which are transcribed, analyzed for nutrients, and automatically stored for tracking and review.\n\n## What this workflow does\n\nThis n8n automation lets users send either a text or voice message to a Telegram bot describing their meal. The workflow then:\n\n  1. Receives the Telegram message\n  2. Checks if it’s a voice message  \n• If yes: Downloads the audio file and transcribes it using OpenAI  \n• If no: Uses the text input directly\n  3. Sends the meal description to OpenAI to extract a structured list of ingredients and nutritional details\n  4. Parses and stores the results in Google Sheets\n  5. Responds via Telegram with a personalized confirmation message\n\n\n\nA testing interface also allows you to simulate prompts and view structured outputs for development or debugging.\n\n## Setup\n\n  1. Create a Telegram bot via BotFather and note the API token.\n  2. Create an empty Google Sheet and store the sheet ID in the environment.\n  3. Set up your OpenAI credentials in the n8n credential manager.\n  4. Customize the “List of Ingredients and Nutrients” node with your prompt if needed.\n  5. (Optional) Use the “Testing” section to simulate messages and refine outputs before going live.\n\n\n\n## How to customize this workflow to your needs\n\n• Enhance prompts in the OpenAI node to improve the structure and accuracy of responses.  \n• Add new fields in the Google Sheet and corresponding logic in the parser if you want more detail.  \n• Adjust the Telegram response to provide motivational feedback, dietary tips, or summaries.  \n• Upgrade to the “Pro” version mentioned in the contact section for USDA database integration and complete nutrient breakdowns.\n\nThis is a lightweight, AI-powered meal logging automation that transforms voice or text into actionable nutrition data—perfect for making healthy eating easier and more data-driven.\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h2>Who is this for?</h2>\n<p>This workflow is ideal for individuals focused on nutrition tracking, meal planning, or diet optimization—whether you’re a health-conscious individual, fitness coach, or developer working on a healthtech app. It also fits well for anyone who wants to capture their meal data via voice or text, without manually entering everything into a spreadsheet.</p>\n<h2>What problem is this workflow solving?</h2>\n<p>Manually logging meals and breaking down their nutritional content is time-consuming and often skipped. This workflow automates that process using Telegram for input, OpenAI for natural language understanding, and Google Sheets for structured tracking. It enables users to record meals by typing or sending voice messages, which are transcribed, analyzed for nutrients, and automatically stored for tracking and review.</p>\n<h2>What this workflow does</h2>\n<p>This n8n automation lets users send either a text or voice message to a Telegram bot describing their meal. The workflow then:</p>\n<ol>\n<li>Receives the Telegram message</li>\n<li>Checks if it’s a voice message<br>\n•\tIf yes: Downloads the audio file and transcribes it using OpenAI<br>\n•\tIf no: Uses the text input directly</li>\n<li>Sends the meal description to OpenAI to extract a structured list of ingredients and nutritional details</li>\n<li>Parses and stores the results in Google Sheets</li>\n<li>Responds via Telegram with a personalized confirmation message</li>\n</ol>\n<p>A testing interface also allows you to simulate prompts and view structured outputs for development or debugging.</p>\n<h2>Setup</h2>\n<ol>\n<li>Create a Telegram bot via BotFather and note the API token.</li>\n<li>Create an empty Google Sheet and store the sheet ID in the environment.</li>\n<li>Set up your OpenAI credentials in the n8n credential manager.</li>\n<li>Customize the “List of Ingredients and Nutrients” node with your prompt if needed.</li>\n<li>(Optional) Use the “Testing” section to simulate messages and refine outputs before going live.</li>\n</ol>\n<h2>How to customize this workflow to your needs</h2>\n<p>• Enhance prompts in the OpenAI node to improve the structure and accuracy of responses.<br>\n• Add new fields in the Google Sheet and corresponding logic in the parser if you want more detail.<br>\n• Adjust the Telegram response to provide motivational feedback, dietary tips, or summaries.<br>\n• Upgrade to the “Pro” version mentioned in the contact section for USDA database integration and complete nutrient breakdowns.</p>\n<p>This is a lightweight, AI-powered meal logging automation that transforms voice or text into actionable nutrition data—perfect for making healthy eating easier and more data-driven.</p>\n</div><!--]-->",
  "readme_zh": "## 适用人群\n\n本工作流专为注重营养追踪、膳食计划或饮食优化的人士设计——无论您是健康爱好者、健身教练，还是开发健康科技应用的工程师。同样适合希望通过语音或文字记录饮食，而无需手动填写电子表格的用户。\n\n## 解决痛点\n\n人工记录餐食并分析营养成分耗时费力，常被半途而废。本工作流通过Telegram输入、OpenAI自然语言解析和Google Sheets结构化存储实现自动化处理。用户只需发送文字或语音描述餐食，系统便会自动转录内容、解析营养成分，并生成可追踪的数据记录。\n\n## 工作流机制\n\n这套n8n自动化系统允许用户向Telegram机器人发送文字或语音描述餐食，工作流将：\n1. 接收Telegram消息\n2. 自动识别消息类型  \n   • 语音消息：下载音频文件并通过OpenAI转写为文字  \n   • 文字消息：直接使用文本内容\n3. 将餐食描述发送至OpenAI，解析出结构化食材清单及营养数据\n4. 将分析结果存储至Google Sheets表格\n5. 通过Telegram发送个性化确认消息\n\n测试界面支持模拟输入并查看结构化输出，便于开发调试。\n\n## 配置指南\n\n1. 通过BotFather创建Telegram机器人并保存API密钥\n2. 创建空白Google Sheets表格，将表格ID存入环境变量\n3. 在n8n凭证管理器配置OpenAI密钥\n4. 按需调整\"食材与营养清单\"节点的提示词模板\n5. (可选)使用\"测试\"模块模拟消息调试输出效果\n\n## 个性化定制建议\n\n• 优化OpenAI节点提示词，提升响应数据的结构与准确性  \n• 在Google Sheets添加字段并同步修改解析逻辑，以获取更详细数据  \n• 调整Telegram回复模板，增加激励语句、饮食建议或营养摘要  \n• 升级\"专业版\"(联系章节提及)可接入USDA营养数据库，获取完整营养分解\n\n这套轻量级AI膳食记录系统将语音/文字转化为可操作的营养数据，让健康饮食更轻松、更科学。",
  "title_zh": "使用AI代理将Telegram中的膳食营养记录同步至Google Sheets",
  "publish_date_absolute": "2025-04-21",
  "publish_date_zh": "上次更新于9天前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"id\": \"cab4467e-449e-4823-abe5-eb0368883e9c\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        740,\n        180\n      ],\n      \"webhookId\": \"231e8ee3-320f-47c7-8368-03965732d709\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"a32a646b-80f2-46a4-81c2-7e3b5a4a192c\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        940,\n        140\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {\n          \"temperature\": 0\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"1IOLtYX7aTspCAN8\",\n          \"name\": \"OpenAI Pollup\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"3d934326-ad89-477f-9ab6-b97c04960597\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1160,\n        140\n      ],\n      \"parameters\": {\n        \"jsonSchemaExample\": \"\\n[{\\\"name\\\": \\\"total Protein\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total lipids\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total carbohydrats\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total potassium\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total magnesium\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total sodium\\\",\\n  \\\"quantity\\\": 86,\\n  \\\"unit\\\": \\\"gr\\\"\\n},\\n  {\\\"name\\\": \\\"total kcal\\\",\\n  \\\"quantity\\\": 248,\\n  \\\"unit\\\": \\\"kcal\\\"\\n},\\n  {\\n    \\\"reasoning\\\": \\\"this is my reasoning\\\"\\n  }\\n]\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"5a086fb6-6f12-40b6-aa82-64bb2d76b730\",\n      \"name\": \"Get Audio File\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        300,\n        -280\n      ],\n      \"webhookId\": \"36dfe00d-6f05-419a-a80a-f6c7321e9a7d\",\n      \"parameters\": {\n        \"fileId\": \"={{ $json.message.voice.file_id }}\",\n        \"resource\": \"file\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"ynY4cqTMvfHfi0bc\",\n          \"name\": \"Mes repas bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"f72d4182-26e2-4026-8097-7e4cef50bfed\",\n      \"name\": \"Transcribe Recording\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        520,\n        -280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"audio\",\n        \"operation\": \"transcribe\",\n        \"binaryPropertyName\": \"=data\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"1IOLtYX7aTspCAN8\",\n          \"name\": \"OpenAI Pollup\"\n        }\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"0f3b227f-b15a-410c-9333-a40c3e1b95ee\",\n      \"name\": \"Limit\",\n      \"type\": \"n8n-nodes-base.limit\",\n      \"position\": [\n        1996,\n        -80\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fddaae3c-d7e6-4cb4-bb23-f734dcbefb85\",\n      \"name\": \"Receive Telegram message\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        -140,\n        -180\n      ],\n      \"webhookId\": \"34756bf0-27bd-4384-9e46-549473c307a0\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\",\n          \"channel_post\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"ynY4cqTMvfHfi0bc\",\n          \"name\": \"Mes repas bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"9c6c00ca-e6f6-4f0b-b120-2249978379aa\",\n      \"name\": \"If it's a voice message\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        80,\n        -180\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"fb7a6885-6149-4666-bd3a-5eebde28d601\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.message.voice }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"97e56ec8-3a71-4e0d-a626-07a5113b09b7\",\n      \"name\": \"Set chatInput from message\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        740,\n        -80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3af0daa0-795f-45e8-ae10-fca10950b855\",\n              \"name\": \"chatInput\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.message.text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e1609f06-f769-4dfe-98e4-a56e95217307\",\n      \"name\": \"Set chatInput from voice\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        740,\n        -280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3af0daa0-795f-45e8-ae10-fca10950b855\",\n              \"name\": \"chatInput\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"42acb130-91f7-4d94-8b6b-c6b6b79f59f9\",\n      \"name\": \"List of Ingredients and nutrients\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        960,\n        -80\n      ],\n      \"parameters\": {\n        \"text\": \"=\\n*\\\"Approximate the kcals, protein, carbohydrates, lipids (fats), and electrolyte (sodium, potassium, magnesium, Zinc and Iron) content in the following dietary intake statement:  \\n\\n{{ $json.chatInput }}\\n\\nProvide estimates for each component based on typical nutritional values. Break down the contributions from each food item (steak, salad, vinaigrette) and give a total number for each nutrient.  \\n\\nGive the total result as a json, with as name, the name of the nutrient, as quantity, the total summed value, and as unit the unit that been chosen (gr, mg).\\nPut the reasoning in another variable called \\\"reasonning\\\"\\n\",\n        \"options\": {\n          \"systemMessage\": \"You are a nutrition expert.\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"b27195f2-cb45-45d8-ab87-60e76828f7c4\",\n      \"name\": \"Explode the list\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1336,\n        -80\n      ],\n      \"parameters\": {\n        \"include\": \"={{ $json.output }}\",\n        \"options\": {},\n        \"fieldToSplitOut\": \"output\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cf95c6a1-8ed4-45ee-90d0-fe87300c2968\",\n      \"name\": \"Add date\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1556,\n        -80\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"let entry = $input.item.json.output\\nlet my_date = new Date()\\n\\nlet my_date_f = (my_date.getTime() / 86400000) + 25569;\\nentry.my_date = my_date_f\\nreturn {json: entry}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a0fd85ad-5cce-4419-af80-a6ff50a93631\",\n      \"name\": \"Store in sheet\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1776,\n        -80\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {},\n          \"schema\": [\n            {\n              \"id\": \"name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"quantity\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"quantity\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"unit\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"unit\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"my_date\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"my_date\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"autoMapInputData\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1HdL1iwHvIhN44yW_HzRbjC--ZxItCfyX-wObjWzZHAc/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1HdL1iwHvIhN44yW_HzRbjC--ZxItCfyX-wObjWzZHAc\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1HdL1iwHvIhN44yW_HzRbjC--ZxItCfyX-wObjWzZHAc/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Mes repas\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"gdLmm513ROUyH6oU\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"06ee2513-0622-450b-b195-84cdef13cd27\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -200,\n        -380\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"height\": 340,\n        \"content\": \"## 发送一条Telegram消息\\n1. 发送到你自己的频道，内容是你上一餐吃了什么。\\n你可以输入文字或发送语音消息。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fc4a2f5b-5565-4644-bd9f-74da73818698\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -680,\n        -380\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 460,\n        \"content\": \"## 设置步骤\\n1. 按照[此指南](https://docs.n8n.io/integrations/builtin/credentials/telegram/)创建Telegram机器人\\n2. 新建一个空白Google表格，在\\\"存储到表格\\\"选项中配置该表格及您的账户凭证\\n3. 设置您的OpenAI账户访问凭证\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9e4e2ead-0c19-4799-8004-adaf30a5e0b1\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1700,\n        -220\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"height\": 320,\n        \"content\": \"## 检查你的数据\\n- 确认数据是否准确\\n- 可通过筛选和汇总营养素来检查摄入是否充足！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e57b8eef-d72d-46b2-ae1b-5d61a2c22d01\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        260,\n        -380\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 640,\n        \"height\": 260,\n        \"content\": \"## 如果是音频文件\\n使用OpenAI进行转录\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9bd1447e-bcde-4b4c-92c9-76120c9a42d2\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        560,\n        80\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 340,\n        \"height\": 260,\n        \"content\": \"## 测试\\n您可以点击“打开聊天”与工作流对话，测试您的输入和响应\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ac3a7c88-782a-4943-a332-2509287df840\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        920,\n        -220\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 340,\n        \"height\": 320,\n        \"content\": \"## 个性化你的提示词！！\\n- 这个非常简单，你当然可以做得更好！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"58642d48-d97e-4a3d-84ea-a4de580e4c25\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2140,\n        -220\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"height\": 320,\n        \"content\": \"## 个性化回复消息\\n你可以发送代理的回复\\n或者只是更礼貌一些！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c6b8206c-bcb0-4034-8f99-9a4165770709\",\n      \"name\": \"Respond message\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        2216,\n        -80\n      ],\n      \"webhookId\": \"8e646f8a-1f21-4719-b5f2-0cc5fad144df\",\n      \"parameters\": {\n        \"text\": \"Your meal has been saved\",\n        \"chatId\": \"={{ $('If it's a voice message').item.json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"ynY4cqTMvfHfi0bc\",\n          \"name\": \"Mes repas bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"414d1da4-94e0-454d-acf9-a8344d1168b4\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -680,\n        -200\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 260,\n        \"content\": \"## 联系我\\n- 如需对此工作流进行任何修改\\n- 如需获取此工作流的相关帮助\\n- 或需要n8n、Make、Langchain/Langgraph平台的工作流定制\\n\\n请写信至：[thomas@pollup.net](mailto:thomas@pollup.net)\\n\\n此为My Meals轻量版。我另有一个\\\"专业版\\\"可实现完整功能——通过USDA数据库查询每种食材，返回全部营养成分数据。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Limit\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add date\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store in sheet\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Audio File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Transcribe Recording\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Store in sheet\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Limit\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Explode the list\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add date\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"List of Ingredients and nutrients\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Transcribe Recording\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set chatInput from voice\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If it's a voice message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Audio File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Set chatInput from message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receive Telegram message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If it's a voice message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set chatInput from voice\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List of Ingredients and nutrients\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"List of Ingredients and nutrients\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set chatInput from message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List of Ingredients and nutrients\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List of Ingredients and nutrients\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List of Ingredients and nutrients\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Explode the list\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}