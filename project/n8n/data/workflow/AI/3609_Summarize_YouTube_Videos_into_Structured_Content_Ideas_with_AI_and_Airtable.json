{
  "title": "Summarize YouTube Videos into Structured Content Ideas with AI and Airtable",
  "url": "https://n8n.io/workflows/3609-summarize-youtube-videos-into-structured-content-ideas-with-ai-and-airtable/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/",
  "author": "Batu Öztürk",
  "publish_date": "Last update 4 days ago",
  "content": "",
  "workflow_json": "{\"id\":\"6bMVzmrbPexvBe6q\",\"meta\":{\"instanceId\":\"558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a\",\"templateCredsSetupCompleted\":true},\"name\":\"YouTube to Airtable Anonym\",\"tags\":[{\"id\":\"1iR8rLF2nlFdk8Iy\",\"name\":\"Tool\",\"createdAt\":\"2025-04-10T20:38:51.198Z\",\"updatedAt\":\"2025-04-10T20:38:51.198Z\"},{\"id\":\"kY9rLUshnq9TIJVU\",\"name\":\"Freebie\",\"createdAt\":\"2025-04-11T17:35:46.605Z\",\"updatedAt\":\"2025-04-11T17:35:46.605Z\"}],\"nodes\":[{\"id\":\"eb18fe74-8812-48ab-b977-41f5cedf9a76\",\"name\":\"Get video transcript\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[880,0],\"parameters\":{\"url\":\"https://youtube-video-summarizer-gpt-ai.p.rapidapi.com/api/v1/get-transcript-v2\",\"options\":{},\"sendQuery\":true,\"sendHeaders\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"video_id\",\"value\":\"={{ $json.videoId }}\"},{\"name\":\"platform\",\"value\":\"youtube\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"X-Rapidapi-Key\",\"value\":\"{YOUR-API-KEY}\"},{\"name\":\"X-Rapidapi-Host\",\"value\":\"youtube-video-summarizer-gpt-ai.p.rapidapi.com\"}]}},\"typeVersion\":4.2},{\"id\":\"7a672f41-646f-46bf-be8b-96a84c1b0dd7\",\"name\":\"Get Video ID\",\"type\":\"n8n-nodes-base.code\",\"position\":[660,0],\"parameters\":{\"jsCode\":\"// Loop over input items\\nfor (const item of $input.all()) {\\n    // Extract the YouTube video ID using a regular expression\\n    const Source = item.json.Source;\\n    const videoIdMatch = Source.match(/(?:v=|\\\\/)([a-zA-Z0-9_-]{11})/);\\n\\n    const videoId = videoIdMatch ? videoIdMatch[1] : null; // Extracted video ID or null if not found\\n\\n    // Add the video ID to the JSON\\n    item.json.videoId = videoId;\\n}\\n\\n// Return all items with the new videoId field\\nreturn $input.all();\\n\"},\"typeVersion\":2},{\"id\":\"4b026bcf-7563-4444-8ce1-9e9a89eef56d\",\"name\":\"Combine Transcripts\",\"type\":\"n8n-nodes-base.code\",\"position\":[1320,0],\"parameters\":{\"jsCode\":\"// Initialize an empty string to hold the concatenated transcript\\nlet Transcript = \\\"\\\";\\n\\n// Safeguard against undefined paths and ensure required properties exist\\nif ($json.data && $json.data.transcripts) {\\n    // Loop through all transcript objects\\n    for (const key in $json.data.transcripts) {\\n        if ($json.data.transcripts[key].custom) {\\n            const customArray = $json.data.transcripts[key].custom;\\n\\n            // Extract and append text from each transcript entry\\n            for (const item of customArray) {\\n                if (item.text) {\\n                    Transcript += item.text + \\\" \\\"; // Add a space between texts\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n// Return the combined transcript as a new field\\nreturn [\\n    {\\n        json: {\\n            Transcript: Transcript.trim(), // Trim to clean up extra spaces\\n        },\\n    },\\n];\\n\"},\"typeVersion\":2},{\"id\":\"693ab15f-307e-4fdf-9752-2cc64a80307d\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[240,0],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"minutes\"}]}},\"typeVersion\":1.2},{\"id\":\"1df795e2-ac7e-42a8-a1f4-2c292b704613\",\"name\":\"Airtable\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[460,0],\"parameters\":{\"base\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"appgNpFtbtaGHM4g0\",\"cachedResultUrl\":\"https://airtable.com/appgNpFtbtaGHM4g0\",\"cachedResultName\":\"Content Hub\"},\"limit\":1,\"table\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"tblwBVudDpOMkUGKL\",\"cachedResultUrl\":\"https://airtable.com/appgNpFtbtaGHM4g0/tblwBVudDpOMkUGKL\",\"cachedResultName\":\"Ideas\"},\"options\":{},\"operation\":\"search\",\"returnAll\":false,\"filterByFormula\":\"AND(     {Status} = \\\"\\\",     {Type} = \\\"Youtube Video\\\" )\"},\"credentials\":{\"airtableTokenApi\":{\"id\":\"g540vJVYsNT8ZS11\",\"name\":\"Airtable Personal Access Token account\"}},\"typeVersion\":2.1},{\"id\":\"8b2cfd44-4897-403c-9393-5cc917baa673\",\"name\":\"Get Full Transcript\",\"type\":\"n8n-nodes-base.set\",\"position\":[1540,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"2eaa3e02-95f7-47d9-a27d-64974f9c1a7b\",\"name\":\"Transcript\",\"type\":\"string\",\"value\":\"={{ $json.Transcript }}\"}]}},\"typeVersion\":3.4},{\"id\":\"8ea3c1a7-d428-467f-aff2-9b3f572f911f\",\"name\":\"Get All Transcripts\",\"type\":\"n8n-nodes-base.set\",\"position\":[1100,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"01fb3072-61c6-47f6-b6dd-7cbf817f5b4a\",\"name\":\"data.transcripts\",\"type\":\"object\",\"value\":\"={{ $json.data.transcripts }}\"}]}},\"typeVersion\":3.4},{\"id\":\"6cff40d0-18ba-4ae0-a1c9-070d8fb39347\",\"name\":\"Get Main Idea & Key Takeaways\",\"type\":\"n8n-nodes-base.set\",\"position\":[2120,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"e9b7f303-562b-40bd-8c3c-8c7138bd4329\",\"name\":\"Main Idea\",\"type\":\"string\",\"value\":\"={{ $json.output.MainIdea }}\"},{\"id\":\"572627f4-b9b3-4c59-a570-5bd810f68825\",\"name\":\"Key Takeaways\",\"type\":\"array\",\"value\":\"={{ $json.output['Key Takeaways'] }}\"}]}},\"typeVersion\":3.4},{\"id\":\"1e71d56b-3140-4dd8-b4d8-cdbe9eb24bde\",\"name\":\"Extract detailed summary\",\"type\":\"@n8n/n8n-nodes-langchain.informationExtractor\",\"position\":[1760,0],\"parameters\":{\"text\":\"=Your job is to generate detailed summary of \\\"{{ $json.Transcript }}\\\".\\n\\nAlways output your answer in the following format:\\n\\n- Main Idea\\n- Takeaways\",\"options\":{},\"schemaType\":\"fromJson\",\"jsonSchemaExample\":\"{\\n\\t\\\"MainIdea\\\": \\\"The video provides a step-by-step guide on how to build an MCP (Model Context Protocol) server to connect agents to various data sources, specifically focusing on retrieving stock prices from Yahoo Finance. It explains the setup process, including creating functions, integrating with agents, and connecting to other tools.\\\",\\n\\t\\\"Key Takeaways\\\": [\\\"1. **MCP Overview**: MCP allows AI engineers to define tools once and reuse them across different frameworks, simplifying the integration process. 2. **Building the Server**: The video demonstrates how to create a Python function to fetch stock prices using the Y Finance library, and how to wrap this function into an MCP server. 3. **Testing the Server**: It shows how to use a visual inspector to test the MCP server before deploying it. 4. **Connecting to Agents**: The tutorial covers how to connect the MCP server to agents using HuggingFace's smaller agents library, enabling the retrieval of stock prices through prompts. 5. **Adding More Tools**: Viewers learn how to expand the server's capabilities by adding additional tools for stock information and income statements. 6. **Integration with Other Platforms**: The video explains how to integrate the MCP server with platforms like Cursor and Langflow, showcasing the flexibility of the MCP setup. 7. **Advanced Features**: It touches on additional MCP capabilities such as storing prompts and creating resources for data access, enhancing the server's functionality.\\\"]\\n}\"},\"typeVersion\":1},{\"id\":\"942a77e1-5773-4657-a38c-2b1013af6544\",\"name\":\"Update Airtable\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[2320,0],\"parameters\":{\"base\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"appgNpFtbtaGHM4g0\",\"cachedResultUrl\":\"https://airtable.com/appgNpFtbtaGHM4g0\",\"cachedResultName\":\"Content Hub\"},\"table\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"tblwBVudDpOMkUGKL\",\"cachedResultUrl\":\"https://airtable.com/appgNpFtbtaGHM4g0/tblwBVudDpOMkUGKL\",\"cachedResultName\":\"Ideas\"},\"columns\":{\"value\":{\"id\":\"={{ $('Airtable').item.json.id }}\",\"Status\":true,\"Main Idea\":\"={{ $json['Main Idea'] }}\",\"Takeaways\":\"={{ $json['Key Takeaways'] }}\"},\"schema\":[{\"id\":\"id\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":true,\"required\":false,\"displayName\":\"id\",\"defaultMatch\":true},{\"id\":\"Title\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":false,\"required\":false,\"displayName\":\"Title\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Description\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":false,\"required\":false,\"displayName\":\"Description\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Main Idea\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Main Idea\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Takeaways\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Takeaways\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Status\",\"type\":\"boolean\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Status\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Source\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":false,\"required\":false,\"displayName\":\"Source\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Type\",\"type\":\"options\",\"display\":true,\"options\":[{\"name\":\"Youtube Video\",\"value\":\"Youtube Video\"},{\"name\":\"Web Article\",\"value\":\"Web Article\"},{\"name\":\"Own Notes\",\"value\":\"Own Notes\"},{\"name\":\"E-Book\",\"value\":\"E-Book\"},{\"name\":\"Twitter\",\"value\":\"Twitter\"},{\"name\":\"Linkedin\",\"value\":\"Linkedin\"}],\"removed\":true,\"readOnly\":false,\"required\":false,\"displayName\":\"Type\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Draft\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":false,\"required\":false,\"displayName\":\"Draft\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Attachment - Video\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":false,\"required\":false,\"displayName\":\"Attachment - Video\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Attachment - Image\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":false,\"required\":false,\"displayName\":\"Attachment - Image\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Created\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":true,\"required\":false,\"displayName\":\"Created\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Last Modified\",\"type\":\"string\",\"display\":true,\"removed\":true,\"readOnly\":true,\"required\":false,\"displayName\":\"Last Modified\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[\"id\"],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{\"typecast\":true},\"operation\":\"update\"},\"credentials\":{\"airtableTokenApi\":{\"id\":\"g540vJVYsNT8ZS11\",\"name\":\"Airtable Personal Access Token account\"}},\"typeVersion\":2.1},{\"id\":\"4cc08263-7293-4c2b-8684-d15a67a61d33\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[760,-580],\"parameters\":{\"width\":460,\"height\":200,\"content\":\"## 📝 Description\\n\\nAutomatically turn YouTube videos into clear, structured content ideas stored in Airtable. This workflow pulls new video links from Airtable, extracts transcripts using a RapidAPI service, summarizes them with your favourite LLM, and logs the main idea and key takeaways—keeping your content pipeline fresh with minimal effort.\"},\"typeVersion\":1},{\"id\":\"299c6f10-c4a1-4da7-a198-121b054c8882\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[760,-340],\"parameters\":{\"width\":460,\"height\":220,\"content\":\"## ⚙️ What It Does\\n- **Scans** Airtable for new YouTube video links every 5 minutes..\\n- **Extracts** the transcript of the video using a third-party API via RapidAPI.\\n- **Summarizes** the content to generate a main idea and takeaways.\\n- **Updates** the original Airtable entry with the insights and marks it as completed.\"},\"typeVersion\":1},{\"id\":\"48d11dd7-556d-4154-b580-396c55aa5645\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1300,-580],\"parameters\":{\"width\":500,\"height\":460,\"content\":\"## 🧰 Setup Instructions\\n1. Clone this template into your n8n workspace.\\n2. Open the Get YouTube Sources node and configure your Airtable credentials.\\n3. In the Get video transcript node:\\n   - Enter your X-RapidAPI-Key under headers.\\n   - The API endpoint is pre-configured.\\n4. Connect your LLM credentials to the Extract detailed summary node.\\n\\n5. (Optional) Adjust the summarization prompt in the LangChain node to better suit your tone.\\n6. Set your preferred schedule in the Trigger node.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"1f4b0e52-7589-4c9c-8102-9105e296577b\",\"connections\":{\"Airtable\":{\"main\":[[{\"node\":\"Get Video ID\",\"type\":\"main\",\"index\":0}]]},\"Get Video ID\":{\"main\":[[{\"node\":\"Get video transcript\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Airtable\",\"type\":\"main\",\"index\":0}]]},\"Combine Transcripts\":{\"main\":[[{\"node\":\"Get Full Transcript\",\"type\":\"main\",\"index\":0}]]},\"Get All Transcripts\":{\"main\":[[{\"node\":\"Combine Transcripts\",\"type\":\"main\",\"index\":0}]]},\"Get Full Transcript\":{\"main\":[[{\"node\":\"Extract detailed summary\",\"type\":\"main\",\"index\":0}]]},\"Get video transcript\":{\"main\":[[{\"node\":\"Get All Transcripts\",\"type\":\"main\",\"index\":0}]]},\"Extract detailed summary\":{\"main\":[[{\"node\":\"Get Main Idea & Key Takeaways\",\"type\":\"main\",\"index\":0}]]},\"Get Main Idea & Key Takeaways\":{\"main\":[[{\"node\":\"Update Airtable\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# Extract the main idea and key takeaways from YouTube videos and turn them into Airtable content ideas\n\n## 📝 Description\n\nAutomatically turn YouTube videos into clear, structured content ideas stored in Airtable. This workflow pulls new video links from Airtable, extracts transcripts using a RapidAPI service, summarizes them with your favourite LLM, and logs the main idea and key takeaways—keeping your content pipeline fresh with minimal effort.\n\n## ⚙️ What It Does\n\nScans Airtable for new YouTube video links every 5 minutes.\n\nExtracts the transcript of the video using a third-party API via RapidAPI.\n\nSummarizes the content to generate a main idea and takeaways.\n\nUpdates the original Airtable entry with the insights and marks it as completed.\n\n## 🛠 Prerequisites\n\nBefore using this template, make sure you have:\n\n✅ A RapidAPI account with access to the youtube-video-summarizer-gpt-ai API.\n\n✅ A valid RapidAPI key.\n\n✅ An OpenAI, Claude or Gemini account connected to n8n.\n\n✅ An Airtable account with a base and table ready.\n\n## 🧰 Setup Instructions\n\nClone this template into your n8n workspace.\n\nOpen the Get YouTube Sources node and configure your Airtable credentials.\n\nIn the Get video transcript node:\n\nEnter your X-RapidAPI-Key under headers.\n\nThe API endpoint is pre-configured.\n\nConnect your LLM credentials to the Extract detailed summary node.\n\n(Optional) Adjust the summarization prompt in the LangChain node to better suit your tone.\n\nSet your preferred schedule in the Trigger node.\n\n## 📋 Airtable Setup\n\nCreate a base (e.g., Content Hub) with a table named Ideas and the following columns:\n\nColumn Name | Type | Required | Notes  \n---|---|---|---  \nType | Single select | ✅ | Must be set to Youtube Video  \nSource | URL | ✅ | The YouTube video URL  \nStatus | Checkbox | ✅ | Leave empty initially; updated after processing  \nMainIdea | Single line text | ✅ | Summary generated by OpenAI  \n|  |  |   \nKey Takeaways | Long text | ✅ | List of takeaways extracted from the transcript  \n  \nActivate the workflow—and you're done!\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h1>Extract the main idea and key takeaways from YouTube videos and turn them into Airtable content ideas</h1>\n<h2>📝 Description</h2>\n<p>Automatically turn YouTube videos into clear, structured content ideas stored in Airtable. This workflow pulls new video links from Airtable, extracts transcripts using a RapidAPI service, summarizes them with your favourite LLM, and logs the main idea and key takeaways—keeping your content pipeline fresh with minimal effort.</p>\n<h2>⚙️ What It Does</h2>\n<p>Scans Airtable for new YouTube video links every 5 minutes.</p>\n<p>Extracts the transcript of the video using a third-party API via RapidAPI.</p>\n<p>Summarizes the content to generate a main idea and takeaways.</p>\n<p>Updates the original Airtable entry with the insights and marks it as completed.</p>\n<h2>🛠 Prerequisites</h2>\n<p>Before using this template, make sure you have:</p>\n<p>✅ A RapidAPI account with access to the youtube-video-summarizer-gpt-ai API.</p>\n<p>✅ A valid RapidAPI key.</p>\n<p>✅ An OpenAI, Claude or Gemini account connected to n8n.</p>\n<p>✅ An Airtable account with a base and table ready.</p>\n<h2>🧰 Setup Instructions</h2>\n<p>Clone this template into your n8n workspace.</p>\n<p>Open the Get YouTube Sources node and configure your Airtable credentials.</p>\n<p>In the Get video transcript node:</p>\n<p>Enter your X-RapidAPI-Key under headers.</p>\n<p>The API endpoint is pre-configured.</p>\n<p>Connect your LLM credentials to the Extract detailed summary node.</p>\n<p>(Optional) Adjust the summarization prompt in the LangChain node to better suit your tone.</p>\n<p>Set your preferred schedule in the Trigger node.</p>\n<h2>📋 Airtable Setup</h2>\n<p>Create a base (e.g., Content Hub) with a table named Ideas and the following columns:</p>\n<table>\n<thead>\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Type</td>\n<td>Single select</td>\n<td>✅</td>\n<td>Must be set to Youtube Video</td>\n</tr>\n<tr>\n<td>Source</td>\n<td>URL</td>\n<td>✅</td>\n<td>The YouTube video URL</td>\n</tr>\n<tr>\n<td>Status</td>\n<td>Checkbox</td>\n<td>✅</td>\n<td>Leave empty initially; updated after processing</td>\n</tr>\n<tr>\n<td>MainIdea</td>\n<td>Single line text</td>\n<td>✅</td>\n<td>Summary generated by OpenAI</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Key Takeaways</td>\n<td>Long text</td>\n<td>✅</td>\n<td>List of takeaways extracted from the transcript</td>\n</tr>\n</tbody>\n</table>\n<p>Activate the workflow—and you're done!</p>\n</div><!--]-->",
  "readme_zh": "# 从YouTube视频提取核心观点与要点并转化为Airtable内容创意\n\n## 📝 功能描述\n\n自动将YouTube视频转化为清晰、结构化的内容创意存储至Airtable。该工作流从Airtable获取新视频链接，通过RapidAPI服务提取字幕，使用您偏好的大语言模型生成摘要，记录核心观点与关键要点——以最小投入持续更新您的内容生产线。\n\n## ⚙️ 工作流程\n\n每5分钟扫描Airtable中的新增YouTube视频链接\n\n通过RapidAPI第三方接口获取视频字幕文本\n\n生成内容摘要，提炼核心观点与关键要点\n\n用分析结果更新原Airtable记录并标记为已完成\n\n## 🛠 使用前提\n\n使用本模板前请确保具备：\n\n✅ 已注册RapidAPI账号并拥有youtube-video-summarizer-gpt-ai接口权限\n\n✅ 有效的RapidAPI密钥\n\n✅ 已绑定OpenAI/Claude/Gemini账户的n8n账号\n\n✅ 已创建包含数据表的Airtable工作区\n\n## 🧰 配置指南\n\n将本模板克隆至您的n8n工作区\n\n配置\"获取YouTube源\"节点中的Airtable凭证\n\n在\"获取视频字幕\"节点中：\n\n在headers项填写X-RapidAPI-Key\n\nAPI端点已预设完成\n\n将您的大语言模型凭证关联至\"生成详细摘要\"节点\n\n（可选）调整LangChain节点中的摘要提示语以适应行文风格\n\n在触发器节点设置您偏好的执行频率\n\n## 📋 Airtable配置\n\n创建名为\"内容中心\"的工作区，内含\"创意库\"表格及以下字段：\n\n字段名称 | 类型 | 必填 | 备注  \n---|---|---|---  \n类型 | 单选 | ✅ | 需设置为YouTube视频  \n来源 | 网址 | ✅ | YouTube视频链接  \n状态 | 复选框 | ✅ | 初始留空，处理完成后更新  \n核心观点 | 单行文本 | ✅ | 由AI生成的摘要  \n|  |  |   \n关键要点 | 长文本 | ✅ | 从字幕提取的要点列表  \n\n激活工作流——配置完成！",
  "title_zh": "利用AI和Airtable将YouTube视频总结为结构化内容创意",
  "publish_date_absolute": "2025-05-03",
  "publish_date_zh": "上次更新于4天前",
  "workflow_json_zh": "{\n  \"id\": \"6bMVzmrbPexvBe6q\",\n  \"meta\": {\n    \"instanceId\": \"558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"YouTube to Airtable Anonym\",\n  \"tags\": [\n    {\n      \"id\": \"1iR8rLF2nlFdk8Iy\",\n      \"name\": \"Tool\",\n      \"createdAt\": \"2025-04-10T20:38:51.198Z\",\n      \"updatedAt\": \"2025-04-10T20:38:51.198Z\"\n    },\n    {\n      \"id\": \"kY9rLUshnq9TIJVU\",\n      \"name\": \"Freebie\",\n      \"createdAt\": \"2025-04-11T17:35:46.605Z\",\n      \"updatedAt\": \"2025-04-11T17:35:46.605Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"eb18fe74-8812-48ab-b977-41f5cedf9a76\",\n      \"name\": \"Get video transcript\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        880,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://youtube-video-summarizer-gpt-ai.p.rapidapi.com/api/v1/get-transcript-v2\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"video_id\",\n              \"value\": \"={{ $json.videoId }}\"\n            },\n            {\n              \"name\": \"platform\",\n              \"value\": \"youtube\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"X-Rapidapi-Key\",\n              \"value\": \"{YOUR-API-KEY}\"\n            },\n            {\n              \"name\": \"X-Rapidapi-Host\",\n              \"value\": \"youtube-video-summarizer-gpt-ai.p.rapidapi.com\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"7a672f41-646f-46bf-be8b-96a84c1b0dd7\",\n      \"name\": \"Get Video ID\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        660,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Loop over input items\\nfor (const item of $input.all()) {\\n    // Extract the YouTube video ID using a regular expression\\n    const Source = item.json.Source;\\n    const videoIdMatch = Source.match(/(?:v=|\\\\/)([a-zA-Z0-9_-]{11})/);\\n\\n    const videoId = videoIdMatch ? videoIdMatch[1] : null; // Extracted video ID or null if not found\\n\\n    // Add the video ID to the JSON\\n    item.json.videoId = videoId;\\n}\\n\\n// Return all items with the new videoId field\\nreturn $input.all();\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"4b026bcf-7563-4444-8ce1-9e9a89eef56d\",\n      \"name\": \"Combine Transcripts\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1320,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Initialize an empty string to hold the concatenated transcript\\nlet Transcript = \\\"\\\";\\n\\n// Safeguard against undefined paths and ensure required properties exist\\nif ($json.data && $json.data.transcripts) {\\n    // Loop through all transcript objects\\n    for (const key in $json.data.transcripts) {\\n        if ($json.data.transcripts[key].custom) {\\n            const customArray = $json.data.transcripts[key].custom;\\n\\n            // Extract and append text from each transcript entry\\n            for (const item of customArray) {\\n                if (item.text) {\\n                    Transcript += item.text + \\\" \\\"; // Add a space between texts\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n// Return the combined transcript as a new field\\nreturn [\\n    {\\n        json: {\\n            Transcript: Transcript.trim(), // Trim to clean up extra spaces\\n        },\\n    },\\n];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"693ab15f-307e-4fdf-9752-2cc64a80307d\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        240,\n        0\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"minutes\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"1df795e2-ac7e-42a8-a1f4-2c292b704613\",\n      \"name\": \"Airtable\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        460,\n        0\n      ],\n      \"parameters\": {\n        \"base\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"appgNpFtbtaGHM4g0\",\n          \"cachedResultUrl\": \"https://airtable.com/appgNpFtbtaGHM4g0\",\n          \"cachedResultName\": \"Content Hub\"\n        },\n        \"limit\": 1,\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"tblwBVudDpOMkUGKL\",\n          \"cachedResultUrl\": \"https://airtable.com/appgNpFtbtaGHM4g0/tblwBVudDpOMkUGKL\",\n          \"cachedResultName\": \"Ideas\"\n        },\n        \"options\": {},\n        \"operation\": \"search\",\n        \"returnAll\": false,\n        \"filterByFormula\": \"AND(     {Status} = \\\"\\\",     {Type} = \\\"Youtube Video\\\" )\"\n      },\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"g540vJVYsNT8ZS11\",\n          \"name\": \"Airtable Personal Access Token account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"8b2cfd44-4897-403c-9393-5cc917baa673\",\n      \"name\": \"Get Full Transcript\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1540,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"2eaa3e02-95f7-47d9-a27d-64974f9c1a7b\",\n              \"name\": \"Transcript\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Transcript }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"8ea3c1a7-d428-467f-aff2-9b3f572f911f\",\n      \"name\": \"Get All Transcripts\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1100,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"01fb3072-61c6-47f6-b6dd-7cbf817f5b4a\",\n              \"name\": \"data.transcripts\",\n              \"type\": \"object\",\n              \"value\": \"={{ $json.data.transcripts }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"6cff40d0-18ba-4ae0-a1c9-070d8fb39347\",\n      \"name\": \"Get Main Idea & Key Takeaways\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2120,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"e9b7f303-562b-40bd-8c3c-8c7138bd4329\",\n              \"name\": \"Main Idea\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.MainIdea }}\"\n            },\n            {\n              \"id\": \"572627f4-b9b3-4c59-a570-5bd810f68825\",\n              \"name\": \"Key Takeaways\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.output['Key Takeaways'] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"1e71d56b-3140-4dd8-b4d8-cdbe9eb24bde\",\n      \"name\": \"Extract detailed summary\",\n      \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\",\n      \"position\": [\n        1760,\n        0\n      ],\n      \"parameters\": {\n        \"text\": \"=Your job is to generate detailed summary of \\\"{{ $json.Transcript }}\\\".\\n\\nAlways output your answer in the following format:\\n\\n- Main Idea\\n- Takeaways\",\n        \"options\": {},\n        \"schemaType\": \"fromJson\",\n        \"jsonSchemaExample\": \"{\\n\\t\\\"MainIdea\\\": \\\"The video provides a step-by-step guide on how to build an MCP (Model Context Protocol) server to connect agents to various data sources, specifically focusing on retrieving stock prices from Yahoo Finance. It explains the setup process, including creating functions, integrating with agents, and connecting to other tools.\\\",\\n\\t\\\"Key Takeaways\\\": [\\\"1. **MCP Overview**: MCP allows AI engineers to define tools once and reuse them across different frameworks, simplifying the integration process. 2. **Building the Server**: The video demonstrates how to create a Python function to fetch stock prices using the Y Finance library, and how to wrap this function into an MCP server. 3. **Testing the Server**: It shows how to use a visual inspector to test the MCP server before deploying it. 4. **Connecting to Agents**: The tutorial covers how to connect the MCP server to agents using HuggingFace's smaller agents library, enabling the retrieval of stock prices through prompts. 5. **Adding More Tools**: Viewers learn how to expand the server's capabilities by adding additional tools for stock information and income statements. 6. **Integration with Other Platforms**: The video explains how to integrate the MCP server with platforms like Cursor and Langflow, showcasing the flexibility of the MCP setup. 7. **Advanced Features**: It touches on additional MCP capabilities such as storing prompts and creating resources for data access, enhancing the server's functionality.\\\"]\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"942a77e1-5773-4657-a38c-2b1013af6544\",\n      \"name\": \"Update Airtable\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        2320,\n        0\n      ],\n      \"parameters\": {\n        \"base\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"appgNpFtbtaGHM4g0\",\n          \"cachedResultUrl\": \"https://airtable.com/appgNpFtbtaGHM4g0\",\n          \"cachedResultName\": \"Content Hub\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"tblwBVudDpOMkUGKL\",\n          \"cachedResultUrl\": \"https://airtable.com/appgNpFtbtaGHM4g0/tblwBVudDpOMkUGKL\",\n          \"cachedResultName\": \"Ideas\"\n        },\n        \"columns\": {\n          \"value\": {\n            \"id\": \"={{ $('Airtable').item.json.id }}\",\n            \"Status\": true,\n            \"Main Idea\": \"={{ $json['Main Idea'] }}\",\n            \"Takeaways\": \"={{ $json['Key Takeaways'] }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"id\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": true,\n              \"required\": false,\n              \"displayName\": \"id\",\n              \"defaultMatch\": true\n            },\n            {\n              \"id\": \"Title\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Title\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Description\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Description\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Main Idea\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Main Idea\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Takeaways\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Takeaways\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Status\",\n              \"type\": \"boolean\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Status\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Source\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Source\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Type\",\n              \"type\": \"options\",\n              \"display\": true,\n              \"options\": [\n                {\n                  \"name\": \"Youtube Video\",\n                  \"value\": \"Youtube Video\"\n                },\n                {\n                  \"name\": \"Web Article\",\n                  \"value\": \"Web Article\"\n                },\n                {\n                  \"name\": \"Own Notes\",\n                  \"value\": \"Own Notes\"\n                },\n                {\n                  \"name\": \"E-Book\",\n                  \"value\": \"E-Book\"\n                },\n                {\n                  \"name\": \"Twitter\",\n                  \"value\": \"Twitter\"\n                },\n                {\n                  \"name\": \"Linkedin\",\n                  \"value\": \"Linkedin\"\n                }\n              ],\n              \"removed\": true,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Type\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Draft\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Draft\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Attachment - Video\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Attachment - Video\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Attachment - Image\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Attachment - Image\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Created\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": true,\n              \"required\": false,\n              \"displayName\": \"Created\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Last Modified\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"readOnly\": true,\n              \"required\": false,\n              \"displayName\": \"Last Modified\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"id\"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {\n          \"typecast\": true\n        },\n        \"operation\": \"update\"\n      },\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"g540vJVYsNT8ZS11\",\n          \"name\": \"Airtable Personal Access Token account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"4cc08263-7293-4c2b-8684-d15a67a61d33\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        760,\n        -580\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 200,\n        \"content\": \"## 📝 功能说明\\n\\n自动将YouTube视频转化为清晰、结构化的内容创意并存储至Airtable。该工作流从Airtable抓取最新视频链接，通过RapidAPI服务提取字幕文本，使用您指定的LLM模型生成摘要，最终记录核心观点与关键要点——以最小精力持续为内容生产线注入新鲜素材。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"299c6f10-c4a1-4da7-a198-121b054c8882\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        760,\n        -340\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 220,\n        \"content\": \"## ⚙️ 功能说明\\n- **扫描** 每5分钟自动检查Airtable中新增的YouTube视频链接\\n- **提取** 通过RapidAPI调用第三方接口获取视频字幕文本\\n- **总结** 分析内容生成核心观点与要点摘要\\n- **更新** 将解析结果回填至原Airtable记录并标记为已完成\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"48d11dd7-556d-4154-b580-396c55aa5645\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1300,\n        -580\n      ],\n      \"parameters\": {\n        \"width\": 500,\n        \"height\": 460,\n        \"content\": \"## 🧰 安装指南\\n1. 将此模板克隆到您的n8n工作区\\n2. 打开\\\"获取YouTube源\\\"节点并配置您的Airtable凭证\\n3. 在\\\"获取视频字幕\\\"节点中：\\n   - 在headers部分输入您的X-RapidAPI-Key\\n   - API端点已预先配置完成\\n4. 将您的LLM凭证连接到\\\"提取详细摘要\\\"节点\\n\\n5. (可选) 调整LangChain节点中的摘要提示语以更符合您的语气风格\\n6. 在触发器节点中设置您偏好的执行计划\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"1f4b0e52-7589-4c9c-8102-9105e296577b\",\n  \"connections\": {\n    \"Airtable\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Video ID\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Video ID\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get video transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Airtable\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Transcripts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Full Transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Transcripts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Transcripts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Full Transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract detailed summary\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get video transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get All Transcripts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract detailed summary\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Main Idea & Key Takeaways\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Main Idea & Key Takeaways\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Airtable\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}