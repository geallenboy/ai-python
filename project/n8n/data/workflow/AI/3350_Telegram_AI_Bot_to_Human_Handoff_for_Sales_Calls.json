{
  "title": "Telegram AI Bot-to-Human Handoff for Sales Calls",
  "url": "https://n8n.io/workflows/3350-telegram-ai-bot-to-human-handoff-for-sales-calls/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/",
  "author": "Jimleuk",
  "publish_date": "Last update a month ago",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"5d6a5a45-8aa8-4c34-aa10-5dd85f05de9d\",\"name\":\"Human Handoff using Send and Wait\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1580,1040],\"webhookId\":\"d2bbc82f-0509-470a-af4d-9d92cfed4d5f\",\"parameters\":{\"chatId\":\"=<human chat id>\",\"message\":\"=chatId: {{ $('Handoff Subworkflow').first().json.chatId }}\\nsessionId: {{ $('Handoff Subworkflow').first().json.sessionId }}\\nuser: {{ $('Handoff Subworkflow').first().json.username }} ({{ $('Handoff Subworkflow').item.json.userId }})\\n\\nSummary:\\n{{ $('Handoff Subworkflow').item.json.summary }}\\n\\n---\\nThis user has now been handed off to a human.\\nClick the button to return user to bot.\",\"options\":{},\"operation\":\"sendAndWait\",\"responseType\":\"freeText\"},\"credentials\":{\"telegramApi\":{\"id\":\"XVBXGXSsaCjU2DOS\",\"name\":\"jimleuk_handoff_bot\"}},\"typeVersion\":1.2},{\"id\":\"5d2f73ff-b233-4456-b34d-d5a5454dabda\",\"name\":\"Set Interaction to Bot\",\"type\":\"n8n-nodes-base.redis\",\"position\":[1780,1040],\"parameters\":{\"key\":\"=handoff_{{ $('Handoff Subworkflow').first().json.sessionId }}_state\",\"value\":\"bot\",\"keyType\":\"string\",\"operation\":\"set\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1},{\"id\":\"f799e213-f3ed-4479-aade-7a7c38eb5792\",\"name\":\"Set Interaction to Human\",\"type\":\"n8n-nodes-base.redis\",\"position\":[1380,1040],\"parameters\":{\"key\":\"=handoff_{{ $json.sessionId }}_state\",\"value\":\"=human\",\"keyType\":\"string\",\"operation\":\"set\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1},{\"id\":\"059c9b8c-ba50-4bdd-8969-6f5f35bba304\",\"name\":\"Get Interaction State\",\"type\":\"n8n-nodes-base.redis\",\"position\":[-800,820],\"parameters\":{\"key\":\"=handoff_{{ $json.message.chat.id }}_state\",\"options\":{},\"operation\":\"get\",\"propertyName\":\"data\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1},{\"id\":\"8afd48ff-478d-4092-ac88-fb2e435ded00\",\"name\":\"Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-280,640],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"19c5ef66-410d-47fd-9b2a-19776c53a681\",\"name\":\"Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryRedisChat\",\"position\":[-160,640],\"parameters\":{\"sessionKey\":\"=handoff_{{ $('Telegram Trigger').first().json.message.chat.id }}_chat\",\"sessionIdType\":\"customKey\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1.4},{\"id\":\"814e464d-a2e0-4ae1-83d1-df3732d3b430\",\"name\":\"Handoff Subworkflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[980,1040],\"parameters\":{\"workflowInputs\":{\"values\":[{\"name\":\"chatId\"},{\"name\":\"sessionId\"},{\"name\":\"userId\"},{\"name\":\"username\"},{\"name\":\"summary\"}]}},\"typeVersion\":1.1},{\"id\":\"53c311ca-b7ad-4705-97c9-f6438a6c6b4e\",\"name\":\"Telegram Trigger\",\"type\":\"n8n-nodes-base.telegramTrigger\",\"position\":[-1000,820],\"webhookId\":\"e905dd99-eefc-48ff-a62d-c7078e9bb216\",\"parameters\":{\"updates\":[\"message\"],\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"XVBXGXSsaCjU2DOS\",\"name\":\"jimleuk_handoff_bot\"}},\"typeVersion\":1.1},{\"id\":\"ea54c9f7-8ebc-4146-a4ec-6d05957f340d\",\"name\":\"Send Response\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1400,340],\"webhookId\":\"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\"parameters\":{\"text\":\"=Thank you. I've now transferred you to a human agent who will reach out to you. Once complete, you can come back to this chat to finish the process.\",\"chatId\":\"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\"additionalFields\":{\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"XVBXGXSsaCjU2DOS\",\"name\":\"jimleuk_handoff_bot\"}},\"typeVersion\":1.2},{\"id\":\"7f895e2a-7aee-40be-a8b7-b2b0ff469b2d\",\"name\":\"Switch Interaction\",\"type\":\"n8n-nodes-base.switch\",\"position\":[-620,820],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"Human\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"6bc61072-f7cf-4a6d-af81-36abede59d47\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.data }}\",\"rightValue\":\"human\"}]},\"renameOutput\":true},{\"outputKey\":\"Bot\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"6882db64-b522-4895-8949-d98d87b53b49\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.data }}\",\"rightValue\":\"bot\"}]},\"renameOutput\":true}]},\"options\":{\"fallbackOutput\":\"extra\",\"renameFallbackOutput\":\"Onboarding\"}},\"typeVersion\":3.2},{\"id\":\"df203358-e6c7-4014-8e2b-ef934e331215\",\"name\":\"Information Extractor\",\"type\":\"@n8n/n8n-nodes-langchain.informationExtractor\",\"position\":[440,460],\"parameters\":{\"text\":\"={{\\n$json.data\\n  .reverse()\\n  .slice(0, 5)\\n  .map(item => item.parseJson())\\n  .map(item => `${item.type}: ${item.data.content}`)\\n  .join('\\\\n')\\n}}\",\"options\":{\"systemPromptTemplate\":\"Analyse the conversation history and extract the required customer details. If not found, leave blank.\"},\"attributes\":{\"attributes\":[{\"name\":\"firstname\",\"required\":true,\"description\":\"first name of customer\"},{\"name\":\"lastname\",\"required\":true,\"description\":\"last name of customer\"},{\"name\":\"address_and_postcode\",\"required\":true,\"description\":\"address and postcode of customer\"},{\"name\":\"reason_for_call\",\"required\":true,\"description\":\"a summary of the reason for the call\"}]}},\"typeVersion\":1},{\"id\":\"35bc11d2-6024-425b-ac67-a61ff26b9478\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[420,640],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"20d71c5f-6e84-4b45-b324-0706ecd3a681\",\"name\":\"With Defaults\",\"type\":\"n8n-nodes-base.code\",\"position\":[760,460],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"return {\\n  \\\"firstname\\\": \\\"\\\",\\n  \\\"lastname\\\": \\\"\\\",\\n  \\\"address_and_postcode\\\": \\\"\\\",\\n  \\\"reason_for_call\\\": \\\"\\\",\\n  ...$input.item.json.output,\\n}\"},\"typeVersion\":2},{\"id\":\"76344f79-1afa-4fd9-9c01-ca3818f62f37\",\"name\":\"Has All Criteria?\",\"type\":\"n8n-nodes-base.if\",\"position\":[920,460],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"96d4a43f-aa0f-486a-b692-0105196d099a\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ Object.values($json).every(val => Boolean(val)) }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"f76c1032-036b-46ad-91da-023d5af931fd\",\"name\":\"Onboarding Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-240,460],\"parameters\":{\"text\":\"={{ $('Telegram Trigger').first().json.message.text }}\",\"options\":{\"systemMessage\":\"=You are a prescreen assistant whose task is to get the following details from a customer before handing them over to a human agent.\\n* first name\\n* last name\\n* address and postcode\\n* reason for calling - capture exact wording if possible.\\n\\nOnce all data is gathered, hand the user off to a human agent.\"},\"promptType\":\"define\"},\"typeVersion\":1.8},{\"id\":\"0a5b19a5-9c19-436c-b1d3-23d962efd23e\",\"name\":\"Get Onboarding Chat History\",\"type\":\"n8n-nodes-base.redis\",\"position\":[280,460],\"parameters\":{\"key\":\"=handoff_{{ $('Telegram Trigger').first().json.message.chat.id }}_chat\",\"options\":{},\"operation\":\"get\",\"propertyName\":\"data\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1},{\"id\":\"4f247eb3-78f0-4ec1-8713-1373da07b5f3\",\"name\":\"After Sales Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[340,1000],\"parameters\":{\"text\":\"={{ $('Telegram Trigger').item.json.message.text }}\",\"options\":{\"systemMessage\":\"You are an aftersales agent helping the user answer questions about their recent purchase.\"},\"promptType\":\"define\"},\"typeVersion\":1.8},{\"id\":\"bce26253-f7da-49e8-952b-52e14eb4f9b5\",\"name\":\"Memory1\",\"type\":\"@n8n/n8n-nodes-langchain.memoryRedisChat\",\"position\":[420,1180],\"parameters\":{\"sessionKey\":\"=handoff_{{ $('Telegram Trigger').first().json.message.chat.id }}_chat2\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":30},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1.4},{\"id\":\"51c4549b-559c-400d-9951-dde0953ade4c\",\"name\":\"Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[300,1180],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"63b8d9e8-7af2-4103-a365-ca5471bd7b36\",\"name\":\"Handoff Tool\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[540,1180],\"parameters\":{\"name\":\"handoff_to_human\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"Call this tool to handoff or defer to a human agent at the request of the customer. Ensure a summary of the reason for the handoff is obtained first.\",\"workflowInputs\":{\"value\":{\"chatId\":\"={{ $('Telegram Trigger').first().json.message.chat.id.toString() }}\",\"userId\":\"={{ $('Telegram Trigger').first().json.message.from.id.toString() }}\",\"summary\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('summary', `Reason for human hand-off`, 'string') }}\",\"username\":\"={{ $('Telegram Trigger').first().json.message.from.username }}\",\"sessionId\":\"={{ $('Telegram Trigger').first().json.message.chat.id.toString() }}\"},\"schema\":[{\"id\":\"chatId\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"chatId\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"sessionId\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"sessionId\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"userId\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"userId\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"username\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"username\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"summary\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"summary\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2},{\"id\":\"9a2b9077-0ead-4f2c-9e83-05ee341ff697\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1080,580],\"parameters\":{\"color\":7,\"width\":660,\"height\":460,\"content\":\"## 1. Check Interaction State For Incoming Message\\n[Learn more about the telegram trigger](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.telegramtrigger/)\\n\\nThis is an example of a state-based agent - the technique commonly known as a finite-state machine. This is a great way to really control the flow and direction of the conversation where there are requirements to collect data or perform steps in sequence. To manage the session state, we can use Redis and the session key will be the user's number.\"},\"typeVersion\":1},{\"id\":\"ccca9a5c-595a-4c58-9316-933a8234ab91\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-380,260],\"parameters\":{\"color\":7,\"width\":560,\"height\":520,\"content\":\"## 2. Onboarding Agent to Validate Customers\\n[Read more about Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)\\n\\nThis agent unlike the common multi-tasking examples out there, is only tasked to handle the user's onboarding. In this way, we trade convenience for clutter but ensure the agent is less likely to stray from the desired path.\"},\"typeVersion\":1},{\"id\":\"2d859430-1326-4cbc-a5cc-3af0d091e5c0\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[200,260],\"parameters\":{\"color\":7,\"width\":880,\"height\":520,\"content\":\"## 3. Extract Customer Details from Conversation\\n[Learn more about the Information Extractor](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\nTo collect the user's details in a structured format, we can analyse the current conversation and extract the data with the Information Extractor node. This allows the conversation to remain free-form and avoids asking a question for each field. We use a code node to check if all details are captured.\"},\"typeVersion\":1},{\"id\":\"754f0859-8af7-4a15-8e46-c9ad62b55bf3\",\"name\":\"Handoff Subworkflow1\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[1220,340],\"parameters\":{\"mode\":\"each\",\"options\":{\"waitForSubWorkflow\":false},\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"workflowInputs\":{\"value\":{\"chatId\":\"={{ $('Telegram Trigger').first().json.message.chat.id.toString() }}\",\"userId\":\"={{ $('Telegram Trigger').first().json.message.from.id.toString() }}\",\"summary\":\"=name: {{ $json.firstname }} {{ $json.lastname }}\\naddress: {{ $json.address_and_postcode }}\\nsummary: {{ $json.reason_for_call }}\",\"username\":\"={{ $('Telegram Trigger').first().json.message.from.username }}\",\"sessionId\":\"={{ $('Telegram Trigger').first().json.message.chat.id.toString() }}\"},\"schema\":[{\"id\":\"chatId\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"chatId\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"sessionId\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"sessionId\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"userId\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"userId\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"username\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"username\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"summary\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"summary\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":true}},\"typeVersion\":1.2},{\"id\":\"6f92128f-14dc-4b0a-b098-3d9535ac11e3\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1100,140],\"parameters\":{\"color\":7,\"width\":800,\"height\":640,\"content\":\"## 4. Human Handoff when Criteria Met\\n[Learn more about subworkflows](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow)\\n\\nHere, we initiate the hand-off which calls our hand-off subworkflow. Subworkflows can be a great way to run actions concurrently and without blocking the reply to the user. At this point, the session state would be set to \\\"human\\\" which means the human agent should take over.\"},\"typeVersion\":1},{\"id\":\"14500c4f-da43-460f-bf4d-80d0a2f4537b\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-380,800],\"parameters\":{\"color\":7,\"width\":520,\"height\":440,\"content\":\"## 5. Defer to Human\\n\\nWhen session state is \\\"human\\\", no further user messages can reach the agent. This is to ensure there isn't a parallel conversation happening which may confuse the human and agent.\"},\"typeVersion\":1},{\"id\":\"4d74d479-8525-4b64-8291-e2b3058edeaa\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[160,800],\"parameters\":{\"color\":7,\"width\":720,\"height\":520,\"content\":\"## 6. Interaction Switched Back to Bot\\n[Read more about the Customer Workflow Tool](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolworkflow/)\\n\\nWhen the session state is \\\"bot\\\", it signals the human agent has \\\"transferred\\\" the user back to the bot and so can continue processing their messages. A Custom Workflow Tool is used to retrigger the hand-off process whenever the user requests for it.\"},\"typeVersion\":1},{\"id\":\"a1c064d9-cc74-475d-b233-9deb4dfa81d7\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[920,820],\"parameters\":{\"color\":7,\"width\":1580,\"height\":560,\"content\":\"## 7. Interaction Subworkflow\\n[Learn more about n8n's human-in-the-loop feature](https://docs.n8n.io/advanced-ai/examples/human-fallback/)\\n\\nThe hand-off implementation here involves a \\\"human-in-the-loop\\\" feature of n8n - a feature which \\\"pauses\\\" an execution whilst running until a reply or action is sent back by the human. Sounds complicated but good to note that n8n handles this interaction seemlessly! Here, we're using it to allow the human agent to reliquish control of the conversation back to the AI agent. Additionally, the human agent's feedback is captured and added to the agent's memory to better assist the user afterwards.\"},\"typeVersion\":1},{\"id\":\"33684768-2f21-4f30-9e56-934171b215fc\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1580,-260],\"parameters\":{\"width\":440,\"height\":1320,\"content\":\"## Try it out\\n### This n8n template demonstrates an approach to perform bot-to-human handoff using Human-in-the-loop functionality as a switch.\\n\\nIn this experiment, we play with the idea of states we want our agent to be in which controls it's interacton with the user.\\n* **First state** - the agent is onboarding the user by collecting their details for a sales inquiry. After which, they are handed-off / transferred to a human to continue the call.\\n* **Second state** - the agent is essentially \\\"deactivated\\\" as further messages to the bot will not reach it. Instead, a canned response is given to the user. The human agent must \\\"reactivate\\\" the bot by completing the human-in-the-loop form and give a summary of their conversation with the user.\\n* **Third state** - the agent is \\\"reactivated\\\" with context of the human-to-user conversation and is set to provide after sales assistance. An tool is made available to the agent to again delegate back to the human agent when requested.\\n\\n### How it works\\n* This template uses telegram to handle the interaction between the user and the agent.\\n* Each user message is checked for a session state to ensure it is guided to the right stage of the conversation. For this, we can use Redis as a simple key-value store.\\n* When no state is set, the user is directed through an onboarding step to attain their details. Once complete, the agent will \\\"transfer\\\" the user to a human agent - technically, all this involves is an update to the session state and a message to another chat forwarding the user's details.\\n* During this \\\"human\\\" state, the agent cannot reply to the user and must wait until the human \\\"transfers\\\" the conversation back. The human can do this by replying to \\\"human-in-the-loop\\\" message with a summary of their conversation with the user. This session state now changes to \\\"bot\\\" and the context is implanted in the agent's memory so that the agent can respond to future questions.\\n* At this stage of the conversation, the agent is now expected to handle and help the user with after-sales questions. The user can at anytime request transfer back to the human agent, repeating the previous steps as necessary.\\n\\n#### How to use\\n* Plan your user journey! Here is a very basic example of a sales inquiry with at most 3 states. More thought should be developed when many more states are involved.\\n* You may want to better log and manage session states so no user is left in limbo. Try connecting the user and sessions to your CRM.\\n* Note, the Onboarding agent and After-Sales agent have separate chat memories. When adding more agents, it is recommend to continue having separate chat memories to help focus between states.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Hacking!\"},\"typeVersion\":1},{\"id\":\"187ca5ef-c804-4aca-8ad9-3c4b11676fbf\",\"name\":\"Send Response2\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[2320,1040],\"webhookId\":\"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\"parameters\":{\"text\":\"=Hello again! I'm now ready to answer any remaining questions you may have.\",\"chatId\":\"={{ $('Handoff Subworkflow').first().json.chatId }}\",\"additionalFields\":{\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"XVBXGXSsaCjU2DOS\",\"name\":\"jimleuk_handoff_bot\"}},\"typeVersion\":1.2},{\"id\":\"ab036106-84f2-4cf7-a5ad-7706a9e5ea0a\",\"name\":\"Memory2\",\"type\":\"@n8n/n8n-nodes-langchain.memoryRedisChat\",\"position\":[1980,1200],\"parameters\":{\"sessionKey\":\"=handoff_{{ $('Handoff Subworkflow').first().json.chatId }}_chat2\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":30},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1.5},{\"id\":\"9d9d1aee-5632-499c-968d-63a555cc58d8\",\"name\":\"Update Agent Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryManager\",\"position\":[1980,1040],\"parameters\":{\"mode\":\"insert\",\"messages\":{\"messageValues\":[{\"type\":\"ai\",\"message\":\"=Report from human agent says \\\"{{ $('Human Handoff using Send and Wait').first().json.data.text }}\\\"\",\"hideFromUI\":true},{\"type\":\"ai\",\"message\":\"Hello again! I'm now ready to answer any remaining questions you may have.\"}]}},\"typeVersion\":1.1},{\"id\":\"8da2fefa-e51f-4258-8ded-e0f20db87641\",\"name\":\"Send Response3\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[680,1000],\"webhookId\":\"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\"parameters\":{\"text\":\"={{ $json.output }}\",\"chatId\":\"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\"additionalFields\":{\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"XVBXGXSsaCjU2DOS\",\"name\":\"jimleuk_handoff_bot\"}},\"typeVersion\":1.2},{\"id\":\"f027afe0-0fd2-47a2-a0f8-f0d78f8fbc18\",\"name\":\"Get Canned Response\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[-180,1000],\"webhookId\":\"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\"parameters\":{\"text\":\"=This conversation has been handed-off to a human agent who will be in contact soon if not done so already. I cannot respond to your query until the human agent transfers you back to me.\",\"chatId\":\"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\"additionalFields\":{\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"XVBXGXSsaCjU2DOS\",\"name\":\"jimleuk_handoff_bot\"}},\"typeVersion\":1.2},{\"id\":\"a1ada0c7-779e-44bc-bdbd-1d5285bedf3c\",\"name\":\"Notify user\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1180,1040],\"webhookId\":\"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\"parameters\":{\"text\":\"=You have now been transferred to a human. Unfortunately, I will not be able to respond until the human agent transfers you back to me.\",\"chatId\":\"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\"additionalFields\":{\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"XVBXGXSsaCjU2DOS\",\"name\":\"jimleuk_handoff_bot\"}},\"typeVersion\":1.2},{\"id\":\"31287a38-e7a7-4518-9f54-6e6c9b2486fe\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1520,1020],\"parameters\":{\"width\":220,\"height\":320,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### Add Human Chat ID\\nThis is needed to notify the human agent.\"},\"typeVersion\":1},{\"id\":\"a58a82b9-2c37-4137-9b3e-17479c78a2d2\",\"name\":\"Memory3\",\"type\":\"@n8n/n8n-nodes-langchain.memoryRedisChat\",\"position\":[1580,500],\"parameters\":{\"sessionKey\":\"=handoff_{{ $('Telegram Trigger').first().json.message.chat.id }}_chat2\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":30},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1.5},{\"id\":\"4d3d5b46-6e82-4b97-9e5f-76f02ff79ce5\",\"name\":\"Update Agent Memory1\",\"type\":\"@n8n/n8n-nodes-langchain.memoryManager\",\"position\":[1580,340],\"parameters\":{\"mode\":\"insert\",\"messages\":{\"messageValues\":[{\"type\":\"ai\",\"message\":\"=The person I'm speaking to has the following details:\\nfirstname: {{ $('Handoff Subworkflow1').first().json.firstname }}\\nlastname: {{ $('Handoff Subworkflow1').first().json.firstname }}\\nreason for call: {{ $('Handoff Subworkflow1').first().json.reason_for_call }}\",\"hideFromUI\":true}]}},\"typeVersion\":1.1},{\"id\":\"ced46068-440b-46b4-aa51-b5bb9d59a004\",\"name\":\"Continue Conversation\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1220,580],\"webhookId\":\"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\"parameters\":{\"text\":\"={{ $('Onboarding Agent').first().json.output }}\",\"chatId\":\"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\"additionalFields\":{\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"XVBXGXSsaCjU2DOS\",\"name\":\"jimleuk_handoff_bot\"}},\"typeVersion\":1.2}],\"pinData\":{},\"connections\":{\"Model\":{\"ai_languageModel\":[[{\"node\":\"Onboarding Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Memory\":{\"ai_memory\":[[{\"node\":\"Onboarding Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Model1\":{\"ai_languageModel\":[[{\"node\":\"After Sales Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Memory1\":{\"ai_memory\":[[{\"node\":\"After Sales Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Memory2\":{\"ai_memory\":[[{\"node\":\"Update Agent Memory\",\"type\":\"ai_memory\",\"index\":0}]]},\"Memory3\":{\"ai_memory\":[[{\"node\":\"Update Agent Memory1\",\"type\":\"ai_memory\",\"index\":0}]]},\"Notify user\":{\"main\":[[{\"node\":\"Set Interaction to Human\",\"type\":\"main\",\"index\":0}]]},\"Handoff Tool\":{\"ai_tool\":[[{\"node\":\"After Sales Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Send Response\":{\"main\":[[{\"node\":\"Update Agent Memory1\",\"type\":\"main\",\"index\":0}]]},\"With Defaults\":{\"main\":[[{\"node\":\"Has All Criteria?\",\"type\":\"main\",\"index\":0}]]},\"Onboarding Agent\":{\"main\":[[{\"node\":\"Get Onboarding Chat History\",\"type\":\"main\",\"index\":0}]]},\"Telegram Trigger\":{\"main\":[[{\"node\":\"Get Interaction State\",\"type\":\"main\",\"index\":0}]]},\"After Sales Agent\":{\"main\":[[{\"node\":\"Send Response3\",\"type\":\"main\",\"index\":0}]]},\"Has All Criteria?\":{\"main\":[[{\"node\":\"Handoff Subworkflow1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Continue Conversation\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Information Extractor\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Switch Interaction\":{\"main\":[[{\"node\":\"Get Canned Response\",\"type\":\"main\",\"index\":0}],[{\"node\":\"After Sales Agent\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Onboarding Agent\",\"type\":\"main\",\"index\":0}]]},\"Handoff Subworkflow\":{\"main\":[[{\"node\":\"Notify user\",\"type\":\"main\",\"index\":0}]]},\"Update Agent Memory\":{\"main\":[[{\"node\":\"Send Response2\",\"type\":\"main\",\"index\":0}]]},\"Handoff Subworkflow1\":{\"main\":[[{\"node\":\"Send Response\",\"type\":\"main\",\"index\":0}]]},\"Get Interaction State\":{\"main\":[[{\"node\":\"Switch Interaction\",\"type\":\"main\",\"index\":0}]]},\"Information Extractor\":{\"main\":[[{\"node\":\"With Defaults\",\"type\":\"main\",\"index\":0}]]},\"Set Interaction to Bot\":{\"main\":[[{\"node\":\"Update Agent Memory\",\"type\":\"main\",\"index\":0}]]},\"Set Interaction to Human\":{\"main\":[[{\"node\":\"Human Handoff using Send and Wait\",\"type\":\"main\",\"index\":0}]]},\"Get Onboarding Chat History\":{\"main\":[[{\"node\":\"Information Extractor\",\"type\":\"main\",\"index\":0}]]},\"Human Handoff using Send and Wait\":{\"main\":[[{\"node\":\"Set Interaction to Bot\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "### This n8n template demonstrates an approach to perform bot-to-human handoff using Human-in-the-loop functionality as a switch.\n\nIn this experiment, we play with the idea of states we want our agent to be in which controls it's interacton with the user.\n\n  * **First state** \\- the agent is onboarding the user by collecting their details for a sales inquiry. After which, they are handed-off / transferred to a human to continue the call.\n  * **Second state** \\- the agent is essentially \"deactivated\" as further messages to the bot will not reach it. Instead, a canned response is given to the user. The human agent must \"reactivate\" the bot by completing the human-in-the-loop form and give a summary of their conversation with the user.\n  * **Third state** \\- the agent is \"reactivated\" with context of the human-to-user conversation and is set to provide after sales assistance. An tool is made available to the agent to again delegate back to the human agent when requested.\n\n\n\n### How it works\n\n  * This template uses telegram to handle the interaction between the user and the agent.\n  * Each user message is checked for a session state to ensure it is guided to the right stage of the conversation. For this, we can use Redis as a simple key-value store.\n  * When no state is set, the user is directed through an onboarding step to attain their details. Once complete, the agent will \"transfer\" the user to a human agent - technically, all this involves is an update to the session state and a message to another chat forwarding the user's details.\n  * During this \"human\" state, the agent cannot reply to the user and must wait until the human \"transfers\" the conversation back. The human can do this by replying to \"human-in-the-loop\" message with a summary of their conversation with the user. This session state now changes to \"bot\" and the context is implanted in the agent's memory so that the agent can respond to future questions.\n  * At this stage of the conversation, the agent is now expected to handle and help the user with after-sales questions. The user can at anytime request transfer back to the human agent, repeating the previous steps as necessary.\n\n\n\n### How to use\n\n  * Plan your user journey! Here is a very basic example of a sales inquiry with at most 3 states. More thought should be developed when many more states are involved.\n  * You may want to better log and manage session states so no user is left in limbo. Try connecting the user and sessions to your CRM.\n  * Note, the Onboarding agent and After-Sales agent have separate chat memories. When adding more agents, it is recommend to continue having separate chat memories to help focus between states.\n\n\n\n### Requirements\n\n  * Telegram for chatbot & interface\n  * Redis for session store and chat memory\n  * OpenAI for AI agent\n\n\n\n### Customising this workflow\n\n  * Not using Telegram? This template works with Whatsapp and other services with equivalent functionality.\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h3>This n8n template demonstrates an approach to perform bot-to-human handoff using Human-in-the-loop functionality as a switch.</h3>\n<p>In this experiment, we play with the idea of states we want our agent to be in which controls it's interacton with the user.</p>\n<ul>\n<li><strong>First state</strong> - the agent is onboarding the user by collecting their details for a sales inquiry. After which, they are handed-off / transferred to a human to continue the call.</li>\n<li><strong>Second state</strong> - the agent is essentially \"deactivated\" as further messages to the bot will not reach it. Instead, a canned response is given to the user. The human agent must \"reactivate\" the bot by completing the human-in-the-loop form and give a summary of their conversation with the user.</li>\n<li><strong>Third state</strong> - the agent is \"reactivated\" with context of the human-to-user conversation and is set to provide after sales assistance. An tool is made available to the agent to again delegate back to the human agent when requested.</li>\n</ul>\n<h3>How it works</h3>\n<ul>\n<li>This template uses telegram to handle the interaction between the user and the agent.</li>\n<li>Each user message is checked for a session state to ensure it is guided to the right stage of the conversation. For this, we can use Redis as a simple key-value store.</li>\n<li>When no state is set, the user is directed through an onboarding step to attain their details. Once complete, the agent will \"transfer\" the user to a human agent - technically, all this involves is an update to the session state and a message to another chat forwarding the user's details.</li>\n<li>During this \"human\" state, the agent cannot reply to the user and must wait until the human \"transfers\" the conversation back. The human can do this by replying to \"human-in-the-loop\" message with a summary of their conversation with the user. This session state now changes to \"bot\" and the context is implanted in the agent's memory so that the agent can respond to future questions.</li>\n<li>At this stage of the conversation, the agent is now expected to handle and help the user with after-sales questions. The user can at anytime request transfer back to the human agent, repeating the previous steps as necessary.</li>\n</ul>\n<h3>How to use</h3>\n<ul>\n<li>Plan your user journey! Here is a very basic example of a sales inquiry with at most 3 states. More thought should be developed when many more states are involved.</li>\n<li>You may want to better log and manage session states so no user is left in limbo. Try connecting the user and sessions to your CRM.</li>\n<li>Note, the Onboarding agent and After-Sales agent have separate chat memories. When adding more agents, it is recommend to continue having separate chat memories to help focus between states.</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li>Telegram for chatbot &amp; interface</li>\n<li>Redis for session store and chat memory</li>\n<li>OpenAI for AI agent</li>\n</ul>\n<h3>Customising this workflow</h3>\n<ul>\n<li>Not using Telegram? This template works with Whatsapp and other services with equivalent functionality.</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "### 该n8n模板展示了一种利用\"人工介入\"功能作为切换机制，实现机器人向人工坐席无缝转接的方案。\n\n在本实验中，我们通过设定不同状态来控制智能体与用户的交互行为：\n\n* **第一状态** - 智能体执行用户 onboarding 流程，收集销售咨询所需信息，完成后将通话转接至人工坐席\n* **第二状态** - 智能体进入\"休眠\"模式，用户消息不再触发响应，仅自动回复预设内容。人工坐席需填写介入表单并提交会话摘要才能重新激活机器人\n* **第三状态** - 智能体携带人工会话上下文被\"唤醒\"，转为提供售后服务支持，并保留再次转接人工的调用能力\n\n### 实现原理\n\n* 采用Telegram作为用户与智能体的交互平台\n* 通过Redis键值存储管理会话状态，确保消息路由至正确对话阶段\n* 初始状态时引导用户完成信息登记，随后更新会话状态并向人工坐席聊天窗口转发用户资料实现\"转接\"\n* 人工介入期间，机器人保持静默直至坐席通过回复\"人工介入\"消息提交会话摘要。此时状态重置为\"机器人\"模式，并将人工对话上下文植入智能体记忆\n* 转入售后阶段后，用户可随时再次请求人工转接，循环上述流程\n\n### 使用建议\n\n* 精心设计用户旅程！本模板仅展示含3个状态的销售咨询场景，复杂场景需更周密的状态规划\n* 建议将会话状态与CRM系统对接，避免用户滞留无响应状态\n* 注意：onboarding智能体与售后智能体采用独立对话记忆。扩展更多智能体时，建议保持记忆隔离以确保各状态专注度\n\n### 环境要求\n\n* Telegram（机器人交互界面）\n* Redis（会话存储与对话记忆）\n* OpenAI（智能体引擎）\n\n### 定制扩展\n\n* 非Telegram用户：本模板可适配WhatsApp等具备类似功能的通讯平台",
  "title_zh": "Telegram AI 机器人转人工销售通话服务",
  "publish_date_absolute": "",
  "publish_date_zh": "上次更新于一个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"5d6a5a45-8aa8-4c34-aa10-5dd85f05de9d\",\n      \"name\": \"Human Handoff using Send and Wait\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1580,\n        1040\n      ],\n      \"webhookId\": \"d2bbc82f-0509-470a-af4d-9d92cfed4d5f\",\n      \"parameters\": {\n        \"chatId\": \"=<human chat id>\",\n        \"message\": \"=chatId: {{ $('Handoff Subworkflow').first().json.chatId }}\\nsessionId: {{ $('Handoff Subworkflow').first().json.sessionId }}\\nuser: {{ $('Handoff Subworkflow').first().json.username }} ({{ $('Handoff Subworkflow').item.json.userId }})\\n\\nSummary:\\n{{ $('Handoff Subworkflow').item.json.summary }}\\n\\n---\\nThis user has now been handed off to a human.\\nClick the button to return user to bot.\",\n        \"options\": {},\n        \"operation\": \"sendAndWait\",\n        \"responseType\": \"freeText\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"XVBXGXSsaCjU2DOS\",\n          \"name\": \"jimleuk_handoff_bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"5d2f73ff-b233-4456-b34d-d5a5454dabda\",\n      \"name\": \"Set Interaction to Bot\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        1780,\n        1040\n      ],\n      \"parameters\": {\n        \"key\": \"=handoff_{{ $('Handoff Subworkflow').first().json.sessionId }}_state\",\n        \"value\": \"bot\",\n        \"keyType\": \"string\",\n        \"operation\": \"set\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f799e213-f3ed-4479-aade-7a7c38eb5792\",\n      \"name\": \"Set Interaction to Human\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        1380,\n        1040\n      ],\n      \"parameters\": {\n        \"key\": \"=handoff_{{ $json.sessionId }}_state\",\n        \"value\": \"=human\",\n        \"keyType\": \"string\",\n        \"operation\": \"set\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"059c9b8c-ba50-4bdd-8969-6f5f35bba304\",\n      \"name\": \"Get Interaction State\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        -800,\n        820\n      ],\n      \"parameters\": {\n        \"key\": \"=handoff_{{ $json.message.chat.id }}_state\",\n        \"options\": {},\n        \"operation\": \"get\",\n        \"propertyName\": \"data\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8afd48ff-478d-4092-ac88-fb2e435ded00\",\n      \"name\": \"Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -280,\n        640\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"19c5ef66-410d-47fd-9b2a-19776c53a681\",\n      \"name\": \"Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryRedisChat\",\n      \"position\": [\n        -160,\n        640\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"=handoff_{{ $('Telegram Trigger').first().json.message.chat.id }}_chat\",\n        \"sessionIdType\": \"customKey\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1.4\n    },\n    {\n      \"id\": \"814e464d-a2e0-4ae1-83d1-df3732d3b430\",\n      \"name\": \"Handoff Subworkflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        980,\n        1040\n      ],\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"chatId\"\n            },\n            {\n              \"name\": \"sessionId\"\n            },\n            {\n              \"name\": \"userId\"\n            },\n            {\n              \"name\": \"username\"\n            },\n            {\n              \"name\": \"summary\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"53c311ca-b7ad-4705-97c9-f6438a6c6b4e\",\n      \"name\": \"Telegram Trigger\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        -1000,\n        820\n      ],\n      \"webhookId\": \"e905dd99-eefc-48ff-a62d-c7078e9bb216\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"XVBXGXSsaCjU2DOS\",\n          \"name\": \"jimleuk_handoff_bot\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"ea54c9f7-8ebc-4146-a4ec-6d05957f340d\",\n      \"name\": \"Send Response\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1400,\n        340\n      ],\n      \"webhookId\": \"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\n      \"parameters\": {\n        \"text\": \"=Thank you. I've now transferred you to a human agent who will reach out to you. Once complete, you can come back to this chat to finish the process.\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"XVBXGXSsaCjU2DOS\",\n          \"name\": \"jimleuk_handoff_bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"7f895e2a-7aee-40be-a8b7-b2b0ff469b2d\",\n      \"name\": \"Switch Interaction\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -620,\n        820\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"Human\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"6bc61072-f7cf-4a6d-af81-36abede59d47\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.data }}\",\n                    \"rightValue\": \"human\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"Bot\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"6882db64-b522-4895-8949-d98d87b53b49\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.data }}\",\n                    \"rightValue\": \"bot\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\",\n          \"renameFallbackOutput\": \"Onboarding\"\n        }\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"df203358-e6c7-4014-8e2b-ef934e331215\",\n      \"name\": \"Information Extractor\",\n      \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\",\n      \"position\": [\n        440,\n        460\n      ],\n      \"parameters\": {\n        \"text\": \"={{\\n$json.data\\n  .reverse()\\n  .slice(0, 5)\\n  .map(item => item.parseJson())\\n  .map(item => `${item.type}: ${item.data.content}`)\\n  .join('\\\\n')\\n}}\",\n        \"options\": {\n          \"systemPromptTemplate\": \"Analyse the conversation history and extract the required customer details. If not found, leave blank.\"\n        },\n        \"attributes\": {\n          \"attributes\": [\n            {\n              \"name\": \"firstname\",\n              \"required\": true,\n              \"description\": \"first name of customer\"\n            },\n            {\n              \"name\": \"lastname\",\n              \"required\": true,\n              \"description\": \"last name of customer\"\n            },\n            {\n              \"name\": \"address_and_postcode\",\n              \"required\": true,\n              \"description\": \"address and postcode of customer\"\n            },\n            {\n              \"name\": \"reason_for_call\",\n              \"required\": true,\n              \"description\": \"a summary of the reason for the call\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"35bc11d2-6024-425b-ac67-a61ff26b9478\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        420,\n        640\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"20d71c5f-6e84-4b45-b324-0706ecd3a681\",\n      \"name\": \"With Defaults\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        460\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"return {\\n  \\\"firstname\\\": \\\"\\\",\\n  \\\"lastname\\\": \\\"\\\",\\n  \\\"address_and_postcode\\\": \\\"\\\",\\n  \\\"reason_for_call\\\": \\\"\\\",\\n  ...$input.item.json.output,\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"76344f79-1afa-4fd9-9c01-ca3818f62f37\",\n      \"name\": \"Has All Criteria?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        920,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"96d4a43f-aa0f-486a-b692-0105196d099a\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ Object.values($json).every(val => Boolean(val)) }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"f76c1032-036b-46ad-91da-023d5af931fd\",\n      \"name\": \"Onboarding Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        -240,\n        460\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('Telegram Trigger').first().json.message.text }}\",\n        \"options\": {\n          \"systemMessage\": \"=You are a prescreen assistant whose task is to get the following details from a customer before handing them over to a human agent.\\n* first name\\n* last name\\n* address and postcode\\n* reason for calling - capture exact wording if possible.\\n\\nOnce all data is gathered, hand the user off to a human agent.\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"0a5b19a5-9c19-436c-b1d3-23d962efd23e\",\n      \"name\": \"Get Onboarding Chat History\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        280,\n        460\n      ],\n      \"parameters\": {\n        \"key\": \"=handoff_{{ $('Telegram Trigger').first().json.message.chat.id }}_chat\",\n        \"options\": {},\n        \"operation\": \"get\",\n        \"propertyName\": \"data\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4f247eb3-78f0-4ec1-8713-1373da07b5f3\",\n      \"name\": \"After Sales Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        340,\n        1000\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $('Telegram Trigger').item.json.message.text }}\",\n        \"options\": {\n          \"systemMessage\": \"You are an aftersales agent helping the user answer questions about their recent purchase.\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"bce26253-f7da-49e8-952b-52e14eb4f9b5\",\n      \"name\": \"Memory1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryRedisChat\",\n      \"position\": [\n        420,\n        1180\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"=handoff_{{ $('Telegram Trigger').first().json.message.chat.id }}_chat2\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 30\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1.4\n    },\n    {\n      \"id\": \"51c4549b-559c-400d-9951-dde0953ade4c\",\n      \"name\": \"Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        300,\n        1180\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"63b8d9e8-7af2-4103-a365-ca5471bd7b36\",\n      \"name\": \"Handoff Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        540,\n        1180\n      ],\n      \"parameters\": {\n        \"name\": \"handoff_to_human\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Call this tool to handoff or defer to a human agent at the request of the customer. Ensure a summary of the reason for the handoff is obtained first.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id.toString() }}\",\n            \"userId\": \"={{ $('Telegram Trigger').first().json.message.from.id.toString() }}\",\n            \"summary\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('summary', `Reason for human hand-off`, 'string') }}\",\n            \"username\": \"={{ $('Telegram Trigger').first().json.message.from.username }}\",\n            \"sessionId\": \"={{ $('Telegram Trigger').first().json.message.chat.id.toString() }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"chatId\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"chatId\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"sessionId\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"sessionId\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"userId\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"userId\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"username\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"username\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"summary\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"summary\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9a2b9077-0ead-4f2c-9e83-05ee341ff697\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1080,\n        580\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 660,\n        \"height\": 460,\n        \"content\": \"## 1. 检查接收消息的交互状态\\n[了解更多关于Telegram触发器的信息](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.telegramtrigger/)\\n\\n这是一个基于状态代理的示例——这种技术通常被称为有限状态机。当需要按顺序收集数据或执行步骤时，这是精确控制对话流向和导向的理想方式。为管理会话状态，我们可以使用Redis，并以用户号码作为会话键。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ccca9a5c-595a-4c58-9316-933a8234ab91\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -380,\n        260\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 560,\n        \"height\": 520,\n        \"content\": \"## 2. 用于验证客户的入职引导代理  \\n[了解更多关于代理的信息](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)  \\n\\n与市面上常见的多任务处理代理不同，该代理的唯一职责是处理用户的入职流程。通过这种方式，我们以牺牲一定的便捷性为代价避免了功能混杂，从而确保代理更不容易偏离既定路径。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2d859430-1326-4cbc-a5cc-3af0d091e5c0\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        200,\n        260\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 880,\n        \"height\": 520,\n        \"content\": \"## 3. 从对话中提取客户详细信息\\n[了解更多关于信息提取器的功能](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\n为了以结构化格式收集用户的详细信息，我们可以分析当前对话内容，并通过信息提取器节点提取数据。这种方法使得对话能够保持自由形式，无需针对每个字段单独提问。我们使用代码节点来检查是否已捕获所有详细信息。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"754f0859-8af7-4a15-8e46-c9ad62b55bf3\",\n      \"name\": \"Handoff Subworkflow1\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        1220,\n        340\n      ],\n      \"parameters\": {\n        \"mode\": \"each\",\n        \"options\": {\n          \"waitForSubWorkflow\": false\n        },\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"workflowInputs\": {\n          \"value\": {\n            \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id.toString() }}\",\n            \"userId\": \"={{ $('Telegram Trigger').first().json.message.from.id.toString() }}\",\n            \"summary\": \"=name: {{ $json.firstname }} {{ $json.lastname }}\\naddress: {{ $json.address_and_postcode }}\\nsummary: {{ $json.reason_for_call }}\",\n            \"username\": \"={{ $('Telegram Trigger').first().json.message.from.username }}\",\n            \"sessionId\": \"={{ $('Telegram Trigger').first().json.message.chat.id.toString() }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"chatId\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"chatId\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"sessionId\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"sessionId\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"userId\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"userId\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"username\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"username\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"summary\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"summary\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": true\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"6f92128f-14dc-4b0a-b098-3d9535ac11e3\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1100,\n        140\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 800,\n        \"height\": 640,\n        \"content\": \"## 4. 满足条件时人工接管\\n[详细了解子工作流](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow)\\n\\n在此环节，我们启动人工接管流程，调用对应的子工作流。子工作流是实现并行操作且不阻塞用户响应的有效方式。此时会话状态将被标记为\\\"human\\\"，意味着应由人工客服接管处理。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"14500c4f-da43-460f-bf4d-80d0a2f4537b\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -380,\n        800\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 520,\n        \"height\": 440,\n        \"content\": \"## 5. 转交人工处理\\n\\n当会话状态为\\\"人工\\\"时，用户消息将无法继续传递给AI代理。此机制旨在避免人工客服与AI代理同时处理对话可能造成的混淆。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4d74d479-8525-4b64-8291-e2b3058edeaa\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        160,\n        800\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 720,\n        \"height\": 520,\n        \"content\": \"## 6. 交互切换回机器人\\n[了解更多关于客户工作流工具的信息](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolworkflow/)\\n\\n当会话状态为\\\"bot\\\"时，表示人工客服已将用户\\\"转回\\\"机器人，因此可以继续处理用户消息。通过自定义工作流工具，可在用户提出需求时重新触发转接流程。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a1c064d9-cc74-475d-b233-9deb4dfa81d7\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        920,\n        820\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1580,\n        \"height\": 560,\n        \"content\": \"## 7. 交互子流程  \\n[详细了解n8n的人机回环功能](https://docs.n8n.io/advanced-ai/examples/human-fallback/)  \\n\\n此处的交接实现利用了n8n的\\\"人机回环\\\"功能——该功能会在流程执行时\\\"暂停\\\"，直到人工操作者返回回复或操作。听起来复杂，但值得注意的是n8n能无缝处理这种交互！在此场景中，我们通过该功能让人工客服将对话控制权交还给AI助手。同时，人工客服的反馈会被记录并添加到AI记忆库中，以便后续为用户提供更精准的帮助。  \\n\\n（注：根据技术文档翻译规范，对以下术语进行了本地化处理：  \\n1. \\\"human-in-the-loop\\\"译为\\\"人机回环\\\"（行业标准译法）  \\n2. \\\"relinquish control\\\"译为\\\"交还控制权\\\"（比直译\\\"放弃控制\\\"更符合协作场景）  \\n3. 将被动语态\\\"feedback is captured\\\"主动化为\\\"会被记录\\\"  \\n4. 补充\\\"在此场景中\\\"等连接词提升中文语流连贯性）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"33684768-2f21-4f30-9e56-934171b215fc\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1580,\n        -260\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 1320,\n        \"content\": \"## 试试看\\n### 该n8n模板演示了如何利用人工介入功能作为切换机制，实现从机器人到人工的交接流程。\\n\\n本实验中，我们通过设定不同状态来控制代理与用户的交互行为：\\n* **第一状态** - 代理通过收集用户信息完成销售咨询的 onboarding 流程，随后将通话转接给人工客服\\n* **第二状态** - 代理处于\\\"停用\\\"状态，用户发送的消息不会触发响应，仅返回预设回复。人工客服需填写交接表单并总结对话内容才能重新激活机器人\\n* **第三状态** - 代理携带人工对话上下文被\\\"重新激活\\\"，转为提供售后支持服务。此时代理仍保留再次转接人工的调用工具\\n\\n### 运作原理\\n* 使用 Telegram 作为用户与代理的交互平台\\n* 通过 Redis 键值存储维护会话状态，确保消息路由至正确的对话阶段\\n* 未设置状态时启动 onboarding 流程，完成后更新会话状态并向人工聊天窗口转发用户信息实现\\\"转接\\\"\\n* 人工处理阶段，代理保持静默直至收到含对话摘要的交接回复，此时状态切换为\\\"bot\\\"并将上下文植入代理记忆\\n* 售后支持阶段，用户可随时发起二次转接请求，循环前述流程\\n\\n#### 使用建议\\n* 精心设计用户旅程！本模板仅展示含3个状态的销售咨询案例，复杂场景需规划更多状态\\n* 建议将会话状态与CRM系统对接，避免用户滞留无响应状态\\n* 注意 onboarding 代理与售后代理使用独立对话记忆，建议后续扩展时保持该设计以维持状态专注度\\n\\n### 需要帮助？\\n加入[Discord社区](https://discord.com/invite/XPKeKXeB7d)或访问[官方论坛](https://community.n8n.io/)提问！\\n\\n祝您探索愉快！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"187ca5ef-c804-4aca-8ad9-3c4b11676fbf\",\n      \"name\": \"Send Response2\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        2320,\n        1040\n      ],\n      \"webhookId\": \"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\n      \"parameters\": {\n        \"text\": \"=Hello again! I'm now ready to answer any remaining questions you may have.\",\n        \"chatId\": \"={{ $('Handoff Subworkflow').first().json.chatId }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"XVBXGXSsaCjU2DOS\",\n          \"name\": \"jimleuk_handoff_bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"ab036106-84f2-4cf7-a5ad-7706a9e5ea0a\",\n      \"name\": \"Memory2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryRedisChat\",\n      \"position\": [\n        1980,\n        1200\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"=handoff_{{ $('Handoff Subworkflow').first().json.chatId }}_chat2\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 30\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"9d9d1aee-5632-499c-968d-63a555cc58d8\",\n      \"name\": \"Update Agent Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryManager\",\n      \"position\": [\n        1980,\n        1040\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"type\": \"ai\",\n              \"message\": \"=Report from human agent says \\\"{{ $('Human Handoff using Send and Wait').first().json.data.text }}\\\"\",\n              \"hideFromUI\": true\n            },\n            {\n              \"type\": \"ai\",\n              \"message\": \"Hello again! I'm now ready to answer any remaining questions you may have.\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8da2fefa-e51f-4258-8ded-e0f20db87641\",\n      \"name\": \"Send Response3\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        680,\n        1000\n      ],\n      \"webhookId\": \"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\n      \"parameters\": {\n        \"text\": \"={{ $json.output }}\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"XVBXGXSsaCjU2DOS\",\n          \"name\": \"jimleuk_handoff_bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"f027afe0-0fd2-47a2-a0f8-f0d78f8fbc18\",\n      \"name\": \"Get Canned Response\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -180,\n        1000\n      ],\n      \"webhookId\": \"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\n      \"parameters\": {\n        \"text\": \"=This conversation has been handed-off to a human agent who will be in contact soon if not done so already. I cannot respond to your query until the human agent transfers you back to me.\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"XVBXGXSsaCjU2DOS\",\n          \"name\": \"jimleuk_handoff_bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a1ada0c7-779e-44bc-bdbd-1d5285bedf3c\",\n      \"name\": \"Notify user\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1180,\n        1040\n      ],\n      \"webhookId\": \"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\n      \"parameters\": {\n        \"text\": \"=You have now been transferred to a human. Unfortunately, I will not be able to respond until the human agent transfers you back to me.\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"XVBXGXSsaCjU2DOS\",\n          \"name\": \"jimleuk_handoff_bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"31287a38-e7a7-4518-9f54-6e6c9b2486fe\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1520,\n        1020\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 320,\n        \"content\": \"### 添加人工客服聊天ID\\n这是为了能够通知到人工客服。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a58a82b9-2c37-4137-9b3e-17479c78a2d2\",\n      \"name\": \"Memory3\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryRedisChat\",\n      \"position\": [\n        1580,\n        500\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"=handoff_{{ $('Telegram Trigger').first().json.message.chat.id }}_chat2\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 30\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"4d3d5b46-6e82-4b97-9e5f-76f02ff79ce5\",\n      \"name\": \"Update Agent Memory1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryManager\",\n      \"position\": [\n        1580,\n        340\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"type\": \"ai\",\n              \"message\": \"=The person I'm speaking to has the following details:\\nfirstname: {{ $('Handoff Subworkflow1').first().json.firstname }}\\nlastname: {{ $('Handoff Subworkflow1').first().json.firstname }}\\nreason for call: {{ $('Handoff Subworkflow1').first().json.reason_for_call }}\",\n              \"hideFromUI\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"ced46068-440b-46b4-aa51-b5bb9d59a004\",\n      \"name\": \"Continue Conversation\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1220,\n        580\n      ],\n      \"webhookId\": \"55ecb0ba-72c8-4f16-a6c8-0c0bb8582554\",\n      \"parameters\": {\n        \"text\": \"={{ $('Onboarding Agent').first().json.output }}\",\n        \"chatId\": \"={{ $('Telegram Trigger').first().json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"XVBXGXSsaCjU2DOS\",\n          \"name\": \"jimleuk_handoff_bot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Onboarding Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Onboarding Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"After Sales Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Memory1\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"After Sales Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Memory2\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Update Agent Memory\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Memory3\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Update Agent Memory1\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notify user\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Interaction to Human\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Handoff Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"After Sales Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Response\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Agent Memory1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"With Defaults\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Has All Criteria?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Onboarding Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Onboarding Chat History\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Interaction State\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"After Sales Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Response3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Has All Criteria?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Handoff Subworkflow1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Continue Conversation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Information Extractor\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch Interaction\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Canned Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"After Sales Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Onboarding Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Handoff Subworkflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notify user\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Agent Memory\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Response2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Handoff Subworkflow1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Interaction State\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch Interaction\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Information Extractor\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"With Defaults\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Interaction to Bot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Agent Memory\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Interaction to Human\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Human Handoff using Send and Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Onboarding Chat History\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Information Extractor\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Human Handoff using Send and Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Interaction to Bot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}