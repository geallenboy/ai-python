{
  "title": "AI Data Extraction with Dynamic Prompts and Baserow",
  "url": "https://n8n.io/workflows/2780-ai-data-extraction-with-dynamic-prompts-and-baserow/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "Jimleuk",
  "publish_date": "Last update 3 months ago",
  "content": "",
  "workflow_json": "{\"nodes\":[{\"id\":\"065d7ec9-edc5-46f6-b8ac-d62ed0e5c8e3\",\"name\":\"Baserow Event\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-1180,-140],\"webhookId\":\"267ea500-e2cd-4604-a31f-f0773f27317c\",\"parameters\":{\"path\":\"267ea500-e2cd-4604-a31f-f0773f27317c\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":2},{\"id\":\"ac1403b4-9d45-404d-9892-0bed39b9ec82\",\"name\":\"Event Type\",\"type\":\"n8n-nodes-base.switch\",\"position\":[-220,-140],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"rows.updated\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2162daf8-d23d-4b8f-8257-bdfc5400a3a8\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.event_type }}\",\"rightValue\":\"rows.updated\"}]},\"renameOutput\":true},{\"outputKey\":\"field.created\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"48e112f6-afe8-40bf-b673-b37446934a62\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.event_type }}\",\"rightValue\":\"field.created\"}]},\"renameOutput\":true},{\"outputKey\":\"field.updated\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"5aa258cd-15c2-4156-a32d-afeed662a38e\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.event_type }}\",\"rightValue\":\"field.updated\"}]},\"renameOutput\":true}]},\"options\":{}},\"typeVersion\":3.2},{\"id\":\"c501042d-f9e7-4c1a-b01d-b11392b1a804\",\"name\":\"Table Fields API\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-900,-140],\"parameters\":{\"url\":\"=https://api.baserow.io/api/database/fields/table/{{ $json.body.table_id }}/\",\"options\":{},\"sendQuery\":true,\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"user_field_names\",\"value\":\"true\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"F28aPWK5NooSHAg0\",\"name\":\"Baserow (n8n-local)\"}},\"typeVersion\":4.2},{\"id\":\"af6c3b7f-bb8b-4037-8e3b-337d81ca5632\",\"name\":\"Get Prompt Fields\",\"type\":\"n8n-nodes-base.code\",\"position\":[-720,-140],\"parameters\":{\"jsCode\":\"const fields = $input.all()\\n    .filter(item => item.json.description)\\n    .map(item => ({\\n      id: item.json.id,\\n      order: item.json.order,\\n      name: item.json.name,\\n      description: item.json.description,\\n    }));\\n\\nreturn { json: { fields } };\"},\"typeVersion\":2},{\"id\":\"e1f8f740-c784-4f07-9265-76db518f3ebc\",\"name\":\"Get Event Body\",\"type\":\"n8n-nodes-base.set\",\"position\":[-380,-140],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={{ $('Baserow Event').first().json.body }}\"},\"typeVersion\":3.4},{\"id\":\"e303b7c3-639a-4136-8aa4-074eedeb273f\",\"name\":\"List Table API\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[480,220],\"parameters\":{\"url\":\"=https://api.baserow.io/api/database/rows/table/{{ $json.table_id }}/\",\"options\":{\"pagination\":{\"pagination\":{\"nextURL\":\"={{ $response.body.next || `https://api.baserow.io/api/database/rows/table/${$json.table_id}/?user_field_names=true&size=20&page=9999` }}\",\"maxRequests\":3,\"paginationMode\":\"responseContainsNextURL\",\"requestInterval\":1000,\"limitPagesFetched\":true,\"completeExpression\":\"={{ $response.body.isEmpty() || $response.statusCode >= 400 }}\",\"paginationCompleteWhen\":\"other\"}}},\"sendQuery\":true,\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"user_field_names\",\"value\":\"true\"},{\"name\":\"size\",\"value\":\"20\"},{\"name\":\"include\",\"value\":\"id,order,_id,name,created_at,last_modified_at\"},{\"name\":\"filters\",\"value\":\"{\\\"filter_type\\\":\\\"AND\\\",\\\"filters\\\":[{\\\"type\\\":\\\"not_empty\\\",\\\"field\\\":\\\"File\\\",\\\"value\\\":\\\"\\\"}],\\\"groups\\\":[]}\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"F28aPWK5NooSHAg0\",\"name\":\"Baserow (n8n-local)\"}},\"typeVersion\":4.2},{\"id\":\"9ad2e0c8-c92d-460d-be7a-237ce29b34c2\",\"name\":\"Get Valid Rows\",\"type\":\"n8n-nodes-base.code\",\"position\":[640,220],\"parameters\":{\"jsCode\":\"return $input.all()\\n  .filter(item => item.json.results?.length)\\n  .flatMap(item => item.json.results);\"},\"typeVersion\":2},{\"id\":\"72b137e9-2e87-4580-9282-0ab7c5147f68\",\"name\":\"Get File Data\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1320,320],\"parameters\":{\"url\":\"={{ $json.File[0].url }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"d479ee4e-4a87-4a0e-b9ca-4aa54afdc67a\",\"name\":\"Extract from File\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[1480,320],\"parameters\":{\"options\":{},\"operation\":\"pdf\"},\"typeVersion\":1},{\"id\":\"717e36f8-7dd7-44a6-bcef-9f20735853d2\",\"name\":\"Update Row\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"Execute Once\",\"onError\":\"continueRegularOutput\",\"maxTries\":2,\"position\":[2280,380],\"parameters\":{\"url\":\"=https://api.baserow.io/api/database/rows/table/{{ $('Event Ref').first().json.table_id }}/{{ $('Row Reference').item.json.id }}/\",\"method\":\"PATCH\",\"options\":{},\"jsonBody\":\"={{\\n{\\n  ...$input.all()\\n    .reduce((acc, item) => ({\\n      ...acc,\\n      [item.json.field]: item.json.value\\n    }), {})\\n}\\n}}\",\"sendBody\":true,\"sendQuery\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"user_field_names\",\"value\":\"true\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"F28aPWK5NooSHAg0\",\"name\":\"Baserow (n8n-local)\"}},\"executeOnce\":true,\"notesInFlow\":true,\"retryOnFail\":false,\"typeVersion\":4.2,\"waitBetweenTries\":3000},{\"id\":\"b807a9c0-2334-491c-a259-1e0e266f89df\",\"name\":\"Get Result\",\"type\":\"n8n-nodes-base.set\",\"position\":[2100,380],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"3ad72567-1d17-4910-b916-4c34a43b1060\",\"name\":\"field\",\"type\":\"string\",\"value\":\"={{ $('Event Ref').first().json.field.name }}\"},{\"id\":\"e376ba60-8692-4962-9af7-466b6a3f44a2\",\"name\":\"value\",\"type\":\"string\",\"value\":\"={{ $json.text.trim() }}\"}]}},\"typeVersion\":3.4},{\"id\":\"d29a58db-f547-4a4b-bc20-10e14529e474\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[900,220],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"233b2e96-7873-42f0-989f-c3df5a8e4542\",\"name\":\"Row Reference\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[1080,320],\"parameters\":{},\"typeVersion\":1},{\"id\":\"396eb9c0-dcde-4735-9e15-bf6350def086\",\"name\":\"Generate Field Value\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[1640,320],\"parameters\":{\"text\":\"=<file>\\n{{ $json.text }}\\n</file>\\n\\nData to extract: {{ $('Event Ref').first().json.field.description }}\\noutput format is: {{ $('Event Ref').first().json.field.type }}\",\"messages\":{\"messageValues\":[{\"message\":\"=You assist the user in extracting the required data from the given file.\\n* Keep you answer short.\\n* If you cannot extract the requested data, give you response as \\\"n/a\\\".\"}]},\"promptType\":\"define\"},\"typeVersion\":1.5},{\"id\":\"4be0a9e5-e77e-4cea-9dd3-bc6e7de7a72b\",\"name\":\"Get Row\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[640,-420],\"parameters\":{\"url\":\"=https://api.baserow.io/api/database/rows/table/{{ $('Event Ref1').first().json.table_id }}/{{ $json.id }}/\",\"options\":{},\"sendQuery\":true,\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"user_field_names\",\"value\":\"true\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"F28aPWK5NooSHAg0\",\"name\":\"Baserow (n8n-local)\"}},\"typeVersion\":4.2},{\"id\":\"40fc77b8-a986-40ab-a78c-da05a3f171c2\",\"name\":\"Rows to List\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[320,-420],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"items\"},\"typeVersion\":1},{\"id\":\"4c5bc9c8-1bcb-48b1-82d0-5cf04535108c\",\"name\":\"Fields to Update\",\"type\":\"n8n-nodes-base.code\",\"position\":[1640,-300],\"parameters\":{\"jsCode\":\"const row = $('Row Ref').first().json;\\nconst fields = $('Get Prompt Fields').first().json.fields;\\nconst missingFields = fields\\n  .filter(field => field.description && !row[field.name]);\\n\\nreturn missingFields;\"},\"typeVersion\":2},{\"id\":\"85d5c817-e5f8-45ea-bf7f-efc7913f542c\",\"name\":\"Loop Over Items1\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[900,-420],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"69005b35-9c66-4c14-80a9-ef8e945dab30\",\"name\":\"Row Ref\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[1080,-300],\"parameters\":{},\"typeVersion\":1},{\"id\":\"1b0e14da-13a8-4023-9006-464578bf0ff5\",\"name\":\"Get File Data1\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1320,-300],\"parameters\":{\"url\":\"={{ $('Row Ref').item.json.File[0].url }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"47cf67bc-a3e2-4796-b5a7-4f6a6aef3e90\",\"name\":\"Extract from File1\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[1480,-300],\"parameters\":{\"options\":{},\"operation\":\"pdf\"},\"typeVersion\":1},{\"id\":\"3dc743cc-0dde-4349-975c-fa453d99dbaf\",\"name\":\"Update Row1\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"Execute Once\",\"onError\":\"continueRegularOutput\",\"maxTries\":2,\"position\":[2440,-260],\"parameters\":{\"url\":\"=https://api.baserow.io/api/database/rows/table/{{ $('Event Ref1').first().json.table_id }}/{{ $('Row Ref').first().json.id }}/\",\"method\":\"PATCH\",\"options\":{},\"jsonBody\":\"={{\\n{\\n  ...$input.all()\\n    .reduce((acc, item) => ({\\n      ...acc,\\n      [item.json.field]: item.json.value\\n    }), {})\\n}\\n}}\",\"sendBody\":true,\"sendQuery\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"user_field_names\",\"value\":\"true\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"F28aPWK5NooSHAg0\",\"name\":\"Baserow (n8n-local)\"}},\"executeOnce\":true,\"notesInFlow\":true,\"retryOnFail\":false,\"typeVersion\":4.2,\"waitBetweenTries\":3000},{\"id\":\"49c53281-d323-4794-919a-d807d7ccc25e\",\"name\":\"Get Result1\",\"type\":\"n8n-nodes-base.set\",\"position\":[2260,-260],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"3ad72567-1d17-4910-b916-4c34a43b1060\",\"name\":\"field\",\"type\":\"string\",\"value\":\"={{ $('Fields to Update').item.json.name }}\"},{\"id\":\"e376ba60-8692-4962-9af7-466b6a3f44a2\",\"name\":\"value\",\"type\":\"string\",\"value\":\"={{ $json.text.trim() }}\"}]}},\"typeVersion\":3.4},{\"id\":\"bc23708a-b177-47db-8a30-4330198710e0\",\"name\":\"Generate Field Value1\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[1800,-300],\"parameters\":{\"text\":\"=<file>\\n{{ $('Extract from File1').first().json.text }}\\n</file>\\n\\nData to extract: {{ $json.description }}\\noutput format is: {{ $json.type }}\",\"messages\":{\"messageValues\":[{\"message\":\"=You assist the user in extracting the required data from the given file.\\n* Keep you answer short.\\n* If you cannot extract the requested data, give you response as \\\"n/a\\\" followed by \\\"(reason)\\\" where reason is replaced with reason why data could not be extracted.\"}]},\"promptType\":\"define\"},\"typeVersion\":1.5},{\"id\":\"c0297c19-04b8-4d56-9ce0-320b399f73bd\",\"name\":\"Filter Valid Rows\",\"type\":\"n8n-nodes-base.filter\",\"position\":[480,-420],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"7ad58f0b-0354-49a9-ab2f-557652d7b416\",\"operator\":{\"type\":\"string\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json.File[0].url }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"5aab6971-1d6f-4b82-a218-4e25c7b28052\",\"name\":\"Filter Valid Fields\",\"type\":\"n8n-nodes-base.filter\",\"position\":[320,220],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"5b4a7393-788c-42dc-ac1f-e76f833f8534\",\"operator\":{\"type\":\"string\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json.field.description }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"bc144115-f3a2-4e99-a35c-4a780754d0fb\",\"name\":\"Event Ref\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[160,220],\"parameters\":{},\"typeVersion\":1},{\"id\":\"13fd10c0-d4eb-463a-a8b6-5471380f3710\",\"name\":\"Event Ref1\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[160,-420],\"parameters\":{},\"typeVersion\":1},{\"id\":\"e07053a4-a130-41b0-85d3-dfa3983b1547\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1000,-340],\"parameters\":{\"color\":7,\"width\":480,\"height\":440,\"content\":\"### 1. Get Table Schema\\n[Learn more about the HTTP node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\\n\\nFor this operation, we'll have to use the Baserow API rather than the built-in node. However, this way does allow for more flexibility with query parameters.\\n\"},\"typeVersion\":1},{\"id\":\"675b9d6a-1ba6-49ce-b569-38cc0ba04dcb\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-260,-440],\"parameters\":{\"color\":5,\"width\":330,\"height\":80,\"content\":\"### 2a. Updates Minimal Number of Rows\\nThis branch updates only the rows impacted.\"},\"typeVersion\":1},{\"id\":\"021d51f9-7a5b-4f93-baad-707144aeb7ba\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-320,140],\"parameters\":{\"color\":5,\"width\":390,\"height\":120,\"content\":\"### 2b. Update Every Row under the Field\\nThis branch updates all applicable rows under field when the field/column is created or changed. Watch out - if you have 1000s of rows, this could take a while!\"},\"typeVersion\":1},{\"id\":\"ae49cfb0-ac83-4501-bc01-d98be32798f0\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1780,-1060],\"parameters\":{\"width\":520,\"height\":1160,\"content\":\"## Try It Out!\\n### This n8n template powers a \\\"dynamic\\\" or \\\"user-defined\\\" prompts with PDF workflow pattern for a [Baserow](https://baserow.io) table. Simply put, it allows users to populate a spreadsheet using prompts without touching the underlying template.\\n\\n**Check out the video demo I did for n8n Studio**: https://www.youtube.com/watch?v=_fNAD1u8BZw\\n\\nThis template is intended to be used as a webhook source for Baserow. **Looking for a Airtable version? [Click here](https://n8n.io/workflows/2771-ai-data-extraction-with-dynamic-prompts-and-airtable/)**\\n\\n## How it works\\n* Each Baserow.io tables offers integration feature whereby changes to the table can be sent as events to any accessible webhook. This allows for a reactive trigger pattern which makes this type of workflow possible. For our usecase, we capture the vents of `row_updated`, `field_created` and `field_updated`.\\n* Next, we'll need an \\\"input\\\" column in our Baserow.io table. This column will be where our context lives for evaluating the prompts against. In this example, our \\\"input\\\" column name is \\\"file\\\" and it's where we'll upload our PDFs. Note, this \\\"input\\\" field is human-controlled and never updated from this template.\\n* Now for the columns (aka \\\"fields\\\" in Baserow). Each field allows us to define a name, type and description and together form the schema. The first 2 are self-explaintory but the \\\"description\\\" will be for users to provide their prompts ie. what data should the field to contain.\\n* In this template, a webhook trigger waits for when a row or column is updated. The incoming event comes with lots of details such as the table, row and/or column Ids that were impacted.\\n* We use this information to fetch the table's schema in order to get the column's descriptions (aka dynamic prompts).\\n* For each triggered event, we download our input ie. the PDF and ready it for our AI/LLM. By iterating through the available columns and feeding the dynamic prompts, our LLM can run those prompts against the PDF and thus generating a value response for each cell.\\n* These values are then collected and used to update the Baserow Table.\\n\\n## How to use\\n* You'll need to publish this workflow and make it accessible to our Baserow instance. Good to note, you only really need to do this once and can reuse for many Baserow Tables.\\n* Configure your Baserow Table to send `row_updated`, `field_created` and `field_updated` events to this n8n workflow.\\n* This workflow should work with both cloud-hosted and self-hosted versions of Baserow.\\n\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Flowgramming!\"},\"typeVersion\":1},{\"id\":\"23ea63f5-e1ad-4326-95a4-945bf98d03f4\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-500,-340],\"parameters\":{\"color\":7,\"width\":580,\"height\":440,\"content\":\"### 2. Event Router Pattern\\n[Learn more about the Switch node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/)\\n\\nA simple switch node can be used to determine which event to handle. The difference between our row and field events is that row event affect a single row whereas field events affect all rows. \\n\"},\"typeVersion\":1},{\"id\":\"179f9459-43d0-4342-ab94-e248730182a5\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[100,-620],\"parameters\":{\"color\":7,\"width\":700,\"height\":400,\"content\":\"### 3. Filter Only Rows with Valid Input\\n[Learn more about the Split Out node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitout/)\\n\\nThis step handles one or more updated rows where \\\"updated\\\" means the \\\"input\\\" column (ie. \\\"file\\\" in our example) for these rows were changed. For each affected row, we'll get the full row to figure out only the columns we need to update - this is an optimisation to avoid redundant work ie. generating values for columns which already have a value.\"},\"typeVersion\":1},{\"id\":\"7124a8c0-549e-4b82-8e1f-c6428d2bfb44\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2140,-480],\"parameters\":{\"color\":7,\"width\":520,\"height\":440,\"content\":\"### 6. Update the Baserow Table Row\\n[Learn more about the Edit Fields node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/)\\n\\nFinally, we can collect the LLM responses and combine them to build an API request to update our Baserow Table row - the Id of which we got from initial webhook. After this is done, we can move onto the next row and repeat the process.\\n\"},\"typeVersion\":1},{\"id\":\"c55ce945-10ba-440b-a444-81cb4ed63539\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1260,-580],\"parameters\":{\"color\":7,\"width\":860,\"height\":580,\"content\":\"### 5. PDFs, LLMs and Dynamic Prompts? Oh My!\\n[Learn more about the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\\n\\nThis step is where it all comes together! In short, we give our LLM the PDF contents as the context and loop through our dynamic prompts (from the schema we pulled earlier) for our row. At the end, our LLM should have produced a value for each column requested.\\n\\n**Note**: There's definitely a optimisation which could be done for caching PDFs but it beyond the scope of this demonstration.\\n\"},\"typeVersion\":1},{\"id\":\"1a0ff82e-64aa-479e-8dec-c29b512b0686\",\"name\":\"Sticky Note9\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[820,-580],\"parameters\":{\"color\":7,\"width\":420,\"height\":460,\"content\":\"### 4. Using an Items Loop\\n[Learn more about the Split in Batches node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches/)\\n\\nA split in batches node is used here to update a row at a time however, this is a preference for user experience - changes are seen in the Baserow quicker.\\n\"},\"typeVersion\":1},{\"id\":\"f4562d44-4fc0-4c59-ba90-8b65f1162aac\",\"name\":\"Sticky Note10\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[100,40],\"parameters\":{\"color\":7,\"width\":680,\"height\":360,\"content\":\"### 7. Listing All Rows Under The Column\\n[Learn more about the Code node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code)\\n\\nWe can use Baserow's List API and the HTTP node's pagination feature to fetch all applicable rows under the affected field - the filter query on the API is helpful here.\\n\"},\"typeVersion\":1},{\"id\":\"979983e9-1002-444c-a018-50ce525ef02a\",\"name\":\"Sticky Note11\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1260,140],\"parameters\":{\"color\":7,\"width\":700,\"height\":500,\"content\":\"### 9. Generating Value using LLM\\n[Learn more about the Extract From File node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.extractfromfile/)\\n\\nPretty much identical to Step 5 but instead of updating every field/column, we only need to generate a value for one. \\n\"},\"typeVersion\":1},{\"id\":\"f38aa7a3-479b-4876-87bf-769ada3089f2\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[1800,-140],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.1},{\"id\":\"a5061210-2e6b-4b62-994f-594fc10a0ac6\",\"name\":\"Sticky Note12\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[820,40],\"parameters\":{\"color\":7,\"width\":420,\"height\":460,\"content\":\"### 8. Using an Items Loop\\n[Learn more about the Split in Batches node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches/)\\n\\nSimilar to Step 4, the Split in Batches node is a preference for user experience - changes are seen in the Baserow quicker.\\n\"},\"typeVersion\":1},{\"id\":\"e47e36d4-bf6d-48d3-9e52-d8bbac06c4b4\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[1640,500],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.1},{\"id\":\"52501eab-861e-4de9-837d-65879cd43e5b\",\"name\":\"Sticky Note13\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1980,200],\"parameters\":{\"color\":7,\"width\":500,\"height\":380,\"content\":\"### 10. Update the Baserow Table Row\\n[Learn more about the Edit Fields node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/)\\n\\nAs with Step 6, the LLM response is used to update the row however only under the field that was created/changed. Once complete, the loop continues and the next row is processed.\\n\"},\"typeVersion\":1},{\"id\":\"6d9fb2e9-6aca-4276-b9b3-d409be24e40e\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1780,-1200],\"parameters\":{\"color\":7,\"height\":120,\"content\":\"![baserow.io](https://res.cloudinary.com/daglih2g8/image/upload/f_auto,q_auto/v1/n8n-workflows/baserow_logo)\"},\"typeVersion\":1},{\"id\":\"bccfc32b-fd18-4de7-88d5-0aeb02ab7954\",\"name\":\"Sticky Note14\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1200,-1280],\"parameters\":{\"color\":5,\"width\":820,\"height\":800,\"content\":\"## ⭐️ Creating Baserow Webhooks\\nBaserow webhooks are created via the UI and the option can be accessed by clicking on the 3 dots button in the toolbar.\\n\\n* Create a POST webhook for your n8n webhook URL found in this template.\\n* Select the \\\"use fields names instead of IDs\\\" option.\\n* Select \\\"let me choose individual events\\\"\\n* The events to choose are \\\"row updated\\\", \\\"field created\\\" and \\\"field updated\\\".\\n* For the \\\"row updated\\\" event, be sure to specify the input field - in this case, \\\"File\\\".\\n\\n![](https://res.cloudinary.com/daglih2g8/image/upload/f_auto,q_auto/v1/n8n-workflows/jfhvavdpnf3krloc6iaz)\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Get Row\":{\"main\":[[{\"node\":\"Loop Over Items1\",\"type\":\"main\",\"index\":0}]]},\"Row Ref\":{\"main\":[[{\"node\":\"Get File Data1\",\"type\":\"main\",\"index\":0}]]},\"Event Ref\":{\"main\":[[{\"node\":\"Filter Valid Fields\",\"type\":\"main\",\"index\":0}]]},\"Event Ref1\":{\"main\":[[{\"node\":\"Rows to List\",\"type\":\"main\",\"index\":0}]]},\"Event Type\":{\"main\":[[{\"node\":\"Event Ref1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Event Ref\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Event Ref\",\"type\":\"main\",\"index\":0}]]},\"Get Result\":{\"main\":[[{\"node\":\"Update Row\",\"type\":\"main\",\"index\":0}]]},\"Update Row\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Get Result1\":{\"main\":[[{\"node\":\"Update Row1\",\"type\":\"main\",\"index\":0}]]},\"Update Row1\":{\"main\":[[{\"node\":\"Loop Over Items1\",\"type\":\"main\",\"index\":0}]]},\"Rows to List\":{\"main\":[[{\"node\":\"Filter Valid Rows\",\"type\":\"main\",\"index\":0}]]},\"Baserow Event\":{\"main\":[[{\"node\":\"Table Fields API\",\"type\":\"main\",\"index\":0}]]},\"Get File Data\":{\"main\":[[{\"node\":\"Extract from File\",\"type\":\"main\",\"index\":0}]]},\"Row Reference\":{\"main\":[[{\"node\":\"Get File Data\",\"type\":\"main\",\"index\":0}]]},\"Get Event Body\":{\"main\":[[{\"node\":\"Event Type\",\"type\":\"main\",\"index\":0}]]},\"Get File Data1\":{\"main\":[[{\"node\":\"Extract from File1\",\"type\":\"main\",\"index\":0}]]},\"Get Valid Rows\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"List Table API\":{\"main\":[[{\"node\":\"Get Valid Rows\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items\":{\"main\":[[],[{\"node\":\"Row Reference\",\"type\":\"main\",\"index\":0}]]},\"Fields to Update\":{\"main\":[[{\"node\":\"Generate Field Value1\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items1\":{\"main\":[[],[{\"node\":\"Row Ref\",\"type\":\"main\",\"index\":0}]]},\"Table Fields API\":{\"main\":[[{\"node\":\"Get Prompt Fields\",\"type\":\"main\",\"index\":0}]]},\"Extract from File\":{\"main\":[[{\"node\":\"Generate Field Value\",\"type\":\"main\",\"index\":0}]]},\"Filter Valid Rows\":{\"main\":[[{\"node\":\"Get Row\",\"type\":\"main\",\"index\":0}]]},\"Get Prompt Fields\":{\"main\":[[{\"node\":\"Get Event Body\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Generate Field Value1\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Extract from File1\":{\"main\":[[{\"node\":\"Fields to Update\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"Generate Field Value\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Filter Valid Fields\":{\"main\":[[{\"node\":\"List Table API\",\"type\":\"main\",\"index\":0}]]},\"Generate Field Value\":{\"main\":[[{\"node\":\"Get Result\",\"type\":\"main\",\"index\":0}]]},\"Generate Field Value1\":{\"main\":[[{\"node\":\"Get Result1\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This n8n template introduces the **Dynamic Prompts** AI workflow pattern which are incredible for certain types of data extraction tasks where attributes are unknown or need to remain flexible.\n\nThe general idea behind this pattern is that the prompts for requested attributes to be extracted live outside the template and so can be changed at any time - without needing to edit the template. This seriously cuts down on maintainance requirements and is reusable for any number of tables at little cost.\n\n**Check out the n8n Studio Episode here** : <https://www.youtube.com/watch?v=_fNAD1u8BZw>\n\n**Community post here** : <https://community.n8n.io/t/dynamic-prompts-with-n8n-baserow-and-airtable/72052>\n\n**Looking for the Airtable Version?** <https://n8n.io/workflows/2771-ai-data-extraction-with-dynamic-prompts-and-airtable/>\n\n## How it works\n\n  * Given we have an \"input\" field for context and a number of fields for the data we want to extract, this template will run in the background to react to any changes to either the \"input\" or fields and automatically update the rows accordingly.\n  * The key is that Baserow fields have a special property called the \"field description\". In this pattern, we use this property to allow the user to store a simple prompt describing the data that should exist in the column.\n  * Our n8n template reads these column descriptions aka \"prompts\" to use as instructions to perform tasks on the \"input\".\n  * In this template, the \"input\" is a PDF of a resume/CV and the columns are attributes a HR person would want to extract from it - such as full name, address, last position, years of experience etc.\n\n\n\n## How to use\n\n  * First publish this template and ensure it's accessible via webhook URL.\n  * You then have to complete the \"create Baserow webhooks\" steps to configure your baserow to send change events to the n8n template. Baserow webhooks are created in the Baserow web interface.\n\n\n\nCheck the template for more instructions.\n\n## Requirements\n\n  * Baserow for Tables/Database\n  * OpenAI for LLM and extraction. Feel free to choose another LLM if preferred.\n\n\n\n## Customising this workflow\n\n  * If you're not using files, you can replace the \"input\" field with anything you like. For example, the \"input\" could be single line text.\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>This n8n template introduces the <strong>Dynamic Prompts</strong> AI workflow pattern which are incredible for certain types of data extraction tasks where attributes are unknown or need to remain flexible.</p>\n<p>The general idea behind this pattern is that the prompts for requested attributes to be extracted live outside the template and so can be changed at any time - without needing to edit the template. This seriously cuts down on maintainance requirements and is reusable for any number of tables at little cost.</p>\n<p><strong>Check out the n8n Studio Episode here</strong>: <a href=\"https://www.youtube.com/watch?v=_fNAD1u8BZw\" rel=\"ugc nofollow\" target=\"_blank\">https://www.youtube.com/watch?v=_fNAD1u8BZw</a></p>\n<p><strong>Community post here</strong>: <a href=\"https://community.n8n.io/t/dynamic-prompts-with-n8n-baserow-and-airtable/72052\" rel=\"ugc nofollow\" target=\"_blank\">https://community.n8n.io/t/dynamic-prompts-with-n8n-baserow-and-airtable/72052</a></p>\n<p><strong>Looking for the Airtable Version?</strong> <a href=\"https://n8n.io/workflows/2771-ai-data-extraction-with-dynamic-prompts-and-airtable/\" rel=\"ugc nofollow\" target=\"_blank\">https://n8n.io/workflows/2771-ai-data-extraction-with-dynamic-prompts-and-airtable/</a></p>\n<h2>How it works</h2>\n<ul>\n<li>Given we have an \"input\" field for context and a number of fields for the data we want to extract, this template will run in the background to react to any changes to either the \"input\" or fields and automatically update the rows accordingly.</li>\n<li>The key is that Baserow fields have a special property called the \"field description\". In this pattern, we use this property to allow the user to store a simple prompt describing the data that should exist in the column.</li>\n<li>Our n8n template reads these column descriptions aka \"prompts\" to use as instructions to perform tasks on the \"input\".</li>\n<li>In this template, the \"input\" is a PDF of a resume/CV and the columns are attributes a HR person would want to extract from it - such as full name, address, last position, years of experience etc.</li>\n</ul>\n<h2>How to use</h2>\n<ul>\n<li>First publish this template and ensure it's accessible via webhook URL.</li>\n<li>You then have to complete the \"create Baserow webhooks\" steps to configure your baserow to send change events to the n8n template. Baserow webhooks are created in the Baserow web interface.</li>\n</ul>\n<p>Check the template for more instructions.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Baserow for Tables/Database</li>\n<li>OpenAI for LLM and extraction. Feel free to choose another LLM if preferred.</li>\n</ul>\n<h2>Customising this workflow</h2>\n<ul>\n<li>If you're not using files, you can replace the \"input\" field with anything you like. For example, the \"input\" could be single line text.</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "此n8n模板介绍了**动态提示词**AI工作流模式，该模式在需要提取未知属性或保持灵活性的特定数据提取任务中表现卓越。\n\n该模式的核心思想在于：用于提取目标属性的提示词独立于模板之外存储，可随时修改而无需调整模板。这大幅降低了维护成本，并能以极低代价复用于任意数量的数据表。\n\n**观看n8n Studio专题视频**：<https://www.youtube.com/watch?v=_fNAD1u8BZw>\n\n**社区讨论帖**：<https://community.n8n.io/t/dynamic-prompts-with-n8n-baserow-and-airtable/72052>\n\n**需要Airtable版本？** <https://n8n.io/workflows/2771-ai-data-extraction-with-dynamic-prompts-and-airtable/>\n\n## 工作原理\n\n  * 当存在包含上下文的\"输入\"字段和若干待提取数据字段时，本模板会在后台监测\"输入\"或字段的变更，并自动更新对应行数据\n  * 关键在于Baserow字段特有的\"字段描述\"属性。本模式利用该属性让用户存储简单提示词，描述该列应包含的数据内容\n  * n8n模板读取这些列描述（即\"提示词\"）作为指令，对\"输入\"内容执行处理任务\n  * 本模板中\"输入\"为简历PDF文件，各列则是HR人员需要提取的属性——如全名、地址、最近职位、工作年限等\n\n## 使用方法\n\n  * 首先发布此模板并确保可通过webhook URL访问\n  * 完成\"创建Baserow webhook\"步骤，将Baserow配置为向n8n模板发送变更事件（Baserow webhook需在其网页界面创建）\n\n更多说明请查看模板内容。\n\n## 环境要求\n\n  * Baserow表格/数据库\n  * OpenAI大语言模型（用于提取任务，可替换为其他LLM）\n\n## 自定义调整\n\n  * 若非文件处理场景，可将\"输入\"字段替换为任意内容（例如单行文本）",
  "title_zh": "基于动态提示与Baserow的AI数据提取",
  "publish_date_absolute": "2025-02-07",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"id\": \"065d7ec9-edc5-46f6-b8ac-d62ed0e5c8e3\",\n      \"name\": \"Baserow Event\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1180,\n        -140\n      ],\n      \"webhookId\": \"267ea500-e2cd-4604-a31f-f0773f27317c\",\n      \"parameters\": {\n        \"path\": \"267ea500-e2cd-4604-a31f-f0773f27317c\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ac1403b4-9d45-404d-9892-0bed39b9ec82\",\n      \"name\": \"Event Type\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -220,\n        -140\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"rows.updated\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2162daf8-d23d-4b8f-8257-bdfc5400a3a8\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.event_type }}\",\n                    \"rightValue\": \"rows.updated\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"field.created\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"48e112f6-afe8-40bf-b673-b37446934a62\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.event_type }}\",\n                    \"rightValue\": \"field.created\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"field.updated\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"5aa258cd-15c2-4156-a32d-afeed662a38e\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.event_type }}\",\n                    \"rightValue\": \"field.updated\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"c501042d-f9e7-4c1a-b01d-b11392b1a804\",\n      \"name\": \"Table Fields API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -900,\n        -140\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.baserow.io/api/database/fields/table/{{ $json.body.table_id }}/\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"user_field_names\",\n              \"value\": \"true\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"F28aPWK5NooSHAg0\",\n          \"name\": \"Baserow (n8n-local)\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"af6c3b7f-bb8b-4037-8e3b-337d81ca5632\",\n      \"name\": \"Get Prompt Fields\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -720,\n        -140\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const fields = $input.all()\\n    .filter(item => item.json.description)\\n    .map(item => ({\\n      id: item.json.id,\\n      order: item.json.order,\\n      name: item.json.name,\\n      description: item.json.description,\\n    }));\\n\\nreturn { json: { fields } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e1f8f740-c784-4f07-9265-76db518f3ebc\",\n      \"name\": \"Get Event Body\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -380,\n        -140\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={{ $('Baserow Event').first().json.body }}\"\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e303b7c3-639a-4136-8aa4-074eedeb273f\",\n      \"name\": \"List Table API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        480,\n        220\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.baserow.io/api/database/rows/table/{{ $json.table_id }}/\",\n        \"options\": {\n          \"pagination\": {\n            \"pagination\": {\n              \"nextURL\": \"={{ $response.body.next || `https://api.baserow.io/api/database/rows/table/${$json.table_id}/?user_field_names=true&size=20&page=9999` }}\",\n              \"maxRequests\": 3,\n              \"paginationMode\": \"responseContainsNextURL\",\n              \"requestInterval\": 1000,\n              \"limitPagesFetched\": true,\n              \"completeExpression\": \"={{ $response.body.isEmpty() || $response.statusCode >= 400 }}\",\n              \"paginationCompleteWhen\": \"other\"\n            }\n          }\n        },\n        \"sendQuery\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"user_field_names\",\n              \"value\": \"true\"\n            },\n            {\n              \"name\": \"size\",\n              \"value\": \"20\"\n            },\n            {\n              \"name\": \"include\",\n              \"value\": \"id,order,_id,name,created_at,last_modified_at\"\n            },\n            {\n              \"name\": \"filters\",\n              \"value\": \"{\\\"filter_type\\\":\\\"AND\\\",\\\"filters\\\":[{\\\"type\\\":\\\"not_empty\\\",\\\"field\\\":\\\"File\\\",\\\"value\\\":\\\"\\\"}],\\\"groups\\\":[]}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"F28aPWK5NooSHAg0\",\n          \"name\": \"Baserow (n8n-local)\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"9ad2e0c8-c92d-460d-be7a-237ce29b34c2\",\n      \"name\": \"Get Valid Rows\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        640,\n        220\n      ],\n      \"parameters\": {\n        \"jsCode\": \"return $input.all()\\n  .filter(item => item.json.results?.length)\\n  .flatMap(item => item.json.results);\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"72b137e9-2e87-4580-9282-0ab7c5147f68\",\n      \"name\": \"Get File Data\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1320,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.File[0].url }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"d479ee4e-4a87-4a0e-b9ca-4aa54afdc67a\",\n      \"name\": \"Extract from File\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        1480,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"pdf\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"717e36f8-7dd7-44a6-bcef-9f20735853d2\",\n      \"name\": \"Update Row\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Execute Once\",\n      \"onError\": \"continueRegularOutput\",\n      \"maxTries\": 2,\n      \"position\": [\n        2280,\n        380\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.baserow.io/api/database/rows/table/{{ $('Event Ref').first().json.table_id }}/{{ $('Row Reference').item.json.id }}/\",\n        \"method\": \"PATCH\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n{\\n  ...$input.all()\\n    .reduce((acc, item) => ({\\n      ...acc,\\n      [item.json.field]: item.json.value\\n    }), {})\\n}\\n}}\",\n        \"sendBody\": true,\n        \"sendQuery\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"user_field_names\",\n              \"value\": \"true\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"F28aPWK5NooSHAg0\",\n          \"name\": \"Baserow (n8n-local)\"\n        }\n      },\n      \"executeOnce\": true,\n      \"notesInFlow\": true,\n      \"retryOnFail\": false,\n      \"typeVersion\": 4.2,\n      \"waitBetweenTries\": 3000\n    },\n    {\n      \"id\": \"b807a9c0-2334-491c-a259-1e0e266f89df\",\n      \"name\": \"Get Result\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2100,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3ad72567-1d17-4910-b916-4c34a43b1060\",\n              \"name\": \"field\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Event Ref').first().json.field.name }}\"\n            },\n            {\n              \"id\": \"e376ba60-8692-4962-9af7-466b6a3f44a2\",\n              \"name\": \"value\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.text.trim() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d29a58db-f547-4a4b-bc20-10e14529e474\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        900,\n        220\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"233b2e96-7873-42f0-989f-c3df5a8e4542\",\n      \"name\": \"Row Reference\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1080,\n        320\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"396eb9c0-dcde-4735-9e15-bf6350def086\",\n      \"name\": \"Generate Field Value\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        1640,\n        320\n      ],\n      \"parameters\": {\n        \"text\": \"=<file>\\n{{ $json.text }}\\n</file>\\n\\nData to extract: {{ $('Event Ref').first().json.field.description }}\\noutput format is: {{ $('Event Ref').first().json.field.type }}\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"=You assist the user in extracting the required data from the given file.\\n* Keep you answer short.\\n* If you cannot extract the requested data, give you response as \\\"n/a\\\".\"\n            }\n          ]\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"4be0a9e5-e77e-4cea-9dd3-bc6e7de7a72b\",\n      \"name\": \"Get Row\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        640,\n        -420\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.baserow.io/api/database/rows/table/{{ $('Event Ref1').first().json.table_id }}/{{ $json.id }}/\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"user_field_names\",\n              \"value\": \"true\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"F28aPWK5NooSHAg0\",\n          \"name\": \"Baserow (n8n-local)\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"40fc77b8-a986-40ab-a78c-da05a3f171c2\",\n      \"name\": \"Rows to List\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        320,\n        -420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"items\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4c5bc9c8-1bcb-48b1-82d0-5cf04535108c\",\n      \"name\": \"Fields to Update\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1640,\n        -300\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const row = $('Row Ref').first().json;\\nconst fields = $('Get Prompt Fields').first().json.fields;\\nconst missingFields = fields\\n  .filter(field => field.description && !row[field.name]);\\n\\nreturn missingFields;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"85d5c817-e5f8-45ea-bf7f-efc7913f542c\",\n      \"name\": \"Loop Over Items1\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        900,\n        -420\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"69005b35-9c66-4c14-80a9-ef8e945dab30\",\n      \"name\": \"Row Ref\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1080,\n        -300\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1b0e14da-13a8-4023-9006-464578bf0ff5\",\n      \"name\": \"Get File Data1\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1320,\n        -300\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('Row Ref').item.json.File[0].url }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"47cf67bc-a3e2-4796-b5a7-4f6a6aef3e90\",\n      \"name\": \"Extract from File1\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        1480,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"pdf\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3dc743cc-0dde-4349-975c-fa453d99dbaf\",\n      \"name\": \"Update Row1\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Execute Once\",\n      \"onError\": \"continueRegularOutput\",\n      \"maxTries\": 2,\n      \"position\": [\n        2440,\n        -260\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.baserow.io/api/database/rows/table/{{ $('Event Ref1').first().json.table_id }}/{{ $('Row Ref').first().json.id }}/\",\n        \"method\": \"PATCH\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n{\\n  ...$input.all()\\n    .reduce((acc, item) => ({\\n      ...acc,\\n      [item.json.field]: item.json.value\\n    }), {})\\n}\\n}}\",\n        \"sendBody\": true,\n        \"sendQuery\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"user_field_names\",\n              \"value\": \"true\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"F28aPWK5NooSHAg0\",\n          \"name\": \"Baserow (n8n-local)\"\n        }\n      },\n      \"executeOnce\": true,\n      \"notesInFlow\": true,\n      \"retryOnFail\": false,\n      \"typeVersion\": 4.2,\n      \"waitBetweenTries\": 3000\n    },\n    {\n      \"id\": \"49c53281-d323-4794-919a-d807d7ccc25e\",\n      \"name\": \"Get Result1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2260,\n        -260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3ad72567-1d17-4910-b916-4c34a43b1060\",\n              \"name\": \"field\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Fields to Update').item.json.name }}\"\n            },\n            {\n              \"id\": \"e376ba60-8692-4962-9af7-466b6a3f44a2\",\n              \"name\": \"value\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.text.trim() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"bc23708a-b177-47db-8a30-4330198710e0\",\n      \"name\": \"Generate Field Value1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        1800,\n        -300\n      ],\n      \"parameters\": {\n        \"text\": \"=<file>\\n{{ $('Extract from File1').first().json.text }}\\n</file>\\n\\nData to extract: {{ $json.description }}\\noutput format is: {{ $json.type }}\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"=You assist the user in extracting the required data from the given file.\\n* Keep you answer short.\\n* If you cannot extract the requested data, give you response as \\\"n/a\\\" followed by \\\"(reason)\\\" where reason is replaced with reason why data could not be extracted.\"\n            }\n          ]\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"c0297c19-04b8-4d56-9ce0-320b399f73bd\",\n      \"name\": \"Filter Valid Rows\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        480,\n        -420\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"7ad58f0b-0354-49a9-ab2f-557652d7b416\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.File[0].url }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"5aab6971-1d6f-4b82-a218-4e25c7b28052\",\n      \"name\": \"Filter Valid Fields\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        320,\n        220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"5b4a7393-788c-42dc-ac1f-e76f833f8534\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.field.description }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"bc144115-f3a2-4e99-a35c-4a780754d0fb\",\n      \"name\": \"Event Ref\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        160,\n        220\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"13fd10c0-d4eb-463a-a8b6-5471380f3710\",\n      \"name\": \"Event Ref1\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        160,\n        -420\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e07053a4-a130-41b0-85d3-dfa3983b1547\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1000,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 480,\n        \"height\": 440,\n        \"content\": \"### 1. 获取表结构\\n[详细了解HTTP节点](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\\n\\n此操作需要使用Baserow API而非内置节点，但这种方式能通过查询参数实现更高灵活性。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"675b9d6a-1ba6-49ce-b569-38cc0ba04dcb\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -260,\n        -440\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 330,\n        \"height\": 80,\n        \"content\": \"### 2a. 最小化行更新\\n此分支仅更新受影响的那些行。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"021d51f9-7a5b-4f93-baad-707144aeb7ba\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -320,\n        140\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 390,\n        \"height\": 120,\n        \"content\": \"### 2b. 更新字段下的所有行\\n此分支在创建或更改字段/列时，会更新该字段下所有适用的行。请注意——如果您有数千行数据，此操作可能需要较长时间！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ae49cfb0-ac83-4501-bc01-d98be32798f0\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1780,\n        -1060\n      ],\n      \"parameters\": {\n        \"width\": 520,\n        \"height\": 1160,\n        \"content\": \"## 试试看吧！\\n### 这个n8n模板为[Baserow](https://baserow.io)表格实现了\\\"动态\\\"或\\\"用户自定义\\\"提示词与PDF处理的工作流。简而言之，它允许用户通过提示词填充电子表格，而无需修改底层模板。\\n\\n**观看我在n8n工作室录制的演示视频**：https://www.youtube.com/watch?v=_fNAD1u8BZw\\n\\n本模板设计用作Baserow的webhook数据源。**需要Airtable版本？[点此获取](https://n8n.io/workflows/2771-ai-data-extraction-with-dynamic-prompts-and-airtable/)**\\n\\n## 工作原理\\n* Baserow.io表格提供集成功能，可将表格变更作为事件发送至任意可访问的webhook。这种响应式触发机制是本工作流的核心。我们主要捕获`row_updated`、`field_created`和`field_updated`三类事件。\\n* 表格中需要设置一个\\\"输入\\\"列存放提示词评估的上下文。本示例以\\\"file\\\"列作为PDF文件的上传位置。注意：该输入字段由人工控制，模板不会自动更新。\\n* 列设置（Baserow中称为\\\"字段\\\"）包含名称、类型和描述三要素。前两者不言自明，\\\"描述\\\"栏则用于填写提示词——即该字段应包含何种数据。\\n* 模板通过webhook触发器监听行/列更新事件。事件详情中包含受影响的表格、行和列ID等信息。\\n* 利用这些信息获取表格结构，从而读取列描述（即动态提示词）。\\n* 每当事件触发时，系统会下载PDF输入文件并预处理供AI/LLM使用。通过遍历所有可用列并输入动态提示词，LLM将对PDF执行提示词指令，为每个单元格生成值。\\n* 最终将这些值汇总并更新至Baserow表格。\\n\\n## 使用指南\\n* 需发布此工作流并确保Baserow实例可访问。注意：只需配置一次即可复用于多个Baserow表格。\\n* 在Baserow表格中设置将`row_updated`、`field_created`和`field_updated`事件发送至本n8n工作流。\\n* 本模板兼容Baserow云端版和自托管版。\\n\\n### 需要帮助？\\n加入[Discord](https://discord.com/invite/XPKeKXeB7d)或访问[论坛](https://community.n8n.io/)提问！\\n\\n祝流程编写愉快！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"23ea63f5-e1ad-4326-95a4-945bf98d03f4\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -500,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 580,\n        \"height\": 440,\n        \"content\": \"### 2. 事件路由模式\\n[详细了解Switch节点](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.switch/)\\n\\n通过简单的switch节点即可判断需要处理哪个事件。行事件与字段事件的区别在于：行事件仅影响单行数据，而字段事件会影响所有数据行。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"179f9459-43d0-4342-ab94-e248730182a5\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        -620\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 700,\n        \"height\": 400,\n        \"content\": \"### 3. 仅筛选含有效输入的行\\n[了解Split Out节点详情](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitout/)\\n\\n本步骤处理一条或多条更新的行，其中\\\"更新\\\"意味着这些行的\\\"输入\\\"列（即本例中的\\\"file\\\"列）发生了变化。针对每一条受影响的行，我们将获取整行数据以确定仅需更新的列——这是为避免冗余工作（例如：为已有值的列重新生成值）而做的优化处理。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7124a8c0-549e-4b82-8e1f-c6428d2bfb44\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2140,\n        -480\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 520,\n        \"height\": 440,\n        \"content\": \"### 6. 更新Baserow表格行记录  \\n[详细了解编辑字段节点](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/)  \\n\\n最后，我们可以收集LLM的响应结果，并将其组合起来构建一个API请求，用于更新Baserow表格中的行记录——该记录的ID来自初始的webhook。完成此操作后，即可继续处理下一行记录并重复这一流程。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c55ce945-10ba-440b-a444-81cb4ed63539\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1260,\n        -580\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 860,\n        \"height\": 580,\n        \"content\": \"### 5. PDF文档、大语言模型与动态提示？妙不可言！\\n[了解更多基础LLM节点](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\\n\\n这个步骤就是所有环节的集大成之处！简而言之，我们将PDF内容作为上下文输入给大语言模型，并循环处理从先前提取的架构中获得的动态提示。最终，模型会为请求的每一列生成对应数值。\\n\\n**注意**：虽然可以通过缓存PDF文档实现性能优化，但这已超出本演示的范围。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1a0ff82e-64aa-479e-8dec-c29b512b0686\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        820,\n        -580\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 420,\n        \"height\": 460,\n        \"content\": \"### 4. 使用项目循环\\n[了解更多关于分批处理节点的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches/)\\n\\n此处使用分批处理节点是为了逐行更新数据，不过这是出于用户体验的考虑——这样Baserow中的变更能更快显现。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f4562d44-4fc0-4c59-ba90-8b65f1162aac\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        40\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 680,\n        \"height\": 360,\n        \"content\": \"### 7. 列出该列下的所有行\\n[了解更多关于代码节点的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code)\\n\\n我们可以利用Baserow的列表API和HTTP节点的分页功能来获取受影响字段下的所有相关行——此时API的筛选查询功能将非常有用。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"979983e9-1002-444c-a018-50ce525ef02a\",\n      \"name\": \"Sticky Note11\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1260,\n        140\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 700,\n        \"height\": 500,\n        \"content\": \"### 9. 利用LLM生成价值\\n[了解更多关于“从文件提取”节点的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.extractfromfile/)\\n\\n与步骤5几乎完全相同，但不同于更新每个字段/列，我们只需为其中一个生成值。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f38aa7a3-479b-4876-87bf-769ada3089f2\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1800,\n        -140\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"a5061210-2e6b-4b62-994f-594fc10a0ac6\",\n      \"name\": \"Sticky Note12\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        820,\n        40\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 420,\n        \"height\": 460,\n        \"content\": \"### 8. 使用项目循环\\n[了解更多关于分批处理节点的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches/)\\n\\n与步骤4类似，分批处理节点是出于用户体验的考虑——变更能更快地在Baserow中显现。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e47e36d4-bf6d-48d3-9e52-d8bbac06c4b4\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1640,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"52501eab-861e-4de9-837d-65879cd43e5b\",\n      \"name\": \"Sticky Note13\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1980,\n        200\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 500,\n        \"height\": 380,\n        \"content\": \"### 10. 更新Baserow表格行\\n[了解编辑字段节点详情](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/)\\n\\n与步骤6类似，此处利用LLM的响应来更新表格行，但仅针对已创建/修改的字段进行更新。完成后，循环继续处理下一行数据。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6d9fb2e9-6aca-4276-b9b3-d409be24e40e\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1780,\n        -1200\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"height\": 120,\n        \"content\": \"![Baserow.io](https://res.cloudinary.com/daglih2g8/image/upload/f_auto,q_auto/v1/n8n-workflows/baserow_logo)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bccfc32b-fd18-4de7-88d5-0aeb02ab7954\",\n      \"name\": \"Sticky Note14\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1200,\n        -1280\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 820,\n        \"height\": 800,\n        \"content\": \"## ⭐️ 创建Baserow网络钩子  \\nBaserow网络钩子可通过用户界面创建，点击工具栏中的三点按钮即可找到该选项。\\n\\n* 为此模板中的n8n网络钩子URL创建一个POST网络钩子。\\n* 选择“使用字段名称而非ID”选项。\\n* 选择“让我选择单个事件”\\n* 需选择的事件包括“行更新”、“字段创建”和“字段更新”。\\n* 对于“行更新”事件，务必指定输入字段——本例中为“File”。\\n\\n![](https://res.cloudinary.com/daglih2g8/image/upload/f_auto,q_auto/v1/n8n-workflows/jfhvavdpnf3krloc6iaz)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Get Row\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Row Ref\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get File Data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Event Ref\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Valid Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Event Ref1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Rows to List\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Event Type\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Event Ref1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Event Ref\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Event Ref\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Result\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Row\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Row\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Result1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Row1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Row1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Rows to List\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Valid Rows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Baserow Event\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Table Fields API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get File Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract from File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Row Reference\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get File Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Event Body\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Event Type\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get File Data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract from File1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Valid Rows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List Table API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Valid Rows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Row Reference\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fields to Update\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Field Value1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items1\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Row Ref\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Table Fields API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Prompt Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract from File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Field Value\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Valid Rows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Row\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Prompt Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Event Body\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Generate Field Value1\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract from File1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fields to Update\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Generate Field Value\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Valid Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List Table API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Field Value\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Field Value1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Result1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}