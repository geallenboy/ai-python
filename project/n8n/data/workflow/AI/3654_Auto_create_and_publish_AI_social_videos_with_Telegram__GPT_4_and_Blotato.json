{
  "title": "Auto-create and publish AI social videos with Telegram, GPT-4 and Blotato",
  "url": "https://n8n.io/workflows/3654-auto-create-and-publish-ai-social-videos-with-telegram-gpt-4-and-blotato/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/",
  "author": "Dr. Firas",
  "publish_date": "Last update 4 days ago",
  "content": "",
  "workflow_json": "{\"id\":\"hiCTcf6srJl3Xsxh\",\"meta\":{\"instanceId\":\"a2b23892dd6989fda7c1209b381f5850373a7d2b85609624d7c2b7a092671d44\"},\"name\":\"Auto-create and publish AI social videos with Telegram, GPT-4 and Blotato\",\"tags\":[],\"nodes\":[{\"id\":\"b8a41b63-8c48-4964-befe-b949f3e9b755\",\"name\":\"Upload Video to Blotato\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2580,920],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/media\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"sendHeaders\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"url\",\"value\":\"={{ $('Append Video Data to Google Sheet').item.json['url '] }}\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"ac7a8bf1-b9ec-4a25-8c14-6d90abbc5568\",\"name\":\"Post to Instagram\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,120],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.instagram_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"instagram\\\"\\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"instagram\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"be0a1831-c0e3-4753-b114-2cd7cc66fae2\",\"name\":\"Post to YouTube\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,320],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.youtube_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"youtube\\\",\\n      \\\"title\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.Title }}\\\",\\n      \\\"privacyStatus\\\": \\\"unlisted\\\",\\n      \\\"shouldNotifySubscribers\\\": \\\"false\\\"\\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"youtube\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"62087008-dd5a-49f4-a764-a10b1c82e4e0\",\"name\":\"Post to TikTok\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,520],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.tiktok_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"tiktok\\\",\\n      \\\"isYourBrand\\\": \\\"false\\\", \\n      \\\"disabledDuet\\\": \\\"false\\\",\\n      \\\"privacyLevel\\\": \\\"PUBLIC_TO_EVERYONE\\\",\\n      \\\"isAiGenerated\\\": \\\"true\\\",\\n      \\\"disabledStitch\\\": \\\"false\\\",\\n      \\\"disabledComments\\\": \\\"false\\\",\\n      \\\"isBrandedContent\\\": \\\"false\\\"\\n      \\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"tiktok\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"976b075d-c98b-45a4-bf76-06a34d5ccbf3\",\"name\":\"Post to Facebook Page\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,720],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.facebook_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"facebook\\\",\\n      \\\"pageId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.facebook_page_id }}\\\"\\n\\n      \\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"facebook\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"c689c5d4-f63c-4fc2-b2d6-e1d2d03a236a\",\"name\":\"Post to Threads\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,920],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.threads_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"threads\\\"\\n      \\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"threads\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"88c8bd03-342e-4844-9489-28a5a93426e0\",\"name\":\"Post to Twitter (X)\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,1120],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.twitter_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"twitter\\\"\\n      \\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"twitter\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"db6fb042-731e-46ce-8f4d-07e2b427739c\",\"name\":\"Post to LinkedIn\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,1320],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.linkedin_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"linkedin\\\"\\n      \\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"linkedin\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"2102531c-624a-49b6-8b99-7a43e5067585\",\"name\":\"Post to Bluesky\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,1520],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.bluesky_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"bluesky\\\"\\n      \\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"bluesky\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"https://pbs.twimg.com/media/GE8MgIiWEAAfsK3.jpg\\\"\\n      ]\\n    }\\n  }\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"a9826150-6e26-4174-af74-1b4dd8016638\",\"name\":\"Post to Pinterest\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2800,1720],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/posts\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"post\\\": {\\n    \\\"accountId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.pinterest_id }}\\\",\\n    \\\"target\\\": {\\n      \\\"targetType\\\": \\\"pinterest\\\",\\n      \\\"boardId\\\": \\\"{{ $('Assign Platform IDs for Blotato').item.json.pinterest_board_id }}\\\"      \\n    },\\n    \\\"content\\\": {\\n      \\\"text\\\": \\\"{{ $('Append Video Data to Google Sheet').item.json.caption }}\\\",\\n      \\\"platform\\\": \\\"pinterest\\\",\\n      \\\"mediaUrls\\\": [\\n        \\\"https://pbs.twimg.com/media/GE8MgIiWEAAfsK3.jpg\\\"\\n      ]\\n    }\\n  }\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"fcd6f25a-f6e9-4952-8be8-37eafbf7d07f\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2320,0],\"parameters\":{\"color\":3,\"width\":880,\"height\":1900,\"content\":\"# 🟥 STEP 5 — Auto-Publish to 9 Social Platforms\\n## The final step automates distribution using Blotato’s API.\\n\"},\"typeVersion\":1},{\"id\":\"eb822c9d-cb51-4df7-98d6-a0941a9833bd\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[0,0],\"parameters\":{\"width\":2260,\"height\":760,\"content\":\"# 🟫 STEP 1 — Create Video Using AI (image or text)\\n## This step handles the full video creation pipeline using AI.\\n### It starts from a Telegram message containing a prompt or image, \\n\"},\"typeVersion\":1},{\"id\":\"1c209fe5-fd5a-45d7-9546-421710eb501d\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[0,840],\"parameters\":{\"width\":1500,\"height\":520,\"content\":\"# 🟫 STEP 2 — Create Music\\n## Here, a short-form voice-over script is generated using GPT-4 based on the topic.\\n### The script is converted to speech, uploaded, and merged with the AI-generated video — resulting in a fully narrated visual asset.\\n\"},\"typeVersion\":1},{\"id\":\"0bf198f2-16f9-4ae9-aef3-919b5755da5a\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[0,1440],\"parameters\":{\"width\":1500,\"height\":460,\"content\":\"# 🟫 STEP 3 — Add Captions to Enhance Engagement\\n## To increase accessibility and boost social engagement, \\n## this step overlays professional-looking subtitles on the video using a styling template.\\n### This results in a final video that includes visuals, voice-over, and captions.\\n\"},\"typeVersion\":1},{\"id\":\"00c67803-c937-491e-bf2a-2d76774de07f\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1580,840],\"parameters\":{\"color\":4,\"width\":680,\"height\":1060,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n# 🟫 STEP 4 — Save Video & Notify via Telegram\\n## This step generates a title and caption for the video, \\n## saves the content metadata to a Google Sheet for future tracking, \\n### And sends both the final video and its description to a Telegram chat for validation or reuse.\\n### The script is converted to speech, uploaded, and merged with the AI-generated video — resulting in a fully narrated visual asset.\\n\"},\"typeVersion\":1},{\"id\":\"5a08a003-68b1-48e5-8851-bb1a77d18a37\",\"name\":\"Trigger Telegram Prompt or Image\",\"type\":\"n8n-nodes-base.telegramTrigger\",\"position\":[80,280],\"webhookId\":\"20261394-b809-4b76-9b7b-36a20af57673\",\"parameters\":{\"updates\":[\"message\"],\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"hcYH7o64erx701LY\",\"name\":\"Telegram account 3\"}},\"typeVersion\":1.1},{\"id\":\"6c4d7dd5-7676-465a-ac02-cf7192bf70ab\",\"name\":\"Split Prompt or Image Input\",\"type\":\"n8n-nodes-base.code\",\"position\":[280,280],\"parameters\":{\"jsCode\":\"const input = $input.first().json.message.text || $input.first().json.message.caption;\\n\\n// Remove optional \\\"generate video\\\" prefix\\nconst cleaned = input.replace(/^generate video[:]?/i, '').trim();\\n\\n// Split by comma\\nconst parts = cleaned.split(',').map(p => p.trim());\\n\\n// Assign values even if missing\\nconst videoPrompt = parts[0] || \\\"\\\";\\nconst captionIdea = parts[1] || \\\"\\\";\\nconst musicStyle = parts[2] || \\\"\\\";\\n\\nreturn [\\n  {\\n    json: {\\n      videoPrompt,\\n      captionIdea,\\n      musicStyle\\n    }\\n  }\\n];\\n\"},\"typeVersion\":2},{\"id\":\"3c203e0c-d133-4c6f-a801-2e5dab690b8a\",\"name\":\"Condition Input Type (Image or Text)\",\"type\":\"n8n-nodes-base.if\",\"position\":[460,280],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"8b4d3f92-c9e0-45e6-8b6a-4fa487e6b32f\",\"operator\":{\"type\":\"string\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $('Trigger Telegram Prompt or Image').item.json.message.text }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"1898fd9c-2164-44d0-8ada-192107565b64\",\"name\":\"Download Image from Telegram\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[760,440],\"webhookId\":\"1d115d8e-62c9-4f43-898e-20892b25fdb9\",\"parameters\":{\"fileId\":\"={{ $('Trigger Telegram Prompt or Image').item.json.message.photo[3].file_id }}\",\"resource\":\"file\"},\"credentials\":{\"telegramApi\":{\"id\":\"hcYH7o64erx701LY\",\"name\":\"Telegram account 3\"}},\"typeVersion\":1.2},{\"id\":\"6f9755e0-db11-4c3e-9d1b-f9c97c832cbd\",\"name\":\"Extract Image File URL\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[960,440],\"parameters\":{\"url\":\"=https://api.telegram.org/file/bot_YOURTOKEN/{{ $('Download Image from Telegram').item.json.result.file_path }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"66abae9c-10ae-4845-9070-cd5f2d208782\",\"name\":\"Upload Image to Cloudinary\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1120,440],\"parameters\":{\"url\":\"https://api.cloudinary.com/v1_1/dc5wapno3/image/upload\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"contentType\":\"multipart-form-data\",\"authentication\":\"genericCredentialType\",\"bodyParameters\":{\"parameters\":[{\"name\":\"file\",\"parameterType\":\"formBinaryData\",\"inputDataFieldName\":\"data\"},{\"name\":\"upload_preset\",\"value\":\"n8n_video\"}]},\"genericAuthType\":\"httpBasicAuth\"},\"credentials\":{\"httpBasicAuth\":{\"id\":\"K1UGehJnDI8N25UA\",\"name\":\"Unnamed credential\"}},\"typeVersion\":4.2},{\"id\":\"26979ac8-6f1d-4a9b-b0b5-42b4d7165ffe\",\"name\":\"Convert Image to Video\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1320,440],\"parameters\":{\"url\":\"https://api.piapi.ai/api/v1/task\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n\\\"model\\\": \\\"kling\\\",\\n\\\"task_type\\\": \\\"video_generation\\\",\\n\\\"input\\\": {\\n\\\"prompt\\\": \\\"{{ $('Split Prompt or Image Input').item.json.videoPrompt }}\\\",\\n\\\"image_url\\\": \\\"{{ $json.secure_url }}\\\",\\n\\\"negative_prompt\\\": \\\"\\\",\\n\\\"cfg_scale\\\": 0.5,\\n\\\"duration\\\": 5,\\n\\\"version\\\": \\\"1.6\\\",\\n\\\"camera_control\\\": {\\n\\\"type\\\": \\\"simple\\\",\\n\\\"config\\\": {\\n\\\"horizontal\\\": 0,\\n\\\"vertical\\\": 0,\\n\\\"pan\\\": 0,\\n\\\"tilt\\\": 0,\\n\\\"roll\\\": 0,\\n\\\"zoom\\\": 0\\n}\\n},\\n\\\"mode\\\": \\\"std\\\"\\n},\\n\\\"config\\\": {\\n\\\"service_mode\\\": \\\"\\\",\\n\\\"webhook_config\\\": {\\n\\\"endpoint\\\": \\\"\\\",\\n\\\"secret\\\": \\\"\\\"\\n}\\n}\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpBasicAuth\":{\"id\":\"K1UGehJnDI8N25UA\",\"name\":\"Unnamed credential\"},\"httpHeaderAuth\":{\"id\":\"aoHHS9dlGs8ViUeX\",\"name\":\"Header Auth account 3\"}},\"typeVersion\":4.2},{\"id\":\"36168808-54e8-4826-a3f5-bd8148da9a55\",\"name\":\"Wait for Image-to-Video Rendering\",\"type\":\"n8n-nodes-base.wait\",\"position\":[1520,440],\"webhookId\":\"adf3489e-21ed-42de-8cc6-70c706cacbbf\",\"parameters\":{\"unit\":\"minutes\",\"amount\":2},\"typeVersion\":1.1},{\"id\":\"dd364492-ffcb-47e4-a24e-fb5b3c5b4ab5\",\"name\":\"Get Image-Based Video URL\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1720,440],\"parameters\":{\"url\":\"=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"json\"}}},\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"aoHHS9dlGs8ViUeX\",\"name\":\"Header Auth account 3\"}},\"typeVersion\":4.2},{\"id\":\"8a6b0c07-8304-403e-842e-ea60b0d5e939\",\"name\":\"Generate Video with blotato\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[760,120],\"parameters\":{\"url\":\"https://backend.blotato.com/v2/videos/creations\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"script\\\": \\\"{{ $json.videoPrompt }}\\\",\\n  \\\"style\\\": \\\"cinematic\\\",\\n  \\\"template\\\": {\\n    \\\"id\\\": \\\"base/pov/wakeup\\\"\\n  }\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"14f39088-402d-477e-afe7-1fa8a3f0edf5\",\"name\":\"Wait for blotato Video Rendering\",\"type\":\"n8n-nodes-base.wait\",\"position\":[1520,120],\"webhookId\":\"00fc9999-cacc-4c9b-b71b-75757c56f31e\",\"parameters\":{\"unit\":\"minutes\",\"amount\":2},\"typeVersion\":1.1},{\"id\":\"540a8cbf-0b41-4102-b2c3-a69480603cb6\",\"name\":\"Get blotato Video URL\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1720,120],\"parameters\":{\"url\":\"=https://backend.blotato.com/v2/videos/creations/{{ $json.item.id }}\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"json\"}}},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"blotato-api-key\"}]}},\"typeVersion\":4.2},{\"id\":\"e549069b-0acb-44dd-ba58-d6fe76b4b782\",\"name\":\"Merge Video Data (Image or Prompt)\",\"type\":\"n8n-nodes-base.set\",\"position\":[2060,440],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"5ca907c0-f556-488d-ad59-714089b2a594\",\"name\":\"url_video\",\"type\":\"string\",\"value\":\"={{ $json.item.mediaUrl }}{{ $json.data.output.video_url }} \"}]}},\"typeVersion\":3.4},{\"id\":\"4482e940-fdee-498a-9b4c-dd44a12f04a9\",\"name\":\"Generate Music with Piapi\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[60,1040],\"parameters\":{\"url\":\"https://api.piapi.ai/api/v1/task\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"model\\\": \\\"Qubico/diffrhythm\\\",\\n  \\\"task_type\\\": \\\"txt2audio-base\\\",\\n  \\\"input\\\": {\\n    \\\"style_prompt\\\": \\\"{{ $('Split Prompt or Image Input').item.json.musicStyle }}\\\",\\n    \\\"lyrics\\\": \\\"\\\",\\n    \\\"style_audio\\\": \\\"\\\"\\n  },\\n  \\\"config\\\": {\\n    \\\"webhook_config\\\": {\\n      \\\"endpoint\\\": \\\"\\\",\\n      \\\"secret\\\": \\\"\\\"\\n    }\\n  }\\n}\\n\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"aoHHS9dlGs8ViUeX\",\"name\":\"Header Auth account 3\"}},\"typeVersion\":4.2},{\"id\":\"e2187d71-aace-4cf4-8ef3-b4b14d255f54\",\"name\":\"Wait for Music Generation\",\"type\":\"n8n-nodes-base.wait\",\"position\":[480,1040],\"webhookId\":\"ecf06ea7-0f87-42f6-939f-688e7eb20da1\",\"parameters\":{\"unit\":\"minutes\",\"amount\":2},\"typeVersion\":1.1},{\"id\":\"8ea22e87-0803-4618-a4cb-08a6b720838e\",\"name\":\"Get Music File URL\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[700,1040],\"parameters\":{\"url\":\"=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"json\"}}},\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"aoHHS9dlGs8ViUeX\",\"name\":\"Header Auth account 3\"}},\"typeVersion\":4.2},{\"id\":\"61b49201-e9d5-44b8-be6c-d0175596d261\",\"name\":\"Generate Script (GPT-4o-mini)\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[920,1040],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\",\"cachedResultName\":\"GPT-4O-MINI\"},\"options\":{},\"messages\":{\"values\":[{\"content\":\"=You are a copywriter for short-form vertical videos.\\nVideo topic:\\n{{ $('Split Prompt or Image Input').first().json.captionIdea }}\\nWrite two short lines of overlay text:\\n\\ntext1: Hook (no period)\\n\\ntext2: Emotional or curiosity payoff (ends with \\\"...\\\")\\n\\nExample:\\ntext1: Why I broke up with ChatGPT\\ntext2: this other AI gets me so much better...\\n\\nRules:\\n\\nMax 50 characters per line\\n\\nOutput only:\\ntext1: ...\\ntext2: ...\\n\\nNo quotes, brackets, emojis, hashtags, or titles\\n\\n\"}]}},\"credentials\":{\"openAiApi\":{\"id\":\"6h3DfVhNPw9I25nO\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.8},{\"id\":\"30394110-bc11-4139-8303-f536e22733d4\",\"name\":\"Split Script\",\"type\":\"n8n-nodes-base.code\",\"position\":[1300,1040],\"parameters\":{\"jsCode\":\"const input = $input.first().json;\\n\\n// Auto-detect AI output path\\nlet aiOutput = \\\"\\\";\\n\\nif (input?.choices?.[0]?.message?.content) {\\n  aiOutput = input.choices[0].message.content;\\n} else if (input?.message?.content) {\\n  aiOutput = input.message.content;\\n} else if (typeof input?.content === \\\"string\\\") {\\n  aiOutput = input.content;\\n} else {\\n  // Optional: expose the input in case of failure for debug\\n  throw new Error(\\\"❌ No valid AI output found. Check the structure of the input.\\\");\\n}\\n\\nconst lines = aiOutput.split('\\\\n').map(l => l.trim());\\nlet text1 = \\\"\\\";\\nlet text2 = \\\"\\\";\\n\\nfor (const line of lines) {\\n  if (line.toLowerCase().startsWith(\\\"text1:\\\")) {\\n    text1 = line.replace(/^text1:\\\\s*/i, '');\\n  } else if (line.toLowerCase().startsWith(\\\"text2:\\\")) {\\n    text2 = line.replace(/^text2:\\\\s*/i, '');\\n  }\\n}\\n\\nreturn [\\n  {\\n    json: {\\n      text1,\\n      text2\\n    }\\n  }\\n];\\n\"},\"typeVersion\":2},{\"id\":\"15d7845c-0e0b-4f06-b48e-5ea8add6501a\",\"name\":\"Merge Video + Music\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[80,1640],\"parameters\":{\"url\":\"https://api.json2video.com/v2/movies\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"id\\\": \\\"qbaasr7s\\\",\\n  \\\"resolution\\\": \\\"instagram-story\\\",\\n  \\\"quality\\\": \\\"high\\\",\\n  \\\"scenes\\\": [\\n    {\\n      \\\"id\\\": \\\"qyjh9lwj\\\",\\n      \\\"comment\\\": \\\"Scene 1\\\",\\n      \\\"elements\\\": []\\n    }\\n  ],\\n  \\\"elements\\\": [\\n    {\\n      \\\"id\\\": \\\"q6dznzcv\\\",\\n      \\\"type\\\": \\\"video\\\",\\n      \\\"src\\\": \\\"{{ $('Merge Video Data (Image or Prompt)').item.json.url_video }}\\\",\\n      \\\"resize\\\": \\\"cover\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"top-text\\\",\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"text\\\": \\\"{{ $json.text1 }}\\\",\\n      \\\"settings\\\": {\\n        \\\"font-family\\\": \\\"Libre Baskerville\\\",\\n        \\\"font-size\\\": \\\"80px\\\",\\n        \\\"color\\\": \\\"#ffffff\\\",\\n        \\\"horizontal-position\\\": \\\"center\\\",\\n        \\\"vertical-position\\\": \\\"top\\\",\\n        \\\"margin-top\\\": \\\"100px\\\",\\n        \\\"word-break\\\": \\\"break-word\\\",\\n        \\\"overflow-wrap\\\": \\\"break-word\\\",\\n        \\\"font-weight\\\": \\\"normal\\\",\\n        \\\"text-shadow\\\": \\\"3px 3px 0 #000, -3px -3px 0 #000, 3px -3px 0 #000, -3px 3px 0 #000, 0px 3px 0 #000, 3px 0px 0 #000, -3px 0px 0 #000, 0px -3px 0 #000\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"bottom-text\\\",\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"text\\\": \\\"{{ $json.text2 }}\\\",\\n      \\\"settings\\\": {\\n        \\\"font-family\\\": \\\"Libre Baskerville\\\",\\n        \\\"font-size\\\": \\\"80px\\\",\\n        \\\"color\\\": \\\"#ffffff\\\",\\n        \\\"horizontal-position\\\": \\\"center\\\",\\n        \\\"vertical-position\\\": \\\"bottom\\\",\\n        \\\"margin-bottom\\\": \\\"250px\\\",\\n        \\\"word-break\\\": \\\"break-word\\\",\\n        \\\"overflow-wrap\\\": \\\"break-word\\\",\\n        \\\"font-weight\\\": \\\"normal\\\",\\n        \\\"text-shadow\\\": \\\"3px 3px 0 #000, -3px -3px 0 #000, 3px -3px 0 #000, -3px 3px 0 #000, 0px 3px 0 #000, 3px 0px 0 #000, -3px 0px 0 #000, 0px -3px 0 #000\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"music-track\\\",\\n      \\\"type\\\": \\\"audio\\\",\\n      \\\"src\\\": \\\"{{ $('Get Music File URL').item.json.data.output.audio_url }}\\\",\\n      \\\"volume\\\": 0.5,\\n      \\\"duration\\\": -2\\n    }\\n  ]\\n}\\n\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpCustomAuth\"},\"credentials\":{\"httpCustomAuth\":{\"id\":\"GELGbE2ThQ80HY5A\",\"name\":\"Custom Auth account\"}},\"typeVersion\":4.2},{\"id\":\"5b014111-3dfc-4190-83cf-b5915a47df1b\",\"name\":\"Wait for Fusion Completion\",\"type\":\"n8n-nodes-base.wait\",\"position\":[260,1640],\"webhookId\":\"8d188124-8aeb-49b0-bdf8-5a9f42e205e5\",\"parameters\":{\"unit\":\"minutes\",\"amount\":1},\"typeVersion\":1.1},{\"id\":\"fdc02ec0-b3ce-49e3-9f20-096c679eacbe\",\"name\":\"Get Final Video URL\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[500,1640],\"parameters\":{\"url\":\"=https://api.json2video.com/v2/movies?id={{ $json.project }}\",\"options\":{},\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpCustomAuth\"},\"credentials\":{\"httpCustomAuth\":{\"id\":\"GELGbE2ThQ80HY5A\",\"name\":\"Custom Auth account\"}},\"typeVersion\":4.2},{\"id\":\"9b865654-337a-4dd5-89d4-4a131f6eed75\",\"name\":\"Generate Social Caption (GPT-4)\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[720,1640],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\",\"cachedResultName\":\"GPT-4O-MINI\"},\"options\":{},\"messages\":{\"values\":[{\"content\":\"=Write a short social media caption from this topic:\\n{{ $('Split Prompt or Image Input').first().json.captionIdea }}\\n\\nMake it actionable, not generic or motivational.\\nAdd 1 problem + 1 specific solution.\\nUse 1 sentence per line, with an empty line between each.\\ndon't asking them to comment.\\nMaximum 150 characters\\n\\n🧠 Caption Guidelines:\\nKeep it short, compelling, and value-driven.\\n\\nAvoid generic motivational fluff — focus on real, actionable insight or highlight a problem/solution pattern.\\n\\n\\nStructure:\\n\\nOne sentence per line.\\n\\nNote: Do not use this character: \\\" in the result.\\nReturn a single short paragraph with no line breaks and no special characters.\\nNote: Do not use this character: \\\" in the result.\"}]}},\"credentials\":{\"openAiApi\":{\"id\":\"6h3DfVhNPw9I25nO\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.8},{\"id\":\"99a4282b-5d68-4f4d-8b1e-c7975221b92f\",\"name\":\"Generate SEO Title (GPT-4)\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[1160,1640],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\",\"cachedResultName\":\"GPT-4O-MINI\"},\"options\":{},\"messages\":{\"values\":[{\"content\":\"=Act as a YouTube Title Expert.\\nBased on the following video description:\\n{{ $('Split Prompt or Image Input').first().json.captionIdea }}\\nGenerate a short, punchy, and curiosity-driven YouTube video title that makes people want to click.\\nMake it feel urgent, valuable, or surprising — and avoid generic or boring phrases.\\nKeep it under 70 characters. Return only the title, no explanations.\\nNote: The title must be free of special characters and the character \\\". Return only a plain text title.\\n- Do not start the title with this character : \\\"\\n- Do not finish the title with this character : \\\"\\n- You Never user this character : \\\" in the title\\n\"}]}},\"credentials\":{\"openAiApi\":{\"id\":\"6h3DfVhNPw9I25nO\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.8},{\"id\":\"3cbe9fb8-1685-4169-9ee1-3ae72f3190e3\",\"name\":\"Append Video Data to Google Sheet\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1640,920],\"parameters\":{\"columns\":{\"value\":{\"url \":\"={{ $('Get Final Video URL').item.json.movie.url }}\",\"Title\":\"={{ $json.message.content }}\",\"caption\":\"={{ $('Generate Social Caption (GPT-4)').item.json.message.content }}\"},\"schema\":[{\"id\":\"url \",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"url \",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"caption\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"caption\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Title\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Title\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"status\",\"type\":\"string\",\"display\":true,\"removed\":true,\"required\":false,\"displayName\":\"status\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"=\"},\"documentId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"=\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"51us92xkOlrvArhV\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"dd947cd3-747f-484f-93ea-990d977ab113\",\"name\":\"Send Final Video to Telegram\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1860,920],\"webhookId\":\"3046e11e-60db-4fcf-9351-22758c833f83\",\"parameters\":{\"text\":\"=Here's your scheduled video:\\n----------------\\nCaption Text: {{ $json.caption }}\\n----------------\\nVideo Link: {{ $json['url '] }}\",\"chatId\":\"={{ $('Trigger Telegram Prompt or Image').first().json.message.chat.id }}\",\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"hcYH7o64erx701LY\",\"name\":\"Telegram account 3\"}},\"typeVersion\":1.2},{\"id\":\"c17efd9a-2428-4c36-acd8-69c47d01b961\",\"name\":\"Send Caption to Telegram\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[2060,920],\"webhookId\":\"1282505d-dcc3-4dbd-9657-fb1362033382\",\"parameters\":{\"file\":\"={{ $('Append Video Data to Google Sheet').item.json['url '] }}\",\"chatId\":\"={{ $json.result.chat.id }}\",\"operation\":\"sendVideo\",\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"hcYH7o64erx701LY\",\"name\":\"Telegram account 3\"}},\"typeVersion\":1.2},{\"id\":\"b3311fa9-c473-4bd1-8de7-0930c4e799cd\",\"name\":\"Assign Platform IDs for Blotato\",\"type\":\"n8n-nodes-base.set\",\"position\":[2360,920],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"{\\n  \\\"instagram_id\\\": \\\"1111\\\",\\n  \\\"youtube_id\\\": \\\"2222\\\",\\n  \\\"threads_id\\\": \\\"3333\\\",\\n  \\\"tiktok_id\\\": \\\"4444\\\",\\n  \\\"facebook_id\\\": \\\"5555\\\",\\n  \\\"facebook_page_id\\\": \\\"6666\\\",\\n  \\\"twitter_id\\\": \\\"7777\\\",\\n  \\\"linkedin_id\\\": \\\"8888\\\",\\n  \\\"pinterest_id\\\": \\\"9999\\\",\\n  \\\"pinterest_board_id\\\": \\\"1010\\\",\\n  \\\"bluesky_id\\\": \\\"11111111\\\"\\n}\\n\"},\"typeVersion\":3.4}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"2e5e291a-63f6-4680-9cf5-a3baa2ee917d\",\"connections\":{\"Split Script\":{\"main\":[[{\"node\":\"Merge Video + Music\",\"type\":\"main\",\"index\":0}]]},\"Get Music File URL\":{\"main\":[[{\"node\":\"Generate Script (GPT-4o-mini)\",\"type\":\"main\",\"index\":0}]]},\"Get Final Video URL\":{\"main\":[[{\"node\":\"Generate Social Caption (GPT-4)\",\"type\":\"main\",\"index\":0}]]},\"Merge Video + Music\":{\"main\":[[{\"node\":\"Wait for Fusion Completion\",\"type\":\"main\",\"index\":0}]]},\"Get blotato Video URL\":{\"main\":[[{\"node\":\"Merge Video Data (Image or Prompt)\",\"type\":\"main\",\"index\":0}]]},\"Convert Image to Video\":{\"main\":[[{\"node\":\"Wait for Image-to-Video Rendering\",\"type\":\"main\",\"index\":0}]]},\"Extract Image File URL\":{\"main\":[[{\"node\":\"Upload Image to Cloudinary\",\"type\":\"main\",\"index\":0}]]},\"Upload Video to Blotato\":{\"main\":[[{\"node\":\"Post to Instagram\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to YouTube\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to TikTok\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to Facebook Page\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to Threads\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to Twitter (X)\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to LinkedIn\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to Bluesky\",\"type\":\"main\",\"index\":0},{\"node\":\"Post to Pinterest\",\"type\":\"main\",\"index\":0}]]},\"Send Caption to Telegram\":{\"main\":[[{\"node\":\"Assign Platform IDs for Blotato\",\"type\":\"main\",\"index\":0}]]},\"Generate Music with Piapi\":{\"main\":[[{\"node\":\"Wait for Music Generation\",\"type\":\"main\",\"index\":0}]]},\"Get Image-Based Video URL\":{\"main\":[[{\"node\":\"Merge Video Data (Image or Prompt)\",\"type\":\"main\",\"index\":0}]]},\"Wait for Music Generation\":{\"main\":[[{\"node\":\"Get Music File URL\",\"type\":\"main\",\"index\":0}]]},\"Generate SEO Title (GPT-4)\":{\"main\":[[{\"node\":\"Append Video Data to Google Sheet\",\"type\":\"main\",\"index\":0}]]},\"Upload Image to Cloudinary\":{\"main\":[[{\"node\":\"Convert Image to Video\",\"type\":\"main\",\"index\":0}]]},\"Wait for Fusion Completion\":{\"main\":[[{\"node\":\"Get Final Video URL\",\"type\":\"main\",\"index\":0}]]},\"Generate Video with blotato\":{\"main\":[[{\"node\":\"Wait for blotato Video Rendering\",\"type\":\"main\",\"index\":0}]]},\"Split Prompt or Image Input\":{\"main\":[[{\"node\":\"Condition Input Type (Image or Text)\",\"type\":\"main\",\"index\":0}]]},\"Download Image from Telegram\":{\"main\":[[{\"node\":\"Extract Image File URL\",\"type\":\"main\",\"index\":0}]]},\"Send Final Video to Telegram\":{\"main\":[[{\"node\":\"Send Caption to Telegram\",\"type\":\"main\",\"index\":0}]]},\"Generate Script (GPT-4o-mini)\":{\"main\":[[{\"node\":\"Split Script\",\"type\":\"main\",\"index\":0}]]},\"Assign Platform IDs for Blotato\":{\"main\":[[{\"node\":\"Upload Video to Blotato\",\"type\":\"main\",\"index\":0}]]},\"Generate Social Caption (GPT-4)\":{\"main\":[[{\"node\":\"Generate SEO Title (GPT-4)\",\"type\":\"main\",\"index\":0}]]},\"Trigger Telegram Prompt or Image\":{\"main\":[[{\"node\":\"Split Prompt or Image Input\",\"type\":\"main\",\"index\":0}]]},\"Wait for blotato Video Rendering\":{\"main\":[[{\"node\":\"Get blotato Video URL\",\"type\":\"main\",\"index\":0}]]},\"Append Video Data to Google Sheet\":{\"main\":[[{\"node\":\"Send Final Video to Telegram\",\"type\":\"main\",\"index\":0}]]},\"Wait for Image-to-Video Rendering\":{\"main\":[[{\"node\":\"Get Image-Based Video URL\",\"type\":\"main\",\"index\":0}]]},\"Merge Video Data (Image or Prompt)\":{\"main\":[[{\"node\":\"Generate Music with Piapi\",\"type\":\"main\",\"index\":0}]]},\"Condition Input Type (Image or Text)\":{\"main\":[[{\"node\":\"Generate Video with blotato\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Download Image from Telegram\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "![Workflow Screenshot](https://www.dr-firas.com/Auto-create-and-publish-AI-social-videos.png)\n\n# Auto-create and publish AI social videos with Telegram, GPT-4 and Blotato\n\n> ⚠️ **Disclaimer:** This workflow uses Community Nodes and must be run on a self-hosted instance of n8n.\n\n### Who is this for?\n\nThis template is perfect for social media managers, content creators, AI enthusiasts, and automation pros who want to generate short-form videos (Reels) from a simple Telegram message, then publish them across multiple platforms—all without video editing or manual uploads.\n\n### What problem is this workflow solving?\n\nCreating content is only half the job. The real bottleneck comes in:\n\n  * Rendering the video,\n  * Adding voice or music,\n  * Writing captions and titles,\n  * Publishing to multiple platforms.\n\n\n\nThis workflow automates all of that using AI. It saves hours every week and guarantees consistent output.\n\n### What this workflow does\n\nThis end-to-end automation handles everything from AI video generation to social publishing:\n\n  1. **Starts with a Telegram message** (text or image prompt)\n  2. **Generates video** using Kling or Blotato, based on the input\n  3. **Creates music** with Piapi and merges it with the video\n  4. **Generates text overlays and captions** with GPT-4\n  5. **Builds a stylized video** using JSON2Video\n  6. **Logs results to Google Sheets**\n  7. **Sends final output back to Telegram**\n  8. **Auto-posts the video** to 9 platforms via Blotato (Instagram, TikTok, YouTube, Facebook, LinkedIn, Threads, Twitter/X, Pinterest, Bluesky)\n\n\n\n### Setup\n\n  1. Connect your **Telegram bot** to the trigger node.\n  2. Add your **OpenAI API key** for all GPT nodes.\n  3. Set up **Kling and Piapi** API access (for video and music generation).\n  4. Connect your **Cloudinary** account to upload images.\n  5. Link a **Google Sheet** with columns: Title, Caption, URL.\n  6. Set your **Blotato API key** and fill in the platform-specific account IDs.\n\n\n\n### How to customize this workflow to your needs\n\n  * **Change prompt formatting** to control GPT responses and video tone.\n  * **Edit text styling** in JSON2Video to match your brand.\n  * **Add a Telegram approval step** before publishing, if needed.\n  * **Disable platforms** you don’t use by deleting their HTTP Request nodes.\n  * **Use a Google Sheet filter** to only process new rows or drafts.\n\n\n\n📄 **Documentation** : [Notion Guide](https://automatisation.notion.site/Auto-create-and-publish-AI-social-videos-with-Telegram-GPT-4-and-Blotato-1dc3d6550fd980019cebd8ca461bd4ba?pvs=4)\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p><img src=\"https://www.dr-firas.com/Auto-create-and-publish-AI-social-videos.png\" alt=\"Workflow Screenshot\"></p>\n<h1>Auto-create and publish AI social videos with Telegram, GPT-4 and Blotato</h1>\n<blockquote>\n<p>⚠️ <strong>Disclaimer:</strong> This workflow uses Community Nodes and must be run on a self-hosted instance of n8n.</p>\n</blockquote>\n<h3>Who is this for?</h3>\n<p>This template is perfect for social media managers, content creators, AI enthusiasts, and automation pros who want to generate short-form videos (Reels) from a simple Telegram message, then publish them across multiple platforms—all without video editing or manual uploads.</p>\n<h3>What problem is this workflow solving?</h3>\n<p>Creating content is only half the job. The real bottleneck comes in:</p>\n<ul>\n<li>Rendering the video,</li>\n<li>Adding voice or music,</li>\n<li>Writing captions and titles,</li>\n<li>Publishing to multiple platforms.</li>\n</ul>\n<p>This workflow automates all of that using AI. It saves hours every week and guarantees consistent output.</p>\n<h3>What this workflow does</h3>\n<p>This end-to-end automation handles everything from AI video generation to social publishing:</p>\n<ol>\n<li><strong>Starts with a Telegram message</strong> (text or image prompt)</li>\n<li><strong>Generates video</strong> using Kling or Blotato, based on the input</li>\n<li><strong>Creates music</strong> with Piapi and merges it with the video</li>\n<li><strong>Generates text overlays and captions</strong> with GPT-4</li>\n<li><strong>Builds a stylized video</strong> using JSON2Video</li>\n<li><strong>Logs results to Google Sheets</strong></li>\n<li><strong>Sends final output back to Telegram</strong></li>\n<li><strong>Auto-posts the video</strong> to 9 platforms via Blotato (Instagram, TikTok, YouTube, Facebook, LinkedIn, Threads, Twitter/X, Pinterest, Bluesky)</li>\n</ol>\n<h3>Setup</h3>\n<ol>\n<li>Connect your <strong>Telegram bot</strong> to the trigger node.</li>\n<li>Add your <strong>OpenAI API key</strong> for all GPT nodes.</li>\n<li>Set up <strong>Kling and Piapi</strong> API access (for video and music generation).</li>\n<li>Connect your <strong>Cloudinary</strong> account to upload images.</li>\n<li>Link a <strong>Google Sheet</strong> with columns: Title, Caption, URL.</li>\n<li>Set your <strong>Blotato API key</strong> and fill in the platform-specific account IDs.</li>\n</ol>\n<h3>How to customize this workflow to your needs</h3>\n<ul>\n<li><strong>Change prompt formatting</strong> to control GPT responses and video tone.</li>\n<li><strong>Edit text styling</strong> in JSON2Video to match your brand.</li>\n<li><strong>Add a Telegram approval step</strong> before publishing, if needed.</li>\n<li><strong>Disable platforms</strong> you don’t use by deleting their HTTP Request nodes.</li>\n<li><strong>Use a Google Sheet filter</strong> to only process new rows or drafts.</li>\n</ul>\n<p>📄 <strong>Documentation</strong>: <a href=\"https://automatisation.notion.site/Auto-create-and-publish-AI-social-videos-with-Telegram-GPT-4-and-Blotato-1dc3d6550fd980019cebd8ca461bd4ba?pvs=4\" rel=\"ugc nofollow\" target=\"_blank\">Notion Guide</a></p>\n</div><!--]-->",
  "readme_zh": "![工作流截图](https://www.dr-firas.com/Auto-create-and-publish-AI-social-videos.png)\n\n# 用Telegram、GPT-4和Blotato自动生成并发布AI社交视频\n\n> ⚠️ **免责声明：** 此工作流使用社区节点，必须在自托管的n8n实例上运行。\n\n### 适用人群\n\n本模板专为社交媒体经理、内容创作者、AI爱好者和自动化专家设计，只需发送一条Telegram消息（文字或图片提示），即可自动生成短视频（Reels）并发布到多个平台，无需视频剪辑或手动上传。\n\n### 解决什么问题？\n\n内容创作只是工作的一半，真正的瓶颈在于：\n  * 视频渲染\n  * 添加配音或音乐\n  * 撰写标题和描述\n  * 多平台发布\n\n该工作流通过AI自动化上述所有环节，每周节省数小时，确保输出质量稳定。\n\n### 工作流功能\n\n这套端到端自动化流程涵盖从AI视频生成到社交发布的全流程：\n  1. **通过Telegram消息触发**（文字或图片提示）\n  2. **调用Kling或Blotato生成视频**\n  3. **用Piapi生成背景音乐**并与视频合成\n  4. **通过GPT-4生成字幕和文案**\n  5. **使用JSON2Video制作风格化视频**\n  6. **将结果记录到Google表格**\n  7. **通过Telegram返回成品**\n  8. **通过Blotato自动发布到9大平台**（Instagram、TikTok、YouTube、Facebook、LinkedIn、Threads、Twitter/X、Pinterest、Bluesky）\n\n### 配置步骤\n\n  1. 将**Telegram机器人**连接到触发节点\n  2. 为所有GPT节点配置**OpenAI API密钥**\n  3. 设置**Kling和Piapi**的API访问权限（用于视频和音乐生成）\n  4. 连接**Cloudinary**账户用于图片上传\n  5. 关联**Google表格**（需包含标题、描述、URL列）\n  6. 配置**Blotato API密钥**并填写各平台账户ID\n\n### 自定义调整建议\n\n  * **修改提示词格式**以控制GPT输出和视频风格\n  * **在JSON2Video中调整文字样式**以匹配品牌调性\n  * **添加Telegram审批环节**（如需人工确认）\n  * **删除HTTP请求节点**来禁用不使用的平台\n  * **通过Google表格筛选器**仅处理新增行或草稿\n\n📄 **文档指南** : [Notion教程](https://automatisation.notion.site/Auto-create-and-publish-AI-social-videos-with-Telegram-GPT-4-and-Blotato-1dc3d6550fd980019cebd8ca461bd4ba?pvs=4)",
  "title_zh": "通过Telegram、GPT-4和Blotato自动创建并发布AI社交视频",
  "publish_date_zh": "上次更新于4天前",
  "workflow_json_zh": "{\"id\": \"hiCTcf6srJl3Xsxh\", \"meta\": {\"instanceId\": \"a2b23892dd6989fda7c1209b381f5850373a7d2b85609624d7c2b7a092671d44\"}, \"name\": \"通过Telegram、GPT-4和Blotato自动创建并发布AI社交视频\", \"tags\": [], \"nodes\": [{\"id\": \"b8a41b63-8c48-4964-befe-b949f3e9b755\", \"name\": \"上传视频至Blotato\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2580, 920], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/media\", \"method\": \"邮政\", \"options\": {}, \"sendBody\": true, \"sendHeaders\": true, \"bodyParameters\": {\"parameters\": [{\"name\": \"url\", \"value\": \"={{ $('Append Video Data to Google Sheet').item.json['url '] }}\"}]}, \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"ac7a8bf1-b9ec-4a25-8c14-6d90abbc5568\", \"name\": \"发布到Instagram\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 120], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"帖子\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.instagram_id }}\\\",\\n    \\\"目标\\\": {\\n      \\\"目标类型\\\": \\\"instagram\\\"\\n    },\\n    \\\"内容\\\": {\\n      \\\"文本\\\": \\\"{{ $('将视频数据追加到谷歌表格').条目.json.标题 }}\\\",\\n      \\\"平台\\\": \\\"instagram\\\",\\n      \\\"媒体链接\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，采用完全独立于语言的文本格式来存储和表示数据。JSON常用于Web应用程序中，作为服务器与客户端之间传输数据的格式。\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"be0a1831-c0e3-4753-b114-2cd7cc66fae2\", \"name\": \"发布到YouTube\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 320], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"发布\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.youtube_id }}\\\",\\n    \\\"目标\\\": {\\n      \\\"目标类型\\\": \\\"youtube\\\",\\n      \\\"标题\\\": \\\"{{ $('将视频数据追加到Google表格').条目.json.标题 }}\\\",\\n      \\\"隐私状态\\\": \\\"未列出\\\",\\n      \\\"应通知订阅者\\\": \\\"否\\\"\\n    },\\n    \\\"内容\\\": {\\n      \\\"文本\\\": \\\"{{ $('将视频数据追加到Google表格').条目.json.字幕 }}\\\",\\n      \\\"平台\\\": \\\"youtube\\\",\\n      \\\"媒体链接\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"62087008-dd5a-49f4-a764-a10b1c82e4e0\", \"name\": \"发布到TikTok\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 520], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"POST\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"帖子\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.tiktok_id }}\\\",\\n    \\\"目标设置\\\": {\\n      \\\"目标平台类型\\\": \\\"tiktok\\\",\\n      \\\"是否自有品牌\\\": \\\"false\\\",\\n      \\\"禁用合拍功能\\\": \\\"false\\\",\\n      \\\"隐私级别\\\": \\\"公开所有人可见\\\",\\n      \\\"是否为AI生成内容\\\": \\\"true\\\",\\n      \\\"禁用剪辑功能\\\": \\\"false\\\",\\n      \\\"禁用评论功能\\\": \\\"false\\\",\\n      \\\"是否为品牌合作内容\\\": \\\"false\\\"\\n    },\\n    \\\"内容\\\": {\\n      \\\"文案\\\": \\\"{{ $('将视频数据追加到谷歌表格').条目.json.caption }}\\\",\\n      \\\"发布平台\\\": \\\"tiktok\\\",\\n      \\\"媒体文件链接\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"976b075d-c98b-45a4-bf76-06a34d5ccbf3\", \"name\": \"发布到Facebook页面\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 720], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"帖子\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.facebook_id }}\\\",\\n    \\\"目标\\\": {\\n      \\\"目标类型\\\": \\\"facebook\\\",\\n      \\\"页面ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.facebook_page_id }}\\\"\\n    },\\n    \\\"内容\\\": {\\n      \\\"文本\\\": \\\"{{ $('将视频数据追加到谷歌表格').条目.json.caption }}\\\",\\n      \\\"平台\\\": \\\"facebook\\\",\\n      \\\"媒体链接\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"c689c5d4-f63c-4fc2-b2d6-e1d2d03a236a\", \"name\": \"发布到Threads\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 920], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"帖子\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.threads_id }}\\\",\\n    \\\"目标\\\": {\\n      \\\"目标类型\\\": \\\"threads\\\"\\n    },\\n    \\\"内容\\\": {\\n      \\\"文本\\\": \\\"{{ $('将视频数据追加到Google表格').条目.json.caption }}\\\",\\n      \\\"平台\\\": \\\"threads\\\",\\n      \\\"媒体链接\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，采用完全独立于语言的文本格式来存储和表示数据。JSON常用于Web应用程序中服务器与客户端之间的数据传输。\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"88c8bd03-342e-4844-9489-28a5a93426e0\", \"name\": \"发布到推特（X）\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 1120], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"帖子\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.twitter_id }}\\\",\\n    \\\"目标\\\": {\\n      \\\"目标类型\\\": \\\"推特\\\"\\n    },\\n    \\\"内容\\\": {\\n      \\\"文本\\\": \\\"{{ $('将视频数据追加到谷歌表格').条目.json.标题 }}\\\",\\n      \\\"平台\\\": \\\"推特\\\",\\n      \\\"媒体链接\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"db6fb042-731e-46ce-8f4d-07e2b427739c\", \"name\": \"发布到领英\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 1320], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"帖子\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.linkedin_id }}\\\",\\n    \\\"目标\\\": {\\n      \\\"目标类型\\\": \\\"领英\\\"\\n    },\\n    \\\"内容\\\": {\\n      \\\"文本\\\": \\\"{{ $('将视频数据追加到谷歌表格').条目.json.标题 }}\\\",\\n      \\\"平台\\\": \\\"领英\\\",\\n      \\\"媒体链接\\\": [\\n        \\\"{{ $json.url }}\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"2102531c-624a-49b6-8b99-7a43e5067585\", \"name\": \"发布到Bluesky\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 1520], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"帖子\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.蓝空ID }}\\\",\\n    \\\"目标\\\": {\\n      \\\"目标类型\\\": \\\"蓝空\\\"\\n    },\\n    \\\"内容\\\": {\\n      \\\"文本\\\": \\\"{{ $('将视频数据追加到谷歌表格').条目.json.标题 }}\\\",\\n      \\\"平台\\\": \\\"蓝空\\\",\\n      \\\"媒体链接\\\": [\\n        \\\"https://pbs.twimg.com/media/GE8MgIiWEAAfsK3.jpg\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，采用完全独立于语言的文本格式来存储和表示数据。JSON常用于Web应用程序中服务器与客户端之间的数据传输，因其简洁和清晰的层次结构而被广泛采用。\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"a9826150-6e26-4174-af74-1b4dd8016638\", \"name\": \"发布到Pinterest\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2800, 1720], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/posts\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"帖子\\\": {\\n    \\\"账户ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.pinterest_id }}\\\",\\n    \\\"发布目标\\\": {\\n      \\\"目标类型\\\": \\\"pinterest\\\",\\n      \\\"画板ID\\\": \\\"{{ $('为Blotato分配平台ID').条目.json.pinterest_board_id }}\\\"      \\n    },\\n    \\\"内容\\\": {\\n      \\\"文案\\\": \\\"{{ $('将视频数据追加到谷歌表格').条目.json.caption }}\\\",\\n      \\\"平台\\\": \\\"pinterest\\\",\\n      \\\"媒体链接\\\": [\\n        \\\"https://pbs.twimg.com/media/GE8MgIiWEAAfsK3.jpg\\\"\\n      ]\\n    }\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，采用完全独立于语言的文本格式来存储和表示数据。JSON常用于Web应用程序中服务器与客户端之间的数据传输，因其简洁和高效的特性而被广泛采用。\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"fcd6f25a-f6e9-4952-8be8-37eafbf7d07f\", \"name\": \"便利贴3\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [2320, 0], \"parameters\": {\"color\": 3, \"width\": 880, \"height\": 1900, \"content\": \"# 🟥 第五步 — 自动发布至9大社交平台  \\n## 最后一步通过Blotato的API实现自动化分发。\"}, \"typeVersion\": 1}, {\"id\": \"eb822c9d-cb51-4df7-98d6-a0941a9833bd\", \"name\": \"便利贴\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [0, 0], \"parameters\": {\"width\": 2260, \"height\": 760, \"content\": \"# 🟫 第一步 — 使用AI生成视频（图片或文字）\\n## 本步骤通过AI实现完整视频创作流程\\n### 从接收包含提示词或图片的Telegram消息开始\"}, \"typeVersion\": 1}, {\"id\": \"1c209fe5-fd5a-45d7-9546-421710eb501d\", \"name\": \"便利贴1\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [0, 840], \"parameters\": {\"width\": 1500, \"height\": 520, \"content\": \"# 🟫 第二步 — 创作音乐  \\n## 在此环节，基于选定主题，由GPT-4生成短视频配音脚本  \\n### 脚本经语音合成后上传，与AI生成的视频合并——最终形成带完整旁白的可视化成品\"}, \"typeVersion\": 1}, {\"id\": \"0bf198f2-16f9-4ae9-aef3-919b5755da5a\", \"name\": \"便利贴2\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [0, 1440], \"parameters\": {\"width\": 1500, \"height\": 460, \"content\": \"# 🟫 第三步 — 添加字幕提升互动效果  \\n## 通过叠加专业风格的字幕模板  \\n## 既增强视频可访问性，又提高社交参与度  \\n### 最终成品将包含画面、旁白与字幕三重元素\"}, \"typeVersion\": 1}, {\"id\": \"00c67803-c937-491e-bf2a-2d76774de07f\", \"name\": \"便利贴4\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [1580, 840], \"parameters\": {\"color\": 4, \"width\": 680, \"height\": 1060, \"content\": \"# 🟫 步骤四 — 保存视频并通过Telegram通知\\n## 本步骤将为视频生成标题与描述文案，\\n## 将内容元数据保存至Google表格以便后续追踪，\\n### 同时将成品视频及其描述发送至Telegram聊天室进行审核或复用。\\n### 脚本内容经语音合成后，与AI生成视频合并上传——最终产出带完整旁白的可视化素材。\"}, \"typeVersion\": 1}, {\"id\": \"5a08a003-68b1-48e5-8851-bb1a77d18a37\", \"name\": \"触发Telegram提示或图片\", \"type\": \"n8n-nodes-base.telegramTrigger\", \"position\": [80, 280], \"webhookId\": \"20261394-b809-4b76-9b7b-36a20af57673\", \"parameters\": {\"updates\": [\"message\"], \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"hcYH7o64erx701LY\", \"name\": \"Telegram account 3\"}}, \"typeVersion\": 1.1}, {\"id\": \"6c4d7dd5-7676-465a-ac02-cf7192bf70ab\", \"name\": \"拆分提示或图像输入\", \"type\": \"n8n-nodes-base.code\", \"position\": [280, 280], \"parameters\": {\"jsCode\": \"const input = $input.first().json.message.text || $input.first().json.message.caption;\\n\\n// Remove optional \\\"generate video\\\" prefix\\nconst cleaned = input.replace(/^generate video[:]?/i, '').trim();\\n\\n// Split by comma\\nconst parts = cleaned.split(',').map(p => p.trim());\\n\\n// Assign values even if missing\\nconst videoPrompt = parts[0] || \\\"\\\";\\nconst captionIdea = parts[1] || \\\"\\\";\\nconst musicStyle = parts[2] || \\\"\\\";\\n\\nreturn [\\n  {\\n    json: {\\n      videoPrompt,\\n      captionIdea,\\n      musicStyle\\n    }\\n  }\\n];\\n\"}, \"typeVersion\": 2}, {\"id\": \"3c203e0c-d133-4c6f-a801-2e5dab690b8a\", \"name\": \"条件输入类型（图像或文本）\", \"type\": \"n8n-nodes-base.if\", \"position\": [460, 280], \"parameters\": {\"options\": {}, \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"8b4d3f92-c9e0-45e6-8b6a-4fa487e6b32f\", \"operator\": {\"type\": \"string\", \"operation\": \"notEmpty\", \"singleValue\": true}, \"leftValue\": \"={{ $('Trigger Telegram Prompt or Image').item.json.message.text }}\", \"rightValue\": \"\"}]}}, \"typeVersion\": 2.2}, {\"id\": \"1898fd9c-2164-44d0-8ada-192107565b64\", \"name\": \"从Telegram下载图片\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [760, 440], \"webhookId\": \"1d115d8e-62c9-4f43-898e-20892b25fdb9\", \"parameters\": {\"fileId\": \"={{ $('触发Telegram提示或图片').item.json.message.photo[3].file_id }}\", \"resource\": \"文件\"}, \"credentials\": {\"telegramApi\": {\"id\": \"hcYH7o64erx701LY\", \"name\": \"Telegram account 3\"}}, \"typeVersion\": 1.2}, {\"id\": \"6f9755e0-db11-4c3e-9d1b-f9c97c832cbd\", \"name\": \"提取图片文件URL\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [960, 440], \"parameters\": {\"url\": \"https://api.telegram.org/file/bot_YOURTOKEN/{{ $('从Telegram下载图片').item.json.result.file_path }}\", \"options\": {}}, \"typeVersion\": 4.2}, {\"id\": \"66abae9c-10ae-4845-9070-cd5f2d208782\", \"name\": \"上传图片至Cloudinary\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [1120, 440], \"parameters\": {\"url\": \"https://api.cloudinary.com/v1_1/dc5wapno3/image/upload\", \"method\": \"邮政\", \"options\": {}, \"sendBody\": true, \"contentType\": \"多部分表单数据\", \"authentication\": \"通用凭证类型\", \"bodyParameters\": {\"parameters\": [{\"name\": \"file\", \"parameterType\": \"formBinaryData\", \"inputDataFieldName\": \"data\"}, {\"name\": \"upload_preset\", \"value\": \"n8n_video\"}]}, \"genericAuthType\": \"HTTP基本认证\"}, \"credentials\": {\"httpBasicAuth\": {\"id\": \"K1UGehJnDI8N25UA\", \"name\": \"Unnamed credential\"}}, \"typeVersion\": 4.2}, {\"id\": \"26979ac8-6f1d-4a9b-b0b5-42b4d7165ffe\", \"name\": \"将图片转换为视频\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [1320, 440], \"parameters\": {\"url\": \"https://api.piapi.ai/api/v1/任务\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n\\\"模型\\\": \\\"kling\\\",\\n\\\"任务类型\\\": \\\"视频生成\\\",\\n\\\"输入\\\": {\\n\\\"提示词\\\": \\\"{{ $('分段提示或图像输入').条目.json.视频提示 }}\\\",\\n\\\"图片链接\\\": \\\"{{ $json.安全链接 }}\\\",\\n\\\"负面提示词\\\": \\\"\\\",\\n\\\"配置比例\\\": 0.5,\\n\\\"时长\\\": 5,\\n\\\"版本\\\": \\\"1.6\\\",\\n\\\"摄像机控制\\\": {\\n\\\"类型\\\": \\\"简易模式\\\",\\n\\\"配置\\\": {\\n\\\"水平移动\\\": 0,\\n\\\"垂直移动\\\": 0,\\n\\\"平移\\\": 0,\\n\\\"倾斜\\\": 0,\\n\\\"旋转\\\": 0,\\n\\\"缩放\\\": 0\\n}\\n},\\n\\\"模式\\\": \\\"标准\\\"\\n},\\n\\\"配置\\\": {\\n\\\"服务模式\\\": \\\"\\\",\\n\\\"网络钩子配置\\\": {\\n\\\"终端节点\\\": \\\"\\\",\\n\\\"密钥\\\": \\\"\\\"\\n}\\n}\\n}\", \"sendBody\": true, \"specifyBody\": \"JSON\", \"authentication\": \"通用凭证类型\", \"genericAuthType\": \"HTTP头部认证\"}, \"credentials\": {\"httpBasicAuth\": {\"id\": \"K1UGehJnDI8N25UA\", \"name\": \"Unnamed credential\"}, \"httpHeaderAuth\": {\"id\": \"aoHHS9dlGs8ViUeX\", \"name\": \"Header Auth account 3\"}}, \"typeVersion\": 4.2}, {\"id\": \"36168808-54e8-4826-a3f5-bd8148da9a55\", \"name\": \"等待图像到视频渲染\", \"type\": \"n8n-nodes-base.wait\", \"position\": [1520, 440], \"webhookId\": \"adf3489e-21ed-42de-8cc6-70c706cacbbf\", \"parameters\": {\"unit\": \"分钟\", \"amount\": 2}, \"typeVersion\": 1.1}, {\"id\": \"dd364492-ffcb-47e4-a24e-fb5b3c5b4ab5\", \"name\": \"获取基于图像的视频URL\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [1720, 440], \"parameters\": {\"url\": \"https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}\", \"options\": {\"response\": {\"response\": {\"responseFormat\": \"json\"}}}, \"authentication\": \"通用凭证类型\", \"genericAuthType\": \"HTTP头部认证\"}, \"credentials\": {\"httpHeaderAuth\": {\"id\": \"aoHHS9dlGs8ViUeX\", \"name\": \"Header Auth account 3\"}}, \"typeVersion\": 4.2}, {\"id\": \"8a6b0c07-8304-403e-842e-ea60b0d5e939\", \"name\": \"用blotato生成视频\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [760, 120], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/视频/创作\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"脚本\\\": \\\"{{ $json.videoPrompt }}\\\",\\n  \\\"风格\\\": \\\"电影感\\\",\\n  \\\"模板\\\": {\\n    \\\"id\\\": \\\"基础/第一人称视角/醒来\\\"\\n  }\\n}\", \"sendBody\": true, \"sendHeaders\": true, \"specifyBody\": \"JSON（JavaScript Object Notation）是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成。它基于JavaScript的一个子集，采用完全独立于语言的文本格式来存储和表示数据。JSON常用于Web应用程序中服务器与客户端之间的数据传输，因其简洁和高效的特性而被广泛支持和使用。\", \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"14f39088-402d-477e-afe7-1fa8a3f0edf5\", \"name\": \"等待Blotato视频渲染完成\", \"type\": \"n8n-nodes-base.wait\", \"position\": [1520, 120], \"webhookId\": \"00fc9999-cacc-4c9b-b71b-75757c56f31e\", \"parameters\": {\"unit\": \"分钟\", \"amount\": 2}, \"typeVersion\": 1.1}, {\"id\": \"540a8cbf-0b41-4102-b2c3-a69480603cb6\", \"name\": \"获取blotato视频链接\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [1720, 120], \"parameters\": {\"url\": \"https://backend.blotato.com/v2/videos/creations/{{ $json.item.id }}\", \"options\": {\"response\": {\"response\": {\"responseFormat\": \"json\"}}}, \"sendHeaders\": true, \"headerParameters\": {\"parameters\": [{\"name\": \"blotato-api-key\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"e549069b-0acb-44dd-ba58-d6fe76b4b782\", \"name\": \"合并视频数据（图像或提示）\", \"type\": \"n8n-nodes-base.set\", \"position\": [2060, 440], \"parameters\": {\"options\": {}, \"assignments\": {\"assignments\": [{\"id\": \"5ca907c0-f556-488d-ad59-714089b2a594\", \"name\": \"url_video\", \"type\": \"string\", \"value\": \"={{ $json.item.mediaUrl }}{{ $json.data.output.video_url }} \"}]}}, \"typeVersion\": 3.4}, {\"id\": \"4482e940-fdee-498a-9b4c-dd44a12f04a9\", \"name\": \"用Piapi生成音乐\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [60, 1040], \"parameters\": {\"url\": \"https://api.piapi.ai/api/v1/任务\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"模型\\\": \\\"Qubico/diffrhythm\\\",\\n  \\\"任务类型\\\": \\\"文本转音频基础版\\\",\\n  \\\"输入参数\\\": {\\n    \\\"风格提示\\\": \\\"{{ $('分段提示或图像输入').条目.json.音乐风格 }}\\\",\\n    \\\"歌词\\\": \\\"\\\",\\n    \\\"风格音频\\\": \\\"\\\"\\n  },\\n  \\\"配置\\\": {\\n    \\\"网络钩子配置\\\": {\\n      \\\"端点\\\": \\\"\\\",\\n      \\\"密钥\\\": \\\"\\\"\\n    }\\n  }\\n}\", \"sendBody\": true, \"specifyBody\": \"JSON\", \"authentication\": \"通用凭证类型\", \"genericAuthType\": \"HTTP头部认证\"}, \"credentials\": {\"httpHeaderAuth\": {\"id\": \"aoHHS9dlGs8ViUeX\", \"name\": \"Header Auth account 3\"}}, \"typeVersion\": 4.2}, {\"id\": \"e2187d71-aace-4cf4-8ef3-b4b14d255f54\", \"name\": \"等待音乐生成\", \"type\": \"n8n-nodes-base.wait\", \"position\": [480, 1040], \"webhookId\": \"ecf06ea7-0f87-42f6-939f-688e7eb20da1\", \"parameters\": {\"unit\": \"分钟\", \"amount\": 2}, \"typeVersion\": 1.1}, {\"id\": \"8ea22e87-0803-4618-a4cb-08a6b720838e\", \"name\": \"获取音乐文件链接\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [700, 1040], \"parameters\": {\"url\": \"https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}\", \"options\": {\"response\": {\"response\": {\"responseFormat\": \"json\"}}}, \"authentication\": \"通用凭证类型\", \"genericAuthType\": \"HTTP头部认证\"}, \"credentials\": {\"httpHeaderAuth\": {\"id\": \"aoHHS9dlGs8ViUeX\", \"name\": \"Header Auth account 3\"}}, \"typeVersion\": 4.2}, {\"id\": \"61b49201-e9d5-44b8-be6c-d0175596d261\", \"name\": \"生成脚本（GPT-4o迷你版）\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [920, 1040], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4o-mini\", \"cachedResultName\": \"GPT-4O-MINI\"}, \"options\": {}, \"messages\": {\"values\": [{\"content\": \"=You are a copywriter for short-form vertical videos.\\nVideo topic:\\n{{ $('Split Prompt or Image Input').first().json.captionIdea }}\\nWrite two short lines of overlay text:\\n\\ntext1: Hook (no period)\\n\\ntext2: Emotional or curiosity payoff (ends with \\\"...\\\")\\n\\nExample:\\ntext1: Why I broke up with ChatGPT\\ntext2: this other AI gets me so much better...\\n\\nRules:\\n\\nMax 50 characters per line\\n\\nOutput only:\\ntext1: ...\\ntext2: ...\\n\\nNo quotes, brackets, emojis, hashtags, or titles\\n\\n\"}]}}, \"credentials\": {\"openAiApi\": {\"id\": \"6h3DfVhNPw9I25nO\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1.8}, {\"id\": \"30394110-bc11-4139-8303-f536e22733d4\", \"name\": \"拆分脚本\", \"type\": \"n8n-nodes-base.code\", \"position\": [1300, 1040], \"parameters\": {\"jsCode\": \"const input = $input.first().json;\\n\\n// Auto-detect AI output path\\nlet aiOutput = \\\"\\\";\\n\\nif (input?.choices?.[0]?.message?.content) {\\n  aiOutput = input.choices[0].message.content;\\n} else if (input?.message?.content) {\\n  aiOutput = input.message.content;\\n} else if (typeof input?.content === \\\"string\\\") {\\n  aiOutput = input.content;\\n} else {\\n  // Optional: expose the input in case of failure for debug\\n  throw new Error(\\\"❌ No valid AI output found. Check the structure of the input.\\\");\\n}\\n\\nconst lines = aiOutput.split('\\\\n').map(l => l.trim());\\nlet text1 = \\\"\\\";\\nlet text2 = \\\"\\\";\\n\\nfor (const line of lines) {\\n  if (line.toLowerCase().startsWith(\\\"text1:\\\")) {\\n    text1 = line.replace(/^text1:\\\\s*/i, '');\\n  } else if (line.toLowerCase().startsWith(\\\"text2:\\\")) {\\n    text2 = line.replace(/^text2:\\\\s*/i, '');\\n  }\\n}\\n\\nreturn [\\n  {\\n    json: {\\n      text1,\\n      text2\\n    }\\n  }\\n];\\n\"}, \"typeVersion\": 2}, {\"id\": \"15d7845c-0e0b-4f06-b48e-5ea8add6501a\", \"name\": \"合并视频与音乐\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [80, 1640], \"parameters\": {\"url\": \"https://api.json2video.com/v2/movies\", \"method\": \"邮政\", \"options\": {}, \"jsonBody\": \"{\\n  \\\"id\\\": \\\"qbaasr7s\\\",\\n  \\\"resolution\\\": \\\"instagram-story\\\",\\n  \\\"quality\\\": \\\"high\\\",\\n  \\\"scenes\\\": [\\n    {\\n      \\\"id\\\": \\\"qyjh9lwj\\\",\\n      \\\"comment\\\": \\\"场景1\\\",\\n      \\\"elements\\\": []\\n    }\\n  ],\\n  \\\"elements\\\": [\\n    {\\n      \\\"id\\\": \\\"q6dznzcv\\\",\\n      \\\"type\\\": \\\"video\\\",\\n      \\\"src\\\": \\\"{{ $('合并视频数据（图片或提示）').item.json.url_video }}\\\",\\n      \\\"resize\\\": \\\"cover\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"top-text\\\",\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"text\\\": \\\"{{ $json.text1 }}\\\",\\n      \\\"settings\\\": {\\n        \\\"font-family\\\": \\\"Libre Baskerville\\\",\\n        \\\"font-size\\\": \\\"80px\\\",\\n        \\\"color\\\": \\\"#ffffff\\\",\\n        \\\"horizontal-position\\\": \\\"center\\\",\\n        \\\"vertical-position\\\": \\\"top\\\",\\n        \\\"margin-top\\\": \\\"100px\\\",\\n        \\\"word-break\\\": \\\"break-word\\\",\\n        \\\"overflow-wrap\\\": \\\"break-word\\\",\\n        \\\"font-weight\\\": \\\"normal\\\",\\n        \\\"text-shadow\\\": \\\"3px 3px 0 #000, -3px -3px 0 #000, 3px -3px 0 #000, -3px 3px 0 #000, 0px 3px 0 #000, 3px 0px 0 #000, -3px 0px 0 #000, 0px -3px 0 #000\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"bottom-text\\\",\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"text\\\": \\\"{{ $json.text2 }}\\\",\\n      \\\"settings\\\": {\\n        \\\"font-family\\\": \\\"Libre Baskerville\\\",\\n        \\\"font-size\\\": \\\"80px\\\",\\n        \\\"color\\\": \\\"#ffffff\\\",\\n        \\\"horizontal-position\\\": \\\"center\\\",\\n        \\\"vertical-position\\\": \\\"bottom\\\",\\n        \\\"margin-bottom\\\": \\\"250px\\\",\\n        \\\"word-break\\\": \\\"break-word\\\",\\n        \\\"overflow-wrap\\\": \\\"break-word\\\",\\n        \\\"font-weight\\\": \\\"normal\\\",\\n        \\\"text-shadow\\\": \\\"3px 3px 0 #000, -3px -3px 0 #000, 3px -3px 0 #000, -3px 3px 0 #000, 0px 3px 0 #000, 3px 0px 0 #000, -3px 0px 0 #000, 0px -3px 0 #000\\\"\\n      }\\n    },\\n    {\\n      \\\"id\\\": \\\"music-track\\\",\\n      \\\"type\\\": \\\"audio\\\",\\n      \\\"src\\\": \\\"{{ $('获取音乐文件URL').item.json.data.output.audio_url }}\\\",\\n      \\\"volume\\\": 0.5,\\n      \\\"duration\\\": -2\\n    }\\n  ]\\n}\", \"sendBody\": true, \"specifyBody\": \"JSON\", \"authentication\": \"通用凭证类型\", \"genericAuthType\": \"自定义HTTP认证\"}, \"credentials\": {\"httpCustomAuth\": {\"id\": \"GELGbE2ThQ80HY5A\", \"name\": \"Custom Auth account\"}}, \"typeVersion\": 4.2}, {\"id\": \"5b014111-3dfc-4190-83cf-b5915a47df1b\", \"name\": \"等待融合完成\", \"type\": \"n8n-nodes-base.wait\", \"position\": [260, 1640], \"webhookId\": \"8d188124-8aeb-49b0-bdf8-5a9f42e205e5\", \"parameters\": {\"unit\": \"分钟\", \"amount\": 1}, \"typeVersion\": 1.1}, {\"id\": \"fdc02ec0-b3ce-49e3-9f20-096c679eacbe\", \"name\": \"获取最终视频链接\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [500, 1640], \"parameters\": {\"url\": \"https://api.json2video.com/v2/movies?id={{ $json.project }}\", \"options\": {}, \"authentication\": \"通用凭证类型\", \"genericAuthType\": \"http自定义认证\"}, \"credentials\": {\"httpCustomAuth\": {\"id\": \"GELGbE2ThQ80HY5A\", \"name\": \"Custom Auth account\"}}, \"typeVersion\": 4.2}, {\"id\": \"9b865654-337a-4dd5-89d4-4a131f6eed75\", \"name\": \"生成社交媒体标题（GPT-4）\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [720, 1640], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4o-mini\", \"cachedResultName\": \"GPT-4O-MINI\"}, \"options\": {}, \"messages\": {\"values\": [{\"content\": \"=Write a short social media caption from this topic:\\n{{ $('Split Prompt or Image Input').first().json.captionIdea }}\\n\\nMake it actionable, not generic or motivational.\\nAdd 1 problem + 1 specific solution.\\nUse 1 sentence per line, with an empty line between each.\\ndon't asking them to comment.\\nMaximum 150 characters\\n\\n🧠 Caption Guidelines:\\nKeep it short, compelling, and value-driven.\\n\\nAvoid generic motivational fluff — focus on real, actionable insight or highlight a problem/solution pattern.\\n\\n\\nStructure:\\n\\nOne sentence per line.\\n\\nNote: Do not use this character: \\\" in the result.\\nReturn a single short paragraph with no line breaks and no special characters.\\nNote: Do not use this character: \\\" in the result.\"}]}}, \"credentials\": {\"openAiApi\": {\"id\": \"6h3DfVhNPw9I25nO\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1.8}, {\"id\": \"99a4282b-5d68-4f4d-8b1e-c7975221b92f\", \"name\": \"生成SEO标题（GPT-4版）\", \"type\": \"@n8n/n8n-nodes-langchain.openAi\", \"position\": [1160, 1640], \"parameters\": {\"modelId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4o-mini\", \"cachedResultName\": \"GPT-4O-MINI\"}, \"options\": {}, \"messages\": {\"values\": [{\"content\": \"=Act as a YouTube Title Expert.\\nBased on the following video description:\\n{{ $('Split Prompt or Image Input').first().json.captionIdea }}\\nGenerate a short, punchy, and curiosity-driven YouTube video title that makes people want to click.\\nMake it feel urgent, valuable, or surprising — and avoid generic or boring phrases.\\nKeep it under 70 characters. Return only the title, no explanations.\\nNote: The title must be free of special characters and the character \\\". Return only a plain text title.\\n- Do not start the title with this character : \\\"\\n- Do not finish the title with this character : \\\"\\n- You Never user this character : \\\" in the title\\n\"}]}}, \"credentials\": {\"openAiApi\": {\"id\": \"6h3DfVhNPw9I25nO\", \"name\": \"OpenAi account\"}}, \"typeVersion\": 1.8}, {\"id\": \"3cbe9fb8-1685-4169-9ee1-3ae72f3190e3\", \"name\": \"将视频数据附加到Google表格\", \"type\": \"n8n-nodes-base.googleSheets\", \"position\": [1640, 920], \"parameters\": {\"columns\": {\"value\": {\"url \": \"={{ $('Get Final Video URL').item.json.movie.url }}\", \"Title\": \"={{ $json.message.content }}\", \"caption\": \"={{ $('Generate Social Caption (GPT-4)').item.json.message.content }}\"}, \"schema\": [{\"id\": \"url \", \"type\": \"string\", \"display\": true, \"required\": false, \"displayName\": \"url \", \"defaultMatch\": false, \"canBeUsedToMatch\": true}, {\"id\": \"caption\", \"type\": \"string\", \"display\": true, \"required\": false, \"displayName\": \"caption\", \"defaultMatch\": false, \"canBeUsedToMatch\": true}, {\"id\": \"Title\", \"type\": \"string\", \"display\": true, \"removed\": false, \"required\": false, \"displayName\": \"Title\", \"defaultMatch\": false, \"canBeUsedToMatch\": true}, {\"id\": \"status\", \"type\": \"string\", \"display\": true, \"removed\": true, \"required\": false, \"displayName\": \"status\", \"defaultMatch\": false, \"canBeUsedToMatch\": true}], \"mappingMode\": \"defineBelow\", \"matchingColumns\": [], \"attemptToConvertTypes\": false, \"convertFieldsToString\": false}, \"options\": {}, \"operation\": \"附加\", \"sheetName\": {\"__rl\": true, \"mode\": \"id\", \"value\": \"=\"}, \"documentId\": {\"__rl\": true, \"mode\": \"id\", \"value\": \"=\"}}, \"credentials\": {\"googleSheetsOAuth2Api\": {\"id\": \"51us92xkOlrvArhV\", \"name\": \"Google Sheets account\"}}, \"typeVersion\": 4.5}, {\"id\": \"dd947cd3-747f-484f-93ea-990d977ab113\", \"name\": \"发送最终视频至Telegram\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [1860, 920], \"webhookId\": \"3046e11e-60db-4fcf-9351-22758c833f83\", \"parameters\": {\"text\": \"=这是您预定的视频：\\n----------------\\n字幕文本：{{ $json.caption }}\\n----------------\\n视频链接：{{ $json['url '] }}\", \"chatId\": \"={{ $('触发Telegram提示或图片').first().json.message.chat.id }}\", \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"hcYH7o64erx701LY\", \"name\": \"Telegram account 3\"}}, \"typeVersion\": 1.2}, {\"id\": \"c17efd9a-2428-4c36-acd8-69c47d01b961\", \"name\": \"发送字幕到Telegram\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [2060, 920], \"webhookId\": \"1282505d-dcc3-4dbd-9657-fb1362033382\", \"parameters\": {\"file\": \"={{ $('附加视频数据到谷歌表格').item.json['url '] }}\", \"chatId\": \"={{ $json.result.chat.id }}\", \"operation\": \"发送视频\", \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"hcYH7o64erx701LY\", \"name\": \"Telegram account 3\"}}, \"typeVersion\": 1.2}, {\"id\": \"b3311fa9-c473-4bd1-8de7-0930c4e799cd\", \"name\": \"为Blotato分配平台ID\", \"type\": \"n8n-nodes-base.set\", \"position\": [2360, 920], \"parameters\": {\"mode\": \"raw\", \"options\": {}, \"jsonOutput\": \"{\\n  \\\"instagram_id\\\": \\\"1111\\\",\\n  \\\"youtube_id\\\": \\\"2222\\\",\\n  \\\"threads_id\\\": \\\"3333\\\",\\n  \\\"tiktok_id\\\": \\\"4444\\\",\\n  \\\"facebook_id\\\": \\\"5555\\\",\\n  \\\"facebook_page_id\\\": \\\"6666\\\",\\n  \\\"twitter_id\\\": \\\"7777\\\",\\n  \\\"linkedin_id\\\": \\\"8888\\\",\\n  \\\"pinterest_id\\\": \\\"9999\\\",\\n  \\\"pinterest_board_id\\\": \\\"1010\\\",\\n  \\\"bluesky_id\\\": \\\"11111111\\\"\\n}\"}, \"typeVersion\": 3.4}], \"active\": false, \"pinData\": {}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"2e5e291a-63f6-4680-9cf5-a3baa2ee917d\", \"connections\": {\"Split Script\": {\"main\": [[{\"node\": \"Merge Video + Music\", \"type\": \"main\", \"index\": 0}]]}, \"Get Music File URL\": {\"main\": [[{\"node\": \"Generate Script (GPT-4o-mini)\", \"type\": \"main\", \"index\": 0}]]}, \"Get Final Video URL\": {\"main\": [[{\"node\": \"Generate Social Caption (GPT-4)\", \"type\": \"main\", \"index\": 0}]]}, \"Merge Video + Music\": {\"main\": [[{\"node\": \"Wait for Fusion Completion\", \"type\": \"main\", \"index\": 0}]]}, \"Get blotato Video URL\": {\"main\": [[{\"node\": \"Merge Video Data (Image or Prompt)\", \"type\": \"main\", \"index\": 0}]]}, \"Convert Image to Video\": {\"main\": [[{\"node\": \"Wait for Image-to-Video Rendering\", \"type\": \"main\", \"index\": 0}]]}, \"Extract Image File URL\": {\"main\": [[{\"node\": \"Upload Image to Cloudinary\", \"type\": \"main\", \"index\": 0}]]}, \"Upload Video to Blotato\": {\"main\": [[{\"node\": \"Post to Instagram\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Post to YouTube\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Post to TikTok\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Post to Facebook Page\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Post to Threads\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Post to Twitter (X)\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Post to LinkedIn\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Post to Bluesky\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Post to Pinterest\", \"type\": \"main\", \"index\": 0}]]}, \"Send Caption to Telegram\": {\"main\": [[{\"node\": \"Assign Platform IDs for Blotato\", \"type\": \"main\", \"index\": 0}]]}, \"Generate Music with Piapi\": {\"main\": [[{\"node\": \"Wait for Music Generation\", \"type\": \"main\", \"index\": 0}]]}, \"Get Image-Based Video URL\": {\"main\": [[{\"node\": \"Merge Video Data (Image or Prompt)\", \"type\": \"main\", \"index\": 0}]]}, \"Wait for Music Generation\": {\"main\": [[{\"node\": \"Get Music File URL\", \"type\": \"main\", \"index\": 0}]]}, \"Generate SEO Title (GPT-4)\": {\"main\": [[{\"node\": \"Append Video Data to Google Sheet\", \"type\": \"main\", \"index\": 0}]]}, \"Upload Image to Cloudinary\": {\"main\": [[{\"node\": \"Convert Image to Video\", \"type\": \"main\", \"index\": 0}]]}, \"Wait for Fusion Completion\": {\"main\": [[{\"node\": \"Get Final Video URL\", \"type\": \"main\", \"index\": 0}]]}, \"Generate Video with blotato\": {\"main\": [[{\"node\": \"Wait for blotato Video Rendering\", \"type\": \"main\", \"index\": 0}]]}, \"Split Prompt or Image Input\": {\"main\": [[{\"node\": \"Condition Input Type (Image or Text)\", \"type\": \"main\", \"index\": 0}]]}, \"Download Image from Telegram\": {\"main\": [[{\"node\": \"Extract Image File URL\", \"type\": \"main\", \"index\": 0}]]}, \"Send Final Video to Telegram\": {\"main\": [[{\"node\": \"Send Caption to Telegram\", \"type\": \"main\", \"index\": 0}]]}, \"Generate Script (GPT-4o-mini)\": {\"main\": [[{\"node\": \"Split Script\", \"type\": \"main\", \"index\": 0}]]}, \"Assign Platform IDs for Blotato\": {\"main\": [[{\"node\": \"Upload Video to Blotato\", \"type\": \"main\", \"index\": 0}]]}, \"Generate Social Caption (GPT-4)\": {\"main\": [[{\"node\": \"Generate SEO Title (GPT-4)\", \"type\": \"main\", \"index\": 0}]]}, \"Trigger Telegram Prompt or Image\": {\"main\": [[{\"node\": \"Split Prompt or Image Input\", \"type\": \"main\", \"index\": 0}]]}, \"Wait for blotato Video Rendering\": {\"main\": [[{\"node\": \"Get blotato Video URL\", \"type\": \"main\", \"index\": 0}]]}, \"Append Video Data to Google Sheet\": {\"main\": [[{\"node\": \"Send Final Video to Telegram\", \"type\": \"main\", \"index\": 0}]]}, \"Wait for Image-to-Video Rendering\": {\"main\": [[{\"node\": \"Get Image-Based Video URL\", \"type\": \"main\", \"index\": 0}]]}, \"Merge Video Data (Image or Prompt)\": {\"main\": [[{\"node\": \"Generate Music with Piapi\", \"type\": \"main\", \"index\": 0}]]}, \"Condition Input Type (Image or Text)\": {\"main\": [[{\"node\": \"Generate Video with blotato\", \"type\": \"main\", \"index\": 0}], [{\"node\": \"Download Image from Telegram\", \"type\": \"main\", \"index\": 0}]]}}}"
}