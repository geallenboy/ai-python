{
  "title": "AI YouTube Playlist & Video Analyst Chatbot",
  "url": "https://n8n.io/workflows/3408-ai-youtube-playlist-and-video-analyst-chatbot/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "dmr",
  "publish_date": "Last update a month ago",
  "content": "",
  "workflow_json": "",
  "readme": "# AI YouTube Playlist & Video Analyst Chatbot\n\nThis n8n workflow transforms entire YouTube playlists or single videos into interactive knowledge bases you can chat with. Ask questions and get summaries without needing to watch hours of content.\n\n## 🌟 How it Works\n\n  1. **🔗 Provide a Link:** Start by giving the workflow a URL for a YouTube playlist or a single video.\n  2. **📄 Content Retrieval:** The workflow automatically fetches the video details and transcripts for the provided link. For playlists, it can process multiple videos at once (you might be asked how many).\n  3. **🧠 AI Processing:** Google's Gemini AI reads through the transcripts, understands the content, and creates summaries.\n  4. **💾 Storage & Context:** The processed information and summaries are stored in a vector database (Qdrant), making them ready for conversation. **Context is managed using Redis** , remembering the current video/playlist you're discussing.\n  5. **💬 Chat & Ask:** Now, you can ask the AI agent questions about the playlist or video content! **Because context is maintained** , you can ask follow-up questions (like \"expand on point X\") without needing to provide the URL again.\n\n\n\n## 🛠️ Requirements\n\n  * **Community Node:** This workflow uses the `youtubeTranscripter` community node to fetch video transcripts. You'll need to install it in your n8n environment. \n    * **Installation:** `npm install n8n-nodes-youtube-transcription-dmr`\n    * **Important:** Community nodes require a **self-hosted n8n instance**.\n  * **Redis:** A Redis instance is required for managing conversation context and status between interactions.\n  * **Credentials:** You will need API credentials configured in your n8n instance for: \n    * Google Gemini (AI Models)\n    * Qdrant (Vector Store)\n    * Redis (Context Store)\n\n\n\n## 🤖 AI Agent Capabilities\n\nEngage with the AI agent to explore the video content. Since the agent remembers the context of your conversation, you can ask detailed follow-up questions naturally:\n\n  * Get a quick **summary** of a single video or an entire playlist.\n  * Ask for **key takeaways** or main topics discussed.\n  * Query for **specific information** mentioned in the videos.\n  * Ask the agent to **elaborate** on a specific point previously mentioned.\n  * Understand complex subjects **without watching** the full duration.\n\n\n\n## 🚀 Use Cases\n\n  * **📊 Content Analysis:** Quickly understand the themes and key points across a playlist or long video.\n  * **📚 Research & Learning:** Extract insights from educational series or tutorials efficiently.\n  * **✍️ Content Creation:** Easily repurpose video transcript information into blog posts, notes, or social media content.\n  * **⏱️ Save Time:** Get the essence of video content when you're short on time.\n  * **♿ Accessibility:** Offers a text-based way to interact with and understand video content.\n\n\n\n## ✨ Sample Prompts\n\n  * Please analyze this playlist and tell me the main topics covered: [YouTube Playlist URL]\n  * Summarize the first 5 videos in this playlist: [YouTube Playlist URL]\n  * _(Follow-up)_ Tell me more about the main point in video 3.\n  * What are the key points discussed in this video? [YouTube Video URL]\n  * _(Follow-up)_ Expand on the second key point you mentioned.\n  * Does the video at [YouTube Video URL] mention [specific topic]?\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h1>AI YouTube Playlist &amp; Video Analyst Chatbot</h1>\n<p>This n8n workflow transforms entire YouTube playlists or single videos into interactive knowledge bases you can chat with. Ask questions and get summaries without needing to watch hours of content.</p>\n<h2>🌟 How it Works</h2>\n<ol>\n<li><strong>🔗 Provide a Link:</strong> Start by giving the workflow a URL for a YouTube playlist or a single video.</li>\n<li><strong>📄 Content Retrieval:</strong> The workflow automatically fetches the video details and transcripts for the provided link. For playlists, it can process multiple videos at once (you might be asked how many).</li>\n<li><strong>🧠 AI Processing:</strong> Google's Gemini AI reads through the transcripts, understands the content, and creates summaries.</li>\n<li><strong>💾 Storage &amp; Context:</strong> The processed information and summaries are stored in a vector database (Qdrant), making them ready for conversation. <strong>Context is managed using Redis</strong>, remembering the current video/playlist you're discussing.</li>\n<li><strong>💬 Chat &amp; Ask:</strong> Now, you can ask the AI agent questions about the playlist or video content! <strong>Because context is maintained</strong>, you can ask follow-up questions (like \"expand on point X\") without needing to provide the URL again.</li>\n</ol>\n<h2>🛠️ Requirements</h2>\n<ul>\n<li><strong>Community Node:</strong> This workflow uses the <code>youtubeTranscripter</code> community node to fetch video transcripts. You'll need to install it in your n8n environment.\n<ul>\n<li><strong>Installation:</strong> <code>npm install n8n-nodes-youtube-transcription-dmr</code></li>\n<li><strong>Important:</strong> Community nodes require a <strong>self-hosted n8n instance</strong>.</li>\n</ul>\n</li>\n<li><strong>Redis:</strong> A Redis instance is required for managing conversation context and status between interactions.</li>\n<li><strong>Credentials:</strong> You will need API credentials configured in your n8n instance for:\n<ul>\n<li>Google Gemini (AI Models)</li>\n<li>Qdrant (Vector Store)</li>\n<li>Redis (Context Store)</li>\n</ul>\n</li>\n</ul>\n<h2>🤖 AI Agent Capabilities</h2>\n<p>Engage with the AI agent to explore the video content. Since the agent remembers the context of your conversation, you can ask detailed follow-up questions naturally:</p>\n<ul>\n<li>Get a quick <strong>summary</strong> of a single video or an entire playlist.</li>\n<li>Ask for <strong>key takeaways</strong> or main topics discussed.</li>\n<li>Query for <strong>specific information</strong> mentioned in the videos.</li>\n<li>Ask the agent to <strong>elaborate</strong> on a specific point previously mentioned.</li>\n<li>Understand complex subjects <strong>without watching</strong> the full duration.</li>\n</ul>\n<h2>🚀 Use Cases</h2>\n<ul>\n<li><strong>📊 Content Analysis:</strong> Quickly understand the themes and key points across a playlist or long video.</li>\n<li><strong>📚 Research &amp; Learning:</strong> Extract insights from educational series or tutorials efficiently.</li>\n<li><strong>✍️ Content Creation:</strong> Easily repurpose video transcript information into blog posts, notes, or social media content.</li>\n<li><strong>⏱️ Save Time:</strong> Get the essence of video content when you're short on time.</li>\n<li><strong>♿ Accessibility:</strong> Offers a text-based way to interact with and understand video content.</li>\n</ul>\n<h2>✨ Sample Prompts</h2>\n<ul>\n<li>Please analyze this playlist and tell me the main topics covered: [YouTube Playlist URL]</li>\n<li>Summarize the first 5 videos in this playlist: [YouTube Playlist URL]</li>\n<li><em>(Follow-up)</em> Tell me more about the main point in video 3.</li>\n<li>What are the key points discussed in this video? [YouTube Video URL]</li>\n<li><em>(Follow-up)</em> Expand on the second key point you mentioned.</li>\n<li>Does the video at [YouTube Video URL] mention [specific topic]?</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "# AI YouTube播放列表与视频分析聊天机器人\n\n这个n8n工作流能将整个YouTube播放列表或单个视频转化为可交互的知识库，支持对话查询。无需观看数小时内容，通过提问即可获取摘要信息。\n\n## 🌟 工作原理\n\n1. **🔗 提供链接**：输入YouTube播放列表或单个视频的URL\n2. **📄 内容获取**：自动抓取视频详情及字幕（播放列表可选择处理视频数量）\n3. **🧠 AI处理**：通过Google Gemini AI解析字幕并生成摘要\n4. **💾 存储上下文**：处理后的数据存入Qdrant向量数据库，**通过Redis管理对话上下文**，记忆当前讨论的视频/播放列表\n5. **💬 开始对话**：可随时询问视频内容，**基于上下文记忆**支持连续追问（如\"详细说明X观点\"），无需重复提供链接\n\n## 🛠️ 环境要求\n\n* **社区节点**：需安装`youtubeTranscripter`社区节点获取字幕\n  * 安装命令：`npm install n8n-nodes-youtube-transcription-dmr`\n  * **注意**：必须使用**自托管n8n实例**\n* **Redis**：用于维护对话上下文状态\n* **API密钥**：需配置以下服务的凭证：\n  * Google Gemini（AI模型）\n  * Qdrant（向量数据库）\n  * Redis（上下文存储）\n\n## 🤖 AI功能特色\n\n支持自然语言交互与连续追问：\n* 快速获取**视频/播放列表摘要**\n* 查询**核心观点**或主题脉络\n* 定位视频中的**特定信息**\n* 要求**延伸讲解**已提及的内容\n* **免观看**理解复杂内容\n\n## 🚀 应用场景\n\n* **📊 内容分析**：快速掌握系列视频的核心主题\n* **📚 研究学习**：高效提取教学视频要点\n* **✍️ 内容创作**：将视频转录内容转化为博客/笔记\n* **⏱️ 节省时间**：快速获取视频精华\n* **♿ 无障碍访问**：通过文本交互理解视频内容\n\n## ✨ 示例提问\n\n* 请分析这个播放列表的主要话题：[播放列表链接]\n* 总结该播放列表前5个视频内容：[播放列表链接]\n* （追问）请详细说明视频3的核心观点\n* 这个视频讨论了哪些要点？[视频链接]\n* （追问）展开你提到的第二个要点\n* [视频链接]中是否提及[特定主题]？",
  "title_zh": "AI YouTube播放列表与视频分析聊天机器人",
  "publish_date_absolute": "",
  "publish_date_zh": "上次更新于一个月前"
}