{
  "title": "Automated Research Report Generation with AI, Wiki, Search & Gmail/Telegram",
  "url": "https://n8n.io/workflows/3579-automated-research-report-generation-with-ai-wiki-search-and-gmailtelegram/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/",
  "author": "Immanuel",
  "publish_date": "Last update 9 days ago",
  "content": "",
  "workflow_json": "{\"id\":\"EOJfPcM9PPWI1Rmp\",\"meta\":{\"instanceId\":\"3aaeb6eaba3494bbdbe57e25fa3d02783cfbc460b1e823f7b741cf26edc7ca3d\",\"templateCredsSetupCompleted\":true},\"name\":\"Automated Research Report Generation with OpenAI, Wikipedia, Google Search, and Gmail/Telegram\",\"tags\":[],\"nodes\":[{\"id\":\"46c09535-cd6b-481c-b520-67ecb4aad812\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[776,-100],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"WLM64KJjQFXGWGWi\",\"name\":\"OpenAi account N8N\"}},\"typeVersion\":1.2},{\"id\":\"574ec863-e557-4196-b1b9-5c275a7de73a\",\"name\":\"Simple Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[896,-100],\"parameters\":{\"sessionKey\":\"={{ $json.output.searchQueries }}\",\"sessionIdType\":\"customKey\"},\"typeVersion\":1.3},{\"id\":\"661349c2-7bb1-4c95-af8f-3a108a619c84\",\"name\":\"Search News\",\"type\":\"@n8n/n8n-nodes-langchain.toolHttpRequest\",\"position\":[1016,-100],\"parameters\":{\"url\":\"=https://newsapi.org/v2/everything?q={{ encodeURIComponent($input.cleanedQuery) }}&apiKey=\\\"YOURAPIKEY\\\"\",\"sendQuery\":true,\"parametersQuery\":{\"values\":[{\"name\":\"q\"},{\"name\":\"pageSize\",\"value\":\"3\",\"valueProvider\":\"fieldValue\"},{\"name\":\"sortBy\",\"value\":\"publishedAt\",\"valueProvider\":\"fieldValue\"},{\"name\":\"language\",\"value\":\"en\",\"valueProvider\":\"fieldValue\"}]},\"toolDescription\":\"Fetches recent news articles\",\"optimizeResponse\":true},\"typeVersion\":1.1},{\"id\":\"6d43251f-db88-45fa-be65-de368d4db408\",\"name\":\"Wikipedia\",\"type\":\"@n8n/n8n-nodes-langchain.toolHttpRequest\",\"position\":[1136,-100],\"parameters\":{\"url\":\"=https://en.wikipedia.org/w/api.php?action=query&format=json&prop=extracts&exintro&explaintext&titles={{ $input.query ? encodeURIComponent($input.query) : encodeURIComponent($json.refined_query) }}\\n\\n\",\"sendQuery\":true,\"parametersQuery\":{\"values\":[{\"name\":\"action\",\"valueProvider\":\"modelOptional\"},{\"name\":\"prop\",\"value\":\"extracts\",\"valueProvider\":\"fieldValue\"}]},\"toolDescription\":\"Fetches structured data from Wikipedia\",\"optimizeResponse\":true},\"typeVersion\":1.1},{\"id\":\"c94b1446-82bf-47c8-8f5d-c5da9a43a7e7\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[380,-80],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"WLM64KJjQFXGWGWi\",\"name\":\"OpenAi account N8N\"}},\"typeVersion\":1.2},{\"id\":\"834efc04-b05f-4ddc-a8d9-b93d9c4e099a\",\"name\":\"Query Refiner\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[400,-320],\"parameters\":{\"text\":\"=You are a query generation expert. Based on the refined query provided, generate exactly 5 related search queries that can help broaden the research scope. Each query should focus on a different aspect of the topic (e.g., applications, challenges, recent developments, specific domains, case studies). The output must match the following JSON schema:\\n{\\n  \\\"topic\\\": \\\"The refined query\\\",\\n  \\\"searchQueries\\\": [\\\"query1\\\", \\\"query2\\\", \\\"query3\\\", \\\"query4\\\", \\\"query5\\\"]\\n}\\n\\nRefined Query: {{ $json.cleanedQuery}}\\nExamples:\\n- Refined Query: \\\"current trends in artificial intelligence 2025\\\"\\n  Output: {\\n    \\\"topic\\\": \\\"current trends in artificial intelligence 2025\\\",\\n    \\\"searchQueries\\\": [\\n      \\\"AI applications in healthcare 2025\\\",\\n      \\\"ethical challenges of artificial intelligence 2025\\\",\\n      \\\"recent developments in generative AI 2025\\\",\\n      \\\"AI trends in education 2025\\\",\\n      \\\"AI startup funding trends 2025\\\"\\n    ]\\n  }\\n- Refined Query: \\\"artificial intelligence applications in healthcare diagnostics and treatment\\\"\\n  Output: {\\n    \\\"topic\\\": \\\"artificial intelligence applications in healthcare diagnostics and treatment\\\",\\n    \\\"searchQueries\\\": [\\n      \\\"AI in medical diagnostics 2025\\\",\\n      \\\"artificial intelligence for personalized treatment plans\\\",\\n      \\\"challenges of AI in healthcare diagnostics\\\",\\n      \\\"recent studies on AI in healthcare\\\",\\n      \\\"AI healthcare diagnostics case studies\\\"\\n    ]\\n  }\",\"options\":{},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.8},{\"id\":\"1f83e2d8-23ee-46e2-998a-b644ea0fff3c\",\"name\":\"Research AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[900,-320],\"parameters\":{\"text\":\"=Perform research on the topic \\n\\\"{{ $json.output.topic }}\\\"\\\"\\n\\n\\nusing the following search queries: {{ $json.output.searchQueries.join(\\\",\\\") }}\\n\\n\",\"options\":{\"systemMessage\":\"=You are a research assistant named \\\"ResearchBot\\\". Your role is to perform thorough and comprehensive research based on the topic and search queries provided. Follow these steps to gather data:\\n- Search the web for general information using the provided topic and queries, focusing on recent trends, developments, and applications (2024-2025).\\n- Search Wikipedia for foundational knowledge about the topic to provide context.\\n- Search for recent news articles (from 2024-2025) to identify current developments, announcements, and trends.\\n- Search Google Scholar for academic papers (from 2020-2025) to gather scholarly insights and research findings.\\n- Summarize and aggregate all findings into a structured JSON format.\\n- Ensure all data is directly relevant to the topic:  {{ $json.output.topic }}.\\nReturn the research findings as a raw JSON object with the following structure:\\n{\\n  \\\"introduction\\\": \\\"A detailed 4-6 sentence introduction to the topic, providing context, significance, and a brief overview of current trends.\\\",\\n  \\\"summary\\\": \\\"A comprehensive 6-8 sentence summary of the key findings, covering trends, challenges, opportunities, and notable applications.\\\",\\n  \\\"key_findings\\\": [\\\"A list of 8-12 specific key points or trends, each as a concise sentence. This must always be an array with at least 8 items.\\\"],\\n  \\\"news_highlights\\\": [\\\"A list of 4-6 recent news headlines with sources (from 2024-2025), each in the format 'Headline - Source, Year'. This must always be an array with at least 4 items.\\\"],\\n  \\\"scholarly_insights\\\": [\\\"A list of 4-6 insights from academic papers with sources (from 2020-2025), each in the format 'Insight (Author et al., Year, Journal)'. This must always be an array with at least 4 items.\\\"],\\n  \\\"wikipedia_summary\\\": \\\"A detailed 4-6 sentence summary of foundational knowledge from Wikipedia, providing background and historical context on the topic.\\\",\\n  \\\"sources\\\": [\\\"A list of all source URLs (at least 8-12 unique, relevant sources, including web articles, news, and academic papers). This must always be an array with at least 8 items.\\\"]\\n}\\nIf insufficient data is found for any field, perform additional searches using variations of the topic and queries to meet the minimum requirements. For example:\\n- For news, search for terms like \\\"[topic] 2025 news\\\", \\\"[topic] recent developments\\\", or \\\"[topic] industry trends\\\".\\n- For scholarly insights, search for \\\"[topic] machine learning 2020-2025\\\", \\\"[topic] applications research\\\", or \\\"[topic] ethical concerns\\\".\\n- For sources, ensure a mix of web articles, news, and academic papers.\\nDo NOT include irrelevant information or sources. Do NOT wrap the JSON in a string, an \\\"output\\\" field, or any Markdown formatting (e.g., ```json). Return only the raw JSON object.\\n\\n\\nTopic: {{ $json.output.topic }}\\nSearch Queries: {{ $json.output.searchQueries }}\"},\"promptType\":\"define\"},\"typeVersion\":1.8},{\"id\":\"a53cfaac-425a-4558-a661-1042cb63599d\",\"name\":\"Google Search Web\",\"type\":\"@n8n/n8n-nodes-langchain.toolHttpRequest\",\"position\":[1256,-100],\"parameters\":{\"url\":\"=https://www.googleapis.com/customsearch/v1?key=\\\"YOURAPIKEY\\\"={{ encodeURIComponent($input.query) }}\",\"sendQuery\":true,\"parametersQuery\":{\"values\":[{\"name\":\"num\",\"value\":\"5\",\"valueProvider\":\"fieldValue\"}]},\"toolDescription\":\"Searches the web for a given query using Google Custom Search API\",\"optimizeResponse\":true},\"typeVersion\":1.1},{\"id\":\"27548bf6-7f86-4e38-befb-3ad55c4d6c46\",\"name\":\"SerpApi\",\"type\":\"@n8n/n8n-nodes-langchain.toolHttpRequest\",\"position\":[1376,-100],\"parameters\":{\"url\":\"=https://serpapi.com/search?engine=google_scholar&q={{ encodeURIComponent( $json.refined_query ) }}&api_key=\\\"YOURAPIKEY\\\"\",\"sendQuery\":true,\"authentication\":\"predefinedCredentialType\",\"parametersQuery\":{\"values\":[{\"name\":\"num\",\"value\":\"3\",\"valueProvider\":\"fieldValue\"}]},\"toolDescription\":\"Searches Google Scholar for academic papers\",\"optimizeResponse\":true,\"nodeCredentialType\":\"serpApi\"},\"credentials\":{\"serpApi\":{\"id\":\"9LoJ3XtPiLBGUI5W\",\"name\":\"SerpAPI account\"}},\"typeVersion\":1.1},{\"id\":\"51c1b9be-a3e1-4a93-bb5c-bbde5919de0c\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[580,-80],\"parameters\":{\"jsonSchemaExample\":\"{\\n  \\\"output\\\": {\\n    \\\"topic\\\": \\\"the best ai models 2025\\\",\\n    \\\"searchQueries\\\": [\\n      \\\"best AI models 2025 natural language processing\\\",\\n      \\\"top AI models 2025 computer vision\\\",\\n      \\\"best AI models 2025 generative AI\\\",\\n      \\\"recent advancements in AI models 2025 news\\\",\\n      \\\"scholarly research on AI models 2020-2025\\\",\\n      \\\"ethical concerns in AI models 2025\\\",\\n      \\\"AI models 2025 applications in healthcare\\\",\\n      \\\"AI models 2025 trends in automation\\\"\\n    ]\\n  }\\n}\"},\"typeVersion\":1.2},{\"id\":\"2d30f75e-baa0-4dd3-a0f9-cb74d7272d08\",\"name\":\"Split Out\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1500,-320],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\" introduction, summary, key_findings, news_highlights, scholarly_insights, wikipedia_summary, sources\"},\"typeVersion\":1},{\"id\":\"b89d5c35-64c4-4e8c-b432-c2219aba8acc\",\"name\":\"Input Validation\",\"type\":\"n8n-nodes-base.code\",\"position\":[180,-320],\"parameters\":{\"jsCode\":\"// Validate input and prepare for processing\\nconst query = $input.all()[0].json.query;\\n\\nif (!query || query.trim().length < 3) {\\n  throw new Error('Research query must be at least 3 characters long');\\n}\\n\\nreturn {\\n  json: {\\n    originalQuery: query,\\n    cleanedQuery: query.trim().toLowerCase(),\\n    timestamp: new Date().toISOString()\\n  }\\n};\"},\"typeVersion\":2},{\"id\":\"e34f9b0e-a9ca-4011-bfee-c7845c68942b\",\"name\":\"Parse Research Output\",\"type\":\"n8n-nodes-base.code\",\"position\":[1300,-320],\"parameters\":{\"jsCode\":\"// Get the output string from the Research AI Agent\\nconst outputString = $input.first().json.output;\\n\\n// Parse the string into a JSON object\\nconst parsedOutput = JSON.parse(outputString);\\n\\n// Return the parsed JSON as a single item\\nreturn [{\\n  json: parsedOutput\\n}];\"},\"typeVersion\":2},{\"id\":\"f4e6e449-1c56-4500-9701-623620360c83\",\"name\":\"Merge Split Items\",\"type\":\"n8n-nodes-base.code\",\"position\":[1700,-320],\"parameters\":{\"jsCode\":\"const mergedItem = {\\n  key_findings: [],\\n  news_highlights: [],\\n  scholarly_insights: [],\\n  sources: []\\n};\\n\\n$input.all().forEach(item => {\\n  const data = item.json;\\n\\n  if (data.introduction) mergedItem.introduction = data.introduction;\\n  if (data.summary) mergedItem.summary = data.summary;\\n  if (data.wikipedia_summary) mergedItem.wikipedia_summary = data.wikipedia_summary;\\n\\n  if (data.key_findings) {\\n    const findingsToAdd = Array.isArray(data.key_findings) ? data.key_findings : [data.key_findings];\\n    mergedItem.key_findings = mergedItem.key_findings.concat(findingsToAdd);\\n  }\\n  if (data.news_highlights) {\\n    const highlightsToAdd = Array.isArray(data.news_highlights) ? data.news_highlights : [data.news_highlights];\\n    mergedItem.news_highlights = mergedItem.news_highlights.concat(highlightsToAdd);\\n  }\\n  if (data.scholarly_insights) {\\n    const insightsToAdd = Array.isArray(data.scholarly_insights) ? data.scholarly_insights : [data.scholarly_insights];\\n    mergedItem.scholarly_insights = mergedItem.scholarly_insights.concat(insightsToAdd);\\n  }\\n  if (data.sources) {\\n    const sourcesToAdd = Array.isArray(data.sources) ? data.sources : [data.sources];\\n    mergedItem.sources = mergedItem.sources.concat(sourcesToAdd);\\n  }\\n});\\n\\nreturn [{ json: mergedItem }];\"},\"typeVersion\":2},{\"id\":\"e63a3f5d-dba7-4fc4-afa0-150e63aedbac\",\"name\":\"Store Research Metadata\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[2100,-720],\"parameters\":{\"columns\":{\"value\":{\"Topic\":\"={{ $json.topic }}\",\"Sources\":\"={{ $json.sources }}\",\"Timestamp\":\"={{ $json.timestamp }}\",\"Search Queries\":\"={{ $json.searchQueries }}\"},\"schema\":[{\"id\":\"Topic\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Topic\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Search Queries\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Search Queries\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Sources\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Sources\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Timestamp\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Timestamp\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/196eJesF2ke3AQjoWvave51m6FltAyBFj5pvVW7wIsUA/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"196eJesF2ke3AQjoWvave51m6FltAyBFj5pvVW7wIsUA\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/196eJesF2ke3AQjoWvave51m6FltAyBFj5pvVW7wIsUA/edit?usp=drivesdk\",\"cachedResultName\":\"Research AI Agent Records\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"PRTItuUGXlUOvF9a\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"2501bc98-a1b4-473b-b4ac-7fd78efcb6be\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1080,-1200],\"parameters\":{\"color\":6,\"width\":2900,\"height\":1600,\"content\":\"# 📋 Research Report Workflow 🧠💻\\n\\nThis workflow generates a professional PDF research report on a given topic, sends it via Telegram, and emails🚀\\n\\n\\n---\\n\\n## 🔍 **Query Refiner**\\n- **What it does**: Refines the input topic for better readability. 🧹\\n- **Input**: Topic from the HTTP Request (e.g., \\\"the best ai models 2025\\\").\\n- **Output**: Formatted topic (e.g., \\\"The Best AI Models 2025\\\").\\n- **✨ Detail**: Capitalizes words and ensures \\\"AI\\\" is uppercase.\\n\\n---\\n\\n## 📊 **Aggregate Research Data**\\n- **What it does**: Collects research data for the topic. 📚\\n- **Input**: Refined topic.\\n- **Output**: Research data (introduction, summary, key findings, etc.) with a timestamp.\\n- **⏰ Note**: The timestamp is used to date the report.\\n\\n---\\n\\n## 🔗 **Merge Split Items**\\n- **What it does**: Combines and organizes research data into sections. 🗂️\\n- **Input**: Data from Aggregate Research Data.\\n- **Output**: Structured JSON with sections like `introduction`, `key_findings`, `sources`.\\n- **📑 Purpose**: Prepares data for the PDF report.\\n\\n---\\n\\n## 📝 **Generate PDF HTML**\\n- **What it does**: Creates an HTML template for the PDF report. 🖥️\\n- **Input**: Refined topic and research data.\\n- **Output**: HTML content, file name (e.g., `research-report-the-best-ai-models-2025-2025-04-09.pdf`), and formatted date.\\n- **🎨 Features**:\\n  - Professional styling (Helvetica, Georgia fonts, deep blue accents).\\n  - Sections: Cover page, introduction, summary, key findings, etc.\\n  - Escapes special characters to prevent HTML errors.\\n- **⏳ Timestamp Fix**: Stores `rawTimestamp` and `formattedDate` (e.g., \\\"April 9, 2025\\\").\\n\\n---\\n\\n## 📄 **Convert HTML to PDF (PDFShift)**\\n- **What it does**: Converts the HTML to a PDF using the PDFShift API. 🖨️\\n- **Input**: HTML content from the previous node.\\n- **Output**: JSON response with a URL to the generated PDF.\\n- **🔑 Requirement**: Needs a valid PDFShift API key.\\n- **⚠️ Note**: Outputs a URL, not the PDF binary data.\\n\\n---\\n\\n## ⬇️ **Download PDF**\\n- **What it does**: Downloads the PDF from the URL provided by PDFShift. 📥\\n- **Input**: PDF URL from the Convert HTML to PDF node.\\n- **Output**: Binary PDF data (MIME type: `application/pdf`, ~98 KB).\\n- **📛 File Name**: Uses the file name from the previous node (e.g., `research-report-the-best-ai-models-2025-2025-04-09.pdf`).\\n\\n---\\n\\n## 📱 **Gmail/Telegram**\\n- **What it does**: Sends the PDF to a Gmail/Telegram chat. 💬\\n- **Input**: PDF binary data and metadata (topic, formatted date).\\n- **Output**: Sends the PDF as a document to the specified chat.\\n- **📝 Caption**:\"},\"typeVersion\":1},{\"id\":\"b2219fba-c5e5-4c0e-abf2-04a8ef60b795\",\"name\":\"Generate PDF HTML\",\"type\":\"n8n-nodes-base.code\",\"position\":[2120,-320],\"parameters\":{\"jsCode\":\"// Function to escape HTML special characters\\nfunction escapeHtml(unsafe) {\\n  if (typeof unsafe !== 'string') return unsafe;\\n  return unsafe\\n    .replace(/&/g, \\\"&amp;\\\")\\n    .replace(/</g, \\\"&lt;\\\")\\n    .replace(/>/g, \\\"&gt;\\\")\\n    .replace(/\\\"/g, \\\"&quot;\\\")\\n    .replace(/'/g, \\\"&#039;\\\");\\n}\\n\\n// Get topic from Query Refiner\\nconst queryRefinerData = $('Query Refiner').first().json;\\nconsole.log('Debugging queryRefinerData:', JSON.stringify(queryRefinerData, null, 2));\\nconst topicRaw = queryRefinerData.output?.topic || 'Untitled';\\nconst topic = topicRaw.split(' ').map(word => {\\n  if (word.toLowerCase() === 'ai') return 'AI';\\n  return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\\n}).join(' ');\\n\\n// Get timestamp from Aggregate Research Data\\nconst aggregateData = $input.first().json;\\nconsole.log('Debugging aggregateData:', JSON.stringify(aggregateData, null, 2));\\n\\n// Validate and parse the timestamp\\nlet rawTimestamp = aggregateData.timestamp;\\nif (!rawTimestamp || isNaN(new Date(rawTimestamp))) {\\n  rawTimestamp = new Date().toISOString(); // Fallback to current date if invalid\\n}\\nconst formattedDate = new Date(rawTimestamp).toLocaleDateString('en-US', {\\n  year: 'numeric',\\n  month: 'long',\\n  day: 'numeric'\\n});\\nconsole.log('Raw timestamp:', rawTimestamp);\\nconsole.log('Formatted date:', formattedDate);\\n\\n// Get the aggregated research data from Merge Split Items\\nconst mergeSplitItems = $('Merge Split Items').first().json;\\nconsole.log('Data from Merge Split Items:', JSON.stringify(mergeSplitItems, null, 2));\\n\\n// Use data from Merge Split Items\\nconst data = {\\n  topic: topic,\\n  rawTimestamp: rawTimestamp, // Store the raw timestamp\\n  formattedDate: formattedDate, // Store the formatted date\\n  introduction: mergeSplitItems.introduction,\\n  summary: mergeSplitItems.summary,\\n  key_findings: mergeSplitItems.key_findings,\\n  news_highlights: mergeSplitItems.news_highlights,\\n  scholarly_insights: mergeSplitItems.scholarly_insights,\\n  wikipedia_summary: mergeSplitItems.wikipedia_summary,\\n  sources: mergeSplitItems.sources\\n};\\n\\n// Ensure array fields are arrays, default to empty array if not\\nconst keyFindings = Array.isArray(data.key_findings) ? data.key_findings : [];\\nconst newsHighlights = Array.isArray(data.news_highlights) ? data.news_highlights : [];\\nconst scholarlyInsights = Array.isArray(data.scholarly_insights) ? data.scholarly_insights : [];\\nconst sources = Array.isArray(data.sources) ? data.sources : [];\\n\\n// Define the file name based on the topic\\nconst fileName = `research-report-${(data.topic || 'untitled').replace(/\\\\s+/g, '-').toLowerCase()}-${new Date().toISOString().split('T')[0]}.pdf`;\\n\\n// Create an HTML template for the PDF with enhanced styling\\nconst htmlContent = `\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <title>Research Report: ${escapeHtml(data.topic)}</title>\\n  <style>\\n    @page {\\n      size: A4;\\n      margin: 0;\\n      @top-center {\\n        content: \\\"Research Report: ${escapeHtml(data.topic)}\\\";\\n        font-family: 'Helvetica', sans-serif;\\n        font-size: 10pt;\\n        color: #666;\\n      }\\n      @bottom-right {\\n        content: counter(page);\\n        font-family: 'Helvetica', sans-serif;\\n        font-size: 10pt;\\n        color: #666;\\n      }\\n    }\\n    body {\\n      font-family: 'Helvetica', 'Arial', sans-serif;\\n      margin: 0;\\n      padding: 0;\\n      color: #333;\\n      line-height: 1.6;\\n      font-size: 12pt;\\n    }\\n    .page-break {\\n      page-break-before: always;\\n    }\\n    .container {\\n      width: 90%;\\n      max-width: 800px;\\n      margin: 0 auto;\\n      padding: 40px 30px;\\n      background-color: #fff;\\n    }\\n    /* Cover Page */\\n    .cover-page {\\n      text-align: center;\\n      padding: 100px 30px;\\n      background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\\n      height: 100vh;\\n      display: flex;\\n      flex-direction: column;\\n      justify-content: center;\\n      box-sizing: border-box;\\n    }\\n    .cover-page h1 {\\n      font-family: 'Georgia', serif;\\n      font-size: 40pt;\\n      font-weight: bold;\\n      color: #1a3c5e;\\n      margin: 0;\\n      text-transform: uppercase;\\n      letter-spacing: 2px;\\n    }\\n    .cover-page p {\\n      font-size: 14pt;\\n      color: #555;\\n      margin: 20px 0;\\n      font-style: italic;\\n    }\\n    /* Header */\\n    .header {\\n      border-bottom: 2px solid #1a3c5e;\\n      padding: 15px 0;\\n      text-align: center;\\n      margin-bottom: 30px;\\n    }\\n    .header h1 {\\n      font-family: 'Georgia', serif;\\n      font-size: 24pt;\\n      font-weight: bold;\\n      color: #1a3c5e;\\n      margin: 0;\\n      text-transform: uppercase;\\n    }\\n    .header p {\\n      font-size: 10pt;\\n      color: #666;\\n      margin: 5px 0 0;\\n      font-style: italic;\\n    }\\n    /* Sections */\\n    .section {\\n      margin: 40px 0;\\n      padding-bottom: 20px;\\n      border-bottom: 1px solid #e0e0e0;\\n    }\\n    .section:last-child {\\n      border-bottom: none;\\n    }\\n    .section h2 {\\n      font-family: 'Georgia', serif;\\n      font-size: 18pt;\\n      font-weight: bold;\\n      color: #1a3c5e;\\n      margin-bottom: 15px;\\n      position: relative;\\n    }\\n    .section h2::after {\\n      content: '';\\n      position: absolute;\\n      left: 0;\\n      bottom: -5px;\\n      width: 50px;\\n      height: 2px;\\n      background-color: #1a3c5e;\\n    }\\n    .section p {\\n      font-size: 12pt;\\n      margin: 0 0 15px;\\n      color: #444;\\n    }\\n    .section ul {\\n      margin: 0;\\n      padding-left: 20px;\\n    }\\n    .section li {\\n      font-size: 12pt;\\n      margin: 10px 0;\\n      color: #444;\\n    }\\n    /* Highlighted Key Findings */\\n    .key-finding-highlight {\\n      background-color: #f0f5fa;\\n      padding: 15px;\\n      border-left: 4px solid #1a3c5e;\\n      margin: 10px 0;\\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\\n      border-radius: 4px;\\n    }\\n    .key-finding-highlight span {\\n      font-weight: bold;\\n      color: #1a3c5e;\\n    }\\n    /* Sources */\\n    .sources ol {\\n      margin: 0;\\n      padding-left: 20px;\\n    }\\n    .sources li {\\n      font-size: 11pt;\\n      margin: 8px 0;\\n      word-break: break-all;\\n    }\\n    .sources a {\\n      color: #1a73e8;\\n      text-decoration: none;\\n    }\\n    .sources a:hover {\\n      text-decoration: underline;\\n    }\\n    /* Footer */\\n    .footer {\\n      text-align: center;\\n      font-size: 10pt;\\n      color: #666;\\n      padding: 20px 0;\\n      border-top: 1px solid #e0e0e0;\\n      margin-top: 40px;\\n      font-style: italic;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <!-- Cover Page -->\\n  <div class=\\\"cover-page\\\">\\n    <h1>Research Report: ${escapeHtml(data.topic)}</h1>\\n    <p>Generated on: ${escapeHtml(data.formattedDate)}</p>\\n  </div>\\n\\n  <!-- Main Content -->\\n  <div class=\\\"page-break\\\"></div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n      <h1>Research Report: ${escapeHtml(data.topic)}</h1>\\n      <p>Generated on: ${escapeHtml(data.formattedDate)}</p>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"introduction\\\">\\n      <h2>Introduction</h2>\\n      <p>${escapeHtml(data.introduction) || 'No introduction available.'}</p>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"summary\\\">\\n      <h2>Summary</h2>\\n      <p>${escapeHtml(data.summary) || 'No summary available.'}</p>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"key-findings\\\">\\n      <h2>Key Findings</h2>\\n      <ul>\\n        ${keyFindings.length > 0 ? keyFindings.map((finding, index) => {\\n          if (index < 3) {\\n            return `<li class=\\\"key-finding-highlight\\\"><span>${escapeHtml(finding)}</span></li>`;\\n          }\\n          return `<li>${escapeHtml(finding)}</li>`;\\n        }).join('') : '<li>No key findings available.</li>'}\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"news-highlights\\\">\\n      <h2>News Highlights</h2>\\n      <ul>\\n        ${newsHighlights.length > 0 ? newsHighlights.map(highlight => `<li>${escapeHtml(highlight)}</li>`).join('') : '<li>No news highlights available.</li>'}\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"scholarly-insights\\\">\\n      <h2>Scholarly Insights</h2>\\n      <ul>\\n        ${scholarlyInsights.length > 0 ? scholarlyInsights.map(insight => `<li>${escapeHtml(insight)}</li>`).join('') : '<li>No scholarly insights available.</li>'}\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"wikipedia-summary\\\">\\n      <h2>Wikipedia Summary</h2>\\n      <p>${escapeHtml(data.wikipedia_summary) || 'No Wikipedia summary available.'}</p>\\n    </div>\\n\\n    <div class=\\\"section sources\\\" id=\\\"sources\\\">\\n      <h2>Sources</h2>\\n      <ol>\\n        ${sources.length > 0 ? sources.map(source => `<li><a href=\\\"${escapeHtml(source)}\\\" target=\\\"_blank\\\">${escapeHtml(source)}</a></li>`).join('') : '<li>No sources available.</li>'}\\n      </ol>\\n    </div>\\n\\n    <div class=\\\"footer\\\">\\n      <p>Generated by ResearchBot | © 2025</p>\\n    </div>\\n  </div>\\n</body>\\n</html>\\n`;\\n\\n// Return the HTML content and file name\\nreturn [{\\n  json: {\\n    htmlContent: htmlContent,\\n    fileName: fileName,\\n    topic: data.topic,\\n    rawTimestamp: data.rawTimestamp,\\n    formattedDate: data.formattedDate\\n  }\\n}];\"},\"typeVersion\":2},{\"id\":\"e43bd216-af6a-43a4-9432-c092e34b83ba\",\"name\":\"Convert HTML to PDF\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2300,-320],\"parameters\":{\"url\":\"https://api.pdfshift.io/v3/convert/pdf\",\"method\":\"POST\",\"options\":{\"response\":{\"response\":{}}},\"sendBody\":true,\"sendHeaders\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"=source\",\"value\":\"={{ $json.htmlContent }}\"},{\"name\":\"landscape\",\"value\":\"false\"},{\"name\":\"use_print\",\"value\":\"false\"},{\"name\":\"filename\",\"value\":\"={{ $json.fileName }}\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"authorization\",\"value\":\"Basic YXBpOnNrX2VhNDVmY2YxN2E1NjMxY2I1ZmQxZGVmNjJmZTY3Y2JiYjM3MjQ2N2M=\"}]}},\"typeVersion\":4.2},{\"id\":\"fef45c7d-578b-4202-b804-db4de8a3ab5f\",\"name\":\"Aggregate\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[1900,-320],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\"},\"typeVersion\":1},{\"id\":\"3d942072-ad3f-4d9a-a5f4-48df2d1644b4\",\"name\":\"Download PDF\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2500,-320],\"parameters\":{\"url\":\"={{ $json.url }}\",\"options\":{\"response\":{\"response\":{}}}},\"typeVersion\":4.2},{\"id\":\"5763bd13-f98a-4983-b61d-72efad31f488\",\"name\":\"Send Research to Gmail\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[2820,0],\"webhookId\":\"ef2f7336-e7d4-4476-a65e-951d92138f0b\",\"parameters\":{\"sendTo\":\"emaikuri@gmail.com\",\"message\":\"=<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <title>Research Report: {{ $('Generate PDF HTML').item.json.topic }}</title>\\n  <style>\\n    body {\\n      font-family: 'Arial', sans-serif;\\n      color: #333;\\n      line-height: 1.6;\\n      background-color: #f4f4f4;\\n      margin: 0;\\n      padding: 0;\\n    }\\n    .container {\\n      max-width: 600px;\\n      margin: 20px auto;\\n      background-color: #ffffff;\\n      padding: 30px;\\n      border-radius: 8px;\\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    }\\n    .header {\\n      text-align: center;\\n      border-bottom: 2px solid #1a3c5e;\\n      padding-bottom: 15px;\\n      margin-bottom: 20px;\\n    }\\n    .header h1 {\\n      font-size: 24px;\\n      color: #1a3c5e;\\n      margin: 0;\\n    }\\n    .content p {\\n      font-size: 16px;\\n      margin: 0 0 15px;\\n    }\\n    .content p strong {\\n      color: #1a3c5e;\\n    }\\n    .content a {\\n      color: #1a73e8;\\n      text-decoration: none;\\n    }\\n    .content a:hover {\\n      text-decoration: underline;\\n    }\\n    .signature {\\n      margin-top: 20px;\\n      font-size: 14px;\\n      color: #666;\\n      border-top: 1px solid #e0e0e0;\\n      padding-top: 15px;\\n    }\\n    .signature p {\\n      margin: 5px 0;\\n    }\\n    .footer {\\n      text-align: center;\\n      font-size: 12px;\\n      color: #999;\\n      margin-top: 20px;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n      <h1>Research Report: {{ $('Generate PDF HTML').item.json.topic }}</h1>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <p>Dear Emma,</p>\\n      <p>I hope this email finds you well. I am pleased to share with you a comprehensive research report on \\\"<strong>\\n{{ $('Generate PDF HTML').item.json.topic }}</strong>\\\", generated on <strong>{{ $('Generate PDF HTML').item.json.formattedDate }}</strong>.</p>\\n      <p>This report provides an in-depth analysis, including a detailed introduction, summary, key findings, news highlights, scholarly insights, and a Wikipedia summary, all supported by credible sources. It is designed to offer valuable insights and actionable information to support your research, decision-making, or project needs.</p>\\n      <p>Please find the report attached as a PDF for your review. Should you have any questions, require further details, or wish to discuss the findings, feel free to reach out—I’d be happy to assist.</p>\\n      <p>Thank you for your interest, and I look forward to your feedback.</p>\\n    </div>\\n    <div class=\\\"signature\\\">\\n      <p>Best regards,</p>\\n      <p>Emma</p>\\n    \\n    </div>\\n    <div class=\\\"footer\\\">\\n      <p>Generated by Em | © 2025</p>\\n    </div>\\n  </div>\\n</body>\\n</html>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\",\"options\":{\"attachmentsUi\":{\"attachmentsBinary\":[{}]},\"appendAttribution\":false},\"subject\":\"=Research Report: {{ $('Query Refiner').first().json.output.topic.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ') }}\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"EGZrlZO8SHs37XwL\",\"name\":\"Gmail Email \"}},\"typeVersion\":2.1},{\"id\":\"438acbf5-5609-4c89-8448-c248e5d9bcaf\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-40,-220],\"parameters\":{},\"typeVersion\":1},{\"id\":\"9545380e-e0aa-405c-9230-eb89354b6775\",\"name\":\"Send PDF\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[2800,-340],\"webhookId\":\"1b2f4bf7-8838-48db-ae75-e50c2a18b815\",\"parameters\":{\"chatId\":\"1274041539\",\"operation\":\"sendDocument\",\"binaryData\":true,\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"0BctZPpJYxRsKfET\",\"name\":\"Telegram Airbnb A\"}},\"typeVersion\":1.2},{\"id\":\"0c0e336e-12f7-4fa2-b375-c3fcc6630f7e\",\"name\":\"Executed by Main AI Agent\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[-40,-420],\"parameters\":{\"inputSource\":\"passthrough\"},\"typeVersion\":1.1},{\"id\":\"c12851da-98dd-4785-8dc2-844bedfd5f1e\",\"name\":\"Search Folder\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[2500,-720],\"parameters\":{\"filter\":{},\"options\":{},\"resource\":\"fileFolder\",\"queryString\":\"=name='Research Reports'\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"9wskupj06ArN8KFy\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"c8f7d2db-f5b2-4e6d-8c43-2d37e5a9306a\",\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[2700,-720],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"14231a0f-aae8-4e31-af03-b7a1da1cbc3d\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $node[\\\"Google Drive\\\"].json.length > 0 }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2}],\"active\":false,\"pinData\":{\"When clicking ‘Test workflow’\":[{\"json\":{\"query\":\"Facts about Thailand\"}}]},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"e51160d8-0107-48ec-ad91-54843134df2c\",\"connections\":{\"SerpApi\":{\"ai_tool\":[[{\"node\":\"Research AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Aggregate\":{\"main\":[[{\"node\":\"Store Research Metadata\",\"type\":\"main\",\"index\":0},{\"node\":\"Generate PDF HTML\",\"type\":\"main\",\"index\":0}]]},\"Split Out\":{\"main\":[[{\"node\":\"Merge Split Items\",\"type\":\"main\",\"index\":0}]]},\"Wikipedia\":{\"ai_tool\":[[{\"node\":\"Research AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Search News\":{\"ai_tool\":[[{\"node\":\"Research AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Download PDF\":{\"main\":[[{\"node\":\"Send Research to Gmail\",\"type\":\"main\",\"index\":0},{\"node\":\"Send PDF\",\"type\":\"main\",\"index\":0}]]},\"Query Refiner\":{\"main\":[[{\"node\":\"Research AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Search Folder\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]},\"Simple Memory\":{\"ai_memory\":[[{\"node\":\"Research AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Input Validation\":{\"main\":[[{\"node\":\"Query Refiner\",\"type\":\"main\",\"index\":0}]]},\"Generate PDF HTML\":{\"main\":[[{\"node\":\"Convert HTML to PDF\",\"type\":\"main\",\"index\":0}]]},\"Google Search Web\":{\"ai_tool\":[[{\"node\":\"Research AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Merge Split Items\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Research AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Research AI Agent\":{\"main\":[[{\"node\":\"Parse Research Output\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"Query Refiner\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Convert HTML to PDF\":{\"main\":[[{\"node\":\"Download PDF\",\"type\":\"main\",\"index\":0},{\"node\":\"Search Folder\",\"type\":\"main\",\"index\":0}]]},\"Parse Research Output\":{\"main\":[[{\"node\":\"Split Out\",\"type\":\"main\",\"index\":0}]]},\"Send Research to Gmail\":{\"main\":[[]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Query Refiner\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Executed by Main AI Agent\":{\"main\":[[]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Input Validation\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# Automated Research Report Generation with OpenAI, Wikipedia, Google Search, Gmail/Telegram and PDF Output\n\n* * *\n\n## Description\n\n### What Problem Does This Solve? 🛠️\n\nThis workflow automates the process of **generating professional research reports** for researchers, students, and professionals. It eliminates manual research and report formatting by aggregating data, generating content with AI, and delivering the report as a PDF via Gmail or Telegram. **Target audience** : Researchers, students, educators, and professionals needing quick, formatted research reports.\n\n### What Does It Do? 🌟\n\n  * Aggregates research data from Wikipedia, Google Search, and SerpApi.\n  * Refines user queries and generates structured content using OpenAI.\n  * Converts the content into a professional HTML report, then to PDF.\n  * Sends the PDF report via Gmail or Telegram.\n\n\n\n### Key Features 📋\n\n  * Real-time data aggregation from multiple sources.\n  * AI-driven content generation with OpenAI.\n  * Automated HTML-to-PDF conversion for professional reports.\n  * Flexible delivery via Gmail or Telegram.\n  * Error handling for robust execution.\n\n\n\n* * *\n\n## Setup Instructions\n\n### Prerequisites ⚙️\n\n  * **n8n Instance** : Self-hosted or cloud n8n instance.\n  * **API Credentials** : \n    * **OpenAI API** : API key with GPT model access, stored in n8n credentials.\n    * **SerpApi (Google Search)** : API key from SerpApi, stored in n8n credentials (do not hardcode in nodes).\n    * **Gmail API** : Credentials from Google Cloud Console with Gmail scope.\n    * **Telegram API** : Bot token from BotFather on Telegram.\n\n\n\n### Installation Steps 📦\n\n  1. **Import the Workflow** : \n     * Copy the workflow JSON from the \"Template Code\" section below.\n     * Import it into n8n via \"Import from File\" or \"Import from URL\".\n  2. **Configure Credentials** : \n     * Add API credentials in n8n’s Credentials section for OpenAI, SerpApi, Gmail, and Telegram.\n     * Assign credentials to respective nodes. For example: \n       * In the `SerpApi Google Search` node, use n8n credentials for SerpApi: `api_key={{ $credentials.SerpApiKey }}`.\n       * In the `Send Research PDF on Gmail` node, use Gmail credentials.\n       * In the `Send PDF to Telegram` node, use Telegram bot credentials.\n  3. **Set Up Nodes** : \n     * **OpenAI Nodes** (`Research AI Agent`, `OpenAI Chat Model`, `OpenAI Chat Middle Memory`): Update the model (e.g., `gpt-4o`) and prompt as needed.\n     * **Input Validation** (`Input Validation` node): Ensure your input query format matches the expected structure (e.g., `topic: \"AI ethics\"`).\n     * **Delivery Options** (`Send Research PDF on Gmail`, `Send PDF to Telegram`): Configure recipient email or Telegram chat ID.\n  4. **Test the Workflow** : \n     * Run the workflow by clicking the \"Test Workflow\" node.\n     * Verify that the research report PDF is generated and sent via Gmail or Telegram.\n\n\n\n* * *\n\n## How It Works\n\n### High-Level Steps 🔍\n\n  * **Query Refinement** : Refines the input query for better research.\n  * **Aggregate Data** : Fetches data from Wikipedia, Google Search, and SerpApi.\n  * **Generate Report** : Uses OpenAI to create a structured report.\n  * **Convert to PDF** : Converts the report to HTML, then PDF.\n  * **Deliver Report** : Sends the PDF via Gmail or Telegram.\n\n\n\n_Detailed descriptions are available in the sticky notes within the workflow screenshot above._\n\n* * *\n\n## Node Names and Actions\n\n### Research and Report Generation\n\n  * `Test Workflow`: Triggers the workflow for testing.\n  * `Input Validation`: Validates the input query.\n  * `Query Refiner`: Refines the query for better results.\n  * `Research AI Agent`: Coordinates research using OpenAI.\n  * `OpenAI Chat Model`: Generates content for the report.\n  * `Structured Output Parser`: Parses OpenAI output into structured data.\n  * `OpenAI Chat Middle Memory`: Retains context during research.\n  * `Wikipedia Google Search`: Fetches data from Wikipedia.\n  * `SerpApi Google Search`: Fetches data via SerpApi.\n  * `Merge Split Items`: Merges data from multiple sources.\n  * `Aggregate`: Aggregates all research data.\n  * `Generate PDF HTML`: Creates an HTML report.\n  * `Convert HTML to PDF`: Converts HTML to PDF.\n  * `Download PDF`: Downloads the PDF file.\n  * `Send PDF to Telegram`: Sends the PDF via Telegram.\n  * `Send Research PDF on Gmail`: Sends the PDF via Gmail.\n\n\n\n* * *\n\n## Customization Tips\n\n  * **Expand Data Sources** 📡: Add more sources (e.g., academic databases) by adding nodes to `Merge Split Items`.\n  * **Change Report Style** ✍️: Update the `Generate PDF HTML` node to modify the HTML template (e.g., adjust styling or sections).\n  * **Alternative Delivery** 📧: Add nodes to send the PDF via other platforms (e.g., Slack).\n  * **Adjust AI Model** 🧠: Modify the `OpenAI Chat Model` node to use a different model (e.g., `gpt-3.5-turbo`).\n\n\n\n* * *\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h1>Automated Research Report Generation with OpenAI, Wikipedia, Google Search, Gmail/Telegram and PDF Output</h1>\n<hr>\n<h2>Description</h2>\n<h3>What Problem Does This Solve? 🛠️</h3>\n<p>This workflow automates the process of <strong>generating professional research reports</strong> for researchers, students, and professionals. It eliminates manual research and report formatting by aggregating data, generating content with AI, and delivering the report as a PDF via Gmail or Telegram. <strong>Target audience</strong>: Researchers, students, educators, and professionals needing quick, formatted research reports.</p>\n<h3>What Does It Do? 🌟</h3>\n<ul>\n<li>Aggregates research data from Wikipedia, Google Search, and SerpApi.</li>\n<li>Refines user queries and generates structured content using OpenAI.</li>\n<li>Converts the content into a professional HTML report, then to PDF.</li>\n<li>Sends the PDF report via Gmail or Telegram.</li>\n</ul>\n<h3>Key Features 📋</h3>\n<ul>\n<li>Real-time data aggregation from multiple sources.</li>\n<li>AI-driven content generation with OpenAI.</li>\n<li>Automated HTML-to-PDF conversion for professional reports.</li>\n<li>Flexible delivery via Gmail or Telegram.</li>\n<li>Error handling for robust execution.</li>\n</ul>\n<hr>\n<h2>Setup Instructions</h2>\n<h3>Prerequisites ⚙️</h3>\n<ul>\n<li><strong>n8n Instance</strong>: Self-hosted or cloud n8n instance.</li>\n<li><strong>API Credentials</strong>:\n<ul>\n<li><strong>OpenAI API</strong>: API key with GPT model access, stored in n8n credentials.</li>\n<li><strong>SerpApi (Google Search)</strong>: API key from SerpApi, stored in n8n credentials (do not hardcode in nodes).</li>\n<li><strong>Gmail API</strong>: Credentials from Google Cloud Console with Gmail scope.</li>\n<li><strong>Telegram API</strong>: Bot token from BotFather on Telegram.</li>\n</ul>\n</li>\n</ul>\n<h3>Installation Steps 📦</h3>\n<ol>\n<li><strong>Import the Workflow</strong>:\n<ul>\n<li>Copy the workflow JSON from the \"Template Code\" section below.</li>\n<li>Import it into n8n via \"Import from File\" or \"Import from URL\".</li>\n</ul>\n</li>\n<li><strong>Configure Credentials</strong>:\n<ul>\n<li>Add API credentials in n8n’s Credentials section for OpenAI, SerpApi, Gmail, and Telegram.</li>\n<li>Assign credentials to respective nodes. For example:\n<ul>\n<li>In the <code>SerpApi Google Search</code> node, use n8n credentials for SerpApi: <code>api_key={{ $credentials.SerpApiKey }}</code>.</li>\n<li>In the <code>Send Research PDF on Gmail</code> node, use Gmail credentials.</li>\n<li>In the <code>Send PDF to Telegram</code> node, use Telegram bot credentials.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Set Up Nodes</strong>:\n<ul>\n<li><strong>OpenAI Nodes</strong> (<code>Research AI Agent</code>, <code>OpenAI Chat Model</code>, <code>OpenAI Chat Middle Memory</code>): Update the model (e.g., <code>gpt-4o</code>) and prompt as needed.</li>\n<li><strong>Input Validation</strong> (<code>Input Validation</code> node): Ensure your input query format matches the expected structure (e.g., <code>topic: \"AI ethics\"</code>).</li>\n<li><strong>Delivery Options</strong> (<code>Send Research PDF on Gmail</code>, <code>Send PDF to Telegram</code>): Configure recipient email or Telegram chat ID.</li>\n</ul>\n</li>\n<li><strong>Test the Workflow</strong>:\n<ul>\n<li>Run the workflow by clicking the \"Test Workflow\" node.</li>\n<li>Verify that the research report PDF is generated and sent via Gmail or Telegram.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2>How It Works</h2>\n<h3>High-Level Steps 🔍</h3>\n<ul>\n<li><strong>Query Refinement</strong>: Refines the input query for better research.</li>\n<li><strong>Aggregate Data</strong>: Fetches data from Wikipedia, Google Search, and SerpApi.</li>\n<li><strong>Generate Report</strong>: Uses OpenAI to create a structured report.</li>\n<li><strong>Convert to PDF</strong>: Converts the report to HTML, then PDF.</li>\n<li><strong>Deliver Report</strong>: Sends the PDF via Gmail or Telegram.</li>\n</ul>\n<p><em>Detailed descriptions are available in the sticky notes within the workflow screenshot above.</em></p>\n<hr>\n<h2>Node Names and Actions</h2>\n<h3>Research and Report Generation</h3>\n<ul>\n<li><code>Test Workflow</code>: Triggers the workflow for testing.</li>\n<li><code>Input Validation</code>: Validates the input query.</li>\n<li><code>Query Refiner</code>: Refines the query for better results.</li>\n<li><code>Research AI Agent</code>: Coordinates research using OpenAI.</li>\n<li><code>OpenAI Chat Model</code>: Generates content for the report.</li>\n<li><code>Structured Output Parser</code>: Parses OpenAI output into structured data.</li>\n<li><code>OpenAI Chat Middle Memory</code>: Retains context during research.</li>\n<li><code>Wikipedia Google Search</code>: Fetches data from Wikipedia.</li>\n<li><code>SerpApi Google Search</code>: Fetches data via SerpApi.</li>\n<li><code>Merge Split Items</code>: Merges data from multiple sources.</li>\n<li><code>Aggregate</code>: Aggregates all research data.</li>\n<li><code>Generate PDF HTML</code>: Creates an HTML report.</li>\n<li><code>Convert HTML to PDF</code>: Converts HTML to PDF.</li>\n<li><code>Download PDF</code>: Downloads the PDF file.</li>\n<li><code>Send PDF to Telegram</code>: Sends the PDF via Telegram.</li>\n<li><code>Send Research PDF on Gmail</code>: Sends the PDF via Gmail.</li>\n</ul>\n<hr>\n<h2>Customization Tips</h2>\n<ul>\n<li><strong>Expand Data Sources</strong> 📡: Add more sources (e.g., academic databases) by adding nodes to <code>Merge Split Items</code>.</li>\n<li><strong>Change Report Style</strong> ✍️: Update the <code>Generate PDF HTML</code> node to modify the HTML template (e.g., adjust styling or sections).</li>\n<li><strong>Alternative Delivery</strong> 📧: Add nodes to send the PDF via other platforms (e.g., Slack).</li>\n<li><strong>Adjust AI Model</strong> 🧠: Modify the <code>OpenAI Chat Model</code> node to use a different model (e.g., <code>gpt-3.5-turbo</code>).</li>\n</ul>\n<hr>\n</div><!--]-->",
  "readme_zh": "# 基于OpenAI、维基百科、谷歌搜索、Gmail/Telegram和PDF输出的自动化研究报告生成\n\n* * *\n\n## 项目说明\n\n### 解决什么问题？ 🛠️  \n本工作流为研究人员、学生和专业人士提供**自动化生成专业研究报告**的解决方案。通过整合数据源、AI生成内容并输出PDF报告至邮箱或Telegram，彻底告别手动搜集资料和排版困扰。**目标用户**：需要快速获取格式化研究报告的科研人员、学生、教育工作者及专业人士。\n\n### 核心功能 🌟  \n- 从维基百科、谷歌搜索和SerpApi聚合研究数据  \n- 使用OpenAI优化查询并生成结构化内容  \n- 将内容转换为专业HTML报告并生成PDF  \n- 通过Gmail或Telegram发送PDF报告  \n\n### 关键特性 📋  \n- 多源实时数据聚合  \n- OpenAI驱动的智能内容生成  \n- 自动化HTML转PDF专业排版  \n- 支持Gmail/Telegram双通道交付  \n- 完善的错误处理机制  \n\n* * *\n\n## 配置指南\n\n### 环境准备 ⚙️  \n- **n8n环境**：自建或云端n8n实例  \n- **API凭证**：  \n  - **OpenAI API**：具有GPT模型访问权限的API密钥（存储于n8n凭证管理）  \n  - **SerpApi（谷歌搜索）**：SerpApi提供的API密钥（切勿直接写在节点中）  \n  - **Gmail API**：谷歌云控制台获取带Gmail权限的凭证  \n  - **Telegram API**：通过BotFather获取机器人令牌  \n\n### 安装步骤 📦  \n1. **导入工作流**：  \n   - 复制下方\"模板代码\"中的JSON  \n   - 通过n8n的\"文件导入\"或\"URL导入\"功能加载  \n2. **配置凭证**：  \n   - 在n8n凭证管理中添加OpenAI、SerpApi、Gmail和Telegram的API凭证  \n   - 为各节点分配凭证（示例）：  \n     - `SerpApi谷歌搜索`节点使用：`api_key={{ $credentials.SerpApiKey }}`  \n     - `通过Gmail发送报告`节点配置Gmail凭证  \n     - `发送PDF到Telegram`节点配置Telegram机器人凭证  \n3. **节点设置**：  \n   - **OpenAI节点**（研究AI代理/聊天模型/记忆中间件）：按需更新模型（如`gpt-4o`）和提示词  \n   - **输入验证**：确保查询格式符合要求（如`topic: \"AI伦理\"`）  \n   - **交付设置**：配置收件邮箱或Telegram聊天ID  \n4. **测试运行**：  \n   - 点击\"测试工作流\"节点试运行  \n   - 验证PDF报告是否生成并通过指定渠道送达  \n\n* * *\n\n## 工作原理\n\n### 核心流程 🔍  \n1. **查询优化**：精炼用户输入的研究主题  \n2. **数据聚合**：从维基百科/谷歌搜索/SerpApi获取资料  \n3. **报告生成**：调用OpenAI创建结构化内容  \n4. **PDF转换**：将HTML报告转为PDF格式  \n5. **报告交付**：通过Gmail或Telegram发送  \n\n_工作流截图中的便签注释包含各环节详细说明_\n\n* * *\n\n## 节点功能说明\n\n### 研究与报告生成  \n- `测试工作流`：触发工作流测试  \n- `输入验证`：校验查询格式  \n- `查询优化器`：提升搜索精准度  \n- `研究AI代理`：协调研究过程  \n- `OpenAI聊天模型`：生成报告内容  \n- `结构化输出解析`：格式化AI输出  \n- `OpenAI记忆中间件`：保持研究上下文  \n- `维基百科搜索`：获取维基数据  \n- `SerpApi谷歌搜索`：调用API搜索  \n- `合并拆分项`：整合多源数据  \n- `数据聚合`：汇总研究材料  \n- `生成PDFHTML`：创建HTML模板  \n- `HTML转PDF`：格式转换  \n- `下载PDF`：获取PDF文件  \n- `发送到Telegram`：Telegram交付  \n- `通过Gmail发送`：邮件交付  \n\n* * *\n\n## 定制建议\n\n- **扩展数据源** 📡：在`合并拆分项`节点添加学术数据库等新来源  \n- **修改报告样式** ✍️：调整`生成PDFHTML`节点的HTML模板（样式/版块）  \n- **新增交付渠道** 📧：集成Slack等其他平台发送功能  \n- **更换AI模型** 🧠：在`OpenAI聊天模型`节点切换模型（如`gpt-3.5-turbo`）  \n\n* * *",
  "title_zh": "AI自动化研究报告生成，集成维基、搜索及Gmail/Telegram功能",
  "publish_date_zh": "最后更新于9天前",
  "workflow_json_zh": "{\"id\": \"EOJfPcM9PPWI1Rmp\", \"meta\": {\"instanceId\": \"3aaeb6eaba3494bbdbe57e25fa3d02783cfbc460b1e823f7b741cf26edc7ca3d\", \"templateCredsSetupCompleted\": true}, \"name\": \"基于OpenAI、维基百科、谷歌搜索及Gmail/Telegram的自动化研究报告生成\", \"tags\": [], \"nodes\": [{\"id\": \"46c09535-cd6b-481c-b520-67ecb4aad812\", \"name\": \"OpenAI 聊天模型\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [776, -100], \"parameters\": {\"model\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4o-mini\"}, \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"WLM64KJjQFXGWGWi\", \"name\": \"OpenAi account N8N\"}}, \"typeVersion\": 1.2}, {\"id\": \"574ec863-e557-4196-b1b9-5c275a7de73a\", \"name\": \"简单记忆\", \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\", \"position\": [896, -100], \"parameters\": {\"sessionKey\": \"= {{ $json.output.searchQueries }}\", \"sessionIdType\": \"自定义键\"}, \"typeVersion\": 1.3}, {\"id\": \"661349c2-7bb1-4c95-af8f-3a108a619c84\", \"name\": \"搜索新闻\", \"type\": \"@n8n/n8n-nodes-langchain.toolHttpRequest\", \"position\": [1016, -100], \"parameters\": {\"url\": \"https://newsapi.org/v2/everything?q={{ encodeURIComponent($input.cleanedQuery) }}&apiKey=\\\"您的API密钥\\\"\", \"sendQuery\": true, \"parametersQuery\": {\"values\": [{\"name\": \"q\"}, {\"name\": \"pageSize\", \"value\": \"3\", \"valueProvider\": \"fieldValue\"}, {\"name\": \"sortBy\", \"value\": \"publishedAt\", \"valueProvider\": \"fieldValue\"}, {\"name\": \"language\", \"value\": \"en\", \"valueProvider\": \"fieldValue\"}]}, \"toolDescription\": \"获取最近的新闻文章\", \"optimizeResponse\": true}, \"typeVersion\": 1.1}, {\"id\": \"6d43251f-db88-45fa-be65-de368d4db408\", \"name\": \"维基百科\", \"type\": \"@n8n/n8n-nodes-langchain.toolHttpRequest\", \"position\": [1136, -100], \"parameters\": {\"url\": \"https://zh.wikipedia.org/w/api.php?action=query&format=json&prop=extracts&exintro&explaintext&titles={{ $input.query ? encodeURIComponent($input.query) : encodeURIComponent($json.refined_query) }}\", \"sendQuery\": true, \"parametersQuery\": {\"values\": [{\"name\": \"action\", \"valueProvider\": \"modelOptional\"}, {\"name\": \"prop\", \"value\": \"extracts\", \"valueProvider\": \"fieldValue\"}]}, \"toolDescription\": \"从维基百科获取结构化数据\", \"optimizeResponse\": true}, \"typeVersion\": 1.1}, {\"id\": \"c94b1446-82bf-47c8-8f5d-c5da9a43a7e7\", \"name\": \"OpenAI 聊天模型1\", \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\", \"position\": [380, -80], \"parameters\": {\"model\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gpt-4o-mini\"}, \"options\": {}}, \"credentials\": {\"openAiApi\": {\"id\": \"WLM64KJjQFXGWGWi\", \"name\": \"OpenAi account N8N\"}}, \"typeVersion\": 1.2}, {\"id\": \"834efc04-b05f-4ddc-a8d9-b93d9c4e099a\", \"name\": \"查询优化器\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [400, -320], \"parameters\": {\"text\": \"{\\n  \\\"topic\\\": \\\"人工智能在医疗诊断与治疗中的应用\\\",\\n  \\\"searchQueries\\\": [\\n    \\\"2025年AI在医学影像诊断中的最新进展\\\",\\n    \\\"人工智能制定个性化治疗方案的成功案例\\\",\\n    \\\"医疗AI诊断系统面临的伦理与法律挑战\\\",\\n    \\\"深度学习技术在癌症早期筛查中的应用研究\\\",\\n    \\\"三甲医院部署AI辅助诊疗系统的实施效果分析\\\"\\n  ]\\n}\", \"options\": {}, \"promptType\": \"定义\", \"hasOutputParser\": true}, \"typeVersion\": 1.8}, {\"id\": \"1f83e2d8-23ee-46e2-998a-b644ea0fff3c\", \"name\": \"研究AI代理\", \"type\": \"@n8n/n8n-nodes-langchain.agent\", \"position\": [900, -320], \"parameters\": {\"text\": \"对主题“{{ $json.output.topic }}”进行研究  \\n\\n使用以下搜索查询：{{ $json.output.searchQueries.join(\\\",\\\") }}\", \"options\": {\"systemMessage\": \"=You are a research assistant named \\\"ResearchBot\\\". Your role is to perform thorough and comprehensive research based on the topic and search queries provided. Follow these steps to gather data:\\n- Search the web for general information using the provided topic and queries, focusing on recent trends, developments, and applications (2024-2025).\\n- Search Wikipedia for foundational knowledge about the topic to provide context.\\n- Search for recent news articles (from 2024-2025) to identify current developments, announcements, and trends.\\n- Search Google Scholar for academic papers (from 2020-2025) to gather scholarly insights and research findings.\\n- Summarize and aggregate all findings into a structured JSON format.\\n- Ensure all data is directly relevant to the topic:  {{ $json.output.topic }}.\\nReturn the research findings as a raw JSON object with the following structure:\\n{\\n  \\\"introduction\\\": \\\"A detailed 4-6 sentence introduction to the topic, providing context, significance, and a brief overview of current trends.\\\",\\n  \\\"summary\\\": \\\"A comprehensive 6-8 sentence summary of the key findings, covering trends, challenges, opportunities, and notable applications.\\\",\\n  \\\"key_findings\\\": [\\\"A list of 8-12 specific key points or trends, each as a concise sentence. This must always be an array with at least 8 items.\\\"],\\n  \\\"news_highlights\\\": [\\\"A list of 4-6 recent news headlines with sources (from 2024-2025), each in the format 'Headline - Source, Year'. This must always be an array with at least 4 items.\\\"],\\n  \\\"scholarly_insights\\\": [\\\"A list of 4-6 insights from academic papers with sources (from 2020-2025), each in the format 'Insight (Author et al., Year, Journal)'. This must always be an array with at least 4 items.\\\"],\\n  \\\"wikipedia_summary\\\": \\\"A detailed 4-6 sentence summary of foundational knowledge from Wikipedia, providing background and historical context on the topic.\\\",\\n  \\\"sources\\\": [\\\"A list of all source URLs (at least 8-12 unique, relevant sources, including web articles, news, and academic papers). This must always be an array with at least 8 items.\\\"]\\n}\\nIf insufficient data is found for any field, perform additional searches using variations of the topic and queries to meet the minimum requirements. For example:\\n- For news, search for terms like \\\"[topic] 2025 news\\\", \\\"[topic] recent developments\\\", or \\\"[topic] industry trends\\\".\\n- For scholarly insights, search for \\\"[topic] machine learning 2020-2025\\\", \\\"[topic] applications research\\\", or \\\"[topic] ethical concerns\\\".\\n- For sources, ensure a mix of web articles, news, and academic papers.\\nDo NOT include irrelevant information or sources. Do NOT wrap the JSON in a string, an \\\"output\\\" field, or any Markdown formatting (e.g., ```json). Return only the raw JSON object.\\n\\n\\nTopic: {{ $json.output.topic }}\\nSearch Queries: {{ $json.output.searchQueries }}\"}, \"promptType\": \"定义\"}, \"typeVersion\": 1.8}, {\"id\": \"a53cfaac-425a-4558-a661-1042cb63599d\", \"name\": \"谷歌网页搜索\", \"type\": \"@n8n/n8n-nodes-langchain.toolHttpRequest\", \"position\": [1256, -100], \"parameters\": {\"url\": \"https://www.googleapis.com/customsearch/v1?key=\\\"您的API密钥\\\"={{ encodeURIComponent($输入.查询) }}\", \"sendQuery\": true, \"parametersQuery\": {\"values\": [{\"name\": \"num\", \"value\": \"5\", \"valueProvider\": \"fieldValue\"}]}, \"toolDescription\": \"使用谷歌自定义搜索API搜索指定查询\", \"optimizeResponse\": true}, \"typeVersion\": 1.1}, {\"id\": \"27548bf6-7f86-4e38-befb-3ad55c4d6c46\", \"name\": \"SerpApi\", \"type\": \"@n8n/n8n-nodes-langchain.toolHttpRequest\", \"position\": [1376, -100], \"parameters\": {\"url\": \"https://serpapi.com/search?engine=google_scholar&q={{ encodeURIComponent( $json.refined_query ) }}&api_key=\\\"您的API密钥\\\"\", \"sendQuery\": true, \"authentication\": \"预定义凭证类型\", \"parametersQuery\": {\"values\": [{\"name\": \"num\", \"value\": \"3\", \"valueProvider\": \"fieldValue\"}]}, \"toolDescription\": \"在Google学术上搜索学术论文\", \"optimizeResponse\": true, \"nodeCredentialType\": \"serpApi\"}, \"credentials\": {\"serpApi\": {\"id\": \"9LoJ3XtPiLBGUI5W\", \"name\": \"SerpAPI account\"}}, \"typeVersion\": 1.1}, {\"id\": \"51c1b9be-a3e1-4a93-bb5c-bbde5919de0c\", \"name\": \"结构化输出解析器\", \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\", \"position\": [580, -80], \"parameters\": {\"jsonSchemaExample\": \"{\\n  \\\"output\\\": {\\n    \\\"topic\\\": \\\"2025年最佳AI模型\\\",\\n    \\\"searchQueries\\\": [\\n      \\\"2025年最佳自然语言处理AI模型\\\",\\n      \\\"2025年顶尖计算机视觉AI模型\\\",\\n      \\\"2025年最佳生成式AI模型\\\",\\n      \\\"2025年AI模型最新进展新闻\\\",\\n      \\\"2020-2025年AI模型学术研究\\\",\\n      \\\"2025年AI模型伦理问题\\\",\\n      \\\"2025年AI模型在医疗健康领域的应用\\\",\\n      \\\"2025年AI模型自动化趋势\\\"\\n    ]\\n  }\\n}\"}, \"typeVersion\": 1.2}, {\"id\": \"2d30f75e-baa0-4dd3-a0f9-cb74d7272d08\", \"name\": \"拆分出来\", \"type\": \"n8n-nodes-base.splitOut\", \"position\": [1500, -320], \"parameters\": {\"options\": {}, \"fieldToSplitOut\": \"介绍、摘要、关键发现、新闻亮点、学术见解、维基百科摘要、来源\"}, \"typeVersion\": 1}, {\"id\": \"b89d5c35-64c4-4e8c-b432-c2219aba8acc\", \"name\": \"输入验证\", \"type\": \"n8n-nodes-base.code\", \"position\": [180, -320], \"parameters\": {\"jsCode\": \"// 验证输入并准备处理流程\\nconst query = $input.all()[0].json.query;\\n\\nif (!query || query.trim().length < 3) {\\n  throw new Error('研究查询内容长度必须至少为3个字符');\\n}\\n\\nreturn {\\n  json: {\\n    originalQuery: query,\\n    cleanedQuery: query.trim().toLowerCase(),\\n    timestamp: new Date().toISOString()\\n  }\\n};\"}, \"typeVersion\": 2}, {\"id\": \"e34f9b0e-a9ca-4011-bfee-c7845c68942b\", \"name\": \"解析研究成果\", \"type\": \"n8n-nodes-base.code\", \"position\": [1300, -320], \"parameters\": {\"jsCode\": \"// 从研究AI代理获取输出字符串\\nconst outputString = $input.first().json.output;\\n\\n// 将字符串解析为JSON对象\\nconst parsedOutput = JSON.parse(outputString);\\n\\n// 将解析后的JSON作为单个项返回\\nreturn [{\\n  json: parsedOutput\\n}];\"}, \"typeVersion\": 2}, {\"id\": \"f4e6e449-1c56-4500-9701-623620360c83\", \"name\": \"合并拆分项\", \"type\": \"n8n-nodes-base.code\", \"position\": [1700, -320], \"parameters\": {\"jsCode\": \"const mergedItem = {\\n  key_findings: [],\\n  news_highlights: [],\\n  scholarly_insights: [],\\n  sources: []\\n};\\n\\n$input.all().forEach(item => {\\n  const data = item.json;\\n\\n  if (data.introduction) mergedItem.introduction = data.introduction;\\n  if (data.summary) mergedItem.summary = data.summary;\\n  if (data.wikipedia_summary) mergedItem.wikipedia_summary = data.wikipedia_summary;\\n\\n  if (data.key_findings) {\\n    const findingsToAdd = Array.isArray(data.key_findings) ? data.key_findings : [data.key_findings];\\n    mergedItem.key_findings = mergedItem.key_findings.concat(findingsToAdd);\\n  }\\n  if (data.news_highlights) {\\n    const highlightsToAdd = Array.isArray(data.news_highlights) ? data.news_highlights : [data.news_highlights];\\n    mergedItem.news_highlights = mergedItem.news_highlights.concat(highlightsToAdd);\\n  }\\n  if (data.scholarly_insights) {\\n    const insightsToAdd = Array.isArray(data.scholarly_insights) ? data.scholarly_insights : [data.scholarly_insights];\\n    mergedItem.scholarly_insights = mergedItem.scholarly_insights.concat(insightsToAdd);\\n  }\\n  if (data.sources) {\\n    const sourcesToAdd = Array.isArray(data.sources) ? data.sources : [data.sources];\\n    mergedItem.sources = mergedItem.sources.concat(sourcesToAdd);\\n  }\\n});\\n\\nreturn [{ json: mergedItem }];\"}, \"typeVersion\": 2}, {\"id\": \"e63a3f5d-dba7-4fc4-afa0-150e63aedbac\", \"name\": \"存储研究元数据\", \"type\": \"n8n-nodes-base.googleSheets\", \"position\": [2100, -720], \"parameters\": {\"columns\": {\"value\": {\"Topic\": \"={{ $json.topic }}\", \"Sources\": \"={{ $json.sources }}\", \"Timestamp\": \"={{ $json.timestamp }}\", \"Search Queries\": \"={{ $json.searchQueries }}\"}, \"schema\": [{\"id\": \"Topic\", \"type\": \"string\", \"display\": true, \"required\": false, \"displayName\": \"Topic\", \"defaultMatch\": false, \"canBeUsedToMatch\": true}, {\"id\": \"Search Queries\", \"type\": \"string\", \"display\": true, \"required\": false, \"displayName\": \"Search Queries\", \"defaultMatch\": false, \"canBeUsedToMatch\": true}, {\"id\": \"Sources\", \"type\": \"string\", \"display\": true, \"required\": false, \"displayName\": \"Sources\", \"defaultMatch\": false, \"canBeUsedToMatch\": true}, {\"id\": \"Timestamp\", \"type\": \"string\", \"display\": true, \"required\": false, \"displayName\": \"Timestamp\", \"defaultMatch\": false, \"canBeUsedToMatch\": true}], \"mappingMode\": \"defineBelow\", \"matchingColumns\": [], \"attemptToConvertTypes\": false, \"convertFieldsToString\": false}, \"options\": {}, \"operation\": \"追加\", \"sheetName\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"gid=0\", \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/196eJesF2ke3AQjoWvave51m6FltAyBFj5pvVW7wIsUA/edit#gid=0\", \"cachedResultName\": \"Sheet1\"}, \"documentId\": {\"__rl\": true, \"mode\": \"list\", \"value\": \"196eJesF2ke3AQjoWvave51m6FltAyBFj5pvVW7wIsUA\", \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/196eJesF2ke3AQjoWvave51m6FltAyBFj5pvVW7wIsUA/edit?usp=drivesdk\", \"cachedResultName\": \"Research AI Agent Records\"}}, \"credentials\": {\"googleSheetsOAuth2Api\": {\"id\": \"PRTItuUGXlUOvF9a\", \"name\": \"Google Sheets account\"}}, \"typeVersion\": 4.5}, {\"id\": \"2501bc98-a1b4-473b-b4ac-7fd78efcb6be\", \"name\": \"便利贴\", \"type\": \"n8n-nodes-base.stickyNote\", \"position\": [-1080, -1200], \"parameters\": {\"color\": 6, \"width\": 2900, \"height\": 1600, \"content\": \"# 📋 研究报告生成流程 🧠💻\\n\\n本流程可生成指定主题的专业PDF研究报告，并通过Telegram发送及邮件传送🚀\\n\\n---\\n\\n## 🔍 **查询优化器**\\n- **功能**：优化输入主题以提高可读性 🧹\\n- **输入**：来自HTTP请求的主题（如\\\"the best ai models 2025\\\"）\\n- **输出**：格式化主题（如\\\"The Best AI Models 2025\\\"）\\n- **✨ 细节**：自动首字母大写并确保\\\"AI\\\"保持大写格式\\n\\n---\\n\\n## 📊 **研究数据汇总**\\n- **功能**：收集主题相关研究资料 📚\\n- **输入**：优化后的主题\\n- **输出**：带时间戳的研究数据（引言、摘要、关键发现等）\\n- **⏰ 说明**：时间戳用于标注报告日期\\n\\n---\\n\\n## 🔗 **合并拆分项**\\n- **功能**：将研究数据整合为结构化章节 🗂️\\n- **输入**：来自研究数据汇总的数据\\n- **输出**：包含`introduction`、`key_findings`、`sources`等章节的结构化JSON\\n- **📑 用途**：为PDF报告准备数据架构\\n\\n---\\n\\n## 📝 **生成PDF版HTML**\\n- **功能**：创建PDF报告的HTML模板 🖥️\\n- **输入**：优化主题与研究数据\\n- **输出**：HTML内容、文件名（如`research-report-the-best-ai-models-2025-2025-04-09.pdf`）及格式化日期\\n- **🎨 特性**：\\n  - 专业排版（Helvetica/Georgia字体、深蓝色点缀）\\n  - 包含封面页、引言、摘要、关键发现等章节\\n  - 自动转义特殊字符防止HTML错误\\n- **⏳ 时间戳处理**：存储`rawTimestamp`和格式化日期（如\\\"2025年4月9日\\\"）\\n\\n---\\n\\n## 📄 **HTML转PDF（PDFShift）**\\n- **功能**：通过PDFShift API将HTML转为PDF 🖨️\\n- **输入**：前序节点生成的HTML内容\\n- **输出**：包含PDF生成链接的JSON响应\\n- **🔑 要求**：需有效PDFShift API密钥\\n- **⚠️ 注意**：输出为URL链接而非PDF二进制数据\\n\\n---\\n\\n## ⬇️ **下载PDF**\\n- **功能**：从PDFShift提供的URL下载PDF 📥\\n- **输入**：HTML转PDF节点生成的URL\\n- **输出**：PDF二进制数据（MIME类型：`application/pdf`，约98KB）\\n- **📛 文件名**：沿用前序节点命名（如`research-report-the-best-ai-models-2025-2025-04-09.pdf`）\\n\\n---\\n\\n## 📱 **邮件/Telegram发送**\\n- **功能**：将PDF发送至Gmail/Telegram会话 💬\\n- **输入**：PDF二进制数据及元数据（主题、格式化日期）\\n- **输出**：将PDF作为文档发送至指定会话\\n- **📝 说明文字**：\"}, \"typeVersion\": 1}, {\"id\": \"b2219fba-c5e5-4c0e-abf2-04a8ef60b795\", \"name\": \"生成PDF HTML\", \"type\": \"n8n-nodes-base.code\", \"position\": [2120, -320], \"parameters\": {\"jsCode\": \"// HTML特殊字符转义函数\\nfunction escapeHtml(unsafe) {\\n  if (typeof unsafe !== 'string') return unsafe;\\n  return unsafe\\n    .replace(/&/g, \\\"&amp;\\\")\\n    .replace(/</g, \\\"&lt;\\\")\\n    .replace(/>/g, \\\"&gt;\\\")\\n    .replace(/\\\"/g, \\\"&quot;\\\")\\n    .replace(/'/g, \\\"&#039;\\\");\\n}\\n\\n// 从查询优化器获取主题\\nconst queryRefinerData = $('Query Refiner').first().json;\\nconsole.log('调试queryRefinerData:', JSON.stringify(queryRefinerData, null, 2));\\nconst topicRaw = queryRefinerData.output?.topic || '未命名';\\nconst topic = topicRaw.split(' ').map(word => {\\n  if (word.toLowerCase() === 'ai') return 'AI';\\n  return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\\n}).join(' ');\\n\\n// 从聚合研究数据获取时间戳\\nconst aggregateData = $input.first().json;\\nconsole.log('调试aggregateData:', JSON.stringify(aggregateData, null, 2));\\n\\n// 验证并解析时间戳\\nlet rawTimestamp = aggregateData.timestamp;\\nif (!rawTimestamp || isNaN(new Date(rawTimestamp))) {\\n  rawTimestamp = new Date().toISOString(); // 若无效则回退到当前日期\\n}\\nconst formattedDate = new Date(rawTimestamp).toLocaleDateString('zh-CN', {\\n  year: 'numeric',\\n  month: 'long',\\n  day: 'numeric'\\n});\\nconsole.log('原始时间戳:', rawTimestamp);\\nconsole.log('格式化日期:', formattedDate);\\n\\n// 从合并拆分项获取聚合研究数据\\nconst mergeSplitItems = $('Merge Split Items').first().json;\\nconsole.log('合并拆分项数据:', JSON.stringify(mergeSplitItems, null, 2));\\n\\n// 使用合并拆分项数据\\nconst data = {\\n  topic: topic,\\n  rawTimestamp: rawTimestamp, // 存储原始时间戳\\n  formattedDate: formattedDate, // 存储格式化日期\\n  introduction: mergeSplitItems.introduction,\\n  summary: mergeSplitItems.summary,\\n  key_findings: mergeSplitItems.key_findings,\\n  news_highlights: mergeSplitItems.news_highlights,\\n  scholarly_insights: mergeSplitItems.scholarly_insights,\\n  wikipedia_summary: mergeSplitItems.wikipedia_summary,\\n  sources: mergeSplitItems.sources\\n};\\n\\n// 确保数组字段为数组，若非数组则默认为空数组\\nconst keyFindings = Array.isArray(data.key_findings) ? data.key_findings : [];\\nconst newsHighlights = Array.isArray(data.news_highlights) ? data.news_highlights : [];\\nconst scholarlyInsights = Array.isArray(data.scholarly_insights) ? data.scholarly_insights : [];\\nconst sources = Array.isArray(data.sources) ? data.sources : [];\\n\\n// 基于主题定义文件名\\nconst fileName = `研究报告-${(data.topic || '未命名').replace(/\\\\s+/g, '-').toLowerCase()}-${new Date().toISOString().split('T')[0]}.pdf`;\\n\\n// 创建带有增强样式的PDF HTML模板\\nconst htmlContent = `\\n<!DOCTYPE html>\\n<html lang=\\\"zh-CN\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <title>研究报告: ${escapeHtml(data.topic)}</title>\\n  <style>\\n    @page {\\n      size: A4;\\n      margin: 0;\\n      @top-center {\\n        content: \\\"研究报告: ${escapeHtml(data.topic)}\\\";\\n        font-family: 'Helvetica', sans-serif;\\n        font-size: 10pt;\\n        color: #666;\\n      }\\n      @bottom-right {\\n        content: counter(page);\\n        font-family: 'Helvetica', sans-serif;\\n        font-size: 10pt;\\n        color: #666;\\n      }\\n    }\\n    body {\\n      font-family: 'Helvetica', 'Arial', sans-serif;\\n      margin: 0;\\n      padding: 0;\\n      color: #333;\\n      line-height: 1.6;\\n      font-size: 12pt;\\n    }\\n    .page-break {\\n      page-break-before: always;\\n    }\\n    .container {\\n      width: 90%;\\n      max-width: 800px;\\n      margin: 0 auto;\\n      padding: 40px 30px;\\n      background-color: #fff;\\n    }\\n    /* 封面页 */\\n    .cover-page {\\n      text-align: center;\\n      padding: 100px 30px;\\n      background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\\n      height: 100vh;\\n      display: flex;\\n      flex-direction: column;\\n      justify-content: center;\\n      box-sizing: border-box;\\n    }\\n    .cover-page h1 {\\n      font-family: 'Georgia', serif;\\n      font-size: 40pt;\\n      font-weight: bold;\\n      color: #1a3c5e;\\n      margin: 0;\\n      text-transform: uppercase;\\n      letter-spacing: 2px;\\n    }\\n    .cover-page p {\\n      font-size: 14pt;\\n      color: #555;\\n      margin: 20px 0;\\n      font-style: italic;\\n    }\\n    /* 页眉 */\\n    .header {\\n      border-bottom: 2px solid #1a3c5e;\\n      padding: 15px 0;\\n      text-align: center;\\n      margin-bottom: 30px;\\n    }\\n    .header h1 {\\n      font-family: 'Georgia', serif;\\n      font-size: 24pt;\\n      font-weight: bold;\\n      color: #1a3c5e;\\n      margin: 0;\\n      text-transform: uppercase;\\n    }\\n    .header p {\\n      font-size: 10pt;\\n      color: #666;\\n      margin: 5px 0 0;\\n      font-style: italic;\\n    }\\n    /* 章节 */\\n    .section {\\n      margin: 40px 0;\\n      padding-bottom: 20px;\\n      border-bottom: 1px solid #e0e0e0;\\n    }\\n    .section:last-child {\\n      border-bottom: none;\\n    }\\n    .section h2 {\\n      font-family: 'Georgia', serif;\\n      font-size: 18pt;\\n      font-weight: bold;\\n      color: #1a3c5e;\\n      margin-bottom: 15px;\\n      position: relative;\\n    }\\n    .section h2::after {\\n      content: '';\\n      position: absolute;\\n      left: 0;\\n      bottom: -5px;\\n      width: 50px;\\n      height: 2px;\\n      background-color: #1a3c5e;\\n    }\\n    .section p {\\n      font-size: 12pt;\\n      margin: 0 0 15px;\\n      color: #444;\\n    }\\n    .section ul {\\n      margin: 0;\\n      padding-left: 20px;\\n    }\\n    .section li {\\n      font-size: 12pt;\\n      margin: 10px 0;\\n      color: #444;\\n    }\\n    /* 高亮关键发现 */\\n    .key-finding-highlight {\\n      background-color: #f0f5fa;\\n      padding: 15px;\\n      border-left: 4px solid #1a3c5e;\\n      margin: 10px 0;\\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\\n      border-radius: 4px;\\n    }\\n    .key-finding-highlight span {\\n      font-weight: bold;\\n      color: #1a3c5e;\\n    }\\n    /* 来源 */\\n    .sources ol {\\n      margin: 0;\\n      padding-left: 20px;\\n    }\\n    .sources li {\\n      font-size: 11pt;\\n      margin: 8px 0;\\n      word-break: break-all;\\n    }\\n    .sources a {\\n      color: #1a73e8;\\n      text-decoration: none;\\n    }\\n    .sources a:hover {\\n      text-decoration: underline;\\n    }\\n    /* 页脚 */\\n    .footer {\\n      text-align: center;\\n      font-size: 10pt;\\n      color: #666;\\n      padding: 20px 0;\\n      border-top: 1px solid #e0e0e0;\\n      margin-top: 40px;\\n      font-style: italic;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <!-- 封面页 -->\\n  <div class=\\\"cover-page\\\">\\n    <h1>研究报告: ${escapeHtml(data.topic)}</h1>\\n    <p>生成日期: ${escapeHtml(data.formattedDate)}</p>\\n  </div>\\n\\n  <!-- 主要内容 -->\\n  <div class=\\\"page-break\\\"></div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n      <h1>研究报告: ${escapeHtml(data.topic)}</h1>\\n      <p>生成日期: ${escapeHtml(data.formattedDate)}</p>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"introduction\\\">\\n      <h2>引言</h2>\\n      <p>${escapeHtml(data.introduction) || '无可用引言内容。'}</p>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"summary\\\">\\n      <h2>摘要</h2>\\n      <p>${escapeHtml(data.summary) || '无可用摘要内容。'}</p>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"key-findings\\\">\\n      <h2>关键发现</h2>\\n      <ul>\\n        ${keyFindings.length > 0 ? keyFindings.map((finding, index) => {\\n          if (index < 3) {\\n            return `<li class=\\\"key-finding-highlight\\\"><span>${escapeHtml(finding)}</span></li>`;\\n          }\\n          return `<li>${escapeHtml(finding)}</li>`;\\n        }).join('') : '<li>无可用关键发现。</li>'}\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"news-highlights\\\">\\n      <h2>新闻亮点</h2>\\n      <ul>\\n        ${newsHighlights.length > 0 ? newsHighlights.map(highlight => `<li>${escapeHtml(highlight)}</li>`).join('') : '<li>无可用新闻亮点。</li>'}\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"scholarly-insights\\\">\\n      <h2>学术见解</h2>\\n      <ul>\\n        ${scholarlyInsights.length > 0 ? scholarlyInsights.map(insight => `<li>${escapeHtml(insight)}</li>`).join('') : '<li>无可用学术见解。</li>'}\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"section\\\" id=\\\"wikipedia-summary\\\">\\n      <h2>维基百科摘要</h2>\\n      <p>${escapeHtml(data.wikipedia_summary) || '无可用维基百科摘要。'}</p>\\n    </div>\\n\\n    <div class=\\\"section sources\\\" id=\\\"sources\\\">\\n      <h2>来源</h2>\\n      <ol>\\n        ${sources.length > 0 ? sources.map(source => `<li><a href=\\\"${escapeHtml(source)}\\\" target=\\\"_blank\\\">${escapeHtml(source)}</a></li>`).join('') : '<li>无可用来源。</li>'}\\n      </ol>\\n    </div>\\n\\n    <div class=\\\"footer\\\">\\n      <p>由ResearchBot生成 | © 2025</p>\\n    </div>\\n  </div>\\n</body>\\n</html>\\n`;\\n\\n// 返回HTML内容和文件名\\nreturn [{\\n  json: {\\n    htmlContent: htmlContent,\\n    fileName: fileName,\\n    topic: data.topic,\\n    rawTimestamp: data.rawTimestamp,\\n    formattedDate: data.formattedDate\\n  }\\n}];\"}, \"typeVersion\": 2}, {\"id\": \"e43bd216-af6a-43a4-9432-c092e34b83ba\", \"name\": \"将HTML转换为PDF\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2300, -320], \"parameters\": {\"url\": \"https://api.pdfshift.io/v3/convert/pdf\", \"method\": \"邮政\", \"options\": {\"response\": {\"response\": {}}}, \"sendBody\": true, \"sendHeaders\": true, \"bodyParameters\": {\"parameters\": [{\"name\": \"=source\", \"value\": \"={{ $json.htmlContent }}\"}, {\"name\": \"landscape\", \"value\": \"false\"}, {\"name\": \"use_print\", \"value\": \"false\"}, {\"name\": \"filename\", \"value\": \"={{ $json.fileName }}\"}]}, \"headerParameters\": {\"parameters\": [{\"name\": \"authorization\", \"value\": \"Basic YXBpOnNrX2VhNDVmY2YxN2E1NjMxY2I1ZmQxZGVmNjJmZTY3Y2JiYjM3MjQ2N2M=\"}]}}, \"typeVersion\": 4.2}, {\"id\": \"fef45c7d-578b-4202-b804-db4de8a3ab5f\", \"name\": \"总计\", \"type\": \"n8n-nodes-base.aggregate\", \"position\": [1900, -320], \"parameters\": {\"options\": {}, \"aggregate\": \"汇总所有项目数据\"}, \"typeVersion\": 1}, {\"id\": \"3d942072-ad3f-4d9a-a5f4-48df2d1644b4\", \"name\": \"下载PDF\", \"type\": \"n8n-nodes-base.httpRequest\", \"position\": [2500, -320], \"parameters\": {\"url\": \"={{ $json.url }}\", \"options\": {\"response\": {\"response\": {}}}}, \"typeVersion\": 4.2}, {\"id\": \"5763bd13-f98a-4983-b61d-72efad31f488\", \"name\": \"发送研究至Gmail\", \"type\": \"n8n-nodes-base.gmail\", \"position\": [2820, 0], \"webhookId\": \"ef2f7336-e7d4-4476-a65e-951d92138f0b\", \"parameters\": {\"sendTo\": \"emaikuri@gmail.com\", \"message\": \"<!DOCTYPE html>\\n<html lang=\\\"zh-CN\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <title>研究报告：{{ $('Generate PDF HTML').item.json.topic }}</title>\\n  <style>\\n    body {\\n      font-family: 'Arial', sans-serif;\\n      color: #333;\\n      line-height: 1.6;\\n      background-color: #f4f4f4;\\n      margin: 0;\\n      padding: 0;\\n    }\\n    .container {\\n      max-width: 600px;\\n      margin: 20px auto;\\n      background-color: #ffffff;\\n      padding: 30px;\\n      border-radius: 8px;\\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    }\\n    .header {\\n      text-align: center;\\n      border-bottom: 2px solid #1a3c5e;\\n      padding-bottom: 15px;\\n      margin-bottom: 20px;\\n    }\\n    .header h1 {\\n      font-size: 24px;\\n      color: #1a3c5e;\\n      margin: 0;\\n    }\\n    .content p {\\n      font-size: 16px;\\n      margin: 0 0 15px;\\n    }\\n    .content p strong {\\n      color: #1a3c5e;\\n    }\\n    .content a {\\n      color: #1a73e8;\\n      text-decoration: none;\\n    }\\n    .content a:hover {\\n      text-decoration: underline;\\n    }\\n    .signature {\\n      margin-top: 20px;\\n      font-size: 14px;\\n      color: #666;\\n      border-top: 1px solid #e0e0e0;\\n      padding-top: 15px;\\n    }\\n    .signature p {\\n      margin: 5px 0;\\n    }\\n    .footer {\\n      text-align: center;\\n      font-size: 12px;\\n      color: #999;\\n      margin-top: 20px;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header\\\">\\n      <h1>研究报告：{{ $('Generate PDF HTML').item.json.topic }}</h1>\\n    </div>\\n    <div class=\\\"content\\\">\\n      <p>尊敬的Emma：</p>\\n      <p>希望您一切安好。我很高兴与您分享这份关于\\\"<strong>{{ $('Generate PDF HTML').item.json.topic }}</strong>\\\"的全面研究报告，该报告生成于<strong>{{ $('Generate PDF HTML').item.json.formattedDate }}</strong>。</p>\\n      <p>本报告提供了深入分析，包括详细概述、总结、关键发现、新闻亮点、学术观点和维基百科摘要，所有内容均有可靠来源支持。旨在为您的研究、决策或项目需求提供有价值的见解和可操作信息。</p>\\n      <p>请查收随附的PDF格式报告。如有任何疑问、需要更多细节或希望讨论研究结果，请随时联系我——我将很乐意为您提供帮助。</p>\\n      <p>感谢您的关注，期待您的反馈。</p>\\n    </div>\\n    <div class=\\\"signature\\\">\\n      <p>此致</p>\\n      <p>敬礼</p>\\n      <p>Emma</p>\\n    </div>\\n    <div class=\\\"footer\\\">\\n      <p>由Em生成 | © 2025</p>\\n    </div>\\n  </div>\\n</body>\\n</html>\", \"options\": {\"attachmentsUi\": {\"attachmentsBinary\": [{}]}, \"appendAttribution\": false}, \"subject\": \"=研究报告：{{ $('Query Refiner').first().json.output.topic.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ') }}\"}, \"credentials\": {\"gmailOAuth2\": {\"id\": \"EGZrlZO8SHs37XwL\", \"name\": \"Gmail Email \"}}, \"typeVersion\": 2.1}, {\"id\": \"438acbf5-5609-4c89-8448-c248e5d9bcaf\", \"name\": \"点击“测试工作流程”时\", \"type\": \"n8n-nodes-base.manualTrigger\", \"position\": [-40, -220], \"parameters\": {}, \"typeVersion\": 1}, {\"id\": \"9545380e-e0aa-405c-9230-eb89354b6775\", \"name\": \"发送PDF\", \"type\": \"n8n-nodes-base.telegram\", \"position\": [2800, -340], \"webhookId\": \"1b2f4bf7-8838-48db-ae75-e50c2a18b815\", \"parameters\": {\"chatId\": \"1274041539\", \"operation\": \"发送文件\", \"binaryData\": true, \"additionalFields\": {}}, \"credentials\": {\"telegramApi\": {\"id\": \"0BctZPpJYxRsKfET\", \"name\": \"Telegram Airbnb A\"}}, \"typeVersion\": 1.2}, {\"id\": \"0c0e336e-12f7-4fa2-b375-c3fcc6630f7e\", \"name\": \"由主AI代理执行\", \"type\": \"n8n-nodes-base.executeWorkflowTrigger\", \"position\": [-40, -420], \"parameters\": {\"inputSource\": \"直通\"}, \"typeVersion\": 1.1}, {\"id\": \"c12851da-98dd-4785-8dc2-844bedfd5f1e\", \"name\": \"搜索文件夹\", \"type\": \"n8n-nodes-base.googleDrive\", \"position\": [2500, -720], \"parameters\": {\"filter\": {}, \"options\": {}, \"resource\": \"文件文件夹\", \"queryString\": \"=name='研究报告'\"}, \"credentials\": {\"googleDriveOAuth2Api\": {\"id\": \"9wskupj06ArN8KFy\", \"name\": \"Google Drive account\"}}, \"typeVersion\": 3}, {\"id\": \"c8f7d2db-f5b2-4e6d-8c43-2d37e5a9306a\", \"name\": \"如果\", \"type\": \"n8n-nodes-base.if\", \"position\": [2700, -720], \"parameters\": {\"options\": {}, \"conditions\": {\"options\": {\"version\": 2, \"leftValue\": \"\", \"caseSensitive\": true, \"typeValidation\": \"strict\"}, \"combinator\": \"and\", \"conditions\": [{\"id\": \"14231a0f-aae8-4e31-af03-b7a1da1cbc3d\", \"operator\": {\"name\": \"filter.operator.equals\", \"type\": \"string\", \"operation\": \"equals\"}, \"leftValue\": \"={{ $node[\\\"Google Drive\\\"].json.length > 0 }}\", \"rightValue\": \"\"}]}}, \"typeVersion\": 2.2}], \"active\": false, \"pinData\": {\"When clicking ‘Test workflow’\": [{\"json\": {\"query\": \"Facts about Thailand\"}}]}, \"settings\": {\"executionOrder\": \"v1\"}, \"versionId\": \"e51160d8-0107-48ec-ad91-54843134df2c\", \"connections\": {\"SerpApi\": {\"ai_tool\": [[{\"node\": \"Research AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Aggregate\": {\"main\": [[{\"node\": \"Store Research Metadata\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Generate PDF HTML\", \"type\": \"main\", \"index\": 0}]]}, \"Split Out\": {\"main\": [[{\"node\": \"Merge Split Items\", \"type\": \"main\", \"index\": 0}]]}, \"Wikipedia\": {\"ai_tool\": [[{\"node\": \"Research AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Search News\": {\"ai_tool\": [[{\"node\": \"Research AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Download PDF\": {\"main\": [[{\"node\": \"Send Research to Gmail\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Send PDF\", \"type\": \"main\", \"index\": 0}]]}, \"Query Refiner\": {\"main\": [[{\"node\": \"Research AI Agent\", \"type\": \"main\", \"index\": 0}]]}, \"Search Folder\": {\"main\": [[{\"node\": \"If\", \"type\": \"main\", \"index\": 0}]]}, \"Simple Memory\": {\"ai_memory\": [[{\"node\": \"Research AI Agent\", \"type\": \"ai_memory\", \"index\": 0}]]}, \"Input Validation\": {\"main\": [[{\"node\": \"Query Refiner\", \"type\": \"main\", \"index\": 0}]]}, \"Generate PDF HTML\": {\"main\": [[{\"node\": \"Convert HTML to PDF\", \"type\": \"main\", \"index\": 0}]]}, \"Google Search Web\": {\"ai_tool\": [[{\"node\": \"Research AI Agent\", \"type\": \"ai_tool\", \"index\": 0}]]}, \"Merge Split Items\": {\"main\": [[{\"node\": \"Aggregate\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model\": {\"ai_languageModel\": [[{\"node\": \"Research AI Agent\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Research AI Agent\": {\"main\": [[{\"node\": \"Parse Research Output\", \"type\": \"main\", \"index\": 0}]]}, \"OpenAI Chat Model1\": {\"ai_languageModel\": [[{\"node\": \"Query Refiner\", \"type\": \"ai_languageModel\", \"index\": 0}]]}, \"Convert HTML to PDF\": {\"main\": [[{\"node\": \"Download PDF\", \"type\": \"main\", \"index\": 0}, {\"node\": \"Search Folder\", \"type\": \"main\", \"index\": 0}]]}, \"Parse Research Output\": {\"main\": [[{\"node\": \"Split Out\", \"type\": \"main\", \"index\": 0}]]}, \"Send Research to Gmail\": {\"main\": [[]]}, \"Structured Output Parser\": {\"ai_outputParser\": [[{\"node\": \"Query Refiner\", \"type\": \"ai_outputParser\", \"index\": 0}]]}, \"Executed by Main AI Agent\": {\"main\": [[]]}, \"When clicking ‘Test workflow’\": {\"main\": [[{\"node\": \"Input Validation\", \"type\": \"main\", \"index\": 0}]]}}}"
}