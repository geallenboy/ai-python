{
  "title": "Reddit AI digest",
  "url": "https://n8n.io/workflows/1895-reddit-ai-digest/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "n8n Team",
  "publish_date": "Last update 9 months ago",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"},\"nodes\":[{\"id\":\"d9bae984-2ce7-4f6b-ab53-527ac9dfea3d\",\"name\":\"When clicking \\\"Execute Workflow\\\"\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[680,320],\"parameters\":{},\"typeVersion\":1},{\"id\":\"32ecf73c-b6e9-4bd6-9ecc-d82c4c50d7b5\",\"name\":\"Reddit\",\"type\":\"n8n-nodes-base.reddit\",\"position\":[880,320],\"parameters\":{\"keyword\":\"n8n\",\"location\":\"allReddit\",\"operation\":\"search\",\"additionalFields\":{\"sort\":\"new\"}},\"credentials\":{},\"typeVersion\":1},{\"id\":\"4b560620-a101-4566-b066-4ce3f44d8b0c\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[120,180],\"parameters\":{\"width\":507.1052631578949,\"height\":210.99380804953552,\"content\":\"## What this workflow does\\n✔︎ 1) Get posts from reddit that might be about n8n\\n    - Filter for the most relevant posts (posted in last 7 days and more than 5 upvotes and is original content)\\n\\n✔︎ 2) Check if the post is actually about n8n\\n\\n✔︎ 3) if it is, categorise with OpenAi.\\n\"},\"typeVersion\":1},{\"id\":\"f3be9af5-b4ff-4f4e-a726-fc05fab94521\",\"name\":\"Set\",\"type\":\"n8n-nodes-base.set\",\"position\":[1260,320],\"parameters\":{\"values\":{\"number\":[{\"name\":\"upvotes\",\"value\":\"={{ $json.ups }}\"},{\"name\":\"subredditSize\",\"value\":\"={{ $json.subreddit_subscribers }}\"}],\"string\":[{\"name\":\"selftextTrimmed\",\"value\":\"={{ $json.selftext.substring(0,500) }}\"},{\"name\":\"subreddit\",\"value\":\"={{ $json.subreddit }}\"},{\"name\":\"date\",\"value\":\"={{ DateTime.fromSeconds($json.created).toLocaleString() }}\"},{\"name\":\"url\",\"value\":\"={{ $json.url }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"id\":\"b1dbf78f-c7c6-4ab7-a957-78d58c5e13e3\",\"name\":\"IF\",\"type\":\"n8n-nodes-base.if\",\"position\":[1060,320],\"parameters\":{\"conditions\":{\"number\":[{\"value1\":\"={{ $json.ups }}\",\"value2\":\"=5\",\"operation\":\"largerEqual\"}],\"string\":[{\"value1\":\"={{ $json.selftext }}\",\"operation\":\"isNotEmpty\"}],\"dateTime\":[{\"value1\":\"={{ DateTime.fromSeconds($json.created).toISO() }}\",\"value2\":\"={{ $today.minus({days: 7}).toISO() }}\"}]}},\"typeVersion\":1},{\"id\":\"a3aa9e43-a824-4cc1-b4e6-d41a2e8e56cd\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[120,660],\"parameters\":{\"width\":504.4736842105267,\"height\":116.77974205725066,\"content\":\"## Drawbacks\\n🤔 Workflow only considers first 500 characters of each reddit post. So if n8n is mentioned after this amount, it won't register as being a post about n8n.io.\"},\"typeVersion\":1},{\"id\":\"b3d566aa-1645-4c2c-9704-15aa2e42bb12\",\"name\":\"IF1\",\"type\":\"n8n-nodes-base.if\",\"position\":[1880,340],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $json.choices[0].text }}\",\"value2\":\"No\",\"operation\":\"contains\"}]}},\"typeVersion\":1},{\"id\":\"0ad54272-08b9-46d4-8e6a-1fb55a92d3e4\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1680,520],\"parameters\":{\"mode\":\"combine\",\"options\":{\"fuzzyCompare\":false,\"includeUnpaired\":true},\"combinationMode\":\"mergeByPosition\"},\"typeVersion\":2},{\"id\":\"288f53cc-0e53-4683-ac0e-debe0a3691b8\",\"name\":\"Merge1\",\"type\":\"n8n-nodes-base.merge\",\"position\":[2340,540],\"parameters\":{\"mode\":\"combine\",\"options\":{\"fuzzyCompare\":false,\"includeUnpaired\":true},\"combinationMode\":\"mergeByPosition\"},\"typeVersion\":2},{\"id\":\"46280db5-e4b0-4108-958a-763b6410caa0\",\"name\":\"SetFinal\",\"type\":\"n8n-nodes-base.set\",\"position\":[2560,540],\"parameters\":{\"values\":{\"number\":[{\"name\":\"upvotes\",\"value\":\"={{ $json.upvotes }}\"},{\"name\":\"subredditSize\",\"value\":\"={{ $json.subredditSize }}\"}],\"string\":[{\"name\":\"subreddit\",\"value\":\"={{ $json.subreddit }}\"},{\"name\":\"bulletSummary\",\"value\":\"={{ $json.text }}\"},{\"name\":\"date\",\"value\":\"={{ $json.date }}\"},{\"name\":\"url\",\"value\":\"={{ $json.url }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"id\":\"ac8c4847-4d73-4dce-9543-a199e8b11b51\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[120,400],\"parameters\":{\"width\":507.1052631578949,\"height\":247.53869969040255,\"content\":\"## Next steps\\n* Improve OpenAI Summary node prompt to return cleaner summaries.\\n* Extend to **more platforms/sources** - e.g. it would be really cool to monitor larger slack communities in this way. \\n* Do some classification on type of user to highlight users likely to be in our **ICP**.\\n* Separate a list of data sources (reddit, twitter, slack, discord etc.), extract messages from there and have them go to a **sub workflow for classification and summarisation.**\"},\"typeVersion\":1},{\"id\":\"12ab5ba4-d24d-4fa1-a0d1-d1e81e2d5dee\",\"name\":\"OpenAI Summary\",\"type\":\"n8n-nodes-base.openAi\",\"notes\":\"A one sentence summary of what the post is about.\",\"disabled\":true,\"position\":[2160,160],\"parameters\":{\"input\":\"={{ $json.selftextTrimmed }}\",\"options\":{\"temperature\":0.3},\"operation\":\"edit\",\"instruction\":\"Summarise what this is talking about in a meta way less than 20 words. Ignore punctuation in your summary and return a short, human readable summary.\"},\"credentials\":{},\"typeVersion\":1},{\"id\":\"e303a1aa-ee93-4f8f-b834-19aa8da7fe95\",\"name\":\"OpenAI Classify\",\"type\":\"n8n-nodes-base.openAi\",\"notes\":\"Is the post about n8n?\",\"position\":[1460,320],\"parameters\":{\"prompt\":\"=Decide whether a reddit post is about n8n.io, a workflow automation low code tool that can be self-hosted, or not.\\nReddit Post:  {{ $json.selftextTrimmed }}\\nAbout n8n?: Yes/No\",\"options\":{\"maxTokens\":32},\"simplifyOutput\":false},\"credentials\":{},\"notesInFlow\":true,\"typeVersion\":1},{\"id\":\"f56cb8b6-4c28-448e-b259-8946ffc4c1f7\",\"name\":\"OpenAI Summary Backup\",\"type\":\"n8n-nodes-base.openAi\",\"notes\":\"A one sentence summary of what the post is about.\",\"position\":[2160,340],\"parameters\":{\"prompt\":\"=Summarise what this is talking about in a meta way in only 1 sentence.\\n\\n {{ $json.selftextTrimmed }}\",\"options\":{\"maxTokens\":128}},\"credentials\":{},\"typeVersion\":1},{\"id\":\"d1eacbf2-9cc8-482d-a7d2-34c351f20871\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[640,520],\"parameters\":{\"width\":843.411496498402,\"height\":258.676790119369,\"content\":\"## What we learned\\n- 🪶 **Writing prompts**: small changes in the type of prompt result in very different results. e.g. for Summarising OpenAI would use multiple sentences even if we asked it to use only 1. We got better results by following OpenAI's documentation.\\n    - We could make OpenAI node easier to work with for new users by the node inputs being oriented not to sending parameters to api but by following [their suggestions](https://platform.openai.com/docs/guides/completion/prompt-design) - e.g. have a field for expected output format rather than just for prompt.\\n- ↕️ **Changing the max_tokens parameter** drastically changes results - sometimes making it smaller even improves results (e.g. when you want a yes/no response in the OpenAI Classify node). In their [docs](https://platform.openai.com/docs/guides/completion/inserting-text) they recommend using max_tokens>256 but [n8n by default](https://community.n8n.io/t/openai-result-not-complete/21533) uses max_tokens=16. We should probably update this.\"},\"typeVersion\":1}],\"connections\":{\"IF\":{\"main\":[[{\"node\":\"Set\",\"type\":\"main\",\"index\":0}]]},\"IF1\":{\"main\":[null,[{\"node\":\"OpenAI Summary Backup\",\"type\":\"main\",\"index\":0},{\"node\":\"Merge1\",\"type\":\"main\",\"index\":1}]]},\"Set\":{\"main\":[[{\"node\":\"OpenAI Classify\",\"type\":\"main\",\"index\":0},{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]},\"Merge\":{\"main\":[[{\"node\":\"IF1\",\"type\":\"main\",\"index\":0}]]},\"Merge1\":{\"main\":[[{\"node\":\"SetFinal\",\"type\":\"main\",\"index\":0}]]},\"Reddit\":{\"main\":[[{\"node\":\"IF\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Classify\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Summary Backup\":{\"main\":[[{\"node\":\"Merge1\",\"type\":\"main\",\"index\":0}]]},\"When clicking \\\"Execute Workflow\\\"\":{\"main\":[[{\"node\":\"Reddit\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow digests mentions of n8n on Reddit that can be sent as an single email or Slack summary each week. We use OpenAI to classify if a specific Reddit post is really about n8n or not, and then the summarise it into a bullet point sentence.\n\n## How it works\n\n  1. Get posts from Reddit that might be about n8n;\n  2. Filter for the most relevant posts (posted in last 7 days and more than 5 upvotes and is original content);\n  3. Check if the post is actually about n8n;\n  4. If it is, categorise with OpenAI.\n\n\n\nBear in mind: Workflow only considers first 500 characters of each reddit post. So if n8n is mentioned after this amount, it won't register as being a post about [n8n.io](https://n8n.io/).\n\n## Next steps\n\n  * Improve OpenAI Summary node prompt to return cleaner summaries;\n  * Extend to more platforms/sources - e.g. it would be really cool to monitor larger Slack communities in this way;\n  * Do some classification on type of user to highlight users likely to be in our ICP;\n  * Separate a list of data sources (reddit, twitter, slack, discord etc.), extract messages from there and have them go to a sub workflow for classification and summarisation.\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>This workflow digests mentions of n8n on Reddit that can be sent as an single email or Slack summary each week. We use OpenAI to classify if a specific Reddit post is really about n8n or not, and then the summarise it into a bullet point sentence.</p>\n<h2>How it works</h2>\n<ol>\n<li>Get posts from Reddit that might be about n8n;</li>\n<li>Filter for the most relevant posts (posted in last 7 days and more than 5 upvotes and is original content);</li>\n<li>Check if the post is actually about n8n;</li>\n<li>If it is, categorise with OpenAI.</li>\n</ol>\n<p>Bear in mind: Workflow only considers first 500 characters of each reddit post. So if n8n is mentioned after this amount, it won't register as being a post about <a href=\"https://n8n.io/\" rel=\"ugc nofollow\" target=\"_blank\">n8n.io</a>.</p>\n<h2>Next steps</h2>\n<ul>\n<li>Improve OpenAI Summary node prompt to return cleaner summaries;</li>\n<li>Extend to more platforms/sources - e.g. it would be really cool to monitor larger Slack communities in this way;</li>\n<li>Do some classification on type of user to highlight users likely to be in our ICP;</li>\n<li>Separate a list of data sources (reddit, twitter, slack, discord etc.), extract messages from there and have them go to a sub workflow for classification and summarisation.</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "该工作流负责整理Reddit上提及n8n的讨论内容，可每周以单封邮件或Slack摘要形式发送。我们运用OpenAI进行双重判断：先鉴别Reddit帖子是否真与n8n相关，再将其浓缩为要点式摘要。\n\n## 运行机制\n\n1. 抓取可能涉及n8n的Reddit帖子；\n2. 筛选最相关帖子（近7天发布、获5+点赞且为原创内容）；\n3. 验证帖子是否确实关于n8n；\n4. 若符合条件，通过OpenAI进行分类标注。\n\n重要提示：工作流仅分析每篇Reddit帖子的前500个字符。若[n8n.io](https://n8n.io/)的提及超出此范围，将不被识别为相关帖子。\n\n## 优化方向\n\n* 改进OpenAI摘要节点的提示词，生成更精炼的摘要；\n* 扩展监测平台范围——例如用同样方式监控大型Slack社区会很有价值；\n* 对用户类型进行分类，重点标注符合我们理想客户画像的用户；\n* 建立多平台数据源清单（Reddit、Twitter、Slack、Discord等），提取内容后转入子工作流进行分类与摘要处理。",
  "title_zh": "Reddit AI 摘要",
  "publish_date_absolute": "2024-08-06",
  "publish_date_zh": "最后更新于9个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"d9bae984-2ce7-4f6b-ab53-527ac9dfea3d\",\n      \"name\": \"When clicking \\\"Execute Workflow\\\"\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        680,\n        320\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"32ecf73c-b6e9-4bd6-9ecc-d82c4c50d7b5\",\n      \"name\": \"Reddit\",\n      \"type\": \"n8n-nodes-base.reddit\",\n      \"position\": [\n        880,\n        320\n      ],\n      \"parameters\": {\n        \"keyword\": \"n8n\",\n        \"location\": \"allReddit\",\n        \"operation\": \"search\",\n        \"additionalFields\": {\n          \"sort\": \"new\"\n        }\n      },\n      \"credentials\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4b560620-a101-4566-b066-4ce3f44d8b0c\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        120,\n        180\n      ],\n      \"parameters\": {\n        \"width\": 507.1052631578949,\n        \"height\": 210.99380804953552,\n        \"content\": \"## 该工作流程的功能\\n✔︎ 1) 从Reddit获取可能与n8n相关的帖子\\n    - 筛选出最相关的帖子（过去7天内发布、获得超过5个赞且为原创内容）\\n\\n✔︎ 2) 检查帖子是否确实与n8n相关\\n\\n✔︎ 3) 若相关，则通过OpenAI进行分类\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f3be9af5-b4ff-4f4e-a726-fc05fab94521\",\n      \"name\": \"Set\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1260,\n        320\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"number\": [\n            {\n              \"name\": \"upvotes\",\n              \"value\": \"={{ $json.ups }}\"\n            },\n            {\n              \"name\": \"subredditSize\",\n              \"value\": \"={{ $json.subreddit_subscribers }}\"\n            }\n          ],\n          \"string\": [\n            {\n              \"name\": \"selftextTrimmed\",\n              \"value\": \"={{ $json.selftext.substring(0,500) }}\"\n            },\n            {\n              \"name\": \"subreddit\",\n              \"value\": \"={{ $json.subreddit }}\"\n            },\n            {\n              \"name\": \"date\",\n              \"value\": \"={{ DateTime.fromSeconds($json.created).toLocaleString() }}\"\n            },\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $json.url }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b1dbf78f-c7c6-4ab7-a957-78d58c5e13e3\",\n      \"name\": \"IF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1060,\n        320\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"number\": [\n            {\n              \"value1\": \"={{ $json.ups }}\",\n              \"value2\": \"=5\",\n              \"operation\": \"largerEqual\"\n            }\n          ],\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.selftext }}\",\n              \"operation\": \"isNotEmpty\"\n            }\n          ],\n          \"dateTime\": [\n            {\n              \"value1\": \"={{ DateTime.fromSeconds($json.created).toISO() }}\",\n              \"value2\": \"={{ $today.minus({days: 7}).toISO() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a3aa9e43-a824-4cc1-b4e6-d41a2e8e56cd\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        120,\n        660\n      ],\n      \"parameters\": {\n        \"width\": 504.4736842105267,\n        \"height\": 116.77974205725066,\n        \"content\": \"## 缺点\\n🤔 工作流仅考虑每个Reddit帖子的前500个字符。因此，如果n8n在此字符数之后被提及，将不会被识别为关于n8n.io的帖子。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b3d566aa-1645-4c2c-9704-15aa2e42bb12\",\n      \"name\": \"IF1\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1880,\n        340\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.choices[0].text }}\",\n              \"value2\": \"No\",\n              \"operation\": \"contains\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0ad54272-08b9-46d4-8e6a-1fb55a92d3e4\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1680,\n        520\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"fuzzyCompare\": false,\n          \"includeUnpaired\": true\n        },\n        \"combinationMode\": \"mergeByPosition\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"288f53cc-0e53-4683-ac0e-debe0a3691b8\",\n      \"name\": \"Merge1\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2340,\n        540\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"fuzzyCompare\": false,\n          \"includeUnpaired\": true\n        },\n        \"combinationMode\": \"mergeByPosition\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"46280db5-e4b0-4108-958a-763b6410caa0\",\n      \"name\": \"SetFinal\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2560,\n        540\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"number\": [\n            {\n              \"name\": \"upvotes\",\n              \"value\": \"={{ $json.upvotes }}\"\n            },\n            {\n              \"name\": \"subredditSize\",\n              \"value\": \"={{ $json.subredditSize }}\"\n            }\n          ],\n          \"string\": [\n            {\n              \"name\": \"subreddit\",\n              \"value\": \"={{ $json.subreddit }}\"\n            },\n            {\n              \"name\": \"bulletSummary\",\n              \"value\": \"={{ $json.text }}\"\n            },\n            {\n              \"name\": \"date\",\n              \"value\": \"={{ $json.date }}\"\n            },\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $json.url }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ac8c4847-4d73-4dce-9543-a199e8b11b51\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        120,\n        400\n      ],\n      \"parameters\": {\n        \"width\": 507.1052631578949,\n        \"height\": 247.53869969040255,\n        \"content\": \"## 下一步计划\\n* 优化OpenAI摘要节点的提示词，生成更简洁的摘要\\n* 扩展至**更多平台/数据源**——例如用这种方式监控大型Slack社区会非常有趣\\n* 对用户类型进行分类，突出可能符合我们**理想客户画像（ICP）**的用户\\n* 将数据源列表（Reddit、Twitter、Slack、Discord等）分离处理，从中提取消息并导入**分类与摘要子工作流**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"12ab5ba4-d24d-4fa1-a0d1-d1e81e2d5dee\",\n      \"name\": \"OpenAI Summary\",\n      \"type\": \"n8n-nodes-base.openAi\",\n      \"notes\": \"A one sentence summary of what the post is about.\",\n      \"disabled\": true,\n      \"position\": [\n        2160,\n        160\n      ],\n      \"parameters\": {\n        \"input\": \"={{ $json.selftextTrimmed }}\",\n        \"options\": {\n          \"temperature\": 0.3\n        },\n        \"operation\": \"edit\",\n        \"instruction\": \"Summarise what this is talking about in a meta way less than 20 words. Ignore punctuation in your summary and return a short, human readable summary.\"\n      },\n      \"credentials\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e303a1aa-ee93-4f8f-b834-19aa8da7fe95\",\n      \"name\": \"OpenAI Classify\",\n      \"type\": \"n8n-nodes-base.openAi\",\n      \"notes\": \"Is the post about n8n?\",\n      \"position\": [\n        1460,\n        320\n      ],\n      \"parameters\": {\n        \"prompt\": \"=Decide whether a reddit post is about n8n.io, a workflow automation low code tool that can be self-hosted, or not.\\nReddit Post:  {{ $json.selftextTrimmed }}\\nAbout n8n?: Yes/No\",\n        \"options\": {\n          \"maxTokens\": 32\n        },\n        \"simplifyOutput\": false\n      },\n      \"credentials\": {},\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f56cb8b6-4c28-448e-b259-8946ffc4c1f7\",\n      \"name\": \"OpenAI Summary Backup\",\n      \"type\": \"n8n-nodes-base.openAi\",\n      \"notes\": \"A one sentence summary of what the post is about.\",\n      \"position\": [\n        2160,\n        340\n      ],\n      \"parameters\": {\n        \"prompt\": \"=Summarise what this is talking about in a meta way in only 1 sentence.\\n\\n {{ $json.selftextTrimmed }}\",\n        \"options\": {\n          \"maxTokens\": 128\n        }\n      },\n      \"credentials\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d1eacbf2-9cc8-482d-a7d2-34c351f20871\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        640,\n        520\n      ],\n      \"parameters\": {\n        \"width\": 843.411496498402,\n        \"height\": 258.676790119369,\n        \"content\": \"## 我们的发现\\n- 🪶 **提示词设计**：细微的提示类型调整会导致截然不同的结果。例如要求OpenAI用单句总结时，它仍会生成多句话。遵循OpenAI官方文档建议后效果显著提升。\\n    - 可优化OpenAI节点体验：输入框设计不应简单对接API参数，而应参照[官方建议](https://platform.openai.com/docs/guides/completion/prompt-design)——比如单独设置输出格式字段，而非仅提供提示词输入框。\\n- ↕️ **调整max_tokens参数**会极大影响输出质量——有时减少该值反而提升效果（比如在OpenAI分类节点中期望获得是/否回答时）。其[文档](https://platform.openai.com/docs/guides/completion/inserting-text)推荐max_tokens>256，但[n8n默认值](https://community.n8n.io/t/openai-result-not-complete/21533)为max_tokens=16，建议修改该默认设置。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"IF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF1\": {\n      \"main\": [\n        null,\n        [\n          {\n            \"node\": \"OpenAI Summary Backup\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge1\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Set\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI Classify\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SetFinal\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Reddit\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Classify\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Summary Backup\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking \\\"Execute Workflow\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Reddit\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}