{
  "title": "Fetch Dynamic Prompts from GitHub and Auto-Populate n8n Expressions in Prompt",
  "url": "https://n8n.io/workflows/2893-fetch-dynamic-prompts-from-github-and-auto-populate-n8n-expressions-in-prompt/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "RealSimple Solutions",
  "publish_date": "Last update 2 months ago",
  "content": "",
  "workflow_json": "{\"id\":\"QyMyf3zraY0wxXDf\",\"meta\":{\"instanceId\":\"ba3fa76a571c35110ef5f67e5099c9a5c1768ef125c2f3b804ba20de75248c0b\",\"templateCredsSetupCompleted\":true},\"name\":\"Load Prompts from Github Repo and auto populate n8n expressions\",\"tags\":[],\"nodes\":[{\"id\":\"34781446-b06e-41eb-83b8-b96bda1a5595\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-80,0],\"parameters\":{},\"typeVersion\":1},{\"id\":\"c53b7243-7c82-47e0-a5ee-bd82bc51c386\",\"name\":\"GitHub\",\"type\":\"n8n-nodes-base.github\",\"position\":[600,0],\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $json.Account }}\"},\"filePath\":\"={{ $json.path }}{{ $json.prompt }}\",\"resource\":\"file\",\"operation\":\"get\",\"repository\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $json.repo }}\"},\"additionalParameters\":{}},\"credentials\":{\"githubApi\":{\"id\":\"ostHZNoe8GSsbaQM\",\"name\":\"The GitHub account\"}},\"typeVersion\":1},{\"id\":\"9976b199-b744-47a7-9d75-4b831274c01b\",\"name\":\"Extract from File\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[840,0],\"parameters\":{\"options\":{},\"operation\":\"text\"},\"typeVersion\":1},{\"id\":\"26aa4e6a-c487-4cdf-91d5-df660cf826a6\",\"name\":\"setVars\",\"type\":\"n8n-nodes-base.set\",\"position\":[180,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"150618c5-09b1-4f8b-a7b4-984662bf3381\",\"name\":\"Account\",\"type\":\"string\",\"value\":\"TPGLLC-US\"},{\"id\":\"22e8a3b0-bd53-485c-b971-7f1dd0686f0e\",\"name\":\"repo\",\"type\":\"string\",\"value\":\"PeresPrompts\"},{\"id\":\"ab94d0a1-ef3a-4fe9-9076-6882c6fda0ac\",\"name\":\"path\",\"type\":\"string\",\"value\":\"SEO/\"},{\"id\":\"66f122eb-1cbd-4769-aac8-3f05cdb6c116\",\"name\":\"prompt\",\"type\":\"string\",\"value\":\"keyword_research.md\"},{\"id\":\"03fe26a3-04e6-439c-abcb-d438fc5203c0\",\"name\":\"company\",\"type\":\"string\",\"value\":\"South Nassau Physical Therapy\"},{\"id\":\"c133d216-a457-4872-a060-0ba4d94549af\",\"name\":\"product\",\"type\":\"string\",\"value\":\"Manual Therapy\"},{\"id\":\"584864dd-2518-45e2-b501-02828757fc3a\",\"name\":\"features\",\"type\":\"string\",\"value\":\"pain relief\"},{\"id\":\"0c4594cc-302a-4215-bdad-12cf54f57967\",\"name\":\"sector\",\"type\":\"string\",\"value\":\"physical therapy\"}]}},\"typeVersion\":3.4},{\"id\":\"9d92f581-8cd9-448c-aa1d-023a96c1ddda\",\"name\":\"replace variables\",\"type\":\"n8n-nodes-base.code\",\"position\":[1900,-20],\"parameters\":{\"jsCode\":\"// Fetch the prompt text\\nconst prompt = $('SetPrompt').first().json.data;  // Ensure the prompt contains placeholders like {{ some.node.value }}\\n\\n// Example variables object\\nconst variables = {\\n  company: $('setVars').first().json.company,\\n  features: \\\"Awesome Software\\\",\\n  keyword: \\\"2025-02-07\\\"\\n};\\n\\n// Function to replace placeholders dynamically\\nconst replaceVariables = (text, vars) => {\\n  return text.replace(/{{(.*?)}}/g, (match, key) => {\\n    const trimmedKey = key.trim();\\n    \\n    // Extract last part after the last dot\\n    const finalKey = trimmedKey.split('.').pop();\\n\\n    // Replace if key exists, otherwise leave placeholder unchanged\\n    return vars.hasOwnProperty(finalKey) ? vars[finalKey] : match;\\n  });\\n};\\n\\n// Replace and return result\\nreturn [{\\n  prompt: replaceVariables(prompt, variables)\\n}];\\n\"},\"typeVersion\":2},{\"id\":\"6c6c4fde-6ee5-47a8-894d-44d1afcedc2a\",\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[1560,0],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2717a7e5-095a-42bf-8b5b-8050c3389ec5\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ $json.success }}\",\"rightValue\":\"={{ $('Check All Prompt Vars Present').item.json.keys()}}\"}]}},\"typeVersion\":2.2},{\"id\":\"3b7712b8-5152-4f60-9401-03c89c39e227\",\"name\":\"Check All Prompt Vars Present\",\"type\":\"n8n-nodes-base.code\",\"position\":[1280,0],\"parameters\":{\"jsCode\":\"// Get prompt text\\nconst prompt = $json.data;\\n\\n// Extract variables inside {{ }} dynamically\\nconst matches = [...prompt.matchAll(/{{(.*?)}}/g)];\\nconst uniqueVars = [...new Set(matches.map(match => match[1].trim().split('.').pop()))];\\n\\n// Get variables from the Set Node\\nconst setNodeVariables = $node[\\\"setVars\\\"].json || {};\\n\\n// Log extracted variables and Set Node keys\\nconsole.log(\\\"Extracted Variables:\\\", uniqueVars);\\nconsole.log(\\\"Set Node Keys:\\\", Object.keys(setNodeVariables));\\n\\n// Check if all required variables are present in the Set Node\\nconst missingKeys = uniqueVars.filter(varName => !setNodeVariables.hasOwnProperty(varName));\\n\\nconsole.log(\\\"Missing Keys:\\\", missingKeys);\\n\\n// Return false if any required variable is missing, otherwise return true\\nreturn [{\\n  success: missingKeys.length === 0,\\n  missingKeys: missingKeys\\n}];\\n\"},\"typeVersion\":2},{\"id\":\"32618e10-3285-4c16-9e78-058dde329337\",\"name\":\"SetPrompt\",\"type\":\"n8n-nodes-base.set\",\"position\":[1060,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"335b450d-542a-4714-83d8-ccc237188fc5\",\"name\":\"data\",\"type\":\"string\",\"value\":\"={{ $json.data }}\"}]}},\"typeVersion\":3.4},{\"id\":\"4d8b34ca-50dd-4f37-b4f7-542291461662\",\"name\":\"Stop and Error\",\"type\":\"n8n-nodes-base.stopAndError\",\"position\":[1900,200],\"parameters\":{\"errorMessage\":\"=Missing Prompt Variables : {{ $('Check All Prompt Vars Present').item.json.missingKeys }}\\n\"},\"typeVersion\":1},{\"id\":\"a78c1e17-9152-4241-bcdf-c0d723da543b\",\"name\":\"Set Completed Prompt\",\"type\":\"n8n-nodes-base.set\",\"position\":[2220,-20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"57a9625b-adea-4ee7-a72a-2be8db15f3d4\",\"name\":\"Prompt\",\"type\":\"string\",\"value\":\"={{ $json.prompt }}\"}]}},\"typeVersion\":3.4},{\"id\":\"51447c90-a222-4172-a49b-86ec43332559\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[2440,-20],\"parameters\":{\"text\":\"={{ $json.Prompt }}\",\"options\":{},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"f15b6af1-7af2-4515-be8f-960211118dce\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[60,-120],\"parameters\":{\"width\":340,\"height\":260,\"content\":\"# Set The variables in your prompt here\"},\"typeVersion\":1},{\"id\":\"163db6cc-5b06-4ae6-ac97-5890b37cdb18\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[520,-120],\"parameters\":{\"color\":5,\"content\":\"## The repo is currently public for you to test with\"},\"typeVersion\":1},{\"id\":\"83ff6a86-a759-42a9-ace4-e20d57b906db\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1780,-200],\"parameters\":{\"width\":360,\"height\":260,\"content\":\"## Replaces the values in the prompt with the variables in the \\n# 'setVars' Node\"},\"typeVersion\":1},{\"id\":\"7dd61153-84ac-4b59-b449-333825476c33\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2000,180],\"parameters\":{\"color\":3,\"content\":\"## If you're missing variables they will be listed here\"},\"typeVersion\":1},{\"id\":\"1f070dc3-3d25-41d8-b534-912ba7c8b2b0\",\"name\":\"Prompt Output\",\"type\":\"n8n-nodes-base.set\",\"position\":[2800,-20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"01a30683-c348-4712-a3b1-739fc4a17718\",\"name\":\"promptResponse\",\"type\":\"string\",\"value\":\"={{ $json.output }}\"}]}},\"typeVersion\":3.4},{\"id\":\"2d12a6e2-7976-41b0-8cb2-01466b28269d\",\"name\":\"Ollama Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOllama\",\"position\":[2480,200],\"parameters\":{\"options\":{}},\"credentials\":{\"ollamaApi\":{\"id\":\"ERfZ8mAfQ1b0aoxZ\",\"name\":\"Ollama account\"}},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"4327a337-59e7-4b5b-98e8-93c6be550972\",\"connections\":{\"If\":{\"main\":[[{\"node\":\"replace variables\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Stop and Error\",\"type\":\"main\",\"index\":0}]]},\"GitHub\":{\"main\":[[{\"node\":\"Extract from File\",\"type\":\"main\",\"index\":0}]]},\"setVars\":{\"main\":[[{\"node\":\"GitHub\",\"type\":\"main\",\"index\":0}]]},\"AI Agent\":{\"main\":[[{\"node\":\"Prompt Output\",\"type\":\"main\",\"index\":0}]]},\"SetPrompt\":{\"main\":[[{\"node\":\"Check All Prompt Vars Present\",\"type\":\"main\",\"index\":0}]]},\"Extract from File\":{\"main\":[[{\"node\":\"SetPrompt\",\"type\":\"main\",\"index\":0}]]},\"Ollama Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"replace variables\":{\"main\":[[{\"node\":\"Set Completed Prompt\",\"type\":\"main\",\"index\":0}]]},\"Set Completed Prompt\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Check All Prompt Vars Present\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"setVars\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## **Who Is This For?**\n\nThis workflow is designed for **AI engineers, automation specialists, and content creators** who need a **scalable system** to dynamically manage prompts stored in GitHub. It eliminates manual updates, enforces required variable checks, and ensures that AI interactions always receive **fully processed** prompts.\n\n* * *\n\n## **🚀 What Problem Does This Solve?**\n\nManually managing AI prompts can be inefficient and error-prone. This workflow:  \n✅ **Fetches dynamic prompts from GitHub**  \n✅ **Auto-populates placeholders with values from the`setVars` node**  \n✅ **Ensures all required variables are present before execution**  \n✅ **Processes the formatted prompt through an AI agent**\n\n* * *\n\n## **🛠 How This Workflow Works**\n\nThis workflow consists of **three key branches** , ensuring smooth prompt retrieval, variable validation, and AI processing.\n\n* * *\n\n### **1️⃣ Retrieve the Prompt from GitHub (HTTP Request → Extract from File → SetPrompt)**\n\n  * The workflow starts manually or via an external trigger.\n  * It **fetches a text-based prompt** stored in a GitHub repository.\n  * The **Extract from File Node** retrieves the content from the GitHub file.\n  * The **SetPrompt Node** stores the prompt, making it accessible for processing.\n\n\n\n📌 **Note:**  \nThe prompt must contain **n8n expression format variables** (e.g., `{{ $json.company }}`) so they can be dynamically replaced.\n\n* * *\n\n### **2️⃣ Extract & Auto-Populate Variables (Check All Prompt Vars → Replace Variables)**\n\n  * A **Code Node scans the prompt** for placeholders in the **n8n expression format** (`{{ $json.variableName }}`).\n  * The workflow **compares required variables** against the `setVars` node: \n    * ✅ **If all variables are present** , it proceeds to variable replacement.\n    * ❌ **If any variables are missing** , the workflow stops and returns an error listing them.\n  * The **Replace Variables Node** replaces all placeholders with values from `setVars`.\n\n\n\n📌 **Example of a properly formatted GitHub prompt:**\n    \n    \n    Hello {{ $json.company }}, your product {{ $json.features }} launches on {{ $json.launch_date }}.\n    \n\nThis ensures **seamless replacement when processed in n8n**.\n\n* * *\n\n### **3️⃣ AI Processing & Output (AI Agent → Prompt Output)**\n\n  * The **Set Completed Prompt Node** stores the final, processed prompt.\n  * The **AI Agent Node** (Ollama Chat Model) processes the prompt.\n  * The **Prompt Output Node** returns the **fully formatted response**.\n\n\n\n📌 **Optional:** Modify this to use OpenAI, Claude, or other AI models.\n\n* * *\n\n## **⚠️ Error Handling: Missing Variables**\n\nIf a required variable is missing, the workflow **stops execution** and provides an error message:\n    \n    \n    ⚠️ Missing Required Variables: [\"launch_date\"]\n    \n\nThis ensures **no incomplete prompts are sent to AI agents**.\n\n* * *\n\n## **✅ Example Use Case**\n\n### **📜 GitHub Prompt File (Using n8n Expressions)**\n    \n    \n    Hello {{ $json.company }}, your product {{ $json.features }} launches on {{ $json.launch_date }}.\n    \n\n### **🔹 Variables in`setVars` Node**\n    \n    \n    {\n      \"company\": \"PropTechPro\",\n      \"features\": \"AI-powered Property Management\",\n      \"launch_date\": \"March 15, 2025\"\n    }\n    \n\n### **✅ Successful Output**\n    \n    \n    Hello PropTechPro, your product AI-powered Property Management launches on March 15, 2025.\n    \n\n### **🚨 Error Output (If Missing`launch_date`)**\n    \n    \n    ⚠️ Missing Required Variables: [\"launch_date\"]\n    \n\n* * *\n\n## **🔧 Setup Instructions**\n\n### **1️⃣ Connect Your GitHub Repository**\n\n  * Store your prompt in a **public or private GitHub repo**.\n  * The workflow will fetch the raw file using the **GitHub API**.\n\n\n\n### **2️⃣ Configure the SetVars Node**\n\n  * Define the required variables in the **SetVars Node**.\n  * Make sure the variable names **match those used in the prompt**.\n\n\n\n### **3️⃣ Test & Run**\n\n  * Click **Test Workflow** to execute.\n  * If variables are missing, it will show an error.\n  * If everything is correct, it will output the **fully formatted prompt**.\n\n\n\n* * *\n\n## **⚡ How to Customize This Workflow**\n\n💡 **Need CRM or Database Integration?**\n\n  * Connect the `setVars` node to an **Airtable, Google Sheets, or HubSpot API** to pull variables dynamically.\n\n\n\n💡 **Want to Modify the AI Model?**\n\n  * Replace the **Ollama Chat Model** with OpenAI, Claude, or a custom LLM endpoint.\n\n\n\n* * *\n\n## **📌 Why Use This Workflow?**\n\n✅ **No Manual Updates Required** – Fetches prompts dynamically from GitHub.  \n✅ **Prevents Broken Prompts** – Ensures required variables exist before execution.  \n✅ **Works for Any Use Case** – Handles AI chat prompts, marketing messages, and chatbot scripts.  \n✅ **Compatible with All n8n Deployments** – Works on **Cloud, Self-Hosted, and Desktop versions**.\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h2><strong>Who Is This For?</strong></h2>\n<p>This workflow is designed for <strong>AI engineers, automation specialists, and content creators</strong> who need a <strong>scalable system</strong> to dynamically manage prompts stored in GitHub. It eliminates manual updates, enforces required variable checks, and ensures that AI interactions always receive <strong>fully processed</strong> prompts.</p>\n<hr>\n<h2><strong>🚀 What Problem Does This Solve?</strong></h2>\n<p>Manually managing AI prompts can be inefficient and error-prone. This workflow:<br>\n✅ <strong>Fetches dynamic prompts from GitHub</strong><br>\n✅ <strong>Auto-populates placeholders with values from the <code>setVars</code> node</strong><br>\n✅ <strong>Ensures all required variables are present before execution</strong><br>\n✅ <strong>Processes the formatted prompt through an AI agent</strong></p>\n<hr>\n<h2><strong>🛠 How This Workflow Works</strong></h2>\n<p>This workflow consists of <strong>three key branches</strong>, ensuring smooth prompt retrieval, variable validation, and AI processing.</p>\n<hr>\n<h3><strong>1️⃣ Retrieve the Prompt from GitHub (HTTP Request → Extract from File → SetPrompt)</strong></h3>\n<ul>\n<li>The workflow starts manually or via an external trigger.</li>\n<li>It <strong>fetches a text-based prompt</strong> stored in a GitHub repository.</li>\n<li>The <strong>Extract from File Node</strong> retrieves the content from the GitHub file.</li>\n<li>The <strong>SetPrompt Node</strong> stores the prompt, making it accessible for processing.</li>\n</ul>\n<p>📌 <strong>Note:</strong><br>\nThe prompt must contain <strong>n8n expression format variables</strong> (e.g., <code>{{ $json.company }}</code>) so they can be dynamically replaced.</p>\n<hr>\n<h3><strong>2️⃣ Extract &amp; Auto-Populate Variables (Check All Prompt Vars → Replace Variables)</strong></h3>\n<ul>\n<li>A <strong>Code Node scans the prompt</strong> for placeholders in the <strong>n8n expression format</strong> (<code>{{ $json.variableName }}</code>).</li>\n<li>The workflow <strong>compares required variables</strong> against the <code>setVars</code> node:\n<ul>\n<li>✅ <strong>If all variables are present</strong>, it proceeds to variable replacement.</li>\n<li>❌ <strong>If any variables are missing</strong>, the workflow stops and returns an error listing them.</li>\n</ul>\n</li>\n<li>The <strong>Replace Variables Node</strong> replaces all placeholders with values from <code>setVars</code>.</li>\n</ul>\n<p>📌 <strong>Example of a properly formatted GitHub prompt:</strong></p>\n<pre><code>Hello {{ $json.company }}, your product {{ $json.features }} launches on {{ $json.launch_date }}.\n</code></pre>\n<p>This ensures <strong>seamless replacement when processed in n8n</strong>.</p>\n<hr>\n<h3><strong>3️⃣ AI Processing &amp; Output (AI Agent → Prompt Output)</strong></h3>\n<ul>\n<li>The <strong>Set Completed Prompt Node</strong> stores the final, processed prompt.</li>\n<li>The <strong>AI Agent Node</strong> (Ollama Chat Model) processes the prompt.</li>\n<li>The <strong>Prompt Output Node</strong> returns the <strong>fully formatted response</strong>.</li>\n</ul>\n<p>📌 <strong>Optional:</strong> Modify this to use OpenAI, Claude, or other AI models.</p>\n<hr>\n<h2><strong>⚠️ Error Handling: Missing Variables</strong></h2>\n<p>If a required variable is missing, the workflow <strong>stops execution</strong> and provides an error message:</p>\n<pre><code>⚠️ Missing Required Variables: [\"launch_date\"]\n</code></pre>\n<p>This ensures <strong>no incomplete prompts are sent to AI agents</strong>.</p>\n<hr>\n<h2><strong>✅ Example Use Case</strong></h2>\n<h3><strong>📜 GitHub Prompt File (Using n8n Expressions)</strong></h3>\n<pre><code>Hello {{ $json.company }}, your product {{ $json.features }} launches on {{ $json.launch_date }}.\n</code></pre>\n<h3><strong>🔹 Variables in <code>setVars</code> Node</strong></h3>\n<pre><code>{\n  \"company\": \"PropTechPro\",\n  \"features\": \"AI-powered Property Management\",\n  \"launch_date\": \"March 15, 2025\"\n}\n</code></pre>\n<h3><strong>✅ Successful Output</strong></h3>\n<pre><code>Hello PropTechPro, your product AI-powered Property Management launches on March 15, 2025.\n</code></pre>\n<h3><strong>🚨 Error Output (If Missing <code>launch_date</code>)</strong></h3>\n<pre><code>⚠️ Missing Required Variables: [\"launch_date\"]\n</code></pre>\n<hr>\n<h2><strong>🔧 Setup Instructions</strong></h2>\n<h3><strong>1️⃣ Connect Your GitHub Repository</strong></h3>\n<ul>\n<li>Store your prompt in a <strong>public or private GitHub repo</strong>.</li>\n<li>The workflow will fetch the raw file using the <strong>GitHub API</strong>.</li>\n</ul>\n<h3><strong>2️⃣ Configure the SetVars Node</strong></h3>\n<ul>\n<li>Define the required variables in the <strong>SetVars Node</strong>.</li>\n<li>Make sure the variable names <strong>match those used in the prompt</strong>.</li>\n</ul>\n<h3><strong>3️⃣ Test &amp; Run</strong></h3>\n<ul>\n<li>Click <strong>Test Workflow</strong> to execute.</li>\n<li>If variables are missing, it will show an error.</li>\n<li>If everything is correct, it will output the <strong>fully formatted prompt</strong>.</li>\n</ul>\n<hr>\n<h2><strong>⚡ How to Customize This Workflow</strong></h2>\n<p>💡 <strong>Need CRM or Database Integration?</strong></p>\n<ul>\n<li>Connect the <code>setVars</code> node to an <strong>Airtable, Google Sheets, or HubSpot API</strong> to pull variables dynamically.</li>\n</ul>\n<p>💡 <strong>Want to Modify the AI Model?</strong></p>\n<ul>\n<li>Replace the <strong>Ollama Chat Model</strong> with OpenAI, Claude, or a custom LLM endpoint.</li>\n</ul>\n<hr>\n<h2><strong>📌 Why Use This Workflow?</strong></h2>\n<p>✅ <strong>No Manual Updates Required</strong> – Fetches prompts dynamically from GitHub.<br>\n✅ <strong>Prevents Broken Prompts</strong> – Ensures required variables exist before execution.<br>\n✅ <strong>Works for Any Use Case</strong> – Handles AI chat prompts, marketing messages, and chatbot scripts.<br>\n✅ <strong>Compatible with All n8n Deployments</strong> – Works on <strong>Cloud, Self-Hosted, and Desktop versions</strong>.</p>\n</div><!--]-->"
}