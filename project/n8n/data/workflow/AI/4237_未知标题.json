{
  "title": "Êú™Áü•Ê†áÈ¢ò",
  "url": "https://n8n.io/workflows/4237-dynamic-ai-model-router-for-query-optimization-with-openrouter/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?sort=createdAt:desc",
  "author": "Davide",
  "publish_date": "Last update a day ago",
  "publish_date_absolute": "",
  "content": "",
  "workflow_json": "{\"id\":\"uNLWQ7BSozpoehpU\",\"meta\":{\"instanceId\":\"a4bfc93e975ca233ac45ed7c9227d84cf5a2329310525917adaf3312e10d5462\",\"templateCredsSetupCompleted\":true},\"name\":\"Automated AI Routing with OpenRouter\",\"tags\":[],\"nodes\":[{\"id\":\"25903a04-24d2-41f9-bf34-5d6234e642e5\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-180,-180],\"webhookId\":\"a0032740-26d8-491b-93f9-2250906d0e17\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"fabffdee-3c1e-47db-a4e9-f6473a6e9257\",\"name\":\"OpenRouter Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\"position\":[0,40],\"parameters\":{\"options\":{}},\"credentials\":{\"openRouterApi\":{\"id\":\"pb06rfB4xmxzVe3Q\",\"name\":\"OpenRouter\"}},\"typeVersion\":1},{\"id\":\"c53fe672-92cb-4d88-b4f6-f413fb00ad6a\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[220,40],\"parameters\":{\"schemaType\":\"manual\",\"inputSchema\":\"{\\n\\t\\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n\\t\\t\\\"prompt\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t},\\n\\t\\t\\\"model\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t}\\n\\t}\\n}\"},\"typeVersion\":1.2},{\"id\":\"d60a9d61-c611-4813-bf85-e8f8faaa21b6\",\"name\":\"OpenRouter Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\"position\":[380,40],\"parameters\":{\"model\":\"={{ $json.output.model }}\",\"options\":{}},\"credentials\":{\"openRouterApi\":{\"id\":\"pb06rfB4xmxzVe3Q\",\"name\":\"OpenRouter\"}},\"typeVersion\":1},{\"id\":\"ef9ceacb-55e4-4795-aa18-976997ec3717\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-180,-420],\"parameters\":{\"width\":840,\"height\":180,\"content\":\"## Dynamic Model Selector for Optimal AI Responses\\n\\nThe **Agent Decisioner** is a dynamic, AI-powered routing system that automatically selects the most appropriate large language model (LLM) to respond to a user's query based on the query‚Äôs content and purpose.\\n\\nThis workflow ensures **dynamic, optimized AI responses** by intelligently routing queries to the best-suited model.\"},\"typeVersion\":1},{\"id\":\"4d688ad7-b463-4e72-9b79-4b9142f022d2\",\"name\":\"Routing Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[40,-180],\"parameters\":{\"options\":{\"systemMessage\":\"=You are a **Routing Agent**.\\n\\nYour task is to analyze user queries and determine the most appropriate model to handle each specific use case.\\n\\n## Available Models\\n\\nYou have access to the following models:\\n\\n1. **perplexity/sonar**\\n2. **openai/gpt-4o-mini**\\n3. **anthropic/claude-3.7-sonnet**\\n4. **meta-llama/llama-3-70b-instruct**\\n5. **google/gemini-2.5-pro-preview**\\n6. **qwen/qwen-qwq-32b**\\n7. **openai/codex-mini**\\n8. **openai/o1-pro**\\n\\n## Model Strengths\\n\\n### 1. perplexity/sonar\\n- Built-in web search capability\\n- Provides citations and customizable sources\\n- Ideal for retrieving live, up-to-date information from the web\\n\\n### 2. openai/gpt-4o-mini\\n- Cost-efficient language model optimized for advanced reasoning tasks\\n- Excels in science and mathematics\\n- Best suited for problems requiring careful, well-thought-out responses involving multiple variables or connections\\n\\n### 3. anthropic/claude-3.7-sonnet\\n- High proficiency in coding tasks, scoring ~94% on SWE-Bench Verified\\n- Enhances data science expertise by navigating unstructured data and utilizing multiple tools for insights\\n- Handles very long documents and maintains coherence over extended conversations or analyses\\n- Performs well in creative writing tasks such as storytelling, dialogue generation, and summarization\\n- Tends to produce responses that are more aligned with safety and ethical guidelines\\n\\n### 4. meta-llama/llama-3-70b-instruct\\n- Strong performance in coding and reasoning tasks\\n- Suitable for complex programming and technical problem-solving\\n- Supports long context windows, making it ideal for extended analyses\\n\\n### 5. google/gemini-2.5-pro-preview\\n- Advanced multimodal capabilities, handling both text and images\\n- Excels in tasks requiring integration of visual and textual information\\n- Ideal for complex problem-solving involving diverse data types\\n\\n### 6. qwen/qwen-qwq-32b\\n- Specialized in reasoning and problem-solving tasks\\n- Effective in handling logical puzzles and complex analytical queries\\n\\n### 7. openai/codex-mini\\n- Optimized for code generation and completion tasks\\n- Suitable for lightweight coding tasks and quick code snippets\\n\\n### 8. openai/o1-pro\\n- Designed for complex reasoning with enhanced computational resources\\n- Performs well in STEM-related tasks, including physics, chemistry, and biology\\n- Capable of handling large context windows, making it suitable for in-depth analyses\\n\\n## Output Format\\n\\nYour output must always be a valid JSON object in the following format:\\n\\n```json\\n{\\n  \\\"prompt\\\": \\\"user query goes here\\\",\\n  \\\"model\\\": \\\"selected-model-name\\\"\\n}\\n```\\n\\n- The **\\\"prompt\\\"** field should contain the exact query to be sent to the selected model.\\n- The **\\\"model\\\"** field should contain the model name (one of: perplexity/sonar, openai/gpt-4o-mini, anthropic/claude-3.7-sonnet, meta-llama/llama-3-70b-instruct, google/gemini-2.5-pro-preview, qwen/qwen-qwq-32b, openai/codex-mini, openai/o1-pro).\\n\\n**Important:** Only return the JSON object. Do not include any explanations or additional text.\"},\"hasOutputParser\":true},\"typeVersion\":1.9},{\"id\":\"94c49c22-9697-4230-ba35-5159041cfdc7\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[400,-180],\"parameters\":{\"text\":\"={{ $json.output.prompt }}\",\"options\":{},\"promptType\":\"define\"},\"typeVersion\":1.9}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"f1562281-3e44-4f7d-a585-90c54a65e888\",\"connections\":{\"Routing Agent\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"OpenRouter Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Routing Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"OpenRouter Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Routing Agent\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"Routing Agent\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "The **Agent Decisioner** is a dynamic, AI-powered routing system that automatically selects the most appropriate large language model (LLM) to respond to a user's query based on the query‚Äôs content and purpose.\n\nThis workflow ensures **dynamic, optimized AI responses** by intelligently routing queries to the best-suited model.\n\n* * *\n\n### **Advantages**\n\n  * **üîÅ Automatic Model Routing:**  \nAutomatically selects the best model for the job, improving efficiency and relevance of responses.\n\n  * **üéØ Optimized Use of Resources:**  \nAvoids overuse of expensive models like GPT-4 by routing simpler queries to lightweight models.\n\n  * **üìö Model-Aware Reasoning:**  \nUses detailed metadata about model capabilities (e.g., reasoning, coding, web search) for intelligent selection.\n\n  * **üì• Modular and Extendable:**  \nEasy to integrate with other tools or expand by adding more models or custom decision logic.\n\n  * **üë®‚Äçüíª Ideal for RAG and Multi-Agent Systems:**  \nCan serve as the brain behind more complex agent frameworks or Retrieval-Augmented Generation pipelines.\n\n\n\n\n* * *\n\n### **How It Works**\n\n  1. **Chat Trigger** : The workflow starts when a user sends a message, triggering the **Routing Agent**.\n  2. **Model Selection** : The **AI Agent** analyzes the query and selects the best-suited model from the available options (e.g., Claude 3.7 Sonnet for coding, Perplexity/Sonar for web searches, GPT-4o Mini for reasoning).\n  3. **Structured Output** : The agent returns a **JSON response** with the user‚Äôs prompt and the chosen model.\n  4. **Execution** : The selected model processes the query and generates a response, ensuring optimal performance for the task.\n\n\n\n### **Set Up Steps**\n\n  1. **Configure Nodes** :\n\n     * **Chat Trigger** : Set up the webhook to receive user messages.\n     * **Routing Agent (AI Agent)** : Define the system message with model strengths and JSON output rules.\n     * **OpenRouter Chat Model** : Connect to OpenRouter for model access.\n     * **Structured Output Parser** : Ensure it validates the JSON response format (`prompt` \\+ `model`).\n     * **Execution Agent (AI Agent1)** : Configure it to forward the prompt to the selected model.\n  2. **Connect Nodes** :\n\n     * Link the **Chat Trigger** to the **Routing Agent**.\n     * Connect the **OpenRouter Chat Model** and **Output Parser** to the **Routing Agent**.\n     * Route the parsed JSON to the **Execution Agent** , which uses the chosen model via **OpenRouter Chat Model1**.\n  3. **Credentials** :\n\n     * Ensure **OpenRouter API credentials** are correctly set for both chat model nodes.\n  4. **Test & Deploy**:\n\n     * Activate the workflow and test with sample queries to verify model selection logic.\n     * Adjust the routing rules if needed for better accuracy.\n\n\n\n* * *\n\n### **Need help customizing?**\n\n[Contact me](mailto:info@n3w.it) for consulting and support or add me on [Linkedin](https://www.linkedin.com/in/davideboizza/).\n",
  "readme_html": "<!--[--><div data-v-d87c7c02=\"\"><p>The <strong>Agent Decisioner</strong> is a dynamic, AI-powered routing system that automatically selects the most appropriate large language model (LLM) to respond to a user's query based on the query‚Äôs content and purpose.</p>\n<p>This workflow ensures <strong>dynamic, optimized AI responses</strong> by intelligently routing queries to the best-suited model.</p>\n<hr>\n<h3><strong>Advantages</strong></h3>\n<ul>\n<li>\n<p><strong>üîÅ Automatic Model Routing:</strong><br>\nAutomatically selects the best model for the job, improving efficiency and relevance of responses.</p>\n</li>\n<li>\n<p><strong>üéØ Optimized Use of Resources:</strong><br>\nAvoids overuse of expensive models like GPT-4 by routing simpler queries to lightweight models.</p>\n</li>\n<li>\n<p><strong>üìö Model-Aware Reasoning:</strong><br>\nUses detailed metadata about model capabilities (e.g., reasoning, coding, web search) for intelligent selection.</p>\n</li>\n<li>\n<p><strong>üì• Modular and Extendable:</strong><br>\nEasy to integrate with other tools or expand by adding more models or custom decision logic.</p>\n</li>\n<li>\n<p><strong>üë®‚Äçüíª Ideal for RAG and Multi-Agent Systems:</strong><br>\nCan serve as the brain behind more complex agent frameworks or Retrieval-Augmented Generation pipelines.</p>\n</li>\n</ul>\n<hr>\n<h3><strong>How It Works</strong></h3>\n<ol>\n<li><strong>Chat Trigger</strong>: The workflow starts when a user sends a message, triggering the <strong>Routing Agent</strong>.</li>\n<li><strong>Model Selection</strong>: The <strong>AI Agent</strong> analyzes the query and selects the best-suited model from the available options (e.g., Claude 3.7 Sonnet for coding, Perplexity/Sonar for web searches, GPT-4o Mini for reasoning).</li>\n<li><strong>Structured Output</strong>: The agent returns a <strong>JSON response</strong> with the user‚Äôs prompt and the chosen model.</li>\n<li><strong>Execution</strong>: The selected model processes the query and generates a response, ensuring optimal performance for the task.</li>\n</ol>\n<h3><strong>Set Up Steps</strong></h3>\n<ol>\n<li>\n<p><strong>Configure Nodes</strong>:</p>\n<ul>\n<li><strong>Chat Trigger</strong>: Set up the webhook to receive user messages.</li>\n<li><strong>Routing Agent (AI Agent)</strong>: Define the system message with model strengths and JSON output rules.</li>\n<li><strong>OpenRouter Chat Model</strong>: Connect to OpenRouter for model access.</li>\n<li><strong>Structured Output Parser</strong>: Ensure it validates the JSON response format (<code>prompt</code> + <code>model</code>).</li>\n<li><strong>Execution Agent (AI Agent1)</strong>: Configure it to forward the prompt to the selected model.</li>\n</ul>\n</li>\n<li>\n<p><strong>Connect Nodes</strong>:</p>\n<ul>\n<li>Link the <strong>Chat Trigger</strong> to the <strong>Routing Agent</strong>.</li>\n<li>Connect the <strong>OpenRouter Chat Model</strong> and <strong>Output Parser</strong> to the <strong>Routing Agent</strong>.</li>\n<li>Route the parsed JSON to the <strong>Execution Agent</strong>, which uses the chosen model via <strong>OpenRouter Chat Model1</strong>.</li>\n</ul>\n</li>\n<li>\n<p><strong>Credentials</strong>:</p>\n<ul>\n<li>Ensure <strong>OpenRouter API credentials</strong> are correctly set for both chat model nodes.</li>\n</ul>\n</li>\n<li>\n<p><strong>Test &amp; Deploy</strong>:</p>\n<ul>\n<li>Activate the workflow and test with sample queries to verify model selection logic.</li>\n<li>Adjust the routing rules if needed for better accuracy.</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3><strong>Need help customizing?</strong></h3>\n<p><a href=\"mailto:info@n3w.it\" rel=\"ugc nofollow\">Contact me</a> for consulting and support or add me on <a href=\"https://www.linkedin.com/in/davideboizza/\" rel=\"ugc nofollow\" target=\"_blank\">Linkedin</a>.</p>\n</div><!--]-->",
  "readme_zh": "**Êô∫ËÉΩË∑ØÁî±ÂÜ≥Á≠ñÂô®ÔºàAgent DecisionerÔºâ** ÊòØ‰∏Ä‰∏™Âä®ÊÄÅÁöÑAIÈ©±Âä®Ë∑ØÁî±Á≥ªÁªüÔºåËÉΩÊ†πÊçÆÊü•ËØ¢ÂÜÖÂÆπÂíåÁõÆÁöÑËá™Âä®ÈÄâÊã©ÊúÄÂêàÈÄÇÁöÑÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàLLMÔºâËøõË°åÂìçÂ∫î„ÄÇ\n\nËØ•Â∑•‰ΩúÊµÅÈÄöËøáÊô∫ËÉΩË∑ØÁî±Êú∫Âà∂ÔºåÁ°Æ‰øùÁî®Êà∑Ëé∑Âæó**Âä®ÊÄÅ‰ºòÂåñÁöÑAIÂìçÂ∫î**„ÄÇ\n\n* * *\n\n### **Ê†∏ÂøÉ‰ºòÂäø**\n\n  * **üîÑ Ëá™Âä®Ê®°ÂûãË∑ØÁî±**  \nÊô∫ËÉΩÂåπÈÖçÊúÄ‰Ω≥Â§ÑÁêÜÊ®°ÂûãÔºåÊèêÂçáÂìçÂ∫îÊïàÁéá‰∏éÁ≤æÂáÜÂ∫¶\n\n  * **üéØ ËµÑÊ∫ê‰ºòÂåñÈÖçÁΩÆ**  \nÂ∞ÜÁÆÄÂçïÊü•ËØ¢ÂØºÂêëËΩªÈáèÁ∫ßÊ®°ÂûãÔºåÈÅøÂÖçGPT-4Á≠âÈ´òÊàêÊú¨Ê®°ÂûãÁöÑËøáÂ∫¶‰ΩøÁî®\n\n  * **üìö Ê®°ÂûãËÉΩÂäõÊÑüÁü•**  \nÂü∫‰∫éÊ®°ÂûãÂÖÉÊï∞ÊçÆÔºàÊé®ÁêÜ/ÁºñÁ®ã/ÁΩëÁªúÊêúÁ¥¢Á≠âËÉΩÂäõÔºâËøõË°åÊô∫ËÉΩÈÄâÊã©\n\n  * **üì• Ê®°ÂùóÂåñÂèØÊâ©Â±ï**  \nËΩªÊùæÈõÜÊàêÂÖ∂‰ªñÂ∑•ÂÖ∑ÔºåÊîØÊåÅÊñ∞Â¢ûÊ®°ÂûãÊàñËá™ÂÆö‰πâÂÜ≥Á≠ñÈÄªËæë\n\n  * **üë®‚Äçüíª ÈÄÇÈÖçÂ§çÊùÇÁ≥ªÁªü**  \nÂèØ‰Ωú‰∏∫RAGÊµÅÁ®ãÊàñÂ§öÊô∫ËÉΩ‰ΩìÊ°ÜÊû∂ÁöÑÊ†∏ÂøÉÂÜ≥Á≠ñ‰∏≠Êû¢\n\n* * *\n\n### **Ëøê‰ΩúÊµÅÁ®ã**\n\n  1. **Ëß¶Âèë‰ºöËØù**ÔºöÁî®Êà∑Ê∂àÊÅØËß¶Âèë**Ë∑ØÁî±‰ª£ÁêÜ**\n  2. **Ê®°ÂûãÈÄâÊã©**ÔºöAI‰ª£ÁêÜÂàÜÊûêÊü•ËØ¢ÂÜÖÂÆπÔºå‰ªéÂÄôÈÄâÊ®°ÂûãÔºàÂ¶ÇClaude 3.7 SonnetÂ§ÑÁêÜÁºñÁ®ã/Perplexity/SonarÊâßË°åÁΩëÁªúÊêúÁ¥¢/GPT-4o MiniË¥üË¥£Êé®ÁêÜÔºâ‰∏≠Êã©‰ºòÈÄâÂèñ\n  3. **ÁªìÊûÑÂåñËæìÂá∫**ÔºöËøîÂõûÂåÖÂê´Áî®Êà∑ÊèêÁ§∫ÂíåÊâÄÈÄâÊ®°ÂûãÁöÑ**JSONÂìçÂ∫î**\n  4. **ÊâßË°åÂìçÂ∫î**ÔºöÈÄâÂÆöÊ®°ÂûãÂ§ÑÁêÜÊü•ËØ¢Âπ∂ÁîüÊàêÊúÄ‰ºòËß£Á≠î\n\n### **ÈÖçÁΩÆÊåáÂçó**\n\n  1. **ËäÇÁÇπÈÖçÁΩÆ**  \n     - **ËÅäÂ§©Ëß¶ÂèëÂô®**ÔºöËÆæÁΩÆÊé•Êî∂Áî®Êà∑Ê∂àÊÅØÁöÑwebhook  \n     - **Ë∑ØÁî±‰ª£ÁêÜ**ÔºöÂÆö‰πâÂåÖÂê´Ê®°ÂûãËÉΩÂäõËØ¥ÊòéÂíåJSONËæìÂá∫ËßÑÂàôÁöÑÁ≥ªÁªüÊ∂àÊÅØ  \n     - **OpenRouterËÅäÂ§©Ê®°Âûã**ÔºöÊé•ÂÖ•Ê®°ÂûãË∞ÉÁî®ÊúçÂä°  \n     - **ÁªìÊûÑÂåñËæìÂá∫Ëß£ÊûêÂô®**ÔºöÁ°Æ‰øùÈ™åËØÅJSONÊ†ºÂºèÔºà`prompt`+`model`Ôºâ  \n     - **ÊâßË°å‰ª£ÁêÜ**ÔºöÈÖçÁΩÆËΩ¨ÂèëÊèêÁ§∫Ëá≥ÈÄâÂÆöÊ®°ÂûãÁöÑÂäüËÉΩ\n  2. **ËäÇÁÇπËøûÊé•**  \n     - Â∞Ü**ËÅäÂ§©Ëß¶ÂèëÂô®**Êé•ÂÖ•**Ë∑ØÁî±‰ª£ÁêÜ**  \n     - ËøûÊé•**OpenRouterËÅäÂ§©Ê®°Âûã**Âíå**ËæìÂá∫Ëß£ÊûêÂô®**Ëá≥Ë∑ØÁî±‰ª£ÁêÜ  \n     - Â∞ÜËß£ÊûêÂêéÁöÑJSONË∑ØÁî±Ëá≥ÈÄöËøá**OpenRouter Chat Model1**Ë∞ÉÁî®Ê®°ÂûãÁöÑ**ÊâßË°å‰ª£ÁêÜ**\n  3. **Âá≠ËØÅËÆæÁΩÆ**  \n     - Á°Æ‰øù‰∏§‰∏™ËÅäÂ§©Ê®°ÂûãËäÇÁÇπÂùáÈÖçÁΩÆÊ≠£Á°ÆÁöÑ**OpenRouter APIÂá≠ËØÅ**\n  4. **ÊµãËØïÈÉ®ÁΩ≤**  \n     - ÊøÄÊ¥ªÂ∑•‰ΩúÊµÅÂπ∂ÈÄöËøáÊµãËØïÊü•ËØ¢È™åËØÅÊ®°ÂûãÈÄâÊã©ÈÄªËæë  \n     - ÂøÖË¶ÅÊó∂Ë∞ÉÊï¥Ë∑ØÁî±ËßÑÂàô‰ª•ÊèêÂçáÂáÜÁ°ÆÊÄß\n\n* * *\n\n### **ÈúÄË¶ÅÂÆöÂà∂ÊîØÊåÅÔºü**\n\nÊ¨¢ËøéÈÄöËøá[ÈÇÆ‰ª∂](mailto:info@n3w.it)Âí®ËØ¢ÔºåÊàñÈÄöËøá[Linkedin](https://www.linkedin.com/in/davideboizza/)ËÅîÁ≥ª„ÄÇ",
  "title_zh": "Ê†áÈ¢òÊú™Áü•",
  "publish_date_zh": "ÊúÄËøëÊõ¥Êñ∞‰∫é‰∏ÄÂ§©Ââç",
  "workflow_json_zh": "{\n  \"id\": \"uNLWQ7BSozpoehpU\",\n  \"meta\": {\n    \"instanceId\": \"a4bfc93e975ca233ac45ed7c9227d84cf5a2329310525917adaf3312e10d5462\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Automated AI Routing with OpenRouter\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"25903a04-24d2-41f9-bf34-5d6234e642e5\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -180,\n        -180\n      ],\n      \"webhookId\": \"a0032740-26d8-491b-93f9-2250906d0e17\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"fabffdee-3c1e-47db-a4e9-f6473a6e9257\",\n      \"name\": \"OpenRouter Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\n      \"position\": [\n        0,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openRouterApi\": {\n          \"id\": \"pb06rfB4xmxzVe3Q\",\n          \"name\": \"OpenRouter\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c53fe672-92cb-4d88-b4f6-f413fb00ad6a\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        220,\n        40\n      ],\n      \"parameters\": {\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n\\t\\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n\\t\\t\\\"prompt\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t},\\n\\t\\t\\\"model\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t}\\n\\t}\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"d60a9d61-c611-4813-bf85-e8f8faaa21b6\",\n      \"name\": \"OpenRouter Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\n      \"position\": [\n        380,\n        40\n      ],\n      \"parameters\": {\n        \"model\": \"={{ $json.output.model }}\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openRouterApi\": {\n          \"id\": \"pb06rfB4xmxzVe3Q\",\n          \"name\": \"OpenRouter\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ef9ceacb-55e4-4795-aa18-976997ec3717\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -180,\n        -420\n      ],\n      \"parameters\": {\n        \"width\": 840,\n        \"height\": 180,\n        \"content\": \"## Âä®ÊÄÅÊ®°ÂûãÈÄâÊã©Âô®ÔºöËé∑ÂèñÊúÄ‰ºòAIÂìçÂ∫îÊñπÊ°à\\n\\n**Êô∫ËÉΩË∑ØÁî±ÂÜ≥Á≠ñÂô®**ÊòØ‰∏Ä‰∏™Âä®ÊÄÅÁöÑAIÈ©±Âä®Ë∑ØÁî±Á≥ªÁªüÔºåÂÆÉËÉΩÊ†πÊçÆÁî®Êà∑Êü•ËØ¢ÁöÑÂÜÖÂÆπÂíåÊÑèÂõæÔºåËá™Âä®ÈÄâÊã©ÊúÄÂêàÈÄÇÁöÑÂ§ßËØ≠Ë®ÄÊ®°ÂûãÔºàLLMÔºâÊù•ÁîüÊàêÂìçÂ∫î„ÄÇ\\n\\nËØ•Â∑•‰ΩúÊµÅÈÄöËøáÊô∫ËÉΩÂú∞Â∞ÜÊü•ËØ¢Ë∑ØÁî±Ëá≥ÊúÄÂåπÈÖçÁöÑÊ®°ÂûãÔºåÁ°Æ‰øùËé∑Âæó**Âä®ÊÄÅ‰ºòÂåñÁöÑAIÂìçÂ∫îÁªìÊûú**„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4d688ad7-b463-4e72-9b79-4b9142f022d2\",\n      \"name\": \"Routing Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        40,\n        -180\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"systemMessage\": \"=You are a **Routing Agent**.\\n\\nYour task is to analyze user queries and determine the most appropriate model to handle each specific use case.\\n\\n## Available Models\\n\\nYou have access to the following models:\\n\\n1. **perplexity/sonar**\\n2. **openai/gpt-4o-mini**\\n3. **anthropic/claude-3.7-sonnet**\\n4. **meta-llama/llama-3-70b-instruct**\\n5. **google/gemini-2.5-pro-preview**\\n6. **qwen/qwen-qwq-32b**\\n7. **openai/codex-mini**\\n8. **openai/o1-pro**\\n\\n## Model Strengths\\n\\n### 1. perplexity/sonar\\n- Built-in web search capability\\n- Provides citations and customizable sources\\n- Ideal for retrieving live, up-to-date information from the web\\n\\n### 2. openai/gpt-4o-mini\\n- Cost-efficient language model optimized for advanced reasoning tasks\\n- Excels in science and mathematics\\n- Best suited for problems requiring careful, well-thought-out responses involving multiple variables or connections\\n\\n### 3. anthropic/claude-3.7-sonnet\\n- High proficiency in coding tasks, scoring ~94% on SWE-Bench Verified\\n- Enhances data science expertise by navigating unstructured data and utilizing multiple tools for insights\\n- Handles very long documents and maintains coherence over extended conversations or analyses\\n- Performs well in creative writing tasks such as storytelling, dialogue generation, and summarization\\n- Tends to produce responses that are more aligned with safety and ethical guidelines\\n\\n### 4. meta-llama/llama-3-70b-instruct\\n- Strong performance in coding and reasoning tasks\\n- Suitable for complex programming and technical problem-solving\\n- Supports long context windows, making it ideal for extended analyses\\n\\n### 5. google/gemini-2.5-pro-preview\\n- Advanced multimodal capabilities, handling both text and images\\n- Excels in tasks requiring integration of visual and textual information\\n- Ideal for complex problem-solving involving diverse data types\\n\\n### 6. qwen/qwen-qwq-32b\\n- Specialized in reasoning and problem-solving tasks\\n- Effective in handling logical puzzles and complex analytical queries\\n\\n### 7. openai/codex-mini\\n- Optimized for code generation and completion tasks\\n- Suitable for lightweight coding tasks and quick code snippets\\n\\n### 8. openai/o1-pro\\n- Designed for complex reasoning with enhanced computational resources\\n- Performs well in STEM-related tasks, including physics, chemistry, and biology\\n- Capable of handling large context windows, making it suitable for in-depth analyses\\n\\n## Output Format\\n\\nYour output must always be a valid JSON object in the following format:\\n\\n```json\\n{\\n  \\\"prompt\\\": \\\"user query goes here\\\",\\n  \\\"model\\\": \\\"selected-model-name\\\"\\n}\\n```\\n\\n- The **\\\"prompt\\\"** field should contain the exact query to be sent to the selected model.\\n- The **\\\"model\\\"** field should contain the model name (one of: perplexity/sonar, openai/gpt-4o-mini, anthropic/claude-3.7-sonnet, meta-llama/llama-3-70b-instruct, google/gemini-2.5-pro-preview, qwen/qwen-qwq-32b, openai/codex-mini, openai/o1-pro).\\n\\n**Important:** Only return the JSON object. Do not include any explanations or additional text.\"\n        },\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"94c49c22-9697-4230-ba35-5159041cfdc7\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        400,\n        -180\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.output.prompt }}\",\n        \"options\": {},\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.9\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"f1562281-3e44-4f7d-a585-90c54a65e888\",\n  \"connections\": {\n    \"Routing Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenRouter Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Routing Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenRouter Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Routing Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Routing Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}