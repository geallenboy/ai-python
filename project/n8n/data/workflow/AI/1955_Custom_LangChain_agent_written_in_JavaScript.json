{
  "title": "Custom LangChain agent written in JavaScript",
  "url": "https://n8n.io/workflows/1955-custom-langchain-agent-written-in-javascript/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "n8n Team",
  "publish_date": "Last update a month ago",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"5a421900-20d7-4d64-a064-3211c3338676\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-520,-820],\"parameters\":{\"width\":432,\"height\":397,\"content\":\"## Self-coded LLM Chain Node\"},\"typeVersion\":1},{\"id\":\"93e3641b-d365-456d-b939-11fd92da8155\",\"name\":\"When clicking \\\"Execute Workflow\\\"\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-1060,-740],\"parameters\":{},\"typeVersion\":1},{\"id\":\"235e436f-353f-4bb4-a619-35ebb17011d0\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-300,-100],\"parameters\":{\"width\":320.2172923777021,\"height\":231,\"content\":\"## Self-coded Tool Node\"},\"typeVersion\":1},{\"id\":\"4265a9d3-7c7e-4511-9a41-fa5a940f8869\",\"name\":\"Set2\",\"type\":\"n8n-nodes-base.set\",\"position\":[-820,-740],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"6c3d9c41-58b0-4d0d-8892-0b1a96428da3\",\"name\":\"chatInput\",\"type\":\"string\",\"value\":\"Tell me a joke\"}]}},\"typeVersion\":3.4},{\"id\":\"b78b6d50-53be-43a1-889c-773726443bfb\",\"name\":\"Custom - LLM Chain Node1\",\"type\":\"@n8n/n8n-nodes-langchain.code\",\"position\":[-440,-740],\"parameters\":{\"code\":{\"execute\":{\"code\":\"const { PromptTemplate } = require('@langchain/core/prompts');\\n\\nconst query = $input.item.json.chatInput;\\nconst prompt = PromptTemplate.fromTemplate(query);\\nconst llm = await this.getInputConnectionData('ai_languageModel', 0);\\nlet chain = prompt.pipe(llm);\\nconst output = await chain.invoke();\\nreturn [ {json: { output } } ];\"}},\"inputs\":{\"input\":[{\"type\":\"main\",\"required\":true,\"maxConnections\":1},{\"type\":\"ai_languageModel\",\"required\":true,\"maxConnections\":1}]},\"outputs\":{\"output\":[{\"type\":\"main\"}]}},\"typeVersion\":1},{\"id\":\"cc27654f-92bd-48f5-80d9-1d4f9c83ecb5\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-420,-580],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"e64b5510-efd9-4a8b-aa3c-4312219cb2f0\",\"name\":\"Set3\",\"type\":\"n8n-nodes-base.set\",\"position\":[-820,-440],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"6c3d9c41-58b0-4d0d-8892-0b1a96428da3\",\"name\":\"chatInput\",\"type\":\"string\",\"value\":\"What year was Einstein born?\"}]}},\"typeVersion\":3.4},{\"id\":\"77f8bff3-8868-43ca-8739-7cc16d15dd80\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-440,-340],\"parameters\":{\"options\":{}},\"typeVersion\":1.8},{\"id\":\"d6e943df-ee88-4d0b-bca4-68b9f249dd00\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-460,-120],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"a4b19037-399a-4d0b-abe0-378d8d81c536\",\"name\":\"Custom - Wikipedia1\",\"type\":\"@n8n/n8n-nodes-langchain.toolCode\",\"position\":[-180,-20],\"parameters\":{\"name\":\"wikipedia_tool\",\"jsCode\":\"console.log('Custom Wikipedia Node runs');\\nconst { WikipediaQueryRun } = require(\\\"@n8n/n8n-nodes-langchain/node_modules/@langchain/community/tools/wikipedia_query_run.cjs\\\");\\n\\nconst tool = new WikipediaQueryRun({\\n  topKResults: 3,\\n  maxDocContentLength: 4000,\\n});\\n\\nreturn await tool.invoke(query);\",\"description\":\"Call this tool to research a topic on wikipedia.\"},\"typeVersion\":1.1}],\"pinData\":{},\"connections\":{\"Set2\":{\"main\":[[{\"node\":\"Custom - LLM Chain Node1\",\"type\":\"main\",\"index\":0}]]},\"Set3\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Custom - LLM Chain Node1\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Custom - Wikipedia1\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"When clicking \\\"Execute Workflow\\\"\":{\"main\":[[{\"node\":\"Set3\",\"type\":\"main\",\"index\":0},{\"node\":\"Set2\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow has multiple functionalities. It starts with a manual trigger, \"When clicking 'Execute Workflow'\", that activates two separate paths.\n\nThe first path takes a preset string \"Tell me a joke\" and processes it through a custom Language Learning Model (LLM) chain node. This node interacts with an OpenAI node for query processing.\n\nThe second path takes another preset string \"What year was Einstein born?\" and passes it to an \"Agent\" node. This agent further interacts with a Chat OpenAI node and a custom Wikipedia node to produce the required information.\n\nThe workflow uses both built-in and custom nodes, and integrates with OpenAI for both paths. It's built for experimenting with language models, specifically in the context of conversational agents and information retrieval.\n\nNote that to use this template, you need to be on n8n version 1.19.4 or later.\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>This workflow has multiple functionalities. It starts with a manual trigger, \"When clicking 'Execute Workflow'\", that activates two separate paths.</p>\n<p>The first path takes a preset string \"Tell me a joke\" and processes it through a custom Language Learning Model (LLM) chain node. This node interacts with an OpenAI node for query processing.</p>\n<p>The second path takes another preset string \"What year was Einstein born?\" and passes it to an \"Agent\" node. This agent further interacts with a Chat OpenAI node and a custom Wikipedia node to produce the required information.</p>\n<p>The workflow uses both built-in and custom nodes, and integrates with OpenAI for both paths. It's built for experimenting with language models, specifically in the context of conversational agents and information retrieval.</p>\n<p>Note that to use this template, you need to be on n8n version 1.19.4 or later.</p>\n</div><!--]-->",
  "readme_zh": "该工作流具备多重功能。其起始于手动触发项\"点击'执行工作流'时\"，随后激活两条独立路径。\n\n第一条路径获取预设字符串\"给我讲个笑话\"，通过自定义语言学习模型(LLM)链节点进行处理。该节点会与OpenAI查询处理节点进行交互。\n\n第二条路径则获取另一个预设字符串\"爱因斯坦出生于哪一年？\"并将其传递至\"代理\"节点。该代理会进一步与Chat OpenAI节点及自定义维基百科节点交互，最终生成所需信息。\n\n此工作流同时采用内置节点与自定义节点，并通过两条路径与OpenAI实现集成。其设计初衷是用于语言模型实验，特别是在对话代理和信息检索的应用场景中。\n\n请注意：使用此模板需确保n8n版本为1.19.4或更高。",
  "title_zh": "用JavaScript编写的自定义LangChain代理",
  "publish_date_absolute": "",
  "publish_date_zh": "上次更新于一个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"5a421900-20d7-4d64-a064-3211c3338676\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -520,\n        -820\n      ],\n      \"parameters\": {\n        \"width\": 432,\n        \"height\": 397,\n        \"content\": \"## 自编码LLM链节点\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"93e3641b-d365-456d-b939-11fd92da8155\",\n      \"name\": \"When clicking \\\"Execute Workflow\\\"\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -1060,\n        -740\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"235e436f-353f-4bb4-a619-35ebb17011d0\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -300,\n        -100\n      ],\n      \"parameters\": {\n        \"width\": 320.2172923777021,\n        \"height\": 231,\n        \"content\": \"## 自编码工具节点\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4265a9d3-7c7e-4511-9a41-fa5a940f8869\",\n      \"name\": \"Set2\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -820,\n        -740\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6c3d9c41-58b0-4d0d-8892-0b1a96428da3\",\n              \"name\": \"chatInput\",\n              \"type\": \"string\",\n              \"value\": \"Tell me a joke\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"b78b6d50-53be-43a1-889c-773726443bfb\",\n      \"name\": \"Custom - LLM Chain Node1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.code\",\n      \"position\": [\n        -440,\n        -740\n      ],\n      \"parameters\": {\n        \"code\": {\n          \"execute\": {\n            \"code\": \"const { PromptTemplate } = require('@langchain/core/prompts');\\n\\nconst query = $input.item.json.chatInput;\\nconst prompt = PromptTemplate.fromTemplate(query);\\nconst llm = await this.getInputConnectionData('ai_languageModel', 0);\\nlet chain = prompt.pipe(llm);\\nconst output = await chain.invoke();\\nreturn [ {json: { output } } ];\"\n          }\n        },\n        \"inputs\": {\n          \"input\": [\n            {\n              \"type\": \"main\",\n              \"required\": true,\n              \"maxConnections\": 1\n            },\n            {\n              \"type\": \"ai_languageModel\",\n              \"required\": true,\n              \"maxConnections\": 1\n            }\n          ]\n        },\n        \"outputs\": {\n          \"output\": [\n            {\n              \"type\": \"main\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cc27654f-92bd-48f5-80d9-1d4f9c83ecb5\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -420,\n        -580\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"e64b5510-efd9-4a8b-aa3c-4312219cb2f0\",\n      \"name\": \"Set3\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -820,\n        -440\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6c3d9c41-58b0-4d0d-8892-0b1a96428da3\",\n              \"name\": \"chatInput\",\n              \"type\": \"string\",\n              \"value\": \"What year was Einstein born?\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"77f8bff3-8868-43ca-8739-7cc16d15dd80\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        -440,\n        -340\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"d6e943df-ee88-4d0b-bca4-68b9f249dd00\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -460,\n        -120\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a4b19037-399a-4d0b-abe0-378d8d81c536\",\n      \"name\": \"Custom - Wikipedia1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolCode\",\n      \"position\": [\n        -180,\n        -20\n      ],\n      \"parameters\": {\n        \"name\": \"wikipedia_tool\",\n        \"jsCode\": \"console.log('Custom Wikipedia Node runs');\\nconst { WikipediaQueryRun } = require(\\\"@n8n/n8n-nodes-langchain/node_modules/@langchain/community/tools/wikipedia_query_run.cjs\\\");\\n\\nconst tool = new WikipediaQueryRun({\\n  topKResults: 3,\\n  maxDocContentLength: 4000,\\n});\\n\\nreturn await tool.invoke(query);\",\n        \"description\": \"Call this tool to research a topic on wikipedia.\"\n      },\n      \"typeVersion\": 1.1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Set2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Custom - LLM Chain Node1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Custom - LLM Chain Node1\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Custom - Wikipedia1\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking \\\"Execute Workflow\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set3\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Set2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}