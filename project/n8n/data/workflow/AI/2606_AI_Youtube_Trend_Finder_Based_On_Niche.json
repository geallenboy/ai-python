{
  "title": "AI Youtube Trend Finder Based On Niche",
  "url": "https://n8n.io/workflows/2606-ai-youtube-trend-finder-based-on-niche/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "Leonardo Grigorio",
  "publish_date": "Last update 3 months ago",
  "content": "",
  "workflow_json": "{\"id\":\"XSyVFC1tsGSxNwX9\",\"meta\":{\"instanceId\":\"60ad864624415060d2d0a0e71acd8b3b40e4ee2e9ef4b439d9937d3d33537a96\"},\"name\":\"Complete Youtube\",\"tags\":[],\"nodes\":[{\"id\":\"fd74706b-609b-4723-b4a4-067e1b064194\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[300,60],\"parameters\":{\"options\":{\"systemMessage\":\"=You help youtube creators find trending videos based on a specific niche.\\n\\nVerify if the user informed a niche before doing anything. If not, then ask him for one by giving him suggestions for him to select from.\\n\\nAfter you know what type of content the user might produce, use the \\\"youtube_search\\\" tool up to 3 times with different search terms based on the user's content type and niche.\\n\\nThe tool will answer with a list of videos from the last 2 days that had the most amount of relevancy. It returns a list of json's covering each video's id, view count, like count, comment count, description, channel title, tags and channel id. Each video is separated by \\\"### NEXT VIDEO FOUND: ###\\\".\\n\\nYou should then proceed to understand the data received then provide the user with insightful data of what could be trending from the past 2 days. Provide the user links to the trending videos which should be in this structure:\\n\\nhttps://www.youtube.com/watch?v={video_id}\\n\\nto reach the channel's link you should use:\\n\\nhttps://www.youtube.com/channel/{channel_id}\\n\\nFind patterns in the tags, titles and especially in the related content for the videos found.\\n\\nYour mission isn't to find the trending videos. It's to provide the user with valuable information of what is trending in that niche in terms of content news. Remember to provide the user with the numbers of views, likes and comments while commenting about any video. So you should not talk about any particular video, focus rather in explaining the overall senario of all that was found.\\n\\nExample of response:\\n\\n\\\"It seems like what is trending in digital marketing right now is talking about mental triggers, since 3 of the most trending videos in the last 2 days were about...\\\"\"}},\"typeVersion\":1.6},{\"id\":\"ced4b937-b590-4727-b1f2-a5e88b96091a\",\"name\":\"chat_message_received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[80,60],\"webhookId\":\"ff9622a4-a6ec-4396-b9de-c95bd834c23c\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"35a91359-5007-407d-a750-d6642e595690\",\"name\":\"youtube_search\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[540,180],\"parameters\":{\"name\":\"youtube_search\",\"workflowId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"N9DveO781xbNf8qs\",\"cachedResultName\":\"Youtube Search Workflow\"},\"description\":\"Call this tool to search for trending videos based on a query.\",\"jsonSchemaExample\":\"{\\n\\t\\\"search_term\\\": \\\"some_value\\\"\\n}\",\"specifyInputSchema\":true},\"typeVersion\":1.2},{\"id\":\"42f41096-531d-4587-833a-6f659ef78dd0\",\"name\":\"openai_llm\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[260,180],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"e4bda5b9-abd4-4cd6-8c95-126a01aa6e21\",\"name\":\"window_buffer_memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[400,180],\"parameters\":{},\"typeVersion\":1.2},{\"id\":\"f6d86c5a-393a-4bcf-bdaf-3b06c79fa51d\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[0,0],\"parameters\":{\"color\":7,\"width\":693.2572054941234,\"height\":354.53098948245656,\"content\":\"Main Workflow\"},\"typeVersion\":1},{\"id\":\"4ddbc3f0-e3d7-4ce4-a732-d731c05024d2\",\"name\":\"find_video_data1\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[700,720],\"parameters\":{\"url\":\"https://www.googleapis.com/youtube/v3/videos?\",\"options\":{},\"sendQuery\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"key\",\"value\":\"={{ $env[\\\"GOOGLE_API_KEY\\\"] }}\"},{\"name\":\"id\",\"value\":\"={{ $json.id.videoId }}\"},{\"name\":\"part\",\"value\":\"contentDetails, snippet, statistics\"}]}},\"typeVersion\":4.2},{\"id\":\"fdb28635-801d-4ce0-8919-11446c6a7a82\",\"name\":\"get_videos1\",\"type\":\"n8n-nodes-base.youTube\",\"position\":[280,560],\"parameters\":{\"limit\":3,\"filters\":{\"q\":\"={{ $json.query.search_term }}\",\"regionCode\":\"US\",\"publishedAfter\":\"={{ new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString() }}\"},\"options\":{\"order\":\"relevance\",\"safeSearch\":\"moderate\"},\"resource\":\"video\"},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"dCyrga3t1tlgQQy0\",\"name\":\"YouTube account\"}},\"typeVersion\":1},{\"id\":\"60e9e61d-0e5e-4212-8b55-71299aeec4d5\",\"name\":\"response1\",\"type\":\"n8n-nodes-base.set\",\"position\":[1100,500],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"b9b9117b-ea14-482e-a13b-e68b8e6b441d\",\"name\":\"response\",\"type\":\"string\",\"value\":\"={{ $input.all() }}\"}]}},\"typeVersion\":3.4},{\"id\":\"254a6740-8b25-4898-9795-4c3f0009471f\",\"name\":\"group_data1\",\"type\":\"n8n-nodes-base.set\",\"position\":[1160,700],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"47c172ad-90c8-4cf6-a9f5-50607e04cc90\",\"name\":\"id\",\"type\":\"string\",\"value\":\"={{ $json.items[0].id }}\"},{\"id\":\"9e639efa-0714-4b06-9847-f7b4b2fbef59\",\"name\":\"viewCount\",\"type\":\"string\",\"value\":\"={{ $json.items[0].statistics.viewCount }}\"},{\"id\":\"93328f00-91b8-425b-ad0f-a330b2f95242\",\"name\":\"likeCount\",\"type\":\"string\",\"value\":\"={{ $json.items[0].statistics.likeCount }}\"},{\"id\":\"015b0fb2-2a98-464c-a21b-51100616f26a\",\"name\":\"commentCount\",\"type\":\"string\",\"value\":\"={{ $json.items[0].statistics.commentCount }}\"},{\"id\":\"cf1e1ec3-a138-42b8-8747-d249afa58dd3\",\"name\":\"description\",\"type\":\"string\",\"value\":\"={{ $json.items[0].snippet.description }}\"},{\"id\":\"c5c9a3a2-b820-4932-a38a-e21102992215\",\"name\":\"title\",\"type\":\"string\",\"value\":\"={{ $json.items[0].snippet.title }}\"},{\"id\":\"38216ead-1f8d-4f93-b6ad-5ef709a1ad2a\",\"name\":\"channelTitle\",\"type\":\"string\",\"value\":\"={{ $json.items[0].snippet.channelTitle }}\"},{\"id\":\"ff34194d-3d46-43a8-9127-84708987f536\",\"name\":\"tags\",\"type\":\"string\",\"value\":\"={{ $json.items[0].snippet.tags.join(', ') }}\"},{\"id\":\"e50b0f7b-3e37-4557-8863-d68d4fa505c8\",\"name\":\"channelId\",\"type\":\"string\",\"value\":\"={{ $json.items[0].snippet.channelId }}\"}]}},\"typeVersion\":3.4},{\"id\":\"124c19a9-cbbd-4010-be37-50523c05f64b\",\"name\":\"save_data_to_memory1\",\"type\":\"n8n-nodes-base.code\",\"position\":[1360,700],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"const workflowStaticData = $getWorkflowStaticData('global');\\n\\nif (typeof workflowStaticData.lastExecution !== 'object') {\\n    workflowStaticData.lastExecution = {\\n        response: \\\"\\\"\\n    };\\n}\\n\\nfunction removeEmojis(text) {\\n    return text.replace(/[\\\\u{1F600}-\\\\u{1F64F}|\\\\u{1F300}-\\\\u{1F5FF}|\\\\u{1F680}-\\\\u{1F6FF}|\\\\u{2600}-\\\\u{26FF}|\\\\u{2700}-\\\\u{27BF}]/gu, '');\\n}\\n\\nfunction cleanDescription(description) {\\n    return description\\n        .replace(/https?:\\\\/\\\\/\\\\S+/g, '')\\n        .replace(/www\\\\.\\\\S+/g, '')\\n        .replace(/  +/g, ' ')\\n        .trim();\\n}\\n\\nconst currentItem = { ...$input.item };\\n\\nif (currentItem.description) {\\n    currentItem.description = cleanDescription(currentItem.description);\\n}\\n\\nlet sanitizedItem = JSON.stringify(currentItem)\\n    .replace(/\\\\\\\\r/g, ' ')\\n    .replace(/https?:\\\\/\\\\/\\\\S+/g, '')\\n    .replace(/www\\\\.\\\\S+/g, '')\\n    .replace(/\\\\\\\\n/g, ' ')\\n    .replace(/\\\\n/g, ' ')\\n    .replace(/\\\\\\\\/g, '')\\n    .replace(/  +/g, ' ')\\n    .trim();\\n\\nif (workflowStaticData.lastExecution.response) {\\n    workflowStaticData.lastExecution.response += ' ### NEXT VIDEO FOUND: ### ';\\n}\\n\\nworkflowStaticData.lastExecution.response += removeEmojis(sanitizedItem);\\n\\nreturn workflowStaticData.lastExecution;\\n\"},\"typeVersion\":2},{\"id\":\"67f92ec4-71c0-49df-a0ea-11d2e3cf0f94\",\"name\":\"retrieve_data_from_memory1\",\"type\":\"n8n-nodes-base.code\",\"position\":[780,500],\"parameters\":{\"jsCode\":\"const workflowStaticData = $getWorkflowStaticData('global');\\n\\nconst lastExecution = workflowStaticData.lastExecution;\\n\\nreturn lastExecution;\"},\"typeVersion\":2},{\"id\":\"685820ba-b089-4cdc-984d-52f134754b5c\",\"name\":\"loop_over_items1\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[500,560],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"3d4d5a4b-d06b-41db-bb78-a64a266d5308\",\"name\":\"if_longer_than_3_\",\"type\":\"n8n-nodes-base.if\",\"position\":[880,720],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"08ba3db9-6bcf-47f8-a74d-9e26f28cb08f\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ \\n  (() => {\\n    const duration = $json.items[0].contentDetails.duration;\\n\\n    // Helper function to convert ISO 8601 duration to seconds\\n    const iso8601ToSeconds = iso8601 => {\\n      const match = iso8601.match(/PT(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+)S)?/);\\n      const hours = parseInt(match[1] || 0, 10);\\n      const minutes = parseInt(match[2] || 0, 10);\\n      const seconds = parseInt(match[3] || 0, 10);\\n      return hours * 3600 + minutes * 60 + seconds;\\n    };\\n\\n    // Convert duration to seconds\\n    const durationInSeconds = iso8601ToSeconds(duration);\\n\\n    // Check if greater than 210 seconds (3 minutes 30 seconds)\\n    return durationInSeconds > 210;\\n  })() \\n}}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"7c6b8b82-fd6c-4f44-bccf-88c5a76f0319\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[0,420],\"parameters\":{\"color\":5,\"width\":1607,\"height\":520,\"content\":\"This part should be abstracted to another workflow and called inside the \\\"youtube_search\\\" tool of the main AI Agent.\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"cea84238-2b82-4a32-85dd-0c71ad685d47\",\"connections\":{\"openai_llm\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"get_videos1\":{\"main\":[[{\"node\":\"loop_over_items1\",\"type\":\"main\",\"index\":0}]]},\"group_data1\":{\"main\":[[{\"node\":\"save_data_to_memory1\",\"type\":\"main\",\"index\":0}]]},\"youtube_search\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"find_video_data1\":{\"main\":[[{\"node\":\"if_longer_than_3_\",\"type\":\"main\",\"index\":0}]]},\"loop_over_items1\":{\"main\":[[{\"node\":\"retrieve_data_from_memory1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"find_video_data1\",\"type\":\"main\",\"index\":0}]]},\"if_longer_than_3_\":{\"main\":[[{\"node\":\"group_data1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"loop_over_items1\",\"type\":\"main\",\"index\":0}]]},\"save_data_to_memory1\":{\"main\":[[{\"node\":\"loop_over_items1\",\"type\":\"main\",\"index\":0}]]},\"window_buffer_memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"chat_message_received\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"retrieve_data_from_memory1\":{\"main\":[[{\"node\":\"response1\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "[Youtube Video](https://youtu.be/Eh5OeyrYlK8)\n\nThis n8n workflow is designed to assist YouTube content creators in identifying trending topics within a specific niche. By leveraging YouTube's search and data APIs, it gathers and analyzes video performance metrics from the past two days to provide insights into what content is gaining traction. Here's how the workflow operates:\n\n  1. **Trigger Setup** : The workflow begins when a user sends a query through the `chat_message_received` node. If no niche is provided, the AI prompts the user to select or input one.\n\n  2. **AI Agent (Language Model)** : The central node utilizes a GPT-based AI agent to:\n\n     * Understand the user's niche or content preferences.\n     * Generate tailored search terms related to the niche.\n     * Process YouTube API responses and summarize trends using insights such as common themes, tags, and audience engagement metrics (views, likes, and comments).\n  3. **YouTube Search** : The `youtube_search` node runs a secondary workflow to query YouTube for relevant videos published within the last two days. It retrieves basic video data such as video IDs, relevance scores, and publication dates.\n\n  4. **Video Details Retrieval** : The workflow fetches additional details for each video:\n\n     * **Video Snippet** : Metadata like title, description, and tags.\n     * **Video Statistics** : Metrics such as views, likes, and comments.\n     * **Content Details** : Video duration, ensuring only content longer than 3 minutes and 30 seconds is analyzed.\n  5. **Data Processing** :\n\n     * Video metadata is cleaned, sanitized, and stored in memory.\n     * Tags, titles, and descriptions are analyzed to identify patterns and trends across multiple videos.\n  6. **Output** : The workflow compiles insights and presents them to the user, highlighting:\n\n     * The most common themes or patterns within the niche.\n     * URLs to trending videos and their respective channels.\n     * Engagement statistics, helping the user understand the popularity of the content.\n\n\n\n### Key Notes for Setup:\n\n  * **API Keys** : Ensure valid YouTube API credentials are configured in the `get_videos`, `find_video_snippet`, `find_video_statistics`, and `find_video_data` nodes.\n  * **Memory Buffer** : The `window_buffer_memory` node ensures the AI agent retains context during analysis, enhancing the quality of the generated insights.\n  * **Search Term Customization** : The AI agent dynamically creates search terms based on the user’s niche to improve search precision.\n\n\n\n### Use Case:\n\nThis workflow is ideal for YouTubers or marketers seeking data-driven inspiration for creating content that aligns with current trends, maximizing the potential to engage their audience.\n\n### Example Output:\n\nFor the niche \"digital marketing\":\n\n  * Trending Topic: Videos about \"mental triggers\" and \"psychological marketing.\"\n  * Tags: \"SEO,\" \"Conversion Rates,\" \"Social Proof.\"\n  * Engagement: Videos with over **200K views** and high likes/comment ratios are leading trends.\n  * Video links: \n    * <https://www.youtube.com/watch?v=video_id1>\n    * <https://www.youtube.com/watch?v=video_id2>\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p><a href=\"https://youtu.be/Eh5OeyrYlK8\" rel=\"ugc nofollow\" target=\"_blank\">Youtube Video</a></p>\n<p>This n8n workflow is designed to assist YouTube content creators in identifying trending topics within a specific niche. By leveraging YouTube's search and data APIs, it gathers and analyzes video performance metrics from the past two days to provide insights into what content is gaining traction. Here's how the workflow operates:</p>\n<ol>\n<li>\n<p><strong>Trigger Setup</strong>: The workflow begins when a user sends a query through the <code>chat_message_received</code> node. If no niche is provided, the AI prompts the user to select or input one.</p>\n</li>\n<li>\n<p><strong>AI Agent (Language Model)</strong>: The central node utilizes a GPT-based AI agent to:</p>\n<ul>\n<li>Understand the user's niche or content preferences.</li>\n<li>Generate tailored search terms related to the niche.</li>\n<li>Process YouTube API responses and summarize trends using insights such as common themes, tags, and audience engagement metrics (views, likes, and comments).</li>\n</ul>\n</li>\n<li>\n<p><strong>YouTube Search</strong>: The <code>youtube_search</code> node runs a secondary workflow to query YouTube for relevant videos published within the last two days. It retrieves basic video data such as video IDs, relevance scores, and publication dates.</p>\n</li>\n<li>\n<p><strong>Video Details Retrieval</strong>: The workflow fetches additional details for each video:</p>\n<ul>\n<li><strong>Video Snippet</strong>: Metadata like title, description, and tags.</li>\n<li><strong>Video Statistics</strong>: Metrics such as views, likes, and comments.</li>\n<li><strong>Content Details</strong>: Video duration, ensuring only content longer than 3 minutes and 30 seconds is analyzed.</li>\n</ul>\n</li>\n<li>\n<p><strong>Data Processing</strong>:</p>\n<ul>\n<li>Video metadata is cleaned, sanitized, and stored in memory.</li>\n<li>Tags, titles, and descriptions are analyzed to identify patterns and trends across multiple videos.</li>\n</ul>\n</li>\n<li>\n<p><strong>Output</strong>: The workflow compiles insights and presents them to the user, highlighting:</p>\n<ul>\n<li>The most common themes or patterns within the niche.</li>\n<li>URLs to trending videos and their respective channels.</li>\n<li>Engagement statistics, helping the user understand the popularity of the content.</li>\n</ul>\n</li>\n</ol>\n<h3>Key Notes for Setup:</h3>\n<ul>\n<li><strong>API Keys</strong>: Ensure valid YouTube API credentials are configured in the <code>get_videos</code>, <code>find_video_snippet</code>, <code>find_video_statistics</code>, and <code>find_video_data</code> nodes.</li>\n<li><strong>Memory Buffer</strong>: The <code>window_buffer_memory</code> node ensures the AI agent retains context during analysis, enhancing the quality of the generated insights.</li>\n<li><strong>Search Term Customization</strong>: The AI agent dynamically creates search terms based on the user’s niche to improve search precision.</li>\n</ul>\n<h3>Use Case:</h3>\n<p>This workflow is ideal for YouTubers or marketers seeking data-driven inspiration for creating content that aligns with current trends, maximizing the potential to engage their audience.</p>\n<h3>Example Output:</h3>\n<p>For the niche \"digital marketing\":</p>\n<ul>\n<li>Trending Topic: Videos about \"mental triggers\" and \"psychological marketing.\"</li>\n<li>Tags: \"SEO,\" \"Conversion Rates,\" \"Social Proof.\"</li>\n<li>Engagement: Videos with over <strong>200K views</strong> and high likes/comment ratios are leading trends.</li>\n<li>Video links:\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=video_id1\" rel=\"ugc nofollow\" target=\"_blank\">https://www.youtube.com/watch?v=video_id1</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=video_id2\" rel=\"ugc nofollow\" target=\"_blank\">https://www.youtube.com/watch?v=video_id2</a></li>\n</ul>\n</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "[YouTube视频](https://youtu.be/Eh5OeyrYlK8)  \n\n该n8n工作流旨在帮助YouTube内容创作者识别特定领域内的热门话题。通过调用YouTube搜索与数据接口，它采集并分析过去两天内的视频表现指标，从而洞察哪些内容正在获得关注。以下是工作流的运行机制：  \n\n1. **触发设置**  \n   当用户通过`chat_message_received`节点发送查询时，工作流即被激活。若未提供细分领域，AI将提示用户选择或输入相关内容。  \n\n2. **AI代理（语言模型）**  \n   核心节点采用基于GPT的AI代理实现以下功能：  \n   * 理解用户的细分领域或内容偏好  \n   * 生成与该领域相关的定制化搜索关键词  \n   * 解析YouTube接口返回数据，通过常见主题、标签及观众互动指标（播放量、点赞、评论）汇总趋势  \n\n3. **YouTube搜索**  \n   `youtube_search`节点调用次级工作流，检索过去两天内发布的关联视频，获取视频ID、相关度评分和发布日期等基础数据。  \n\n4. **视频详情获取**  \n   工作流为每个视频抓取以下扩展信息：  \n   * **视频摘要**：标题、描述、标签等元数据  \n   * **视频统计**：播放量、点赞数、评论数等指标  \n   * **内容详情**：视频时长（仅分析超过3分30秒的内容）  \n\n5. **数据处理**  \n   * 视频元数据经清洗后存储至内存  \n   * 通过分析标签、标题和描述识别跨视频的共性模式与趋势  \n\n6. **输出结果**  \n   工作流整合分析结论并向用户呈现：  \n   * 该领域最高频的主题或模式  \n   * 热门视频及其所属频道的链接  \n   * 互动统计数据，帮助用户量化内容热度  \n\n---  \n\n### 配置要点  \n* **接口密钥**：需在`get_videos`、`find_video_snippet`、`find_video_statistics`和`find_video_data`节点配置有效的YouTube API凭证  \n* **记忆缓冲**：`window_buffer_memory`节点确保AI代理在分析过程中保持上下文连贯，提升结论质量  \n* **搜索词定制**：AI代理根据用户领域动态生成搜索词以提升精准度  \n\n---  \n\n### 适用场景  \n本工作流特别适合需要数据驱动的YouTuber或营销人员，通过追踪实时趋势创作更易引发观众共鸣的内容。  \n\n### 示例输出（数字营销领域）  \n* **热门主题**：关于\"心理诱因\"与\"营销心理学\"的视频  \n* **高频标签**：\"SEO\"、\"转化率\"、\"社会认同\"  \n* **互动表现**：播放量**超20万**且赞评比高的视频占据主流  \n* **视频链接**：  \n  * <https://www.youtube.com/watch?v=video_id1>  \n  * <https://www.youtube.com/watch?v=video_id2>",
  "title_zh": "基于细分领域的AI YouTube趋势发现工具",
  "publish_date_absolute": "2025-02-07",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"XSyVFC1tsGSxNwX9\",\n  \"meta\": {\n    \"instanceId\": \"60ad864624415060d2d0a0e71acd8b3b40e4ee2e9ef4b439d9937d3d33537a96\"\n  },\n  \"name\": \"Complete Youtube\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"fd74706b-609b-4723-b4a4-067e1b064194\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        300,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"systemMessage\": \"=You help youtube creators find trending videos based on a specific niche.\\n\\nVerify if the user informed a niche before doing anything. If not, then ask him for one by giving him suggestions for him to select from.\\n\\nAfter you know what type of content the user might produce, use the \\\"youtube_search\\\" tool up to 3 times with different search terms based on the user's content type and niche.\\n\\nThe tool will answer with a list of videos from the last 2 days that had the most amount of relevancy. It returns a list of json's covering each video's id, view count, like count, comment count, description, channel title, tags and channel id. Each video is separated by \\\"### NEXT VIDEO FOUND: ###\\\".\\n\\nYou should then proceed to understand the data received then provide the user with insightful data of what could be trending from the past 2 days. Provide the user links to the trending videos which should be in this structure:\\n\\nhttps://www.youtube.com/watch?v={video_id}\\n\\nto reach the channel's link you should use:\\n\\nhttps://www.youtube.com/channel/{channel_id}\\n\\nFind patterns in the tags, titles and especially in the related content for the videos found.\\n\\nYour mission isn't to find the trending videos. It's to provide the user with valuable information of what is trending in that niche in terms of content news. Remember to provide the user with the numbers of views, likes and comments while commenting about any video. So you should not talk about any particular video, focus rather in explaining the overall senario of all that was found.\\n\\nExample of response:\\n\\n\\\"It seems like what is trending in digital marketing right now is talking about mental triggers, since 3 of the most trending videos in the last 2 days were about...\\\"\"\n        }\n      },\n      \"typeVersion\": 1.6\n    },\n    {\n      \"id\": \"ced4b937-b590-4727-b1f2-a5e88b96091a\",\n      \"name\": \"chat_message_received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        80,\n        60\n      ],\n      \"webhookId\": \"ff9622a4-a6ec-4396-b9de-c95bd834c23c\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"35a91359-5007-407d-a750-d6642e595690\",\n      \"name\": \"youtube_search\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        540,\n        180\n      ],\n      \"parameters\": {\n        \"name\": \"youtube_search\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"N9DveO781xbNf8qs\",\n          \"cachedResultName\": \"Youtube Search Workflow\"\n        },\n        \"description\": \"Call this tool to search for trending videos based on a query.\",\n        \"jsonSchemaExample\": \"{\\n\\t\\\"search_term\\\": \\\"some_value\\\"\\n}\",\n        \"specifyInputSchema\": true\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"42f41096-531d-4587-833a-6f659ef78dd0\",\n      \"name\": \"openai_llm\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        260,\n        180\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e4bda5b9-abd4-4cd6-8c95-126a01aa6e21\",\n      \"name\": \"window_buffer_memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        400,\n        180\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"f6d86c5a-393a-4bcf-bdaf-3b06c79fa51d\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 693.2572054941234,\n        \"height\": 354.53098948245656,\n        \"content\": \"主要工作流程\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4ddbc3f0-e3d7-4ce4-a732-d731c05024d2\",\n      \"name\": \"find_video_data1\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        700,\n        720\n      ],\n      \"parameters\": {\n        \"url\": \"https://www.googleapis.com/youtube/v3/videos?\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"key\",\n              \"value\": \"={{ $env[\\\"GOOGLE_API_KEY\\\"] }}\"\n            },\n            {\n              \"name\": \"id\",\n              \"value\": \"={{ $json.id.videoId }}\"\n            },\n            {\n              \"name\": \"part\",\n              \"value\": \"contentDetails, snippet, statistics\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"fdb28635-801d-4ce0-8919-11446c6a7a82\",\n      \"name\": \"get_videos1\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        280,\n        560\n      ],\n      \"parameters\": {\n        \"limit\": 3,\n        \"filters\": {\n          \"q\": \"={{ $json.query.search_term }}\",\n          \"regionCode\": \"US\",\n          \"publishedAfter\": \"={{ new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString() }}\"\n        },\n        \"options\": {\n          \"order\": \"relevance\",\n          \"safeSearch\": \"moderate\"\n        },\n        \"resource\": \"video\"\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"dCyrga3t1tlgQQy0\",\n          \"name\": \"YouTube account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"60e9e61d-0e5e-4212-8b55-71299aeec4d5\",\n      \"name\": \"response1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1100,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b9b9117b-ea14-482e-a13b-e68b8e6b441d\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"={{ $input.all() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"254a6740-8b25-4898-9795-4c3f0009471f\",\n      \"name\": \"group_data1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1160,\n        700\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"47c172ad-90c8-4cf6-a9f5-50607e04cc90\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].id }}\"\n            },\n            {\n              \"id\": \"9e639efa-0714-4b06-9847-f7b4b2fbef59\",\n              \"name\": \"viewCount\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].statistics.viewCount }}\"\n            },\n            {\n              \"id\": \"93328f00-91b8-425b-ad0f-a330b2f95242\",\n              \"name\": \"likeCount\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].statistics.likeCount }}\"\n            },\n            {\n              \"id\": \"015b0fb2-2a98-464c-a21b-51100616f26a\",\n              \"name\": \"commentCount\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].statistics.commentCount }}\"\n            },\n            {\n              \"id\": \"cf1e1ec3-a138-42b8-8747-d249afa58dd3\",\n              \"name\": \"description\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].snippet.description }}\"\n            },\n            {\n              \"id\": \"c5c9a3a2-b820-4932-a38a-e21102992215\",\n              \"name\": \"title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].snippet.title }}\"\n            },\n            {\n              \"id\": \"38216ead-1f8d-4f93-b6ad-5ef709a1ad2a\",\n              \"name\": \"channelTitle\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].snippet.channelTitle }}\"\n            },\n            {\n              \"id\": \"ff34194d-3d46-43a8-9127-84708987f536\",\n              \"name\": \"tags\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].snippet.tags.join(', ') }}\"\n            },\n            {\n              \"id\": \"e50b0f7b-3e37-4557-8863-d68d4fa505c8\",\n              \"name\": \"channelId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.items[0].snippet.channelId }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"124c19a9-cbbd-4010-be37-50523c05f64b\",\n      \"name\": \"save_data_to_memory1\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1360,\n        700\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const workflowStaticData = $getWorkflowStaticData('global');\\n\\nif (typeof workflowStaticData.lastExecution !== 'object') {\\n    workflowStaticData.lastExecution = {\\n        response: \\\"\\\"\\n    };\\n}\\n\\nfunction removeEmojis(text) {\\n    return text.replace(/[\\\\u{1F600}-\\\\u{1F64F}|\\\\u{1F300}-\\\\u{1F5FF}|\\\\u{1F680}-\\\\u{1F6FF}|\\\\u{2600}-\\\\u{26FF}|\\\\u{2700}-\\\\u{27BF}]/gu, '');\\n}\\n\\nfunction cleanDescription(description) {\\n    return description\\n        .replace(/https?:\\\\/\\\\/\\\\S+/g, '')\\n        .replace(/www\\\\.\\\\S+/g, '')\\n        .replace(/  +/g, ' ')\\n        .trim();\\n}\\n\\nconst currentItem = { ...$input.item };\\n\\nif (currentItem.description) {\\n    currentItem.description = cleanDescription(currentItem.description);\\n}\\n\\nlet sanitizedItem = JSON.stringify(currentItem)\\n    .replace(/\\\\\\\\r/g, ' ')\\n    .replace(/https?:\\\\/\\\\/\\\\S+/g, '')\\n    .replace(/www\\\\.\\\\S+/g, '')\\n    .replace(/\\\\\\\\n/g, ' ')\\n    .replace(/\\\\n/g, ' ')\\n    .replace(/\\\\\\\\/g, '')\\n    .replace(/  +/g, ' ')\\n    .trim();\\n\\nif (workflowStaticData.lastExecution.response) {\\n    workflowStaticData.lastExecution.response += ' ### NEXT VIDEO FOUND: ### ';\\n}\\n\\nworkflowStaticData.lastExecution.response += removeEmojis(sanitizedItem);\\n\\nreturn workflowStaticData.lastExecution;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"67f92ec4-71c0-49df-a0ea-11d2e3cf0f94\",\n      \"name\": \"retrieve_data_from_memory1\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        780,\n        500\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const workflowStaticData = $getWorkflowStaticData('global');\\n\\nconst lastExecution = workflowStaticData.lastExecution;\\n\\nreturn lastExecution;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"685820ba-b089-4cdc-984d-52f134754b5c\",\n      \"name\": \"loop_over_items1\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        500,\n        560\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"3d4d5a4b-d06b-41db-bb78-a64a266d5308\",\n      \"name\": \"if_longer_than_3_\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        880,\n        720\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"08ba3db9-6bcf-47f8-a74d-9e26f28cb08f\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ \\n  (() => {\\n    const duration = $json.items[0].contentDetails.duration;\\n\\n    // Helper function to convert ISO 8601 duration to seconds\\n    const iso8601ToSeconds = iso8601 => {\\n      const match = iso8601.match(/PT(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+)S)?/);\\n      const hours = parseInt(match[1] || 0, 10);\\n      const minutes = parseInt(match[2] || 0, 10);\\n      const seconds = parseInt(match[3] || 0, 10);\\n      return hours * 3600 + minutes * 60 + seconds;\\n    };\\n\\n    // Convert duration to seconds\\n    const durationInSeconds = iso8601ToSeconds(duration);\\n\\n    // Check if greater than 210 seconds (3 minutes 30 seconds)\\n    return durationInSeconds > 210;\\n  })() \\n}}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"7c6b8b82-fd6c-4f44-bccf-88c5a76f0319\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        420\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 1607,\n        \"height\": 520,\n        \"content\": \"这一部分应被抽象到另一个工作流中，并在主AI代理的\\\"youtube_search\\\"工具内部调用。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"cea84238-2b82-4a32-85dd-0c71ad685d47\",\n  \"connections\": {\n    \"openai_llm\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get_videos1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"loop_over_items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"group_data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"save_data_to_memory1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"youtube_search\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"find_video_data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"if_longer_than_3_\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"loop_over_items1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"retrieve_data_from_memory1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"find_video_data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"if_longer_than_3_\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"group_data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"loop_over_items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"save_data_to_memory1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"loop_over_items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"window_buffer_memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"chat_message_received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"retrieve_data_from_memory1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"response1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}