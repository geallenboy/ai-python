{
  "title": "Extract University Term Dates from Excel using CloudFlare Markdown Conversion",
  "url": "https://n8n.io/workflows/3505-extract-university-term-dates-from-excel-using-cloudflare-markdown-conversion/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "Jimleuk",
  "publish_date": "Last update 18 days ago",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"dbaac3bd-6049-4f2e-8782-98b1656d8331\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-500,-20],\"parameters\":{},\"typeVersion\":1},{\"id\":\"6605c1b6-4723-4aeb-9ade-ac05350e7631\",\"name\":\"Get Term Dates Excel\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-140,0],\"parameters\":{\"url\":\"https://www.westminster.ac.uk/sites/default/public-files/general-documents/undergraduate-term-dates-2025%E2%80%932026.xlsx\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"file\"}}}},\"typeVersion\":4.2},{\"id\":\"ed83ae3c-ebf7-42b5-9317-4e1fbd88905c\",\"name\":\"Extract Key Events and Dates\",\"type\":\"@n8n/n8n-nodes-langchain.informationExtractor\",\"position\":[640,-20],\"parameters\":{\"text\":\"={{ $json.target_sheet }}\",\"options\":{\"systemPromptTemplate\":\"Capture the values as seen. Do not convert dates.\"},\"schemaType\":\"manual\",\"inputSchema\":\"{\\n\\t\\\"type\\\": \\\"array\\\",\\n\\t\\\"items\\\": {\\n\\t  \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"week_number\\\": { \\\"type\\\": \\\"number\\\" },\\n        \\\"week_beginning\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"title\\\": { \\\"type\\\": \\\"string\\\" }\\n      }\\n\\t}\\n}\"},\"typeVersion\":1},{\"id\":\"78af1a09-6aa7-48f9-af2a-539a739c6571\",\"name\":\"Extract Target Sheet\",\"type\":\"n8n-nodes-base.set\",\"position\":[300,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"0dd68450-2492-490a-ade1-62311eb541ef\",\"name\":\"target_sheet\",\"type\":\"string\",\"value\":\"={{ $json.result[0].data.split('##')[9] }}\"}]}},\"typeVersion\":3.4},{\"id\":\"4bec1392-c262-4256-8199-54c101f281c2\",\"name\":\"Fix Dates\",\"type\":\"n8n-nodes-base.set\",\"position\":[1320,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"c6f0fa0e-1cbf-4da9-8928-a11502da0991\",\"name\":\"week_beginning\",\"type\":\"string\",\"value\":\"={{\\nnew Date(2025,8,15,0,0,0).toDateTime().toUTC()\\n  .plus({ 'day': $json.week_beginning - 45915 })\\n}}\"}]},\"includeOtherFields\":true},\"typeVersion\":3.4},{\"id\":\"0df44568-4bc6-46ed-9419-5462f528dbc3\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[740,120],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-2.5-pro-preview-03-25\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"dSxo6ns5wn658r8N\",\"name\":\"Google Gemini(PaLM) Api account\"}},\"typeVersion\":1},{\"id\":\"13aa069f-dc32-4a57-9a57-29264a09c80d\",\"name\":\"Create ICS File\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[2100,-20],\"parameters\":{\"options\":{\"fileName\":\"={{ $('Get Term Dates Excel').first().binary.data.fileName }}.ics\",\"mimeType\":\"text/calendar\"},\"operation\":\"toBinary\",\"sourceProperty\":\"data\"},\"typeVersion\":1.1},{\"id\":\"6cf27afd-8f16-40c7-bbc3-bba7fcf76097\",\"name\":\"Events to ICS Document\",\"type\":\"n8n-nodes-base.code\",\"position\":[1720,0],\"parameters\":{\"language\":\"python\",\"pythonCode\":\"from datetime import datetime, timedelta\\nimport base64\\n\\nasync def json_array_to_ics_pyodide(json_array, prodid=\\\"-//My Application//EN\\\"):\\n    \\\"\\\"\\\"\\n    Converts a JSON array of calendar events to ICS file content in a Pyodide environment.\\n\\n    Args:\\n        json_array: A list of dictionaries, where each dictionary represents an event\\n                    and contains keys like \\\"week_number\\\", \\\"week_beginning\\\", and \\\"title\\\".\\n                    It's expected that \\\"week_beginning\\\" is an ISO 8601 formatted\\n                    date string.\\n        prodid: The product identifier string for the ICS file.\\n\\n    Returns:\\n        A string containing the content of the ICS file.\\n    \\\"\\\"\\\"\\n    ical = [\\\"BEGIN:VCALENDAR\\\",\\n            \\\"VERSION:2.0\\\",\\n            f\\\"PRODID:{prodid}\\\"]\\n\\n    for event_data in json_array:\\n        week_number = event_data.get(\\\"week_number\\\")\\n        week_beginning_str = event_data.get(\\\"week_beginning\\\")\\n        title = event_data.get(\\\"title\\\")\\n\\n        if week_beginning_str and title:\\n            try:\\n                # Parse the week_beginning string to a datetime object\\n                week_beginning = datetime.fromisoformat(week_beginning_str.replace('Z', '+00:00'))\\n\\n                # Calculate the end of the week (assuming events last for the whole week)\\n                week_ending = week_beginning + timedelta(days=7)\\n\\n                uid = f\\\"week-{week_number}-{week_beginning.strftime('%Y%m%d')}@my-application\\\"\\n                dtstamp = datetime.utcnow().strftime('%Y%m%dT%H%M%SZ')\\n                dtstart = week_beginning.strftime('%Y%m%d')\\n                dtend = week_ending.strftime('%Y%m%d')\\n                summary = title\\n\\n                ical.extend([\\n                    \\\"BEGIN:VEVENT\\\",\\n                    f\\\"UID:{uid}\\\",\\n                    f\\\"DTSTAMP:{dtstamp}\\\",\\n                    f\\\"DTSTART;VALUE=DATE:{dtstart}\\\",\\n                    f\\\"DTEND;VALUE=DATE:{dtend}\\\",\\n                    f\\\"SUMMARY:{summary}\\\",\\n                    \\\"END:VEVENT\\\"\\n                ])\\n\\n                # You can add more properties here if your JSON data contains them,\\n                # for example:\\n                # if \\\"description\\\" in event_data:\\n                #     ical.append(f\\\"DESCRIPTION:{event_data['description']}\\\")\\n                # if \\\"location\\\" in event_data:\\n                #     ical.append(f\\\"LOCATION:{event_data['location']}\\\")\\n\\n            except ValueError as e:\\n                print(f\\\"Error processing event with week_beginning '{week_beginning_str}': {e}\\\")\\n                continue  # Skip to the next event if there's a parsing error\\n\\n    ical.append(\\\"END:VCALENDAR\\\")\\n    return \\\"\\\\r\\\\n\\\".join(ical)\\n\\nics_content = await json_array_to_ics_pyodide([item.json for item in _input.all()])\\nics_bytes = ics_content.encode('utf-8')\\nbase64_bytes = base64.b64encode(ics_bytes)\\nbase64_string = base64_bytes.decode('utf-8')\\n\\nreturn {\\n  \\\"data\\\": base64_string\\n}\"},\"typeVersion\":2},{\"id\":\"e5c94c64-4262-4951-a772-75af431e578a\",\"name\":\"Sort Events by Date\",\"type\":\"n8n-nodes-base.sort\",\"position\":[1520,0],\"parameters\":{\"options\":{},\"sortFieldsUi\":{\"sortField\":[{\"fieldName\":\"week_beginning\"}]}},\"typeVersion\":1},{\"id\":\"3bbe74bb-cd20-4116-9272-12be8ac54700\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-260,-240],\"parameters\":{\"color\":7,\"width\":780,\"height\":500,\"content\":\"## 1. Parse Excel Files Using Cloudflare®️ Markdown Conversion\\n[Learn more about Cloudflare's Markdown Conversion Service](https://developers.cloudflare.com/workers-ai/markdown-conversion/)\\n\\nToday's LLMs cannot parse Excel files directly so the best we can do is to convert the spreadsheet into a format that they can, namely markdown. To do this, we can use Cloudflare's brand new document conversion service which was designed specifically for this task. The result is the sheet is transcribed as a markdown table.\\n\\nThe **Markdown Conversion Service** is currently free to use at time of writing but requires a Cloudflare account.\"},\"typeVersion\":1},{\"id\":\"18fc9626-1c55-4893-8e72-06c48754ceb8\",\"name\":\"Markdown Conversion Service\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[80,0],\"parameters\":{\"url\":\"https://api.cloudflare.com/client/v4/accounts/{ACCOUNT_ID}/ai/tomarkdown\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"contentType\":\"multipart-form-data\",\"authentication\":\"predefinedCredentialType\",\"bodyParameters\":{\"parameters\":[{\"name\":\"files\",\"parameterType\":\"formBinaryData\",\"inputDataFieldName\":\"data\"}]},\"nodeCredentialType\":\"cloudflareApi\"},\"credentials\":{\"cloudflareApi\":{\"id\":\"qOynkQdBH48ofOSS\",\"name\":\"Cloudflare account\"}},\"typeVersion\":4.2},{\"id\":\"5f71bc64-985c-43c4-bdfa-3cfda7e9c060\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[540,-240],\"parameters\":{\"color\":7,\"width\":680,\"height\":540,\"content\":\"## 2. Extract Term Dates to Events Using AI\\n[Learn more about the Information Extractor](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\nData entry is probably the number one reason as to why we need AI/LLMs. This time-consuming and menial task can be completed in seconds and with a high degree of accuracy. Here, we ask the AI to extract each event with the term dates to a list of events using structured output.\"},\"typeVersion\":1},{\"id\":\"e9083886-81e3-483e-b959-12ce9005d862\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1240,-240],\"parameters\":{\"color\":7,\"width\":660,\"height\":480,\"content\":\"## 3. Use Events to Create ICS Document\\n[Learn more about the code node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/)\\n\\nNow we have our events, let's create a calendar to put them in. Using the code now, we can construct a simple ICS document - this is the format which can be imported into iCal, Google Calendar and Outlook. For tasks like these, the Code node is best suited to handle custom transformations.\"},\"typeVersion\":1},{\"id\":\"04a7c856-88b4-4daa-a56f-6e2741907e4c\",\"name\":\"Events to Items\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1000,-20],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"output\"},\"typeVersion\":1},{\"id\":\"cab455c9-b15d-440d-9f30-7afe1af23ea8\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1920,-240],\"parameters\":{\"color\":7,\"width\":720,\"height\":480,\"content\":\"## 4. Create ICS Binary File for Import\\n[Learn more about the Convert to File node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.converttofile)\\n\\nFinally with our ICS document ready, we can use the \\\"Convert to File\\\" node to build an ICS binary file which can be shared with team members, classmates or even instructors.\"},\"typeVersion\":1},{\"id\":\"c0861ef1-08f4-49e9-a700-a7224296cc72\",\"name\":\"Send Email with Attachment\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[2340,-20],\"webhookId\":\"835ef864-60c4-4b84-84ee-104ee10644eb\",\"parameters\":{\"sendTo\":\"jim@example.com\",\"message\":\"=Hey,\\n\\nPlease find attached calendar for Undergraduate terms dates 2025/2026.\\n\\nThanks\",\"options\":{\"attachmentsUi\":{\"attachmentsBinary\":[{}]}},\"subject\":\"Undergraduate Terms Dates Calendar 2025/2026\",\"emailType\":\"text\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"Sf5Gfl9NiFTNXFWb\",\"name\":\"Gmail account\"}},\"typeVersion\":2.1},{\"id\":\"85c4d928-83c7-445a-8e9b-d9daef05ae1d\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-20,200],\"parameters\":{\"color\":5,\"width\":280,\"height\":80,\"content\":\"### Cloudflare Account Required\\nAdd your Cloudflare {ACCOUNT_ID} to the URL\"},\"typeVersion\":1},{\"id\":\"6a2d8e78-0b15-498f-bc96-bbbac1da1f21\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1020,-880],\"parameters\":{\"width\":420,\"height\":1380,\"content\":\"## Try it out!\\n### This n8n template imports an XLSX containing terms dates for a university, extracts the relevant events using AI and converts the events to an ICS file which can be imported into iCal, Google Calendar or Outlook.\\n\\nManually adding important term dates to your calendar by hand? Stop! Automate it with this simple AI/LLM-powered document understanding and extraction template. This cool use-case can be applied to many scenarios where Excel files are predominantly used.\\n\\n### How it works\\n* The term dates excel file (xlsx) are imported into the workflow from the university's website using the http request node.\\n* To parse the excel file, we use an external service - [Cloudflare's Markdown Conversion Service](https://developers.cloudflare.com/workers-ai/markdown-conversion/). This converts the excel's sheets into markdown tables which our LLM can read.\\n* To extract the events and their dates from the markdown, we can use the Information Extractor node for structured output. LLMs are great for this use-case because they can understand the layout; one row may have many data points.\\n* With our data, there are endless possibilities to use it! But for this demonstration, we'll generate an ICS file so that we can import the extracted events into our calendar. We use the Python code node to combine the events into the ICS spec and the \\\"Convert to File\\\" node to create the ICS binary.\\n* Finally, let's distribute the ICS file by email to other students or instructors who  may also find this incredibly helpful for the upcoming semester!\\n\\n### How to use\\n* Ensure you're downloading the correct excel file and amend the URL parameter of the \\\"Get Term Dates Excel\\\" as necessary.\\n* Update the gmail node with your email or other emails as required. Alternatively, send the ICS file to Google Drive or a student portal.\\n\\n### Requirements\\n* Cloudflare Account is required to use the Markdown Conversion Service.\\n* Gemini for LLM document understanding and extraction.\\n* Gmail for email sending.\\n\\n### Customising the workflow\\n* This template should work for other Excel files which - for a university - there are many. Some will be more complicated than others so experiment with different parsers and extraction tools and strategies.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Hacking!\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Fix Dates\":{\"main\":[[{\"node\":\"Sort Events by Date\",\"type\":\"main\",\"index\":0}]]},\"Create ICS File\":{\"main\":[[{\"node\":\"Send Email with Attachment\",\"type\":\"main\",\"index\":0}]]},\"Events to Items\":{\"main\":[[{\"node\":\"Fix Dates\",\"type\":\"main\",\"index\":0}]]},\"Sort Events by Date\":{\"main\":[[{\"node\":\"Events to ICS Document\",\"type\":\"main\",\"index\":0}]]},\"Extract Target Sheet\":{\"main\":[[{\"node\":\"Extract Key Events and Dates\",\"type\":\"main\",\"index\":0}]]},\"Get Term Dates Excel\":{\"main\":[[{\"node\":\"Markdown Conversion Service\",\"type\":\"main\",\"index\":0}]]},\"Events to ICS Document\":{\"main\":[[{\"node\":\"Create ICS File\",\"type\":\"main\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Extract Key Events and Dates\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Markdown Conversion Service\":{\"main\":[[{\"node\":\"Extract Target Sheet\",\"type\":\"main\",\"index\":0}]]},\"Extract Key Events and Dates\":{\"main\":[[{\"node\":\"Events to Items\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Get Term Dates Excel\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "### This n8n template imports an XLSX containing terms dates for a university, extracts the relevant events using AI and converts the events to an ICS file which can be imported into iCal, Google Calendar or Outlook.\n\nManually adding important term dates to your calendar by hand? Stop! Automate it with this simple AI/LLM-powered document understanding and extraction template. This cool use-case can be applied to many scenarios where Excel files are predominantly used.\n\n### How it works\n\n  * The term dates excel file (xlsx) are imported into the workflow from the university's website using the http request node.\n  * To parse the excel file, we use an external service - [Cloudflare's Markdown Conversion Service](https://developers.cloudflare.com/workers-ai/markdown-conversion/). This converts the excel's sheets into markdown tables which our LLM can read.\n  * To extract the events and their dates from the markdown, we can use the Information Extractor node for structured output. LLMs are great for this use-case because they can understand the layout; one row may have many data points.\n  * With our data, there are endless possibilities to use it! But for this demonstration, we'll generate an ICS file so that we can import the extracted events into our calendar. We use the Python code node to combine the events into the ICS spec and the \"Convert to File\" node to create the ICS binary.\n  * Finally, let's distribute the ICS file by email to other students or instructors who may also find this incredibly helpful for the upcoming semester!\n\n\n\n### How to use\n\n  * Ensure you're downloading the correct excel file and amend the URL parameter of the \"Get Term Dates Excel\" as necessary.\n  * Update the gmail node with your email or other emails as required. Alternatively, send the ICS file to Google Drive or a student portal.\n\n\n\n### Requirements\n\n  * Cloudflare Account is required to use the Markdown Conversion Service.\n  * Gemini for LLM document understanding and extraction.\n  * Gmail for email sending.\n\n\n\n### Customising the workflow\n\n  * This template should work for other Excel files which - for a university - there are many. Some will be more complicated than others so experiment with different parsers and extraction tools and strategies.\n\n\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><h3>This n8n template imports an XLSX containing terms dates for a university, extracts the relevant events using AI and converts the events to an ICS file which can be imported into iCal, Google Calendar or Outlook.</h3>\n<p>Manually adding important term dates to your calendar by hand? Stop! Automate it with this simple AI/LLM-powered document understanding and extraction template. This cool use-case can be applied to many scenarios where Excel files are predominantly used.</p>\n<h3>How it works</h3>\n<ul>\n<li>The term dates excel file (xlsx) are imported into the workflow from the university's website using the http request node.</li>\n<li>To parse the excel file, we use an external service - <a href=\"https://developers.cloudflare.com/workers-ai/markdown-conversion/\" rel=\"ugc nofollow\" target=\"_blank\">Cloudflare's Markdown Conversion Service</a>. This converts the excel's sheets into markdown tables which our LLM can read.</li>\n<li>To extract the events and their dates from the markdown, we can use the Information Extractor node for structured output. LLMs are great for this use-case because they can understand the layout; one row may have many data points.</li>\n<li>With our data, there are endless possibilities to use it! But for this demonstration, we'll generate an ICS file so that we can import the extracted events into our calendar. We use the Python code node to combine the events into the ICS spec and the \"Convert to File\" node to create the ICS binary.</li>\n<li>Finally, let's distribute the ICS file by email to other students or instructors who  may also find this incredibly helpful for the upcoming semester!</li>\n</ul>\n<h3>How to use</h3>\n<ul>\n<li>Ensure you're downloading the correct excel file and amend the URL parameter of the \"Get Term Dates Excel\" as necessary.</li>\n<li>Update the gmail node with your email or other emails as required. Alternatively, send the ICS file to Google Drive or a student portal.</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li>Cloudflare Account is required to use the Markdown Conversion Service.</li>\n<li>Gemini for LLM document understanding and extraction.</li>\n<li>Gmail for email sending.</li>\n</ul>\n<h3>Customising the workflow</h3>\n<ul>\n<li>This template should work for other Excel files which - for a university - there are many. Some will be more complicated than others so experiment with different parsers and extraction tools and strategies.</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "### 该n8n模板可导入包含大学学期日程的XLSX文件，通过AI提取关键事件并转换为ICS日历文件，支持导入iCal/谷歌日历/Outlook\n\n还在手动往日历里添加重要学期日程？快停下！用这个AI驱动的智能文档解析模板实现自动化吧。这个典型案例可广泛应用于各类Excel文件处理场景。\n\n### 工作原理\n\n• 通过HTTP请求节点从大学官网获取学期日程Excel文件(xlsx)\n• 使用[Cloudflare文档转换服务]将Excel表格转为Markdown格式，便于大语言模型读取\n• 通过信息提取节点结构化输出事件数据。大语言模型能智能解析复杂表格布局，单行可能包含多个数据点\n• 获取数据后用途无限！本示例使用Python代码节点按ICS规范生成日历文件，再通过\"文件转换\"节点生成二进制ICS\n• 最后用邮件将ICS文件发送给其他师生，为新学期日程管理提供便利！\n\n### 使用指南\n\n• 确认下载正确的Excel文件，必要时调整\"获取学期日程\"节点的URL参数\n• 按需更新Gmail节点中的收件邮箱，也可将ICS文件发送到Google Drive或学生门户\n\n### 环境要求\n\n• 需注册Cloudflare账号使用文档转换服务\n• 需Gemini大语言模型进行文档解析\n• 需Gmail账户发送邮件\n\n### 自定义扩展\n\n• 本模板适用于各类大学Excel文件（复杂程度不一），可尝试不同解析器和提取策略",
  "title_zh": "使用CloudFlare Markdown转换从Excel提取大学学期日期",
  "publish_date_absolute": "2025-04-19",
  "publish_date_zh": "上次更新于18天前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"dbaac3bd-6049-4f2e-8782-98b1656d8331\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -500,\n        -20\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6605c1b6-4723-4aeb-9ade-ac05350e7631\",\n      \"name\": \"Get Term Dates Excel\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -140,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://www.westminster.ac.uk/sites/default/public-files/general-documents/undergraduate-term-dates-2025%E2%80%932026.xlsx\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"file\"\n            }\n          }\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"ed83ae3c-ebf7-42b5-9317-4e1fbd88905c\",\n      \"name\": \"Extract Key Events and Dates\",\n      \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\",\n      \"position\": [\n        640,\n        -20\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.target_sheet }}\",\n        \"options\": {\n          \"systemPromptTemplate\": \"Capture the values as seen. Do not convert dates.\"\n        },\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n\\t\\\"type\\\": \\\"array\\\",\\n\\t\\\"items\\\": {\\n\\t  \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"week_number\\\": { \\\"type\\\": \\\"number\\\" },\\n        \\\"week_beginning\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"title\\\": { \\\"type\\\": \\\"string\\\" }\\n      }\\n\\t}\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"78af1a09-6aa7-48f9-af2a-539a739c6571\",\n      \"name\": \"Extract Target Sheet\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        300,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"0dd68450-2492-490a-ade1-62311eb541ef\",\n              \"name\": \"target_sheet\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.result[0].data.split('##')[9] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"4bec1392-c262-4256-8199-54c101f281c2\",\n      \"name\": \"Fix Dates\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1320,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c6f0fa0e-1cbf-4da9-8928-a11502da0991\",\n              \"name\": \"week_beginning\",\n              \"type\": \"string\",\n              \"value\": \"={{\\nnew Date(2025,8,15,0,0,0).toDateTime().toUTC()\\n  .plus({ 'day': $json.week_beginning - 45915 })\\n}}\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"0df44568-4bc6-46ed-9419-5462f528dbc3\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        740,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.5-pro-preview-03-25\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"dSxo6ns5wn658r8N\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"13aa069f-dc32-4a57-9a57-29264a09c80d\",\n      \"name\": \"Create ICS File\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        2100,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"fileName\": \"={{ $('Get Term Dates Excel').first().binary.data.fileName }}.ics\",\n          \"mimeType\": \"text/calendar\"\n        },\n        \"operation\": \"toBinary\",\n        \"sourceProperty\": \"data\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"6cf27afd-8f16-40c7-bbc3-bba7fcf76097\",\n      \"name\": \"Events to ICS Document\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1720,\n        0\n      ],\n      \"parameters\": {\n        \"language\": \"python\",\n        \"pythonCode\": \"from datetime import datetime, timedelta\\nimport base64\\n\\nasync def json_array_to_ics_pyodide(json_array, prodid=\\\"-//My Application//EN\\\"):\\n    \\\"\\\"\\\"\\n    Converts a JSON array of calendar events to ICS file content in a Pyodide environment.\\n\\n    Args:\\n        json_array: A list of dictionaries, where each dictionary represents an event\\n                    and contains keys like \\\"week_number\\\", \\\"week_beginning\\\", and \\\"title\\\".\\n                    It's expected that \\\"week_beginning\\\" is an ISO 8601 formatted\\n                    date string.\\n        prodid: The product identifier string for the ICS file.\\n\\n    Returns:\\n        A string containing the content of the ICS file.\\n    \\\"\\\"\\\"\\n    ical = [\\\"BEGIN:VCALENDAR\\\",\\n            \\\"VERSION:2.0\\\",\\n            f\\\"PRODID:{prodid}\\\"]\\n\\n    for event_data in json_array:\\n        week_number = event_data.get(\\\"week_number\\\")\\n        week_beginning_str = event_data.get(\\\"week_beginning\\\")\\n        title = event_data.get(\\\"title\\\")\\n\\n        if week_beginning_str and title:\\n            try:\\n                # Parse the week_beginning string to a datetime object\\n                week_beginning = datetime.fromisoformat(week_beginning_str.replace('Z', '+00:00'))\\n\\n                # Calculate the end of the week (assuming events last for the whole week)\\n                week_ending = week_beginning + timedelta(days=7)\\n\\n                uid = f\\\"week-{week_number}-{week_beginning.strftime('%Y%m%d')}@my-application\\\"\\n                dtstamp = datetime.utcnow().strftime('%Y%m%dT%H%M%SZ')\\n                dtstart = week_beginning.strftime('%Y%m%d')\\n                dtend = week_ending.strftime('%Y%m%d')\\n                summary = title\\n\\n                ical.extend([\\n                    \\\"BEGIN:VEVENT\\\",\\n                    f\\\"UID:{uid}\\\",\\n                    f\\\"DTSTAMP:{dtstamp}\\\",\\n                    f\\\"DTSTART;VALUE=DATE:{dtstart}\\\",\\n                    f\\\"DTEND;VALUE=DATE:{dtend}\\\",\\n                    f\\\"SUMMARY:{summary}\\\",\\n                    \\\"END:VEVENT\\\"\\n                ])\\n\\n                # You can add more properties here if your JSON data contains them,\\n                # for example:\\n                # if \\\"description\\\" in event_data:\\n                #     ical.append(f\\\"DESCRIPTION:{event_data['description']}\\\")\\n                # if \\\"location\\\" in event_data:\\n                #     ical.append(f\\\"LOCATION:{event_data['location']}\\\")\\n\\n            except ValueError as e:\\n                print(f\\\"Error processing event with week_beginning '{week_beginning_str}': {e}\\\")\\n                continue  # Skip to the next event if there's a parsing error\\n\\n    ical.append(\\\"END:VCALENDAR\\\")\\n    return \\\"\\\\r\\\\n\\\".join(ical)\\n\\nics_content = await json_array_to_ics_pyodide([item.json for item in _input.all()])\\nics_bytes = ics_content.encode('utf-8')\\nbase64_bytes = base64.b64encode(ics_bytes)\\nbase64_string = base64_bytes.decode('utf-8')\\n\\nreturn {\\n  \\\"data\\\": base64_string\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e5c94c64-4262-4951-a772-75af431e578a\",\n      \"name\": \"Sort Events by Date\",\n      \"type\": \"n8n-nodes-base.sort\",\n      \"position\": [\n        1520,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sortFieldsUi\": {\n          \"sortField\": [\n            {\n              \"fieldName\": \"week_beginning\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3bbe74bb-cd20-4116-9272-12be8ac54700\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -260,\n        -240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 780,\n        \"height\": 500,\n        \"content\": \"## 一、使用Cloudflare®️ Markdown转换服务解析Excel文件\\n[了解Cloudflare Markdown转换服务详情](https://developers.cloudflare.com/workers-ai/markdown-conversion/)\\n\\n当前大型语言模型无法直接解析Excel文件，最佳解决方案是将电子表格转换为它们可识别的markdown格式。为此，我们可以使用Cloudflare专为此任务开发的全新文档转换服务，最终输出结果为markdown表格形式的表格转录文件。\\n\\n**注**：截至本文撰写时，该Markdown转换服务可免费使用，但需要注册Cloudflare账户。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"18fc9626-1c55-4893-8e72-06c48754ceb8\",\n      \"name\": \"Markdown Conversion Service\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        80,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.cloudflare.com/client/v4/accounts/{ACCOUNT_ID}/ai/tomarkdown\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"multipart-form-data\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"files\",\n              \"parameterType\": \"formBinaryData\",\n              \"inputDataFieldName\": \"data\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"cloudflareApi\"\n      },\n      \"credentials\": {\n        \"cloudflareApi\": {\n          \"id\": \"qOynkQdBH48ofOSS\",\n          \"name\": \"Cloudflare account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"5f71bc64-985c-43c4-bdfa-3cfda7e9c060\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        540,\n        -240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 680,\n        \"height\": 540,\n        \"content\": \"## 2. 利用AI提取学期日期至事件列表\\n[了解更多关于信息提取器的内容](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\n数据录入或许是AI/大语言模型最核心的应用场景。这项耗时且琐碎的任务，如今只需数秒即可高精度完成。在本案例中，我们要求AI通过结构化输出，将带有学期日期的每个事件提取为事件列表。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e9083886-81e3-483e-b959-12ce9005d862\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1240,\n        -240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 660,\n        \"height\": 480,\n        \"content\": \"## 3. 使用事件创建ICS文档\\n[了解更多关于代码节点的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/)\\n\\n现在我们有了事件数据，接下来需要创建一个日历文件来存放它们。通过代码节点，我们可以构建一个简单的ICS文档——这种格式能够导入到iCal、Google日历和Outlook中。对于此类任务，代码节点最适合处理自定义转换需求。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"04a7c856-88b4-4daa-a56f-6e2741907e4c\",\n      \"name\": \"Events to Items\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1000,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"output\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cab455c9-b15d-440d-9f30-7afe1af23ea8\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1920,\n        -240\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 720,\n        \"height\": 480,\n        \"content\": \"## 4. 创建用于导入的ICS二进制文件\\n[了解更多关于“转换为文件”节点的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.converttofile)\\n\\n最终，当我们的ICS文档准备就绪后，我们可以使用“转换为文件”节点来构建一个ICS二进制文件，该文件可以与团队成员、同学甚至导师共享。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c0861ef1-08f4-49e9-a700-a7224296cc72\",\n      \"name\": \"Send Email with Attachment\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        2340,\n        -20\n      ],\n      \"webhookId\": \"835ef864-60c4-4b84-84ee-104ee10644eb\",\n      \"parameters\": {\n        \"sendTo\": \"jim@example.com\",\n        \"message\": \"=Hey,\\n\\nPlease find attached calendar for Undergraduate terms dates 2025/2026.\\n\\nThanks\",\n        \"options\": {\n          \"attachmentsUi\": {\n            \"attachmentsBinary\": [\n              {}\n            ]\n          }\n        },\n        \"subject\": \"Undergraduate Terms Dates Calendar 2025/2026\",\n        \"emailType\": \"text\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"Sf5Gfl9NiFTNXFWb\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"85c4d928-83c7-445a-8e9b-d9daef05ae1d\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -20,\n        200\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 280,\n        \"height\": 80,\n        \"content\": \"### 需要Cloudflare账户\\n将您的Cloudflare账户ID {ACCOUNT_ID} 添加到URL中\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6a2d8e78-0b15-498f-bc96-bbbac1da1f21\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1020,\n        -880\n      ],\n      \"parameters\": {\n        \"width\": 420,\n        \"height\": 1380,\n        \"content\": \"## 立即试用！\\n### 该n8n模板可导入包含大学学期日程的XLSX文件，通过AI提取关键事件并转换为ICS格式，支持导入iCal、谷歌日历或Outlook。\\n\\n还在手动将重要学期日期添加到日历？停下！用这个基于AI/LLM的智能文档解析模板实现自动化。这个精彩案例可广泛应用于以Excel文件为主的多种场景。\\n\\n### 工作原理\\n* 通过HTTP请求节点从大学官网获取学期日程Excel文件(xlsx)\\n* 使用[Cloudflare的Markdown转换服务](https://developers.cloudflare.com/workers-ai/markdown-conversion/)将Excel表格转为Markdown格式，便于LLM读取\\n* 通过信息提取节点从Markdown表格中结构化输出事件及日期。LLM能完美处理此类场景，可智能解析单行多数据点的复杂布局\\n* 获取数据后应用场景无限！本示例使用Python代码节点按ICS规范整合事件，再通过\\\"文件转换\\\"节点生成ICS文件\\n* 最后通过邮件将ICS文件分享给同学或教师，为新学期日程规划提供便利！\\n\\n### 使用指南\\n* 确保Excel文件链接正确，必要时修改\\\"获取学期日程Excel\\\"节点的URL参数\\n* 按需更新Gmail节点中的收件邮箱，也可将ICS文件发送至Google Drive或学生门户\\n\\n### 环境要求\\n* 需Cloudflare账号使用Markdown转换服务\\n* 需Gemini进行LLM文档解析\\n* 需Gmail发送邮件\\n\\n### 自定义工作流\\n* 本模板适用于各类大学Excel文件（复杂程度不一），可尝试不同解析器和提取策略\\n\\n### 获取帮助\\n加入[Discord](https://discord.com/invite/XPKeKXeB7d)或访问[论坛](https://community.n8n.io/)提问！\\n\\n祝您玩得愉快！\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Fix Dates\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Sort Events by Date\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create ICS File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Email with Attachment\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Events to Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fix Dates\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Sort Events by Date\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Events to ICS Document\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Target Sheet\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Key Events and Dates\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Term Dates Excel\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Markdown Conversion Service\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Events to ICS Document\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create ICS File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Extract Key Events and Dates\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Markdown Conversion Service\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Target Sheet\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Key Events and Dates\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Events to Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Term Dates Excel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}