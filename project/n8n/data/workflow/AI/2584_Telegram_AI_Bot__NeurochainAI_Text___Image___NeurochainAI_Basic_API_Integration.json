{
  "title": "Telegram AI Bot: NeurochainAI Text & Image - NeurochainAI Basic API Integration",
  "url": "https://n8n.io/workflows/2584-telegram-ai-bot-neurochainai-text-and-image-neurochainai-basic-api-integration/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?count=20",
  "author": "NeurochainAI",
  "publish_date": "Last update 5 months ago",
  "content": "",
  "workflow_json": "{\"id\":\"RLWjEhY8L4TORAIj\",\"meta\":{\"instanceId\":\"36399efc72267ed21ee0d3747f5abdd0ee139cb67749ff919ff09fcd65230079\",\"templateCredsSetupCompleted\":true},\"name\":\"NeurochainAI Basic API Integration\",\"tags\":[],\"nodes\":[{\"id\":\"da34bd1a-4e4e-4133-acad-939d0cc96596\",\"name\":\"Telegram Trigger\",\"type\":\"n8n-nodes-base.telegramTrigger\",\"position\":[-1740,880],\"webhookId\":\"05885608-5344-4dcf-81ad-4550b9a01241\",\"parameters\":{\"updates\":[\"*\"],\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.1},{\"id\":\"3b3f4b00-6b3b-4346-8fcc-7ab75bcfe838\",\"name\":\"Code\",\"type\":\"n8n-nodes-base.code\",\"notes\":\"Extract the URL from the previous node\",\"position\":[80,260],\"parameters\":{\"jsCode\":\"// O valor vem como um array com uma string, então precisamos pegar o primeiro item do array\\nconst rawUrl = $json.choices[0].text;\\n\\n// Remover colchetes e aspas (se existirem) e pegar o primeiro elemento do array\\nconst imageUrl = JSON.parse(rawUrl)[0];\\n\\nreturn {\\n  json: {\\n    imageUrl: imageUrl\\n  }\\n};\"},\"notesInFlow\":true,\"typeVersion\":2},{\"id\":\"ccb91a15-96b5-42aa-a6ae-ff7ae79d1e8f\",\"name\":\"HTTP Request3\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[240,260],\"parameters\":{\"url\":\"={{ $json.imageUrl }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"588899b6-a68e-407e-b12f-f05c205674c5\",\"name\":\"Telegram2\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[-520,500],\"parameters\":{\"text\":\"⌛\",\"chatId\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"replyMarkup\":\"inlineKeyboard\",\"additionalFields\":{\"appendAttribution\":false,\"reply_to_message_id\":\"={{ $('Telegram Trigger').item.json.message.message_id }}\"}},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"e1534b69-d93d-4e8b-a3c4-adbc17c1dacd\",\"name\":\"Telegram1\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[440,260],\"parameters\":{\"chatId\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"operation\":\"sendPhoto\",\"binaryData\":true,\"additionalFields\":{\"caption\":\"=*Prompt:* `{{ $('Code1').item.json.cleanMessage }}`\",\"parse_mode\":\"Markdown\",\"reply_to_message_id\":\"={{ $('Telegram Trigger').item.json.message.message_id }}\"}},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"88ba4ced-bdd0-408e-94e1-9e54ed4d1b5d\",\"name\":\"Telegram4\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[620,260],\"parameters\":{\"chatId\":\"={{ $('Telegram2').item.json.result.chat.id }}\",\"messageId\":\"={{ $('Telegram2').item.json.result.message_id }}\",\"operation\":\"deleteMessage\"},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"251a026e-ebfa-44f5-9c80-f30e5c142e23\",\"name\":\"Telegram3\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[260,700],\"parameters\":{\"text\":\"={{ $json.error.message }}\",\"chatId\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"replyMarkup\":\"inlineKeyboard\",\"inlineKeyboard\":{\"rows\":[{\"row\":{\"buttons\":[{\"text\":\"🔄 Retry\",\"additionalFields\":{\"callback_data\":\"=response= Fluxretry: {{ $('Code1').item.json.cleanMessage }}\"}}]}}]},\"additionalFields\":{\"appendAttribution\":false,\"reply_to_message_id\":\"={{ $('Telegram Trigger').item.json.message.message_id }}\"}},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"fb71a62a-9cf8-4abf-baa4-885ae4b1a290\",\"name\":\"Telegram5\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[480,700],\"parameters\":{\"chatId\":\"={{ $('Telegram2').item.json.result.chat.id }}\",\"messageId\":\"={{ $('Telegram2').item.json.result.message_id }}\",\"operation\":\"deleteMessage\"},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"0f9bcdf0-0008-447a-900c-6afe5b9d53fe\",\"name\":\"Telegram6\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[260,520],\"parameters\":{\"text\":\"=*Prompt too short*\",\"chatId\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"replyMarkup\":\"inlineKeyboard\",\"additionalFields\":{\"parse_mode\":\"Markdown\",\"appendAttribution\":false,\"reply_to_message_id\":\"={{ $('Telegram Trigger').item.json.message.message_id }}\"}},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"d805548a-7379-456c-9bc3-f5fafeb86aed\",\"name\":\"Telegram7\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[480,520],\"parameters\":{\"chatId\":\"={{ $('Telegram2').item.json.result.chat.id }}\",\"messageId\":\"={{ $('Telegram2').item.json.result.message_id }}\",\"operation\":\"deleteMessage\"},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"a3e521a3-aff0-4d31-9a69-626f70f86ae2\",\"name\":\"NeurochainAI - REST API\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueErrorOutput\",\"position\":[-680,1280],\"parameters\":{\"url\":\"https://ncmb.neurochain.io/tasks/message\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"model\\\": \\\"Meta-Llama-3.1-8B-Instruct-Q6_K.gguf\\\",\\n  \\\"prompt\\\": \\\"You must respond directly to the user's message, and the message the user sent you is the following message: {{ $('Telegram Trigger').item.json.message.text }}\\\",\\n  \\\"max_tokens\\\": 1024,\\n  \\\"temperature\\\": 0.6,\\n  \\\"top_p\\\": 0.95,\\n  \\\"frequency_penalty\\\": 0,\\n  \\\"presence_penalty\\\": 1.1\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer YOUR-API-KEY-HERE\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":4.2,\"alwaysOutputData\":false},{\"id\":\"5fea3a8b-3e1b-4c69-b734-3f9dc7647e4b\",\"name\":\"TYPING - ACTION\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[-1100,1280],\"parameters\":{\"chatId\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"operation\":\"sendChatAction\"},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"ca183e3d-2bef-4d80-bbb7-c712a0290b2b\",\"name\":\"AI Response\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[-360,1000],\"parameters\":{\"text\":\"={{ $json.choices[0].text }}\",\"chatId\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"additionalFields\":{\"parse_mode\":\"Markdown\",\"appendAttribution\":false,\"reply_to_message_id\":\"={{ $('Telegram Trigger').item.json.message.message_id }}\"}},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"27e65f30-e58e-457d-b3b7-2b74267554e1\",\"name\":\"No response\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[-140,1240],\"parameters\":{\"text\":\"=*No response from worker*\",\"chatId\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"additionalFields\":{\"parse_mode\":\"Markdown\",\"appendAttribution\":false,\"reply_to_message_id\":\"={{ $('Telegram Trigger').item.json.message.message_id }}\"}},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"02cf4dfa-558f-4968-ad09-19f1e40735b0\",\"name\":\"Prompt too short\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[-140,1400],\"parameters\":{\"text\":\"=*Prompt too short*\",\"chatId\":\"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\"replyMarkup\":\"inlineKeyboard\",\"additionalFields\":{\"parse_mode\":\"Markdown\",\"appendAttribution\":false,\"reply_to_message_id\":\"={{ $('Telegram Trigger').item.json.message.message_id }}\"}},\"credentials\":{\"telegramApi\":{\"id\":\"VPtf3hBnwGucAQtu\",\"name\":\"TEMPLATE\"}},\"typeVersion\":1.2},{\"id\":\"943d31e4-3745-49ea-9669-8a560a486cc4\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-400,1220],\"parameters\":{\"color\":3,\"width\":460.4333621829785,\"height\":347.9769162173868,\"content\":\"## ERROR\"},\"typeVersion\":1},{\"id\":\"6b5d142f-8d8c-493f-81e7-cedb4e95cd31\",\"name\":\"Switch2\",\"type\":\"n8n-nodes-base.switch\",\"position\":[-380,1380],\"parameters\":{\"rules\":{\"values\":[{\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.error.message }}\",\"rightValue\":\"=500 - \\\"{\\\\\\\"error\\\\\\\":true,\\\\\\\"msg\\\\\\\":\\\\\\\"No response from worker\\\\\\\"}\\\"\"}]}},{\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"ef851d57-0618-4fe7-8469-a30971a05ee5\",\"operator\":{\"type\":\"string\",\"operation\":\"notEquals\"},\"leftValue\":\"{{ $json.error.message }}\",\"rightValue\":\"400 - \\\"{\\\\\\\"error\\\\\\\":true,\\\\\\\"msg\\\\\\\":\\\\\\\"Prompt string is invalid\\\\\\\"}\\\"\"}]}}]},\"options\":{}},\"typeVersion\":3.2},{\"id\":\"77651cb7-2530-46b2-89eb-7ac07f39a3ba\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-400,860],\"parameters\":{\"color\":4,\"width\":459.0810102677459,\"height\":350.68162004785273,\"content\":\"## SUCCESS\\nThis node will send the AI ​​response directly to the Telegram chat.\"},\"typeVersion\":1},{\"id\":\"5dce8414-fe7a-450a-a414-553d3e5e01cd\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-830.8527430805248,861.5987888475245],\"parameters\":{\"color\":5,\"width\":411.78262099325127,\"height\":705.0354263931183,\"content\":\"## HTTP REQUEST\\n\\nReplace **MODEL** with the desired AI model from the NeurochainAI dashboard.\\n\\nReplace YOUR-API-KEY-HERE with your actual NeurochainAI API key.\\n\\n**Models:**\\nMeta-Llama-3.1-8B-Instruct-Q8_0.gguf\\nMeta-Llama-3.1-8B-Instruct-Q6_K.gguf\\nMistral-7B-Instruct-v0.2-GPTQ-Neurochain-custom-io\\nMistral-7B-Instruct-v0.2-GPTQ-Neurochain-custom\\nMistral-7B-OpenOrca-GPTQ\\nMistral-7B-Instruct-v0.1-gguf-q8_0.gguf\\nMistral-7B-Instruct-v0.2-GPTQ\\ningredient-extractor-mistral-7b-instruct-v0.1-gguf-q8_0.gguf\"},\"typeVersion\":1},{\"id\":\"3540e1fa-01f8-4b5e-ad7a-1b1c5cd90d08\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-840,220],\"parameters\":{\"color\":6,\"width\":236.80242230495116,\"height\":535.7153791682382,\"content\":\"## This node removes the /flux prefix.\"},\"typeVersion\":1},{\"id\":\"6720b734-c0ae-4c88-adb6-3931467c780d\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[220,444],\"parameters\":{\"color\":3,\"width\":593.1328365275054,\"height\":403.9345258807414,\"content\":\"## ERROR\"},\"typeVersion\":1},{\"id\":\"30332278-399d-4c8f-8470-dfb967764455\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-320,220],\"parameters\":{\"color\":5,\"width\":384.60321058533617,\"height\":538.7613862505775,\"content\":\"## HTTP REQUEST\\n\\nReplace **MODEL** with the desired AI model from the NeurochainAI dashboard.\\n\\nReplace YOUR-API-KEY-HERE with your actual NeurochainAI API key.\\n\\n**Models:**\\nsuper-flux1-schnell-gguf\\nflux1-schnell-gguf\"},\"typeVersion\":1},{\"id\":\"09f17d6a-6229-49ad-b77b-243712552f2b\",\"name\":\"Code1\",\"type\":\"n8n-nodes-base.code\",\"position\":[-780,480],\"parameters\":{\"jsCode\":\"// Acessa a mensagem original que está em $json.message.text\\nconst userMessage = $json.message.text;\\n\\n// Remover o prefixo '/flux' e qualquer espaço extra após o comando\\nconst cleanMessage = userMessage.replace(/^\\\\/flux\\\\s*/, '');\\n\\n// Retornar a mensagem limpa\\nreturn {\\n  json: {\\n    cleanMessage: cleanMessage\\n  }\\n};\"},\"typeVersion\":2},{\"id\":\"0c809796-9776-4238-94b8-0779ad390bc6\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-580,220],\"parameters\":{\"height\":535.7153791682384,\"content\":\"## This node sends an emoji to indicate that the prompt is being processed.\"},\"typeVersion\":1},{\"id\":\"19043710-a61a-46d0-9ab9-bcdf9c94f800\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[220,80],\"parameters\":{\"color\":4,\"width\":596.5768511548468,\"height\":350.68162004785273,\"content\":\"## SUCCESS\\nThis node will send the AI ​​response directly to the Telegram chat.\"},\"typeVersion\":1},{\"id\":\"e5715001-75a3-4da3-84bb-9aad193fe680\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"position\":[-1420,880],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"Flux\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":false,\"typeValidation\":\"loose\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"f5df9de6-0650-42e4-9a6e-8d1becf16c51\",\"operator\":{\"type\":\"string\",\"operation\":\"startsWith\"},\"leftValue\":\"={{ $json.message.text }}\",\"rightValue\":\"/flux\"}]},\"renameOutput\":true},{\"outputKey\":\"text\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":false,\"typeValidation\":\"loose\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"a49ecf63-3f68-4e21-a015-d0cbc227c230\",\"operator\":{\"type\":\"string\",\"operation\":\"contains\"},\"leftValue\":\"={{ $json.message.text }}\",\"rightValue\":\"@NCNAI_BOT\"}]},\"renameOutput\":true},{\"outputKey\":\"DM Text\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":false,\"typeValidation\":\"loose\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d5ac0c9f-858a-4040-b72e-ae7b522ff60e\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.message.chat.type }}\",\"rightValue\":\"private\"}]},\"renameOutput\":true}]},\"options\":{\"ignoreCase\":true},\"looseTypeValidation\":true},\"typeVersion\":3.2},{\"id\":\"0ebdea59-8518-4078-b07a-9aa24c5e79b5\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1840,200],\"parameters\":{\"width\":623.6530631885605,\"height\":648.96526541807,\"content\":\"## Instructions for Using the Template\\nFollow these steps to set up and use this template:\\n\\n**Create a Telegram Bot**:\\n- Open Telegram and search for BotFather.\\n- Use the ``/newbot`` command to create your bot.\\n- Follow the prompts and copy the Token provided at the end.\\n-------------\\n**Obtain a NeurochainAI API Key:**\\n\\n- Log in to the NeurochainAI Dashboard.\\n- Generate an **API Key** under the Inference As Service section.\\n- Ensure your account has sufficient credits for usage.\\n-------------\\n **Configure Telegram Nodes:**\\n- Locate all Telegram nodes in the workflow and add your Telegram Bot Token to each node's credentials.\\n-------------\\n**Configure HTTP Request Nodes:**\\n\\n- Identify the NeurochainAI - Rest API and NeurochainAI - Flux nodes in the workflow.\\nIn each node:\\n- Enter your desired model in the Model field.\\n- Replace ``YOUR-API-KEY-HERE`` with your API Key in the headers or configuration section.\\n-------------\\n**Save and Test:**\\n- Save the workflow in N8N.\\n- Test the workflow by interacting with your Telegram bot to trigger text and image generation tasks.\"},\"typeVersion\":1},{\"id\":\"06642d6b-f8e2-48b6-87e3-5f51af75d357\",\"name\":\"NeurochainAI - Flux\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueErrorOutput\",\"position\":[-180,540],\"parameters\":{\"url\":\"https://ncmb.neurochain.io/tasks/tti\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"model\\\": \\\"flux1-schnell-gguf\\\",\\n  \\\"prompt\\\": \\\"Generate an image that matches exactly this: {{ $('Code1').item.json.cleanMessage }}\\\",\\n  \\\"size\\\": \\\"1024x1024\\\",\\n  \\\"quality\\\": \\\"standard\\\",\\n  \\\"n\\\": 1,\\n  \\\"seed\\\": {{ Math.floor(Math.random() * 999) + 1 }}\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer YOUR-API-KEY-HERE\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":4.2,\"alwaysOutputData\":false},{\"id\":\"92820069-3e65-4385-8b79-9b04dd1d3b03\",\"name\":\"Switch1\",\"type\":\"n8n-nodes-base.switch\",\"position\":[100,600],\"parameters\":{\"rules\":{\"values\":[{\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.error.message }}\",\"rightValue\":\"400 - \\\"{\\\\\\\"error\\\\\\\":true,\\\\\\\"msg\\\\\\\":\\\\\\\"Prompt string is invalid\\\\\\\"}\\\"\"}]}},{\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"ef851d57-0618-4fe7-8469-a30971a05ee5\",\"operator\":{\"type\":\"string\",\"operation\":\"notEquals\"},\"leftValue\":\"{{ $json.error.message }}\",\"rightValue\":\"400 - \\\"{\\\\\\\"error\\\\\\\":true,\\\\\\\"msg\\\\\\\":\\\\\\\"Prompt string is invalid\\\\\\\"}\\\"\"}]}}]},\"options\":{}},\"typeVersion\":3.2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"ef6d73c3-5256-4bc0-9e10-1daf674c083e\",\"connections\":{\"Code\":{\"main\":[[{\"node\":\"HTTP Request3\",\"type\":\"main\",\"index\":0}]]},\"Code1\":{\"main\":[[{\"node\":\"Telegram2\",\"type\":\"main\",\"index\":0}]]},\"Switch\":{\"main\":[[{\"node\":\"Code1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"TYPING - ACTION\",\"type\":\"main\",\"index\":0}],[{\"node\":\"TYPING - ACTION\",\"type\":\"main\",\"index\":0}]]},\"Switch1\":{\"main\":[[{\"node\":\"Telegram6\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Telegram3\",\"type\":\"main\",\"index\":0}]]},\"Switch2\":{\"main\":[[{\"node\":\"No response\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Prompt too short\",\"type\":\"main\",\"index\":0}]]},\"Telegram1\":{\"main\":[[{\"node\":\"Telegram4\",\"type\":\"main\",\"index\":0}]]},\"Telegram2\":{\"main\":[[{\"node\":\"NeurochainAI - Flux\",\"type\":\"main\",\"index\":0}]]},\"Telegram3\":{\"main\":[[{\"node\":\"Telegram5\",\"type\":\"main\",\"index\":0}]]},\"Telegram6\":{\"main\":[[{\"node\":\"Telegram7\",\"type\":\"main\",\"index\":0}]]},\"HTTP Request3\":{\"main\":[[{\"node\":\"Telegram1\",\"type\":\"main\",\"index\":0}]]},\"TYPING - ACTION\":{\"main\":[[{\"node\":\"NeurochainAI - REST API\",\"type\":\"main\",\"index\":0}]]},\"Telegram Trigger\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"NeurochainAI - Flux\":{\"main\":[[{\"node\":\"Code\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Switch1\",\"type\":\"main\",\"index\":0}]]},\"NeurochainAI - REST API\":{\"main\":[[{\"node\":\"AI Response\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Switch2\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This template provides a workflow to integrate a Telegram bot with **NeurochainAI** 's inference capabilities, supporting both text processing and image generation. Follow these steps to get started:\n\n> **Purpose:** Enables seamless integration between your Telegram bot and NeurochainAI for advanced AI-driven text and image tasks.\n\n## Requirements\n\n  * Telegram Bot Token.\n  * NeurochainAI API Key.\n  * Sufficient credits to utilize NeurochainAI services.\n\n\n\n## Features\n\n  * Text processing through NeurochainAI's inference engine.\n  * AI-powered image generation (Flux).\n  * Easy customization and scalability for your use case.\n\n\n\n## Setup\n\n  1. Import the template into N8N.\n  2. Add your Telegram Bot Token and NeurochainAI API Key where prompted.\n  3. Follow the step-by-step instructions embedded in the template for configuration.\n\n\n\n[NeurochainAI Website](https://www.neurochain.ai/)  \n[NeurochainAI Guides](https://docs.neurochain.ai/nc/neurochainai-guides)\n",
  "readme_html": "<!--[--><div data-v-006f9244=\"\"><p>This template provides a workflow to integrate a Telegram bot with <strong>NeurochainAI</strong>'s inference capabilities, supporting both text processing and image generation. Follow these steps to get started:</p>\n<blockquote>\n<p><strong>Purpose:</strong> Enables seamless integration between your Telegram bot and NeurochainAI for advanced AI-driven text and image tasks.</p>\n</blockquote>\n<h2>Requirements</h2>\n<ul>\n<li>Telegram Bot Token.</li>\n<li>NeurochainAI API Key.</li>\n<li>Sufficient credits to utilize NeurochainAI services.</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>Text processing through NeurochainAI's inference engine.</li>\n<li>AI-powered image generation (Flux).</li>\n<li>Easy customization and scalability for your use case.</li>\n</ul>\n<h2>Setup</h2>\n<ol>\n<li>Import the template into N8N.</li>\n<li>Add your Telegram Bot Token and NeurochainAI API Key where prompted.</li>\n<li>Follow the step-by-step instructions embedded in the template for configuration.</li>\n</ol>\n<p><a href=\"https://www.neurochain.ai/\" rel=\"ugc nofollow\" target=\"_blank\">NeurochainAI Website</a><br>\n<a href=\"https://docs.neurochain.ai/nc/neurochainai-guides\" rel=\"ugc nofollow\" target=\"_blank\">NeurochainAI Guides</a></p>\n</div><!--]-->",
  "readme_zh": "该模板提供了一个工作流程，用于将Telegram机器人与**NeurochainAI**的推理能力集成，支持文本处理和图像生成功能。按照以下步骤开始使用：\n\n> **目的：** 实现Telegram机器人与NeurochainAI的无缝集成，以执行高级AI驱动的文本和图像任务。\n\n## 需求\n\n  * Telegram机器人令牌。\n  * NeurochainAI API密钥。\n  * 足够的积分以使用NeurochainAI服务。\n\n## 功能\n\n  * 通过NeurochainAI推理引擎进行文本处理。\n  * AI驱动的图像生成（Flux）。\n  * 可根据您的用例轻松定制和扩展。\n\n## 设置步骤\n\n  1. 将模板导入N8N。\n  2. 在提示处添加您的Telegram机器人令牌和NeurochainAI API密钥。\n  3. 按照模板内嵌的逐步说明完成配置。\n\n[NeurochainAI官网](https://www.neurochain.ai/)  \n[NeurochainAI指南](https://docs.neurochain.ai/nc/neurochainai-guides)",
  "title_zh": "Telegram AI机器人：NeurochainAI文本与图像 - NeurochainAI基础API集成",
  "publish_date_absolute": "2024-12-06",
  "publish_date_zh": "最后更新于5个月前",
  "workflow_json_zh": "{\n  \"id\": \"RLWjEhY8L4TORAIj\",\n  \"meta\": {\n    \"instanceId\": \"36399efc72267ed21ee0d3747f5abdd0ee139cb67749ff919ff09fcd65230079\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"NeurochainAI Basic API Integration\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"da34bd1a-4e4e-4133-acad-939d0cc96596\",\n      \"name\": \"Telegram Trigger\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        -1740,\n        880\n      ],\n      \"webhookId\": \"05885608-5344-4dcf-81ad-4550b9a01241\",\n      \"parameters\": {\n        \"updates\": [\n          \"*\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"3b3f4b00-6b3b-4346-8fcc-7ab75bcfe838\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"notes\": \"Extract the URL from the previous node\",\n      \"position\": [\n        80,\n        260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// O valor vem como um array com uma string, então precisamos pegar o primeiro item do array\\nconst rawUrl = $json.choices[0].text;\\n\\n// Remover colchetes e aspas (se existirem) e pegar o primeiro elemento do array\\nconst imageUrl = JSON.parse(rawUrl)[0];\\n\\nreturn {\\n  json: {\\n    imageUrl: imageUrl\\n  }\\n};\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ccb91a15-96b5-42aa-a6ae-ff7ae79d1e8f\",\n      \"name\": \"HTTP Request3\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        240,\n        260\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.imageUrl }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"588899b6-a68e-407e-b12f-f05c205674c5\",\n      \"name\": \"Telegram2\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -520,\n        500\n      ],\n      \"parameters\": {\n        \"text\": \"⌛\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"replyMarkup\": \"inlineKeyboard\",\n        \"additionalFields\": {\n          \"appendAttribution\": false,\n          \"reply_to_message_id\": \"={{ $('Telegram Trigger').item.json.message.message_id }}\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"e1534b69-d93d-4e8b-a3c4-adbc17c1dacd\",\n      \"name\": \"Telegram1\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        440,\n        260\n      ],\n      \"parameters\": {\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"operation\": \"sendPhoto\",\n        \"binaryData\": true,\n        \"additionalFields\": {\n          \"caption\": \"=*Prompt:* `{{ $('Code1').item.json.cleanMessage }}`\",\n          \"parse_mode\": \"Markdown\",\n          \"reply_to_message_id\": \"={{ $('Telegram Trigger').item.json.message.message_id }}\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"88ba4ced-bdd0-408e-94e1-9e54ed4d1b5d\",\n      \"name\": \"Telegram4\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        620,\n        260\n      ],\n      \"parameters\": {\n        \"chatId\": \"={{ $('Telegram2').item.json.result.chat.id }}\",\n        \"messageId\": \"={{ $('Telegram2').item.json.result.message_id }}\",\n        \"operation\": \"deleteMessage\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"251a026e-ebfa-44f5-9c80-f30e5c142e23\",\n      \"name\": \"Telegram3\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        260,\n        700\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.error.message }}\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"replyMarkup\": \"inlineKeyboard\",\n        \"inlineKeyboard\": {\n          \"rows\": [\n            {\n              \"row\": {\n                \"buttons\": [\n                  {\n                    \"text\": \"🔄 Retry\",\n                    \"additionalFields\": {\n                      \"callback_data\": \"=response= Fluxretry: {{ $('Code1').item.json.cleanMessage }}\"\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"additionalFields\": {\n          \"appendAttribution\": false,\n          \"reply_to_message_id\": \"={{ $('Telegram Trigger').item.json.message.message_id }}\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"fb71a62a-9cf8-4abf-baa4-885ae4b1a290\",\n      \"name\": \"Telegram5\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        480,\n        700\n      ],\n      \"parameters\": {\n        \"chatId\": \"={{ $('Telegram2').item.json.result.chat.id }}\",\n        \"messageId\": \"={{ $('Telegram2').item.json.result.message_id }}\",\n        \"operation\": \"deleteMessage\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"0f9bcdf0-0008-447a-900c-6afe5b9d53fe\",\n      \"name\": \"Telegram6\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        260,\n        520\n      ],\n      \"parameters\": {\n        \"text\": \"=*Prompt too short*\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"replyMarkup\": \"inlineKeyboard\",\n        \"additionalFields\": {\n          \"parse_mode\": \"Markdown\",\n          \"appendAttribution\": false,\n          \"reply_to_message_id\": \"={{ $('Telegram Trigger').item.json.message.message_id }}\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"d805548a-7379-456c-9bc3-f5fafeb86aed\",\n      \"name\": \"Telegram7\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        480,\n        520\n      ],\n      \"parameters\": {\n        \"chatId\": \"={{ $('Telegram2').item.json.result.chat.id }}\",\n        \"messageId\": \"={{ $('Telegram2').item.json.result.message_id }}\",\n        \"operation\": \"deleteMessage\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a3e521a3-aff0-4d31-9a69-626f70f86ae2\",\n      \"name\": \"NeurochainAI - REST API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        -680,\n        1280\n      ],\n      \"parameters\": {\n        \"url\": \"https://ncmb.neurochain.io/tasks/message\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"Meta-Llama-3.1-8B-Instruct-Q6_K.gguf\\\",\\n  \\\"prompt\\\": \\\"You must respond directly to the user's message, and the message the user sent you is the following message: {{ $('Telegram Trigger').item.json.message.text }}\\\",\\n  \\\"max_tokens\\\": 1024,\\n  \\\"temperature\\\": 0.6,\\n  \\\"top_p\\\": 0.95,\\n  \\\"frequency_penalty\\\": 0,\\n  \\\"presence_penalty\\\": 1.1\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer YOUR-API-KEY-HERE\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"5fea3a8b-3e1b-4c69-b734-3f9dc7647e4b\",\n      \"name\": \"TYPING - ACTION\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -1100,\n        1280\n      ],\n      \"parameters\": {\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"operation\": \"sendChatAction\"\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"ca183e3d-2bef-4d80-bbb7-c712a0290b2b\",\n      \"name\": \"AI Response\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -360,\n        1000\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.choices[0].text }}\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"Markdown\",\n          \"appendAttribution\": false,\n          \"reply_to_message_id\": \"={{ $('Telegram Trigger').item.json.message.message_id }}\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"27e65f30-e58e-457d-b3b7-2b74267554e1\",\n      \"name\": \"No response\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -140,\n        1240\n      ],\n      \"parameters\": {\n        \"text\": \"=*No response from worker*\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"Markdown\",\n          \"appendAttribution\": false,\n          \"reply_to_message_id\": \"={{ $('Telegram Trigger').item.json.message.message_id }}\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"02cf4dfa-558f-4968-ad09-19f1e40735b0\",\n      \"name\": \"Prompt too short\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        -140,\n        1400\n      ],\n      \"parameters\": {\n        \"text\": \"=*Prompt too short*\",\n        \"chatId\": \"={{ $('Telegram Trigger').item.json.message.chat.id }}\",\n        \"replyMarkup\": \"inlineKeyboard\",\n        \"additionalFields\": {\n          \"parse_mode\": \"Markdown\",\n          \"appendAttribution\": false,\n          \"reply_to_message_id\": \"={{ $('Telegram Trigger').item.json.message.message_id }}\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"VPtf3hBnwGucAQtu\",\n          \"name\": \"TEMPLATE\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"943d31e4-3745-49ea-9669-8a560a486cc4\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -400,\n        1220\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 460.4333621829785,\n        \"height\": 347.9769162173868,\n        \"content\": \"错误\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6b5d142f-8d8c-493f-81e7-cedb4e95cd31\",\n      \"name\": \"Switch2\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -380,\n        1380\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.error.message }}\",\n                    \"rightValue\": \"=500 - \\\"{\\\\\\\"error\\\\\\\":true,\\\\\\\"msg\\\\\\\":\\\\\\\"No response from worker\\\\\\\"}\\\"\"\n                  }\n                ]\n              }\n            },\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"ef851d57-0618-4fe7-8469-a30971a05ee5\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"notEquals\"\n                    },\n                    \"leftValue\": \"{{ $json.error.message }}\",\n                    \"rightValue\": \"400 - \\\"{\\\\\\\"error\\\\\\\":true,\\\\\\\"msg\\\\\\\":\\\\\\\"Prompt string is invalid\\\\\\\"}\\\"\"\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"77651cb7-2530-46b2-89eb-7ac07f39a3ba\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -400,\n        860\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 459.0810102677459,\n        \"height\": 350.68162004785273,\n        \"content\": \"## 成功\\n此节点将直接将AI的响应发送至Telegram聊天中。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5dce8414-fe7a-450a-a414-553d3e5e01cd\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -830.8527430805248,\n        861.5987888475245\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 411.78262099325127,\n        \"height\": 705.0354263931183,\n        \"content\": \"## HTTP请求\\n\\n将**MODEL**替换为NeurochainAI控制面板中所需的AI模型。\\n\\n将YOUR-API-KEY-HERE替换为您实际的NeurochainAI API密钥。\\n\\n**可用模型：**\\nMeta-Llama-3.1-8B-Instruct-Q8_0.gguf\\nMeta-Llama-3.1-8B-Instruct-Q6_K.gguf\\nMistral-7B-Instruct-v0.2-GPTQ-Neurochain-custom-io\\nMistral-7B-Instruct-v0.2-GPTQ-Neurochain-custom\\nMistral-7B-OpenOrca-GPTQ\\nMistral-7B-Instruct-v0.1-gguf-q8_0.gguf\\nMistral-7B-Instruct-v0.2-GPTQ\\ningredient-extractor-mistral-7b-instruct-v0.1-gguf-q8_0.gguf\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3540e1fa-01f8-4b5e-ad7a-1b1c5cd90d08\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -840,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 236.80242230495116,\n        \"height\": 535.7153791682382,\n        \"content\": \"## 该节点用于移除/flux前缀。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6720b734-c0ae-4c88-adb6-3931467c780d\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        220,\n        444\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 593.1328365275054,\n        \"height\": 403.9345258807414,\n        \"content\": \"错误\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"30332278-399d-4c8f-8470-dfb967764455\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -320,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 384.60321058533617,\n        \"height\": 538.7613862505775,\n        \"content\": \"## HTTP请求\\n\\n将**MODEL**替换为NeurochainAI控制面板中所需的AI模型。\\n\\n将YOUR-API-KEY-HERE替换为您实际的NeurochainAI API密钥。\\n\\n**可用模型：**\\nsuper-flux1-schnell-gguf\\nflux1-schnell-gguf\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"09f17d6a-6229-49ad-b77b-243712552f2b\",\n      \"name\": \"Code1\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -780,\n        480\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Acessa a mensagem original que está em $json.message.text\\nconst userMessage = $json.message.text;\\n\\n// Remover o prefixo '/flux' e qualquer espaço extra após o comando\\nconst cleanMessage = userMessage.replace(/^\\\\/flux\\\\s*/, '');\\n\\n// Retornar a mensagem limpa\\nreturn {\\n  json: {\\n    cleanMessage: cleanMessage\\n  }\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"0c809796-9776-4238-94b8-0779ad390bc6\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -580,\n        220\n      ],\n      \"parameters\": {\n        \"height\": 535.7153791682384,\n        \"content\": \"## 该节点发送一个表情符号以表示提示正在处理中。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"19043710-a61a-46d0-9ab9-bcdf9c94f800\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        220,\n        80\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 596.5768511548468,\n        \"height\": 350.68162004785273,\n        \"content\": \"## 成功\\n此节点将直接把AI的响应发送至Telegram聊天中。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e5715001-75a3-4da3-84bb-9aad193fe680\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -1420,\n        880\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"Flux\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": false,\n                  \"typeValidation\": \"loose\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"f5df9de6-0650-42e4-9a6e-8d1becf16c51\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"startsWith\"\n                    },\n                    \"leftValue\": \"={{ $json.message.text }}\",\n                    \"rightValue\": \"/flux\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"text\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": false,\n                  \"typeValidation\": \"loose\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"a49ecf63-3f68-4e21-a015-d0cbc227c230\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    },\n                    \"leftValue\": \"={{ $json.message.text }}\",\n                    \"rightValue\": \"@NCNAI_BOT\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"DM Text\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": false,\n                  \"typeValidation\": \"loose\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"d5ac0c9f-858a-4040-b72e-ae7b522ff60e\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.message.chat.type }}\",\n                    \"rightValue\": \"private\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"ignoreCase\": true\n        },\n        \"looseTypeValidation\": true\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"0ebdea59-8518-4078-b07a-9aa24c5e79b5\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1840,\n        200\n      ],\n      \"parameters\": {\n        \"width\": 623.6530631885605,\n        \"height\": 648.96526541807,\n        \"content\": \"## 模板使用指南  \\n请按以下步骤配置并使用本模板：  \\n\\n**创建Telegram机器人**：  \\n- 打开Telegram，搜索BotFather。  \\n- 使用`/newbot`指令创建机器人。  \\n- 按提示操作，并复制最后提供的Token。  \\n-------------  \\n**获取NeurochainAI的API密钥**：  \\n\\n- 登录NeurochainAI仪表盘。  \\n- 在\\\"Inference As Service\\\"部分生成**API密钥**。  \\n- 确保账户有足够的使用额度。  \\n-------------  \\n**配置Telegram节点**：  \\n- 在流程中找到所有Telegram节点，将机器人Token填入各节点的凭证栏。  \\n-------------  \\n**配置HTTP请求节点**：  \\n\\n- 定位流程中的NeurochainAI - Rest API和NeurochainAI - Flux节点。  \\n在每个节点中：  \\n- 在Model字段输入所需模型名称。  \\n- 将headers或配置项中的`YOUR-API-KEY-HERE`替换为你的API密钥。  \\n-------------  \\n**保存并测试**：  \\n- 在N8N中保存流程。  \\n- 通过与Telegram机器人互动触发文本/图像生成任务，测试流程运行。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"06642d6b-f8e2-48b6-87e3-5f51af75d357\",\n      \"name\": \"NeurochainAI - Flux\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        -180,\n        540\n      ],\n      \"parameters\": {\n        \"url\": \"https://ncmb.neurochain.io/tasks/tti\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"flux1-schnell-gguf\\\",\\n  \\\"prompt\\\": \\\"Generate an image that matches exactly this: {{ $('Code1').item.json.cleanMessage }}\\\",\\n  \\\"size\\\": \\\"1024x1024\\\",\\n  \\\"quality\\\": \\\"standard\\\",\\n  \\\"n\\\": 1,\\n  \\\"seed\\\": {{ Math.floor(Math.random() * 999) + 1 }}\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer YOUR-API-KEY-HERE\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"92820069-3e65-4385-8b79-9b04dd1d3b03\",\n      \"name\": \"Switch1\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        100,\n        600\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.error.message }}\",\n                    \"rightValue\": \"400 - \\\"{\\\\\\\"error\\\\\\\":true,\\\\\\\"msg\\\\\\\":\\\\\\\"Prompt string is invalid\\\\\\\"}\\\"\"\n                  }\n                ]\n              }\n            },\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"ef851d57-0618-4fe7-8469-a30971a05ee5\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"notEquals\"\n                    },\n                    \"leftValue\": \"{{ $json.error.message }}\",\n                    \"rightValue\": \"400 - \\\"{\\\\\\\"error\\\\\\\":true,\\\\\\\"msg\\\\\\\":\\\\\\\"Prompt string is invalid\\\\\\\"}\\\"\"\n                  }\n                ]\n              }\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"ef6d73c3-5256-4bc0-9e10-1daf674c083e\",\n  \"connections\": {\n    \"Code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Code1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"TYPING - ACTION\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"TYPING - ACTION\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram6\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Telegram3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"No response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Prompt too short\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram4\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"NeurochainAI - Flux\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram5\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram6\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram7\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"TYPING - ACTION\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"NeurochainAI - REST API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Telegram Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"NeurochainAI - Flux\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Switch1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"NeurochainAI - REST API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Switch2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}