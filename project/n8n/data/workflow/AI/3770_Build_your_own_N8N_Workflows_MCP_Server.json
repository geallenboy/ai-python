{
  "title": "Build your own N8N Workflows MCP Server",
  "url": "https://n8n.io/workflows/3770-build-your-own-n8n-workflows-mcp-server/",
  "category": "AI",
  "category_url": "https://n8n.io/workflows/categories/ai/?sort=createdAt:desc",
  "author": "Jimleuk",
  "publish_date": "Last update 6 days ago",
  "publish_date_absolute": "2025-05-01",
  "content": "",
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"e3ed1048-bad0-4e91-bfb5-aef3e1883de4\",\"name\":\"Simplify Workflows\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1740,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"821226b0-12ad-4d1d-81c3-dfa3c286cce4\",\"name\":\"id\",\"type\":\"string\",\"value\":\"={{ $json.id }}\"},{\"id\":\"629d95d6-2501-4ad4-a5ed-e557237e1cc2\",\"name\":\"name\",\"type\":\"string\",\"value\":\"={{ $json.name }}\"},{\"id\":\"30699f7c-98d3-44ee-9749-c5528579f7e6\",\"name\":\"description\",\"type\":\"string\",\"value\":\"={{\\n$json.nodes\\n  .filter(node => node.type === 'n8n-nodes-base.stickyNote')\\n  .filter(node => node.parameters.content.toLowerCase().includes('try it out'))\\n  .map(node => node.parameters.content.substr(0,255) + '...')\\n  .join('\\\\n')\\n}}\"},{\"id\":\"6199c275-1ced-4f72-ba59-cb068db54c1b\",\"name\":\"parameters\",\"type\":\"string\",\"value\":\"={{\\n(function(node) {\\n  if (!node) return {};\\n  const inputs = node.parameters.workflowInputs.values;\\n  return {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": inputs.map(input => input.name),\\n    \\\"properties\\\": inputs.reduce((acc, input) => ({\\n      ...acc,\\n      [input.name]: { type: input.type ?? 'string' }\\n    }), {})\\n  }\\n})(\\n$json.nodes\\n  .filter(node => node.type === 'n8n-nodes-base.executeWorkflowTrigger')\\n  .first()\\n)\\n.toJsonString()\\n}}\"}]}},\"executeOnce\":false,\"typeVersion\":3.4},{\"id\":\"a935f5b6-3a35-49e7-870c-87e4daf0ad13\",\"name\":\"When Executed by Another Workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[-3060,600],\"parameters\":{\"workflowInputs\":{\"values\":[{\"name\":\"operation\"},{\"name\":\"workflowIds\"},{\"name\":\"parameters\",\"type\":\"object\"}]}},\"typeVersion\":1.1},{\"id\":\"2ff5e521-5288-47a9-af49-55a1bbbfb4f4\",\"name\":\"Operations\",\"type\":\"n8n-nodes-base.switch\",\"position\":[-2660,560],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"Add\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"3254a8f9-5fd3-4089-be16-cc3fd20639b8\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('When Executed by Another Workflow').first().json.operation }}\",\"rightValue\":\"addWorkflow\"}]},\"renameOutput\":true},{\"outputKey\":\"remove\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"a33dd02d-5192-48c9-b569-eafddabd2462\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('When Executed by Another Workflow').first().json.operation }}\",\"rightValue\":\"removeWorkflow\"}]},\"renameOutput\":true},{\"outputKey\":\"list\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2d68dc3f-a213-47f8-8453-1bceae404653\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('When Executed by Another Workflow').first().json.operation }}\",\"rightValue\":\"listWorkflows\"}]},\"renameOutput\":true},{\"outputKey\":\"search\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2146a87e-1a50-4caa-a2ee-f7f6fc2b19c9\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('When Executed by Another Workflow').first().json.operation }}\",\"rightValue\":\"searchWorkflows\"}]},\"renameOutput\":true},{\"outputKey\":\"execute\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"98b25a51-2cb5-49af-9609-827245595dc9\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('When Executed by Another Workflow').first().json.operation }}\",\"rightValue\":\"executeWorkflow\"}]},\"renameOutput\":true}]},\"options\":{}},\"typeVersion\":3.2},{\"id\":\"5b78271a-6474-4d87-a344-72f7f63822dc\",\"name\":\"Get MCP-tagged Workflows\",\"type\":\"n8n-nodes-base.n8n\",\"position\":[-2400,200],\"parameters\":{\"filters\":{\"tags\":\"mcp\"},\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"5vELmsVPmK4Bkqkg\",\"name\":\"n8n account\"}},\"typeVersion\":1},{\"id\":\"1197d29e-b124-4576-846d-876ad16de6e9\",\"name\":\"Filter Matching Ids\",\"type\":\"n8n-nodes-base.filter\",\"position\":[-2180,200],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"90c97733-48de-4402-8388-5d49e3534388\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{\\n$json.id\\n  ? $('When Executed by Another Workflow').first().json.workflowIds.split(',').includes($json.id)\\n  : false\\n}}\",\"rightValue\":\"={{ $json.id }}\"}]}},\"executeOnce\":false,\"typeVersion\":2.2,\"alwaysOutputData\":true},{\"id\":\"81623298-c3e7-4e20-86a9-d2587b302f28\",\"name\":\"Store In Memory\",\"type\":\"n8n-nodes-base.redis\",\"position\":[-1520,0],\"parameters\":{\"key\":\"mcp_n8n_tools\",\"value\":\"={{\\n($('Get Memory').item.json.data?.parseJson() ?? [])\\n  .concat($input.all().map(item => item.json))\\n  .toJsonString()\\n}}\",\"operation\":\"set\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"executeOnce\":true,\"typeVersion\":1},{\"id\":\"5ff0ea2f-a2ee-4cc3-bdf9-153ce5973770\",\"name\":\"AddTool Success\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1300,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"d921063f-e8ed-44a8-95a0-4402ecde6c5d\",\"name\":\"=response\",\"type\":\"string\",\"value\":\"={{ $('Simplify Workflows').all().length }} tools were added successfully.\"}]}},\"executeOnce\":true,\"typeVersion\":3.4},{\"id\":\"1d3169cc-15cd-4296-9e63-bb162322e5e2\",\"name\":\"AddTool Error\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1740,200],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"8c4e0763-a4ff-4e8a-a992-13e4e12a5685\",\"name\":\"response\",\"type\":\"string\",\"value\":\"Expected Tools matching Ids given, but none found.\"}]}},\"executeOnce\":true,\"typeVersion\":3.4},{\"id\":\"6149a950-c1ed-44b4-aee6-3daeabf8ba01\",\"name\":\"Get Memory\",\"type\":\"n8n-nodes-base.redis\",\"position\":[-2860,600],\"parameters\":{\"key\":\"mcp_n8n_tools\",\"options\":{},\"operation\":\"get\",\"propertyName\":\"data\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"typeVersion\":1},{\"id\":\"3c538002-45f7-4a2f-9ef4-5aede63235ab\",\"name\":\"Split Out\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[-2180,400],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"data\"},\"typeVersion\":1},{\"id\":\"d41e48e0-d610-4e18-9942-842419c99c83\",\"name\":\"Filter Matching IDs\",\"type\":\"n8n-nodes-base.filter\",\"position\":[-1960,400],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d2c149fb-d115-449b-9b74-f3c2f8ff7950\",\"operator\":{\"type\":\"boolean\",\"operation\":\"false\",\"singleValue\":true},\"leftValue\":\"={{\\n$json.id\\n  ? $('Operations').first().json.workflowIds.split(',').includes($json.id)\\n  : false\\n}}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2,\"alwaysOutputData\":true},{\"id\":\"21d8cdda-bb47-42cd-a056-809a5556b438\",\"name\":\"Store In Memory1\",\"type\":\"n8n-nodes-base.redis\",\"position\":[-1520,500],\"parameters\":{\"key\":\"mcp_n8n_tools\",\"value\":\"={{ $input.all().flatMap(item => item.json.data).compact() }}\",\"operation\":\"set\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"executeOnce\":true,\"typeVersion\":1},{\"id\":\"5a391d0a-ba13-4d54-85fd-eb2f6a935614\",\"name\":\"Remove Tool Success\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1300,400],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"1368947f-6625-4e2e-ae27-0fcad0a1d12a\",\"name\":\"response\",\"type\":\"string\",\"value\":\"={{ $('When Executed by Another Workflow').first().json.workflowIds.split(',').length }} tool(s) removed successfully.\"}]}},\"typeVersion\":3.4},{\"id\":\"65dfecc4-43ba-4518-adbf-9676c5cb1377\",\"name\":\"Convert to JSON\",\"type\":\"n8n-nodes-base.set\",\"position\":[-2400,400],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"bce29a06-cff6-4409-96d2-04cc858a0e98\",\"name\":\"data\",\"type\":\"array\",\"value\":\"={{ $json.data.parseJson() }}\"}]}},\"typeVersion\":3.4},{\"id\":\"b8b64fc2-63cf-4b17-9b6d-9d94aec10065\",\"name\":\"listTools Success\",\"type\":\"n8n-nodes-base.set\",\"position\":[-2400,600],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"bce29a06-cff6-4409-96d2-04cc858a0e98\",\"name\":\"response\",\"type\":\"array\",\"value\":\"={{\\n$json.data\\n  ? $json.data.parseJson()\\n  : []\\n}}\"}]}},\"typeVersion\":3.4},{\"id\":\"d4fd9e74-f040-4b3c-8ce0-371315a0d130\",\"name\":\"Get MCP-tagged Workflows1\",\"type\":\"n8n-nodes-base.n8n\",\"position\":[-2180,600],\"parameters\":{\"filters\":{\"tags\":\"mcp\"},\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"5vELmsVPmK4Bkqkg\",\"name\":\"n8n account\"}},\"typeVersion\":1},{\"id\":\"d58922c4-b721-4228-83cb-0b1d9632bbc6\",\"name\":\"Simplify Workflows1\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1960,600],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"821226b0-12ad-4d1d-81c3-dfa3c286cce4\",\"name\":\"id\",\"type\":\"string\",\"value\":\"={{ $json.id }}\"},{\"id\":\"629d95d6-2501-4ad4-a5ed-e557237e1cc2\",\"name\":\"name\",\"type\":\"string\",\"value\":\"={{ $json.name }}\"},{\"id\":\"30699f7c-98d3-44ee-9749-c5528579f7e6\",\"name\":\"description\",\"type\":\"string\",\"value\":\"={{\\n$json.nodes\\n  .filter(node => node.type === 'n8n-nodes-base.stickyNote')\\n  .filter(node => node.parameters.content.toLowerCase().includes('try it out'))\\n  .map(node => node.parameters.content.substr(0,255) + '...')\\n  .join('\\\\n')\\n}}\"},{\"id\":\"137221ef-f0a3-4441-bae7-d9d4a22e05b7\",\"name\":\"parameters\",\"type\":\"string\",\"value\":\"={{\\n(function(node) {\\n  if (!node) return {};\\n  const inputs = node.parameters.workflowInputs.values;\\n  return {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": inputs.map(input => input.name),\\n    \\\"properties\\\": inputs.reduce((acc, input) => ({\\n      ...acc,\\n      [input.name]: { type: input.type ?? 'string' }\\n    }), {})\\n  }\\n})(\\n$json.nodes\\n  .filter(node => node.type === 'n8n-nodes-base.executeWorkflowTrigger')\\n  .first()\\n)\\n.toJsonString()\\n}}\"}]}},\"executeOnce\":false,\"typeVersion\":3.4},{\"id\":\"b44b1115-5153-4b98-979f-219a32b693de\",\"name\":\"listTools Success1\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[-1740,600],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\",\"destinationFieldName\":\"response\"},\"typeVersion\":1},{\"id\":\"e9d9a33c-ebfa-4f74-a4da-fb6b6f6f6df5\",\"name\":\"Get Parameters\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1920,1020],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={{ $('When Executed by Another Workflow').first().json.parameters }}\"},\"typeVersion\":3.4},{\"id\":\"c028324a-5c79-4ce9-afd6-097b6f75a74a\",\"name\":\"executeTool Result\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[-1440,1020],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\",\"destinationFieldName\":\"response\"},\"typeVersion\":1},{\"id\":\"9eeac3cb-af7e-44c7-8891-6ff4367d0b54\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-3600,1040],\"parameters\":{\"options\":{\"systemMessage\":\"=You are a helpful assistant who only uses workflows to answer questions and perform tasks.\\n* When asked to complete a task, you will assume there is a workflow which you can use. Do not generate custom scripts or raw commands - use a workflow isntead.\\n* Only use the available active workflows as listed using the \\\"listWorkflows\\\" tool.\\n* Workflows returned by \\\"listWorkflows\\\" tool are active in the pool and do not need to be added again.\\n* Always ask the user before adding workflows to the availble pool.\\n* You do not need to confirm each step with the user when executing workflows.\\n* When executing the workflow, the required parameters schema for it is listed in the workflow's profile. To get this profile, use the listWokflows tool.\\n* If no available workflows are suitable and you are not able to complete the task, simply let the user know.\\n* Do not search for workflows in the directory unless the user requests.\"}},\"typeVersion\":1.8},{\"id\":\"23601548-7863-403e-a671-267bf592b824\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-3840,1040],\"webhookId\":\"86a50552-8058-4896-bd7e-ab95eba073ce\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"54ed210d-e1b8-4bd7-85e4-88678111a45e\",\"name\":\"MCP Client\",\"type\":\"@n8n/n8n-nodes-langchain.mcpClientTool\",\"position\":[-3360,1240],\"parameters\":{\"sseEndpoint\":\"=<Production URL of MCP Server>\"},\"typeVersion\":1},{\"id\":\"c612da64-9cc1-4601-a987-cd2023fd1863\",\"name\":\"Simple Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[-3500,1240],\"parameters\":{\"contextWindowLength\":30},\"typeVersion\":1.3},{\"id\":\"77a9fd22-c31c-49e4-9d5f-af572b137925\",\"name\":\"Convert to JSON1\",\"type\":\"n8n-nodes-base.set\",\"position\":[-2360,1120],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"bce29a06-cff6-4409-96d2-04cc858a0e98\",\"name\":\"data\",\"type\":\"array\",\"value\":\"={{ $json.data.parseJson() }}\"}]}},\"typeVersion\":3.4},{\"id\":\"3377aa25-4190-4bdc-be20-b4e324212060\",\"name\":\"Has Workflow Available?\",\"type\":\"n8n-nodes-base.if\",\"position\":[-2140,1120],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"9c9df00b-b090-4773-8012-1824b4eeb13f\",\"operator\":{\"type\":\"object\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{\\n$json.data.find(d => d.id === $('When Executed by Another Workflow').item.json.workflowIds)\\n}}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"92b1bb21-d739-47f0-a278-92ffa5a10cbf\",\"name\":\"ExecuteTool Error\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1920,1220],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"2fa3e311-e836-42f4-922a-fae19d8e0267\",\"name\":\"response\",\"type\":\"string\",\"value\":\"=Expected workflow to be available but not yet added. You can only use workflows which have been added to the available pool. Use the listWorkflows tool to see available workflows.\"}]}},\"typeVersion\":3.4},{\"id\":\"529e35e0-cf11-405a-9011-e6f7f2122a4e\",\"name\":\"Workflow Exists?\",\"type\":\"n8n-nodes-base.if\",\"position\":[-1960,200],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"15aef770-639e-4df0-900f-29013ccd00c4\",\"operator\":{\"type\":\"object\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"ba278834-c774-4a3d-8ebc-f64ac77317c2\",\"name\":\"N8N Workflows MCP Server\",\"type\":\"@n8n/n8n-nodes-langchain.mcpTrigger\",\"position\":[-3720,240],\"webhookId\":\"4625bcf4-0dd9-4562-a70f-6fee41f6f12d\",\"parameters\":{\"path\":\"4625bcf4-0dd9-4562-a70f-6fee41f6f12d\"},\"typeVersion\":1},{\"id\":\"ed940612-4772-4377-afe2-5484a8978665\",\"name\":\"Add Workflow\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[-3800,460],\"parameters\":{\"name\":\"addWorkflow\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"Adds one or more workflows by ID to the available pool of workflows for the agent. You can get a list of workflows by calling the listTool tool.\",\"workflowInputs\":{\"value\":{\"operation\":\"addWorkflow\",\"parameters\":\"null\",\"workflowIds\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}\"},\"schema\":[{\"id\":\"operation\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"operation\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"workflowIds\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"workflowIds\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"parameters\",\"type\":\"object\",\"display\":true,\"required\":false,\"displayName\":\"parameters\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.1},{\"id\":\"e7d5096c-3545-43fd-aa1f-495dc041ccce\",\"name\":\"RemoveWorkflow\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[-3700,560],\"parameters\":{\"name\":\"removeWorkflow\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"Removes one or more workflows by ID from the available pool of workflows for the agent.\",\"workflowInputs\":{\"value\":{\"operation\":\"removeWorkflow\",\"parameters\":\"null\",\"workflowIds\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}\"},\"schema\":[{\"id\":\"operation\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"operation\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"workflowIds\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"workflowIds\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"parameters\",\"type\":\"object\",\"display\":true,\"required\":false,\"displayName\":\"parameters\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.1},{\"id\":\"c20b63dc-e768-4529-a08c-5370853fc4c9\",\"name\":\"List Workflows\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[-3580,660],\"parameters\":{\"name\":\"listTool\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"Lists the available pool of workflows for the agent.\",\"workflowInputs\":{\"value\":{\"operation\":\"listWorkflows\",\"parameters\":\"null\",\"workflowIds\":\"null\"},\"schema\":[{\"id\":\"operation\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"operation\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"workflowIds\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"workflowIds\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"parameters\",\"type\":\"object\",\"display\":true,\"required\":false,\"displayName\":\"parameters\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.1},{\"id\":\"88fb8a1e-2f4c-4ff1-8be9-0f7afee2dd4d\",\"name\":\"SearchWorkflows\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[-3460,560],\"parameters\":{\"name\":\"searchTool\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"Returns all workflows which can be added to the pool of available workflows for the agent.\",\"workflowInputs\":{\"value\":{\"operation\":\"searchWorkflows\",\"parameters\":\"null\",\"workflowIds\":\"null\"},\"schema\":[{\"id\":\"operation\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"operation\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"workflowIds\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"workflowIds\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"parameters\",\"type\":\"object\",\"display\":true,\"required\":false,\"displayName\":\"parameters\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.1},{\"id\":\"c643c007-de89-4d94-9739-aeb2032c792f\",\"name\":\"ExecuteWorkflow\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[-3340,460],\"parameters\":{\"name\":\"executeTool\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"Executes a workflow which has been added to the pool of available workflows for the agent.\",\"workflowInputs\":{\"value\":{\"operation\":\"executeWorkflow\",\"parameters\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters', ``, 'string') }}\",\"workflowIds\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}\"},\"schema\":[{\"id\":\"operation\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"operation\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"workflowIds\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"workflowIds\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"parameters\",\"type\":\"object\",\"display\":true,\"required\":false,\"displayName\":\"parameters\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.1},{\"id\":\"4f1c1559-8d50-48b1-94f2-542e0bb4d494\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-3920,80],\"parameters\":{\"color\":7,\"width\":720,\"height\":740,\"content\":\"## 1. Add MCP Server Trigger\\n[Read more about the MCP server trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/)\"},\"typeVersion\":1},{\"id\":\"54d61491-04dc-4263-96e0-67827842ca07\",\"name\":\"Execute Workflow with PassThrough Variables\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[-1660,1020],\"parameters\":{\"options\":{\"waitForSubWorkflow\":true},\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $('When Executed by Another Workflow').first().json.workflowIds }}\"},\"workflowInputs\":{\"value\":{},\"schema\":[],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":true}},\"executeOnce\":false,\"typeVersion\":1.2},{\"id\":\"1042884f-a44c-4757-9ff9-3a5cc81058f2\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2600,-140],\"parameters\":{\"color\":7,\"width\":740,\"height\":300,\"content\":\"## 2. Dynamically manage a list of \\\"Available\\\" Workflows\\n[Learn more about the n8n node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.n8n)\\n\\nThe idea is to limit the number of workflows the agent has access to in order to ensure undesired workflows or duplication of similar workflows are avoided. Here, we do this by managing a virtual list of workflows in memory using Redis - under the hood, it's just an array to store Workflow details.\\n\\nGood to note, the intended workflows must have **Subworkflow triggers** and ideally, with input schema set as well. This template analyses each workflow's JSON and captures its input schema as part of the workflow's description. Doing so,  when it comes time to execute, the agent will know in what format to set the parameters when calling the subworkflow.\\n\"},\"typeVersion\":1},{\"id\":\"903ead44-3eab-4606-aa4e-e66378bb5f7e\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2420,820],\"parameters\":{\"color\":7,\"width\":1160,\"height\":600,\"content\":\"## 3. Let the Agent execute any N8N Workflow\\n[Learn more about the Execute Workflow node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow/)\\n\\nFinally once the agent has gathered the required workflows, it will start performing the requested task by executing one or more available workflows. The desired behaviour is that the agent will use \\\"listWorkflows\\\" to see which workflows are \\\"active\\\" and then plan out how to use them. Attempts to use a workflow before adding it to the available pool will result in an error response.\"},\"typeVersion\":1},{\"id\":\"194fbcbc-a7bb-41c8-9289-a214b1415386\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-3660,1240],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4.1-mini\",\"cachedResultName\":\"gpt-4.1-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"aee33258-cf30-4cb4-ab58-7bef7ba27b65\",\"name\":\"Is Empty Array?\",\"type\":\"n8n-nodes-base.if\",\"position\":[-1740,400],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2cd1b233-fb24-45d5-9efd-1db44b817809\",\"operator\":{\"type\":\"array\",\"operation\":\"empty\",\"singleValue\":true},\"leftValue\":\"={{ $input.all().flatMap(item => item.json.data).compact() }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"b367a25f-e679-4a71-910e-27f1aa686816\",\"name\":\"Delete Key\",\"type\":\"n8n-nodes-base.redis\",\"position\":[-1520,300],\"parameters\":{\"key\":\"mcp_n8n_tools\",\"operation\":\"delete\"},\"credentials\":{\"redis\":{\"id\":\"zU4DA70qSDrZM1El\",\"name\":\"Redis account (localhost)\"}},\"executeOnce\":true,\"typeVersion\":1},{\"id\":\"eec527e1-db4d-4294-a076-379ebd9640a9\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-3920,860],\"parameters\":{\"color\":7,\"width\":740,\"height\":560,\"content\":\"## 4. Connect any Agent with a MCP Client\\nUse this agent to test your MCP server. Note, i\"},\"typeVersion\":1},{\"id\":\"c9b51f36-f9bd-4a60-b195-8da229462331\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2880,820],\"parameters\":{\"color\":5,\"width\":320,\"height\":400,\"content\":\"* **AddWorkflow**\\n  This tool adds (or rather, appends) workflows to our \\\"available\\\" list.\\n* **RemoveWorkflow**\\n  This tool removes a workflow entry from our list.\\n* **listWorkflows**\\n  This tool displays the current state of the workflows list and the available workflows within it. Useful for checking which workflows have been added to the list.\\n* **searchWorkflows**\\n  For now, this tools just pulls the existing workflows from the n8n instance and returns it to the agent. Given more resources, you may want to swap this out for a indexed search instead (you'll need to build this yourself!).\"},\"typeVersion\":1},{\"id\":\"91b2859a-7563-4ebd-ae61-c9a487e18d81\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-4600,-180],\"parameters\":{\"width\":600,\"height\":1440,\"content\":\"## Try it out!\\n### This n8n template shows you how to create an MCP server out of your existing n8n workflows. With this, any MCP client connected can get more done with powerful end-to-end workflows rather than just simple tools.\\n\\nDesigning agent tools for outcome rather than utility has been a long recommended practice of mine and it applies well when it comes to building MCP servers; In gist, it prefers agents to be making the least calls possible to complete a task.\\n\\nThis is why n8n can be a great fit for MCP servers! This template connects your agent/MCP client (like Claude Desktop) to your existing workflows by allowing the AI to discover, manage and run these workflows indirectly.\\n\\n### How it works\\n* An MCP trigger is used and attaches 4 custom workflow tools to discover and manage existing workflows to use and 1 custom workflow tool to execute them.\\n* We'll introduce an idea of \\\"available\\\" workflows which the agent is allowed to use. This will help limit and avoid some issues when trying to use every workflow such as clashes or non-production.\\n* The n8n node is a core node which taps into your n8n instance API and is able to retrieve all workflows or filter by tag. For our example, we've tagged the workflows we want to use with \\\"mcp\\\" and these are exposed through the tool \\\"search workflows\\\".\\n* Redis is used as our main memory for keeping track of which workflows are \\\"available\\\". The tools we have are \\\"add Workflow\\\", \\\"remove workflow\\\" and \\\"list workflows\\\". The agent should be able to manage this autonomously.\\n* Our approach to allow the agent to execute workflows is to use the Subworkflow trigger. The tricky part is figuring out the input schema for each but was eventually solved by pulling this information out of the workflow's template JSON and adding it as part of the \\\"available\\\" workflow's description. To pass parameters through the Subworkflow trigger, we can do so via the passthrough method - which is that incoming data is used when parameters are not explicitly set within the node.\\n* When running, the agent will not see the \\\"available\\\" workflows immediately but will need to discover them via \\\"list\\\" and \\\"search\\\". The human will need to make the agent aware that these workflows will be preferred when answering queries or completing tasks.\\n\\n### How to use\\n* First, decide which workflows will be made visible to the MCP server. This example uses the tag of \\\"mcp\\\" but you can all workflows or filter in other ways.\\n* Next, ensure these workflows have Subworkflow triggers with input schema set. This is how the MCP server will run them.\\n* Set the MCP server to \\\"active\\\" which turns on production mode and makes available to production URL.\\n* Use this production URL in your MCP client. For Claude Desktop, see the instructions here - https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop.\\n* There is a small learning curve which will shape how you communicate with this MCP server so be patient and test. The MCP server will work better if there is a focused goal in mind ie. Research and report, rather than just a collection of unrelated tools.\\n\\n### Requirements\\n* N8N API key to filter for selected workflows.\\n* N8N workflows with Subworkflow triggers!\\n* Redis for memory and tracking the \\\"available\\\" workflows.\\n* MCP Client or Agent for usage such as Claude Desktop - https://claude.ai/download\\n\\n### Customising this workflow\\n* If your targeted workflows do not use the subworkflow trigger, it is possible to amend the executeTool to use HTTP requests for webhooks.\\n* Managing available workflows helps if you have many workflows where some may be too similar for the agent. If this isn't a problem for you however, feel free to remove the concept of \\\"available\\\" and let the agent discover and use all workflows!\"},\"typeVersion\":1},{\"id\":\"ec3194d2-90c8-4019-a1b5-576c61e9a8b0\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2600,-280],\"parameters\":{\"color\":5,\"width\":380,\"height\":120,\"content\":\"### How many existing workflows can I use?\\nWell, as many as you want really! For this example, I've limited it for workflows which are tagged as \\\"mcp\\\" but you can remove this filter to allow all.\"},\"typeVersion\":1},{\"id\":\"5f587241-5604-4724-bc01-3c9bc3f7bdc2\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1720,1000],\"parameters\":{\"height\":440,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### 🚨 Ensure this node does not set the input schema!\\nFor passthrough parameters to work, this node should not make available input schema fields. ie. the input fields should not be visible.\\n\\nIf there are, the node needs to be reset!\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Split Out\":{\"main\":[[{\"node\":\"Filter Matching IDs\",\"type\":\"main\",\"index\":0}]]},\"Delete Key\":{\"main\":[[{\"node\":\"Remove Tool Success\",\"type\":\"main\",\"index\":0}]]},\"Get Memory\":{\"main\":[[{\"node\":\"Operations\",\"type\":\"main\",\"index\":0}]]},\"MCP Client\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Operations\":{\"main\":[[{\"node\":\"Get MCP-tagged Workflows\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Convert to JSON\",\"type\":\"main\",\"index\":0}],[{\"node\":\"listTools Success\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get MCP-tagged Workflows1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Convert to JSON1\",\"type\":\"main\",\"index\":0}]]},\"Add Workflow\":{\"ai_tool\":[[{\"node\":\"N8N Workflows MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"Simple Memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Get Parameters\":{\"main\":[[{\"node\":\"Execute Workflow with PassThrough Variables\",\"type\":\"main\",\"index\":0}]]},\"List Workflows\":{\"ai_tool\":[[{\"node\":\"N8N Workflows MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"RemoveWorkflow\":{\"ai_tool\":[[{\"node\":\"N8N Workflows MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"Convert to JSON\":{\"main\":[[{\"node\":\"Split Out\",\"type\":\"main\",\"index\":0}]]},\"ExecuteWorkflow\":{\"ai_tool\":[[{\"node\":\"N8N Workflows MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"Is Empty Array?\":{\"main\":[[{\"node\":\"Delete Key\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Store In Memory1\",\"type\":\"main\",\"index\":0}]]},\"SearchWorkflows\":{\"ai_tool\":[[{\"node\":\"N8N Workflows MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"Store In Memory\":{\"main\":[[{\"node\":\"AddTool Success\",\"type\":\"main\",\"index\":0}]]},\"Convert to JSON1\":{\"main\":[[{\"node\":\"Has Workflow Available?\",\"type\":\"main\",\"index\":0}]]},\"Store In Memory1\":{\"main\":[[{\"node\":\"Remove Tool Success\",\"type\":\"main\",\"index\":0}]]},\"Workflow Exists?\":{\"main\":[[{\"node\":\"Simplify Workflows\",\"type\":\"main\",\"index\":0}],[{\"node\":\"AddTool Error\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Simplify Workflows\":{\"main\":[[{\"node\":\"Store In Memory\",\"type\":\"main\",\"index\":0}]]},\"Filter Matching IDs\":{\"main\":[[{\"node\":\"Is Empty Array?\",\"type\":\"main\",\"index\":0}]]},\"Filter Matching Ids\":{\"main\":[[{\"node\":\"Workflow Exists?\",\"type\":\"main\",\"index\":0}]]},\"Simplify Workflows1\":{\"main\":[[{\"node\":\"listTools Success1\",\"type\":\"main\",\"index\":0}]]},\"Has Workflow Available?\":{\"main\":[[{\"node\":\"Get Parameters\",\"type\":\"main\",\"index\":0}],[{\"node\":\"ExecuteTool Error\",\"type\":\"main\",\"index\":0}]]},\"Get MCP-tagged Workflows\":{\"main\":[[{\"node\":\"Filter Matching Ids\",\"type\":\"main\",\"index\":0}]]},\"Get MCP-tagged Workflows1\":{\"main\":[[{\"node\":\"Simplify Workflows1\",\"type\":\"main\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"When Executed by Another Workflow\":{\"main\":[[{\"node\":\"Get Memory\",\"type\":\"main\",\"index\":0}]]},\"Execute Workflow with PassThrough Variables\":{\"main\":[[{\"node\":\"executeTool Result\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "### This n8n template shows you how to create an MCP server out of your existing n8n workflows. With this, any MCP client connected can get more done with powerful end-to-end workflows rather than just simple tools.\n\nDesigning agent tools for outcome rather than utility has been a long recommended practice of mine and it applies well when it comes to building MCP servers; In gist, agents to be making the least amount of calls possible to complete a task.\n\nThis is why n8n can be a great fit for MCP servers! This template connects your agent/MCP client (like Claude Desktop) to your existing workflows by allowing the AI to discover, manage and run these workflows indirectly.\n\n### How it works\n\n  * An MCP trigger is used and attaches 4 custom workflow tools to discover and manage existing workflows to use and 1 custom workflow tool to execute them.\n  * We'll introduce an idea of \"available\" workflows which the agent is allowed to use. This will help limit and avoid some issues when trying to use every workflow such as clashes or non-production.\n  * The n8n node is a core node which taps into your n8n instance API and is able to retrieve all workflows or filter by tag. For our example, we've tagged the workflows we want to use with \"mcp\" and these are exposed through the tool \"search workflows\".\n  * Redis is used as our main memory for keeping track of which workflows are \"available\". The tools we have are \"add Workflow\", \"remove workflow\" and \"list workflows\". The agent should be able to manage this autonomously.\n  * Our approach to allow the agent to execute workflows is to use the Subworkflow trigger. The tricky part is figuring out the input schema for each but was eventually solved by pulling this information out of the workflow's template JSON and adding it as part of the \"available\" workflow's description. To pass parameters through the Subworkflow trigger, we can do so via the passthrough method - which is that incoming data is used when parameters are not explicitly set within the node.\n  * When running, the agent will not see the \"available\" workflows immediately but will need to discover them via \"list\" and \"search\". The human will need to make the agent aware that these workflows will be preferred when answering queries or completing tasks.\n\n\n\n### How to use\n\n  * First, decide which workflows will be made visible to the MCP server. This example uses the tag of \"mcp\" but you can all workflows or filter in other ways.\n  * Next, ensure these workflows have Subworkflow triggers with input schema set. This is how the MCP server will run them.\n  * Set the MCP server to \"active\" which turns on production mode and makes available to production URL.\n  * Use this production URL in your MCP client. For Claude Desktop, see the instructions here - <https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop>.\n  * There is a small learning curve which will shape how you communicate with this MCP server so be patient and test. The MCP server will work better if there is a focused goal in mind ie. Research and report, rather than just a collection of unrelated tools.\n\n\n\n### Requirements\n\n  * N8N API key to filter for selected workflows.\n  * N8N workflows with Subworkflow triggers!\n  * Redis for memory and tracking the \"available\" workflows.\n  * MCP Client or Agent for usage such as Claude Desktop - <https://claude.ai/download>\n\n\n\n### Customising this workflow\n\n  * If your targeted workflows do not use the subworkflow trigger, it is possible to amend the executeTool to use HTTP requests for webhooks.\n  * Managing available workflows helps if you have many workflows where some may be too similar for the agent. If this isn't a problem for you however, feel free to remove the concept of \"available\" and let the agent discover and use all workflows!\n\n\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><h3>This n8n template shows you how to create an MCP server out of your existing n8n workflows. With this, any MCP client connected can get more done with powerful end-to-end workflows rather than just simple tools.</h3>\n<p>Designing agent tools for outcome rather than utility has been a long recommended practice of mine and it applies well when it comes to building MCP servers; In gist, agents to be making the least amount of calls possible to complete a task.</p>\n<p>This is why n8n can be a great fit for MCP servers! This template connects your agent/MCP client (like Claude Desktop) to your existing workflows by allowing the AI to discover, manage and run these workflows indirectly.</p>\n<h3>How it works</h3>\n<ul>\n<li>An MCP trigger is used and attaches 4 custom workflow tools to discover and manage existing workflows to use and 1 custom workflow tool to execute them.</li>\n<li>We'll introduce an idea of \"available\" workflows which the agent is allowed to use. This will help limit and avoid some issues when trying to use every workflow such as clashes or non-production.</li>\n<li>The n8n node is a core node which taps into your n8n instance API and is able to retrieve all workflows or filter by tag. For our example, we've tagged the workflows we want to use with \"mcp\" and these are exposed through the tool \"search workflows\".</li>\n<li>Redis is used as our main memory for keeping track of which workflows are \"available\". The tools we have are \"add Workflow\", \"remove workflow\" and \"list workflows\". The agent should be able to manage this autonomously.</li>\n<li>Our approach to allow the agent to execute workflows is to use the Subworkflow trigger. The tricky part is figuring out the input schema for each but was eventually solved by pulling this information out of the workflow's template JSON and adding it as part of the \"available\" workflow's description. To pass parameters through the Subworkflow trigger, we can do so via the passthrough method - which is that incoming data is used when parameters are not explicitly set within the node.</li>\n<li>When running, the agent will not see the \"available\" workflows immediately but will need to discover them via \"list\" and \"search\". The human will need to make the agent aware that these workflows will be preferred when answering queries or completing tasks.</li>\n</ul>\n<h3>How to use</h3>\n<ul>\n<li>First, decide which workflows will be made visible to the MCP server. This example uses the tag of \"mcp\" but you can all workflows or filter in other ways.</li>\n<li>Next, ensure these workflows have Subworkflow triggers with input schema set. This is how the MCP server will run them.</li>\n<li>Set the MCP server to \"active\" which turns on production mode and makes available to production URL.</li>\n<li>Use this production URL in your MCP client. For Claude Desktop, see the instructions here - <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop\" rel=\"ugc nofollow\" target=\"_blank\">https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop</a>.</li>\n<li>There is a small learning curve which will shape how you communicate with this MCP server so be patient and test. The MCP server will work better if there is a focused goal in mind ie. Research and report, rather than just a collection of unrelated tools.</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li>N8N API key to filter for selected workflows.</li>\n<li>N8N workflows with Subworkflow triggers!</li>\n<li>Redis for memory and tracking the \"available\" workflows.</li>\n<li>MCP Client or Agent for usage such as Claude Desktop - <a href=\"https://claude.ai/download\" rel=\"ugc nofollow\" target=\"_blank\">https://claude.ai/download</a></li>\n</ul>\n<h3>Customising this workflow</h3>\n<ul>\n<li>If your targeted workflows do not use the subworkflow trigger, it is possible to amend the executeTool to use HTTP requests for webhooks.</li>\n<li>Managing available workflows helps if you have many workflows where some may be too similar for the agent. If this isn't a problem for you however, feel free to remove the concept of \"available\" and let the agent discover and use all workflows!</li>\n</ul>\n</div><!--]-->",
  "readme_zh": "### 该n8n模板演示如何将现有工作流升级为MCP服务器。通过此方案，任何连接的MCP客户端都能调用强大的端到端工作流完成任务，而不仅限于简单工具。\n\n\"以结果为导向设计智能体工具\"是我长期倡导的理念，这一原则在构建MCP服务器时同样适用——核心在于让智能体以最少的调用次数完成任务。\n\n这正是n8n与MCP服务器完美契合的原因！本模板通过让AI间接发现、管理和运行工作流，将您的智能体/MCP客户端（如Claude桌面版）与现有工作流连接起来。\n\n### 运作原理\n\n* 使用MCP触发器挂载4个自定义工具：3个用于发现/管理工作流，1个用于执行\n* 引入\"可用工作流\"机制限制智能体调用范围，避免生产环境冲突等问题\n* 核心n8n节点通过API获取工作流（本示例使用\"mcp\"标签过滤）\n* 采用Redis存储\"可用工作流\"状态，提供增删查功能供智能体自主管理\n* 通过子工作流触发器执行任务，其输入模式解析方案为：从工作流JSON模板提取参数说明并嵌入描述\n* 参数传递采用穿透模式（未显式设置参数时自动使用输入数据）\n* 智能体需通过\"列表/搜索\"功能发现可用工作流，需人工引导其优先调用这些工作流\n\n### 使用指南\n\n1. 选定要开放的工作流（本示例使用\"mcp\"标签过滤）\n2. 确保目标工作流已配置子工作流触发器及输入模式\n3. 将MCP服务器设为\"活跃\"状态以启用生产环境URL\n4. 在MCP客户端配置该URL（Claude桌面版配置参见<https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop>）\n5. 注意：使用初期需适应新的交互模式，建议聚焦明确目标（如\"调研报告\"）而非零散工具调用\n\n### 系统要求\n\n* n8n API密钥（用于工作流过滤）\n* 带子工作流触发器的工作流\n* Redis内存数据库（管理可用工作流状态）\n* MCP客户端（如Claude桌面版<https://claude.ai/download>）\n\n### 定制建议\n\n* 若目标工作流无子工作流触发器，可修改executeTool工具改用HTTP请求触发\n* 当工作流功能高度相似时才需\"可用工作流\"机制，否则可开放全部工作流供智能体调用",
  "title_zh": "构建您自己的N8N工作流MCP服务器",
  "publish_date_zh": "上次更新于6天前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"e3ed1048-bad0-4e91-bfb5-aef3e1883de4\",\n      \"name\": \"Simplify Workflows\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1740,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"821226b0-12ad-4d1d-81c3-dfa3c286cce4\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"629d95d6-2501-4ad4-a5ed-e557237e1cc2\",\n              \"name\": \"name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.name }}\"\n            },\n            {\n              \"id\": \"30699f7c-98d3-44ee-9749-c5528579f7e6\",\n              \"name\": \"description\",\n              \"type\": \"string\",\n              \"value\": \"={{\\n$json.nodes\\n  .filter(node => node.type === 'n8n-nodes-base.stickyNote')\\n  .filter(node => node.parameters.content.toLowerCase().includes('try it out'))\\n  .map(node => node.parameters.content.substr(0,255) + '...')\\n  .join('\\\\n')\\n}}\"\n            },\n            {\n              \"id\": \"6199c275-1ced-4f72-ba59-cb068db54c1b\",\n              \"name\": \"parameters\",\n              \"type\": \"string\",\n              \"value\": \"={{\\n(function(node) {\\n  if (!node) return {};\\n  const inputs = node.parameters.workflowInputs.values;\\n  return {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": inputs.map(input => input.name),\\n    \\\"properties\\\": inputs.reduce((acc, input) => ({\\n      ...acc,\\n      [input.name]: { type: input.type ?? 'string' }\\n    }), {})\\n  }\\n})(\\n$json.nodes\\n  .filter(node => node.type === 'n8n-nodes-base.executeWorkflowTrigger')\\n  .first()\\n)\\n.toJsonString()\\n}}\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a935f5b6-3a35-49e7-870c-87e4daf0ad13\",\n      \"name\": \"When Executed by Another Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -3060,\n        600\n      ],\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"operation\"\n            },\n            {\n              \"name\": \"workflowIds\"\n            },\n            {\n              \"name\": \"parameters\",\n              \"type\": \"object\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"2ff5e521-5288-47a9-af49-55a1bbbfb4f4\",\n      \"name\": \"Operations\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        -2660,\n        560\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"Add\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"3254a8f9-5fd3-4089-be16-cc3fd20639b8\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('When Executed by Another Workflow').first().json.operation }}\",\n                    \"rightValue\": \"addWorkflow\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"remove\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"a33dd02d-5192-48c9-b569-eafddabd2462\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('When Executed by Another Workflow').first().json.operation }}\",\n                    \"rightValue\": \"removeWorkflow\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"list\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2d68dc3f-a213-47f8-8453-1bceae404653\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('When Executed by Another Workflow').first().json.operation }}\",\n                    \"rightValue\": \"listWorkflows\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"search\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2146a87e-1a50-4caa-a2ee-f7f6fc2b19c9\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('When Executed by Another Workflow').first().json.operation }}\",\n                    \"rightValue\": \"searchWorkflows\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"execute\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"98b25a51-2cb5-49af-9609-827245595dc9\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $('When Executed by Another Workflow').first().json.operation }}\",\n                    \"rightValue\": \"executeWorkflow\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"5b78271a-6474-4d87-a344-72f7f63822dc\",\n      \"name\": \"Get MCP-tagged Workflows\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        -2400,\n        200\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"tags\": \"mcp\"\n        },\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"5vELmsVPmK4Bkqkg\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1197d29e-b124-4576-846d-876ad16de6e9\",\n      \"name\": \"Filter Matching Ids\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -2180,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"90c97733-48de-4402-8388-5d49e3534388\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{\\n$json.id\\n  ? $('When Executed by Another Workflow').first().json.workflowIds.split(',').includes($json.id)\\n  : false\\n}}\",\n              \"rightValue\": \"={{ $json.id }}\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 2.2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"81623298-c3e7-4e20-86a9-d2587b302f28\",\n      \"name\": \"Store In Memory\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        -1520,\n        0\n      ],\n      \"parameters\": {\n        \"key\": \"mcp_n8n_tools\",\n        \"value\": \"={{\\n($('Get Memory').item.json.data?.parseJson() ?? [])\\n  .concat($input.all().map(item => item.json))\\n  .toJsonString()\\n}}\",\n        \"operation\": \"set\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5ff0ea2f-a2ee-4cc3-bdf9-153ce5973770\",\n      \"name\": \"AddTool Success\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1300,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"d921063f-e8ed-44a8-95a0-4402ecde6c5d\",\n              \"name\": \"=response\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Simplify Workflows').all().length }} tools were added successfully.\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"1d3169cc-15cd-4296-9e63-bb162322e5e2\",\n      \"name\": \"AddTool Error\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1740,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"8c4e0763-a4ff-4e8a-a992-13e4e12a5685\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"Expected Tools matching Ids given, but none found.\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"6149a950-c1ed-44b4-aee6-3daeabf8ba01\",\n      \"name\": \"Get Memory\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        -2860,\n        600\n      ],\n      \"parameters\": {\n        \"key\": \"mcp_n8n_tools\",\n        \"options\": {},\n        \"operation\": \"get\",\n        \"propertyName\": \"data\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3c538002-45f7-4a2f-9ef4-5aede63235ab\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        -2180,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d41e48e0-d610-4e18-9942-842419c99c83\",\n      \"name\": \"Filter Matching IDs\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -1960,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"d2c149fb-d115-449b-9b74-f3c2f8ff7950\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"false\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{\\n$json.id\\n  ? $('Operations').first().json.workflowIds.split(',').includes($json.id)\\n  : false\\n}}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"21d8cdda-bb47-42cd-a056-809a5556b438\",\n      \"name\": \"Store In Memory1\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        -1520,\n        500\n      ],\n      \"parameters\": {\n        \"key\": \"mcp_n8n_tools\",\n        \"value\": \"={{ $input.all().flatMap(item => item.json.data).compact() }}\",\n        \"operation\": \"set\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5a391d0a-ba13-4d54-85fd-eb2f6a935614\",\n      \"name\": \"Remove Tool Success\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1300,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"1368947f-6625-4e2e-ae27-0fcad0a1d12a\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('When Executed by Another Workflow').first().json.workflowIds.split(',').length }} tool(s) removed successfully.\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"65dfecc4-43ba-4518-adbf-9676c5cb1377\",\n      \"name\": \"Convert to JSON\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2400,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"bce29a06-cff6-4409-96d2-04cc858a0e98\",\n              \"name\": \"data\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.data.parseJson() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"b8b64fc2-63cf-4b17-9b6d-9d94aec10065\",\n      \"name\": \"listTools Success\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2400,\n        600\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"bce29a06-cff6-4409-96d2-04cc858a0e98\",\n              \"name\": \"response\",\n              \"type\": \"array\",\n              \"value\": \"={{\\n$json.data\\n  ? $json.data.parseJson()\\n  : []\\n}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d4fd9e74-f040-4b3c-8ce0-371315a0d130\",\n      \"name\": \"Get MCP-tagged Workflows1\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        -2180,\n        600\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"tags\": \"mcp\"\n        },\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"5vELmsVPmK4Bkqkg\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d58922c4-b721-4228-83cb-0b1d9632bbc6\",\n      \"name\": \"Simplify Workflows1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1960,\n        600\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"821226b0-12ad-4d1d-81c3-dfa3c286cce4\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"629d95d6-2501-4ad4-a5ed-e557237e1cc2\",\n              \"name\": \"name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.name }}\"\n            },\n            {\n              \"id\": \"30699f7c-98d3-44ee-9749-c5528579f7e6\",\n              \"name\": \"description\",\n              \"type\": \"string\",\n              \"value\": \"={{\\n$json.nodes\\n  .filter(node => node.type === 'n8n-nodes-base.stickyNote')\\n  .filter(node => node.parameters.content.toLowerCase().includes('try it out'))\\n  .map(node => node.parameters.content.substr(0,255) + '...')\\n  .join('\\\\n')\\n}}\"\n            },\n            {\n              \"id\": \"137221ef-f0a3-4441-bae7-d9d4a22e05b7\",\n              \"name\": \"parameters\",\n              \"type\": \"string\",\n              \"value\": \"={{\\n(function(node) {\\n  if (!node) return {};\\n  const inputs = node.parameters.workflowInputs.values;\\n  return {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"required\\\": inputs.map(input => input.name),\\n    \\\"properties\\\": inputs.reduce((acc, input) => ({\\n      ...acc,\\n      [input.name]: { type: input.type ?? 'string' }\\n    }), {})\\n  }\\n})(\\n$json.nodes\\n  .filter(node => node.type === 'n8n-nodes-base.executeWorkflowTrigger')\\n  .first()\\n)\\n.toJsonString()\\n}}\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"b44b1115-5153-4b98-979f-219a32b693de\",\n      \"name\": \"listTools Success1\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        -1740,\n        600\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"response\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e9d9a33c-ebfa-4f74-a4da-fb6b6f6f6df5\",\n      \"name\": \"Get Parameters\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1920,\n        1020\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={{ $('When Executed by Another Workflow').first().json.parameters }}\"\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"c028324a-5c79-4ce9-afd6-097b6f75a74a\",\n      \"name\": \"executeTool Result\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        -1440,\n        1020\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"response\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9eeac3cb-af7e-44c7-8891-6ff4367d0b54\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        -3600,\n        1040\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"systemMessage\": \"=You are a helpful assistant who only uses workflows to answer questions and perform tasks.\\n* When asked to complete a task, you will assume there is a workflow which you can use. Do not generate custom scripts or raw commands - use a workflow isntead.\\n* Only use the available active workflows as listed using the \\\"listWorkflows\\\" tool.\\n* Workflows returned by \\\"listWorkflows\\\" tool are active in the pool and do not need to be added again.\\n* Always ask the user before adding workflows to the availble pool.\\n* You do not need to confirm each step with the user when executing workflows.\\n* When executing the workflow, the required parameters schema for it is listed in the workflow's profile. To get this profile, use the listWokflows tool.\\n* If no available workflows are suitable and you are not able to complete the task, simply let the user know.\\n* Do not search for workflows in the directory unless the user requests.\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"23601548-7863-403e-a671-267bf592b824\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -3840,\n        1040\n      ],\n      \"webhookId\": \"86a50552-8058-4896-bd7e-ab95eba073ce\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"54ed210d-e1b8-4bd7-85e4-88678111a45e\",\n      \"name\": \"MCP Client\",\n      \"type\": \"@n8n/n8n-nodes-langchain.mcpClientTool\",\n      \"position\": [\n        -3360,\n        1240\n      ],\n      \"parameters\": {\n        \"sseEndpoint\": \"=<Production URL of MCP Server>\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c612da64-9cc1-4601-a987-cd2023fd1863\",\n      \"name\": \"Simple Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        -3500,\n        1240\n      ],\n      \"parameters\": {\n        \"contextWindowLength\": 30\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"77a9fd22-c31c-49e4-9d5f-af572b137925\",\n      \"name\": \"Convert to JSON1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -2360,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"bce29a06-cff6-4409-96d2-04cc858a0e98\",\n              \"name\": \"data\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.data.parseJson() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"3377aa25-4190-4bdc-be20-b4e324212060\",\n      \"name\": \"Has Workflow Available?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -2140,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"9c9df00b-b090-4773-8012-1824b4eeb13f\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{\\n$json.data.find(d => d.id === $('When Executed by Another Workflow').item.json.workflowIds)\\n}}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"92b1bb21-d739-47f0-a278-92ffa5a10cbf\",\n      \"name\": \"ExecuteTool Error\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1920,\n        1220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"2fa3e311-e836-42f4-922a-fae19d8e0267\",\n              \"name\": \"response\",\n              \"type\": \"string\",\n              \"value\": \"=Expected workflow to be available but not yet added. You can only use workflows which have been added to the available pool. Use the listWorkflows tool to see available workflows.\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"529e35e0-cf11-405a-9011-e6f7f2122a4e\",\n      \"name\": \"Workflow Exists?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -1960,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"15aef770-639e-4df0-900f-29013ccd00c4\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"ba278834-c774-4a3d-8ebc-f64ac77317c2\",\n      \"name\": \"N8N Workflows MCP Server\",\n      \"type\": \"@n8n/n8n-nodes-langchain.mcpTrigger\",\n      \"position\": [\n        -3720,\n        240\n      ],\n      \"webhookId\": \"4625bcf4-0dd9-4562-a70f-6fee41f6f12d\",\n      \"parameters\": {\n        \"path\": \"4625bcf4-0dd9-4562-a70f-6fee41f6f12d\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ed940612-4772-4377-afe2-5484a8978665\",\n      \"name\": \"Add Workflow\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        -3800,\n        460\n      ],\n      \"parameters\": {\n        \"name\": \"addWorkflow\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Adds one or more workflows by ID to the available pool of workflows for the agent. You can get a list of workflows by calling the listTool tool.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"operation\": \"addWorkflow\",\n            \"parameters\": \"null\",\n            \"workflowIds\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"workflowIds\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"workflowIds\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"parameters\",\n              \"type\": \"object\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"parameters\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"e7d5096c-3545-43fd-aa1f-495dc041ccce\",\n      \"name\": \"RemoveWorkflow\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        -3700,\n        560\n      ],\n      \"parameters\": {\n        \"name\": \"removeWorkflow\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Removes one or more workflows by ID from the available pool of workflows for the agent.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"operation\": \"removeWorkflow\",\n            \"parameters\": \"null\",\n            \"workflowIds\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"workflowIds\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"workflowIds\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"parameters\",\n              \"type\": \"object\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"parameters\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"c20b63dc-e768-4529-a08c-5370853fc4c9\",\n      \"name\": \"List Workflows\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        -3580,\n        660\n      ],\n      \"parameters\": {\n        \"name\": \"listTool\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Lists the available pool of workflows for the agent.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"operation\": \"listWorkflows\",\n            \"parameters\": \"null\",\n            \"workflowIds\": \"null\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"workflowIds\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"workflowIds\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"parameters\",\n              \"type\": \"object\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"parameters\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"88fb8a1e-2f4c-4ff1-8be9-0f7afee2dd4d\",\n      \"name\": \"SearchWorkflows\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        -3460,\n        560\n      ],\n      \"parameters\": {\n        \"name\": \"searchTool\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Returns all workflows which can be added to the pool of available workflows for the agent.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"operation\": \"searchWorkflows\",\n            \"parameters\": \"null\",\n            \"workflowIds\": \"null\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"workflowIds\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"workflowIds\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"parameters\",\n              \"type\": \"object\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"parameters\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"c643c007-de89-4d94-9739-aeb2032c792f\",\n      \"name\": \"ExecuteWorkflow\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        -3340,\n        460\n      ],\n      \"parameters\": {\n        \"name\": \"executeTool\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Executes a workflow which has been added to the pool of available workflows for the agent.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"operation\": \"executeWorkflow\",\n            \"parameters\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters', ``, 'string') }}\",\n            \"workflowIds\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('workflowIds', ``, 'string') }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"workflowIds\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"workflowIds\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"parameters\",\n              \"type\": \"object\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"parameters\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"4f1c1559-8d50-48b1-94f2-542e0bb4d494\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3920,\n        80\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 720,\n        \"height\": 740,\n        \"content\": \"## 1. 添加MCP服务器触发器\\n[了解更多关于MCP服务器触发器的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"54d61491-04dc-4263-96e0-67827842ca07\",\n      \"name\": \"Execute Workflow with PassThrough Variables\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        -1660,\n        1020\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"waitForSubWorkflow\": true\n        },\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $('When Executed by Another Workflow').first().json.workflowIds }}\"\n        },\n        \"workflowInputs\": {\n          \"value\": {},\n          \"schema\": [],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": true\n        }\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"1042884f-a44c-4757-9ff9-3a5cc81058f2\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2600,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 740,\n        \"height\": 300,\n        \"content\": \"## 2. 动态管理“可用”工作流列表\\n[了解更多n8n节点信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.n8n)\\n\\n该方案旨在通过限制智能体可访问的工作流数量，避免出现非预期工作流或重复相似工作流。我们利用Redis在内存中维护虚拟工作流列表——底层实现上，这只是一个存储工作流详情的数组。\\n\\n需要特别说明的是，目标工作流必须包含**子工作流触发器**，且最好已设置输入模式。本模板会解析每个工作流的JSON配置，将其输入模式作为工作流描述的一部分进行捕获。这样在执行时，智能体就能知晓调用子工作流时应以何种格式设置参数。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"903ead44-3eab-4606-aa4e-e66378bb5f7e\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2420,\n        820\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1160,\n        \"height\": 600,\n        \"content\": \"## 3. 让代理执行任意N8N工作流\\n[详细了解执行工作流节点](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow/)\\n\\n最终当代理收集到所需工作流后，将通过执行一个或多个可用工作流开始执行请求的任务。预期行为是代理会先使用\\\"listWorkflows\\\"查看哪些工作流处于\\\"活跃\\\"状态，然后规划如何使用它们。若在将工作流添加到可用池之前尝试使用，将会收到错误响应。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"194fbcbc-a7bb-41c8-9289-a214b1415386\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -3660,\n        1240\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-mini\",\n          \"cachedResultName\": \"gpt-4.1-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"aee33258-cf30-4cb4-ab58-7bef7ba27b65\",\n      \"name\": \"Is Empty Array?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -1740,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"2cd1b233-fb24-45d5-9efd-1db44b817809\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"empty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $input.all().flatMap(item => item.json.data).compact() }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"b367a25f-e679-4a71-910e-27f1aa686816\",\n      \"name\": \"Delete Key\",\n      \"type\": \"n8n-nodes-base.redis\",\n      \"position\": [\n        -1520,\n        300\n      ],\n      \"parameters\": {\n        \"key\": \"mcp_n8n_tools\",\n        \"operation\": \"delete\"\n      },\n      \"credentials\": {\n        \"redis\": {\n          \"id\": \"zU4DA70qSDrZM1El\",\n          \"name\": \"Redis account (localhost)\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eec527e1-db4d-4294-a076-379ebd9640a9\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -3920,\n        860\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 740,\n        \"height\": 560,\n        \"content\": \"## 4. 连接任意代理与MCP客户端\\n使用此代理测试您的MCP服务器。注意，i\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c9b51f36-f9bd-4a60-b195-8da229462331\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2880,\n        820\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 320,\n        \"height\": 400,\n        \"content\": \"* **添加工作流**  \\n  此工具将工作流添加（更准确地说，是追加）到我们的“可用”列表中。  \\n* **移除工作流**  \\n  此工具从列表中删除一个工作流条目。  \\n* **列出工作流**  \\n  此工具显示工作流列表的当前状态及其中可用的工作流。用于检查哪些工作流已被添加到列表中。  \\n* **搜索工作流**  \\n  目前，此工具仅从n8n实例中提取现有工作流并返回给代理。若有更多资源，建议替换为索引搜索功能（需自行构建！）。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"91b2859a-7563-4ebd-ae61-c9a487e18d81\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -4600,\n        -180\n      ],\n      \"parameters\": {\n        \"width\": 600,\n        \"height\": 1440,\n        \"content\": \"## 试试看吧！\\n### 本n8n模板将展示如何将现有工作流升级为MCP服务器。通过这种方式，任何连接的MCP客户端都能通过强大的端到端工作流（而非简单工具）实现更复杂的任务。\\n\\n\\\"以结果为导向而非功能堆砌\\\"是我长期推荐的智能体工具设计原则，这一理念在构建MCP服务器时同样适用——其核心在于让智能体以最少的调用次数完成任务。\\n\\n这正是n8n成为MCP服务器理想之选的原因！本模板通过让AI间接发现、管理和运行工作流，将您的智能体/MCP客户端（如Claude Desktop）与现有工作流连接起来。\\n\\n### 运作原理\\n* 使用MCP触发器挂载4个自定义工作流工具（用于发现和管理可用工作流）和1个执行工具\\n* 引入\\\"可用工作流\\\"机制限定智能体可调用的范围，避免因调用全部工作流导致的冲突或非生产环境问题\\n* 通过n8n核心节点接入实例API，可获取全部工作流或按标签筛选（本示例使用\\\"mcp\\\"标签标记目标工作流，并通过\\\"搜索工作流\\\"工具暴露）\\n* 采用Redis作为记忆存储，通过\\\"添加工作流\\\"、\\\"移除工作流\\\"和\\\"列出工作流\\\"工具实现智能体自主管理\\n* 执行方案采用子工作流触发器，其输入模式通过解析工作流模板JSON获取并嵌入描述信息，参数传递采用passthrough模式（当节点未显式设置参数时自动使用输入数据）\\n* 运行时智能体需通过\\\"列出/搜索\\\"操作发现可用工作流，需人工引导其优先选用这些工作流处理查询任务\\n\\n### 使用指南\\n1. 选定对MCP服务器可见的工作流（本示例使用\\\"mcp\\\"标签，您也可采用其他筛选方式）\\n2. 确保目标工作流已设置含输入模式的子工作流触发器\\n3. 将MCP服务器设为\\\"active\\\"状态以启用生产环境URL\\n4. 在MCP客户端配置该URL（Claude Desktop配置参见：https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop）\\n5. 注意存在适应期，建议围绕明确目标（如\\\"调研报告\\\"）进行测试，效果优于零散工具集合\\n\\n### 环境要求\\n* n8n API密钥（用于工作流筛选）\\n* 含子工作流触发器的n8n工作流\\n* Redis（用于记忆存储和工作流状态跟踪）\\n* MCP客户端（如Claude Desktop：https://claude.ai/download）\\n\\n### 自定义建议\\n* 若目标工作流未使用子工作流触发器，可修改executeTool工具改用webhook的HTTP请求方式\\n* 当存在功能相似的工作流时，\\\"可用工作流\\\"机制能有效避免混淆。若无此问题，可移除该机制开放全部工作流调用权限\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ec3194d2-90c8-4019-a1b5-576c61e9a8b0\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2600,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 380,\n        \"height\": 120,\n        \"content\": \"### 我可以使用多少现有的工作流程？\\n其实，想用多少都可以！在这个例子中，我限制了只显示标记为“mcp”的工作流程，但你可以移除这个筛选条件来允许所有工作流程。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5f587241-5604-4724-bc01-3c9bc3f7bdc2\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1720,\n        1000\n      ],\n      \"parameters\": {\n        \"height\": 440,\n        \"content\": \"### 🚨 确保此节点不设置输入模式！\\n要使透传参数正常工作，此节点不应提供输入模式字段。也就是说，输入字段不应可见。\\n\\n如果有，需要重置该节点！\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Matching IDs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Delete Key\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove Tool Success\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Memory\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Operations\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MCP Client\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Operations\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get MCP-tagged Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Convert to JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"listTools Success\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get MCP-tagged Workflows1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Convert to JSON1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add Workflow\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"N8N Workflows MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simple Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Parameters\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Execute Workflow with PassThrough Variables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List Workflows\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"N8N Workflows MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"RemoveWorkflow\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"N8N Workflows MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to JSON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ExecuteWorkflow\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"N8N Workflows MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is Empty Array?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Delete Key\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Store In Memory1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SearchWorkflows\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"N8N Workflows MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Store In Memory\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AddTool Success\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to JSON1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Has Workflow Available?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Store In Memory1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove Tool Success\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Workflow Exists?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Simplify Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"AddTool Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simplify Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store In Memory\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Matching IDs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is Empty Array?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Matching Ids\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Workflow Exists?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simplify Workflows1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"listTools Success1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Has Workflow Available?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Parameters\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"ExecuteTool Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get MCP-tagged Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Matching Ids\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get MCP-tagged Workflows1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Simplify Workflows1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When Executed by Another Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Memory\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow with PassThrough Variables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"executeTool Result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}