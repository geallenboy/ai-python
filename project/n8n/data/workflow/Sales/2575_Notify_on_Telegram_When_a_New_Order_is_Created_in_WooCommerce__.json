{
  "title": "Notify on Telegram When a New Order is Created in WooCommerce 📦",
  "url": "https://n8n.io/workflows/2575-notify-on-telegram-when-a-new-order-is-created-in-woocommerce/",
  "category": "Sales",
  "category_url": "https://n8n.io/workflows/categories/sales/?sort=createdAt:desc",
  "author": "AmirHossein MnasouriZade",
  "publish_date": "Last update 5 months ago",
  "publish_date_absolute": "2024-12-07",
  "content": "",
  "workflow_json": "{\"id\":\"JMfwq2Xn60pWz2Hy\",\"meta\":{\"instanceId\":\"2e75c9fb3cdcf631da470c0180f0739986baa0ee860de53281e9edc3491b82a3\",\"templateCredsSetupCompleted\":true},\"name\":\"Send Telegram Alerts for New WooCommerce Orders\",\"tags\":[],\"nodes\":[{\"id\":\"bc66fcc7-55d4-46b3-929a-6e4359733601\",\"name\":\"Check if Order Status is Processing\",\"type\":\"n8n-nodes-base.if\",\"position\":[260,760],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":1,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"0509abb0-c655-49de-8f2c-c4649b478983\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.body.status }}\",\"rightValue\":\"processing\"}]}},\"typeVersion\":2},{\"id\":\"99ecb702-0264-4aeb-8b15-4383b97bc5ee\",\"name\":\"Design Message Template\",\"type\":\"n8n-nodes-base.code\",\"position\":[500,740],\"parameters\":{\"jsCode\":\"// Data extraction and processing for order details\\nconst lineItems = $json.body.line_items;\\n\\n// Getting the total amount directly from WooCommerce\\nconst totalAmount = parseInt($json.body.total).toLocaleString();\\n\\n// Constructing the product message in the desired format\\nconst filteredItems = lineItems.map(item => {\\n  const name = item.name;\\n  const quantity = item.quantity;\\n  return `🔹 ${name}<b> (${quantity} items)</b>`;\\n}).join('\\\\n');  // Separating each product with a new line\\n\\n// Getting the order creation date and time\\nlet dateCreated = new Date($json.body.date_created_gmt || new Date());\\n\\n// Directly using the server's local time (no timezone conversion)\\nlet formattedDate = dateCreated.toLocaleString('en-US', {\\n  year: 'numeric',\\n  month: 'long',\\n  day: 'numeric',\\n  hour: '2-digit',\\n  minute: '2-digit',\\n  hour12: false\\n});\\n\\n// Constructing other parts of the message in an organized manner\\nconst orderInfo = `\\n\\n🆔 <b>Order ID:</b> ${$json.body.id}\\n\\n👦🏻 <b>Customer Name:</b> ${$json.body.billing.first_name} ${$json.body.billing.last_name}\\n\\n💵 <b>Amount:</b> ${totalAmount}\\n\\n📅 <b>Order Date:</b>\\n➖ ${formattedDate}\\n\\n🏙 <b>City:</b> ${$json.body.billing.city}\\n\\n📞 <b>Phone:</b> ${$json.body.billing.phone}\\n\\n✍🏻 <b>Order Note:</b>\\n${$json.body.customer_note || 'No notes'}\\n\\n📦 <b>Ordered Products:</b>\\n\\n${filteredItems}\\n`;\\n\\n// Returning the final message\\nreturn {\\n  orderMessage: orderInfo.trim()  // Remove extra spaces from the beginning and end of the message\\n};\"},\"typeVersion\":2},{\"id\":\"c2c49759-5309-42bc-872d-7b34faf34f62\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1120,540],\"parameters\":{\"color\":3,\"width\":1035.4009739750634,\"height\":868.2813781621796,\"content\":\"## ⚙️ Setup Instructions\\n\\n### 1. 🛒 **Configure WooCommerce Webhook**\\n- Navigate to **WooCommerce ➡️ Settings ➡️ Advanced ➡️ Webhooks** in your WordPress dashboard.\\n- Click on ➕ **Add Webhook**.\\n- Set the **Status** to **Active**.\\n- Choose **Topic**: **Order updated**.\\n- Paste the **Webhook URL** from the 🔗 Webhook node in this workflow into the **Delivery URL** field.\\n- Click 💾 **Save Webhook**.\\n\\n### 2. 🤖 **Create a Telegram Bot**\\n- Open **Telegram** and start a chat with **@BotFather**.\\n- Send the command **/newbot** and follow the instructions to create your bot.\\n- Copy the **API Token** provided by **BotFather**.\\n\\n### 3. 🔑 **Set Up Telegram Credentials in n8n**\\n- In **n8n**, go to **Credentials**.\\n- Click ➕ **Create** and select **Telegram Bot**.\\n- Paste the **API Token** you copied earlier.\\n- **Save** the credentials.\\n\\n### 4. ✏️ **Configure the Telegram Node**\\n- Open the 📨 **Send Order Notification to Telegram** node.\\n- Select your **Telegram credentials**.\\n- Enter your **Chat ID** where you want to receive notifications.  \\n  **Tip**: Use **@userinfobot** in Telegram to find your **Chat ID**.\\n\\n### 5. 🚀 **Activate and Test the Workflow**\\n- Ensure the workflow is 🟢 **Active**.\\n- Place a new order in your **WooCommerce store**.\\n- Update the order status to **\\\"Processing\\\"**.\\n- You should receive a **Telegram notification** with the **order details**!\\n\\n## 💡 Notes\\n- **Customize the message format** in the 🖋️ **Design Message Template** node to include additional order details if needed.\\n\"},\"typeVersion\":1},{\"id\":\"5555e7ff-46d9-4b91-a42c-4d83fc9b5edb\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1120,300],\"parameters\":{\"color\":5,\"width\":1040.2541837971148,\"height\":216.11554963705538,\"content\":\"## 📦 Send Telegram Alerts for New WooCommerce Orders\\n\\n📝 **Description**  \\nThis workflow automatically sends a **Telegram notification** whenever a **WooCommerce order** status is updated to \\\"Processing\\\". It's perfect for **online store owners** who want instant updates when orders are ready to be fulfilled.\\n\"},\"typeVersion\":1},{\"id\":\"acde9b85-4ae7-462f-91c0-13a4209fb013\",\"name\":\"Receive WooCommerce Order\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[20,760],\"webhookId\":\"9aeff297-db6b-4c69-93bf-21b194ef115c\",\"parameters\":{\"path\":\"9aeff297-db6b-4c69-93bf-21b194ef115c\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":2},{\"id\":\"5605e14d-a125-41c1-b7e8-cc1feeb6a1e1\",\"name\":\"Telegram\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[720,740],\"parameters\":{\"text\":\"{{ $json.orderMessage }}\",\"chatId\":\"<Your-Chat-ID>\",\"additionalFields\":{\"parse_mode\":\"HTML\",\"appendAttribution\":true}},\"typeVersion\":1.2}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"f1a12e0e-e2a2-4eea-b7a6-cc4c7439bef9\",\"connections\":{\"Design Message Template\":{\"main\":[[{\"node\":\"Telegram\",\"type\":\"main\",\"index\":0}]]},\"Receive WooCommerce Order\":{\"main\":[[{\"node\":\"Check if Order Status is Processing\",\"type\":\"main\",\"index\":0}]]},\"Check if Order Status is Processing\":{\"main\":[[{\"node\":\"Design Message Template\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "**📦 Send Telegram Notifications for New WooCommerce Orders**\n\nThis workflow automatically sends a Telegram notification when an order status in WooCommerce changes to \"Processing.\" Perfect for online store owners who want instant updates on order fulfillment.\n\n![Screenshot 20241125 183214.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_11_25_183214_aa15baea52.png)\n\n## ⚙️ Set Up Telegram Alerts for WooCommerce Orders\n\n  * Configure WooCommerce Webhook to trigger on order updates.\n\n\n\n![image.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_15f89fe80e.png)\n\n  * Create a Telegram Bot and obtain the API token.\n  * Set Up Telegram Credentials in n8n.\n  * Configure the Telegram Node with your chat ID.\n  * Activate and Test the workflow by placing a new order.\n\n\n\n##💡 Notes  \nYou can customize the message format in the 🖋️ Design Message Template node to include additional order details.\n\nContact me on [Telegram]: <https://t.me/amir676080>\n\n## Message structure includes the following details\n\n🆔 Order Number: 11234  \n👦🏻 Customer Name: John Doe  \n💵 Amount: 299.99 USD  \n📅 Order Date:  \n➖ 25th November 2024 at 14:42  \n🏙 City: New York  \n📞 Phone: +1 555-1234  \n✍🏻 Order Note: Fast delivery requested  \n📦 Ordered Products:  \n🔹 Wireless Earbuds (2 items)  \n📝 Type: Premium Sound Edition\n\n![image.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_0155e6b041.png)\n\nContact me on [Telegram]: <https://t.me/amir676080>\n",
  "readme_html": "<!--[--><div data-v-50766329=\"\"><p><strong>📦 Send Telegram Notifications for New WooCommerce Orders</strong></p>\n<p>This workflow automatically sends a Telegram notification when an order status in WooCommerce changes to \"Processing.\" Perfect for online store owners who want instant updates on order fulfillment.</p>\n<p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_11_25_183214_aa15baea52.png\" alt=\"Screenshot 20241125 183214.png\"></p>\n<h2>⚙️ Set Up Telegram Alerts for WooCommerce Orders</h2>\n<ul>\n<li>Configure WooCommerce Webhook to trigger on order updates.</li>\n</ul>\n<p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_15f89fe80e.png\" alt=\"image.png\"></p>\n<ul>\n<li>Create a Telegram Bot and obtain the API token.</li>\n<li>Set Up Telegram Credentials in n8n.</li>\n<li>Configure the Telegram Node with your chat ID.</li>\n<li>Activate and Test the workflow by placing a new order.</li>\n</ul>\n<p>##💡 Notes<br>\nYou can customize the message format in the 🖋️ Design Message Template node to include additional order details.</p>\n<p>Contact me on [Telegram]: <a href=\"https://t.me/amir676080\" rel=\"ugc nofollow\" target=\"_blank\">https://t.me/amir676080</a></p>\n<h2>Message structure includes the following details</h2>\n<p>🆔 Order Number: 11234<br>\n👦🏻 Customer Name: John Doe<br>\n💵 Amount: 299.99 USD<br>\n📅 Order Date:<br>\n➖ 25th November 2024 at 14:42<br>\n🏙 City: New York<br>\n📞 Phone: +1 555-1234<br>\n✍🏻 Order Note: Fast delivery requested<br>\n📦 Ordered Products:<br>\n🔹 Wireless Earbuds (2 items)<br>\n📝 Type: Premium Sound Edition</p>\n<p><img src=\"https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_0155e6b041.png\" alt=\"image.png\"></p>\n<p>Contact me on [Telegram]: <a href=\"https://t.me/amir676080\" rel=\"ugc nofollow\" target=\"_blank\">https://t.me/amir676080</a></p>\n</div><!--]-->",
  "readme_zh": "**📦 新WooCommerce订单Telegram通知推送**\n\n此工作流会在WooCommerce订单状态变更为\"处理中\"时自动发送Telegram通知。特别适合需要实时掌握订单履约情况的网店经营者。\n\n![订单通知截图](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_11_25_183214_aa15baea52.png)\n\n## ⚙️ WooCommerce订单Telegram提醒设置指南\n\n  * 配置WooCommerce订单状态更新的Webhook触发器\n  * 创建Telegram机器人并获取API令牌\n  * 在n8n平台配置Telegram通信凭证\n  * 设置包含会话ID的Telegram节点\n  * 通过测试新订单激活工作流\n\n![配置示意图](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_15f89fe80e.png)\n\n##💡 使用说明  \n您可以在🖋️消息模板设计节点自定义通知格式，添加更多订单明细字段。\n\n[Telegram联系通道]: <https://t.me/amir676080>\n\n## 通知消息包含以下字段\n\n🆔 订单编号: 11234  \n👦🏻 客户姓名: 约翰·多伊  \n💵 订单金额: 299.99 美元  \n📅 下单时间:  \n➖ 2024年11月25日 14:42  \n🏙 城市: 纽约  \n📞 电话: +1 555-1234  \n✍🏻 订单备注: 要求快速配送  \n📦 商品清单:  \n🔹 无线耳机 (2件)  \n📝 型号: 臻享音质版\n\n![消息模板示例](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_0155e6b041.png)\n\n[Telegram技术支持]: <https://t.me/amir676080>",
  "title_zh": "在WooCommerce中创建新订单时通过Telegram通知 📦",
  "publish_date_zh": "最后更新于5个月前",
  "workflow_json_zh": "{\n  \"id\": \"JMfwq2Xn60pWz2Hy\",\n  \"meta\": {\n    \"instanceId\": \"2e75c9fb3cdcf631da470c0180f0739986baa0ee860de53281e9edc3491b82a3\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Send Telegram Alerts for New WooCommerce Orders\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"bc66fcc7-55d4-46b3-929a-6e4359733601\",\n      \"name\": \"Check if Order Status is Processing\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        260,\n        760\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 1,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"0509abb0-c655-49de-8f2c-c4649b478983\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.body.status }}\",\n              \"rightValue\": \"processing\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"99ecb702-0264-4aeb-8b15-4383b97bc5ee\",\n      \"name\": \"Design Message Template\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        500,\n        740\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Data extraction and processing for order details\\nconst lineItems = $json.body.line_items;\\n\\n// Getting the total amount directly from WooCommerce\\nconst totalAmount = parseInt($json.body.total).toLocaleString();\\n\\n// Constructing the product message in the desired format\\nconst filteredItems = lineItems.map(item => {\\n  const name = item.name;\\n  const quantity = item.quantity;\\n  return `🔹 ${name}<b> (${quantity} items)</b>`;\\n}).join('\\\\n');  // Separating each product with a new line\\n\\n// Getting the order creation date and time\\nlet dateCreated = new Date($json.body.date_created_gmt || new Date());\\n\\n// Directly using the server's local time (no timezone conversion)\\nlet formattedDate = dateCreated.toLocaleString('en-US', {\\n  year: 'numeric',\\n  month: 'long',\\n  day: 'numeric',\\n  hour: '2-digit',\\n  minute: '2-digit',\\n  hour12: false\\n});\\n\\n// Constructing other parts of the message in an organized manner\\nconst orderInfo = `\\n\\n🆔 <b>Order ID:</b> ${$json.body.id}\\n\\n👦🏻 <b>Customer Name:</b> ${$json.body.billing.first_name} ${$json.body.billing.last_name}\\n\\n💵 <b>Amount:</b> ${totalAmount}\\n\\n📅 <b>Order Date:</b>\\n➖ ${formattedDate}\\n\\n🏙 <b>City:</b> ${$json.body.billing.city}\\n\\n📞 <b>Phone:</b> ${$json.body.billing.phone}\\n\\n✍🏻 <b>Order Note:</b>\\n${$json.body.customer_note || 'No notes'}\\n\\n📦 <b>Ordered Products:</b>\\n\\n${filteredItems}\\n`;\\n\\n// Returning the final message\\nreturn {\\n  orderMessage: orderInfo.trim()  // Remove extra spaces from the beginning and end of the message\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c2c49759-5309-42bc-872d-7b34faf34f62\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1120,\n        540\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 1035.4009739750634,\n        \"height\": 868.2813781621796,\n        \"content\": \"## ⚙️ 设置指南\\n\\n### 1. 🛒 **配置WooCommerce网络钩子**\\n- 在WordPress后台进入 **WooCommerce ➡️ 设置 ➡️ 高级 ➡️ 网络钩子**\\n- 点击 ➕ **添加网络钩子**\\n- 将**状态**设为**激活**\\n- 选择**主题**：**订单更新**\\n- 将本工作流中🔗 Webhook节点的**网络钩子URL**粘贴至**交付URL**字段\\n- 点击 💾 **保存网络钩子**\\n\\n### 2. 🤖 **创建Telegram机器人**\\n- 打开**Telegram**并与**@BotFather**对话\\n- 发送指令 **/newbot** 并按指引创建机器人\\n- 复制**BotFather**提供的**API令牌**\\n\\n### 3. 🔑 **在n8n中配置Telegram凭证**\\n- 在**n8n**中进入**凭证管理**\\n- 点击 ➕ **新建**并选择**Telegram机器人**\\n- 粘贴先前复制的**API令牌**\\n- **保存**凭证\\n\\n### 4. ✏️ **配置Telegram节点**\\n- 打开 📨 **发送订单通知至Telegram**节点\\n- 选择您的**Telegram凭证**\\n- 输入接收通知的**聊天ID**  \\n  **提示**：在Telegram中使用**@userinfobot**查询您的**聊天ID**\\n\\n### 5. 🚀 **激活并测试工作流**\\n- 确保工作流显示为 🟢 **激活**状态\\n- 在您的**WooCommerce商店**创建新订单\\n- 将订单状态更新为**\\\"处理中\\\"**\\n- 您将收到包含**订单详情**的**Telegram通知**！\\n\\n## 💡 注意事项\\n- 可在 🖋️ **设计消息模板**节点中**自定义消息格式**，按需添加更多订单细节\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5555e7ff-46d9-4b91-a42c-4d83fc9b5edb\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1120,\n        300\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 1040.2541837971148,\n        \"height\": 216.11554963705538,\n        \"content\": \"## 📦 新WooCommerce订单的Telegram提醒推送\\n\\n📝 **功能说明**  \\n当WooCommerce订单状态更新为\\\"处理中\\\"时，该工作流会自动发送**Telegram通知**。特别适合希望即时获取可发货订单动态的**网店店主**。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"acde9b85-4ae7-462f-91c0-13a4209fb013\",\n      \"name\": \"Receive WooCommerce Order\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        20,\n        760\n      ],\n      \"webhookId\": \"9aeff297-db6b-4c69-93bf-21b194ef115c\",\n      \"parameters\": {\n        \"path\": \"9aeff297-db6b-4c69-93bf-21b194ef115c\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5605e14d-a125-41c1-b7e8-cc1feeb6a1e1\",\n      \"name\": \"Telegram\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        720,\n        740\n      ],\n      \"parameters\": {\n        \"text\": \"{{ $json.orderMessage }}\",\n        \"chatId\": \"<Your-Chat-ID>\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\",\n          \"appendAttribution\": true\n        }\n      },\n      \"typeVersion\": 1.2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"f1a12e0e-e2a2-4eea-b7a6-cc4c7439bef9\",\n  \"connections\": {\n    \"Design Message Template\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receive WooCommerce Order\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check if Order Status is Processing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check if Order Status is Processing\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Design Message Template\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}