{
  "url": "https://blog.n8n.io/sql-export-to-csv/",
  "title": "Export data from SQL database to CSV: 3 nifty techniques",
  "excerpt": "Export your SQL data into CSV with 3 nifty techniques: using SQL Server Management Studio, sqlcmd command line utility and n8n automation tool.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2023/05/cover_image_SQLtoCSV-fix.png",
  "tags": [
    "Database",
    "Tutorial"
  ],
  "html": "<p>With <a href=\"https://pages.bettercloud.com/rs/719-KZY-706/images/2023-StateofSaaSOps-report-final.pdf?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">companies using a gazillion SaaS apps</a> these days, syncing data between different apps can be a real pain.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/stats.png\" class=\"kg-image lightense-target\" alt=\"Average number of SaaS apps used per organisation. \" loading=\"lazy\" width=\"500\" height=\"650\"><figcaption>Average number of SaaS apps used per organisation. Source: https://www.bettercloud.com/monitor/the-2023-state-of-saasops-report/</figcaption></figure><p>If these apps don't share a common database, you've got two options:</p><ol><li><a href=\"https://blog.n8n.io/api-integration/\">Integrate via API</a></li><li>Transfer data in a universally accepted format, like CSV</li></ol><p>Integration via API doesn't always work out, but don't worry ‚Äì you can always fall back on CSV transfers as a solid alternative.</p><p>CSV has some pretty sweet advantages over Excel spreadsheets too:</p><ul><li>It's an open format, meaning everyone can use it</li><li>It's a plain-text format, so no need for fancy software to read it</li><li>It stores data \"as is,\" so you won't mess up your data (which often happens with Excel date variables, for example)</li></ul><p>So, buckle up, folks! We've got an easy-to-follow tutorial on three ways to export SQL database to CSV: using SQL Server Management Studio, sqlcmd command line utility and <a href=\"https://n8n.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n automation tool.</a></p><div class=\"kg-card kg-callout-card kg-callout-card-purple\"><div class=\"kg-callout-emoji\">üí°</div><div class=\"kg-callout-text\">Don't want to scroll to the bottom? Grab this free <a href=\"https://n8n.io/workflows/1914-export-sql-table-into-csv-file/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n workflow template on how to export SQL data to CSV</a> now!</div></div><h2 id=\"how-do-i-transfer-data-from-sql-to-csv\">How do I transfer data from SQL to CSV?</h2><p>Let's dive into some cool ways to quickly export our MySQL data into a handy CSV file. We've got three nifty methods lined up for you:</p><ul><li>Whipping up a CSV using SQL Server Management Studio (SSMS) ‚Äì the classic method</li><li>Speeding things up with a command line utility, so you can skip opening SSMS every time</li><li>Harnessing the power of n8n, a low-code automation tool, so you can sleep tight at night while your data is in sync 24/7</li></ul><p>Let's roll up our sleeves and find out how you can get more in less time with creative automation techniques!</p><h2 id=\"export-sql-table-to-csv-via-sql-server-management-studio\">Export SQL table to CSV via SQL Server Management Studio</h2><p>One common way to perform SQL export to CSV is via SSMS. The SQL Server Import and Export Wizard is a popular tool among engineers. It allows for both manual data transfer as well as writing SQL queries. In this article, we'll demonstrate how to transfer data without running SQL statements. This technique is handy if you occasionally need to create CSV exports.</p><h3 id=\"step-1-install-ssms-and-configure-the-local-sql-server\">Step 1. Install SSMS and configure the local SQL Server</h3><p>If you don‚Äôt already have a working SQL Server, we explained the installation process in another article on <a href=\"https://blog.n8n.io/export-sql-to-excel#export-sql-query-to-excel-via-sql-server-management-studio-ssms\">how to export MySQL to Excel</a>.</p><h3 id=\"step-2-connect-to-the-sql-server-and-export-sql-table-to-csv\">Step 2. Connect to the SQL Server and export SQL table to CSV</h3><p>Once you created a local SQL server and loaded a sample database, you can open the SQL Server Management Studio. Then connect to the database from the <strong>Object Explorer</strong> panel.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/SSMS-connect.png\" class=\"kg-image lightense-target\" alt=\"Connect to the SQL Server from SSMS\" loading=\"lazy\" width=\"800\" height=\"450\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/05/SSMS-connect.png 600w, https://blog.n8n.io/content/images/2023/05/SSMS-connect.png 800w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Connect to the SQL Server from SSMS</figcaption></figure><p>Once connected, right-click on the database name and select <strong>Tasks - Export Data</strong>. An Import and Export Wizard will open. We need to configure the <strong>Data source </strong>first. Select ‚ÄúMicrosoft OLE DB Driver for SQL Server‚Äù, then press <strong>Properties</strong> and configure the connection. Here you need to provide a named pipe as a server name and select Windows Authentication. Don‚Äôt forget to Select the database! Finally, press <strong>Test Connection</strong> and <strong>OK</strong> once finished.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/Imp-Exp-Wiz-1.png\" class=\"kg-image lightense-target\" alt=\"Add Data Source in the SQL Server Import &amp; Export Wizard\" loading=\"lazy\" width=\"850\" height=\"720\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/05/Imp-Exp-Wiz-1.png 600w, https://blog.n8n.io/content/images/2023/05/Imp-Exp-Wiz-1.png 850w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Add Data Source in the SQL Server Import &amp; Export Wizard</figcaption></figure><p>Next, we need to pick Flat File as a <strong>Destination</strong>. Select a <strong>File Name</strong> on your local drive and configure other settings, such as file locale and encoding. Press next and select whether you want to:</p><ul><li>copy data from one or more tables or views, or</li><li>write an SQL query to specify the data to transfer</li></ul><p>Pick the first option now. In the next window choose one source table. Let‚Äôs export the ProductCategory table. Follow the wizard until the end and open the created CSV file.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/csv-export-1.png\" class=\"kg-image lightense-target\" alt=\"SQL table saved as CSV file\" loading=\"lazy\" width=\"986\" height=\"579\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/05/csv-export-1.png 600w, https://blog.n8n.io/content/images/2023/05/csv-export-1.png 986w\" sizes=\"(min-width: 720px) 720px\"><figcaption>SQL table saved as CSV file</figcaption></figure><div class=\"kg-card kg-callout-card kg-callout-card-purple\"><div class=\"kg-callout-emoji\">üí°</div><div class=\"kg-callout-text\">A quick lifehack: press the windows <strong>Start</strong> and search for ‚ÄúImport and Export Data‚Äù. This way you can start the export process without opening the SSMS.</div></div><h2 id=\"mysql-export-to-csv-via-command-line\">MySQL export to CSV via command line</h2><p>If you're allergic to clunky corporate interfaces, don't worry ‚Äì a command line tool can save the day. For Windows users there's the sqlcmd utility. Just type <code>sqlcmd -?</code> to see if it's already installed. If it's not, check out the <a href=\"https://learn.microsoft.com/en-us/sql/tools/sqlcmd/sqlcmd-utility?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Microsoft documentation page on sqlcmd</a> for more guidance.</p><h3 id=\"step-1-get-familiar-with-sqlcmd\">Step 1. Get familiar with sqlcmd</h3><p>The sqlcmd tool offers a range of options that you can explore by typing <code>sqlcmd -?</code> in the command line:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/sql-cmd-help.png\" class=\"kg-image lightense-target\" alt=\"List of sqlcmd options\" loading=\"lazy\" width=\"724\" height=\"619\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/05/sql-cmd-help.png 600w, https://blog.n8n.io/content/images/2023/05/sql-cmd-help.png 724w\" sizes=\"(min-width: 720px) 720px\"><figcaption>List of sqlcmd options</figcaption></figure><h3 id=\"step-2-export-sql-query-to-csv-file\">Step 2. Export SQL query to CSV file</h3><p>Let‚Äôs export the same table without further ado:</p><pre><code>sqlcmd -S \\\\.\\pipe\\MSSQL$SQLEXPRESS\\sql\\query ^\n-Q \"select top 10 * from AdventureWorksLT2019.SalesLT.ProductCategory;\" ^\n-o \"&lt;YOUR PATH HERE&gt;\\Export_test1.csv\" ^\n-W ^\n-s \",\"</code></pre><ul><li>Specify your server name in the -S option</li><li>Write SQL query inside the -Q option</li><li>Provide output file in the -o option</li><li>-W removes trailing spaces</li><li>Lastly, choose a delimiter symbol with the -s option</li><li>SELECT TOP 10 is for illustrative purposes only</li></ul><p>As you can see, the CSV export file is created but it looks a bit odd:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/sqlcmd-export-csv.png\" class=\"kg-image lightense-target\" alt=\"Default CSV export from the sqlcmd utility. Note the unnecessary data in lines 2 and 14\" loading=\"lazy\" width=\"895\" height=\"579\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/05/sqlcmd-export-csv.png 600w, https://blog.n8n.io/content/images/2023/05/sqlcmd-export-csv.png 895w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Default CSV export from the sqlcmd utility. Note the unnecessary data in lines 2 and 14</figcaption></figure><ul><li>Line 2 has unnecessary dashes</li><li>At the end of the file there is an extra line <strong>(10 rows affected)</strong></li></ul><p>We can fix this with a different call:</p><pre><code>sqlcmd -S \\\\.\\pipe\\MSSQL$SQLEXPRESS\\sql\\query ^\n       -W ^\n       -s \",\" ^\n       -Q \"set nocount on; select * from AdventureWorksLT2019.SalesLT.ProductCategory;\" | findstr /v /c:\"---\" /b &gt; \"&lt;YOUR PATH HERE&gt;\\Export_test2.csv\"</code></pre><p>Let‚Äôs take a closer look:</p><ul><li>Here we provided an extra option <code>set nocount on;</code> in the -Q option</li><li>We didn‚Äôt specify the -o option. Instead, we dump the output right in the command line window and use the findstr tool to search for lines containing dashes. The <code>/v</code> option ensures that <a href=\"https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/findstr?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">this extra line will not be saved</a> in the output file.</li></ul><p>Congrats! You have successfully made an SQL export to CSV file with headers.</p><h2 id=\"export-sql-query-to-csv-using-n8n\">Export SQL query to CSV using n8n</h2><p>The first two steps have a common downside ‚Äì they take some manual effort. This can get tiresome when you regularly export lots of data. But with the n8n tool, you can output SQL query to CSV file automatically.</p><p>The best thing about this approach is how straightforward it is. You can carry out routine tasks without any manual effort or coding. With n8n's help, you can either save the CSV file or move data from SQL into various other systems.</p><div class=\"kg-card kg-callout-card kg-callout-card-grey\"><div class=\"kg-callout-emoji\">üí°</div><div class=\"kg-callout-text\">If you want to later extend your workflow, here are some ideas: <a href=\"https://n8n.io/workflows/1363-join-data-from-postgres-and-mysql/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">join data from Postgres and MySQL</a> or <a href=\"https://n8n.io/workflows/1822-two-way-sync-pipedrive-and-mysql/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">sync Pipedrive and MySQL</a>.</div></div><p>In this section of the tutorial, we'll explore how to export data from SQL server to CSV automatically. We'll demonstrate how to create a simple automation that saves you from mundane work.</p><h3 id=\"step-1-get-data-from-sql-to-n8n\">Step 1. Get data from SQL to n8n</h3><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/workflow-example-fix.png\" class=\"kg-image lightense-target\" alt=\"n8n workflow to export SQL query into a CSV file\" loading=\"lazy\" width=\"1300\" height=\"400\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/05/workflow-example-fix.png 600w, https://blog.n8n.io/content/images/size/w1000/2023/05/workflow-example-fix.png 1000w, https://blog.n8n.io/content/images/2023/05/workflow-example-fix.png 1300w\" sizes=\"(min-width: 720px) 720px\"><figcaption>n8n workflow to export SQL query into a CSV file</figcaption></figure><p>This <a href=\"https://n8n.io/workflows/1914-export-sql-table-into-csv-file/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">example workflow shows how to convert SQL to CSV</a> file. You can achieve the goal with just four nodes!</p><p>Starting node activates the process when you press <strong>Execute Workflow</strong>.</p><p>Next goes the <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Set</a> node. String variable <strong>TableName</strong> is declared there and it¬¥s equal to <strong><strong>SalesLT.ProductCategory</strong> ‚Äì same table as in previous example</strong>. Set node allows us to automatically create CSV file name.</p><p>The third node is a <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftsql/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">MSSQL node</a> that connects to a database. You¬¥ll need to set up credentials first. If you are running a local installation, some additional tweaks are required, because LocadDB uses Windows user‚Äôs credentials by default to access the database.</p><p>After this, pick <strong>Execute Query</strong> operation and provide the following <strong>Query</strong> as an expression:</p><pre><code>SELECT * FROM {{ $json[\"TableName\"] }}</code></pre><p>As you can see, we pick all records from a table whose name we defined in a Set Node. If everything is right, you¬¥ll see the imported data:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/n8n-loadSQL-fix-1.png\" class=\"kg-image lightense-target\" alt=\"SQL table imported into n8n\" loading=\"lazy\" width=\"1500\" height=\"650\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/05/n8n-loadSQL-fix-1.png 600w, https://blog.n8n.io/content/images/size/w1000/2023/05/n8n-loadSQL-fix-1.png 1000w, https://blog.n8n.io/content/images/2023/05/n8n-loadSQL-fix-1.png 1500w\" sizes=\"(min-width: 720px) 720px\"><figcaption>SQL table imported into n8n</figcaption></figure><h3 id=\"step-2-convert-the-table-to-a-csv-format\">Step 2. Convert the table to a CSV format</h3><p>Last node converts <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.movebinarydata/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">a JSON object into an CSV file</a>. Please check the configuration of the Move Binary Data Node:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/05/n8n-convert-csv-fix.png\" class=\"kg-image lightense-target\" alt=\"Assign CSV file name automatically\" loading=\"lazy\" width=\"400\" height=\"500\"><figcaption>Assign CSV file name automatically</figcaption></figure><p><strong>File Name</strong> option is an expression and it is set to:</p><pre><code>{{ $node[\"TableName\"].json[\"TableName\"] }}.{{ $parameter[\"fileFormat\"] }}</code></pre><p>Here we generate <strong>File Name</strong> automatically based on</p><ul><li>the table name that was provided in Set Node and</li><li>a <strong>File Format</strong> parameter. If you change the format and pick XLS (old Excel format), the <strong>File Name</strong> will change automatically to <strong><strong>SalesLT.ProductCategory.xls</strong></strong>. This trick can be useful when you export SQL database to CSV programmatically.</li></ul><p><strong>Sheet Name</strong> option is also an expression:</p><pre><code>{{ $node[\"TableName\"].json[\"TableName\"] }}</code></pre><p>We make sure that the CSV file name is equal to an SQL table name.</p><p>Now you can see how easy it is to export SQL query to CSV automatically!</p><h2 id=\"wrap-up\">Wrap Up</h2><p>In this tutorial, we learned how to export SQL server data to CSV using three different techniques.</p><ul><li>We did it via Microsoft SQL Server Management Studio</li><li>Another approach was to use the sqlcmd command line utility</li><li>Finally, we exported the SQL database to CSV in n8n. It allowed us to achieve our goal without writing any code</li></ul><h2 id=\"what%E2%80%99s-next\">What‚Äôs next?</h2><p>So, you've spent a truckload of time gathering data in a centralized MySQL database. Here's what you can do next:</p><ul><li>Check out our recent tutorial on how to <a href=\"https://blog.n8n.io/import-csv-into-mysql/\">import CSV data into MySQL</a></li><li>Read one more helpful guide if you want to <a href=\"https://blog.n8n.io/export-sql-to-excel/\">export SQL to Excel</a></li><li>Use other nodes and export SQL databases like <a href=\"https://n8n.io/integrations/snowflake/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Snowflake</a>, <a href=\"https://n8n.io/integrations/mongodb/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">MongoDB</a> and <a href=\"https://n8n.io/integrations/postgres/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">PostgreSQL</a>.</li><li>Scale this workflow even further by providing multiple table names, different SQL Queries or setting up regular exports via <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Schedule Trigger</a> Node.</li></ul><p>Start automating today and register your <a href=\"https://n8n.io/pricing/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n account in the cloud</a> for free! You can <a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">run it on your own server</a>.</p>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-879eiz2ck0ln\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=qq3gju3r8q70\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=Export%20data%20from%20SQL%20database%20to%20CSV%3A%203%20nifty%20techniques&amp;url=https://blog.n8n.io/sql-export-to-csv/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/sql-export-to-csv/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/sql-export-to-csv/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "With [companies using a gazillion SaaS apps](https://pages.bettercloud.com/rs/719-KZY-706/images/2023-StateofSaaSOps-report-final.pdf?ref=blog.n8n.io) these days, syncing data between different apps can be a real pain.\n\n![Average number of SaaS apps used per organisation. ](https://blog.n8n.io/content/images/2023/05/stats.png)Average number of SaaS apps used per organisation. Source: https://www.bettercloud.com/monitor/the-2023-state-of-saasops-report/\n\nIf these apps don't share a common database, you've got two options:\n\n  1. [Integrate via API](https://blog.n8n.io/api-integration/)\n  2. Transfer data in a universally accepted format, like CSV\n\n\n\nIntegration via API doesn't always work out, but don't worry ‚Äì you can always fall back on CSV transfers as a solid alternative.\n\nCSV has some pretty sweet advantages over Excel spreadsheets too:\n\n  * It's an open format, meaning everyone can use it\n  * It's a plain-text format, so no need for fancy software to read it\n  * It stores data \"as is,\" so you won't mess up your data (which often happens with Excel date variables, for example)\n\n\n\nSo, buckle up, folks! We've got an easy-to-follow tutorial on three ways to export SQL database to CSV: using SQL Server Management Studio, sqlcmd command line utility and [n8n automation tool.](https://n8n.io/?ref=blog.n8n.io)\n\nüí°\n\nDon't want to scroll to the bottom? Grab this free [n8n workflow template on how to export SQL data to CSV](https://n8n.io/workflows/1914-export-sql-table-into-csv-file/?ref=blog.n8n.io) now!\n\n## How do I transfer data from SQL to CSV?\n\nLet's dive into some cool ways to quickly export our MySQL data into a handy CSV file. We've got three nifty methods lined up for you:\n\n  * Whipping up a CSV using SQL Server Management Studio (SSMS) ‚Äì the classic method\n  * Speeding things up with a command line utility, so you can skip opening SSMS every time\n  * Harnessing the power of n8n, a low-code automation tool, so you can sleep tight at night while your data is in sync 24/7\n\n\n\nLet's roll up our sleeves and find out how you can get more in less time with creative automation techniques!\n\n## Export SQL table to CSV via SQL Server Management Studio\n\nOne common way to perform SQL export to CSV is via SSMS. The SQL Server Import and Export Wizard is a popular tool among engineers. It allows for both manual data transfer as well as writing SQL queries. In this article, we'll demonstrate how to transfer data without running SQL statements. This technique is handy if you occasionally need to create CSV exports.\n\n### Step 1. Install SSMS and configure the local SQL Server\n\nIf you don‚Äôt already have a working SQL Server, we explained the installation process in another article on [how to export MySQL to Excel](https://blog.n8n.io/export-sql-to-excel#export-sql-query-to-excel-via-sql-server-management-studio-ssms).\n\n### Step 2. Connect to the SQL Server and export SQL table to CSV\n\nOnce you created a local SQL server and loaded a sample database, you can open the SQL Server Management Studio. Then connect to the database from the **Object Explorer** panel.\n\n![Connect to the SQL Server from SSMS](https://blog.n8n.io/content/images/2023/05/SSMS-connect.png)Connect to the SQL Server from SSMS\n\nOnce connected, right-click on the database name and select **Tasks - Export Data**. An Import and Export Wizard will open. We need to configure the **Data source** first. Select ‚ÄúMicrosoft OLE DB Driver for SQL Server‚Äù, then press **Properties** and configure the connection. Here you need to provide a named pipe as a server name and select Windows Authentication. Don‚Äôt forget to Select the database! Finally, press **Test Connection** and **OK** once finished.\n\n![Add Data Source in the SQL Server Import & Export Wizard](https://blog.n8n.io/content/images/2023/05/Imp-Exp-Wiz-1.png)Add Data Source in the SQL Server Import & Export Wizard\n\nNext, we need to pick Flat File as a **Destination**. Select a **File Name** on your local drive and configure other settings, such as file locale and encoding. Press next and select whether you want to:\n\n  * copy data from one or more tables or views, or\n  * write an SQL query to specify the data to transfer\n\n\n\nPick the first option now. In the next window choose one source table. Let‚Äôs export the ProductCategory table. Follow the wizard until the end and open the created CSV file.\n\n![SQL table saved as CSV file](https://blog.n8n.io/content/images/2023/05/csv-export-1.png)SQL table saved as CSV file\n\nüí°\n\nA quick lifehack: press the windows **Start** and search for ‚ÄúImport and Export Data‚Äù. This way you can start the export process without opening the SSMS.\n\n## MySQL export to CSV via command line\n\nIf you're allergic to clunky corporate interfaces, don't worry ‚Äì a command line tool can save the day. For Windows users there's the sqlcmd utility. Just type `sqlcmd -?` to see if it's already installed. If it's not, check out the [Microsoft documentation page on sqlcmd](https://learn.microsoft.com/en-us/sql/tools/sqlcmd/sqlcmd-utility?ref=blog.n8n.io) for more guidance.\n\n### Step 1. Get familiar with sqlcmd\n\nThe sqlcmd tool offers a range of options that you can explore by typing `sqlcmd -?` in the command line:\n\n![List of sqlcmd options](https://blog.n8n.io/content/images/2023/05/sql-cmd-help.png)List of sqlcmd options\n\n### Step 2. Export SQL query to CSV file\n\nLet‚Äôs export the same table without further ado:\n    \n    \n    sqlcmd -S \\\\.\\pipe\\MSSQL$SQLEXPRESS\\sql\\query ^\n    -Q \"select top 10 * from AdventureWorksLT2019.SalesLT.ProductCategory;\" ^\n    -o \"<YOUR PATH HERE>\\Export_test1.csv\" ^\n    -W ^\n    -s \",\"\n\n  * Specify your server name in the -S option\n  * Write SQL query inside the -Q option\n  * Provide output file in the -o option\n  * -W removes trailing spaces\n  * Lastly, choose a delimiter symbol with the -s option\n  * SELECT TOP 10 is for illustrative purposes only\n\n\n\nAs you can see, the CSV export file is created but it looks a bit odd:\n\n![Default CSV export from the sqlcmd utility. Note the unnecessary data in lines 2 and 14](https://blog.n8n.io/content/images/2023/05/sqlcmd-export-csv.png)Default CSV export from the sqlcmd utility. Note the unnecessary data in lines 2 and 14\n\n  * Line 2 has unnecessary dashes\n  * At the end of the file there is an extra line **(10 rows affected)**\n\n\n\nWe can fix this with a different call:\n    \n    \n    sqlcmd -S \\\\.\\pipe\\MSSQL$SQLEXPRESS\\sql\\query ^\n           -W ^\n           -s \",\" ^\n           -Q \"set nocount on; select * from AdventureWorksLT2019.SalesLT.ProductCategory;\" | findstr /v /c:\"---\" /b > \"<YOUR PATH HERE>\\Export_test2.csv\"\n\nLet‚Äôs take a closer look:\n\n  * Here we provided an extra option `set nocount on;` in the -Q option\n  * We didn‚Äôt specify the -o option. Instead, we dump the output right in the command line window and use the findstr tool to search for lines containing dashes. The `/v` option ensures that [this extra line will not be saved](https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/findstr?ref=blog.n8n.io) in the output file.\n\n\n\nCongrats! You have successfully made an SQL export to CSV file with headers.\n\n## Export SQL query to CSV using n8n\n\nThe first two steps have a common downside ‚Äì they take some manual effort. This can get tiresome when you regularly export lots of data. But with the n8n tool, you can output SQL query to CSV file automatically.\n\nThe best thing about this approach is how straightforward it is. You can carry out routine tasks without any manual effort or coding. With n8n's help, you can either save the CSV file or move data from SQL into various other systems.\n\nüí°\n\nIf you want to later extend your workflow, here are some ideas: [join data from Postgres and MySQL](https://n8n.io/workflows/1363-join-data-from-postgres-and-mysql/?ref=blog.n8n.io) or [sync Pipedrive and MySQL](https://n8n.io/workflows/1822-two-way-sync-pipedrive-and-mysql/?ref=blog.n8n.io).\n\nIn this section of the tutorial, we'll explore how to export data from SQL server to CSV automatically. We'll demonstrate how to create a simple automation that saves you from mundane work.\n\n### Step 1. Get data from SQL to n8n\n\n![n8n workflow to export SQL query into a CSV file](https://blog.n8n.io/content/images/2023/05/workflow-example-fix.png)n8n workflow to export SQL query into a CSV file\n\nThis [example workflow shows how to convert SQL to CSV](https://n8n.io/workflows/1914-export-sql-table-into-csv-file/?ref=blog.n8n.io) file. You can achieve the goal with just four nodes!\n\nStarting node activates the process when you press **Execute Workflow**.\n\nNext goes the [Set](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/?ref=blog.n8n.io) node. String variable **TableName** is declared there and it¬¥s equal to ****SalesLT.ProductCategory** ‚Äì same table as in previous example**. Set node allows us to automatically create CSV file name.\n\nThe third node is a [MSSQL node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.microsoftsql/?ref=blog.n8n.io) that connects to a database. You¬¥ll need to set up credentials first. If you are running a local installation, some additional tweaks are required, because LocadDB uses Windows user‚Äôs credentials by default to access the database.\n\nAfter this, pick **Execute Query** operation and provide the following **Query** as an expression:\n    \n    \n    SELECT * FROM {{ $json[\"TableName\"] }}\n\nAs you can see, we pick all records from a table whose name we defined in a Set Node. If everything is right, you¬¥ll see the imported data:\n\n![SQL table imported into n8n](https://blog.n8n.io/content/images/2023/05/n8n-loadSQL-fix-1.png)SQL table imported into n8n\n\n### Step 2. Convert the table to a CSV format\n\nLast node converts [a JSON object into an CSV file](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.movebinarydata/?ref=blog.n8n.io). Please check the configuration of the Move Binary Data Node:\n\n![Assign CSV file name automatically](https://blog.n8n.io/content/images/2023/05/n8n-convert-csv-fix.png)Assign CSV file name automatically\n\n**File Name** option is an expression and it is set to:\n    \n    \n    {{ $node[\"TableName\"].json[\"TableName\"] }}.{{ $parameter[\"fileFormat\"] }}\n\nHere we generate **File Name** automatically based on\n\n  * the table name that was provided in Set Node and\n  * a **File Format** parameter. If you change the format and pick XLS (old Excel format), the **File Name** will change automatically to ****SalesLT.ProductCategory.xls****. This trick can be useful when you export SQL database to CSV programmatically.\n\n\n\n**Sheet Name** option is also an expression:\n    \n    \n    {{ $node[\"TableName\"].json[\"TableName\"] }}\n\nWe make sure that the CSV file name is equal to an SQL table name.\n\nNow you can see how easy it is to export SQL query to CSV automatically!\n\n## Wrap Up\n\nIn this tutorial, we learned how to export SQL server data to CSV using three different techniques.\n\n  * We did it via Microsoft SQL Server Management Studio\n  * Another approach was to use the sqlcmd command line utility\n  * Finally, we exported the SQL database to CSV in n8n. It allowed us to achieve our goal without writing any code\n\n\n\n## What‚Äôs next?\n\nSo, you've spent a truckload of time gathering data in a centralized MySQL database. Here's what you can do next:\n\n  * Check out our recent tutorial on how to [import CSV data into MySQL](https://blog.n8n.io/import-csv-into-mysql/)\n  * Read one more helpful guide if you want to [export SQL to Excel](https://blog.n8n.io/export-sql-to-excel/)\n  * Use other nodes and export SQL databases like [Snowflake](https://n8n.io/integrations/snowflake/?ref=blog.n8n.io), [MongoDB](https://n8n.io/integrations/mongodb/?ref=blog.n8n.io) and [PostgreSQL](https://n8n.io/integrations/postgres/?ref=blog.n8n.io).\n  * Scale this workflow even further by providing multiple table names, different SQL Queries or setting up regular exports via [Schedule Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/?ref=blog.n8n.io) Node.\n\n\n\nStart automating today and register your [n8n account in the cloud](https://n8n.io/pricing/?ref=blog.n8n.io) for free! You can [run it on your own server](https://docs.n8n.io/hosting/?ref=blog.n8n.io).\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=Export%20data%20from%20SQL%20database%20to%20CSV%3A%203%20nifty%20techniques&url=https://blog.n8n.io/sql-export-to-csv/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/sql-export-to-csv/)\n",
  "crawled_at": "2025-05-28T10:51:17.027898"
}