{
  "url": "https://blog.n8n.io/creating-scheduled-text-affirmations-with-n8n/",
  "title": "Creating scheduled text affirmations with n8n",
  "excerpt": "It's always been part of human nature to automate the mundane tasks of everyday life. I was doing so myself until I wound up on n8n.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2021/01/1-WcLPijWkUcsPcB67AwFK-A.png",
  "tags": [
    "Tutorial"
  ],
  "html": "<p>It’s always been part of human nature to automate the boring and mundane tasks of everyday life — whether it’s scraping a website every 4 days or sharing updates to a Slack channel. I was doing so myself until I wound up on a really interesting workflow automation tool called <a href=\"https://n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">n8n</a><em>. You know — like Kubernetes is k8s, nodemation is n8n. It’s pretty sweet.</em></p><p>Out of the box, it doesn’t look like it has much to do with programming. A quick check on the <a href=\"https://n8n.io/integrations/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">integrations</a> page and you see a growing number of third party APIs available to make your life oh so easy. Don’t worry if you can’t find inspiration immediately, the templates and community inspired <a href=\"https://n8n.io/workflows?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">workflows</a> page has a cool list of already automated workflows you can either use yourself or get a few ideas from. This product has a pretty cool thing going on.</p><p>Today we’ll be adding to that list of workflows. We aren’t going through the easiest time at the moment with everything going on in the world and sometimes we need a little lift up. We’re going to create a workflow that sends positive affirmations to your telegram chat or group every day at a time you want.</p><h2 id=\"prerequisites\">Prerequisites</h2><p>Getting up and started with n8n is rather straightforward.</p><ul><li>You need to have <a href=\"https://nodejs.org/en/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Node.js</a> installed</li><li>You need to have <a href=\"https://www.npmjs.com/get-npm?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">npm</a> installed</li></ul><blockquote>Note: You might have some trouble if you don’t have node-gyp installed. The official <a href=\"https://github.com/nodejs/node-gyp?ref=blog.n8n.io#on-windows\" rel=\"noopener\" target=\"_blank\">GitHub page</a> has instructions for how to get it running on multiple operating systems.</blockquote><h2 id=\"getting-started\">Getting Started</h2><p>Once you meet all the prerequisites, install the n8n CLI with <code>npm install n8n -g</code> and run it with <code>n8n</code>.</p><p>When prompted, press ‘o’ in your terminal to open the local address in your browser and begin automating workflows. You’ll be met with this screen.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-4.gif\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1908\" height=\"915\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-4.gif 600w, https://blog.n8n.io/content/images/size/w1000/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-4.gif 1000w, https://blog.n8n.io/content/images/size/w1600/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-4.gif 1600w, https://blog.n8n.io/content/images/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-4.gif 1908w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Accessing your Node sidebar</figcaption></figure><p>n8n calls integrations <em>nodes</em>. It has a good number of third party nodes and inbuilt nodes. Sometimes, nodes can be used to trigger or start a workflow. To start it off, we’ll add a <a href=\"https://n8n.io/integrations/n8n-nodes-base.cron?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Cron</a> trigger that will start our workflow at a specific time. If you click the <strong>+ </strong>in the top right corner, you open up a menu of nodes. Click on the trigger tab and search for <em>Cron</em>. Click on it to add the time you want it to be triggered.</p><p>Click on the <em>Execute Workflow</em> button and you should see a small alert in the bottom right corner telling you that the workflow ran successfully.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-5.gif\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1908\" height=\"929\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-5.gif 600w, https://blog.n8n.io/content/images/size/w1000/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-5.gif 1000w, https://blog.n8n.io/content/images/size/w1600/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-5.gif 1600w, https://blog.n8n.io/content/images/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-5.gif 1908w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Setting up your Cron Node</figcaption></figure><blockquote>Note: Make sure to change settings in the panel on the left so that the Cron job runs at a time in your timezone.</blockquote><p>We have made sure that our workflow gets triggered at a specific time every day. Now we need need to request data from an API to get us these affirmations. Luckily for us, n8n has an <a href=\"https://n8n.io/integrations/n8n-nodes-base.httpRequest?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">HTTP Request</a> node and thanks to the folks at <a href=\"https://github.com/annthurium/affirmations/blob/master/affirmations.js?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">affirmations.dev</a> we have some awesome messages to return.</p><p>Again, we click the <strong>+ </strong>in the top right corner and search for HTTP and click on the HTTP Request node. Paste <a href=\"https://affirmations.dev/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">https://affirmations.dev</a> in the URL section and execute the workflow. Successfully runs again but this time you get some data, which is always good when making a request. Close the modal. Click and hold the circle on the Cron node and drag it to the left side of the HTTP Request node. This way, we’re telling n8n that when the Cron node is triggered, we need to make a request and return some data.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-AOnPyKgG7NvDj-yv.gif\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1908\" height=\"929\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-AOnPyKgG7NvDj-yv.gif 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-AOnPyKgG7NvDj-yv.gif 1000w, https://blog.n8n.io/content/images/size/w1600/2021/01/0-AOnPyKgG7NvDj-yv.gif 1600w, https://blog.n8n.io/content/images/2021/01/0-AOnPyKgG7NvDj-yv.gif 1908w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Setting up your HTTP Request node</figcaption></figure><p>We’re being returned affirmations in JSON format and we want to be able to send these out via Telegram. We have a <a href=\"https://n8n.io/integrations/n8n-nodes-base.telegram?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Telegram node</a> at our disposal. As we did before with the Cron and HTTP Request nodes, search for and click on Telegram.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-oYAbJ0w0hNmbHGM1.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1400\" height=\"787\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-oYAbJ0w0hNmbHGM1.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-oYAbJ0w0hNmbHGM1.png 1000w, https://blog.n8n.io/content/images/2021/01/0-oYAbJ0w0hNmbHGM1.png 1400w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Telegram node’s required fields</figcaption></figure><p>There are a few fields highlighted and we don’t have that data yet. So before we use the Telegram node, we have to get those details. Here’s what we need to do:</p><ul><li>Create a Telegram account and get the <a href=\"https://desktop.telegram.org/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Desktop client</a></li><li>Talk to the <a href=\"https://telegram.me/botfather?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Botfather</a>, a bot we use to create our bot.</li><li>Here, you give your bot name and unique username and get back a URL that directs you to the bot and token to access the bot via HTTP, we need to keep this safe. Click on the bots URL (t.me/&lt;bot username&gt;) and press start when taken to its chat window.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-IBTVNGIQDPrwb4us.gif\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1434\" height=\"816\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-IBTVNGIQDPrwb4us.gif 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-IBTVNGIQDPrwb4us.gif 1000w, https://blog.n8n.io/content/images/2021/01/0-IBTVNGIQDPrwb4us.gif 1434w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Setting up your Telegram Bot with Botfather</figcaption></figure><ul><li>Add the bot to a group</li><li>Send <code>/test hi</code> in the group chat you just added the bot to.</li><li>In your browser go to https://api.telegram.org/bot&lt;TOKEN&gt;/getUpdates and replace &lt;TOKEN&gt; with the token you get when creating the bot. You get back some JSON, look for a property called chat and get the corresponding ID.</li></ul><p>Now we have our Telegram API token and chat ID. We need to add credentials in our n8n credentials section. We’ll name it Telegram Token and then paste the token from Botfather in the <em>Access Token</em> field.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-xNjTNbQvHoNmrEje.gif\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1902\" height=\"935\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-xNjTNbQvHoNmrEje.gif 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-xNjTNbQvHoNmrEje.gif 1000w, https://blog.n8n.io/content/images/size/w1600/2021/01/0-xNjTNbQvHoNmrEje.gif 1600w, https://blog.n8n.io/content/images/2021/01/0-xNjTNbQvHoNmrEje.gif 1902w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Setting up the Telegram Node</figcaption></figure><p>We connected the HTTP Request node and Telegram so we can send the response as a message. n8n lets us take data from other nodes and use it in different fields. In our case, we’re getting the response data from the HTTP Request node and adding it to a message that we’ll send using the Telegram node.</p><p>We open the Telegram node, click the gears next to the text field, and click on <em>Add Expression</em>. We have two sections — variable selector and expression. In the expression section we type out the message and because we want the affirmation to be sent at the end of the text we make a few new lines before we head over to the variable selector. We use this section to “interpolate” data from other nodes into the main expression. To select the data, we click on the <strong>Current Node &gt; Input Data &gt; JSON</strong> and then select the JSON property we want which in our case is affirmations. This way, at the end of the expression “Hey Daniel, here is your daily affirmation”, we have a different affirmation every day depending on what the API request returned.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-SmSQHBVeaVL8nCtT.gif\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1902\" height=\"935\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-SmSQHBVeaVL8nCtT.gif 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-SmSQHBVeaVL8nCtT.gif 1000w, https://blog.n8n.io/content/images/size/w1600/2021/01/0-SmSQHBVeaVL8nCtT.gif 1600w, https://blog.n8n.io/content/images/2021/01/0-SmSQHBVeaVL8nCtT.gif 1902w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Formatting message data by editing Telegram expressions</figcaption></figure><p>Add your Chat ID and made sure all other credentials in the Telegram field have been filled. We’ll leave the chat operation as send message because that’s what we’re going for. Close the node and click on the <em>Execute Workflow</em> button.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-rnkzco_ZrWQtxwPM.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1400\" height=\"787\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-rnkzco_ZrWQtxwPM.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-rnkzco_ZrWQtxwPM.png 1000w, https://blog.n8n.io/content/images/2021/01/0-rnkzco_ZrWQtxwPM.png 1400w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Text Affirmations Workflow overview</figcaption></figure><p>Check your Telegram and you should have a new message from your Daily Good Vibes bot.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-4MYY_ctUdJVrVn-6.gif\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1435\" height=\"790\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-4MYY_ctUdJVrVn-6.gif 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-4MYY_ctUdJVrVn-6.gif 1000w, https://blog.n8n.io/content/images/2021/01/0-4MYY_ctUdJVrVn-6.gif 1435w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Receiving messages in Telegram</figcaption></figure><p>Looking back it’s pretty cool what we’ve got done with practically no code. We’re requesting data from an API and delivering it to our Telegram client. With tonnes of other cool nodes — there’s so much to do with n8n.</p><p>Now this is a really basic example of workflow automation, check it out <a href=\"https://n8n.io/workflows/342?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">here</a>. These happen to be some of my favorite that aren’t as basic.</p><ul><li><a href=\"https://n8n.io/workflows/216?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">API which queries data from GraphQL</a></li><li><a href=\"https://n8n.io/workflows/29?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Typeform to Google Sheet and depending on severity to Slack or Email</a></li><li><a href=\"https://n8n.io/workflows/5?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Scheduled Web-Scraping to Google Sheets</a></li><li><a href=\"https://n8n.io/workflows/4?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Notification on GitHub star in Slack</a></li></ul><p>Hopefully with this, you have an understanding of how to use n8n and I hope you’ll go on to create some really useful workflows. Let me know on <a href=\"https://twitter.com/malgamves?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Twitter</a> if you do or add them to be displayed on the <a href=\"https://n8n.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n.io</a> workflows page. Stay safe and take care.</p><p><em>Start automating!</em></p><p><em>The best part is, you can start automating for free with n8n. The easiest way to get started is to sign up for a <a href=\"https://n8n.io/pricing/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a>. Thanks to n8n’s fair-code license, you can also <a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">self-host n8n for free</a>.</em></p>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-51ve8c95iwrt\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=j00fgctnzg2c\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=Creating%20scheduled%20text%20affirmations%20with%20n8n&amp;url=https://blog.n8n.io/creating-scheduled-text-affirmations-with-n8n/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/creating-scheduled-text-affirmations-with-n8n/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/creating-scheduled-text-affirmations-with-n8n/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "It’s always been part of human nature to automate the boring and mundane tasks of everyday life — whether it’s scraping a website every 4 days or sharing updates to a Slack channel. I was doing so myself until I wound up on a really interesting workflow automation tool called [n8n](https://n8n.io/?ref=blog.n8n.io) _. You know — like Kubernetes is k8s, nodemation is n8n. It’s pretty sweet._\n\nOut of the box, it doesn’t look like it has much to do with programming. A quick check on the [integrations](https://n8n.io/integrations/?ref=blog.n8n.io) page and you see a growing number of third party APIs available to make your life oh so easy. Don’t worry if you can’t find inspiration immediately, the templates and community inspired [workflows](https://n8n.io/workflows?ref=blog.n8n.io) page has a cool list of already automated workflows you can either use yourself or get a few ideas from. This product has a pretty cool thing going on.\n\nToday we’ll be adding to that list of workflows. We aren’t going through the easiest time at the moment with everything going on in the world and sometimes we need a little lift up. We’re going to create a workflow that sends positive affirmations to your telegram chat or group every day at a time you want.\n\n## Prerequisites\n\nGetting up and started with n8n is rather straightforward.\n\n  * You need to have [Node.js](https://nodejs.org/en/?ref=blog.n8n.io) installed\n  * You need to have [npm](https://www.npmjs.com/get-npm?ref=blog.n8n.io) installed\n\n\n\n> Note: You might have some trouble if you don’t have node-gyp installed. The official [GitHub page](https://github.com/nodejs/node-gyp?ref=blog.n8n.io#on-windows) has instructions for how to get it running on multiple operating systems.\n\n## Getting Started\n\nOnce you meet all the prerequisites, install the n8n CLI with `npm install n8n -g` and run it with `n8n`.\n\nWhen prompted, press ‘o’ in your terminal to open the local address in your browser and begin automating workflows. You’ll be met with this screen.\n\n![](https://blog.n8n.io/content/images/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-4.gif)Accessing your Node sidebar\n\nn8n calls integrations _nodes_. It has a good number of third party nodes and inbuilt nodes. Sometimes, nodes can be used to trigger or start a workflow. To start it off, we’ll add a [Cron](https://n8n.io/integrations/n8n-nodes-base.cron?ref=blog.n8n.io) trigger that will start our workflow at a specific time. If you click the **+** in the top right corner, you open up a menu of nodes. Click on the trigger tab and search for _Cron_. Click on it to add the time you want it to be triggered.\n\nClick on the _Execute Workflow_ button and you should see a small alert in the bottom right corner telling you that the workflow ran successfully.\n\n![](https://blog.n8n.io/content/images/2022/03/1-E5yQRFc07jdKBNEVzKSRdA-5.gif)Setting up your Cron Node\n\n> Note: Make sure to change settings in the panel on the left so that the Cron job runs at a time in your timezone.\n\nWe have made sure that our workflow gets triggered at a specific time every day. Now we need need to request data from an API to get us these affirmations. Luckily for us, n8n has an [HTTP Request](https://n8n.io/integrations/n8n-nodes-base.httpRequest?ref=blog.n8n.io) node and thanks to the folks at [affirmations.dev](https://github.com/annthurium/affirmations/blob/master/affirmations.js?ref=blog.n8n.io) we have some awesome messages to return.\n\nAgain, we click the **+** in the top right corner and search for HTTP and click on the HTTP Request node. Paste [https://affirmations.dev](https://affirmations.dev/?ref=blog.n8n.io) in the URL section and execute the workflow. Successfully runs again but this time you get some data, which is always good when making a request. Close the modal. Click and hold the circle on the Cron node and drag it to the left side of the HTTP Request node. This way, we’re telling n8n that when the Cron node is triggered, we need to make a request and return some data.\n\n![](https://blog.n8n.io/content/images/2021/01/0-AOnPyKgG7NvDj-yv.gif)Setting up your HTTP Request node\n\nWe’re being returned affirmations in JSON format and we want to be able to send these out via Telegram. We have a [Telegram node](https://n8n.io/integrations/n8n-nodes-base.telegram?ref=blog.n8n.io) at our disposal. As we did before with the Cron and HTTP Request nodes, search for and click on Telegram.\n\n![](https://blog.n8n.io/content/images/2021/01/0-oYAbJ0w0hNmbHGM1.png)Telegram node’s required fields\n\nThere are a few fields highlighted and we don’t have that data yet. So before we use the Telegram node, we have to get those details. Here’s what we need to do:\n\n  * Create a Telegram account and get the [Desktop client](https://desktop.telegram.org/?ref=blog.n8n.io)\n  * Talk to the [Botfather](https://telegram.me/botfather?ref=blog.n8n.io), a bot we use to create our bot.\n  * Here, you give your bot name and unique username and get back a URL that directs you to the bot and token to access the bot via HTTP, we need to keep this safe. Click on the bots URL (t.me/<bot username>) and press start when taken to its chat window.\n\n![](https://blog.n8n.io/content/images/2021/01/0-IBTVNGIQDPrwb4us.gif)Setting up your Telegram Bot with Botfather\n\n  * Add the bot to a group\n  * Send `/test hi` in the group chat you just added the bot to.\n  * In your browser go to https://api.telegram.org/bot<TOKEN>/getUpdates and replace <TOKEN> with the token you get when creating the bot. You get back some JSON, look for a property called chat and get the corresponding ID.\n\n\n\nNow we have our Telegram API token and chat ID. We need to add credentials in our n8n credentials section. We’ll name it Telegram Token and then paste the token from Botfather in the _Access Token_ field.\n\n![](https://blog.n8n.io/content/images/2021/01/0-xNjTNbQvHoNmrEje.gif)Setting up the Telegram Node\n\nWe connected the HTTP Request node and Telegram so we can send the response as a message. n8n lets us take data from other nodes and use it in different fields. In our case, we’re getting the response data from the HTTP Request node and adding it to a message that we’ll send using the Telegram node.\n\nWe open the Telegram node, click the gears next to the text field, and click on _Add Expression_. We have two sections — variable selector and expression. In the expression section we type out the message and because we want the affirmation to be sent at the end of the text we make a few new lines before we head over to the variable selector. We use this section to “interpolate” data from other nodes into the main expression. To select the data, we click on the **Current Node > Input Data > JSON** and then select the JSON property we want which in our case is affirmations. This way, at the end of the expression “Hey Daniel, here is your daily affirmation”, we have a different affirmation every day depending on what the API request returned.\n\n![](https://blog.n8n.io/content/images/2021/01/0-SmSQHBVeaVL8nCtT.gif)Formatting message data by editing Telegram expressions\n\nAdd your Chat ID and made sure all other credentials in the Telegram field have been filled. We’ll leave the chat operation as send message because that’s what we’re going for. Close the node and click on the _Execute Workflow_ button.\n\n![](https://blog.n8n.io/content/images/2021/01/0-rnkzco_ZrWQtxwPM.png)Text Affirmations Workflow overview\n\nCheck your Telegram and you should have a new message from your Daily Good Vibes bot.\n\n![](https://blog.n8n.io/content/images/2021/01/0-4MYY_ctUdJVrVn-6.gif)Receiving messages in Telegram\n\nLooking back it’s pretty cool what we’ve got done with practically no code. We’re requesting data from an API and delivering it to our Telegram client. With tonnes of other cool nodes — there’s so much to do with n8n.\n\nNow this is a really basic example of workflow automation, check it out [here](https://n8n.io/workflows/342?ref=blog.n8n.io). These happen to be some of my favorite that aren’t as basic.\n\n  * [API which queries data from GraphQL](https://n8n.io/workflows/216?ref=blog.n8n.io)\n  * [Typeform to Google Sheet and depending on severity to Slack or Email](https://n8n.io/workflows/29?ref=blog.n8n.io)\n  * [Scheduled Web-Scraping to Google Sheets](https://n8n.io/workflows/5?ref=blog.n8n.io)\n  * [Notification on GitHub star in Slack](https://n8n.io/workflows/4?ref=blog.n8n.io)\n\n\n\nHopefully with this, you have an understanding of how to use n8n and I hope you’ll go on to create some really useful workflows. Let me know on [Twitter](https://twitter.com/malgamves?ref=blog.n8n.io) if you do or add them to be displayed on the [n8n.io](https://n8n.io/?ref=blog.n8n.io) workflows page. Stay safe and take care.\n\n_Start automating!_\n\n_The best part is, you can start automating for free with n8n. The easiest way to get started is to sign up for a[free n8n cloud trial](https://n8n.io/pricing/?ref=blog.n8n.io). Thanks to n8n’s fair-code license, you can also [self-host n8n for free](https://docs.n8n.io/hosting/?ref=blog.n8n.io)._\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=Creating%20scheduled%20text%20affirmations%20with%20n8n&url=https://blog.n8n.io/creating-scheduled-text-affirmations-with-n8n/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/creating-scheduled-text-affirmations-with-n8n/)\n",
  "crawled_at": "2025-05-28T10:53:34.605508"
}