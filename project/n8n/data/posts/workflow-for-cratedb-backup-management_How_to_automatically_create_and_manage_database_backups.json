{
  "url": "https://blog.n8n.io/workflow-for-cratedb-backup-management/",
  "title": "How to automatically create and manage database backups",
  "excerpt": "Learn how to keep your data safe by creating backups of your CrateDB database with low-code workflows.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2022/03/cover_cratedbguest.svg",
  "tags": [
    "Database",
    "ITOps",
    "SecOps",
    "Tutorial"
  ],
  "html": "<p>Database backup is a mechanism to protect and restore a database. Periodical creation of database backups is important to ensure access to essential and critical data when the original source of data is unavailable. Planning how to make and manage database backups requires to take into account several considerations:</p><ul><li>What data should be stored based on its priority?</li><li>How often should the backup be made?</li><li>What kind of storage will be used?</li><li>What is the retention policy for stored data?</li></ul><p>In this article, we will show you how to implement some aspects of automated management of backups in the <a href=\"https://crate.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">CrateDB</a> database with no-code workflows in n8n.</p><!--kg-card-begin: markdown--><h4 id=\"table-of-contents\">Table of contents</h4>\n<p><a href=\"#the-use-case\">The use case</a><br>\n<a href=\"#prerequisites\">Prerequisites</a><br>\n<a href=\"#workflows-for-backup-management\">Workflows for backup management</a><br>\n&nbsp;&nbsp;&nbsp;<a href=\"#workflow-1-generate-snapshots\">Workflow 1 - Generate snapshots</a><br>\n&nbsp;&nbsp;&nbsp;<a href=\"#workflow-2-return-and-drop-old-snapshots\">Workflow 2 - Return and drop old snapshots</a><br>\n&nbsp;&nbsp;&nbsp;<a href=\"#workflow-3-report-workflow-errors\">Workflow 3 - Report workflow errors</a><br>\n<a href=\"#start-automating\">Start automating!</a></p>\n<!--kg-card-end: markdown--><h2 id=\"the-use-case\">The use case</h2><p>In CrateDB, backups are called <em><strong>snapshots</strong></em>. They represent the state of the table, database, or table partitions at the time when the snapshot was created. Snapshots support incremental backups which means that a snapshot of the same table created later only stores data that are not already backed up.</p><p>To create snapshots, you need to first create a repository that is used for storing, managing, and restoring snapshots. To learn more about the types of repositories supported by CrateDB, please check the <a href=\"https://crate.io/docs/crate/reference/en/4.7/admin/snapshots.html?ref=blog.n8n.io#id1\" target=\"_blank\" rel=\"noopener\">official documentation</a>.</p><p>For the purpose of this article, we will use the well-known <a href=\"https://www.kaggle.com/uciml/iris?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Iris Dataset</a>. The dataset consists of 50 samples from each of three species of Iris where each sample is described by four features: sepal width, sepal length, petal width, and petal length. </p><p>Though we won’t cover all aspects of backup management, we will illustrate how to implement some of the important use cases, such as:</p><ul><li>Automatic generation of table backups</li><li>Automatic assessment of memory usages by newly created or updated backups</li><li>Management of stale backups</li></ul><h2 id=\"prerequisites\">Prerequisites</h2><p>To follow along this tutorial, you will need the following tools:</p><ul><li><em><strong>CrateDB</strong></em>: a distributed database management system that makes it simple to store and analyze massive amounts of data in real-time. It is open-source, SQL compatible, based on shared-nothing architecture, and designed for high scalability.</li><li><em><strong><a href=\"https://n8n.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n</a></strong></em>: a fair-code licensed tool that helps you automate tasks, sync data between various sources, and react to events using a visual workflow canvas. You can select from more than 300 nodes to build an automation workflow.</li></ul><p>In the next paragraphs, we will explain how to install both tools and how to import the Iris dataset in CrateDB.</p><h3 id=\"install-cratedb\">Install CrateDB</h3><p>One of the easiest ways to start an instance of CrateDB on your local machine run the following command in your terminal:</p><!--kg-card-begin: markdown--><p><code>bash -c \"$(curl -L https://try.crate.io/)\"</code></p>\n<!--kg-card-end: markdown--><p>The command downloads CrateDB and runs it from the tarball. After the download finishes, the command should open the CrateDB Admin UI. If this does not happen, open <a href=\"http://localhost:4200/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">http://localhost:4200/</a> in your browser.</p><p>The CrateDB Admin UI should show up as illustrated below:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/09/1.png\" class=\"kg-image lightense-target\" alt=\"CrateDB Admin UI\" loading=\"lazy\" width=\"1246\" height=\"624\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/09/1.png 600w, https://blog.n8n.io/content/images/size/w1000/2022/09/1.png 1000w, https://blog.n8n.io/content/images/2022/09/1.png 1246w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>CrateDB Admin UI</em></figcaption></figure><p></p><p>If you want to install CrateDB permanently check our collection of <a href=\"https://crate.io/docs/crate/tutorials/en/latest/install.html?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">installation guides</a>.</p><h3 id=\"import-a-sample-dataset\">Import a sample dataset</h3><p>To import the Iris dataset, you first need to create a new table in CrateDB and download data to your local machine. To create a table, run this query in Admin UI:</p><!--kg-card-begin: markdown--><p><code>CREATE TABLE iris (\"Id\" INT, \"SepalLengthCm\" DOUBLE, \"SepalWidthCm\" DOUBLE, \"PetalLengthCm\" DOUBLE, \"PetalWidthCm\" DOUBLE, \"Species\" TEXT);</code></p>\n<!--kg-card-end: markdown--><p>After creating the table, import the Iris dataset with the COPY TO statement using the following statement:</p><!--kg-card-begin: markdown--><p><code>COPY doc.iris FROM ‘file:///path_to_file/Iris.csv’ RETURN SUMMARY;</code></p>\n<!--kg-card-end: markdown--><p>Now you should find the <em>iris</em> table in the <em>Tables</em> section from the CrateDB Admin UI. By selecting the <em>iris</em> table you should be able to see the table schema as illustrated below:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/09/2.png\" class=\"kg-image lightense-target\" alt=\"Iris table schema\" loading=\"lazy\" width=\"1208\" height=\"796\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/09/2.png 600w, https://blog.n8n.io/content/images/size/w1000/2022/09/2.png 1000w, https://blog.n8n.io/content/images/2022/09/2.png 1208w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Iris table schema</em></figcaption></figure><h3 id=\"set-up-n8n\">Set up n8n</h3><p>To quickly get started with n8n, you can <a href=\"https://docs.n8n.io/getting-started/installation/?ref=blog.n8n.io#desktop-app\" target=\"_blank\" rel=\"noopener\">download and install the n8n Desktop app</a>. You can also sign up for a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a> to get a managed instance of n8n up and running. Alternatively, you can run n8n via <a href=\"https://docs.n8n.io/getting-started/installation/?ref=blog.n8n.io#npm\" target=\"_blank\" rel=\"noopener\">npm</a> or <a href=\"https://docs.n8n.io/getting-started/installation/docker-quickstart.html?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Docker</a>.</p><h3 id=\"create-a-repository-in-cratedb\">Create a repository in CrateDB</h3><p>The first step in backup management is the creation of a repository and snapshots of tables that need to be backed up regularly. For this article, we chose to create a repository on Amazon S3. CrateDB includes built-in support for other types of repository stores, such as local and remote filesystems, Hadoop Distributed File System (HDFS), and Azure.</p><p>Create a repository on Amazon S3 by running the following query from the Admin UI:</p><!--kg-card-begin: markdown--><p><code>CREATE REPOSITORY temporary_backup TYPE s3 with (access_key =@access_key, secret_key = @secret_key, base_path=@base_path, bucket = @bucket_name);</code></p>\n<!--kg-card-end: markdown--><p>Let’s take a closer look at the key parameters in this query:</p><ul><li><a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">access_key and secret_key</a> are security credentials for accessing AWS</li><li><strong><u>Bucket</u></strong> represents a name of s3 bucket where snapshot should be stored</li><li><strong><u>Base_path</u></strong> specifies the path in your s3 bucket. If the bucket does not yet exist, CrateDB will attempt to create a new bucket on Amazon S3.</li></ul><h2 id=\"workflows-for-backup-management\">Workflows for backup management</h2><p>At this point, we assume that the repository has been created on the Amazon S3 instance. Now, we will build three workflows that automate <strong>three main tasks</strong> in backup creation and management:</p><ol><li>Generating snapshots and managing snapshots with high-memory usage</li><li>Deleting “old” snapshots</li><li>Triggering and reporting errors to team members with error workflows</li></ol><p>In our workflows, we will use the following services:</p><ul><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.awsS3/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">AWS S3</a> for searching and querying S3 buckets. To create a connection to S3 you need AWS credentials: access key and secret key.</li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.slack/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Slack</a> for team communication. To send messages on the Slack channel you will need your Slack credentials. You can learn more about configuring Slack credentials in the <a href=\"https://docs.n8n.io/credentials/slack/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">documentation</a>.</li></ul><p>Now let’s see how to build each workflow.</p><h3 id=\"workflow-1generate-snapshots\">Workflow 1 - Generate snapshots</h3><p>The first workflow automates the generation of CrateDB snapshots. It creates a new snapshot every week, checks the size of the Amazon bucket used for snapshot storage, and if the size is higher than the configurable threshold, deletes the snapshot.</p><p>The final workflow consists of six nodes and looks like this:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/09/3.png\" class=\"kg-image lightense-target\" alt=\"Workflow 1 for generating snapshots\" loading=\"lazy\" width=\"1322\" height=\"658\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/09/3.png 600w, https://blog.n8n.io/content/images/size/w1000/2022/09/3.png 1000w, https://blog.n8n.io/content/images/2022/09/3.png 1322w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Workflow 1 for generating snapshots</em></figcaption></figure><ol><li><strong><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.cron/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Cron node</a> </strong>triggers the workflow every week on Monday at 9 AM.</li></ol><ul><li><em>Mode</em>: Every Week</li><li><em>Hour</em>: 9</li><li><em>Minute</em>: 0</li><li><em>Weekday</em>: Monday</li></ul><p><strong>2. <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.crateDb/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">CrateDB node</a> </strong>creates a new snapshot. To execute any query, you need to authorize the CrateDB node to access your local CrateDB instance. To authorize the node, select <em>- Create New -</em> from the <em><strong>Credential for CrateDB</strong></em> dropdown list. Use the following values:</p><ul><li><em>Host</em>: localhost</li><li><em>Database</em>: doc</li><li><em>User</em>: crate</li><li><em>SSL</em>: disable</li><li><em>Port</em>: 5432</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/09/4.png\" class=\"kg-image lightense-target\" alt=\"Credentials in the CrateDB node\" loading=\"lazy\" width=\"1368\" height=\"856\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/09/4.png 600w, https://blog.n8n.io/content/images/size/w1000/2022/09/4.png 1000w, https://blog.n8n.io/content/images/2022/09/4.png 1368w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Credentials in the CrateDB node</figcaption></figure><p>Then, use the following parameters inside the <em>CrateDB node</em>:</p><ul><li><em>Credential for CrateDB</em>: your CrateDB credentials</li><li><em>Operation</em>: Execute Query</li><li><em>Query &gt; Add Expression</em>: CREATE SNAPSHOT temporary_backup.iris_backup TABLE doc.iris;</li></ul><p>The statement creates a new snapshot called <em>iris_backup</em> inside the <em>temporary_backup</em> repository. If you execute the CrateDB node and the execution is successful, the node doesn’t return an output. However, output is necessary to allow the next nodes in the workflow to execute.</p><p>n8n allows you to continue the workflow even when a node returns no output. To configure this, click on the <em>Settings</em> tab of the node and enable the option <em>Always Output Data</em>.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/09/5.png\" class=\"kg-image lightense-target\" alt=\"CrateDB node settings to always output data\" loading=\"lazy\" width=\"1270\" height=\"748\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/09/5.png 600w, https://blog.n8n.io/content/images/size/w1000/2022/09/5.png 1000w, https://blog.n8n.io/content/images/2022/09/5.png 1270w\" sizes=\"(min-width: 720px) 720px\"><figcaption>CrateDB node settings to always output data</figcaption></figure><p><strong>3. <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.awsS3/?ref=blog.n8n.io#example-usage\" target=\"_blank\" rel=\"noopener\">AWS S3</a> </strong>queries the snapshot on the Amazon S3 bucket. In the AWS S3 node, configure the following parameters:</p><ul><li><em>Credential for AWS</em>: your AWS S3 credentials</li><li><em>Resource</em>: Bucket</li><li><em>Operation</em>: Search</li><li><em>Bucket Name</em>: enter the name of the bucket you used when creating the Repository.</li></ul><p><strong>4. <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.function/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Function node</a></strong> calculates the size of the bucket in S3.</p><p>The AWS S3 node returns all the items in a bucket with their sizes. It doesn’t return the size of the bucket. To calculate the size of the bucket, you need to write a function that iterates over a list of items in the bucket and returns the total size.</p><p>In the <em>Function node</em>, write the following JavaScript function:</p><!--kg-card-begin: markdown--><pre><code class=\"language-javascript\">let size = 0;\n\nfor (item of items) {\n    size += parseInt(item.json.Size);\n}\n\nlet newItems = [{json:{size}}];\n\nreturn newItems;\n</code></pre>\n<!--kg-card-end: markdown--><p><strong>5. <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.if/?ref=blog.n8n.io#node-reference\" target=\"_blank\" rel=\"noopener\">IF node</a> </strong>splits the workflow based on a comparison operation.</p><p>In our case, we want to delete a snapshot if its size is too large (and do nothing otherwise). In the IF node, configure the following parameters:</p><ul><li><em>Value 1 &gt; Add Expression:</em> {{$json[\"size\"]}}</li><li><em>Operation</em>: Larger Equal</li><li><em>Value 2</em>: 1,000,000 (or any other threshold value)</li></ul><p><strong>6. <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.crateDb/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">CrateDB node</a></strong> deletes a snapshot if it exceeds the threshold. Use the credentials that you configured earlier, and enter the following query in the <em>Execute Query </em>field:</p><!--kg-card-begin: markdown--><p><code>DROP SNAPSHOT temporary_backup.iris_backup;</code></p>\n<!--kg-card-end: markdown--><p>This statement deletes iris_backup snapshot in temporary_backup repository and all files referenced by this snapshot.</p><p>You now have a workflow that automatically generates a backup, checks the size of the backup, and deletes them if they exceed the threshold value. In the next section, you will create a workflow that periodically deletes old snapshots.</p><h3 id=\"workflow-2return-and-drop-old-snapshots\">Workflow 2 - Return and drop old snapshots</h3><p>After some time certain snapshots become obsolete and in such a case, it is a good idea to delete them. These snapshots are not useful and just occupy space in the bucket. This workflow helps with periodically deleting old snapshots and freeing up the memory in your bucket.</p><p>The final workflow consists of four nodes and looks like this:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/09/6.png\" class=\"kg-image lightense-target\" alt=\"Workflow 2\" loading=\"lazy\" width=\"1292\" height=\"730\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/09/6.png 600w, https://blog.n8n.io/content/images/size/w1000/2022/09/6.png 1000w, https://blog.n8n.io/content/images/2022/09/6.png 1292w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Workflow 2</em></figcaption></figure><p>In this workflow we use the following nodes:</p><ol><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.cron/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"><strong>CRON node</strong></a> triggers the workflow at 5 AM every 15 days.</li></ol><ul><li><em>Mode</em>: Custom</li><li><em>Cron Expression</em>: 0 5 */15 * *</li></ul><p><strong>2. <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.dateTime/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Date &amp; Time</a> node</strong> returns the current date in the YYYY-MM-DD format. You will use this date in the next node to return older snapshots. Configure the node with the following parameters:</p><ul><li><em>Value</em>: {{Date.now()/1000}}</li><li><em>Property Name</em>: current_date</li><li><em>To Format</em>: YYYY-MM-DD</li><li><em>Options &gt; From Format</em>: X</li></ul><p><strong>3. <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.crateDb/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">CrateDB node</a></strong> executes the query that returns snapshots older than the current date.</p><ul><li><em>Credential for CrateDB</em>: your CrateDB credentials</li><li><em>Operation</em>: Execute Query</li><li><em>Query &gt; Add Expression</em>: SELECT * FROM sys.snapshots WHERE DATE_FORMAT('%Y-%m-%d',started) &lt; '{{$json[\"current_date\"]}}';</li></ul><p><strong>4. <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.crateDb/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">CrateDB node</a></strong> deletes each snapshot returned from the previous node.</p><ul><li><em>Credential for CrateDB</em>: your CrateDB credentials</li><li><em>Operation</em>: Execute Query</li><li><em>Query &gt; Add Expression</em>: DROP SNAPSHOT {{$json[\"repository\"]}}.{{$json[\"name\"]}}</li></ul><p>The statement deletes older snapshots from a repository and all files referenced by the snapshot.</p><p>After you activate the workflow, your workflow will automatically execute every 15 days, fetch old backups, and delete them.</p><p>In the next section, you will create a workflow that will help you monitor errors (if any) and alert your team.</p><h3 id=\"workflow-3report-workflow-errors\">Workflow 3 - Report workflow errors</h3><p>The last piece of our automation workflow is the <em>Error workflow.</em> The goal of the error workflow is to notify the team if an error occurs during the workflow execution.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/09/7.png\" class=\"kg-image lightense-target\" alt=\"Workflow 3 for reporting workflow errors\" loading=\"lazy\" width=\"1294\" height=\"722\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/09/7.png 600w, https://blog.n8n.io/content/images/size/w1000/2022/09/7.png 1000w, https://blog.n8n.io/content/images/2022/09/7.png 1294w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Workflow 3 for reporting workflow errors</em></figcaption></figure><p>In the last workflow we use two nodes:</p><ol><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.errorTrigger/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Error Trigger node</a> triggers the workflow when an error occurs in another workflow. You don’t need to configure any parameters in this node.</li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.slack/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Slack node</a> allows the workflow to send a message on Slack.</li></ol><p>Configure the following parameters:</p><ul><li><em>Credential for Slack API</em>: your access token</li><li><em>Authentication</em>: Access Token</li><li><em>Resource</em>: Message</li><li><em>Operation</em>: Post</li><li><em>Channel</em>: channel where the message should be sent to</li><li><em>Text</em>: message to be sent</li></ul><p>Now that you have created an error workflow, the next step is to configure the previous workflows to use this error workflow. Here’s how to do this:</p><ol><li>Open Workflow 1 (the workflow you want to monitor) in the Editor UI.</li><li>In the left-side menu, click on <em>Workflows &gt; Settings</em>.</li><li>From the <em>Error Workflow</em> drop-down list, select Workflow 3 (the error workflow you created in this step).</li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2022/09/8.png\" class=\"kg-image lightense-target\" alt=\"Setting for Create Snapshots\" loading=\"lazy\" width=\"1298\" height=\"806\" srcset=\"https://blog.n8n.io/content/images/size/w600/2022/09/8.png 600w, https://blog.n8n.io/content/images/size/w1000/2022/09/8.png 1000w, https://blog.n8n.io/content/images/2022/09/8.png 1298w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Setting for Create Snapshots</figcaption></figure><p>And that was it! Your automation process for backup management is now complete.</p><h2 id=\"start-automating\">Start automating!</h2><p>In this article, we showed you how to generate and manage CrateDB snapshots with low-code workflows in n8n. These workflows can be extended to cover other interesting use cases such as:</p><ul><li>Wait and alert if the snapshot creation or deletion doesn’t finish within a specified time frame</li><li>Update snapshot every two weeks and delete only if the snapshot size exceeds the memory limit</li><li>Combine memory size and longevity of a snapshot to decide if a snapshot should be deleted or not</li></ul><p>As organizations manage more and more data, such automation helps achieve high availability and reliability of business-critical data.</p><p>If you want to learn more about low-code workflows in n8n or about CrateDB, feel free to join the discussions in the <a href=\"https://community.n8n.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n community forum</a> and <a href=\"https://community.crate.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">CrateDB community forum</a>.</p><p><em>The best part is, you can start automating for free with n8n. The easiest way to get started is to </em><a href=\"https://n8n.io/pricing?cloud=false&amp;ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"><em>download the desktop app,</em></a><em> or sign up for a <a href=\"https://n8n.io/cloud/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a>. Thanks to n8n’s fair-code license, you can also </em><a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"><em>self-host n8n for free</em></a><em>.</em></p>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-3zih64f36e0k\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=799xnie1ywky\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=How%20to%20automatically%20create%20and%20manage%20database%20backups&amp;url=https://blog.n8n.io/workflow-for-cratedb-backup-management/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/workflow-for-cratedb-backup-management/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/workflow-for-cratedb-backup-management/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "Database backup is a mechanism to protect and restore a database. Periodical creation of database backups is important to ensure access to essential and critical data when the original source of data is unavailable. Planning how to make and manage database backups requires to take into account several considerations:\n\n  * What data should be stored based on its priority?\n  * How often should the backup be made?\n  * What kind of storage will be used?\n  * What is the retention policy for stored data?\n\n\n\nIn this article, we will show you how to implement some aspects of automated management of backups in the [CrateDB](https://crate.io/?ref=blog.n8n.io) database with no-code workflows in n8n.\n\n#### Table of contents\n\nThe use case  \nPrerequisites  \nWorkflows for backup management  \n   Workflow 1 - Generate snapshots  \n   Workflow 2 - Return and drop old snapshots  \n   Workflow 3 - Report workflow errors  \nStart automating!\n\n## The use case\n\nIn CrateDB, backups are called _**snapshots**_. They represent the state of the table, database, or table partitions at the time when the snapshot was created. Snapshots support incremental backups which means that a snapshot of the same table created later only stores data that are not already backed up.\n\nTo create snapshots, you need to first create a repository that is used for storing, managing, and restoring snapshots. To learn more about the types of repositories supported by CrateDB, please check the [official documentation](https://crate.io/docs/crate/reference/en/4.7/admin/snapshots.html?ref=blog.n8n.io#id1).\n\nFor the purpose of this article, we will use the well-known [Iris Dataset](https://www.kaggle.com/uciml/iris?ref=blog.n8n.io). The dataset consists of 50 samples from each of three species of Iris where each sample is described by four features: sepal width, sepal length, petal width, and petal length. \n\nThough we won’t cover all aspects of backup management, we will illustrate how to implement some of the important use cases, such as:\n\n  * Automatic generation of table backups\n  * Automatic assessment of memory usages by newly created or updated backups\n  * Management of stale backups\n\n\n\n## Prerequisites\n\nTo follow along this tutorial, you will need the following tools:\n\n  * _**CrateDB**_ : a distributed database management system that makes it simple to store and analyze massive amounts of data in real-time. It is open-source, SQL compatible, based on shared-nothing architecture, and designed for high scalability.\n  * _**[n8n](https://n8n.io/?ref=blog.n8n.io)**_ : a fair-code licensed tool that helps you automate tasks, sync data between various sources, and react to events using a visual workflow canvas. You can select from more than 300 nodes to build an automation workflow.\n\n\n\nIn the next paragraphs, we will explain how to install both tools and how to import the Iris dataset in CrateDB.\n\n### Install CrateDB\n\nOne of the easiest ways to start an instance of CrateDB on your local machine run the following command in your terminal:\n\n`bash -c \"$(curl -L https://try.crate.io/)\"`\n\nThe command downloads CrateDB and runs it from the tarball. After the download finishes, the command should open the CrateDB Admin UI. If this does not happen, open [http://localhost:4200/](http://localhost:4200/?ref=blog.n8n.io) in your browser.\n\nThe CrateDB Admin UI should show up as illustrated below:\n\n![CrateDB Admin UI](https://blog.n8n.io/content/images/2022/09/1.png)_CrateDB Admin UI_\n\nIf you want to install CrateDB permanently check our collection of [installation guides](https://crate.io/docs/crate/tutorials/en/latest/install.html?ref=blog.n8n.io).\n\n### Import a sample dataset\n\nTo import the Iris dataset, you first need to create a new table in CrateDB and download data to your local machine. To create a table, run this query in Admin UI:\n\n`CREATE TABLE iris (\"Id\" INT, \"SepalLengthCm\" DOUBLE, \"SepalWidthCm\" DOUBLE, \"PetalLengthCm\" DOUBLE, \"PetalWidthCm\" DOUBLE, \"Species\" TEXT);`\n\nAfter creating the table, import the Iris dataset with the COPY TO statement using the following statement:\n\n`COPY doc.iris FROM ‘file:///path_to_file/Iris.csv’ RETURN SUMMARY;`\n\nNow you should find the _iris_ table in the _Tables_ section from the CrateDB Admin UI. By selecting the _iris_ table you should be able to see the table schema as illustrated below:\n\n![Iris table schema](https://blog.n8n.io/content/images/2022/09/2.png)_Iris table schema_\n\n### Set up n8n\n\nTo quickly get started with n8n, you can [download and install the n8n Desktop app](https://docs.n8n.io/getting-started/installation/?ref=blog.n8n.io#desktop-app). You can also sign up for a [free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io) to get a managed instance of n8n up and running. Alternatively, you can run n8n via [npm](https://docs.n8n.io/getting-started/installation/?ref=blog.n8n.io#npm) or [Docker](https://docs.n8n.io/getting-started/installation/docker-quickstart.html?ref=blog.n8n.io).\n\n### Create a repository in CrateDB\n\nThe first step in backup management is the creation of a repository and snapshots of tables that need to be backed up regularly. For this article, we chose to create a repository on Amazon S3. CrateDB includes built-in support for other types of repository stores, such as local and remote filesystems, Hadoop Distributed File System (HDFS), and Azure.\n\nCreate a repository on Amazon S3 by running the following query from the Admin UI:\n\n`CREATE REPOSITORY temporary_backup TYPE s3 with (access_key =@access_key, secret_key = @secret_key, base_path=@base_path, bucket = @bucket_name);`\n\nLet’s take a closer look at the key parameters in this query:\n\n  * [access_key and secret_key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html?ref=blog.n8n.io) are security credentials for accessing AWS\n  * ** _Bucket_** represents a name of s3 bucket where snapshot should be stored\n  * ** _Base_path_** specifies the path in your s3 bucket. If the bucket does not yet exist, CrateDB will attempt to create a new bucket on Amazon S3.\n\n\n\n## Workflows for backup management\n\nAt this point, we assume that the repository has been created on the Amazon S3 instance. Now, we will build three workflows that automate **three main tasks** in backup creation and management:\n\n  1. Generating snapshots and managing snapshots with high-memory usage\n  2. Deleting “old” snapshots\n  3. Triggering and reporting errors to team members with error workflows\n\n\n\nIn our workflows, we will use the following services:\n\n  * [AWS S3](https://docs.n8n.io/nodes/n8n-nodes-base.awsS3/?ref=blog.n8n.io) for searching and querying S3 buckets. To create a connection to S3 you need AWS credentials: access key and secret key.\n  * [Slack](https://docs.n8n.io/nodes/n8n-nodes-base.slack/?ref=blog.n8n.io) for team communication. To send messages on the Slack channel you will need your Slack credentials. You can learn more about configuring Slack credentials in the [documentation](https://docs.n8n.io/credentials/slack/?ref=blog.n8n.io).\n\n\n\nNow let’s see how to build each workflow.\n\n### Workflow 1 - Generate snapshots\n\nThe first workflow automates the generation of CrateDB snapshots. It creates a new snapshot every week, checks the size of the Amazon bucket used for snapshot storage, and if the size is higher than the configurable threshold, deletes the snapshot.\n\nThe final workflow consists of six nodes and looks like this:\n\n![Workflow 1 for generating snapshots](https://blog.n8n.io/content/images/2022/09/3.png)_Workflow 1 for generating snapshots_\n\n  1. **[Cron node](https://docs.n8n.io/nodes/n8n-nodes-base.cron/?ref=blog.n8n.io) **triggers the workflow every week on Monday at 9 AM.\n\n\n  * _Mode_ : Every Week\n  *  _Hour_ : 9\n  *  _Minute_ : 0\n  *  _Weekday_ : Monday\n\n\n\n**2.[CrateDB node](https://docs.n8n.io/nodes/n8n-nodes-base.crateDb/?ref=blog.n8n.io) **creates a new snapshot. To execute any query, you need to authorize the CrateDB node to access your local CrateDB instance. To authorize the node, select _\\- Create New -_ from the _**Credential for CrateDB**_ dropdown list. Use the following values:\n\n  * _Host_ : localhost\n  *  _Database_ : doc\n  *  _User_ : crate\n  *  _SSL_ : disable\n  *  _Port_ : 5432\n\n![Credentials in the CrateDB node](https://blog.n8n.io/content/images/2022/09/4.png)Credentials in the CrateDB node\n\nThen, use the following parameters inside the _CrateDB node_ :\n\n  * _Credential for CrateDB_ : your CrateDB credentials\n  *  _Operation_ : Execute Query\n  *  _Query > Add Expression_: CREATE SNAPSHOT temporary_backup.iris_backup TABLE doc.iris;\n\n\n\nThe statement creates a new snapshot called _iris_backup_ inside the _temporary_backup_ repository. If you execute the CrateDB node and the execution is successful, the node doesn’t return an output. However, output is necessary to allow the next nodes in the workflow to execute.\n\nn8n allows you to continue the workflow even when a node returns no output. To configure this, click on the _Settings_ tab of the node and enable the option _Always Output Data_.\n\n![CrateDB node settings to always output data](https://blog.n8n.io/content/images/2022/09/5.png)CrateDB node settings to always output data\n\n**3.[AWS S3](https://docs.n8n.io/nodes/n8n-nodes-base.awsS3/?ref=blog.n8n.io#example-usage) **queries the snapshot on the Amazon S3 bucket. In the AWS S3 node, configure the following parameters:\n\n  * _Credential for AWS_ : your AWS S3 credentials\n  *  _Resource_ : Bucket\n  *  _Operation_ : Search\n  *  _Bucket Name_ : enter the name of the bucket you used when creating the Repository.\n\n\n\n**4.[Function node](https://docs.n8n.io/nodes/n8n-nodes-base.function/?ref=blog.n8n.io)** calculates the size of the bucket in S3.\n\nThe AWS S3 node returns all the items in a bucket with their sizes. It doesn’t return the size of the bucket. To calculate the size of the bucket, you need to write a function that iterates over a list of items in the bucket and returns the total size.\n\nIn the _Function node_ , write the following JavaScript function:\n    \n    \n    let size = 0;\n    \n    for (item of items) {\n        size += parseInt(item.json.Size);\n    }\n    \n    let newItems = [{json:{size}}];\n    \n    return newItems;\n    \n\n**5.[IF node](https://docs.n8n.io/nodes/n8n-nodes-base.if/?ref=blog.n8n.io#node-reference) **splits the workflow based on a comparison operation.\n\nIn our case, we want to delete a snapshot if its size is too large (and do nothing otherwise). In the IF node, configure the following parameters:\n\n  * _Value 1 > Add Expression:_ {{$json[\"size\"]}}\n  * _Operation_ : Larger Equal\n  *  _Value 2_ : 1,000,000 (or any other threshold value)\n\n\n\n**6.[CrateDB node](https://docs.n8n.io/nodes/n8n-nodes-base.crateDb/?ref=blog.n8n.io)** deletes a snapshot if it exceeds the threshold. Use the credentials that you configured earlier, and enter the following query in the _Execute Query_ field:\n\n`DROP SNAPSHOT temporary_backup.iris_backup;`\n\nThis statement deletes iris_backup snapshot in temporary_backup repository and all files referenced by this snapshot.\n\nYou now have a workflow that automatically generates a backup, checks the size of the backup, and deletes them if they exceed the threshold value. In the next section, you will create a workflow that periodically deletes old snapshots.\n\n### Workflow 2 - Return and drop old snapshots\n\nAfter some time certain snapshots become obsolete and in such a case, it is a good idea to delete them. These snapshots are not useful and just occupy space in the bucket. This workflow helps with periodically deleting old snapshots and freeing up the memory in your bucket.\n\nThe final workflow consists of four nodes and looks like this:\n\n![Workflow 2](https://blog.n8n.io/content/images/2022/09/6.png)_Workflow 2_\n\nIn this workflow we use the following nodes:\n\n  1. [**CRON node**](https://docs.n8n.io/nodes/n8n-nodes-base.cron/?ref=blog.n8n.io) triggers the workflow at 5 AM every 15 days.\n\n\n  * _Mode_ : Custom\n  *  _Cron Expression_ : 0 5 */15 * *\n\n\n\n **2.[Date & Time](https://docs.n8n.io/nodes/n8n-nodes-base.dateTime/?ref=blog.n8n.io) node** returns the current date in the YYYY-MM-DD format. You will use this date in the next node to return older snapshots. Configure the node with the following parameters:\n\n  * _Value_ : {{Date.now()/1000}}\n  * _Property Name_ : current_date\n  *  _To Format_ : YYYY-MM-DD\n  *  _Options > From Format_: X\n\n\n\n**3.[CrateDB node](https://docs.n8n.io/nodes/n8n-nodes-base.crateDb/?ref=blog.n8n.io)** executes the query that returns snapshots older than the current date.\n\n  * _Credential for CrateDB_ : your CrateDB credentials\n  *  _Operation_ : Execute Query\n  *  _Query > Add Expression_: SELECT * FROM sys.snapshots WHERE DATE_FORMAT('%Y-%m-%d',started) < '{{$json[\"current_date\"]}}';\n\n\n\n**4.[CrateDB node](https://docs.n8n.io/nodes/n8n-nodes-base.crateDb/?ref=blog.n8n.io)** deletes each snapshot returned from the previous node.\n\n  * _Credential for CrateDB_ : your CrateDB credentials\n  *  _Operation_ : Execute Query\n  *  _Query > Add Expression_: DROP SNAPSHOT {{$json[\"repository\"]}}.{{$json[\"name\"]}}\n\n\n\nThe statement deletes older snapshots from a repository and all files referenced by the snapshot.\n\nAfter you activate the workflow, your workflow will automatically execute every 15 days, fetch old backups, and delete them.\n\nIn the next section, you will create a workflow that will help you monitor errors (if any) and alert your team.\n\n### Workflow 3 - Report workflow errors\n\nThe last piece of our automation workflow is the _Error workflow._ The goal of the error workflow is to notify the team if an error occurs during the workflow execution.\n\n![Workflow 3 for reporting workflow errors](https://blog.n8n.io/content/images/2022/09/7.png)_Workflow 3 for reporting workflow errors_\n\nIn the last workflow we use two nodes:\n\n  1. [Error Trigger node](https://docs.n8n.io/nodes/n8n-nodes-base.errorTrigger/?ref=blog.n8n.io) triggers the workflow when an error occurs in another workflow. You don’t need to configure any parameters in this node.\n  2. [Slack node](https://docs.n8n.io/nodes/n8n-nodes-base.slack/?ref=blog.n8n.io) allows the workflow to send a message on Slack.\n\n\n\nConfigure the following parameters:\n\n  * _Credential for Slack API_ : your access token\n  *  _Authentication_ : Access Token\n  *  _Resource_ : Message\n  *  _Operation_ : Post\n  *  _Channel_ : channel where the message should be sent to\n  *  _Text_ : message to be sent\n\n\n\nNow that you have created an error workflow, the next step is to configure the previous workflows to use this error workflow. Here’s how to do this:\n\n  1. Open Workflow 1 (the workflow you want to monitor) in the Editor UI.\n  2. In the left-side menu, click on _Workflows > Settings_.\n  3. From the _Error Workflow_ drop-down list, select Workflow 3 (the error workflow you created in this step).\n\n![Setting for Create Snapshots](https://blog.n8n.io/content/images/2022/09/8.png)Setting for Create Snapshots\n\nAnd that was it! Your automation process for backup management is now complete.\n\n## Start automating!\n\nIn this article, we showed you how to generate and manage CrateDB snapshots with low-code workflows in n8n. These workflows can be extended to cover other interesting use cases such as:\n\n  * Wait and alert if the snapshot creation or deletion doesn’t finish within a specified time frame\n  * Update snapshot every two weeks and delete only if the snapshot size exceeds the memory limit\n  * Combine memory size and longevity of a snapshot to decide if a snapshot should be deleted or not\n\n\n\nAs organizations manage more and more data, such automation helps achieve high availability and reliability of business-critical data.\n\nIf you want to learn more about low-code workflows in n8n or about CrateDB, feel free to join the discussions in the [n8n community forum](https://community.n8n.io/?ref=blog.n8n.io) and [CrateDB community forum](https://community.crate.io/?ref=blog.n8n.io).\n\n_The best part is, you can start automating for free with n8n. The easiest way to get started is to_[ _download the desktop app,_](https://n8n.io/pricing?cloud=false&ref=blog.n8n.io)_or sign up for a[free n8n cloud trial](https://n8n.io/cloud/?ref=blog.n8n.io). Thanks to n8n’s fair-code license, you can also _[_self-host n8n for free_](https://docs.n8n.io/hosting/?ref=blog.n8n.io) _._\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=How%20to%20automatically%20create%20and%20manage%20database%20backups&url=https://blog.n8n.io/workflow-for-cratedb-backup-management/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/workflow-for-cratedb-backup-management/)\n",
  "crawled_at": "2025-05-28T10:49:54.604988"
}