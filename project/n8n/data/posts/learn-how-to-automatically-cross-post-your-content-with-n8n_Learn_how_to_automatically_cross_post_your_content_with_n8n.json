{
  "url": "https://blog.n8n.io/learn-how-to-automatically-cross-post-your-content-with-n8n/",
  "title": "Learn how to automatically cross-post your content with n8n",
  "excerpt": "In this tutorial, we're going to use n8n to automatically cross-post blogposts from Strapi to Dev.to and Medium.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2021/02/cover-image.jpeg",
  "tags": [
    "Tutorial"
  ],
  "html": "<p>Blogging isn’t just about writing quality content, but also ensuring that it reaches as many members of your audience as possible. This means that bloggers have to post an article multiple times on different platforms. This often entails ensuring that the formatting and layouts are consistent across platforms, which tends to be a time consuming (and exhausting) ordeal.</p><p>Automating these processes can save large amounts of time and effort, allowing bloggers to reclaim time to focus on what they do best — writing. This tutorial will teach you how to post blog posts to multiple blogging platforms automatically.</p><p>In this tutorial, we’re going to create and store all our posts in one central platform — <a href=\"https://strapi.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Strapi</a>. It is a headless <a href=\"https://en.wikipedia.org/wiki/Content_management_system?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">CMS</a> which will store all our content. We will use <a href=\"https://n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">n8n</a> to create a workflow that will take content from Strapi using <a href=\"https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#webhook\" target=\"_blank\" rel=\"noopener\">webhooks</a> and create posts on <a href=\"https://medium.com/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Medium</a> and <a href=\"https://dev.to/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Dev.to</a> using their REST APIs. Strapi supports post creation through markdown formatting, which will help maintain the layouts of articles across platforms.</p><h2 id=\"1-getting-ready\">1. Getting ready</h2><p>This tutorial guide assumes that you already have Strapi and n8n set up and running. In case you don’t already have these services running, you can run them using <code>docker-compose</code>.</p><p>If you get stuck, or prefer to not use Docker, you can check out alternative install methods here (<a href=\"https://strapi.io/documentation/developer-docs/latest/getting-started/quick-start.html?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">strapi setup guide</a>).</p><h3 id=\"setting-up-strapi\">Setting up Strapi</h3><p>Create a <code>docker-compose.yaml</code> file.</p><pre><code class=\"language-yml\">version: '3'\nservices:\n\tstrapi:\n    \timage: strapi/strapi\n        volumes:\n        \t- ./:/srv/app\n        ports:\n        \t- '1337:1337'</code></pre><p>Then, start the service by running:</p><p><code>docker-compose up -d</code></p><h3 id=\"setting-up-n8n\">Setting up n8n</h3><p>If you prefer not to use Docker, you can check out the alternative install methods in the <a href=\"https://docs.n8n.io/?ref=blog.n8n.io#/setup\" rel=\"noopener\" target=\"_blank\">docs</a>. Alternatively, you can use a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a> to get started quickly.</p><pre><code>docker run -it — rm \\ \n— name n8n \\ \n-p 5678:5678 \\ \n-v ~/.n8n:/root/.n8n \\ \nn8nio/n8n \\ \nn8n start — tunnel</code></pre><blockquote><strong>Note:</strong> This is only meant for local development and testing. For information on how to deploy n8n in a production environment, please refer to the n8n <a href=\"https://docs.n8n.io/?ref=blog.n8n.io#/setup\" rel=\"noopener\" target=\"_blank\">setup guide</a>.</blockquote><p>Make sure that all the services have been started using <code>docker ps</code>. You should be able to see two running containers, one for Strapi and one for n8n.</p><p>You can also follow along this guide by copying the <a href=\"https://n8n.io/workflows/418?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">workflow</a> from n8n.io and making appropriate changes at each step. This workflow was built using n8n@0.107.0 version.</p><h2 id=\"2-setting-up-a-webhook-node\">2. Setting up a Webhook node</h2><p>In this workflow, we will receive all our content from Strapi to distribute it across various platforms. We will accomplish this using the <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.webhook?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Webhook</a></em> node.</p><p>Add a new node by clicking the '<strong>+</strong>' button on the top right of the Editor UI. Under the <em><strong>Triggers</strong> </em>section, select the <em>Webhook </em>node. Select 'Header Auth' from the <em><strong>Authentication</strong></em> dropdown list and create a new header auth. Then, select the 'POST'<em> </em>option for <em><strong>HTTP Method</strong></em>. </p><p>Now, save the workflow. This activates the webhook. Finally, copy the test webhook URL (we will need this later). Here’s a video of me following the steps mentioned above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/HyNufAeR-MM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding the Webhook node to the workflow</figcaption></figure><h3 id=\"3-creating-a-collection-in-strapi-and-setting-up-the-webhook\">3. Creating a collection in Strapi and setting up the webhook</h3><p>Strapi stores all content in the form of <a href=\"https://strapi.io/documentation/developer-docs/latest/developer-resources/content-api/integrations/graphql.html?ref=blog.n8n.io#install-the-graphql-plugin\" target=\"_blank\" rel=\"noopener\">collections</a>. These are user defined stores of data. We will first create a collection and then set up the webhook that we created in the previous step.</p><p>Click on the <strong><em>Content-Types Builder</em></strong> in the left sidebar to create a collection. We will name this collection as <code>Post</code>. Add the following fields for the collection:</p><ol><li>Title — Short text</li><li>PostDatetime — Datetime</li><li>PostContent — Rich text</li><li>FeatureImage — Single media</li><li>Tag — Enumeration</li></ol><p>Here’s a video of me following the steps mentioned above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/XFN_LRH7z10?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a collection in Strapi</figcaption></figure><p>Click on <strong><em>Settings</em></strong> in in the left sidebar and select 'Webhooks' under the <strong><em>Global Settings</em></strong> section. Click on the <strong><em>+ Add new webhook</em></strong> button. Enter a name for your webhook in the <strong><em>Name</em></strong> field and paste the n8n webhook URL you copied from the previous step in the <strong><em>URL</em></strong> field. Under the <strong><em>Headers</em></strong> section, select <strong><em>Authorization</em></strong> from the <strong><em>Key</em></strong> dropdown list. Enter the value that you used in the 'Header Auth' credentials in the <em>Webhook</em> node. Now, save your changes by clicking on the <em><strong>Save</strong></em> button.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/urAKiPGlmUs?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding a webhook in Strapi</figcaption></figure><h3 id=\"4-creating-post-requests-for-the-dev-to-api\">4. Creating POST requests for the Dev.to API</h3><p>Now that we have all our content being sent from Strapi to n8n, we need to send that information from n8n to several blogging platforms. Most blogging platforms have a RESTful <a href=\"https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#api\" target=\"_blank\" rel=\"noopener\">API</a> using which we can make a post.</p><p>Let’s start with Dev.to as an example. </p><p>First, create a sample post and retrieve the data model from Strapi. Click on the <em><strong>Execute Node</strong> </em>button and then create a new sample post in Strapi. It should look something like the image below.</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/02/Webhook-screenshot.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"871\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/02/Webhook-screenshot.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/02/Webhook-screenshot.png 1000w, https://blog.n8n.io/content/images/size/w1600/2021/02/Webhook-screenshot.png 1600w, https://blog.n8n.io/content/images/size/w2400/2021/02/Webhook-screenshot.png 2400w\" sizes=\"(min-width: 1200px) 1200px\"><figcaption>Sample data retrieved from&nbsp;Strapi</figcaption></figure><blockquote><strong>Note:</strong> You will need to use the Test URL to be able to view the data that n8n processes as shown above. The Production URL does not display retrieved data in the workflow editor. We recommend that you use the Test URL to configure the workflow.</blockquote><p>Next, we need to send the data to Dev.to via their <a href=\"https://docs.dev.to/api/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">REST API</a>. One of the ways to do this is by using a POST request. POST requests are a type of web requests that can send data to a server by including it as a ‘payload’. In n8n, POST requests can be created and used via the <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.httpRequest?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">HTTP Request</a></em> node.</p><p>From your Dev.to dashboard, go to <a href=\"https://dev.to/settings?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"><em>Settings</em></a> and select <strong><em>Account</em></strong>. Click on the <strong><em>Generate API Key</em></strong> button under the <strong><em>DEV Community API Keys</em></strong> section and generate an API key.</p><p>Now, using the <em>HTTP Request</em> node, we can send the data to Dev.to. Set the <em>Authentication </em>to ‘Header Auth’ and use the API key from your Dev.to account to authenticate. Set <em><strong>JSON/RAW Parameters</strong> </em>to <code>true</code> (turn the switch on). Set the request method as POST and paste the API endpoint in the URL (<code>https://dev.to/api/articles</code> in our case). In the <strong><em>Headers</em></strong> field enter <code>{\"Content-Type\": \"application/json\"}</code>.</p><p>The final step to create the node is to add the request body, or the payload, in <a href=\"https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#json\" target=\"_blank\" rel=\"noopener\">JSON</a> format. This will contain all the data that is needed to make a post. To dynamically change the data based on previous nodes, we will use the powerful “Add expression” tool. You can access this by clicking the ⚙️ (gears) icon and choosing <em><strong>Add Expression</strong>.</em></p><p>Now, select the following variable:</p><p><code>Current Node &gt; Input Data &gt; JSON &gt; body &gt; entry &gt; Title</code></p><p>Similarly select the body content and tag from the <strong><em>Variable Selector</em></strong>. Having previously read through Dev.to’s <a href=\"https://docs.dev.to/api/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">API documentation</a>, I chose all the information that I wanted to send to Dev.to and encoded it as JSON.</p><pre><code class=\"language-json\">{ \n\t\"article\": { \n    \t\t\"title\": \"Post Title\", \n        \t\"published\": true, \n        \t\"body_markdown\": \"I love n8n!\", \n        \t\"tags\": [ \"TutorialSample\", \"Guide\", \"Instructional\", ], \n        \t\"series\": \"n8n Guides\", \n        \t\"canonical_url\": \"https://your-strapi.url/postname\"\n\t}\n}</code></pre><p>For consistency, I chose to only include the fields that both Medium and Dev.to would support.</p><p>If you want to include or exclude information, please refer to Dev.to <a href=\"https://docs.dev.to/api/?ref=blog.n8n.io#operation/createArticle\" rel=\"noopener\" target=\"_blank\">API reference</a>.</p><p>Next, test this node by clicking <em><strong>Execute Node</strong></em> to run this node. Then, head over to Dev.to and check if a new post has been created. If you see a new post; it means you’ve set this up correctly!</p><p>Here’s a video of me following the steps mentioned above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/Y3Nhst0ex5Q?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding an HTTP Request for Dev.to</figcaption></figure><h3 id=\"5-creating-post-requests-for-the-medium-api\">5. Creating POST requests for the Medium API</h3><p>We will use the <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.medium/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"><em>Medium</em> node</a> in n8n to send the data to Medium. Follow the <a href=\"https://docs.n8n.io/credentials/medium?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">documentation</a> to get credentials for the node.</p><p>Click on the '+' button and select the <em>Medium</em> node under the <strong><em>Regular</em></strong> tab. Create new credentials to connect to your Medium account. Click on the gears icon next to the <strong><em>Title</em></strong> field and select 'Add Expression'. Select the following from the <strong><em>Variable Selector</em></strong> section:</p><p><code>Current Node &gt; Input Data &gt; JSON &gt; body &gt; entry &gt; Title</code></p><p>Next, select 'Markdown' from the <strong><em>Content Format</em></strong> dropdown list. Click on the gears icon next to the <strong><em>Content</em></strong> field and select 'Add Expression'. Select the following from the <strong><em>Variable Selector</em></strong> section:</p><p><code>Current Node &gt; Input Data &gt; JSON &gt; body &gt; entry &gt; PostContent</code></p><p>To add Tags and a canonical URL, click on Add Field and select 'Tags' and 'Canonical URL' respectively. You can select the data from the <strong><em>Variable Selector</em></strong> as you did previously.</p><p>Here’s a video of how I set up my <em>Medium</em> node.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/oK17qn8n9b0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding the Medium node</figcaption></figure><h3 id=\"6-executing-the-workflow\">6. Executing the workflow</h3><p>First of all, change the webhook URL in Strapi from the Test URL to the Production URL and activate the workflow. The Test URL is meant only for configuration and setting up the webhook. It is only active for 120 seconds. The Production URL on the other hand, listens for requests all the time.</p><p>Create a post in Strapi and save it. Head over to Dev.to and Medium to check if the blog posts have been created (it might take a few seconds).</p><p>Here’s a video of me executing my workflow.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/NBu0oQGirxo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Testing the workflow in production</figcaption></figure><p>The post has shown up with the correct data on both platforms. We’ve set up n8n to cross-post content to both Medium and Dev.to.</p><p>And, that’s it! Congratulations, you have just automated cross-posting across blogging platforms 🎉</p><h2 id=\"adding-more-platforms\">Adding more platforms</h2><p>Since n8n supports webhooks, HTTP requests, and GraphQL; you can add any blogging platform that supports either RESTful API or GraphQL using a similar set of steps (consult the documentation) for the appropriate settings.</p><p>You can also automate cross-platform updating and deleting of posts; making Strapi a powerful tool to manage and deliver your content across several online platforms.</p><p>You can also experiment in a similar manner with social networking workflows such as twitter, announcing a new blog post via a tweet. Such companion social media pages for blogs ensure that your content reaches even wider audiences.</p><h2 id=\"conclusion\">Conclusion</h2><p>In this tutorial, we learnt to automate cross-posting of blog posts using a single source of truth to ensure consistency and reduce effort. We also discussed the possibility of using companion workflows to handle the update and removal of content and increasing visibility and reach by complementing using social media nodes.</p><p>Writing is a creative industry and everyone has their own style and way of doing things — a workflow that they prefer. n8n can help automate the repetitive tasks of your workflow. Which parts of your daily life are repetitive and tedious? What will you automate?</p><p>In case you’ve run into an issue while following the tutorial, feel free to reach out to me on <a href=\"https://www.linkedin.com/in/amudhan-manivasagam-4aba86167/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">LinkedIn</a> or ask for help on our<a href=\"https://community.n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\"> forum</a> 💙</p><p><em>Start automating!</em></p><p><em>The best part is, you can start automating for free with n8n. The easiest way to get started is to <a href=\"https://n8n.io/pricing?cloud=false&amp;ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">download the desktop app,</a> or sign up for a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a>. Thanks to n8n’s fair-code license, you can also <a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">self-host n8n for free</a>.</em></p>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-db3g0ys5b9iy\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=es1liu4zyagu\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=Learn%20how%20to%20automatically%20cross-post%20your%20content%20with%20n8n&amp;url=https://blog.n8n.io/learn-how-to-automatically-cross-post-your-content-with-n8n/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/learn-how-to-automatically-cross-post-your-content-with-n8n/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/learn-how-to-automatically-cross-post-your-content-with-n8n/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "Blogging isn’t just about writing quality content, but also ensuring that it reaches as many members of your audience as possible. This means that bloggers have to post an article multiple times on different platforms. This often entails ensuring that the formatting and layouts are consistent across platforms, which tends to be a time consuming (and exhausting) ordeal.\n\nAutomating these processes can save large amounts of time and effort, allowing bloggers to reclaim time to focus on what they do best — writing. This tutorial will teach you how to post blog posts to multiple blogging platforms automatically.\n\nIn this tutorial, we’re going to create and store all our posts in one central platform — [Strapi](https://strapi.io/?ref=blog.n8n.io). It is a headless [CMS](https://en.wikipedia.org/wiki/Content_management_system?ref=blog.n8n.io) which will store all our content. We will use [n8n](https://n8n.io/?ref=blog.n8n.io) to create a workflow that will take content from Strapi using [webhooks](https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#webhook) and create posts on [Medium](https://medium.com/?ref=blog.n8n.io) and [Dev.to](https://dev.to/?ref=blog.n8n.io) using their REST APIs. Strapi supports post creation through markdown formatting, which will help maintain the layouts of articles across platforms.\n\n## 1\\. Getting ready\n\nThis tutorial guide assumes that you already have Strapi and n8n set up and running. In case you don’t already have these services running, you can run them using `docker-compose`.\n\nIf you get stuck, or prefer to not use Docker, you can check out alternative install methods here ([strapi setup guide](https://strapi.io/documentation/developer-docs/latest/getting-started/quick-start.html?ref=blog.n8n.io)).\n\n### Setting up Strapi\n\nCreate a `docker-compose.yaml` file.\n    \n    \n    version: '3'\n    services:\n    \tstrapi:\n        \timage: strapi/strapi\n            volumes:\n            \t- ./:/srv/app\n            ports:\n            \t- '1337:1337'\n\nThen, start the service by running:\n\n`docker-compose up -d`\n\n### Setting up n8n\n\nIf you prefer not to use Docker, you can check out the alternative install methods in the [docs](https://docs.n8n.io/?ref=blog.n8n.io#/setup). Alternatively, you can use a [free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io) to get started quickly.\n    \n    \n    docker run -it — rm \\ \n    — name n8n \\ \n    -p 5678:5678 \\ \n    -v ~/.n8n:/root/.n8n \\ \n    n8nio/n8n \\ \n    n8n start — tunnel\n\n> **Note:** This is only meant for local development and testing. For information on how to deploy n8n in a production environment, please refer to the n8n [setup guide](https://docs.n8n.io/?ref=blog.n8n.io#/setup).\n\nMake sure that all the services have been started using `docker ps`. You should be able to see two running containers, one for Strapi and one for n8n.\n\nYou can also follow along this guide by copying the [workflow](https://n8n.io/workflows/418?ref=blog.n8n.io) from n8n.io and making appropriate changes at each step. This workflow was built using n8n@0.107.0 version.\n\n## 2\\. Setting up a Webhook node\n\nIn this workflow, we will receive all our content from Strapi to distribute it across various platforms. We will accomplish this using the _[Webhook](https://docs.n8n.io/nodes/n8n-nodes-base.webhook?ref=blog.n8n.io)_ node.\n\nAdd a new node by clicking the '**+** ' button on the top right of the Editor UI. Under the _**Triggers** _section, select the _Webhook_ node. Select 'Header Auth' from the _**Authentication**_ dropdown list and create a new header auth. Then, select the 'POST'__ option for _**HTTP Method**_. \n\nNow, save the workflow. This activates the webhook. Finally, copy the test webhook URL (we will need this later). Here’s a video of me following the steps mentioned above.\n\nAdding the Webhook node to the workflow\n\n### 3\\. Creating a collection in Strapi and setting up the webhook\n\nStrapi stores all content in the form of [collections](https://strapi.io/documentation/developer-docs/latest/developer-resources/content-api/integrations/graphql.html?ref=blog.n8n.io#install-the-graphql-plugin). These are user defined stores of data. We will first create a collection and then set up the webhook that we created in the previous step.\n\nClick on the **_Content-Types Builder_** in the left sidebar to create a collection. We will name this collection as `Post`. Add the following fields for the collection:\n\n  1. Title — Short text\n  2. PostDatetime — Datetime\n  3. PostContent — Rich text\n  4. FeatureImage — Single media\n  5. Tag — Enumeration\n\n\n\nHere’s a video of me following the steps mentioned above.\n\nCreating a collection in Strapi\n\nClick on **_Settings_** in in the left sidebar and select 'Webhooks' under the **_Global Settings_** section. Click on the **_\\+ Add new webhook_** button. Enter a name for your webhook in the **_Name_** field and paste the n8n webhook URL you copied from the previous step in the **_URL_** field. Under the **_Headers_** section, select **_Authorization_** from the **_Key_** dropdown list. Enter the value that you used in the 'Header Auth' credentials in the _Webhook_ node. Now, save your changes by clicking on the _**Save**_ button.\n\nAdding a webhook in Strapi\n\n### 4\\. Creating POST requests for the Dev.to API\n\nNow that we have all our content being sent from Strapi to n8n, we need to send that information from n8n to several blogging platforms. Most blogging platforms have a RESTful [API](https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#api) using which we can make a post.\n\nLet’s start with Dev.to as an example. \n\nFirst, create a sample post and retrieve the data model from Strapi. Click on the _**Execute Node** _button and then create a new sample post in Strapi. It should look something like the image below.\n\n![](https://blog.n8n.io/content/images/2021/02/Webhook-screenshot.png)Sample data retrieved from Strapi\n\n> **Note:** You will need to use the Test URL to be able to view the data that n8n processes as shown above. The Production URL does not display retrieved data in the workflow editor. We recommend that you use the Test URL to configure the workflow.\n\nNext, we need to send the data to Dev.to via their [REST API](https://docs.dev.to/api/?ref=blog.n8n.io). One of the ways to do this is by using a POST request. POST requests are a type of web requests that can send data to a server by including it as a ‘payload’. In n8n, POST requests can be created and used via the _[HTTP Request](https://docs.n8n.io/nodes/n8n-nodes-base.httpRequest?ref=blog.n8n.io)_ node.\n\nFrom your Dev.to dashboard, go to [_Settings_](https://dev.to/settings?ref=blog.n8n.io) and select **_Account_**. Click on the **_Generate API Key_** button under the **_DEV Community API Keys_** section and generate an API key.\n\nNow, using the _HTTP Request_ node, we can send the data to Dev.to. Set the _Authentication_ to ‘Header Auth’ and use the API key from your Dev.to account to authenticate. Set _**JSON/RAW Parameters** _to `true` (turn the switch on). Set the request method as POST and paste the API endpoint in the URL (`https://dev.to/api/articles` in our case). In the **_Headers_** field enter `{\"Content-Type\": \"application/json\"}`.\n\nThe final step to create the node is to add the request body, or the payload, in [JSON](https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#json) format. This will contain all the data that is needed to make a post. To dynamically change the data based on previous nodes, we will use the powerful “Add expression” tool. You can access this by clicking the ⚙️ (gears) icon and choosing _**Add Expression**._\n\nNow, select the following variable:\n\n`Current Node > Input Data > JSON > body > entry > Title`\n\nSimilarly select the body content and tag from the **_Variable Selector_**. Having previously read through Dev.to’s [API documentation](https://docs.dev.to/api/?ref=blog.n8n.io), I chose all the information that I wanted to send to Dev.to and encoded it as JSON.\n    \n    \n    { \n    \t\"article\": { \n        \t\t\"title\": \"Post Title\", \n            \t\"published\": true, \n            \t\"body_markdown\": \"I love n8n!\", \n            \t\"tags\": [ \"TutorialSample\", \"Guide\", \"Instructional\", ], \n            \t\"series\": \"n8n Guides\", \n            \t\"canonical_url\": \"https://your-strapi.url/postname\"\n    \t}\n    }\n\nFor consistency, I chose to only include the fields that both Medium and Dev.to would support.\n\nIf you want to include or exclude information, please refer to Dev.to [API reference](https://docs.dev.to/api/?ref=blog.n8n.io#operation/createArticle).\n\nNext, test this node by clicking _**Execute Node**_ to run this node. Then, head over to Dev.to and check if a new post has been created. If you see a new post; it means you’ve set this up correctly!\n\nHere’s a video of me following the steps mentioned above.\n\nAdding an HTTP Request for Dev.to\n\n### 5\\. Creating POST requests for the Medium API\n\nWe will use the [_Medium_ node](https://docs.n8n.io/nodes/n8n-nodes-base.medium/?ref=blog.n8n.io) in n8n to send the data to Medium. Follow the [documentation](https://docs.n8n.io/credentials/medium?ref=blog.n8n.io) to get credentials for the node.\n\nClick on the '+' button and select the _Medium_ node under the **_Regular_** tab. Create new credentials to connect to your Medium account. Click on the gears icon next to the **_Title_** field and select 'Add Expression'. Select the following from the **_Variable Selector_** section:\n\n`Current Node > Input Data > JSON > body > entry > Title`\n\nNext, select 'Markdown' from the **_Content Format_** dropdown list. Click on the gears icon next to the **_Content_** field and select 'Add Expression'. Select the following from the **_Variable Selector_** section:\n\n`Current Node > Input Data > JSON > body > entry > PostContent`\n\nTo add Tags and a canonical URL, click on Add Field and select 'Tags' and 'Canonical URL' respectively. You can select the data from the **_Variable Selector_** as you did previously.\n\nHere’s a video of how I set up my _Medium_ node.\n\nAdding the Medium node\n\n### 6\\. Executing the workflow\n\nFirst of all, change the webhook URL in Strapi from the Test URL to the Production URL and activate the workflow. The Test URL is meant only for configuration and setting up the webhook. It is only active for 120 seconds. The Production URL on the other hand, listens for requests all the time.\n\nCreate a post in Strapi and save it. Head over to Dev.to and Medium to check if the blog posts have been created (it might take a few seconds).\n\nHere’s a video of me executing my workflow.\n\nTesting the workflow in production\n\nThe post has shown up with the correct data on both platforms. We’ve set up n8n to cross-post content to both Medium and Dev.to.\n\nAnd, that’s it! Congratulations, you have just automated cross-posting across blogging platforms 🎉\n\n## Adding more platforms\n\nSince n8n supports webhooks, HTTP requests, and GraphQL; you can add any blogging platform that supports either RESTful API or GraphQL using a similar set of steps (consult the documentation) for the appropriate settings.\n\nYou can also automate cross-platform updating and deleting of posts; making Strapi a powerful tool to manage and deliver your content across several online platforms.\n\nYou can also experiment in a similar manner with social networking workflows such as twitter, announcing a new blog post via a tweet. Such companion social media pages for blogs ensure that your content reaches even wider audiences.\n\n## Conclusion\n\nIn this tutorial, we learnt to automate cross-posting of blog posts using a single source of truth to ensure consistency and reduce effort. We also discussed the possibility of using companion workflows to handle the update and removal of content and increasing visibility and reach by complementing using social media nodes.\n\nWriting is a creative industry and everyone has their own style and way of doing things — a workflow that they prefer. n8n can help automate the repetitive tasks of your workflow. Which parts of your daily life are repetitive and tedious? What will you automate?\n\nIn case you’ve run into an issue while following the tutorial, feel free to reach out to me on [LinkedIn](https://www.linkedin.com/in/amudhan-manivasagam-4aba86167/?ref=blog.n8n.io) or ask for help on our[ forum](https://community.n8n.io/?ref=blog.n8n.io) 💙\n\n _Start automating!_\n\n_The best part is, you can start automating for free with n8n. The easiest way to get started is to[download the desktop app,](https://n8n.io/pricing?cloud=false&ref=blog.n8n.io) or sign up for a [free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io). Thanks to n8n’s fair-code license, you can also [self-host n8n for free](https://docs.n8n.io/hosting/?ref=blog.n8n.io)._\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=Learn%20how%20to%20automatically%20cross-post%20your%20content%20with%20n8n&url=https://blog.n8n.io/learn-how-to-automatically-cross-post-your-content-with-n8n/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/learn-how-to-automatically-cross-post-your-content-with-n8n/)\n",
  "crawled_at": "2025-05-28T11:01:51.795804"
}