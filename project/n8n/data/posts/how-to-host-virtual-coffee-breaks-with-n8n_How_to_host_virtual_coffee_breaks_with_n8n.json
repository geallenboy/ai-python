{
  "url": "https://blog.n8n.io/how-to-host-virtual-coffee-breaks-with-n8n/",
  "title": "How to host virtual coffee breaks with n8n",
  "excerpt": "Learn how to build an n8n workflow that arranges coffee chats with people in Mattermost or Matrix and schedules the appointment in their calendars.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2021/01/nathan-dumlao-6VhPY27jdps-unsplash-1.jpg",
  "tags": [
    "Tutorial"
  ],
  "html": "<p>Almost all of us have had to start something new, be it a new job or a new school. When I find myself in this situation, I make it my mission to do two things:</p><ol><li>Get to know as many people as possible</li><li>Find out what tech they are using</li></ol><p>Fortunately, <a href=\"https://n8n.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n</a> has a great way of doing both at once. Using this coffee chat workflow, I can familiarize myself with their systems and get to meet a bunch of people at the same time.</p><p>This workflow automatically arranges coffee chats with people in Mattermost. It even schedules the appointment in their calendars! Virtual networking has never been so easy.</p><p>In this article, we are going to learn how to build this workflow and then change it to accommodate different chat systems that you may find plus accommodate some differences in the technology.</p><h2 id=\"prerequisites\">Prerequisites</h2><p>This article assumes that you have the following in place already:</p><h3 id=\"n8n\">n8n</h3><p>You will need a working copy of n8n. This can be either installed on your system or running on the new <a href=\"https://n8n.io/cloud/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n cloud</a> environment. This workflow was created in n8n version 0.101.0.</p><h3 id=\"google-calendar\">Google Calendar</h3><p>We will be using Google Calendar to send out the meeting requests. It is important that you have access to this online app and that you have already set up the credentials in n8n as outlined <a href=\"https://docs.n8n.io/credentials/google/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">here</a>.</p><h3 id=\"chat-program\">Chat Program</h3><p>You will need to have one of the two following chat programs:</p><ul><li><a href=\"https://mattermost.com/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Mattermost</a></li><li><a href=\"https://matrix.org/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Matrix</a></li></ul><p>Please ensure that you have created accounts for one of these programs and set up the credentials for n8n to access them. If you need more information on setting up the credentials for these chat systems, please check out the appropriate set of documentation below:</p><ul><li><a href=\"https://docs.n8n.io/credentials/mattermost/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Mattermost</a></li><li><a href=\"https://docs.n8n.io/credentials/matrix/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Matrix</a></li></ul><h2 id=\"quick-start\">Quick Start</h2><p>If you are just here to get this workflow up and running and are not interested in figuring out what each of the nodes does, you can take a shortcut and download the already completed workflow located here:</p><ul><li><a href=\"https://n8n.io/workflows/853?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Mattermost</a></li><li><a href=\"https://n8n.io/workflows/854?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Matrix</a></li></ul><p>Please select the one that matches the technology and accounts that you have. All you will be required to do is paste the workflow into your copy of n8n and then modify the corresponding nodes for the chat system and Google Calendar. </p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/image1.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1600\" height=\"816\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/image1.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/image1.png 1000w, https://blog.n8n.io/content/images/2021/01/image1.png 1600w\" sizes=\"(min-width: 1200px) 1200px\"><figcaption>Completed Mattermost Workflow</figcaption></figure><h2 id=\"the-mattermost-workflow\">The Mattermost Workflow</h2><p>There are four different nodes used in this workflow:</p><ol><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.cron/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Cron</a></li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.mattermost/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Mattermost</a></li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.function/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Function</a></li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.googleCalendar/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Google Calendar</a></li></ol><h3 id=\"cron-node\">Cron Node</h3><p>We would like this workflow to run once a week each Monday. To accomplish that, we use the cron node. To configure this to run at 10:00 each Monday morning, we will set the node parameters as follows:</p><ul><li><strong>Mode</strong>: Every Week</li><li><strong>Hour</strong>: 10</li><li><strong>Minute</strong>: 0</li><li><strong>Weekday</strong>: Monday</li></ul><p>Once you set each of these parameters, you can rename the cron node to <em>Weekly Trigger on Monday</em> and close the node.</p><h3 id=\"first-mattermost-node-greetings-\">First Mattermost Node (Greetings)</h3><p>So, the first thing that we would like this workflow to do when the cron node triggers, is to post a quick message letting everybody know that the coffee groups are about to be released. To do this, set the following parameters in the Mattermost node:</p><ul><li><strong>Mattermost API credentials</strong>: <em>Select your credentials that you set up earlier</em></li><li><strong>Resource</strong>: Message</li><li><strong>Operation</strong>: Post</li><li><strong>Channel ID</strong>: <em>Your channel ID</em></li><li><strong>Message</strong>: 👋 Happy Monday! Groups for this week's virtual coffee are:</li></ul><p>If you are not sure what the channel ID is for your Mattermost node, simply go to the title of the channel in the Mattermost page, click on the down chevron, and click on view info. This will pop up a new window telling you about your channel the channel ID is in fine print at the bottom left-hand corner of the window copy and paste this long string of letters into the channel ID field in the Mattermost node window.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/pasted-image-0.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"600\" height=\"373\" srcset=\"https://blog.n8n.io/content/images/2021/01/pasted-image-0.png 600w\"><figcaption>Mattermost Channel ID</figcaption></figure><p>You are now ready to test your Mattermost node click on the execute node button at the top right-hand corner of the node window. You should now see the contents of your message field posted in the appropriate Mattermost channel.</p><p>You can rename the Mattermost node to <em>Greetings</em>.</p><h3 id=\"second-mattermost-node-employees-in-coffee-chat-channel-\">Second Mattermost Node (Employees in Coffee Chat Channel)</h3><p>The next Mattermost node will get a complete list of everybody who is in the channel that you chose in the previous node. The difference between this node and the previous Mattermost node that you created is that this node is being used to retrieve information whereas the previous node was used to post information. To configure this node, enter the following into the Mattermost node fields:</p><ul><li><strong>Mattermost API credentials</strong>: <em>Select your credentials that you set up earlier</em></li><li><strong>Resource</strong>: User</li><li><strong>Operation</strong>: Get All</li><li><strong>Return all</strong>: On</li></ul><p>You will also want to add a field below the standard Mattermost fields. Click the add field dropdown button and select <em>In Channel</em> from the dropdown menu. In this field, use the Expression Editor to enter <code>{{$node[\"Greetings\"].parameter[\"channelId\"]}}</code> so that the same channel ID is used as in the previous Mattermost node.</p><p><em>Please note that you may receive an error message indicating that you do not have appropriate permissions on the server. This will not affect the results of this workflow.</em></p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/pasted-image-0--1-.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"837\" height=\"59\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/pasted-image-0--1-.png 600w, https://blog.n8n.io/content/images/2021/01/pasted-image-0--1-.png 837w\"><figcaption>Potential Error in Mattermost Node</figcaption></figure><p>You can now test the second Mattermost node. Click the <em>Execute Node</em> button at the top right-hand corner. You should get a list of all the users that are present in the channel along with some extra information.</p><p>Once you have successfully retrieved this information you can rename the node <em>Employees in Coffee Chat Channel</em> and close the node.</p><h3 id=\"function-node\">Function Node</h3><p>The function node is now going to be used to perform a few things:</p><ul><li>Put all users into an array</li><li>Shuffle the list of channel users</li><li>Break them up into groups of three</li><li>If there is a group of just one, added to the previously created group</li><li>Forward the groups on to the next nodes</li></ul><p>Since reading function node can be some of the most complicated parts of writing a workflow, we are going to just provide you with the contents of this function node so that you can quickly get moving on to the next step. Here is the code:</p><pre><code class=\"language-javascript\">const ideal_group_size = 3;\nlet groups = [];\nlet data_as_array = [];\nlet newItems = [];\n\n// Take all the users and add them to an array\nfor (let j = 0; j &lt; items.length; j++) {\n\tdata_as_array.push({username: items[j].json.username, email: items[j].json.email});\n}\n\n// Fisher-Yates (aka Knuth) Shuffle\nfunction shuffle(array) {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n    return array;\n}\n\n// Randomize the sequence of names in the array\ndata_as_array = shuffle(data_as_array);\n\n// Create groups of ideal group size (3)\nfor (let i = 0; i &lt; data_as_array.length; i += ideal_group_size) {\ngroups.push(data_as_array.slice(i, i + ideal_group_size));\n}\n\n// Make sure that no group has just one person. If it does, take\n// one from previous group and add it to that group\nfor (let k = 0; k &lt; groups.length; k++) {\n    if (groups[k].length === 1) {\n    \tgroups[k].push(groups[k-1].shift());\n    }\n}\n\nfor (let l = 0; l &lt; groups.length; l++) {\n    newItems.push({json: {groupsUsername: groups[l].map(a=&gt; a.username), groupsEmail: groups[l].map(b=&gt; b.email)}})\n}\n\nreturn newItems;</code></pre><p>Copy and paste this code into the JavaScript code field in the function node. Rename the <em>function</em> node <em>Divide into groups</em>.</p><p>You can test to see if the code in the function node is working properly by pressing the <em>Execute Node</em> button at the top right-hand corner of the node.</p><p>You should get several array sets of three users each as your output. There is a chance that the last array will have two or four members in the array if the number of users in the channel is not evenly divisible by three. Close the <em>function</em> node.</p><h3 id=\"third-mattermost-node-announce-groups-\">Third Mattermost Node (Announce Groups)</h3><p>The next thing that we are going to do is send out a post with the names of the people who will be getting together in the coffee groups.</p><p>Fill in the following parameters in this Mattermost node:</p><p>Mattermost API credentials: select the credentials that were provided earlier</p><ul><li><strong>Mattermost API credentials</strong>: select the credentials that were provided earlier</li><li><strong>Resource</strong>: message</li><li><strong>Operation</strong>: post</li><li><strong>Channel ID</strong>: the channel that you used previously</li><li><strong>Message</strong>: groups to be distributed</li></ul><p>For the information to go out properly, the message field will have to be filled out with an expression. Use the expression editor next to the message field and paste in the following:</p><p><code>☀️ {{$node[\"Divide into groups\"].json[\"groupsUsername\"].join(', ')}}</code></p><p>This will pull the user groups from the <em>function</em> node and use their information. Close the expression editor.</p><p>You can test your latest Mattermost node by clicking the <em>Execute Node</em> button at the top right corner. If this worked properly, you will be able to see the coffee groups appear in the appropriate Mattermost channel. You can rename the Mattermost node to <em>Announce groups</em> and close the node.</p><h3 id=\"google-calendar-node\">Google Calendar Node</h3><p>The final thing we want to do with this workflow is to send out calendar invites to everyone in the groups. The <em>Google calendar</em> node will perform this for us.</p><p>Connect the <em>Google Calendar</em> node to the <em>Divide into groups</em> function node and &nbsp;set the following parameters:</p><ul><li><strong>Google Calendar OAuth credentials:</strong> select your Google calendar credentials or <a href=\"https://docs.n8n.io/credentials/google/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">set them up</a> if this is the first time you have used them</li><li><strong>Resource</strong>: event</li><li><strong>Operation</strong>: create</li><li><strong>Calendar ID</strong>: your calendar ID</li><li><strong>Start</strong>: start date and time</li><li><strong>End</strong>: end date and time</li><li><strong>Use default reminder</strong>: on</li></ul><p>We also want to use some additional fields in this node. Select and set the following additional fields using the add field dropdown button:</p><!--kg-card-begin: markdown--><ul>\n<li><strong>Attendees:</strong> use the expression editor and add the following for the expression: <code>{{$node[\"Divide into groups\"].json[\"groupsEmail\"].join(',')}}</code></li>\n<li><strong>Conference Data:</strong>\n<ul>\n<li><strong>Conference Link:</strong>\n<ul>\n<li><strong>Type:</strong> Google Meet</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>Guests Can Modify:</strong> On</li>\n<li><strong>Summary:</strong> n8n coffee catchup</li>\n</ul>\n<!--kg-card-end: markdown--><p>You can test this node by clicking on the <em>Execute Node</em> button at the top right corner.</p><p>If everything works properly, each of the attendees should see a new calendar request in their calendar.</p><p>You can rename the node <em>Send Calendar Invites</em> and close the node.</p><p>At this point, please save and active your node so that it runs on schedule! Your final result should look like this:</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/pasted-image-0--2-.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1600\" height=\"816\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/pasted-image-0--2-.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/pasted-image-0--2-.png 1000w, https://blog.n8n.io/content/images/2021/01/pasted-image-0--2-.png 1600w\" sizes=\"(min-width: 1200px) 1200px\"><figcaption>Completed Mattermost Workflow</figcaption></figure><p>If everything goes according to plan, every Monday at 10:00 AM you will get an invitation for coffee.</p><h2 id=\"different-technology\">Different Technology</h2><p>Now if your new school or workplace uses Mattermost as their chat system, you're all set and ready to go. But, there are many different chat systems out there other than just Mattermost. Fortunately, n8n has you covered. It is simply a matter of replacing the Mattermost nodes with the comparable node from the other chat systems and fine-tuning the function node to support this new information.</p><h3 id=\"substituting-matrix\">Substituting Matrix</h3><p>To use the Matrix messaging system rather than the Mattermost messaging system, follow these steps:</p><ol><li>Delete the 3 Mattermost nodes from the workflow and replace them with Matrix nodes with the same names and connect them the same way they were connected in the Mattermost workflow.</li><li>Configure the <em>Greetings</em> node with the following settings:</li></ol><ul><li><strong>Matrix API Credentials</strong>: <em>Your credentials that you had previously set up</em></li><li><strong>Resource</strong>: Message</li><li><strong>Operation</strong>: Create</li><li><strong>Room ID</strong>: <em>This should be the room name that you are using for the coffee chat meetings</em></li><li><strong>Text</strong>: 👋 Happy Monday Groups for this week's virtual coffee are:</li><li><strong>Message Type</strong>: Text</li><li><strong>Message Format</strong>: Plain Text</li></ul><!--kg-card-begin: markdown--><ol start=\"3\">\n<li>Configure the <em>Employees in coffee chat channel</em> node with the following settings:</li>\n</ol>\n<!--kg-card-end: markdown--><ul><li><strong>Matrix API Credentials</strong>: <em>Your credentials that you had previously set up</em></li><li><strong>Resource</strong>: Room Member</li><li><strong>Operation</strong>: Get All</li><li><strong>Room ID</strong>: <em>This should be the room name that you are using for the coffee chat meetings</em></li><li><strong>Filters</strong>:</li><li><strong>Membership</strong>: Any</li></ul><!--kg-card-begin: markdown--><ol start=\"4\">\n<li>Update the <em>Divide into groups</em> function node with the following code so that it accepts the different output from the <em>Matrix</em> node and it does not look for email addresses (since Matrix does not supply them):</li>\n</ol>\n<!--kg-card-end: markdown--><pre><code class=\"language-javascript\">const ideal_group_size = 3;\nlet groups = [];\nlet data_as_array = [];\nlet newItems = [];\n\n// Take all the users and add them to an array\nfor (let j = 0; j &lt; items.length; j++) {\n\tdata_as_array.push({username: items[j].json.user_id});\n}\n\n// Fisher-Yates (aka Knuth) Shuffle\nfunction shuffle(array) {\n\tvar currentIndex = array.length, temporaryValue, randomIndex;\n    \n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\treturn array;\n}\n\n// Randomize the sequence of names in the array\ndata_as_array = shuffle(data_as_array);\n\n// Create groups of ideal group size (3)\nfor (let i = 0; i &lt; data_as_array.length; i += ideal_group_size) {\n\tgroups.push(data_as_array.slice(i, i + ideal_group_size));\n}\n\n// Make sure that no group has just one person. If it does, take\n// one from previous group and add it to that group\nfor (let k = 0; k &lt; groups.length; k++) {\n    if (groups[k].length === 1) {\n    \tgroups[k].push(groups[k-1].shift());\n    \t}\n    }\n    for (let l = 0; l &lt; groups.length; l++) {\n    newItems.push({json: {groupsUsername: groups[l].map(a=&gt; a.username)}})\n}\nreturn newItems;</code></pre><p>Configure the <em>Announce groups </em>node with the following settings:</p><ul><li><strong>Matrix API Credentials</strong>: <em>Your credentials that you had previously set up</em></li><li><strong>Resource</strong>: Message</li><li><strong>Operation</strong>: Create</li><li><strong>Room ID</strong>: <em>This should be the room name that you are using for the coffee chat meetings</em></li><li><strong>Text</strong>: <em>Use the Expression editor to enter the following expression: </em><code>☀️ {{$node[\"Divide into groups\"].json[\"groupsUsername\"].join(', ')}}</code></li><li><strong>Message Type</strong>: Text</li><li><strong>Message Format</strong>: Plain Text</li></ul><!--kg-card-begin: markdown--><ol start=\"5\">\n<li>Delete the <em>Calendar</em> node. Since Matrix does not provide email addresses, there is nowhere to send out a calendar invite. (Maybe a shared Google Sheet with everyone’s account name and email address could be used as a lookup table in future versions! 🤔)</li>\n<li>Don’t forget to activate the workflow so that it runs every Monday</li>\n</ol>\n<!--kg-card-end: markdown--><p>Your final Matrix workflow should look like this:</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/pasted-image-0--3-.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1600\" height=\"816\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/pasted-image-0--3-.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/pasted-image-0--3-.png 1000w, https://blog.n8n.io/content/images/2021/01/pasted-image-0--3-.png 1600w\" sizes=\"(min-width: 1200px) 1200px\"><figcaption>Completed Matrix Workflow</figcaption></figure><h2 id=\"what-s-next\">What’s Next?</h2><p>Now that we have this basic coffee chat workflow running properly in different environments using different technologies, where could we take this? Here are some ideas:</p><ul><li>Send out calendar invites via the chat program using a calendar (ICS) file</li><li>Integrate other chat technologies (e.g. Slack, Telegram, Teams, etc.)</li><li>Create invitations to the actual video conference program (e.g. Zoom) and send the links</li><li>Check people’s calendars and opt them out of the chat if they already have a meeting scheduled</li></ul><h2 id=\"our-journey\">Our Journey</h2><p>We’ve covered a lot of ground today. Let’s review what we have accomplished:</p><ol><li>Built a workflow for creating random groups of three for a virtual meeting and sent out the groupings using Mattermost along with an invitation to their calendars</li><li>Modified the workflow to use the Matrix chat program rather than Mattermost, taking into account differences in technology.</li></ol><p>I’d love to hear about what you’ve built using n8n! Or if you’ve run into an issue while following the tutorial, feel free to reach out to me on <a href=\"https://twitter.com/tephlondude?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Twitter</a> or ask for help on our <a href=\"https://community.n8n.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">forum</a> 💙</p><p><em>Start automating!</em></p><p><em>The best part is, you can start automating for free with n8n. The easiest way to get started is to sign up for a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a>. Thanks to n8n’s fair-code license, you can also </em><a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"><em>self-host n8n for free</em></a><em>.</em></p>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-u1uc33ljamc2\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=jajouq85f4rz\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=How%20to%20host%20virtual%20coffee%20breaks%20with%20n8n&amp;url=https://blog.n8n.io/how-to-host-virtual-coffee-breaks-with-n8n/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/how-to-host-virtual-coffee-breaks-with-n8n/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/how-to-host-virtual-coffee-breaks-with-n8n/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "Almost all of us have had to start something new, be it a new job or a new school. When I find myself in this situation, I make it my mission to do two things:\n\n  1. Get to know as many people as possible\n  2. Find out what tech they are using\n\n\n\nFortunately, [n8n](https://n8n.io/?ref=blog.n8n.io) has a great way of doing both at once. Using this coffee chat workflow, I can familiarize myself with their systems and get to meet a bunch of people at the same time.\n\nThis workflow automatically arranges coffee chats with people in Mattermost. It even schedules the appointment in their calendars! Virtual networking has never been so easy.\n\nIn this article, we are going to learn how to build this workflow and then change it to accommodate different chat systems that you may find plus accommodate some differences in the technology.\n\n## Prerequisites\n\nThis article assumes that you have the following in place already:\n\n### n8n\n\nYou will need a working copy of n8n. This can be either installed on your system or running on the new [n8n cloud](https://n8n.io/cloud/?ref=blog.n8n.io) environment. This workflow was created in n8n version 0.101.0.\n\n### Google Calendar\n\nWe will be using Google Calendar to send out the meeting requests. It is important that you have access to this online app and that you have already set up the credentials in n8n as outlined [here](https://docs.n8n.io/credentials/google/?ref=blog.n8n.io).\n\n### Chat Program\n\nYou will need to have one of the two following chat programs:\n\n  * [Mattermost](https://mattermost.com/?ref=blog.n8n.io)\n  * [Matrix](https://matrix.org/?ref=blog.n8n.io)\n\n\n\nPlease ensure that you have created accounts for one of these programs and set up the credentials for n8n to access them. If you need more information on setting up the credentials for these chat systems, please check out the appropriate set of documentation below:\n\n  * [Mattermost](https://docs.n8n.io/credentials/mattermost/?ref=blog.n8n.io)\n  * [Matrix](https://docs.n8n.io/credentials/matrix/?ref=blog.n8n.io)\n\n\n\n## Quick Start\n\nIf you are just here to get this workflow up and running and are not interested in figuring out what each of the nodes does, you can take a shortcut and download the already completed workflow located here:\n\n  * [Mattermost](https://n8n.io/workflows/853?ref=blog.n8n.io)\n  * [Matrix](https://n8n.io/workflows/854?ref=blog.n8n.io)\n\n\n\nPlease select the one that matches the technology and accounts that you have. All you will be required to do is paste the workflow into your copy of n8n and then modify the corresponding nodes for the chat system and Google Calendar. \n\n![](https://blog.n8n.io/content/images/2021/01/image1.png)Completed Mattermost Workflow\n\n## The Mattermost Workflow\n\nThere are four different nodes used in this workflow:\n\n  1. [Cron](https://docs.n8n.io/nodes/n8n-nodes-base.cron/?ref=blog.n8n.io)\n  2. [Mattermost](https://docs.n8n.io/nodes/n8n-nodes-base.mattermost/?ref=blog.n8n.io)\n  3. [Function](https://docs.n8n.io/nodes/n8n-nodes-base.function/?ref=blog.n8n.io)\n  4. [Google Calendar](https://docs.n8n.io/nodes/n8n-nodes-base.googleCalendar/?ref=blog.n8n.io)\n\n\n\n### Cron Node\n\nWe would like this workflow to run once a week each Monday. To accomplish that, we use the cron node. To configure this to run at 10:00 each Monday morning, we will set the node parameters as follows:\n\n  * **Mode** : Every Week\n  * **Hour** : 10\n  * **Minute** : 0\n  * **Weekday** : Monday\n\n\n\nOnce you set each of these parameters, you can rename the cron node to _Weekly Trigger on Monday_ and close the node.\n\n### First Mattermost Node (Greetings)\n\nSo, the first thing that we would like this workflow to do when the cron node triggers, is to post a quick message letting everybody know that the coffee groups are about to be released. To do this, set the following parameters in the Mattermost node:\n\n  * **Mattermost API credentials** : _Select your credentials that you set up earlier_\n  * **Resource** : Message\n  * **Operation** : Post\n  * **Channel ID** : _Your channel ID_\n  * **Message** : 👋 Happy Monday! Groups for this week's virtual coffee are:\n\n\n\nIf you are not sure what the channel ID is for your Mattermost node, simply go to the title of the channel in the Mattermost page, click on the down chevron, and click on view info. This will pop up a new window telling you about your channel the channel ID is in fine print at the bottom left-hand corner of the window copy and paste this long string of letters into the channel ID field in the Mattermost node window.\n\n![](https://blog.n8n.io/content/images/2021/01/pasted-image-0.png)Mattermost Channel ID\n\nYou are now ready to test your Mattermost node click on the execute node button at the top right-hand corner of the node window. You should now see the contents of your message field posted in the appropriate Mattermost channel.\n\nYou can rename the Mattermost node to _Greetings_.\n\n### Second Mattermost Node (Employees in Coffee Chat Channel)\n\nThe next Mattermost node will get a complete list of everybody who is in the channel that you chose in the previous node. The difference between this node and the previous Mattermost node that you created is that this node is being used to retrieve information whereas the previous node was used to post information. To configure this node, enter the following into the Mattermost node fields:\n\n  * **Mattermost API credentials** : _Select your credentials that you set up earlier_\n  * **Resource** : User\n  * **Operation** : Get All\n  * **Return all** : On\n\n\n\nYou will also want to add a field below the standard Mattermost fields. Click the add field dropdown button and select _In Channel_ from the dropdown menu. In this field, use the Expression Editor to enter `{{$node[\"Greetings\"].parameter[\"channelId\"]}}` so that the same channel ID is used as in the previous Mattermost node.\n\n_Please note that you may receive an error message indicating that you do not have appropriate permissions on the server. This will not affect the results of this workflow._\n\n![](https://blog.n8n.io/content/images/2021/01/pasted-image-0--1-.png) Potential Error in Mattermost Node\n\nYou can now test the second Mattermost node. Click the _Execute Node_ button at the top right-hand corner. You should get a list of all the users that are present in the channel along with some extra information.\n\nOnce you have successfully retrieved this information you can rename the node _Employees in Coffee Chat Channel_ and close the node.\n\n### Function Node\n\nThe function node is now going to be used to perform a few things:\n\n  * Put all users into an array\n  * Shuffle the list of channel users\n  * Break them up into groups of three\n  * If there is a group of just one, added to the previously created group\n  * Forward the groups on to the next nodes\n\n\n\nSince reading function node can be some of the most complicated parts of writing a workflow, we are going to just provide you with the contents of this function node so that you can quickly get moving on to the next step. Here is the code:\n    \n    \n    const ideal_group_size = 3;\n    let groups = [];\n    let data_as_array = [];\n    let newItems = [];\n    \n    // Take all the users and add them to an array\n    for (let j = 0; j < items.length; j++) {\n    \tdata_as_array.push({username: items[j].json.username, email: items[j].json.email});\n    }\n    \n    // Fisher-Yates (aka Knuth) Shuffle\n    function shuffle(array) {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n    \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n    \n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n        return array;\n    }\n    \n    // Randomize the sequence of names in the array\n    data_as_array = shuffle(data_as_array);\n    \n    // Create groups of ideal group size (3)\n    for (let i = 0; i < data_as_array.length; i += ideal_group_size) {\n    groups.push(data_as_array.slice(i, i + ideal_group_size));\n    }\n    \n    // Make sure that no group has just one person. If it does, take\n    // one from previous group and add it to that group\n    for (let k = 0; k < groups.length; k++) {\n        if (groups[k].length === 1) {\n        \tgroups[k].push(groups[k-1].shift());\n        }\n    }\n    \n    for (let l = 0; l < groups.length; l++) {\n        newItems.push({json: {groupsUsername: groups[l].map(a=> a.username), groupsEmail: groups[l].map(b=> b.email)}})\n    }\n    \n    return newItems;\n\nCopy and paste this code into the JavaScript code field in the function node. Rename the _function_ node _Divide into groups_.\n\nYou can test to see if the code in the function node is working properly by pressing the _Execute Node_ button at the top right-hand corner of the node.\n\nYou should get several array sets of three users each as your output. There is a chance that the last array will have two or four members in the array if the number of users in the channel is not evenly divisible by three. Close the _function_ node.\n\n### Third Mattermost Node (Announce Groups)\n\nThe next thing that we are going to do is send out a post with the names of the people who will be getting together in the coffee groups.\n\nFill in the following parameters in this Mattermost node:\n\nMattermost API credentials: select the credentials that were provided earlier\n\n  * **Mattermost API credentials** : select the credentials that were provided earlier\n  * **Resource** : message\n  * **Operation** : post\n  * **Channel ID** : the channel that you used previously\n  * **Message** : groups to be distributed\n\n\n\nFor the information to go out properly, the message field will have to be filled out with an expression. Use the expression editor next to the message field and paste in the following:\n\n`☀️ {{$node[\"Divide into groups\"].json[\"groupsUsername\"].join(', ')}}`\n\nThis will pull the user groups from the _function_ node and use their information. Close the expression editor.\n\nYou can test your latest Mattermost node by clicking the _Execute Node_ button at the top right corner. If this worked properly, you will be able to see the coffee groups appear in the appropriate Mattermost channel. You can rename the Mattermost node to _Announce groups_ and close the node.\n\n### Google Calendar Node\n\nThe final thing we want to do with this workflow is to send out calendar invites to everyone in the groups. The _Google calendar_ node will perform this for us.\n\nConnect the _Google Calendar_ node to the _Divide into groups_ function node and  set the following parameters:\n\n  * **Google Calendar OAuth credentials:** select your Google calendar credentials or [set them up](https://docs.n8n.io/credentials/google/?ref=blog.n8n.io) if this is the first time you have used them\n  * **Resource** : event\n  * **Operation** : create\n  * **Calendar ID** : your calendar ID\n  * **Start** : start date and time\n  * **End** : end date and time\n  * **Use default reminder** : on\n\n\n\nWe also want to use some additional fields in this node. Select and set the following additional fields using the add field dropdown button:\n\n  * **Attendees:** use the expression editor and add the following for the expression: `{{$node[\"Divide into groups\"].json[\"groupsEmail\"].join(',')}}`\n  * **Conference Data:**\n    * **Conference Link:**\n      * **Type:** Google Meet\n  * **Guests Can Modify:** On\n  * **Summary:** n8n coffee catchup\n\n\n\nYou can test this node by clicking on the _Execute Node_ button at the top right corner.\n\nIf everything works properly, each of the attendees should see a new calendar request in their calendar.\n\nYou can rename the node _Send Calendar Invites_ and close the node.\n\nAt this point, please save and active your node so that it runs on schedule! Your final result should look like this:\n\n![](https://blog.n8n.io/content/images/2021/01/pasted-image-0--2-.png)Completed Mattermost Workflow\n\nIf everything goes according to plan, every Monday at 10:00 AM you will get an invitation for coffee.\n\n## Different Technology\n\nNow if your new school or workplace uses Mattermost as their chat system, you're all set and ready to go. But, there are many different chat systems out there other than just Mattermost. Fortunately, n8n has you covered. It is simply a matter of replacing the Mattermost nodes with the comparable node from the other chat systems and fine-tuning the function node to support this new information.\n\n### Substituting Matrix\n\nTo use the Matrix messaging system rather than the Mattermost messaging system, follow these steps:\n\n  1. Delete the 3 Mattermost nodes from the workflow and replace them with Matrix nodes with the same names and connect them the same way they were connected in the Mattermost workflow.\n  2. Configure the _Greetings_ node with the following settings:\n\n\n  * **Matrix API Credentials** : _Your credentials that you had previously set up_\n  * **Resource** : Message\n  * **Operation** : Create\n  * **Room ID** : _This should be the room name that you are using for the coffee chat meetings_\n  * **Text** : 👋 Happy Monday Groups for this week's virtual coffee are:\n  * **Message Type** : Text\n  * **Message Format** : Plain Text\n\n\n  3. Configure the _Employees in coffee chat channel_ node with the following settings:\n\n\n  * **Matrix API Credentials** : _Your credentials that you had previously set up_\n  * **Resource** : Room Member\n  * **Operation** : Get All\n  * **Room ID** : _This should be the room name that you are using for the coffee chat meetings_\n  * **Filters** :\n  * **Membership** : Any\n\n\n  4. Update the _Divide into groups_ function node with the following code so that it accepts the different output from the _Matrix_ node and it does not look for email addresses (since Matrix does not supply them):\n\n\n    \n    \n    const ideal_group_size = 3;\n    let groups = [];\n    let data_as_array = [];\n    let newItems = [];\n    \n    // Take all the users and add them to an array\n    for (let j = 0; j < items.length; j++) {\n    \tdata_as_array.push({username: items[j].json.user_id});\n    }\n    \n    // Fisher-Yates (aka Knuth) Shuffle\n    function shuffle(array) {\n    \tvar currentIndex = array.length, temporaryValue, randomIndex;\n        \n    \t// While there remain elements to shuffle...\n    \twhile (0 !== currentIndex) {\n    \t\t// Pick a remaining element...\n    \t\trandomIndex = Math.floor(Math.random() * currentIndex);\n    \t\tcurrentIndex -= 1;\n    \t\t// And swap it with the current element.\n    \t\ttemporaryValue = array[currentIndex];\n    \t\tarray[currentIndex] = array[randomIndex];\n    \t\tarray[randomIndex] = temporaryValue;\n    \t}\n    \treturn array;\n    }\n    \n    // Randomize the sequence of names in the array\n    data_as_array = shuffle(data_as_array);\n    \n    // Create groups of ideal group size (3)\n    for (let i = 0; i < data_as_array.length; i += ideal_group_size) {\n    \tgroups.push(data_as_array.slice(i, i + ideal_group_size));\n    }\n    \n    // Make sure that no group has just one person. If it does, take\n    // one from previous group and add it to that group\n    for (let k = 0; k < groups.length; k++) {\n        if (groups[k].length === 1) {\n        \tgroups[k].push(groups[k-1].shift());\n        \t}\n        }\n        for (let l = 0; l < groups.length; l++) {\n        newItems.push({json: {groupsUsername: groups[l].map(a=> a.username)}})\n    }\n    return newItems;\n\nConfigure the _Announce groups_ node with the following settings:\n\n  * **Matrix API Credentials** : _Your credentials that you had previously set up_\n  * **Resource** : Message\n  * **Operation** : Create\n  * **Room ID** : _This should be the room name that you are using for the coffee chat meetings_\n  * **Text** : _Use the Expression editor to enter the following expression:_`☀️ {{$node[\"Divide into groups\"].json[\"groupsUsername\"].join(', ')}}`\n  * **Message Type** : Text\n  * **Message Format** : Plain Text\n\n\n  5. Delete the _Calendar_ node. Since Matrix does not provide email addresses, there is nowhere to send out a calendar invite. (Maybe a shared Google Sheet with everyone’s account name and email address could be used as a lookup table in future versions! 🤔)\n  6. Don’t forget to activate the workflow so that it runs every Monday\n\n\n\nYour final Matrix workflow should look like this:\n\n![](https://blog.n8n.io/content/images/2021/01/pasted-image-0--3-.png)Completed Matrix Workflow\n\n## What’s Next?\n\nNow that we have this basic coffee chat workflow running properly in different environments using different technologies, where could we take this? Here are some ideas:\n\n  * Send out calendar invites via the chat program using a calendar (ICS) file\n  * Integrate other chat technologies (e.g. Slack, Telegram, Teams, etc.)\n  * Create invitations to the actual video conference program (e.g. Zoom) and send the links\n  * Check people’s calendars and opt them out of the chat if they already have a meeting scheduled\n\n\n\n## Our Journey\n\nWe’ve covered a lot of ground today. Let’s review what we have accomplished:\n\n  1. Built a workflow for creating random groups of three for a virtual meeting and sent out the groupings using Mattermost along with an invitation to their calendars\n  2. Modified the workflow to use the Matrix chat program rather than Mattermost, taking into account differences in technology.\n\n\n\nI’d love to hear about what you’ve built using n8n! Or if you’ve run into an issue while following the tutorial, feel free to reach out to me on [Twitter](https://twitter.com/tephlondude?ref=blog.n8n.io) or ask for help on our [forum](https://community.n8n.io/?ref=blog.n8n.io) 💙\n\n _Start automating!_\n\n_The best part is, you can start automating for free with n8n. The easiest way to get started is to sign up for a[free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io). Thanks to n8n’s fair-code license, you can also _[_self-host n8n for free_](https://docs.n8n.io/hosting/?ref=blog.n8n.io) _._\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=How%20to%20host%20virtual%20coffee%20breaks%20with%20n8n&url=https://blog.n8n.io/how-to-host-virtual-coffee-breaks-with-n8n/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/how-to-host-virtual-coffee-breaks-with-n8n/)\n",
  "crawled_at": "2025-05-28T10:54:57.001623"
}