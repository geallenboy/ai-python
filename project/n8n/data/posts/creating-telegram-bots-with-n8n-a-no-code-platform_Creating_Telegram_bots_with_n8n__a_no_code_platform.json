{
  "url": "https://blog.n8n.io/creating-telegram-bots-with-n8n-a-no-code-platform/",
  "title": "Creating Telegram bots with n8n, a no-code platform",
  "excerpt": "In this tutorial, I will teach you how to create your very own Telegram weather bot with n8n.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2021/03/cover-2.png",
  "tags": [
    "Tutorial"
  ],
  "html": "<p>I am a big fan of <a href=\"https://telegram.org/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Telegram</a> because of its great <a href=\"https://core.telegram.org/bots?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">bot-ecosystem</a>. I have been planning to make a bot for a while and have been looking for some nice workflow tools that can help me handle the back-end workflow of the bots visually. Recently, I started working with <a href=\"https://n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">n8n</a>, a <a href=\"https://faircode.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">fair-code</a> licensed tool that helps you automate tasks, sync data between various sources and react to events all via a visual workflow editor.</p><p>It‚Äôs springtime in Berlin and the weather is unpredictable. One day it‚Äôs 6¬∞C and the next day, it‚Äôs 21¬∞C ü§Ø A good first use-case for me would be to create a bot that can send me the weather information whenever I ask for it. In this tutorial, I will teach you how to create your very own Telegram weather bot with n8n (the workflow was built using n8n@0.111.0).</p><p>To accomplish this, we‚Äôll go through five steps:</p><ol><li>Creating a bot on Telegram</li><li>Adding commands to the bot</li><li>Creating a Telegram trigger node on n8n</li><li>Creating a weather node on n8n</li><li>Creating a Telegram node on n8n</li></ol><h2 id=\"creating-a-bot-on-telegram\">Creating a bot on Telegram</h2><p>You can create a Telegram bot directly in the mobile app, on the web client or in the desktop app for your OS. I personally used the latter on macOS, because it allows for better visibility and control.</p><p>To create the Telegram bot, I downloaded the <a href=\"https://macos.telegram.org/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Telegram application for macOS</a>. However, you can also use the web client or the mobile app for this. We have to use the master of all bots that the team at Telegram created, aptly called BotFather. You can open a chat with BotFather by clicking <a href=\"https://telegram.me/BotFather?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">here</a>. You can get a list of all the commands that you can issue with <code>/help</code>.</p><p>First of all, issue the <code>/newbot</code> command. It will ask you to name your bot. I named it ‚Äòn8n bot‚Äô, cause why not? You will then be asked to choose a username for the bot. This has to be a unique username that has to end in ‚Äòbot‚Äô. I went with <code>n8n_weather_bot</code>.</p><p>This process created my bot, gave me the link to access it (you can also search for your bot by the username that you gave it) and the API key that I‚Äôll need later. Just click on the API key to copy it to the clipboard. Here‚Äôs a video of me following the steps above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 74.9064%;\"><iframe width=\"267\" height=\"200\" src=\"https://www.youtube.com/embed/3hhOrszbU4Q?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a bot on Telegram</figcaption></figure><h2 id=\"adding-commands-to-the-bot\">Adding commands to the bot</h2><p>Let‚Äôs create a command to our bot before adding some functionality to it. You can skip this section for the tutorial, if you‚Äôd like. However, if you plan to create more commands for the bot, later on, it might makes sense to try this on for size.</p><p>To set a new command for our bot, go to the BotFather chat window again. Issue the <code>/setcommands</code> command and you‚Äôll be asked to select the bot for which you want to set a command. Select the bot that you just created and enter a command in the suggested format. I went ahead and entered the following:</p><p><code>weather‚Ää‚Äî‚ÄäTells you about the weather</code></p><p>Here‚Äôs a video of me setting a command for my bot.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 74.9064%;\"><iframe width=\"267\" height=\"200\" src=\"https://www.youtube.com/embed/inOSIs8iuAU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding commands to the Telegram bot</figcaption></figure><p>Now, if you go back to the bot that you created and start typing ‚Äò/‚Äô, it will show you the list of commands that you have prepared for the bot. Very well, now that we have a bot and a command, it‚Äôs time to add some functionality to the bot.</p><h2 id=\"creating-a-telegram-trigger-node-on-n8n\">Creating a Telegram trigger node on n8n</h2><p>Our bot needs a back-end. To get started with creating the back-end of the bot, you‚Äôll need access to n8n. You can sign-up for a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a> to get early access to our hosted service. Alternatively, install n8n using <a href=\"https://www.npmjs.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">npm</a> with the following command:</p><p><code>npm install n8n -g</code></p><p>You can also run n8n using <a href=\"https://github.com/n8n-io/n8n/blob/master/docker/images/n8n/README.md?ref=blog.n8n.io#start-n8n-in-docker\" rel=\"noopener\" target=\"_blank\">Docker</a>. In this case, once you have installed n8n, you can start it using the following command:</p><p><code>n8n start --tunnel</code></p><p>We started n8n using the <code>--tunnel</code> parameter to be able to use webhooks trigger from Telegram as it has to be reachable from the web. To learn more about this, check out the <a href=\"https://github.com/n8n-io/n8n/blob/master/docker/images/n8n/README.md?ref=blog.n8n.io#start-with-tunnel\" rel=\"noopener\" target=\"_blank\">documentation</a>.</p><p>Type ‚Äúo‚Äù in the terminal to open the Editor UI.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/03/editor.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"868\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/03/editor.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/03/editor.png 1000w, https://blog.n8n.io/content/images/size/w1600/2021/03/editor.png 1600w, https://blog.n8n.io/content/images/size/w2400/2021/03/editor.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Editor UI of&nbsp;n8n</figcaption></figure><p>Let us now create a <a href=\"https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#trigger\" target=\"_blank\" rel=\"noopener\">Trigger node</a>, which starts a workflow when the <a href=\"https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#webhook\" target=\"_blank\" rel=\"noopener\">webhook</a> gets some data. In our case, it is the <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.telegramTrigger?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Telegram Trigger</a></em> getting webhook data via the bot.</p><p>Create the Trigger node by clicking on the '<strong><em>+</em></strong>' button on the top right of the screen. Select the <em>Telegram Trigger</em> node under the <strong><em>Trigger</em></strong> nodes menu to create the node.</p><p>Now you‚Äôll have to configure this node. First of all, we have to add the credentials for the Telegram API and give the <em>Telegram Trigger</em> node access to that. If you forgot to copy the API token, go to the BotFather chat window and retrieve it from there. Add a new credential by clicking on <strong><em>Create New</em></strong> under the <strong><em>Credentials</em></strong> section of the node.</p><p>After that, you‚Äôll need to configure that the node gets triggered every time a message is sent to the bot. To do that, select the option ‚Äòmessage‚Äô for the <strong><em>Updates</em></strong> field. Lastly, click on <strong><em>Execute Node</em></strong> on the top right of the dialog box. And voil√†, our <em>Telegram Trigger</em> node is ready.</p><p>Here‚Äôs a video of me following the steps above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/7J58ppyxbOo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a Telegram Trigger node</figcaption></figure><h2 id=\"creating-a-weather-node-on-n8n\">Creating a weather node on n8n</h2><p>Now it‚Äôs the time to add the <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.openWeatherMap?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">OpenWeatherMap</a></em> node. This node will pull in the weather information for our bot.</p><p>To do that, click on the '<strong><em>+</em></strong>' button on the top right of the screen and select the <em>OpenWeatherMap</em> node. We again need to add the credentials for the API. To get the API key for OpenWeatherMap, you‚Äôll need to register for a free account and you‚Äôll find your API keys <a href=\"https://home.openweathermap.org/api_keys?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">here</a>. Once, you have the key, create a new credential just like you did for the <em>Telegram Trigger</em> node.</p><p>For me, the node‚Äôs default settings were ideal. I just added <code>berlin,de</code> as the city. You can check the code for your city <a href=\"https://openweathermap.org/find?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">here</a>. Finally, click on create <strong><em>Execute Node</em></strong> and we are ready!</p><p>Here‚Äôs a video of me following the steps above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/WIP0jfNI7fE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a weather node</figcaption></figure><h2 id=\"creating-a-telegram-node-on-n8n\">Creating a Telegram node on n8n</h2><p>First, you should save your workflow by clicking on ‚ÄòSave as‚Äô under the <strong><em>Workflow</em></strong> menu on the top left. Toggle <strong><em>Active</em></strong> to <code>true</code>.</p><p>Now, send a message to the bot and you‚Äôll see that it will be received by the trigger.</p><p>Our final component is adding a Telegram node that will send a message with the weather details back to the person who queried it.</p><p>Add a <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.telegram/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Telegram</a></em> node like you added the nodes before. Before moving on to configure the node, make sure that you connect it to the <em>OpenWeatherMap</em> node before continuing. This will ensure that the node receives the data from the <em>Telegram Trigger</em> and <em>OpenWeatherMap</em> node for setting the configuration.</p><p>Now it‚Äôs time to configure the node. We already have the Telegram credentials that we entered early on and they can be re-used. Once you have selected the credentials, click on the pencil icon next to the credentials and make sure that you move the <em>Telegram</em> node from <strong><em>No Access</em></strong> column on the left to the <strong><em>Access</em></strong> column on the right. Once you are done with that, it should look like this.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/03/credentials.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"760\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/03/credentials.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/03/credentials.png 1000w, https://blog.n8n.io/content/images/size/w1600/2021/03/credentials.png 1600w, https://blog.n8n.io/content/images/2021/03/credentials.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Giving Telegram credentials access to the Telegram&nbsp;node</figcaption></figure><p>You have two fields left to configure now: <em><strong>Chat ID</strong></em> and <strong><em>Text</em></strong>. Since we need to send the message to the person who queried the bot, we can get their chat ID from the <strong><em>Telegram Trigger</em></strong> node. Since this is a dynamic piece of information, we‚Äôll click on the gears icon next to the <strong><em>Chat ID</em></strong> field to add <a href=\"https://docs.n8n.io/?ref=blog.n8n.io#/node-basics?id=expressions\" rel=\"noopener\" target=\"_blank\">expressions</a>. There you can select:</p><p><code>Nodes &gt; Telegram Trigger &gt; Output Data &gt; JSON &gt; message &gt; chat &gt; id</code></p><p>For the <strong><em>Text</em></strong> field, since we need to add more dynamic information again, we‚Äôll select the output from the <em>OpenWeatherMap</em> in a similar way:</p><p><code>Current Node &gt; Input Data &gt; JSON &gt; main &gt; temp</code></p><p>This will give us the current temperature reading. Finally, click on create <strong><em>Execute Node</em></strong>, which will make the bot send a message to you on Telegram.</p><p>Here‚Äôs a video of me following the steps above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/4dy2t_gBXCo?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a Telegram node</figcaption></figure><p>I recommend you to play around with the different output values from the node to create your own message. I ended up adding the following expression for the <em><strong>Text</strong></em> field:</p><pre><code>Right now, we have {{$json[\"weather\"][0][\"description\"]}}. The temperature is {{$json[\"main\"][\"temp\"]}} ¬∞C but it really feels like {{$json[\"main\"][\"feels_like\"]}} ¬∞C üôÇ</code></pre><p>Now, when I go back to my Telegram app, it runs like this.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 74.9064%;\"><iframe width=\"267\" height=\"200\" src=\"https://www.youtube.com/embed/b7P9dlb-W9g?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>End result of the Telegram weather bot</figcaption></figure><p>Once your workflow is saved, you can activate it by toggling the button marked <strong><em>Active</em></strong> on the top right. The bot will continue to work as long as the workflow is active on your computer.</p><h2 id=\"next-steps\">Next Steps</h2><p>This tutorial contained a Telegram bot powered with a basic n8n workflow. n8n has tons of integrations that can simply enable very complex workflows. As a next exercise, you can also look into getting daily dashboard data from maybe <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.googleSheets?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Google Sheets</a> or <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.airtable?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Airtable</a>. You can create another command and add an <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.if?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"><em>IF</em></a> or <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.switch?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Switch</a></em> node in front of the <em>Telegram Trigger</em> node to handle different commands. You can also look into how you can create your own nodes <a href=\"https://docs.n8n.io/?ref=blog.n8n.io#/create-node\" rel=\"noopener\" target=\"_blank\">here</a>.</p><p>Did you decide to create a different bot and used other nodes? Don‚Äôt forget to submit your workflow <a href=\"https://n8n.io/workflows?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">here</a>. You can find the workflow that I created for this tutorial <a href=\"https://n8n.io/workflows/346?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">here</a>.</p><h2 id=\"conclusion\">Conclusion</h2><p>Telegram Bots are fun to create and can open a gateway to quickly retrieve any kind of information. Designing the back-end of such bots requires knowledge of handling APIs and can be tough if you have just entered the world of programming or if you lack the time. Using no-code solutions like n8n makes it efficient to create the back-end workflow of such systems without having to delve deeper into the mechanics.</p><p>I‚Äôd be really excited to check out what you‚Äôve built using n8n! In case you‚Äôve run into an issue while following the tutorial, feel free to reach out to me on <a href=\"https://twitter.com/tanay1337?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Twitter</a> or ask for help on our <a href=\"https://community.n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">forum</a> üíô</p><p><em>Start automating!</em></p><p><em>The best part is, you can start automating for free with n8n. The easiest way to get started is to <a href=\"https://n8n.io/pricing?cloud=false&amp;ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">download the desktop app,</a> or sign up for a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a>. Thanks to n8n‚Äôs fair-code license, you can also <a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">self-host n8n for free</a>.</em></p>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-8yqm9bxhrtuw\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=e0jdy04v60f3\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=Creating%20Telegram%20bots%20with%20n8n%2C%20a%20no-code%20platform&amp;url=https://blog.n8n.io/creating-telegram-bots-with-n8n-a-no-code-platform/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/creating-telegram-bots-with-n8n-a-no-code-platform/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/creating-telegram-bots-with-n8n-a-no-code-platform/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "I am a big fan of [Telegram](https://telegram.org/?ref=blog.n8n.io) because of its great [bot-ecosystem](https://core.telegram.org/bots?ref=blog.n8n.io). I have been planning to make a bot for a while and have been looking for some nice workflow tools that can help me handle the back-end workflow of the bots visually. Recently, I started working with [n8n](https://n8n.io/?ref=blog.n8n.io), a [fair-code](https://faircode.io/?ref=blog.n8n.io) licensed tool that helps you automate tasks, sync data between various sources and react to events all via a visual workflow editor.\n\nIt‚Äôs springtime in Berlin and the weather is unpredictable. One day it‚Äôs 6¬∞C and the next day, it‚Äôs 21¬∞C ü§Ø A good first use-case for me would be to create a bot that can send me the weather information whenever I ask for it. In this tutorial, I will teach you how to create your very own Telegram weather bot with n8n (the workflow was built using n8n@0.111.0).\n\nTo accomplish this, we‚Äôll go through five steps:\n\n  1. Creating a bot on Telegram\n  2. Adding commands to the bot\n  3. Creating a Telegram trigger node on n8n\n  4. Creating a weather node on n8n\n  5. Creating a Telegram node on n8n\n\n\n\n## Creating a bot on Telegram\n\nYou can create a Telegram bot directly in the mobile app, on the web client or in the desktop app for your OS. I personally used the latter on macOS, because it allows for better visibility and control.\n\nTo create the Telegram bot, I downloaded the [Telegram application for macOS](https://macos.telegram.org/?ref=blog.n8n.io). However, you can also use the web client or the mobile app for this. We have to use the master of all bots that the team at Telegram created, aptly called BotFather. You can open a chat with BotFather by clicking [here](https://telegram.me/BotFather?ref=blog.n8n.io). You can get a list of all the commands that you can issue with `/help`.\n\nFirst of all, issue the `/newbot` command. It will ask you to name your bot. I named it ‚Äòn8n bot‚Äô, cause why not? You will then be asked to choose a username for the bot. This has to be a unique username that has to end in ‚Äòbot‚Äô. I went with `n8n_weather_bot`.\n\nThis process created my bot, gave me the link to access it (you can also search for your bot by the username that you gave it) and the API key that I‚Äôll need later. Just click on the API key to copy it to the clipboard. Here‚Äôs a video of me following the steps above.\n\nCreating a bot on Telegram\n\n## Adding commands to the bot\n\nLet‚Äôs create a command to our bot before adding some functionality to it. You can skip this section for the tutorial, if you‚Äôd like. However, if you plan to create more commands for the bot, later on, it might makes sense to try this on for size.\n\nTo set a new command for our bot, go to the BotFather chat window again. Issue the `/setcommands` command and you‚Äôll be asked to select the bot for which you want to set a command. Select the bot that you just created and enter a command in the suggested format. I went ahead and entered the following:\n\n`weather ‚Äî Tells you about the weather`\n\nHere‚Äôs a video of me setting a command for my bot.\n\nAdding commands to the Telegram bot\n\nNow, if you go back to the bot that you created and start typing ‚Äò/‚Äô, it will show you the list of commands that you have prepared for the bot. Very well, now that we have a bot and a command, it‚Äôs time to add some functionality to the bot.\n\n## Creating a Telegram trigger node on n8n\n\nOur bot needs a back-end. To get started with creating the back-end of the bot, you‚Äôll need access to n8n. You can sign-up for a [free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io) to get early access to our hosted service. Alternatively, install n8n using [npm](https://www.npmjs.com/?ref=blog.n8n.io) with the following command:\n\n`npm install n8n -g`\n\nYou can also run n8n using [Docker](https://github.com/n8n-io/n8n/blob/master/docker/images/n8n/README.md?ref=blog.n8n.io#start-n8n-in-docker). In this case, once you have installed n8n, you can start it using the following command:\n\n`n8n start --tunnel`\n\nWe started n8n using the `--tunnel` parameter to be able to use webhooks trigger from Telegram as it has to be reachable from the web. To learn more about this, check out the [documentation](https://github.com/n8n-io/n8n/blob/master/docker/images/n8n/README.md?ref=blog.n8n.io#start-with-tunnel).\n\nType ‚Äúo‚Äù in the terminal to open the Editor UI.\n\n![](https://blog.n8n.io/content/images/2021/03/editor.png)Editor UI of n8n\n\nLet us now create a [Trigger node](https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#trigger), which starts a workflow when the [webhook](https://docs.n8n.io/reference/glossary.html?ref=blog.n8n.io#webhook) gets some data. In our case, it is the _[Telegram Trigger](https://docs.n8n.io/nodes/n8n-nodes-base.telegramTrigger?ref=blog.n8n.io)_ getting webhook data via the bot.\n\nCreate the Trigger node by clicking on the '**_+_** ' button on the top right of the screen. Select the _Telegram Trigger_ node under the **_Trigger_** nodes menu to create the node.\n\nNow you‚Äôll have to configure this node. First of all, we have to add the credentials for the Telegram API and give the _Telegram Trigger_ node access to that. If you forgot to copy the API token, go to the BotFather chat window and retrieve it from there. Add a new credential by clicking on **_Create New_** under the **_Credentials_** section of the node.\n\nAfter that, you‚Äôll need to configure that the node gets triggered every time a message is sent to the bot. To do that, select the option ‚Äòmessage‚Äô for the **_Updates_** field. Lastly, click on **_Execute Node_** on the top right of the dialog box. And voil√†, our _Telegram Trigger_ node is ready.\n\nHere‚Äôs a video of me following the steps above.\n\nCreating a Telegram Trigger node\n\n## Creating a weather node on n8n\n\nNow it‚Äôs the time to add the _[OpenWeatherMap](https://docs.n8n.io/nodes/n8n-nodes-base.openWeatherMap?ref=blog.n8n.io)_ node. This node will pull in the weather information for our bot.\n\nTo do that, click on the '**_+_** ' button on the top right of the screen and select the _OpenWeatherMap_ node. We again need to add the credentials for the API. To get the API key for OpenWeatherMap, you‚Äôll need to register for a free account and you‚Äôll find your API keys [here](https://home.openweathermap.org/api_keys?ref=blog.n8n.io). Once, you have the key, create a new credential just like you did for the _Telegram Trigger_ node.\n\nFor me, the node‚Äôs default settings were ideal. I just added `berlin,de` as the city. You can check the code for your city [here](https://openweathermap.org/find?ref=blog.n8n.io). Finally, click on create **_Execute Node_** and we are ready!\n\nHere‚Äôs a video of me following the steps above.\n\nCreating a weather node\n\n## Creating a Telegram node on n8n\n\nFirst, you should save your workflow by clicking on ‚ÄòSave as‚Äô under the **_Workflow_** menu on the top left. Toggle **_Active_** to `true`.\n\nNow, send a message to the bot and you‚Äôll see that it will be received by the trigger.\n\nOur final component is adding a Telegram node that will send a message with the weather details back to the person who queried it.\n\nAdd a _[Telegram](https://docs.n8n.io/nodes/n8n-nodes-base.telegram/?ref=blog.n8n.io)_ node like you added the nodes before. Before moving on to configure the node, make sure that you connect it to the _OpenWeatherMap_ node before continuing. This will ensure that the node receives the data from the _Telegram Trigger_ and _OpenWeatherMap_ node for setting the configuration.\n\nNow it‚Äôs time to configure the node. We already have the Telegram credentials that we entered early on and they can be re-used. Once you have selected the credentials, click on the pencil icon next to the credentials and make sure that you move the _Telegram_ node from **_No Access_** column on the left to the **_Access_** column on the right. Once you are done with that, it should look like this.\n\n![](https://blog.n8n.io/content/images/2021/03/credentials.png)Giving Telegram credentials access to the Telegram node\n\nYou have two fields left to configure now: _**Chat ID**_ and **_Text_**. Since we need to send the message to the person who queried the bot, we can get their chat ID from the **_Telegram Trigger_** node. Since this is a dynamic piece of information, we‚Äôll click on the gears icon next to the **_Chat ID_** field to add [expressions](https://docs.n8n.io/?ref=blog.n8n.io#/node-basics?id=expressions). There you can select:\n\n`Nodes > Telegram Trigger > Output Data > JSON > message > chat > id`\n\nFor the **_Text_** field, since we need to add more dynamic information again, we‚Äôll select the output from the _OpenWeatherMap_ in a similar way:\n\n`Current Node > Input Data > JSON > main > temp`\n\nThis will give us the current temperature reading. Finally, click on create **_Execute Node_** , which will make the bot send a message to you on Telegram.\n\nHere‚Äôs a video of me following the steps above.\n\nCreating a Telegram node\n\nI recommend you to play around with the different output values from the node to create your own message. I ended up adding the following expression for the _**Text**_ field:\n    \n    \n    Right now, we have {{$json[\"weather\"][0][\"description\"]}}. The temperature is {{$json[\"main\"][\"temp\"]}} ¬∞C but it really feels like {{$json[\"main\"][\"feels_like\"]}} ¬∞C üôÇ\n\nNow, when I go back to my Telegram app, it runs like this.\n\nEnd result of the Telegram weather bot\n\nOnce your workflow is saved, you can activate it by toggling the button marked **_Active_** on the top right. The bot will continue to work as long as the workflow is active on your computer.\n\n## Next Steps\n\nThis tutorial contained a Telegram bot powered with a basic n8n workflow. n8n has tons of integrations that can simply enable very complex workflows. As a next exercise, you can also look into getting daily dashboard data from maybe [Google Sheets](https://docs.n8n.io/nodes/n8n-nodes-base.googleSheets?ref=blog.n8n.io) or [Airtable](https://docs.n8n.io/nodes/n8n-nodes-base.airtable?ref=blog.n8n.io). You can create another command and add an [_IF_](https://docs.n8n.io/nodes/n8n-nodes-base.if?ref=blog.n8n.io) or _[Switch](https://docs.n8n.io/nodes/n8n-nodes-base.switch?ref=blog.n8n.io)_ node in front of the _Telegram Trigger_ node to handle different commands. You can also look into how you can create your own nodes [here](https://docs.n8n.io/?ref=blog.n8n.io#/create-node).\n\nDid you decide to create a different bot and used other nodes? Don‚Äôt forget to submit your workflow [here](https://n8n.io/workflows?ref=blog.n8n.io). You can find the workflow that I created for this tutorial [here](https://n8n.io/workflows/346?ref=blog.n8n.io).\n\n## Conclusion\n\nTelegram Bots are fun to create and can open a gateway to quickly retrieve any kind of information. Designing the back-end of such bots requires knowledge of handling APIs and can be tough if you have just entered the world of programming or if you lack the time. Using no-code solutions like n8n makes it efficient to create the back-end workflow of such systems without having to delve deeper into the mechanics.\n\nI‚Äôd be really excited to check out what you‚Äôve built using n8n! In case you‚Äôve run into an issue while following the tutorial, feel free to reach out to me on [Twitter](https://twitter.com/tanay1337?ref=blog.n8n.io) or ask for help on our [forum](https://community.n8n.io/?ref=blog.n8n.io) üíô\n\n _Start automating!_\n\n_The best part is, you can start automating for free with n8n. The easiest way to get started is to[download the desktop app,](https://n8n.io/pricing?cloud=false&ref=blog.n8n.io) or sign up for a [free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io). Thanks to n8n‚Äôs fair-code license, you can also [self-host n8n for free](https://docs.n8n.io/hosting/?ref=blog.n8n.io)._\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=Creating%20Telegram%20bots%20with%20n8n%2C%20a%20no-code%20platform&url=https://blog.n8n.io/creating-telegram-bots-with-n8n-a-no-code-platform/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/creating-telegram-bots-with-n8n-a-no-code-platform/)\n",
  "crawled_at": "2025-05-28T11:01:37.492604"
}