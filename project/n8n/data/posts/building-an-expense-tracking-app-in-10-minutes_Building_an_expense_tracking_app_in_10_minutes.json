{
  "url": "https://blog.n8n.io/building-an-expense-tracking-app-in-10-minutes/",
  "title": "Building an expense tracking app in 10 minutes",
  "excerpt": "If you're struggling with managing expenses like me, and if you want to build your custom app, follow along with this article.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2021/01/1-LU6439lmuKawTvBMf3Uyzw-1.jpg",
  "tags": [
    "Tutorial"
  ],
  "html": "<p>I tried various ways in the past to keep a record of my expenses. It started with maintaining a record in a book. But this wasnâ€™t an ideal solution and involved manual work. I tried using everyoneâ€™s favoriteâ€Šâ€”â€Šspreadsheets, but it failed me. I still had to manually enter the information of my expenses. I also tried various apps, but none of them catered to my needs. They all lacked the option to customize the way I wanted to upload the information.</p><h3 id=\"i-built-an-app-\"><strong>I built an app!</strong></h3><p>I came across the article <a href=\"https://medium.com/n8n-io/automatically-adding-expense-receipts-to-google-sheets-with-telegram-mindee-twilio-and-n8n-c47eb2f8d7a5?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Automatically Adding Expense Receipts to Google Sheets with Telegram, Mindee, Twilio, and n8n ðŸ§¾</a> that showed how to build a Telegram bot to track expenses. This article inspired me to create an app for managing my expenditures. But creating a mobile app would mean designing the user interface of the app and transforming the design into a functional app. This was going to be a long process, and I was looking for a less complicated and faster solution, and that is when I learnt about <a href=\"https://www.bravostudio.app/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Bravo Studio</a>. With Bravo Studio, you can convert your <a href=\"https://www.figma.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Figma</a> designs into a mobile app. I had never used a no-code platform to build a mobile app, and Bravo Studio piqued my interest.</p><p>I ended up creating an app that captures the image of a receipt and stores the information parsed from it in <a href=\"http://airtable.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Airtable</a>. I am now storing my data in my Airtable account, and I can use it the way I want. I would also have the flexibility to add more features that I might need in the future.</p><p>If youâ€™re struggling with managing expenses like me, and if you want to build your custom app, follow along with this article.</p><p>In this article, we will learn to build an expense tracker app using no-code tools and platforms. We will start by designing our application in <a href=\"https://www.figma.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Figma</a> and converting it into an app using <a href=\"https://www.bravostudio.app/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Bravo Studio</a>. We will use <a href=\"https://www.typeform.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Typeform</a> to collect the images of the receipts, <a href=\"https://mindee.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Mindee</a> to extract the information from the receipts, and <a href=\"http://airtable.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Airtable</a> to store all the information. We will use <a href=\"https://n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">n8n</a> to connect these different services and make the app functional.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/zzqMt80B4CU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Building an app with Bravo Studio and n8n</figcaption></figure><h2 id=\"prerequisites\">Prerequisites</h2><h3 id=\"figma\">Figma</h3><p>Figma is a prototyping tool. We will use Figma to design the user interface of our application. If you donâ€™t have an account on Figma, go ahead and <a href=\"https://figma.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">create one</a>.</p><h3 id=\"bravo-studio\">Bravo Studio</h3><p>Bravo Studio is a no-code tool to build native applications. We will use Bravo Studio to transform our Figma design into a mobile app. <a href=\"https://projects.bravostudio.app/signup?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Create an account</a> on Bravo Studio if you donâ€™t have one. To test our application on a real device we will use <a href=\"https://www.bravostudio.app/download-bravo-vision?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Bravo Vision</a>.</p><h3 id=\"typeform\">Typeform</h3><p>Our application needs an input field that will allow the users to upload images, as well as trigger our n8n workflow. We will use Typeform to handle that. <a href=\"https://admin.typeform.com/signup?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Create an account</a> on Typeform and make a form with the question type â€˜File Uploadâ€™.</p><p><strong>Note:</strong> You need to have a premium account on Typefrom to access the â€˜File Uploadâ€™ question type. If you donâ€™t have a premium account, use the code <code>n8nxTypeform_2021</code> to get free access for a month.</p><h3 id=\"mindee\">Mindee</h3><p>Once we have the image of the receipt, we need a service to extract the information from it. We will use Mindee to extract information like merchant name, amount, date of purchase, etc. from the image. You will need an <a href=\"https://platform.mindee.net/signup?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">account</a> on Mindee to access the Expense Receipts API.</p><h3 id=\"airtable\">Airtable</h3><p>Our app will use Airtable as the database to store and retrieve information from. We will need an <a href=\"https://airtable.com/invite/r/J8pSjpKY?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Airtable account</a> to create a base and connect it with Bravo Studio. Sign in to your Airtable account and open <a href=\"https://airtable.com/shrKmqHWcl3APJFlp?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">this base</a>. Click on the <strong><em>Copy base</em></strong> button on the top right corner to copy the base in your account.</p><p><strong>Note:</strong> If you change the name of the columns, or the name of the Table, make sure to make the changes in the n8n workflow accordingly.</p><h3 id=\"n8n\">n8n</h3><p>Our application is using different services like Typeform, Mindee and Airtable. n8n will connect these services together and make our app functional. Follow the instructions mentioned in the <a href=\"https://docs.n8n.io/try-it-out/quickstart/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">documentation</a> to install and spin-up an n8n instance on your machine. You can also sign-up for a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a> to get access to the hosted service.</p><p>This workflow was built using n8n version 0.101.0.</p><h2 id=\"quickstart\">Quickstart</h2><p>We often tend to jump to the results before committing to the steps of the experiment if we are aware of the subject. If you already know how to work with Bravo Studio and n8n, you can follow the quick-start instructions below to get to the endgame. If something is unclear or you want to learn more about how it works, feel free to dig deeper into the sections that follow.</p><h3 id=\"typeform-1\">Typeform</h3><ul><li>Create a form in Typeform with the question type â€˜File Uploadâ€™.</li><li>Enter <code>Upload Receipt</code> in the text box where it indicates â€˜Type question hereâ€¦â€™.</li><li>Publish the Typeform and copy the link under the â€˜SHAREâ€™ tab.</li></ul><h3 id=\"figma-1\">Figma</h3><ul><li>To duplicate <a href=\"https://www.figma.com/file/w74DevtsNH1TenkwVRqQEH/Expense-Tracker?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">this Figma Design</a> open it in a new tab.</li><li>Click on the down chevron next to <strong><em>Expense Tracker</em></strong> and select â€˜Duplicate to your Draftsâ€™ from your dropdown list.</li><li>Replace â€˜TYPEFORM-LINKâ€™ in <code>Add Receipts Data &gt; Typeform Container &gt; Rectangle[component:web-view:TYPEFORM-LINK]</code> with your formâ€™s link.</li></ul><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-5RJD-qne2N509q3t.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"954\" height=\"266\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-5RJD-qne2N509q3t.png 600w, https://blog.n8n.io/content/images/2021/01/0-5RJD-qne2N509q3t.png 954w\" sizes=\"(min-width: 720px) 720px\"></figure><h3 id=\"n8n-1\">n8n</h3><p><a href=\"https://docs.n8n.io/try-it-out/quickstart/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Install</a> n8n, and copy and paste the workflow from the <a href=\"https://n8n.io/workflows/741?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">workflow</a> page. Configure the credentials for the following nodes:</p><ul><li>Typeform Trigger node (<em>Get Receipt</em>): <a href=\"https://docs.n8n.io/credentials/typeform/?ref=blog.n8n.io#using-access-token\" rel=\"noopener\" target=\"_blank\"><em>configure Access Token credentials</em></a> and make sure to select your form from the <strong><em>Form</em></strong> dropdown list.</li><li>Mindee node (<em>Extract Information</em>): <a href=\"https://docs.n8n.io/credentials/mindee?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\"><em>configure credentials</em></a><em> </em>for the <strong><em>Expense Receipts API.</em></strong></li><li>Airtable node (<em>Store Information</em>): <a href=\"https://docs.n8n.io/credentials/airtable?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\"><em>configure credentials</em></a> and enter the <a href=\"https://airtable.com/api?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">application id</a> and the table name in the <em><strong>Base</strong></em> <strong><em>ID</em></strong> and <strong><em>Table</em></strong> field respectively.</li></ul><p>Save the workflow and set it to active.</p><h3 id=\"bravo-studio-1\">Bravo Studio</h3><ul><li>Create an app in Bravo Studio by importing the Figma design from step 2.</li><li>Add Airtable as a data library in Bravo Studio. You can follow the instructions mentioned in the official <a href=\"https://www.bravostudio.app/integrations/airtable?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">documentation</a>.</li><li>Bind the data from your Airtable base to your Bravo Studio app. You can learn how to do that from the <a href=\"https://docs.bravostudio.app/bravo-studio-help-center/connnec-api/data-library-connecting-to-apis/data-biding-bind-data-to-ui-for-a-list-page?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">documentation</a> of Bravo Studio.</li></ul><p><strong><em>NOTE</em></strong>: If you were successfully able to follow the steps mentioned above, you can jump directly to the <strong><em>Testing the Application</em></strong> section before going through the conceptual sections.</p><h2 id=\"creating-the-user-interface\">Creating the User Interface</h2><p>To add the expense in our app, a user will upload an image of the receipt. We will use a Typeform form to get the image of the receipt from the user. Create a form in Typeform with the question type â€˜File Uploadâ€™. Publish the Typeform and copy the link under the â€˜SHAREâ€™ tab. We will use this link in Figma to embed the form.</p><p>We want to create an app with our custom design and functionality. We will use Figma to design the prototype of the app. Below is the screenshot of the appâ€™s design created in Figma.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-CzdGvWSTuPVboOTr.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1400\" height=\"805\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-CzdGvWSTuPVboOTr.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-CzdGvWSTuPVboOTr.png 1000w, https://blog.n8n.io/content/images/2021/01/0-CzdGvWSTuPVboOTr.png 1400w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Creating the appâ€™s design in Figma</figcaption></figure><p>Our app will have three screens:</p><ol><li>A welcome screen which gives the user an option to either add a new receipt or view the stored receipts.</li><li>An â€˜Add Receipt Dataâ€™ screen that will allow the user to upload new receipts using the form we created in Typeform.</li><li>A â€˜Review Added Receiptsâ€™ screen to view all the receipts added by the user.</li></ol><p>The design that we create in Figma should be compatible with Bravo Studio. To design a Bravo Studio app in Figma there are a few things to consider:</p><ol><li><a href=\"https://docs.bravostudio.app/bravo-studio-help-center/learn-and-create/setting-up-your-design-file/setting-up-your-figma-file/the-container?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Containerize your design</a>: To make our Figma app design adaptable in Bravo Studio, wrap the layers in containers. These containers are frames that divide an app screen into separate blocks based on the intended behavior of the design. In our app, we will need to create the following containers:</li></ol><ul><li><strong>Main Container</strong>: The <strong><em>Welcome Screen</em></strong> contains a container that consists of all the layers and the â€˜App Buttonsâ€™ container.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-9wEdGtjyvwr0xU3P.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1400\" height=\"1403\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-9wEdGtjyvwr0xU3P.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-9wEdGtjyvwr0xU3P.png 1000w, https://blog.n8n.io/content/images/2021/01/0-9wEdGtjyvwr0xU3P.png 1400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Creating the Main Container</em></figcaption></figure><ul><li><strong>App Buttons</strong>: This container consists of the â€˜Add new receiptâ€™ and â€˜My receiptsâ€™ button on the <strong><em>Welcome Screen</em></strong>.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-O8L5HeLQAFnivtdD.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1400\" height=\"822\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-O8L5HeLQAFnivtdD.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-O8L5HeLQAFnivtdD.png 1000w, https://blog.n8n.io/content/images/2021/01/0-O8L5HeLQAFnivtdD.png 1400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Creating the App Buttons container</em></figcaption></figure><ul><li><strong>Top navigation</strong>: We need a container that helps us navigate back to the welcome screen. The Top navigation container will contain an image for the back button and the title of the screen. We will add this container to the <strong><em>Add Receipt Data</em></strong> screen and the <strong><em>Review Added Receipts</em></strong> screen.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-r9CHDNvLghr5CxRm.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1400\" height=\"582\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-r9CHDNvLghr5CxRm.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-r9CHDNvLghr5CxRm.png 1000w, https://blog.n8n.io/content/images/2021/01/0-r9CHDNvLghr5CxRm.png 1400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Creating the Top navigation container</em></figcaption></figure><ul><li><strong>Typeform Container</strong>: The Typeform Container contains a rectangle layer that will render the Typeform. We will add this container to the â€˜Add new receiptâ€™ screen.</li></ul><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-RdFIl2pEPTqSMRJE.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1386\" height=\"1314\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-RdFIl2pEPTqSMRJE.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-RdFIl2pEPTqSMRJE.png 1000w, https://blog.n8n.io/content/images/2021/01/0-RdFIl2pEPTqSMRJE.png 1386w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Creating the Typeform container</em></figcaption></figure><p>2. *List: This container consists of the layers that will render the receipts information such as the merchant name, amount, date, time, category, and image of the receipt. We will add this container to the â€˜My receiptsâ€™ screen.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-5HJfkL2t99trUueW.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1400\" height=\"774\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-5HJfkL2t99trUueW.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-5HJfkL2t99trUueW.png 1000w, https://blog.n8n.io/content/images/2021/01/0-5HJfkL2t99trUueW.png 1400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><em>Creating the *List container</em></figcaption></figure><p>3. Use <a href=\"https://www.notion.so/Bravo-Tags-Master-List-145bec845f0b4afaa9e3bb8321b218a8?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Bravo Tags</a>: A Bravo Tag is a text string that converts the layer into a mobile component. For each container and layer, you want to convert to a mobile component, use the appropriate Bravo Tags. In our design, we will use the <a href=\"https://docs.bravostudio.app/bravo-studio-help-center/bravo-tags/interactive-component/component-webview?ref=blog.n8n.io#the-tag\" target=\"_blank\" rel=\"noopener\">[component:web-view:URL]</a> tag to embed the Typeform in the <em>Typeform Container</em>. Replace â€˜URLâ€™ with the URL of the Typeform you created earlier.</p><p><strong>Note:<em> </em></strong>The name of the List container and the layers inside the container starts with an asterisk (*). Bravo Studio recognizes such containers and layers as a list.</p><p>After designing the application in Figma, the next step is to use this design in Bravo Studio to create a native application. In Bravo Studio, click on the <strong><em>Import Figma File</em></strong> button and copy and paste the link of your Figma design in the input field to create a new project.</p><p>Congratulations! The user-interface of your application is ready.</p><h2 id=\"connecting-with-airtable\">Connecting with Airtable</h2><p>In Bravo Studio we can use a custom API or Airtable to connect our application with a database. The application we built uses Airtable as the database. Hence, we will connect Airtable with our application.</p><p>In Bravo Studio, add a new data collection by clicking the â€˜+ New Collectionâ€™ button on the Data Library page. Select Airtable, and follow the instructions as shown in the video, in the Airtable API Wizard, enter the base URL and your Airtable API Key. You can learn more about <em>Using the Airtable API Wizard</em> from the documentation <a href=\"https://www.notion.so/Using-the-Airtable-API-Wizard-f2e75dde9f13419f93661a9e116c1ac3?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">here</a>.</p><p>Click on <strong><em>Advanced view</em></strong> and make a GET request for â€˜Expensesâ€Šâ€”â€ŠListâ€™. Select â€˜Allâ€™ from the data.records[] dropdown list in the <strong><em>Response Data</em></strong> section.</p><p>Navigate to the â€˜Projectsâ€™ page and select the app that we created. We will bind the data from the Airtable base with the respective components of the â€˜Review Added Receiptsâ€™ screen. Select the â€˜Review Added Receiptsâ€™ screen and select the â€˜Expenses Trackerâ€™ Airtable base. Select â€˜GET Expensesâ€Šâ€”â€ŠListâ€™ in the <strong><em>Select Request</em></strong> section of <strong><em>Data Binding</em></strong>. Select the <code>*List</code> component and select <code>Records</code> from the dropdown list below <strong><em>Get Expensesâ€Šâ€”â€ŠList</em></strong>. Expand the <code>*List</code> component and map each element to their corresponding field. You can learn more about this from the <a href=\"https://www.notion.so/Bind-data-to-UI-for-a-list-page-2cf8c91380124ddf8b84d303e1c3ca8a?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">documentation</a>.</p><p>The video below shows the steps to bind the data to components.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/6jxIq1lQW_8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Connecting Airtable with our app in Bravo Studio</figcaption></figure><h2 id=\"building-the-workflow\">Building the workflow</h2><p>Creating a backend for applications can get complicated when it comes to connecting different services together. You have to write functions to make API calls to each service, and pass information from one service to another in the proper format. But n8n makes it easy to create the backend and stitch different services together. You also get a visual representation that helps you in designing the application logic.</p><p>In n8n, you will use the following nodes to build the backend logic:</p><ol><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.typeformTrigger/?ref=blog.n8n.io#typeform-trigger\" rel=\"noopener\" target=\"_blank\">Typeform Trigger</a> node (Get Receipt)</li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.httpRequest/?ref=blog.n8n.io#http-request\" rel=\"noopener\" target=\"_blank\">HTTP Request</a> node (Get Image)</li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.mindee/?ref=blog.n8n.io#mindee\" rel=\"noopener\" target=\"_blank\">Mindee</a> node (Extract Information)</li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.set/?ref=blog.n8n.io#set\" rel=\"noopener\" target=\"_blank\">Set</a> node (Set Information)</li><li><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.airtable/?ref=blog.n8n.io#airtable\" rel=\"noopener\" target=\"_blank\">Airtable</a> node (Store Information)</li></ol><p>Our workflow will look like the image below.</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-Ckc3jg0WaYHkHfHZ.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"1400\" height=\"588\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-Ckc3jg0WaYHkHfHZ.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/01/0-Ckc3jg0WaYHkHfHZ.png 1000w, https://blog.n8n.io/content/images/2021/01/0-Ckc3jg0WaYHkHfHZ.png 1400w\" sizes=\"(min-width: 1200px) 1200px\"><figcaption>Completed workflow in n8n</figcaption></figure><h3 id=\"1-typeform-trigger-node-get-receipt-\">1. Typeform Trigger node (Get Receipt)</h3><p>The Typeform Trigger node will trigger the workflow whenever the user submits a new receipt. Add the Typeform Trigger node and configure the credentials by following the instructions in the documentation <a href=\"https://docs.n8n.io/credentials/typeform/?ref=blog.n8n.io#prerequisites\" rel=\"noopener\" target=\"_blank\">here</a>.</p><p>Select the form that you created for the application from the <strong><em>Form</em></strong> dropdown list.</p><p>Rename the node as <code>Get Receipt</code>, and save the workflow.</p><p>Click on the <strong><em>Execute Node</em></strong> button to execute the node. Upload an image of a receipt using the Typeform. You will notice that the Typeform Trigger node triggers the workflow when the form is submitted.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/DzF1JBU1k9A?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding the Typeform Trigger node for the Expense Tracker workflow</figcaption></figure><h3 id=\"2-http-request-node-get-image-\">2. HTTP Request node (Get Image)</h3><p>The HTTP Request node is used to make an HTTP request to APIs and websites. It can return data in JSON, String as well as Binary format. Add an HTTP Request node in n8n that will make a GET request to fetch the image we uploaded using the Typeform. In the URL parameter of the node, add the following expression: <code>{{$node[\"Get Receipt\"].json[\"Upload receipt\"]}}</code>. This expression will get the URL of the image that we uploaded using Typeform.</p><p>Select â€˜Fileâ€™ from the <strong><em>Response Format</em></strong> dropdown list and rename the node to <code>Get Image</code>. Click on <strong><em>Execute Node</em></strong> to run the node. In the output, you will notice that the node returns the image of the receipt.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/J_o9ThCtAfE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding the HTTP Request node for the Expense Tracker workflow</figcaption></figure><h3 id=\"3-mindee-node-extract-information-\">3. Mindee node (Extract Information)</h3><p>The Mindee API enables to extract information from an image and transform it into usable data. We will use the Mindee node in n8n to extract data from an image of a receipt. The node will extract the merchant name, the amount, the date and time the expense was incurred, and its category.</p><p>Add the Mindee node in the n8n workflow, and configure the credentials as mentioned in the <a href=\"https://docs.n8n.io/credentials/mindee/?ref=blog.n8n.io#prerequisites\" rel=\"noopener\" target=\"_blank\">documentation.</a></p><p>Rename the node to <code>Extract Information</code>, and click on <strong><em>Execute Node</em></strong> to run the node. You will notice that the node extracts the information from the image and transforms it into usable data that can be added to Airtable.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/fGkDLKit2Y0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding the Mindee node for the Expense Tracker workflow</figcaption></figure><h3 id=\"4-set-node-set-information-\">4. Set node (Set Information)</h3><p>The Set node allows us to set the workflow data. We will reference the data from the Mindee node and the Typeform Trigger node in the Set node and set the parameters.</p><p>Add the Set node in your n8n workflow and add the parameters with the following properties.</p><ul><li><strong>Amount</strong>: The type of this field should be <em>Number</em> and itâ€™s value should be <code>{{$node[\"Extract Information\"].json[\"total\"]</code></li><li><strong>Merchant</strong>: The type of this field should be <em>String</em> and itâ€™s value should be <code>{{$node[\"Extract Information\"].json[\"merchant\"]}}</code></li><li><strong>Date</strong>: The type of this field should be <em>String</em> and itâ€™s value should be <code>{{$node[\"Extract Information\"].json[\"date\"]}}</code></li><li><strong>Time</strong>: The type of this field should be <em>String</em> and itâ€™s value should be <code>{{$node[\"Extract Information\"].json[\"time\"]}}</code></li><li><strong>Receipt</strong> <strong>URL</strong>: The type of this field should be <em>String</em> and itâ€™s value should be <code>{{$node[\"Get Receipt\"].json[\"Upload receipt\"]}}</code></li><li><strong>Category</strong>: The type of this field should be <em>String</em> and itâ€™s value should be <code>{{$node[\"Extract Information\"].json[\"category\"]}}</code></li></ul><p><strong>Note:</strong> The value in the <strong><em>Name</em></strong> field should be the same as the column name of your Airtable base.</p><p>Toggle the <strong><em>Keep Only Set</em></strong> to <code>true</code>. This ensures that only the data that we set in this node gets passed on to the next nodes in the workflow. Click on the <strong><em>Execute Node </em></strong>button to run the node.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/olckiEY_JP0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding the Set node for the Expense Tracker workflow</figcaption></figure><h3 id=\"5-airtable-node-store-information-\">5. Airtable node (Store Information)</h3><p>Airtable is a spreadsheet-database hybrid, with the features of a database but applied to a spreadsheet. The Bravo Studio app will get the data from the Airtable base to display it to the user. But before connecting the app with Airtable, in the front-end, we need to connect Airtable with your backend.</p><p>The n8n workflow will store the data extracted by the Mindee node and the URL of the image in Airtable. Create a base in Airtable similar to this <a href=\"https://airtable.com/shrKmqHWcl3APJFlp?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">template base</a> if you havenâ€™t already created one.</p><p>In n8n, add the Airtable node and configure the credentials following the instructions mentioned <a href=\"https://docs.n8n.io/credentials/airtable/?ref=blog.n8n.io#prerequisites\" rel=\"noopener\" target=\"_blank\">here</a>. Select â€˜Appendâ€™ from the <strong><em>Operation</em></strong> dropdown list. To get the Application ID, go to <a href=\"https://airtable.com/api?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">https://airtable.com/api</a> and select the base. Copy and paste the ID in the <strong><em>Base ID</em></strong> field in n8n. Enter the name of your base in the <strong><em>Table</em></strong> field.</p><p>Click on <strong><em>Execute Node</em></strong> to run the node. On successful execution, you will notice that a new row gets added to your Airtable base.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/SXxwtQ8ShkU?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Adding the Airtable node for the Expense Tracker workflow</figcaption></figure><h2 id=\"testing-the-application\">Testing the application</h2><p>Congratulations! You have successfully built the application. Now let us test our application and see how it would work in the real world.</p><p>In n8n, on the top right corner, toggle <strong><em>Active</em></strong> to true. This will set our workflow to active and execute the workflow every time a new receipt is submitted to Typeform.</p><p>Open the Bravo Vision app on your device and select the Expense Tracker app. Click on the <strong><em>Add new receipt</em></strong> button and submit an image of the receipt.</p><p>If you donâ€™t have a receipt at hand now, feel free to use the following image of the receipt for testing.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-qqco5Y1mCAtm1vga.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"960\" height=\"1280\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-qqco5Y1mCAtm1vga.png 600w, https://blog.n8n.io/content/images/2021/01/0-qqco5Y1mCAtm1vga.png 960w\" sizes=\"(min-width: 720px) 720px\"><figcaption>A receipt for testing your workflow</figcaption></figure><p>You can see the new receipt and the information on the â€˜My Receiptsâ€™ screen.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/01/0-USKl2aoTNeDR2lmD.jpg\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"719\" height=\"632\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/01/0-USKl2aoTNeDR2lmD.jpg 600w, https://blog.n8n.io/content/images/2021/01/0-USKl2aoTNeDR2lmD.jpg 719w\"><figcaption>My Receipts page after adding the receipt</figcaption></figure><h2 id=\"what-s-next\">Whatâ€™s next?</h2><p>You can extend the workflow and send an email every time you add a new expense, using either the <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.emailSend/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Send Email</a> node or the <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.gmail/?ref=blog.n8n.io#gmail\" rel=\"noopener\" target=\"_blank\">Gmail</a> node. You can also use the <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.twilio/?ref=blog.n8n.io#twilio\" rel=\"noopener\" target=\"_blank\">Twilio</a> node or the <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.vonage/?ref=blog.n8n.io#vonage\" rel=\"noopener\" target=\"_blank\">Vonage</a> node to send an SMS when a new expense gets added.</p><p>You can also create a new workflow that will send you a weekly or monthly notification about the expenses you made during that period. This workflow can be built using the <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.cron/?ref=blog.n8n.io#cron\" rel=\"noopener\" target=\"_blank\">Cron</a> node to trigger the workflow weekly or monthly, the Airtable node to read the data, and the <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.function/?ref=blog.n8n.io#function\" rel=\"noopener\" target=\"_blank\">Function</a> node to calculate the sum of the expenses. To send a push notification, you can use the <a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.pushover/?ref=blog.n8n.io#pushover\" rel=\"noopener\" target=\"_blank\">Pushover</a> node.</p><h2 id=\"summary\">Summary</h2><p>In this article, you learned how to build an application. You learned to design an app in Figma that is compatible with Bravo Studio. You also created the front-end of the app using Bravo Studio. You stitched different services together using n8n to get the desired output. Lastly, you learned how to bind data to your app in Bravo Studio.</p><p>I plan to add more features to the app that will help me build a healthy habit of keeping track of my expenses and help me manage them.</p><p>Iâ€™d love to hear about how you extend the app using n8n! If you run into any issues while following the tutorial, feel free to me on <a href=\"https://twitter.com/harshil1712?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Twitter</a> or ask for help on our <a href=\"https://community.n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">forum</a> ðŸ§¡</p><p><em>Start automating!</em></p><p><em>The best part is, you can start automating for free with n8n. The easiest way to get started is to sign up for a <a href=\"https://n8n.io/pricing/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a>. Thanks to n8nâ€™s fair-code license, you can also </em><a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"><em>self-host n8n for free</em></a><em>.</em></p><h2 id=\"further-reading\">Further Reading</h2><p>If you would like to dig deeper and learn more about the topics discussed in the article, consult the following resources:</p><ul><li><a href=\"https://docs.bravostudio.app/bravo-studio-help-center/learn-and-create/setting-up-your-design-file/setting-up-your-figma-file?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Setting up your Figma File</a>: You can read more about making a Bravo Studio compatible Figma design on Bravo Studiosâ€™ official documentation.</li><li><a href=\"https://www.notion.so/Bravo-Tags-Master-List-145bec845f0b4afaa9e3bb8321b218a8?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Bravo Tags Master List</a>: Bravo Studio also has various other Bravo Tags that you can use to add more components to your app.</li><li><a href=\"https://docs.n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">n8n documentation</a>: Check out the official documentation of n8n for more tutorials and reference information</li><li><a href=\"https://n8n.io/integrations/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n integrations</a>: You can extend the functionality of your app by different nodes. Check out the list of all the integrations that n8n provides.</li><li><a href=\"https://n8n.io/workflows?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">n8n workflows</a>: n8n has an extensive library of workflows ready for you to use.</li><li><a href=\"https://medium.com/n8n-io/automatically-adding-expense-receipts-to-google-sheets-with-telegram-mindee-twilio-and-n8n-c47eb2f8d7a5?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Automatically Adding Expense Receipts to Google Sheets with Telegram, Mindee, Twilio, and n8n</a>: If you are interested in building a Telegram bot instead of the application, check out this article.</li></ul>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-dv3sbh7rhrrh\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=kytau3sk7w89\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=Building%20an%20expense%20tracking%20app%20in%2010%20minutes&amp;url=https://blog.n8n.io/building-an-expense-tracking-app-in-10-minutes/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/building-an-expense-tracking-app-in-10-minutes/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/building-an-expense-tracking-app-in-10-minutes/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "I tried various ways in the past to keep a record of my expenses. It started with maintaining a record in a book. But this wasnâ€™t an ideal solution and involved manual work. I tried using everyoneâ€™s favorite â€” spreadsheets, but it failed me. I still had to manually enter the information of my expenses. I also tried various apps, but none of them catered to my needs. They all lacked the option to customize the way I wanted to upload the information.\n\n### **I built an app!**\n\nI came across the article [Automatically Adding Expense Receipts to Google Sheets with Telegram, Mindee, Twilio, and n8n ðŸ§¾](https://medium.com/n8n-io/automatically-adding-expense-receipts-to-google-sheets-with-telegram-mindee-twilio-and-n8n-c47eb2f8d7a5?ref=blog.n8n.io) that showed how to build a Telegram bot to track expenses. This article inspired me to create an app for managing my expenditures. But creating a mobile app would mean designing the user interface of the app and transforming the design into a functional app. This was going to be a long process, and I was looking for a less complicated and faster solution, and that is when I learnt about [Bravo Studio](https://www.bravostudio.app/?ref=blog.n8n.io). With Bravo Studio, you can convert your [Figma](https://www.figma.com/?ref=blog.n8n.io) designs into a mobile app. I had never used a no-code platform to build a mobile app, and Bravo Studio piqued my interest.\n\nI ended up creating an app that captures the image of a receipt and stores the information parsed from it in [Airtable](http://airtable.com/?ref=blog.n8n.io). I am now storing my data in my Airtable account, and I can use it the way I want. I would also have the flexibility to add more features that I might need in the future.\n\nIf youâ€™re struggling with managing expenses like me, and if you want to build your custom app, follow along with this article.\n\nIn this article, we will learn to build an expense tracker app using no-code tools and platforms. We will start by designing our application in [Figma](https://www.figma.com/?ref=blog.n8n.io) and converting it into an app using [Bravo Studio](https://www.bravostudio.app/?ref=blog.n8n.io). We will use [Typeform](https://www.typeform.com/?ref=blog.n8n.io) to collect the images of the receipts, [Mindee](https://mindee.com/?ref=blog.n8n.io) to extract the information from the receipts, and [Airtable](http://airtable.com/?ref=blog.n8n.io) to store all the information. We will use [n8n](https://n8n.io/?ref=blog.n8n.io) to connect these different services and make the app functional.\n\nBuilding an app with Bravo Studio and n8n\n\n## Prerequisites\n\n### Figma\n\nFigma is a prototyping tool. We will use Figma to design the user interface of our application. If you donâ€™t have an account on Figma, go ahead and [create one](https://figma.com/?ref=blog.n8n.io).\n\n### Bravo Studio\n\nBravo Studio is a no-code tool to build native applications. We will use Bravo Studio to transform our Figma design into a mobile app. [Create an account](https://projects.bravostudio.app/signup?ref=blog.n8n.io) on Bravo Studio if you donâ€™t have one. To test our application on a real device we will use [Bravo Vision](https://www.bravostudio.app/download-bravo-vision?ref=blog.n8n.io).\n\n### Typeform\n\nOur application needs an input field that will allow the users to upload images, as well as trigger our n8n workflow. We will use Typeform to handle that. [Create an account](https://admin.typeform.com/signup?ref=blog.n8n.io) on Typeform and make a form with the question type â€˜File Uploadâ€™.\n\n**Note:** You need to have a premium account on Typefrom to access the â€˜File Uploadâ€™ question type. If you donâ€™t have a premium account, use the code `n8nxTypeform_2021` to get free access for a month.\n\n### Mindee\n\nOnce we have the image of the receipt, we need a service to extract the information from it. We will use Mindee to extract information like merchant name, amount, date of purchase, etc. from the image. You will need an [account](https://platform.mindee.net/signup?ref=blog.n8n.io) on Mindee to access the Expense Receipts API.\n\n### Airtable\n\nOur app will use Airtable as the database to store and retrieve information from. We will need an [Airtable account](https://airtable.com/invite/r/J8pSjpKY?ref=blog.n8n.io) to create a base and connect it with Bravo Studio. Sign in to your Airtable account and open [this base](https://airtable.com/shrKmqHWcl3APJFlp?ref=blog.n8n.io). Click on the **_Copy base_** button on the top right corner to copy the base in your account.\n\n**Note:** If you change the name of the columns, or the name of the Table, make sure to make the changes in the n8n workflow accordingly.\n\n### n8n\n\nOur application is using different services like Typeform, Mindee and Airtable. n8n will connect these services together and make our app functional. Follow the instructions mentioned in the [documentation](https://docs.n8n.io/try-it-out/quickstart/?ref=blog.n8n.io) to install and spin-up an n8n instance on your machine. You can also sign-up for a [free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io) to get access to the hosted service.\n\nThis workflow was built using n8n version 0.101.0.\n\n## Quickstart\n\nWe often tend to jump to the results before committing to the steps of the experiment if we are aware of the subject. If you already know how to work with Bravo Studio and n8n, you can follow the quick-start instructions below to get to the endgame. If something is unclear or you want to learn more about how it works, feel free to dig deeper into the sections that follow.\n\n### Typeform\n\n  * Create a form in Typeform with the question type â€˜File Uploadâ€™.\n  * Enter `Upload Receipt` in the text box where it indicates â€˜Type question hereâ€¦â€™.\n  * Publish the Typeform and copy the link under the â€˜SHAREâ€™ tab.\n\n\n\n### Figma\n\n  * To duplicate [this Figma Design](https://www.figma.com/file/w74DevtsNH1TenkwVRqQEH/Expense-Tracker?ref=blog.n8n.io) open it in a new tab.\n  * Click on the down chevron next to **_Expense Tracker_** and select â€˜Duplicate to your Draftsâ€™ from your dropdown list.\n  * Replace â€˜TYPEFORM-LINKâ€™ in `Add Receipts Data > Typeform Container > Rectangle[component:web-view:TYPEFORM-LINK]` with your formâ€™s link.\n\n![](https://blog.n8n.io/content/images/2021/01/0-5RJD-qne2N509q3t.png)\n\n### n8n\n\n[Install](https://docs.n8n.io/try-it-out/quickstart/?ref=blog.n8n.io) n8n, and copy and paste the workflow from the [workflow](https://n8n.io/workflows/741?ref=blog.n8n.io) page. Configure the credentials for the following nodes:\n\n  * Typeform Trigger node (_Get Receipt_): [_configure Access Token credentials_](https://docs.n8n.io/credentials/typeform/?ref=blog.n8n.io#using-access-token) and make sure to select your form from the **_Form_** dropdown list.\n  * Mindee node (_Extract Information_): [_configure credentials_](https://docs.n8n.io/credentials/mindee?ref=blog.n8n.io) __ for the **_Expense Receipts API._**\n  * Airtable node (_Store Information_): [_configure credentials_](https://docs.n8n.io/credentials/airtable?ref=blog.n8n.io) and enter the [application id](https://airtable.com/api?ref=blog.n8n.io) and the table name in the _**Base**_ **_ID_** and **_Table_** field respectively.\n\n\n\nSave the workflow and set it to active.\n\n### Bravo Studio\n\n  * Create an app in Bravo Studio by importing the Figma design from step 2.\n  * Add Airtable as a data library in Bravo Studio. You can follow the instructions mentioned in the official [documentation](https://www.bravostudio.app/integrations/airtable?ref=blog.n8n.io).\n  * Bind the data from your Airtable base to your Bravo Studio app. You can learn how to do that from the [documentation](https://docs.bravostudio.app/bravo-studio-help-center/connnec-api/data-library-connecting-to-apis/data-biding-bind-data-to-ui-for-a-list-page?ref=blog.n8n.io) of Bravo Studio.\n\n\n\n**_NOTE_** : If you were successfully able to follow the steps mentioned above, you can jump directly to the **_Testing the Application_** section before going through the conceptual sections.\n\n## Creating the User Interface\n\nTo add the expense in our app, a user will upload an image of the receipt. We will use a Typeform form to get the image of the receipt from the user. Create a form in Typeform with the question type â€˜File Uploadâ€™. Publish the Typeform and copy the link under the â€˜SHAREâ€™ tab. We will use this link in Figma to embed the form.\n\nWe want to create an app with our custom design and functionality. We will use Figma to design the prototype of the app. Below is the screenshot of the appâ€™s design created in Figma.\n\n![](https://blog.n8n.io/content/images/2021/01/0-CzdGvWSTuPVboOTr.png)Creating the appâ€™s design in Figma\n\nOur app will have three screens:\n\n  1. A welcome screen which gives the user an option to either add a new receipt or view the stored receipts.\n  2. An â€˜Add Receipt Dataâ€™ screen that will allow the user to upload new receipts using the form we created in Typeform.\n  3. A â€˜Review Added Receiptsâ€™ screen to view all the receipts added by the user.\n\n\n\nThe design that we create in Figma should be compatible with Bravo Studio. To design a Bravo Studio app in Figma there are a few things to consider:\n\n  1. [Containerize your design](https://docs.bravostudio.app/bravo-studio-help-center/learn-and-create/setting-up-your-design-file/setting-up-your-figma-file/the-container?ref=blog.n8n.io): To make our Figma app design adaptable in Bravo Studio, wrap the layers in containers. These containers are frames that divide an app screen into separate blocks based on the intended behavior of the design. In our app, we will need to create the following containers:\n\n\n  * **Main Container** : The **_Welcome Screen_** contains a container that consists of all the layers and the â€˜App Buttonsâ€™ container.\n\n![](https://blog.n8n.io/content/images/2021/01/0-9wEdGtjyvwr0xU3P.png)_Creating the Main Container_\n\n  * **App Buttons** : This container consists of the â€˜Add new receiptâ€™ and â€˜My receiptsâ€™ button on the **_Welcome Screen_**.\n\n![](https://blog.n8n.io/content/images/2021/01/0-O8L5HeLQAFnivtdD.png)_Creating the App Buttons container_\n\n  * **Top navigation** : We need a container that helps us navigate back to the welcome screen. The Top navigation container will contain an image for the back button and the title of the screen. We will add this container to the **_Add Receipt Data_** screen and the **_Review Added Receipts_** screen.\n\n![](https://blog.n8n.io/content/images/2021/01/0-r9CHDNvLghr5CxRm.png)_Creating the Top navigation container_\n\n  * **Typeform Container** : The Typeform Container contains a rectangle layer that will render the Typeform. We will add this container to the â€˜Add new receiptâ€™ screen.\n\n![](https://blog.n8n.io/content/images/2021/01/0-RdFIl2pEPTqSMRJE.png)_Creating the Typeform container_\n\n2\\. *List: This container consists of the layers that will render the receipts information such as the merchant name, amount, date, time, category, and image of the receipt. We will add this container to the â€˜My receiptsâ€™ screen.\n\n![](https://blog.n8n.io/content/images/2021/01/0-5HJfkL2t99trUueW.png)_Creating the *List container_\n\n3\\. Use [Bravo Tags](https://www.notion.so/Bravo-Tags-Master-List-145bec845f0b4afaa9e3bb8321b218a8?ref=blog.n8n.io): A Bravo Tag is a text string that converts the layer into a mobile component. For each container and layer, you want to convert to a mobile component, use the appropriate Bravo Tags. In our design, we will use the [[component:web-view:URL]](https://docs.bravostudio.app/bravo-studio-help-center/bravo-tags/interactive-component/component-webview?ref=blog.n8n.io#the-tag) tag to embed the Typeform in the _Typeform Container_. Replace â€˜URLâ€™ with the URL of the Typeform you created earlier.\n\n**Note:__** The name of the List container and the layers inside the container starts with an asterisk (*). Bravo Studio recognizes such containers and layers as a list.\n\nAfter designing the application in Figma, the next step is to use this design in Bravo Studio to create a native application. In Bravo Studio, click on the **_Import Figma File_** button and copy and paste the link of your Figma design in the input field to create a new project.\n\nCongratulations! The user-interface of your application is ready.\n\n## Connecting with Airtable\n\nIn Bravo Studio we can use a custom API or Airtable to connect our application with a database. The application we built uses Airtable as the database. Hence, we will connect Airtable with our application.\n\nIn Bravo Studio, add a new data collection by clicking the â€˜+ New Collectionâ€™ button on the Data Library page. Select Airtable, and follow the instructions as shown in the video, in the Airtable API Wizard, enter the base URL and your Airtable API Key. You can learn more about _Using the Airtable API Wizard_ from the documentation [here](https://www.notion.so/Using-the-Airtable-API-Wizard-f2e75dde9f13419f93661a9e116c1ac3?ref=blog.n8n.io).\n\nClick on **_Advanced view_** and make a GET request for â€˜Expenses â€” Listâ€™. Select â€˜Allâ€™ from the data.records[] dropdown list in the **_Response Data_** section.\n\nNavigate to the â€˜Projectsâ€™ page and select the app that we created. We will bind the data from the Airtable base with the respective components of the â€˜Review Added Receiptsâ€™ screen. Select the â€˜Review Added Receiptsâ€™ screen and select the â€˜Expenses Trackerâ€™ Airtable base. Select â€˜GET Expenses â€” Listâ€™ in the **_Select Request_** section of **_Data Binding_**. Select the `*List` component and select `Records` from the dropdown list below **_Get Expenses â€” List_**. Expand the `*List` component and map each element to their corresponding field. You can learn more about this from the [documentation](https://www.notion.so/Bind-data-to-UI-for-a-list-page-2cf8c91380124ddf8b84d303e1c3ca8a?ref=blog.n8n.io).\n\nThe video below shows the steps to bind the data to components.\n\nConnecting Airtable with our app in Bravo Studio\n\n## Building the workflow\n\nCreating a backend for applications can get complicated when it comes to connecting different services together. You have to write functions to make API calls to each service, and pass information from one service to another in the proper format. But n8n makes it easy to create the backend and stitch different services together. You also get a visual representation that helps you in designing the application logic.\n\nIn n8n, you will use the following nodes to build the backend logic:\n\n  1. [Typeform Trigger](https://docs.n8n.io/nodes/n8n-nodes-base.typeformTrigger/?ref=blog.n8n.io#typeform-trigger) node (Get Receipt)\n  2. [HTTP Request](https://docs.n8n.io/nodes/n8n-nodes-base.httpRequest/?ref=blog.n8n.io#http-request) node (Get Image)\n  3. [Mindee](https://docs.n8n.io/nodes/n8n-nodes-base.mindee/?ref=blog.n8n.io#mindee) node (Extract Information)\n  4. [Set](https://docs.n8n.io/nodes/n8n-nodes-base.set/?ref=blog.n8n.io#set) node (Set Information)\n  5. [Airtable](https://docs.n8n.io/nodes/n8n-nodes-base.airtable/?ref=blog.n8n.io#airtable) node (Store Information)\n\n\n\nOur workflow will look like the image below.\n\n![](https://blog.n8n.io/content/images/2021/01/0-Ckc3jg0WaYHkHfHZ.png)Completed workflow in n8n\n\n### 1\\. Typeform Trigger node (Get Receipt)\n\nThe Typeform Trigger node will trigger the workflow whenever the user submits a new receipt. Add the Typeform Trigger node and configure the credentials by following the instructions in the documentation [here](https://docs.n8n.io/credentials/typeform/?ref=blog.n8n.io#prerequisites).\n\nSelect the form that you created for the application from the **_Form_** dropdown list.\n\nRename the node as `Get Receipt`, and save the workflow.\n\nClick on the **_Execute Node_** button to execute the node. Upload an image of a receipt using the Typeform. You will notice that the Typeform Trigger node triggers the workflow when the form is submitted.\n\nAdding the Typeform Trigger node for the Expense Tracker workflow\n\n### 2\\. HTTP Request node (Get Image)\n\nThe HTTP Request node is used to make an HTTP request to APIs and websites. It can return data in JSON, String as well as Binary format. Add an HTTP Request node in n8n that will make a GET request to fetch the image we uploaded using the Typeform. In the URL parameter of the node, add the following expression: `{{$node[\"Get Receipt\"].json[\"Upload receipt\"]}}`. This expression will get the URL of the image that we uploaded using Typeform.\n\nSelect â€˜Fileâ€™ from the **_Response Format_** dropdown list and rename the node to `Get Image`. Click on **_Execute Node_** to run the node. In the output, you will notice that the node returns the image of the receipt.\n\nAdding the HTTP Request node for the Expense Tracker workflow\n\n### 3\\. Mindee node (Extract Information)\n\nThe Mindee API enables to extract information from an image and transform it into usable data. We will use the Mindee node in n8n to extract data from an image of a receipt. The node will extract the merchant name, the amount, the date and time the expense was incurred, and its category.\n\nAdd the Mindee node in the n8n workflow, and configure the credentials as mentioned in the [documentation.](https://docs.n8n.io/credentials/mindee/?ref=blog.n8n.io#prerequisites)\n\nRename the node to `Extract Information`, and click on **_Execute Node_** to run the node. You will notice that the node extracts the information from the image and transforms it into usable data that can be added to Airtable.\n\nAdding the Mindee node for the Expense Tracker workflow\n\n### 4\\. Set node (Set Information)\n\nThe Set node allows us to set the workflow data. We will reference the data from the Mindee node and the Typeform Trigger node in the Set node and set the parameters.\n\nAdd the Set node in your n8n workflow and add the parameters with the following properties.\n\n  * **Amount** : The type of this field should be _Number_ and itâ€™s value should be `{{$node[\"Extract Information\"].json[\"total\"]`\n  * **Merchant** : The type of this field should be _String_ and itâ€™s value should be `{{$node[\"Extract Information\"].json[\"merchant\"]}}`\n  * **Date** : The type of this field should be _String_ and itâ€™s value should be `{{$node[\"Extract Information\"].json[\"date\"]}}`\n  * **Time** : The type of this field should be _String_ and itâ€™s value should be `{{$node[\"Extract Information\"].json[\"time\"]}}`\n  * **Receipt** **URL** : The type of this field should be _String_ and itâ€™s value should be `{{$node[\"Get Receipt\"].json[\"Upload receipt\"]}}`\n  * **Category** : The type of this field should be _String_ and itâ€™s value should be `{{$node[\"Extract Information\"].json[\"category\"]}}`\n\n\n\n**Note:** The value in the **_Name_** field should be the same as the column name of your Airtable base.\n\nToggle the **_Keep Only Set_** to `true`. This ensures that only the data that we set in this node gets passed on to the next nodes in the workflow. Click on the **_Execute Node_** button to run the node.\n\nAdding the Set node for the Expense Tracker workflow\n\n### 5\\. Airtable node (Store Information)\n\nAirtable is a spreadsheet-database hybrid, with the features of a database but applied to a spreadsheet. The Bravo Studio app will get the data from the Airtable base to display it to the user. But before connecting the app with Airtable, in the front-end, we need to connect Airtable with your backend.\n\nThe n8n workflow will store the data extracted by the Mindee node and the URL of the image in Airtable. Create a base in Airtable similar to this [template base](https://airtable.com/shrKmqHWcl3APJFlp?ref=blog.n8n.io) if you havenâ€™t already created one.\n\nIn n8n, add the Airtable node and configure the credentials following the instructions mentioned [here](https://docs.n8n.io/credentials/airtable/?ref=blog.n8n.io#prerequisites). Select â€˜Appendâ€™ from the **_Operation_** dropdown list. To get the Application ID, go to [https://airtable.com/api](https://airtable.com/api?ref=blog.n8n.io) and select the base. Copy and paste the ID in the **_Base ID_** field in n8n. Enter the name of your base in the **_Table_** field.\n\nClick on **_Execute Node_** to run the node. On successful execution, you will notice that a new row gets added to your Airtable base.\n\nAdding the Airtable node for the Expense Tracker workflow\n\n## Testing the application\n\nCongratulations! You have successfully built the application. Now let us test our application and see how it would work in the real world.\n\nIn n8n, on the top right corner, toggle **_Active_** to true. This will set our workflow to active and execute the workflow every time a new receipt is submitted to Typeform.\n\nOpen the Bravo Vision app on your device and select the Expense Tracker app. Click on the **_Add new receipt_** button and submit an image of the receipt.\n\nIf you donâ€™t have a receipt at hand now, feel free to use the following image of the receipt for testing.\n\n![](https://blog.n8n.io/content/images/2021/01/0-qqco5Y1mCAtm1vga.png)A receipt for testing your workflow\n\nYou can see the new receipt and the information on the â€˜My Receiptsâ€™ screen.\n\n![](https://blog.n8n.io/content/images/2021/01/0-USKl2aoTNeDR2lmD.jpg)My Receipts page after adding the receipt\n\n## Whatâ€™s next?\n\nYou can extend the workflow and send an email every time you add a new expense, using either the [Send Email](https://docs.n8n.io/nodes/n8n-nodes-base.emailSend/?ref=blog.n8n.io) node or the [Gmail](https://docs.n8n.io/nodes/n8n-nodes-base.gmail/?ref=blog.n8n.io#gmail) node. You can also use the [Twilio](https://docs.n8n.io/nodes/n8n-nodes-base.twilio/?ref=blog.n8n.io#twilio) node or the [Vonage](https://docs.n8n.io/nodes/n8n-nodes-base.vonage/?ref=blog.n8n.io#vonage) node to send an SMS when a new expense gets added.\n\nYou can also create a new workflow that will send you a weekly or monthly notification about the expenses you made during that period. This workflow can be built using the [Cron](https://docs.n8n.io/nodes/n8n-nodes-base.cron/?ref=blog.n8n.io#cron) node to trigger the workflow weekly or monthly, the Airtable node to read the data, and the [Function](https://docs.n8n.io/nodes/n8n-nodes-base.function/?ref=blog.n8n.io#function) node to calculate the sum of the expenses. To send a push notification, you can use the [Pushover](https://docs.n8n.io/nodes/n8n-nodes-base.pushover/?ref=blog.n8n.io#pushover) node.\n\n## Summary\n\nIn this article, you learned how to build an application. You learned to design an app in Figma that is compatible with Bravo Studio. You also created the front-end of the app using Bravo Studio. You stitched different services together using n8n to get the desired output. Lastly, you learned how to bind data to your app in Bravo Studio.\n\nI plan to add more features to the app that will help me build a healthy habit of keeping track of my expenses and help me manage them.\n\nIâ€™d love to hear about how you extend the app using n8n! If you run into any issues while following the tutorial, feel free to me on [Twitter](https://twitter.com/harshil1712?ref=blog.n8n.io) or ask for help on our [forum](https://community.n8n.io/?ref=blog.n8n.io) ðŸ§¡\n\n _Start automating!_\n\n_The best part is, you can start automating for free with n8n. The easiest way to get started is to sign up for a[free n8n cloud trial](https://n8n.io/pricing/?ref=blog.n8n.io). Thanks to n8nâ€™s fair-code license, you can also _[_self-host n8n for free_](https://docs.n8n.io/hosting/?ref=blog.n8n.io) _._\n\n## Further Reading\n\nIf you would like to dig deeper and learn more about the topics discussed in the article, consult the following resources:\n\n  * [Setting up your Figma File](https://docs.bravostudio.app/bravo-studio-help-center/learn-and-create/setting-up-your-design-file/setting-up-your-figma-file?ref=blog.n8n.io): You can read more about making a Bravo Studio compatible Figma design on Bravo Studiosâ€™ official documentation.\n  * [Bravo Tags Master List](https://www.notion.so/Bravo-Tags-Master-List-145bec845f0b4afaa9e3bb8321b218a8?ref=blog.n8n.io): Bravo Studio also has various other Bravo Tags that you can use to add more components to your app.\n  * [n8n documentation](https://docs.n8n.io/?ref=blog.n8n.io): Check out the official documentation of n8n for more tutorials and reference information\n  * [n8n integrations](https://n8n.io/integrations/?ref=blog.n8n.io): You can extend the functionality of your app by different nodes. Check out the list of all the integrations that n8n provides.\n  * [n8n workflows](https://n8n.io/workflows?ref=blog.n8n.io): n8n has an extensive library of workflows ready for you to use.\n  * [Automatically Adding Expense Receipts to Google Sheets with Telegram, Mindee, Twilio, and n8n](https://medium.com/n8n-io/automatically-adding-expense-receipts-to-google-sheets-with-telegram-mindee-twilio-and-n8n-c47eb2f8d7a5?ref=blog.n8n.io): If you are interested in building a Telegram bot instead of the application, check out this article.\n\n\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=Building%20an%20expense%20tracking%20app%20in%2010%20minutes&url=https://blog.n8n.io/building-an-expense-tracking-app-in-10-minutes/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/building-an-expense-tracking-app-in-10-minutes/)\n",
  "crawled_at": "2025-05-28T10:53:42.023892"
}