{
  "url": "https://blog.n8n.io/creating-error-workflows-in-n8n/",
  "title": "Creating error workflows in n8n",
  "excerpt": "In this tutorial, I'll teach you how to create an error workflow and use the Error Trigger node.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2021/03/cover-4.png",
  "tags": [
    "Tips"
  ],
  "html": "<p>Errors can always creep up while working with software. Itâ€™s important to get notified about it so that it can be timely fixed. <a href=\"https://n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">n8n</a> allows you to set an â€˜Error Workflowâ€™ for your workflows. When your workflow runs into an error, the error workflow is triggered. This workflow can do anything that other workflows can like send an SMS or <a href=\"https://slack.com/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Slack</a>/<a href=\"https://mattermost.com/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Mattermost</a> notification to alert you about the error.</p><p>In this tutorial, Iâ€™ll teach you how to create an error workflow and use the <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.errorTrigger/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Error Trigger</a></em> node. Weâ€™ll create two workflows (these workflows were built using n8n@0.111.0) in this tutorial to learn about error workflows:</p><ol><li><strong>Workflow 1:</strong> This will be an error workflow with an <em>Error Trigger</em>, a <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.mattermost/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Mattermost</a></em> node, and a <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.twilio?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Twilio</a></em> Node. This workflow will be triggered when Workflow 2 encounters an error. It will then send a notification about the error to a Mattermost channel and an SMS.</li><li><strong>Workflow 2:</strong> This will be a bare minimum two-node workflow which will encounter an error when it is run.</li></ol><p>You can find information on how to set up and start n8n in the <a href=\"https://docs.n8n.io/?ref=blog.n8n.io#/setup\" rel=\"noopener\" target=\"_blank\">documentation</a>. Alternatively, you can sign-up for a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a> to get access to our hosted service.</p><hr><h2 id=\"workflow-1-creating-an-error-workflow\">Workflow 1: Creating an error workflow</h2><p>In this workflow, we need to get the information of the workflow that has failed, notify us about it in the â€˜Incidentsâ€™ channel on Mattermost, and send an SMS about it to the specified person using Twilio.</p><p>I have also submitted <a href=\"https://n8n.io/workflows/359?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Workflow 1</a> on n8n.io, in case youâ€™d like to skim through this workflow. Please note that youâ€™ll still need to configure a couple of things like your Mattermost and Twilio credentials as well as the settings of the node.</p><h3 id=\"1-error-trigger-start-the-error-workflow\">1. Error Trigger: Start the error workflow</h3><p>First of all, start n8n with the following command:</p><p><code>n8n start</code></p><p>If youâ€™re using n8n.cloud, click on the <strong><em>Open</em></strong> button on your dashboard.</p><p>In the Node Editor view, add a new node by clicking on the '<strong><em>+</em></strong>' button on the top right of the Editor UI. Select the <em>Error Trigger</em> node under the <em><strong>Triggers</strong></em> section. Now, click on the <em><strong>Execute Node</strong></em> button and it will generate an example result for you.</p><p>Now, save the workflow. As opposed to other workflows with a trigger node, you wonâ€™t have to activate the workflow when using the <em>Error Trigger </em>node. Once a workflow fails, this node automagically gets details about the failed workflow and the error workflow gets triggered.</p><p>Hereâ€™s a video of me following the steps mentioned above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/nAPFyfua2AQ?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating the Error Trigger node</figcaption></figure><h3 id=\"2-mattermost-node-inform-the-incidents-channel-about-the-error\">2. Mattermost node: Inform the incidents channel about the error</h3><p>Now, we want to post a message that informs the members of the â€˜Incidentsâ€™ channel that the workflow has encountered an error.</p><p>Add a <em>Mattermost</em> node by clicking on the '<strong><em>+</em></strong>' button on the top right and selecting the <em>Mattermost</em> node. In the Node Editor, enter your Mattermost credentials. Hereâ€™s some detailed <a href=\"https://docs.n8n.io/credentials/mattermost?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">information</a> on how to create an access token for the credentials. I have used an access token from a bot account, but you can also use the access token from your account.</p><p>Now we need to enter the <em><strong>Channel ID</strong></em>. Since this is not a dynamic piece of information (the Incidents channel would always be there and hence, the ID will remain the same), we need to grab its <em>Channel ID</em>.</p><p>If you donâ€™t already have a channel like this for the tutorial, you can manually create a new channel on Mattermost. To get its ID, click on the down arrow next to the channel name and click on the <em><strong>View Info</strong></em> option. This will reveal the ID of the channel. You can then copy and paste that in the <em><strong>Channel ID</strong></em> field in the node.</p><p>Finally, we will enter the Message. Since this would be a dynamic piece of information, click on the gears icon next to the field and select 'Add Expression'. I have entered the following expression using the <strong><em>Variable Selector</em></strong>.</p><pre><code>The workflow named '{{$json[\"workflow\"][\"name\"]}}' with the ID {{$json[\"workflow\"][\"id\"]}} has encountered an error. The last node that was executed was {{$json[\"execution\"][\"lastNodeExecuted\"]}}.</code></pre><p>Click on the <em><strong>Execute Node</strong></em> button and that will send a message to the â€˜Incidentsâ€™ channel on Mattermost. Hereâ€™s a video of me following the steps mentioned above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/zHHc9gKAJQQ?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a Mattermost node to inform the Incidents channel about the error</figcaption></figure><h3 id=\"3-twilio-node-send-an-sms-about-the-error\">3. Twilio node: Send an SMS about the error</h3><p>As the last step of the error workflow, we want to send an SMS to the person responsible for the workflow. Weâ€™ll accomplish that with the help of the Twilio node.</p><p>First of all, youâ€™ll have to create a <a href=\"https://www.twilio.com/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Twilio</a> account. You can create a free trial account and once you have done that, go to the <a href=\"https://www.twilio.com/console?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">console</a> and create a <em>Trial Number</em> for yourself. On that page, you can also acquire the <em>Account Sid</em> and <em>Auth Token</em> that youâ€™ll need for the credentials.</p><p>Once you have done that, add a <em>Twilio</em> node in n8n. Create new credentials for the Twilio API and enter the details. Now, enter the trial number that you created in the <em><strong>From</strong></em> field and your number (the one that you verified your Twilio account with) in the <em><strong>To</strong></em> field. In the message field, we want to include dynamic pieces of information. To do that click on the gears icon next to the <em><strong>Message</strong></em> field and select <em>Add Expression</em>. I entered the following in that field:</p><pre><code>The workflow named '{{$node[\"Error Trigger\"].json[\"workflow\"][\"name\"]}}' with the ID {{$node[\"Error Trigger\"].json[\"workflow\"][\"id\"]}} has encountered an error.</code></pre><p>Click on the <em><strong>Execute Node</strong></em> button and that will send a message to the number specified in the node. Hereâ€™s a screenshot of how that looked for me.</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/03/1-4tJ4CdPVQxd4-pVitwpguA.jpeg\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"706\" height=\"301\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/03/1-4tJ4CdPVQxd4-pVitwpguA.jpeg 600w, https://blog.n8n.io/content/images/2021/03/1-4tJ4CdPVQxd4-pVitwpguA.jpeg 706w\"><figcaption>Error notification SMS from the Twilio&nbsp;node</figcaption></figure><p>Congratulations on creating your first error workflow! ðŸŽ‰</p><p>Hereâ€™s a video of me following the steps mentioned above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/4Ug8tcKBI58?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a Twilio node to get an SMS about the error</figcaption></figure><hr><h2 id=\"workflow-2-creating-a-workflow-with-an-error\">Workflow 2: Creating a workflow with an error</h2><p>Now, we need to create a flawed workflow which throws an error upon being activated. Weâ€™ll use a <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.cron?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Cron</a></em> node as the trigger and a <em><a href=\"https://docs.n8n.io/nodes/n8n-nodes-base.function?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Function</a></em> node which is wrongly configured and will give us an error.</p><h3 id=\"1-cron-node-trigger-the-workflow\">1. Cron node: Trigger the workflow</h3><p>In the Node Editor view, add a new node by clicking on the '<strong><em>+</em></strong>' button on the top right of the Editor UI. Select the <em>Cron</em> node under the <em><strong>Triggers</strong></em> section. Click on the <em><strong>Add Cron Time</strong></em> button and select â€˜Every Minuteâ€™ as the <em><strong>Mode</strong></em>.</p><p>Now, save the workflow. Saving the workflow will enable you to set an â€˜Error Workflowâ€™. Go to the <em>Workflow</em> icon on the left side of the screen and click on <em><strong>Settings</strong></em>. In the dialog box, select the error workflow that you created above for the <em><strong>Error Workflow</strong></em> field and click on the <em><strong>Save</strong></em> button. This will assign the <em>Workflow 1</em> as the error workflow which will be triggered when this workflow encounters an error during execution.</p><p>Hereâ€™s a video of me following the steps mentioned above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/Ng6ZVc-d2KQ?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a Cron node to trigger the workflow and setting an error workflow</figcaption></figure><h3 id=\"2-function-node-wrongly-configured-node-which-gives-an-error\">2. Function node: Wrongly configured node which gives an error</h3><p>Last but not the least, we need to create a wrongly configured node that gives an error upon execution. For that, add the <em>Function</em> node and change <code>items[0]</code> to <code>items[1]</code>. Donâ€™t click on the <em><strong>Execute Node</strong></em> button yet. If you get the error now, n8n will not allow you to activate the workflow.</p><p>Activate the workflow by clicking on the <strong><em>Activate</em></strong> toggle on the top right. Voila, our workflow with an error is now live (never thought Iâ€™d say this) and will run every minute. You can keep an eye on the executions by clicking on the <em>Executions</em> icon on the left side of the screen. For me, it looks like the following after the first execution.</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/03/executions.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"784\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/03/executions.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/03/executions.png 1000w, https://blog.n8n.io/content/images/size/w1600/2021/03/executions.png 1600w, https://blog.n8n.io/content/images/2021/03/executions.png 2400w\" sizes=\"(min-width: 1200px) 1200px\"><figcaption>Monitoring the workflow executions</figcaption></figure><p>In the image above, you can see how the Error Workflow got triggered once the Workflow 2 encountered an error.</p><blockquote><strong>Note:</strong> You might want to deactivate the workflow after a couple of Error Workflow executions (or deactivate the Twilio node) otherwise you might run out of your free Twilio credits soon <em>ðŸ˜‰</em></blockquote><p>This is how the notifications from the <em>Mattermost</em> and <em>Twilio</em> nodes looked like after the Error Workflow got executed.</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/03/mattermost-output.png\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"785\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/03/mattermost-output.png 600w, https://blog.n8n.io/content/images/size/w1000/2021/03/mattermost-output.png 1000w, https://blog.n8n.io/content/images/size/w1600/2021/03/mattermost-output.png 1600w, https://blog.n8n.io/content/images/2021/03/mattermost-output.png 2400w\" sizes=\"(min-width: 1200px) 1200px\"><figcaption>Workflow error notification in the Mattermost Incidents channel</figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2021/03/message.jpeg\" class=\"kg-image lightense-target\" alt=\"\" loading=\"lazy\" width=\"697\" height=\"281\" srcset=\"https://blog.n8n.io/content/images/size/w600/2021/03/message.jpeg 600w, https://blog.n8n.io/content/images/2021/03/message.jpeg 697w\"><figcaption>Workflow error notification sent as an&nbsp;SMS</figcaption></figure><p>In case you feel that this is an ideal error workflow for you, you can set this as the error workflow for other workflows too. You can do that by following the same steps that you followed in <em>Workflow 2, Step 1</em>.</p><p>Hereâ€™s a video of me following the steps mentioned above.</p><figure class=\"kg-card kg-embed-card kg-card-hascaption\"><div class=\"js-reframe\" style=\"position: relative; width: 100%; padding-top: 56.1798%;\"><iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/m6gZdwq0eG0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\"position: absolute; width: 100%; height: 100%; left: 0px; top: 0px;\"></iframe></div><figcaption>Creating a wrongly configured Function node and activating the workflow</figcaption></figure><p></p><hr><h2 id=\"conclusion\">Conclusion</h2><p>Today we learned about the <em>Error Trigger</em> node as well as learned to create and assign an error workflow. This helps us to ensure that all our workflows are running well and if any of them encounter an error for some reason, we get notified about them as soon as possible to fix them.</p><p>I am curious to learn what kind of nodes youâ€™d use for an error workflow. Would that tie in with your incident response playbook? Iâ€™d love to check out what you create. Please consider <a href=\"https://n8n.io/workflows?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">sharing</a> your workflows with the community.</p><p>In case youâ€™ve run into an issue while following the tutorial, feel free to reach out to me on <a href=\"https://twitter.com/tanay1337?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">Twitter</a> or ask for help on our <a href=\"https://community.n8n.io/?ref=blog.n8n.io\" rel=\"noopener\" target=\"_blank\">forum</a> ðŸ’™</p><p><em>Start automating!</em></p><p><em>The best part is, you can start automating for free with n8n. The easiest way to get started is to <a href=\"https://n8n.io/pricing?cloud=false&amp;ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">download the desktop app,</a> or sign up for a <a href=\"https://n8n.io/cloud?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">free n8n cloud trial</a>. Thanks to n8nâ€™s fair-code license, you can also <a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">self-host n8n for free</a>.</em></p>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-9xc25ncfdr63\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=7co6a9fkks9t\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=Creating%20error%20workflows%20in%20n8n&amp;url=https://blog.n8n.io/creating-error-workflows-in-n8n/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/creating-error-workflows-in-n8n/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/creating-error-workflows-in-n8n/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "Errors can always creep up while working with software. Itâ€™s important to get notified about it so that it can be timely fixed. [n8n](https://n8n.io/?ref=blog.n8n.io) allows you to set an â€˜Error Workflowâ€™ for your workflows. When your workflow runs into an error, the error workflow is triggered. This workflow can do anything that other workflows can like send an SMS or [Slack](https://slack.com/?ref=blog.n8n.io)/[Mattermost](https://mattermost.com/?ref=blog.n8n.io) notification to alert you about the error.\n\nIn this tutorial, Iâ€™ll teach you how to create an error workflow and use the _[Error Trigger](https://docs.n8n.io/nodes/n8n-nodes-base.errorTrigger/?ref=blog.n8n.io)_ node. Weâ€™ll create two workflows (these workflows were built using n8n@0.111.0) in this tutorial to learn about error workflows:\n\n  1. **Workflow 1:** This will be an error workflow with an _Error Trigger_ , a _[Mattermost](https://docs.n8n.io/nodes/n8n-nodes-base.mattermost/?ref=blog.n8n.io)_ node, and a _[Twilio](https://docs.n8n.io/nodes/n8n-nodes-base.twilio?ref=blog.n8n.io)_ Node. This workflow will be triggered when Workflow 2 encounters an error. It will then send a notification about the error to a Mattermost channel and an SMS.\n  2. **Workflow 2:** This will be a bare minimum two-node workflow which will encounter an error when it is run.\n\n\n\nYou can find information on how to set up and start n8n in the [documentation](https://docs.n8n.io/?ref=blog.n8n.io#/setup). Alternatively, you can sign-up for a [free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io) to get access to our hosted service.\n\n* * *\n\n## Workflow 1: Creating an error workflow\n\nIn this workflow, we need to get the information of the workflow that has failed, notify us about it in the â€˜Incidentsâ€™ channel on Mattermost, and send an SMS about it to the specified person using Twilio.\n\nI have also submitted [Workflow 1](https://n8n.io/workflows/359?ref=blog.n8n.io) on n8n.io, in case youâ€™d like to skim through this workflow. Please note that youâ€™ll still need to configure a couple of things like your Mattermost and Twilio credentials as well as the settings of the node.\n\n### 1\\. Error Trigger: Start the error workflow\n\nFirst of all, start n8n with the following command:\n\n`n8n start`\n\nIf youâ€™re using n8n.cloud, click on the **_Open_** button on your dashboard.\n\nIn the Node Editor view, add a new node by clicking on the '**_+_** ' button on the top right of the Editor UI. Select the _Error Trigger_ node under the _**Triggers**_ section. Now, click on the _**Execute Node**_ button and it will generate an example result for you.\n\nNow, save the workflow. As opposed to other workflows with a trigger node, you wonâ€™t have to activate the workflow when using the _Error Trigger_ node. Once a workflow fails, this node automagically gets details about the failed workflow and the error workflow gets triggered.\n\nHereâ€™s a video of me following the steps mentioned above.\n\nCreating the Error Trigger node\n\n### 2\\. Mattermost node: Inform the incidents channel about the error\n\nNow, we want to post a message that informs the members of the â€˜Incidentsâ€™ channel that the workflow has encountered an error.\n\nAdd a _Mattermost_ node by clicking on the '**_+_** ' button on the top right and selecting the _Mattermost_ node. In the Node Editor, enter your Mattermost credentials. Hereâ€™s some detailed [information](https://docs.n8n.io/credentials/mattermost?ref=blog.n8n.io) on how to create an access token for the credentials. I have used an access token from a bot account, but you can also use the access token from your account.\n\nNow we need to enter the _**Channel ID**_. Since this is not a dynamic piece of information (the Incidents channel would always be there and hence, the ID will remain the same), we need to grab its _Channel ID_.\n\nIf you donâ€™t already have a channel like this for the tutorial, you can manually create a new channel on Mattermost. To get its ID, click on the down arrow next to the channel name and click on the _**View Info**_ option. This will reveal the ID of the channel. You can then copy and paste that in the _**Channel ID**_ field in the node.\n\nFinally, we will enter the Message. Since this would be a dynamic piece of information, click on the gears icon next to the field and select 'Add Expression'. I have entered the following expression using the **_Variable Selector_**.\n    \n    \n    The workflow named '{{$json[\"workflow\"][\"name\"]}}' with the ID {{$json[\"workflow\"][\"id\"]}} has encountered an error. The last node that was executed was {{$json[\"execution\"][\"lastNodeExecuted\"]}}.\n\nClick on the _**Execute Node**_ button and that will send a message to the â€˜Incidentsâ€™ channel on Mattermost. Hereâ€™s a video of me following the steps mentioned above.\n\nCreating a Mattermost node to inform the Incidents channel about the error\n\n### 3\\. Twilio node: Send an SMS about the error\n\nAs the last step of the error workflow, we want to send an SMS to the person responsible for the workflow. Weâ€™ll accomplish that with the help of the Twilio node.\n\nFirst of all, youâ€™ll have to create a [Twilio](https://www.twilio.com/?ref=blog.n8n.io) account. You can create a free trial account and once you have done that, go to the [console](https://www.twilio.com/console?ref=blog.n8n.io) and create a _Trial Number_ for yourself. On that page, you can also acquire the _Account Sid_ and _Auth Token_ that youâ€™ll need for the credentials.\n\nOnce you have done that, add a _Twilio_ node in n8n. Create new credentials for the Twilio API and enter the details. Now, enter the trial number that you created in the _**From**_ field and your number (the one that you verified your Twilio account with) in the _**To**_ field. In the message field, we want to include dynamic pieces of information. To do that click on the gears icon next to the _**Message**_ field and select _Add Expression_. I entered the following in that field:\n    \n    \n    The workflow named '{{$node[\"Error Trigger\"].json[\"workflow\"][\"name\"]}}' with the ID {{$node[\"Error Trigger\"].json[\"workflow\"][\"id\"]}} has encountered an error.\n\nClick on the _**Execute Node**_ button and that will send a message to the number specified in the node. Hereâ€™s a screenshot of how that looked for me.\n\n![](https://blog.n8n.io/content/images/2021/03/1-4tJ4CdPVQxd4-pVitwpguA.jpeg)Error notification SMS from the Twilio node\n\nCongratulations on creating your first error workflow! ðŸŽ‰\n\nHereâ€™s a video of me following the steps mentioned above.\n\nCreating a Twilio node to get an SMS about the error\n\n* * *\n\n## Workflow 2: Creating a workflow with an error\n\nNow, we need to create a flawed workflow which throws an error upon being activated. Weâ€™ll use a _[Cron](https://docs.n8n.io/nodes/n8n-nodes-base.cron?ref=blog.n8n.io)_ node as the trigger and a _[Function](https://docs.n8n.io/nodes/n8n-nodes-base.function?ref=blog.n8n.io)_ node which is wrongly configured and will give us an error.\n\n### 1\\. Cron node: Trigger the workflow\n\nIn the Node Editor view, add a new node by clicking on the '**_+_** ' button on the top right of the Editor UI. Select the _Cron_ node under the _**Triggers**_ section. Click on the _**Add Cron Time**_ button and select â€˜Every Minuteâ€™ as the _**Mode**_.\n\nNow, save the workflow. Saving the workflow will enable you to set an â€˜Error Workflowâ€™. Go to the _Workflow_ icon on the left side of the screen and click on _**Settings**_. In the dialog box, select the error workflow that you created above for the _**Error Workflow**_ field and click on the _**Save**_ button. This will assign the _Workflow 1_ as the error workflow which will be triggered when this workflow encounters an error during execution.\n\nHereâ€™s a video of me following the steps mentioned above.\n\nCreating a Cron node to trigger the workflow and setting an error workflow\n\n### 2\\. Function node: Wrongly configured node which gives an error\n\nLast but not the least, we need to create a wrongly configured node that gives an error upon execution. For that, add the _Function_ node and change `items[0]` to `items[1]`. Donâ€™t click on the _**Execute Node**_ button yet. If you get the error now, n8n will not allow you to activate the workflow.\n\nActivate the workflow by clicking on the **_Activate_** toggle on the top right. Voila, our workflow with an error is now live (never thought Iâ€™d say this) and will run every minute. You can keep an eye on the executions by clicking on the _Executions_ icon on the left side of the screen. For me, it looks like the following after the first execution.\n\n![](https://blog.n8n.io/content/images/2021/03/executions.png)Monitoring the workflow executions\n\nIn the image above, you can see how the Error Workflow got triggered once the Workflow 2 encountered an error.\n\n> **Note:** You might want to deactivate the workflow after a couple of Error Workflow executions (or deactivate the Twilio node) otherwise you might run out of your free Twilio credits soon _ðŸ˜‰_\n\nThis is how the notifications from the _Mattermost_ and _Twilio_ nodes looked like after the Error Workflow got executed.\n\n![](https://blog.n8n.io/content/images/2021/03/mattermost-output.png)Workflow error notification in the Mattermost Incidents channel![](https://blog.n8n.io/content/images/2021/03/message.jpeg)Workflow error notification sent as an SMS\n\nIn case you feel that this is an ideal error workflow for you, you can set this as the error workflow for other workflows too. You can do that by following the same steps that you followed in _Workflow 2, Step 1_.\n\nHereâ€™s a video of me following the steps mentioned above.\n\nCreating a wrongly configured Function node and activating the workflow\n\n* * *\n\n## Conclusion\n\nToday we learned about the _Error Trigger_ node as well as learned to create and assign an error workflow. This helps us to ensure that all our workflows are running well and if any of them encounter an error for some reason, we get notified about them as soon as possible to fix them.\n\nI am curious to learn what kind of nodes youâ€™d use for an error workflow. Would that tie in with your incident response playbook? Iâ€™d love to check out what you create. Please consider [sharing](https://n8n.io/workflows?ref=blog.n8n.io) your workflows with the community.\n\nIn case youâ€™ve run into an issue while following the tutorial, feel free to reach out to me on [Twitter](https://twitter.com/tanay1337?ref=blog.n8n.io) or ask for help on our [forum](https://community.n8n.io/?ref=blog.n8n.io) ðŸ’™\n\n _Start automating!_\n\n_The best part is, you can start automating for free with n8n. The easiest way to get started is to[download the desktop app,](https://n8n.io/pricing?cloud=false&ref=blog.n8n.io) or sign up for a [free n8n cloud trial](https://n8n.io/cloud?ref=blog.n8n.io). Thanks to n8nâ€™s fair-code license, you can also [self-host n8n for free](https://docs.n8n.io/hosting/?ref=blog.n8n.io)._\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=Creating%20error%20workflows%20in%20n8n&url=https://blog.n8n.io/creating-error-workflows-in-n8n/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/creating-error-workflows-in-n8n/)\n",
  "crawled_at": "2025-05-28T11:01:22.421830"
}