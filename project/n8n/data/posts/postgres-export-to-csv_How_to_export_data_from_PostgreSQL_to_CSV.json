{
  "url": "https://blog.n8n.io/postgres-export-to-csv/",
  "title": "How to export data from PostgreSQL to CSV",
  "excerpt": "CSV is a universally accepted and easy-to-read format to interpret data, and PostgreSQL is one of the most popular relational databases. Read on to learn how to export PostgreSQL as a CSV file using the COPY command, \\copy command, and n8n.",
  "thumbnail": "https://blog.n8n.io/content/images/size/w1200/2023/03/Slide-16_9---86-2.png",
  "tags": [
    "Database",
    "ITOps",
    "Tutorial"
  ],
  "html": "<p>Many applications support CSV import and export because of its easy-to-read plain text or tabular format. Regardless of the use case, taking data from one program and putting it in another is a key step in data management processes. </p><p>PostgreSQL offers several ways to export your data to CSV so that it can be used with other tools for reporting, analytics, or visualization. Knowing the methods PostgreSQL has at its disposal makes your data tasks simpler.</p><p>In this guide, we explore three different methods of PostgreSQL export to CSV: export using PostgreSQL <strong><em>COPY</em> </strong>SQL statement, export using PostgreSQL <strong><em>\\copy</em></strong> command, and lastly with <a href=\"https://n8n.io/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">the workflow automation tool n8n.</a></p><h2 id=\"how-to-export-a-csv-file-from-postgresql\">How to export a CSV file from PostgreSQL?</h2><p>Before we begin exporting PostgreSQL data to CSV, we will briefly recap the data in our sample table. If you have read our guide on <a href=\"https://blog.n8n.io/import-csv-into-postgresql/\">how to import CSV into PostgreSQL</a>, we will use the same example. </p><p>This table was created including a bookâ€™s title, author, and date read using the following SQL statement:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">CREATE</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">TABLE</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> booksRead (</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">&nbsp; &nbsp; book_id </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffaa;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">SERIAL</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">,</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">&nbsp; &nbsp; book_title </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffaa;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">VARCHAR</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">(</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#d36363;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">50</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">),</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">&nbsp; &nbsp; book_author </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffaa;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">VARCHAR</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">(</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#d36363;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">50</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">),</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">&nbsp; &nbsp; read_date </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffaa;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">DATE</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">,</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">&nbsp; &nbsp; PRIMARY </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">KEY</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> (book_id)</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">);</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>You can check the data in the table by using the <em><strong>SELECT</strong></em> SQL statement:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">SELECT</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> * </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">FROM</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> booksRead </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">ORDER</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">BY</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> book_id </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">ASC</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">;</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>This statement asks for all of the records in the <em><strong>booksRead</strong></em> table and orders them by their <em><strong>book_id</strong></em> returning the following output:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| book_id | book_title &nbsp; | book_author&nbsp; &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| read_date&nbsp; |</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">|</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#888888;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">---------|--------------|--------------------|------------|</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 1 &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| Demons &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| Fyodor Dostoyevsky | 2022-09-08 |</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 2 &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| Ulysses&nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| James Joyce&nbsp; &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 2022-05-06 |</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 3 &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| Catch-22 </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| Joseph Heller&nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 2023-01-04 |</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 4 &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| The Bell Jar | Sylvia Plath &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 2023-01-21 |</span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><br></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 5 &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| Frankenstein | Mary Shelley &nbsp; </span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">\t</span></span><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">| 2023-02-14 |</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>Our exported CSV will include these columns in an easy-to-read spreadsheet format. CSV format will also make the data easy to integrate with other tools outside of PostgreSQL.</p><h2 id=\"postgresql-export-to-csv-using-the-copy-statement\">PostgreSQL export to CSV using the COPY statement</h2><p>The first method we will demonstrate is exporting our PostgreSQL table in the command line using the <em><strong>COPY</strong></em> statement. </p><p>The <em><strong>COPY </strong></em>statement's function is to copy data between a file and a table or vice versa. You can read more about the <em><strong>COPY</strong></em> statement in <a href=\"https://www.postgresql.org/docs/current/sql-copy.html?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">PostgreSQL's Official Documentation</a>.</p><h3 id=\"step-1-configure-the-export-specifications\">Step 1: Configure the export specifications</h3><p>To use <em><strong>COPY</strong></em> to export a PostgreSQL table to CSV, we need to specify the table to export, the location to export the file to, the delimiter, and lastly if the file includes a row for headers.</p><p>Our statement looks as follows:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">COPY booksRead TO '/Users/ajemerich/books-read-export.csv' DELIMITER ',' CSV HEADER;</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>PostgreSQL replies with the following message:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">COPY 5</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>This reply tells us that our statement was executed successfully and a new file named <em><strong>books-read-export.csv </strong></em>has been written to the specified file location.</p><h3 id=\"step-2-confirm-successful-export\">Step 2: Confirm successful export</h3><p>To verify, we can navigate to the folder we specified and see that the new CSV file is indeed there:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/export-file-location-1.png\" class=\"kg-image lightense-target\" alt=\"Newly exported CSV file location\" loading=\"lazy\" width=\"776\" height=\"204\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/export-file-location-1.png 600w, https://blog.n8n.io/content/images/2023/03/export-file-location-1.png 776w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Newly exported CSV file location</figcaption></figure><p>Additionally, if we open the file, weâ€™ll see that our CSV is formatted correctly with the expected data:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/booksread-csv-export-1.png\" class=\"kg-image lightense-target\" alt=\"CSV data export\" loading=\"lazy\" width=\"894\" height=\"590\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/booksread-csv-export-1.png 600w, https://blog.n8n.io/content/images/2023/03/booksread-csv-export-1.png 894w\" sizes=\"(min-width: 720px) 720px\"><figcaption>CSV data export</figcaption></figure><h3 id=\"copy-export-with-specific-columns\">COPY export with specific columns</h3><p>To take things one step further, you can also specify PostgreSQL to export the table with only a subset of the tableâ€™s columns. To do this, we alter our previous <em><strong>COPY</strong></em> statement to include only the column names we went. </p><p>Our altered statement looks like the following:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">COPY booksRead(book_title,book_author) TO '/Users/ajemerich/books-read-export-partial.csv' DELIMITER ',' CSV HEADER;</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>Everything else remains the same, except we call the file <em><strong>books-read-export-partial.csv </strong></em>, and our CSV export will only include the <em><strong>book_title</strong></em> and <em><strong>book_author </strong></em>column data.</p><p>We can confirm by opening the file:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/booksread-csv-export-partial.png\" class=\"kg-image lightense-target\" alt=\"File export with partial data\" loading=\"lazy\" width=\"666\" height=\"538\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/booksread-csv-export-partial.png 600w, https://blog.n8n.io/content/images/2023/03/booksread-csv-export-partial.png 666w\"><figcaption>File export with partial data</figcaption></figure><h2 id=\"postgresql-export-to-csv-using-the-copy-command\">PostgreSQL export to CSV using the \\copy command</h2><p>We can also export a PostgreSQL table to a CSV in the command line using the <em><strong>\\copy </strong></em>command. This method is best when you have access to a remote PostgreSQL database, but you donâ€™t have file-writing permissions to use the<em><strong> COPY</strong></em> statement from the previous method. </p><p>The <em><strong>\\copy</strong></em> command is a built-in PostgreSQL command executed by psql. You can read more about <em><strong>\\copy</strong></em> in the <a href=\"https://www.postgresql.org/docs/current/app-psql.html?ref=blog.n8n.io#APP-PSQL-META-COMMANDS-COPY\" target=\"_blank\" rel=\"noopener\">Official PostgreSQL Documentation</a>.</p><h3 id=\"step-1-configure-the-export\">Step 1: Configure the export</h3><p>The <em><strong>\\copy</strong></em> command method has the same steps as the <em><strong>COPY </strong></em>statement method with changes in the syntax. To export a PostgreSQL table to CSV, we need to specify the table to export, the location to export the file to, the delimiter, and lastly if the file includes a row for headers.</p><p>Our command looks as follows:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">\\copy (</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">SELECT</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> * </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">FROM</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> booksRead) </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">to</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#a2fca2;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">'/Users/ajemerich/books-read-export-2.csv'</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">with</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> csv header</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>PostgreSQL replies with the following message:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Barlow,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">COPY 5</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>This reply tells us that our statement was executed successfully and a new file with the name <em><strong>books-read-export-2.csv</strong></em> has been written to the specified file location.</p><h3 id=\"step-2-confirm-successful-export-1\">Step 2: Confirm successful export</h3><p>To verify, we can navigate to the folder we specified and see that the new CSV file is indeed there:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/export-file-location-2-3.png\" class=\"kg-image lightense-target\" alt=\"Newly exported CSV file location\" loading=\"lazy\" width=\"774\" height=\"202\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/export-file-location-2-3.png 600w, https://blog.n8n.io/content/images/2023/03/export-file-location-2-3.png 774w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Newly exported CSV file location</figcaption></figure><p>Additionally, if we open the file, weâ€™ll see that our CSV is formatted correctly with the expected data:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/booksread-csv-export-2-3.png\" class=\"kg-image lightense-target\" alt=\"CSV data export\" loading=\"lazy\" width=\"828\" height=\"554\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/booksread-csv-export-2-3.png 600w, https://blog.n8n.io/content/images/2023/03/booksread-csv-export-2-3.png 828w\" sizes=\"(min-width: 720px) 720px\"><figcaption>CSV data export</figcaption></figure><h3 id=\"copy-export-with-specific-columns-1\">\\copy export with specific columns</h3><p>You can also specify PostgreSQL to export the table with only a subset of the tableâ€™s columns. To do this, we alter our previous <em><strong>\\copy</strong></em> command to include only the column names we went. </p><p>Our altered statement looks like the following:</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">\\copy (</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">SELECT</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> book_title, book_author </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">FROM</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> booksRead) </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">to</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#a2fca2;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">'/Users/ajemerich/books-read-export-2-partial.csv'</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">with</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> csv header</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>Everything else remains the same, except we call the file <em><strong>books-read-export-partial-2.csv</strong></em> , and our CSV export will only include the <em><strong>book_title</strong></em> and <em><strong>book_author </strong></em>column data.</p><p>We can confirm by opening the file:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/booksread-csv-export-2-partial.png\" class=\"kg-image lightense-target\" alt=\"File export with partial data\" loading=\"lazy\" width=\"652\" height=\"550\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/booksread-csv-export-2-partial.png 600w, https://blog.n8n.io/content/images/2023/03/booksread-csv-export-2-partial.png 652w\"><figcaption>File export with partial data</figcaption></figure><h2 id=\"postgresql-export-to-csv-automatically-with-n8n\">PostgreSQL export to CSV automatically with n8n</h2><p>So far, the discussed methods successfully achieve our goal, but they primarily work well as one-off methods to create a CSV. As database exports increase, manually connecting to your PostgreSQL server and generating a file becomes tedious and takes time away from more important tasks.</p><p>With n8n, you can automate typing in the command line, grabbing the file, and sending it where it needs to go, &nbsp;freeing up time for more exciting work.</p><p>Letâ€™s take a look at <a href=\"https://n8n.io/workflows/1902-convert-postgresql-table-to-csv/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">using an n8n workflow to automate exporting PostgreSQL tables to CSV</a>:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/n8n-psql-to-csv-workflow.png\" class=\"kg-image lightense-target\" alt=\"n8n workflow to export PostgreSQL data to CSV\" loading=\"lazy\" width=\"1768\" height=\"1066\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/n8n-psql-to-csv-workflow.png 600w, https://blog.n8n.io/content/images/size/w1000/2023/03/n8n-psql-to-csv-workflow.png 1000w, https://blog.n8n.io/content/images/size/w1600/2023/03/n8n-psql-to-csv-workflow.png 1600w, https://blog.n8n.io/content/images/2023/03/n8n-psql-to-csv-workflow.png 1768w\" sizes=\"(min-width: 720px) 720px\"><figcaption>n8n workflow to export PostgreSQL data to CSV</figcaption></figure><h3 id=\"step-1-connect-nodes-to-your-workflow\">Step 1: Connect nodes to your workflow<br></h3><p>Within this workflow, there are 4 nodes:</p><ol><li>The first node tells the workflow to run on click of <strong>Execute Workflow</strong>. In real-world applications, the trigger could be on a schedule or from another app event. You can check out all available options in the <a href=\"https://docs.n8n.io/integrations/builtin/trigger-nodes/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Trigger Node Documentation</a>.<br></li><li>Next goes the<a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\"> Set</a> node. String variable <strong>TableName</strong> is declared there and it is equal to <strong>booksRead</strong>. Set node allows us to automatically create Excel file and sheet names.</li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/set-node-inputs.png\" class=\"kg-image lightense-target\" alt=\"Set Node inputs\" loading=\"lazy\" width=\"634\" height=\"1016\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/set-node-inputs.png 600w, https://blog.n8n.io/content/images/2023/03/set-node-inputs.png 634w\"><figcaption>Set Node inputs</figcaption></figure><p>3. The third node is a <a href=\"https://n8n.io/integrations/postgres/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">PostgreSQL node</a> which connects to a remote database. You will need to set up credentials first, please refer to a tutorial on <a href=\"https://blog.n8n.io/import-csv-into-postgresql/\">how to import a CSV into PostgreSQL</a>. </p><p>4. Lastly, the <a href=\"https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.spreadsheetfile/?utm_source=n8n_app&amp;utm_medium=node_settings_modal-credential_link&amp;utm_campaign=n8n-nodes-base.spreadsheetFile\" target=\"_blank\" rel=\"noopener\">Spreadsheet File node</a> is used to specify the final operation telling the workflow what to do with the PostgreSQL table.</p><h3 id=\"step-2-configure-the-postgresql-node\">Step 2: Configure the PostgreSQL node</h3><p>With our Trigger and Set nodes configured and our PostgreSQL connection secured, we can configure our PostgreSQL node to generate an export. </p><p>Our configuration will look as follows with a few key things to point out:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/postgresql-query-output.png\" class=\"kg-image lightense-target\" alt=\"PostgreSQL node configuration and query output\" loading=\"lazy\" width=\"2000\" height=\"568\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/postgresql-query-output.png 600w, https://blog.n8n.io/content/images/size/w1000/2023/03/postgresql-query-output.png 1000w, https://blog.n8n.io/content/images/size/w1600/2023/03/postgresql-query-output.png 1600w, https://blog.n8n.io/content/images/size/w2400/2023/03/postgresql-query-output.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption>PostgreSQL node configuration and query output</figcaption></figure><p>Firstly, we want our node operation to be set to <strong>Execute Query. </strong>This tells the node to execute the SQL query that we specify in the next field. </p><p>In our <strong>Query </strong>field, we populate with the following <strong>expression </strong>referencing the string variable name we declared in the <strong>Set </strong>node.</p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">SELECT</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> * </span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">FROM</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\"> {{ $</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#fcc28c;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">json</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">[</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#a2fca2;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">\"TableName\"</span><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">] }}</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>We can see on the right-hand side in the output that all of our expected records have come through from the <em><strong>booksRead</strong></em> table defined in the <strong>Set </strong>node.</p><h3 id=\"step-3-configure-the-spreadsheet-file-node\">Step 3: Configure the Spreadsheet File node</h3><p>Now that we configured our <strong>PostgreSQL</strong> node and have verified the correct data is piping through, we can configure the <strong>Spreadsheet File</strong> node. </p><p>Our configuration will look as follows with the PostgreSQL data as the input:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://blog.n8n.io/content/images/2023/03/spreadsheet-file-configuration.png\" class=\"kg-image lightense-target\" alt=\"Spreadsheet File node configuration and output\" loading=\"lazy\" width=\"2000\" height=\"1047\" srcset=\"https://blog.n8n.io/content/images/size/w600/2023/03/spreadsheet-file-configuration.png 600w, https://blog.n8n.io/content/images/size/w1000/2023/03/spreadsheet-file-configuration.png 1000w, https://blog.n8n.io/content/images/size/w1600/2023/03/spreadsheet-file-configuration.png 1600w, https://blog.n8n.io/content/images/size/w2400/2023/03/spreadsheet-file-configuration.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption>Spreadsheet File node configuration and output</figcaption></figure><p>The first option is to select <strong>Write to File </strong>as our <strong>Operation</strong>. This selection dictates to the node that we want the data outputted as a file. Next, we choose <strong>CSV </strong>as our <strong>File Format</strong>. </p><p>We choose <strong>data </strong>as our <strong>Binary Property</strong>, and lastly, we open up options to specify how we want our file named. You can use the following expression to specify that our file is named with the string variable <strong>TableName</strong> from the <strong>Set </strong>node and that we want our file to include a <strong>Header Row</strong>. </p><!--kg-card-begin: html--><table style=\"border:none;border-collapse:collapse;\"><colgroup></colgroup><tbody><tr style=\"height:0pt\"><td style=\"vertical-align:top;background-color:#333333;padding:5pt 5pt 5pt 5pt;overflow:hidden;overflow-wrap:break-word;\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size:11pt;font-family:Consolas,sans-serif;color:#ffffff;background-color:#333333;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;\">{{ $node[\"TableName\"].json[\"TableName\"] }}.{{ $parameter[\"fileFormat\"] }}</span></p></td></tr></tbody></table><!--kg-card-end: html--><p>We can see from the righthand <strong>Output </strong>that our node created our <em><strong>booksRead.csv</strong></em> from the values defined in the <strong>Set </strong>node with the correct<em><strong> csv</strong></em> file extension. </p><p>With our export workflow in place, we now have an automated path to trigger PostgreSQL data exports into easy-to-work-with CSVs.</p><div class=\"kg-card kg-callout-card kg-callout-card-grey\"><div class=\"kg-callout-emoji\">ðŸ’¡</div><div class=\"kg-callout-text\">With <a href=\"https://n8n.io/integrations/?categories=3&amp;ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8nâ€™s many data integrations</a>, you can even take this workflow one step further and send a CSV of operational data to <a href=\"https://n8n.io/integrations/grafana/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Grafana</a> or product data to <a href=\"https://n8n.io/integrations/posthog/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Posthog</a>.</div></div><h2 id=\"wrap-up\">Wrap-up</h2><p>In this guide, we covered three techniques for exporting PostgreSQL tables to CSV. We covered using a <strong><em>COPY</em></strong> statement and <strong><em>\\copy </em></strong>command. These methods are not overly time-consuming on their own, but they require manual effort that becomes tedious at a higher scale. In the third approach, we use n8n to set up an export workflow that automates the process.</p><p>As new data enters the database, it is likely to be perpetually needed in new reports and synced to third-party tools. With one workflow, n8n removes the need to manually connect to your database server, specify the data that you want, and create a CSV export. From trigger to file creation, all the steps occur without a manual click of a button.</p><h2 id=\"what%E2%80%99s-next\">Whatâ€™s next</h2><p>Hereâ€™s what you can do next:</p><ul><li>Use different nodes for working with n8n and other databases like <a href=\"https://n8n.io/integrations/snowflake/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Snowflake</a>, <a href=\"https://n8n.io/integrations/mongodb/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">MongoDB</a>, and <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.mysql/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">MySQL</a>.</li><li>Check out other relevant workflows:</li></ul><p>-â€ƒ <a href=\"https://n8n.io/workflows/1363-join-data-from-postgres-and-mysql/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Joins PostgreSQL and MySQL data</a></p><p>-â€ƒ<a href=\"https://n8n.io/workflows/1-insert-excel-data-to-postgres/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Insert Excel data to PostgreSQL</a></p><p>-â€ƒ<a href=\"https://n8n.io/workflows/2-transfer-data-from-postgres-to-excel/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">Transfer data from PostgreSQL to Excel</a></p><ul><li>Check out <a href=\"https://n8n.io/case-studies/bordr/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">how n8n powers a $100K online business</a>.</li><li>Learn how to <a href=\"https://blog.n8n.io/export-sql-to-excel/\">export MySQL to Excel</a>.</li></ul><p>Register your <a href=\"https://n8n.io/cloud/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">n8n account in the cloud</a> and start automating for free! You can also <a href=\"https://docs.n8n.io/hosting/?ref=blog.n8n.io\" target=\"_blank\" rel=\"noopener\">run n8n on your server</a>.<br></p>\n\t\t<div class=\"newsletter-banner\">\n\t    <div class=\"newsletter-banner-content\">\n\t      <div class=\"section-header\">\n\t        <h2>Subscribe to <span>n8n newsletter</span></h2>\n\t        <div class=\"section-subheader--bottom\">\n\t          Get the best, coolest, and latest in automation and low-code delivered to your inbox each week.\n\t        </div>\n\t      </div>\n\t      <div class=\"newsletter-banner-form\">\n\t        <form autocomplete=\"off\" class=\"contact-form\" onsubmit=\"subscribeNewsletter(event)\">\n\t        \t<div id=\"recaptcha\" class=\"g-recaptcha\" data-sitekey=\"6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB\" data-callback=\"submitSubscription\" data-size=\"invisible\"><div class=\"grecaptcha-badge\" data-style=\"bottomright\" style=\"width: 256px; height: 60px; display: block; transition: right 0.3s ease 0s; position: fixed; bottom: 14px; right: -186px; box-shadow: gray 0px 0px 5px; border-radius: 2px; overflow: hidden;\"><div class=\"grecaptcha-logo\"><iframe title=\"reCAPTCHA\" width=\"256\" height=\"60\" role=\"presentation\" name=\"a-u9ssxvwcwlai\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/anchor?ar=1&amp;k=6LeAQeopAAAAAKlLsRb1weWm6T_vijoQBkGkbHzB&amp;co=aHR0cHM6Ly9ibG9nLm44bi5pbzo0NDM.&amp;hl=en&amp;v=jt8Oh2-Ue1u7nEbJQUIdocyd&amp;size=invisible&amp;cb=dmrgqgq633il\"></iframe></div><div class=\"grecaptcha-error\"></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;\"></textarea></div><iframe style=\"display: none;\"></iframe></div>\n\t          <div class=\"input-wrapper\">\n\t            <input placeholder=\"Email\" name=\"email\" type=\"email\" required=\"required\" class=\"\">\n\t            <div class=\"messages\">\n\t              <div class=\"message message--error\">Something went wrong. Please try again later.</div>\n\t              <div class=\"message message--success\">Subscribed!</div>\n\t            </div>\n\t          </div>\n\t          <button type=\"submit\" class=\"submit-btn\">Subscribe</button>\n\t        </form>\n\t      </div>\n\t    </div>\n    </div>\n\t\t<div class=\"post-share-section\">\n\t<div class=\"post-share-wrap\">\n\t\t<a href=\"https://twitter.com/intent/tweet?text=How%20to%20export%20data%20from%20PostgreSQL%20to%20CSV&amp;url=https://blog.n8n.io/postgres-export-to-csv/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Twitter share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\"></path></svg></a>\n\t\t<a href=\"https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/postgres-export-to-csv/\" target=\"_blank\" rel=\"noopener\" aria-label=\"Facebook share icon\"><svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"></path></svg></a>\n\t\t<!-- <a href=\"javascript:\" class=\"post-share-link\" id=\"copy\" data-clipboard-target=\"#copy-link\" aria-label=\"Copy link icon\"><svg role=\"img\" viewBox=\"0 0 33 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M27.3999996,13.4004128 L21.7999996,13.4004128 L21.7999996,19 L18.9999996,19 L18.9999996,13.4004128 L13.3999996,13.4004128 L13.3999996,10.6006192 L18.9999996,10.6006192 L18.9999996,5 L21.7999996,5 L21.7999996,10.6006192 L27.3999996,10.6006192 L27.3999996,13.4004128 Z M12,20.87 C7.101,20.87 3.13,16.898 3.13,12 C3.13,7.102 7.101,3.13 12,3.13 C12.091,3.13 12.181,3.139 12.272,3.142 C9.866,5.336 8.347,8.487 8.347,12 C8.347,15.512 9.866,18.662 12.271,20.857 C12.18,20.859 12.091,20.87 12,20.87 Z M20.347,0 C18.882,0 17.484,0.276 16.186,0.756 C14.882,0.271 13.473,0 12,0 C5.372,0 0,5.373 0,12 C0,18.628 5.372,24 12,24 C13.471,24 14.878,23.726 16.181,23.242 C17.481,23.724 18.88,24 20.347,24 C26.975,24 32.347,18.628 32.347,12 C32.347,5.373 26.975,0 20.347,0 Z\"/></svg></a>\n\t\t<small class=\"share-link-info\">The link has been copied!</small> -->\n\t</div>\n\t<input type=\"text\" value=\"https://blog.n8n.io/postgres-export-to-csv/\" id=\"copy-link\" aria-label=\"Copy link input\">\n</div>",
  "readme": "Many applications support CSV import and export because of its easy-to-read plain text or tabular format. Regardless of the use case, taking data from one program and putting it in another is a key step in data management processes. \n\nPostgreSQL offers several ways to export your data to CSV so that it can be used with other tools for reporting, analytics, or visualization. Knowing the methods PostgreSQL has at its disposal makes your data tasks simpler.\n\nIn this guide, we explore three different methods of PostgreSQL export to CSV: export using PostgreSQL **_COPY_ **SQL statement, export using PostgreSQL **_\\copy_** command, and lastly with [the workflow automation tool n8n.](https://n8n.io/?ref=blog.n8n.io)\n\n## How to export a CSV file from PostgreSQL?\n\nBefore we begin exporting PostgreSQL data to CSV, we will briefly recap the data in our sample table. If you have read our guide on [how to import CSV into PostgreSQL](https://blog.n8n.io/import-csv-into-postgresql/), we will use the same example. \n\nThis table was created including a bookâ€™s title, author, and date read using the following SQL statement:\n\nCREATE TABLE booksRead (  \n    book_id SERIAL,  \n    book_title VARCHAR(50),  \n    book_author VARCHAR(50),  \n    read_date DATE,  \n    PRIMARY KEY (book_id)  \n);  \n---  \n  \nYou can check the data in the table by using the _**SELECT**_ SQL statement:\n\nSELECT * FROM booksRead ORDER BY book_id ASC;  \n---  \n  \nThis statement asks for all of the records in the _**booksRead**_ table and orders them by their _**book_id**_ returning the following output:\n\n| book_id | book_title   | book_author    | read_date  |  \n|\\---------|--------------|--------------------|------------|  \n| 1   | Demons   | Fyodor Dostoyevsky | 2022-09-08 |  \n| 2   | Ulysses  | James Joyce    | 2022-05-06 |  \n| 3   | Catch-22  | Joseph Heller  | 2023-01-04 |  \n| 4   | The Bell Jar | Sylvia Plath   | 2023-01-21 |  \n| 5   | Frankenstein | Mary Shelley   | 2023-02-14 |  \n---  \n  \nOur exported CSV will include these columns in an easy-to-read spreadsheet format. CSV format will also make the data easy to integrate with other tools outside of PostgreSQL.\n\n## PostgreSQL export to CSV using the COPY statement\n\nThe first method we will demonstrate is exporting our PostgreSQL table in the command line using the _**COPY**_ statement. \n\nThe _**COPY**_ statement's function is to copy data between a file and a table or vice versa. You can read more about the _**COPY**_ statement in [PostgreSQL's Official Documentation](https://www.postgresql.org/docs/current/sql-copy.html?ref=blog.n8n.io).\n\n### Step 1: Configure the export specifications\n\nTo use _**COPY**_ to export a PostgreSQL table to CSV, we need to specify the table to export, the location to export the file to, the delimiter, and lastly if the file includes a row for headers.\n\nOur statement looks as follows:\n\nCOPY booksRead TO '/Users/ajemerich/books-read-export.csv' DELIMITER ',' CSV HEADER;  \n---  \n  \nPostgreSQL replies with the following message:\n\nCOPY 5  \n---  \n  \nThis reply tells us that our statement was executed successfully and a new file named _**books-read-export.csv**_ has been written to the specified file location.\n\n### Step 2: Confirm successful export\n\nTo verify, we can navigate to the folder we specified and see that the new CSV file is indeed there:\n\n![Newly exported CSV file location](https://blog.n8n.io/content/images/2023/03/export-file-location-1.png)Newly exported CSV file location\n\nAdditionally, if we open the file, weâ€™ll see that our CSV is formatted correctly with the expected data:\n\n![CSV data export](https://blog.n8n.io/content/images/2023/03/booksread-csv-export-1.png)CSV data export\n\n### COPY export with specific columns\n\nTo take things one step further, you can also specify PostgreSQL to export the table with only a subset of the tableâ€™s columns. To do this, we alter our previous _**COPY**_ statement to include only the column names we went. \n\nOur altered statement looks like the following:\n\nCOPY booksRead(book_title,book_author) TO '/Users/ajemerich/books-read-export-partial.csv' DELIMITER ',' CSV HEADER;  \n---  \n  \nEverything else remains the same, except we call the file _**books-read-export-partial.csv**_ , and our CSV export will only include the _**book_title**_ and _**book_author**_ column data.\n\nWe can confirm by opening the file:\n\n![File export with partial data](https://blog.n8n.io/content/images/2023/03/booksread-csv-export-partial.png)File export with partial data\n\n## PostgreSQL export to CSV using the \\copy command\n\nWe can also export a PostgreSQL table to a CSV in the command line using the _**\\copy**_ command. This method is best when you have access to a remote PostgreSQL database, but you donâ€™t have file-writing permissions to use the _**COPY**_ statement from the previous method. \n\nThe _**\\copy**_ command is a built-in PostgreSQL command executed by psql. You can read more about _**\\copy**_ in the [Official PostgreSQL Documentation](https://www.postgresql.org/docs/current/app-psql.html?ref=blog.n8n.io#APP-PSQL-META-COMMANDS-COPY).\n\n### Step 1: Configure the export\n\nThe _**\\copy**_ command method has the same steps as the _**COPY**_ statement method with changes in the syntax. To export a PostgreSQL table to CSV, we need to specify the table to export, the location to export the file to, the delimiter, and lastly if the file includes a row for headers.\n\nOur command looks as follows:\n\n\\copy (SELECT * FROM booksRead) to '/Users/ajemerich/books-read-export-2.csv' with csv header  \n---  \n  \nPostgreSQL replies with the following message:\n\nCOPY 5  \n---  \n  \nThis reply tells us that our statement was executed successfully and a new file with the name _**books-read-export-2.csv**_ has been written to the specified file location.\n\n### Step 2: Confirm successful export\n\nTo verify, we can navigate to the folder we specified and see that the new CSV file is indeed there:\n\n![Newly exported CSV file location](https://blog.n8n.io/content/images/2023/03/export-file-location-2-3.png)Newly exported CSV file location\n\nAdditionally, if we open the file, weâ€™ll see that our CSV is formatted correctly with the expected data:\n\n![CSV data export](https://blog.n8n.io/content/images/2023/03/booksread-csv-export-2-3.png)CSV data export\n\n### \\copy export with specific columns\n\nYou can also specify PostgreSQL to export the table with only a subset of the tableâ€™s columns. To do this, we alter our previous _**\\copy**_ command to include only the column names we went. \n\nOur altered statement looks like the following:\n\n\\copy (SELECT book_title, book_author FROM booksRead) to '/Users/ajemerich/books-read-export-2-partial.csv' with csv header  \n---  \n  \nEverything else remains the same, except we call the file _**books-read-export-partial-2.csv**_ , and our CSV export will only include the _**book_title**_ and _**book_author**_ column data.\n\nWe can confirm by opening the file:\n\n![File export with partial data](https://blog.n8n.io/content/images/2023/03/booksread-csv-export-2-partial.png)File export with partial data\n\n## PostgreSQL export to CSV automatically with n8n\n\nSo far, the discussed methods successfully achieve our goal, but they primarily work well as one-off methods to create a CSV. As database exports increase, manually connecting to your PostgreSQL server and generating a file becomes tedious and takes time away from more important tasks.\n\nWith n8n, you can automate typing in the command line, grabbing the file, and sending it where it needs to go,  freeing up time for more exciting work.\n\nLetâ€™s take a look at [using an n8n workflow to automate exporting PostgreSQL tables to CSV](https://n8n.io/workflows/1902-convert-postgresql-table-to-csv/?ref=blog.n8n.io):\n\n![n8n workflow to export PostgreSQL data to CSV](https://blog.n8n.io/content/images/2023/03/n8n-psql-to-csv-workflow.png)n8n workflow to export PostgreSQL data to CSV\n\n### Step 1: Connect nodes to your workflow  \n\n\nWithin this workflow, there are 4 nodes:\n\n  1. The first node tells the workflow to run on click of **Execute Workflow**. In real-world applications, the trigger could be on a schedule or from another app event. You can check out all available options in the [Trigger Node Documentation](https://docs.n8n.io/integrations/builtin/trigger-nodes/?ref=blog.n8n.io).  \n\n  2. Next goes the[ Set](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/?ref=blog.n8n.io) node. String variable **TableName** is declared there and it is equal to **booksRead**. Set node allows us to automatically create Excel file and sheet names.\n\n![Set Node inputs](https://blog.n8n.io/content/images/2023/03/set-node-inputs.png)Set Node inputs\n\n3\\. The third node is a [PostgreSQL node](https://n8n.io/integrations/postgres/?ref=blog.n8n.io) which connects to a remote database. You will need to set up credentials first, please refer to a tutorial on [how to import a CSV into PostgreSQL](https://blog.n8n.io/import-csv-into-postgresql/). \n\n4\\. Lastly, the [Spreadsheet File node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.spreadsheetfile/?utm_source=n8n_app&utm_medium=node_settings_modal-credential_link&utm_campaign=n8n-nodes-base.spreadsheetFile) is used to specify the final operation telling the workflow what to do with the PostgreSQL table.\n\n### Step 2: Configure the PostgreSQL node\n\nWith our Trigger and Set nodes configured and our PostgreSQL connection secured, we can configure our PostgreSQL node to generate an export. \n\nOur configuration will look as follows with a few key things to point out:\n\n![PostgreSQL node configuration and query output](https://blog.n8n.io/content/images/2023/03/postgresql-query-output.png)PostgreSQL node configuration and query output\n\nFirstly, we want our node operation to be set to **Execute Query.** This tells the node to execute the SQL query that we specify in the next field. \n\nIn our **Query** field, we populate with the following **expression** referencing the string variable name we declared in the **Set** node.\n\nSELECT * FROM {{ $json[\"TableName\"] }}  \n---  \n  \nWe can see on the right-hand side in the output that all of our expected records have come through from the _**booksRead**_ table defined in the **Set** node.\n\n### Step 3: Configure the Spreadsheet File node\n\nNow that we configured our **PostgreSQL** node and have verified the correct data is piping through, we can configure the **Spreadsheet File** node. \n\nOur configuration will look as follows with the PostgreSQL data as the input:\n\n![Spreadsheet File node configuration and output](https://blog.n8n.io/content/images/2023/03/spreadsheet-file-configuration.png)Spreadsheet File node configuration and output\n\nThe first option is to select **Write to File** as our **Operation**. This selection dictates to the node that we want the data outputted as a file. Next, we choose **CSV** as our **File Format**. \n\nWe choose **data** as our **Binary Property** , and lastly, we open up options to specify how we want our file named. You can use the following expression to specify that our file is named with the string variable **TableName** from the **Set** node and that we want our file to include a **Header Row**. \n\n{{ $node[\"TableName\"].json[\"TableName\"] }}.{{ $parameter[\"fileFormat\"] }}  \n---  \n  \nWe can see from the righthand **Output** that our node created our _**booksRead.csv**_ from the values defined in the **Set** node with the correct _**csv**_ file extension. \n\nWith our export workflow in place, we now have an automated path to trigger PostgreSQL data exports into easy-to-work-with CSVs.\n\nðŸ’¡\n\nWith [n8nâ€™s many data integrations](https://n8n.io/integrations/?categories=3&ref=blog.n8n.io), you can even take this workflow one step further and send a CSV of operational data to [Grafana](https://n8n.io/integrations/grafana/?ref=blog.n8n.io) or product data to [Posthog](https://n8n.io/integrations/posthog/?ref=blog.n8n.io).\n\n## Wrap-up\n\nIn this guide, we covered three techniques for exporting PostgreSQL tables to CSV. We covered using a **_COPY_** statement and **_\\copy_** command. These methods are not overly time-consuming on their own, but they require manual effort that becomes tedious at a higher scale. In the third approach, we use n8n to set up an export workflow that automates the process.\n\nAs new data enters the database, it is likely to be perpetually needed in new reports and synced to third-party tools. With one workflow, n8n removes the need to manually connect to your database server, specify the data that you want, and create a CSV export. From trigger to file creation, all the steps occur without a manual click of a button.\n\n## Whatâ€™s next\n\nHereâ€™s what you can do next:\n\n  * Use different nodes for working with n8n and other databases like [Snowflake](https://n8n.io/integrations/snowflake/?ref=blog.n8n.io), [MongoDB](https://n8n.io/integrations/mongodb/?ref=blog.n8n.io), and [MySQL](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.mysql/?ref=blog.n8n.io).\n  * Check out other relevant workflows:\n\n\n\n\\- [Joins PostgreSQL and MySQL data](https://n8n.io/workflows/1363-join-data-from-postgres-and-mysql/?ref=blog.n8n.io)\n\n\\- [Insert Excel data to PostgreSQL](https://n8n.io/workflows/1-insert-excel-data-to-postgres/?ref=blog.n8n.io)\n\n\\- [Transfer data from PostgreSQL to Excel](https://n8n.io/workflows/2-transfer-data-from-postgres-to-excel/?ref=blog.n8n.io)\n\n  * Check out [how n8n powers a $100K online business](https://n8n.io/case-studies/bordr/?ref=blog.n8n.io).\n  * Learn how to [export MySQL to Excel](https://blog.n8n.io/export-sql-to-excel/).\n\n\n\nRegister your [n8n account in the cloud](https://n8n.io/cloud/?ref=blog.n8n.io) and start automating for free! You can also [run n8n on your server](https://docs.n8n.io/hosting/?ref=blog.n8n.io).  \n\n\n## Subscribe to n8n newsletter\n\nGet the best, coolest, and latest in automation and low-code delivered to your inbox each week. \n\nSomething went wrong. Please try again later.\n\nSubscribed!\n\nSubscribe\n\n[](https://twitter.com/intent/tweet?text=How%20to%20export%20data%20from%20PostgreSQL%20to%20CSV&url=https://blog.n8n.io/postgres-export-to-csv/) [](https://www.facebook.com/sharer/sharer.php?u=https://blog.n8n.io/postgres-export-to-csv/)\n",
  "crawled_at": "2025-05-28T10:50:55.166835"
}