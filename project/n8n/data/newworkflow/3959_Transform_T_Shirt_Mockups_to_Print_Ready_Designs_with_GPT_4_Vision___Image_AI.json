{
  "url": "https://n8n.io/workflows/3959-transform-t-shirt-mockups-to-print-ready-designs-with-gpt-4-vision-and-image-ai/",
  "title": "Transform T-Shirt Mockups to Print-Ready Designs with GPT-4 Vision & Image AI",
  "author": "Thong",
  "publish_date": "Last update 21 hours ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "Design"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"mx9hxNtV34X4yLo4\",\"meta\":{\"instanceId\":\"df9ffe0ce66252bcc29753df3925c45bd5340ded4ecdfc4be9cdb17ed78e229b\",\"templateCredsSetupCompleted\":true},\"name\":\"Redesign\",\"tags\":[],\"nodes\":[{\"id\":\"dc90044d-f5a1-4f75-80c2-d8ae33fe66e3\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-380,-100],\"parameters\":{\"text\":\"={{ $json.content }}\",\"options\":{\"systemMessage\":\"You are a creative prompt generation assistant specialized in T-shirt artwork refinement.\\nYour job is to analyze an existing T-shirt design user message above and create a new, upgraded version that preserves the original layout, overall structure, and message placement, but enhances its visual style, mood, and artistic quality.\\n\\n‚ú¶ Keep all key design elements and text in their original positions ‚Äî do not remove or move important words or graphics.\\n‚ú¶ Improve the typography by suggesting more expressive font styling (e.g., handwritten, retro, bold serif, clean sans-serif, brush script), and enhance the lettering arrangement to feel more dynamic, elegant, or visually balanced.\\n‚ú¶ Enhance illustrative elements, texture, and background details to feel more artistic, emotional, or premium ‚Äî without overwhelming the message.\\n‚ú¶ Use descriptive, natural language to generate a final prompt that can be used with Midjourney, DALL¬∑E, or other image-generation AIs.\\n‚ú¶ The new version should feel like a refined and artistic redesign, not a complete concept change.\\n‚ú¶ Invisible background\\n\\nRule:\\n- Output the final design prompt as a single plain-text sentence, without markdown, formatting, or line breaks. Make sure the prompt is concise but expressive, suitable for use inside a JSON payload or passed into an image generation API. All key elements must remain: characters, objects, text styling, and background mood ‚Äî but the format should be clean, compact, and system-friendly.\\n- Format the output as a single line of plain text, using escaped double quotes (\\\\\\\") where needed, suitable for inclusion in a JSON string without formatting issues.\"},\"promptType\":\"define\"},\"typeVersion\":1.9},{\"id\":\"2e2f4744-5cd0-48ca-a547-26f6b48563c0\",\"name\":\"OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[-600,-100],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o\",\"cachedResultName\":\"GPT-4O\"},\"options\":{},\"resource\":\"image\",\"imageUrls\":\"={{ $json.chatInput }}\",\"operation\":\"analyze\"},\"credentials\":{\"openAiApi\":{\"id\":\"l51tyBcX4FuEb6tX\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.8},{\"id\":\"b4a4329a-1687-470b-9531-03ee56ad8c9e\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-420,120],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"15P9TuEdDQwlWhIR\",\"name\":\"OpenAi account 2\"}},\"typeVersion\":1.2},{\"id\":\"fc9db6a3-3890-4f9b-928a-c8dd0f8141fa\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-1040,-100],\"webhookId\":\"22b3dae3-95e5-4bfa-8187-9dca2dc72f85\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"22756276-04ed-43bd-aa58-9e45a751f218\",\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[-820,-100],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"cb4e9a22-d429-4d11-b536-5d8760dd5042\",\"operator\":{\"type\":\"string\",\"operation\":\"startsWith\"},\"leftValue\":\"={{ $json.chatInput }}\",\"rightValue\":\"https://\"}]}},\"typeVersion\":2.2},{\"id\":\"f39376fd-6310-4576-b07c-38c91f17de8c\",\"name\":\"Code\",\"type\":\"n8n-nodes-base.code\",\"position\":[0,-100],\"parameters\":{\"jsCode\":\"const rawContent = $json.output;\\n\\n// 1. Replace all line breaks with spaces\\nlet cleaned = rawContent.replace(/\\\\n/g, ' ');\\n\\n// 2. Trim any extra spaces at the beginning and end\\ncleaned = cleaned.trim();\\n\\n// 3. Escape backslashes and double quotes for JSON safety\\nlet escaped = cleaned.replace(/\\\\\\\\/g, '\\\\\\\\\\\\\\\\').replace(/\\\"/g, '\\\\\\\\\\\"');\\n\\n// 4. Remove leading or trailing escaped quotes if accidentally included\\nescaped = escaped.replace(/^\\\\\\\\\\\\\\\"/, '').replace(/\\\\\\\\\\\\\\\"$/, '');\\n\\n// 5. Return the cleaned and fully escaped string\\nreturn [\\n  {\\n    json: {\\n      escapedString: escaped\\n    }\\n  }\\n];\\n\"},\"typeVersion\":2},{\"id\":\"b5d6638a-683a-41c9-a2a2-349b7390d2da\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1140,-200],\"parameters\":{\"width\":280,\"height\":260,\"content\":\"## Send a mockup image url to chat\"},\"typeVersion\":1},{\"id\":\"3c81f3be-d7f8-4874-a48b-29b9b8da1496\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-640,-240],\"parameters\":{\"color\":5,\"width\":540,\"height\":300,\"content\":\"## Analyze image and generate new prompt\"},\"typeVersion\":1},{\"id\":\"361d4c52-3edc-464d-af89-4013dd4b95f0\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[140,-240],\"parameters\":{\"color\":3,\"width\":680,\"height\":300,\"content\":\"## Generate the new Tshirt design\"},\"typeVersion\":1},{\"id\":\"8fa31818-fb07-4571-8ec6-c740041c3a82\",\"name\":\"OpenAI1\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[420,-100],\"parameters\":{\"model\":\"gpt-image-1\",\"prompt\":\"={{ $json.escapedString }}\",\"options\":{},\"resource\":\"image\"},\"credentials\":{\"openAiApi\":{\"id\":\"15P9TuEdDQwlWhIR\",\"name\":\"OpenAi account 2\"}},\"typeVersion\":1.8}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"5b68be8b-463b-466c-983b-a2156bde419d\",\"connections\":{\"If\":{\"main\":[[{\"node\":\"OpenAI\",\"type\":\"main\",\"index\":0}]]},\"Code\":{\"main\":[[{\"node\":\"OpenAI1\",\"type\":\"main\",\"index\":0}]]},\"OpenAI\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"AI Agent\":{\"main\":[[{\"node\":\"Code\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "üß† What This Workflow Does\n\nThis n8n workflow allows you to upload a T-shirt mockup design (even if it's rough or outdated), and automatically turns it into a refined, print-ready artwork using the power of AI.\n\nIt starts with an image of a T-shirt design, analyzes it using OpenAI's vision model, and then generates a cleaner, upgraded prompt to be used with OpenAI‚Äôs image generation API (gpt-image-1). The final output is a new T-shirt graphic optimized for printing on solid black background, with no visible shirt or mockup framing.\n\n‚öôÔ∏è How It Works\n\n  1. User Sends a T-shirt Mockup Image Link  \nThe workflow begins when the user drops an image link (T-shirt mockup) into a chat interface or input trigger.\n\n  2. AI Analyzes the Image (OpenAI Vision)  \nUsing OpenAI‚Äôs GPT-4 vision capabilities, the workflow extracts the key design elements from the image:\n\n\n\n  * Characters, text, layout\n  * Graphic style, composition\n  * Visual tone and focus\n  * AI Agent Creates a Refined Prompt\n  * The extracted details are passed to an AI agent that:\n  * Preserves the original layout and message\n  *   * Enhances the visual composition and typography\n  * Removes mockup elements like shirt collar, sleeves, shadows.\n  * Locks the artwork on a pure black background only\n  * Outputs a clean, artistic, JSON-safe one-line prompt for generation\n\n\n  1. Text Escaping for API Compatibility  \nA JavaScript function node escapes the prompt (quotes, slashes, line breaks) to make it safe for use in downstream JSON requests.\n\n  2. Image Generation via GPT-Image-1 API  \nThe final prompt is sent to OpenAI‚Äôs gpt-image-1 to generate a brand-new artwork ‚Äî ideal for direct printing on a black T-shirt.\n\n\n\n\n‚ö†Ô∏è Cost Notice for gpt-image-1 Usage\n\nThis workflow uses OpenAI's gpt-image-1 model to generate high-quality T-shirt artwork from refined prompts. Please note that this model is a paid service, and each image generation request may cost approximately $0.25 per design, depending on resolution and usage.\n\nWe strongly recommend users to review their OpenAI API usage plan and be mindful of costs when running this workflow, especially if generating in bulk or integrating into larger automation flows.\n\nYou can monitor your usage at: <https://platform.openai.com/docs/models/gpt-image-1>\n\n  1. (Optional) You can send the result to Telegram, upload to Notion, or store it in your design system.\n\n\n\n## ‚úÖ Key Features\n\n  * Works from any uploaded mockup image\n  * Converts design concepts into print-ready artwork prompts\n  * Avoids outputting shirt models, collars, or product mockups\n  * Optimized for solid black background with no distractions\n  * Modular and easy to connect with file delivery or approval flows\n\n\n\nüöÄ How to Use\n\n  * Import the .json workflow into n8n\n  * Configure your OpenAI credentials for both vision and image APIs\n  * Trigger the flow by sending an image url of a T-shirt mockup\n  * Let the workflow generate and return a brand-new design from that concept\n\n\n",
  "crawled_at": "2025-05-26T06:07:08.154219",
  "readme_zh": "üß† Â∑•‰ΩúÊµÅÂäüËÉΩ\n\nÊú¨n8nÂ∑•‰ΩúÊµÅÂèØËÆ©ÊÇ®‰∏ä‰º†TÊÅ§ËÆæËÆ°Ê†∑Á®øÔºàÂç≥‰æøÊòØÁ≤óÁ≥ôÊàñËøáÊó∂ÁöÑÁâàÊú¨ÔºâÔºåÈÄöËøáAIÊäÄÊúØËá™Âä®Â∞ÜÂÖ∂ËΩ¨Âåñ‰∏∫Á≤æ‰øÆÂêéÁöÑÂç∞Âà∑Á∫ßÊàêÂìÅÂõæÊ°à„ÄÇÊµÅÁ®ãÂßã‰∫éTÊÅ§ËÆæËÆ°ÂõæÔºåÁªèOpenAIËßÜËßâÊ®°ÂûãÂàÜÊûêÂêéÔºåÁîüÊàê‰ºòÂåñÁâàÊèêÁ§∫ËØçÂπ∂Ë∞ÉÁî®ÂõæÂÉèÁîüÊàêAPIÔºàgpt-image-1ÔºâÔºåÊúÄÁªàËæìÂá∫ÈÄÇÈÖçÁ∫ØÈªëÂ∫ïËâ≤ÁöÑÂç∞Âà∑Áî®ÂõæÊ°àÊñá‰ª∂Ôºà‰∏çÂê´Ë°£Áâ©Ê®°ÂûãÊàñÊ†∑Êú∫ËæπÊ°ÜÔºâ„ÄÇ\n\n‚öôÔ∏è ËøêË°åÂéüÁêÜ\n\n1. Áî®Êà∑Êèê‰∫§TÊÅ§Ê†∑ÂõæÈìæÊé•  \nÈÄöËøáËÅäÂ§©ÁïåÈù¢ÊàñËß¶ÂèëÂô®ËæìÂÖ•TÊÅ§Ê†∑ÂõæURLÂêØÂä®ÊµÅÁ®ã\n\n2. AIÂõæÂÉèËß£ÊûêÔºàOpenAIËßÜËßâÊ®°ÂûãÔºâ  \nË∞ÉÁî®GPT-4ËßÜËßâËÉΩÂäõÊèêÂèñËÆæËÆ°Ê†∏ÂøÉË¶ÅÁ¥†Ôºö\n   * ËßíËâ≤/ÊñáÂ≠ó/ÁâàÂºè\n   * ÂõæÂΩ¢È£éÊ†º‰∏éÊûÑÂõæ\n   * ËßÜËßâÂü∫Ë∞É‰∏éÁÑ¶ÁÇπ\n\n3. AI‰ª£ÁêÜÁîüÊàê‰ºòÂåñÊèêÁ§∫ËØç  \nËß£ÊûêÊï∞ÊçÆ‰º†ÈÄíÁªôAI‰ª£ÁêÜÂêéÔºö\n   * ‰øùÁïôÂéüÂßãÁâàÂºè‰∏é‰∏ªÈ¢ò\n   * Â¢ûÂº∫ËßÜËßâÊûÑÊàê‰∏éÂ≠ó‰ΩìËÆæËÆ°\n   * ÂéªÈô§Ë°£È¢Ü/Ë¢ñÂè£/Èò¥ÂΩ±Á≠âÊ†∑Êú∫ÂÖÉÁ¥†\n   * ÈîÅÂÆöÁ∫ØÈªëËÉåÊôØ\n   * ËæìÂá∫ÂçïË°åJSONÂÖºÂÆπÁöÑÁÆÄÊ¥ÅËâ∫ÊúØÂåñÊèêÁ§∫ËØç\n\n4. ÊñáÊú¨ËΩ¨‰πâÂ§ÑÁêÜ  \nJavaScriptËäÇÁÇπÂØπÊèêÁ§∫ËØçËøõË°åËΩ¨‰πâÂ§ÑÁêÜÔºàÂºïÂè∑/ÊñúÊù†/Êç¢Ë°åÁ¨¶ÔºâÔºåÁ°Æ‰øùAPIË∞ÉÁî®ÂÆâÂÖ®\n\n5. Ë∞ÉÁî®GPT-Image-1ÁîüÊàêÂõæÂÉè  \nÊúÄÁªàÊèêÁ§∫ËØçÂèëÈÄÅËá≥OpenAIÂõæÂÉèAPIÔºåÁîüÊàêÂèØÁõ¥Êé•Âç∞Âà∑‰∫éÈªëTÊÅ§ÁöÑÂÖ®Êñ∞ÂõæÊ°à\n\n‚ö†Ô∏è ÊàêÊú¨ÊèêÁ§∫\n\nÊú¨Â∑•‰ΩúÊµÅ‰ΩøÁî®OpenAI‰ªòË¥πÊúçÂä°gpt-image-1Ê®°ÂûãÔºåÂçïÊ¨°ÂõæÊ°àÁîüÊàêÁ∫¶ÈúÄ$0.25ÔºàËßÜÂàÜËæ®ÁéáËÄåÂÆöÔºâ„ÄÇÂª∫ËÆÆÁî®Êà∑ÊèêÂâçÊ†∏Êü•APIÁî®ÈáèËÆ°ÂàíÔºåÊâπÈáèÁîüÊàêÊó∂ÁâπÂà´Ê≥®ÊÑèÊàêÊú¨ÊéßÂà∂„ÄÇÁî®ÈáèÁõëÊéßÂú∞ÂùÄÔºö<https://platform.openai.com/docs/models/gpt-image-1>\n\n6. ÔºàÂèØÈÄâÔºâÁªìÊûúÂèØÊé®ÈÄÅËá≥Telegram/NotionÊàñÂ≠òÂÖ•ËÆæËÆ°Á≥ªÁªü\n\n## ‚úÖ Ê†∏ÂøÉ‰ºòÂäø\n\n* ÂÖºÂÆπ‰ªªÊÑèÊ†∑Á®øÂõæÁâáËæìÂÖ•\n* Â∞ÜÊ¶ÇÂøµËÆæËÆ°ËΩ¨Âåñ‰∏∫Âç∞Âà∑Á∫ßÂõæÊ°à\n* Ëá™Âä®ËßÑÈÅøË°£Áâ©Ê®°Âûã/È¢ÜÂè£Á≠âÈùûËÆæËÆ°ÂÖÉÁ¥†\n* Á∫ØÂáÄÈªëÂ∫ïÊó†Âπ≤Êâ∞‰ºòÂåñ\n* Ê®°ÂùóÂåñËÆæËÆ°ÔºåËΩªÊùæÂØπÊé•Êñá‰ª∂‰∫§‰ªò/ÂÆ°ÊâπÊµÅÁ®ã\n\nüöÄ ‰ΩøÁî®ÊåáÂçó\n\n* Â∞Ü.jsonÂ∑•‰ΩúÊµÅÂØºÂÖ•n8n\n* ÈÖçÁΩÆOpenAIÂèåAPIÂá≠ËØÅÔºàËßÜËßâ+ÂõæÂÉèÔºâ\n* Êèê‰∫§TÊÅ§Ê†∑ÂõæURLËß¶ÂèëÊµÅÁ®ã\n* Ëé∑ÂèñÂü∫‰∫éÂéüÊ¶ÇÂøµÁöÑÂÖ®Êñ∞ËÆæËÆ°ÊñπÊ°à",
  "title_zh": "Âà©Áî®GPT-4ËßÜËßâ‰∏éÂõæÂÉèAIÊäÄÊúØÂ∞ÜTÊÅ§ÊïàÊûúÂõæËΩ¨Âåñ‰∏∫ÂèØÂç∞Âà∑ËÆæËÆ°",
  "publish_date_zh": "ÊúÄÂêéÊõ¥Êñ∞‰∫é5Â§©Ââç",
  "workflow_json_zh": "{\n  \"id\": \"ZpgJpdtmq6MM1jr2\",\n  \"meta\": {\n    \"instanceId\": \"df9ffe0ce66252bcc29753df3925c45bd5340ded4ecdfc4be9cdb17ed78e229b\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"AI T-Shirt Redesign Workflow from any Mockup Image\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"97ce19f8-d83b-481d-a5c4-8ed46a06f18d\",\n      \"name\": \"HTTP Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        360,\n        -600\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.openai.com/v1/images/generations\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"gpt-image-1\\\",\\n  \\\"prompt\\\": \\\"{{ $json.escapedString }}\\\",\\n  \\\"n\\\": 1,\\n  \\\"size\\\": \\\"1024x1536\\\",\\n  \\\"quality\\\": \\\"high\\\"\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"15P9TuEdDQwlWhIR\",\n          \"name\": \"OpenAi account 2\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3ba73c97-c6d7-4275-8c8c-064a49762edb\",\n      \"name\": \"Convert to File\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        780,\n        -600\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"toBinary\",\n        \"sourceProperty\": \"data[0].b64_json\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"4b0c830c-caea-420c-b547-048ef795e542\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        560,\n        -600\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"data[0].b64_json\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d06e9bde-0fee-42dc-9c3d-004c97c1ee49\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        -220,\n        -600\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.content }}\",\n        \"options\": {\n          \"systemMessage\": \"You are a creative prompt generation assistant specialized in T-shirt artwork refinement.\\nYour job is to analyze an existing T-shirt design user message above and create a new, upgraded version that preserves the original layout, overall structure, and message placement, but enhances its visual style, mood, and artistic quality.\\n\\n‚ú¶ Keep all key design elements and text in their original positions ‚Äî do not remove or move important words or graphics.\\n‚ú¶ Improve the typography by suggesting more expressive font styling (e.g., handwritten, retro, bold serif, clean sans-serif, brush script), and enhance the lettering arrangement to feel more dynamic, elegant, or visually balanced.\\n‚ú¶ Enhance illustrative elements, texture, and background details to feel more artistic, emotional, or premium ‚Äî without overwhelming the message.\\n‚ú¶ Use descriptive, natural language to generate a final prompt that can be used with Midjourney, DALL¬∑E, or other image-generation AIs.\\n‚ú¶ The new version should feel like a refined and artistic redesign, not a complete concept change.\\n‚ú¶ Solid black background\\n\\nRule:\\n- Output the final design prompt as a single plain-text sentence, without markdown, formatting, or line breaks. Make sure the prompt is concise but expressive, suitable for use inside a JSON payload or passed into an image generation API. All key elements must remain: characters, objects, text styling, and background mood ‚Äî but the format should be clean, compact, and system-friendly.\\n- Format the output as a single line of plain text, using escaped double quotes (\\\\\\\") where needed, suitable for inclusion in a JSON string without formatting issues.\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"f54f401d-5fd3-482f-903d-322acabfcce4\",\n      \"name\": \"OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        -420,\n        -600\n      ],\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o\",\n          \"cachedResultName\": \"GPT-4O\"\n        },\n        \"options\": {},\n        \"resource\": \"image\",\n        \"imageUrls\": \"https://m.media-amazon.com/images/I/B1pppR4gVKL._CLa%7C2140%2C2000%7C91-OyNW80tL.png%7C0%2C0%2C2140%2C2000%2B0.0%2C0.0%2C2140.0%2C2000.0_AC_SX342_SY445_.png\",\n        \"operation\": \"analyze\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"l51tyBcX4FuEb6tX\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"b867eeda-8eea-4574-8537-a7130e8710c3\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -260,\n        -380\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"15P9TuEdDQwlWhIR\",\n          \"name\": \"OpenAi account 2\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8877fbdc-091b-4a1c-82cf-bf980a8c3045\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -1000,\n        -560\n      ],\n      \"webhookId\": \"22b3dae3-95e5-4bfa-8187-9dca2dc72f85\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"90fe70c2-3b64-4d28-82a8-c575b26c8b5b\",\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -700,\n        -560\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"cb4e9a22-d429-4d11-b536-5d8760dd5042\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"startsWith\"\n              },\n              \"leftValue\": \"={{ $json.chatInput }}\",\n              \"rightValue\": \"https://\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"00509d12-784c-4f9f-a5e4-fdccf5382d2e\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        140,\n        -600\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const rawContent = $json.output;\\n\\n// 1. Replace all line breaks with spaces\\nlet cleaned = rawContent.replace(/\\\\n/g, ' ');\\n\\n// 2. Trim any extra spaces at the beginning and end\\ncleaned = cleaned.trim();\\n\\n// 3. Escape backslashes and double quotes for JSON safety\\nlet escaped = cleaned.replace(/\\\\\\\\/g, '\\\\\\\\\\\\\\\\').replace(/\\\"/g, '\\\\\\\\\\\"');\\n\\n// 4. Remove leading or trailing escaped quotes if accidentally included\\nescaped = escaped.replace(/^\\\\\\\\\\\\\\\"/, '').replace(/\\\\\\\\\\\\\\\"$/, '');\\n\\n// 5. Return the cleaned and fully escaped string\\nreturn [\\n  {\\n    json: {\\n      escapedString: escaped\\n    }\\n  }\\n];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"caec0c49-a46c-42a5-bb64-f6ba86490eef\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1060,\n        -640\n      ],\n      \"parameters\": {\n        \"width\": 280,\n        \"height\": 260,\n        \"content\": \"## ÂèëÈÄÅ‰∏Ä‰∏™Ê®°ÊãüÂõæÂÉèÁΩëÂùÄÂà∞ËÅäÂ§©\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d0862a3b-7409-49a9-b68e-ff7046031885\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -460,\n        -680\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 540,\n        \"height\": 300,\n        \"content\": \"## ÂàÜÊûêÂõæÂÉèÂπ∂ÁîüÊàêÊñ∞ÊèêÁ§∫\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cea5c30b-154a-4c51-9b9a-e187c27224d7\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        -680\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 680,\n        \"height\": 300,\n        \"content\": \"## ÁîüÊàêÊñ∞ÁöÑTÊÅ§ËÆæËÆ°\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"1a42d08d-cca5-4eab-a041-770d1a7da235\",\n  \"connections\": {\n    \"If\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        []\n      ]\n    },\n    \"Code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert to File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to File\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}