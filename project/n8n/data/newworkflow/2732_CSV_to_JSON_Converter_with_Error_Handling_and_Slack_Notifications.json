{
  "url": "https://n8n.io/workflows/2732-csv-to-json-converter-with-error-handling-and-slack-notifications/",
  "title": "CSV to JSON Converter with Error Handling and Slack Notifications",
  "author": "n8n Team",
  "publish_date": "Last update 4 months ago",
  "publish_date_absolute": "2025-01-26",
  "categories": [
    {
      "name": "Engineering"
    }
  ],
  "workflow_json": "{\"nodes\":[{\"id\":\"b73fed9b-d56c-4175-a310-8c09ed51acd2\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[80,60],\"parameters\":{\"width\":464,\"height\":303,\"content\":\"## Testing \\n\\nTesting can be done with CURL or similar.\\n\\nFor File posting using Form Data\\ncurl -X POST \\\"https://yoururl.com/webhook-test/tool/csv-to-json\\\" \\\\\\n     -H \\\"Content-Type: text/csv\\\" \\\\\\n     --data-binary @path/to/your/file.csv\\n\\n\\nThis can also be tested using the Test workflow\"},\"typeVersion\":1},{\"id\":\"6ed4b2cc-444f-44e2-ab91-34337acd7a9b\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1680,580],\"parameters\":{\"color\":4,\"width\":396,\"height\":256,\"content\":\"## Response\\nWhere possible we will be returning a binary object.\\n```\\nIf there is an error\\n```\\n{\\n  \\\"status\\\": \\\"error\\\",\\n  \\\"data\\\": \\\"error message to display\\\"\\n}\\n```\"},\"typeVersion\":1},{\"id\":\"4eff962e-e636-4704-835a-672ccd705e16\",\"name\":\"Extract From File\",\"type\":\"n8n-nodes-base.extractFromFile\",\"onError\":\"continueErrorOutput\",\"position\":[680,80],\"parameters\":{\"options\":{},\"binaryPropertyName\":\"data0\"},\"typeVersion\":1},{\"id\":\"ccc66f1e-e000-4048-a492-b80fbf8c8fce\",\"name\":\"Error Response\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"onError\":\"continueErrorOutput\",\"position\":[1900,900],\"parameters\":{\"options\":{\"responseCode\":500},\"respondWith\":\"json\",\"responseBody\":\"{\\n  \\\"status\\\": \\\"error\\\",\\n  \\\"data\\\": \\\"There was a problem converting your CSV. Please refresh the page and try again.\\\"\\n}\"},\"typeVersion\":1},{\"id\":\"a7d34aba-6ded-4cc8-8866-7d4aa6ae3255\",\"name\":\"Success Response\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"onError\":\"continueErrorOutput\",\"position\":[1920,220],\"parameters\":{\"options\":{\"responseCode\":200},\"respondWith\":\"json\",\"responseBody\":\"={\\n  \\\"status\\\": \\\"OK\\\",\\n  \\\"data\\\": {{ JSON.stringify($json.jsondata) }}\\n}\"},\"typeVersion\":1},{\"id\":\"3484b148-4ba5-4b54-9401-44010ac31178\",\"name\":\"Change Field\",\"type\":\"n8n-nodes-base.set\",\"onError\":\"continueErrorOutput\",\"position\":[680,320],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"b2e3bec3-221e-4f1d-b439-f75174f68ed1\",\"name\":\"csv\",\"type\":\"string\",\"value\":\"={{ $json.body }}\"}]}},\"typeVersion\":3.3},{\"id\":\"f35635fe-8943-486b-b5fa-4f566dd8f938\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[60,40],\"parameters\":{\"color\":7,\"width\":2298,\"height\":1027,\"content\":\"\"},\"typeVersion\":1},{\"id\":\"cede2fad-f0ee-4082-a403-81f6d8eb188e\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"position\":[340,400],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"File\",\"conditions\":{\"options\":{\"version\":1,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"operator\":{\"type\":\"object\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $binary }}\",\"rightValue\":\"\"}]},\"renameOutput\":true},{\"outputKey\":\"Data/Text\",\"conditions\":{\"options\":{\"version\":1,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"8930ce1a-a4cc-4094-b08f-a23a13dec40c\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.headers['content-type'] }}\",\"rightValue\":\"text/plain\"}]},\"renameOutput\":true},{\"outputKey\":\"appJSON\",\"conditions\":{\"options\":{\"version\":1,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"e3108952-daa2-425c-8c70-7d2ce0949e0c\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.headers['content-type'] }}\",\"rightValue\":\"=application/json\"}]},\"renameOutput\":true}]},\"options\":{\"fallbackOutput\":\"extra\"}},\"typeVersion\":3},{\"id\":\"a2d92aeb-25eb-4d3c-82ad-16d2124099a8\",\"name\":\"Send to Error Channel\",\"type\":\"n8n-nodes-base.slack\",\"position\":[2380,880],\"webhookId\":\"d8e1201d-cbcc-4153-a164-51d7b3e17c84\",\"parameters\":{\"text\":\":interrobang: Error in XML to JSON tool\",\"select\":\"channel\",\"blocksUi\":\"={\\n\\t\\\"blocks\\\": [\\n{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\":interrobang: Error in CSV to JSON tool\\\"\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"*Time:*\\\\n{{ $now.format('dd/MM/yyyy HH:mm:ss') }}\\\\n*Execution ID:*\\\\n{{ $execution.id }}\\\\n\\\"\\n\\t\\t\\t},\\n\\t\\t\\t\\\"accessory\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"button\\\",\\n\\t\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"Go to Error\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"value\\\": \\\"error\\\",\\n\\t\\t\\t\\t\\\"url\\\": \\\"[insert URL here]{{ $workflow.id }}/executions/{{ $execution.id }}\\\",\\n\\t\\t\\t\\t\\\"action_id\\\": \\\"button-action\\\",\\n\\t\\t\\t\\t\\\"style\\\": \\\"primary\\\"\\n\\t\\t\\t}\\n\\t\\t}\\n\\t]\\n}\",\"channelId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"C0832GBAEN4\"},\"messageType\":\"block\",\"otherOptions\":{},\"authentication\":\"oAuth2\"},\"typeVersion\":2.1},{\"id\":\"b21c88d1-6f21-4ada-95ef-8ea91463e7ad\",\"name\":\"Convert Raw Text To CSV\",\"type\":\"n8n-nodes-base.code\",\"onError\":\"continueRegularOutput\",\"position\":[940,300],\"parameters\":{\"jsCode\":\"const csvData = $input.all()[0]?.json?.csv;\\n\\n// Use a regex to split on either ',' or ';'\\nconst lines = csvData.split(\\\"\\\\n\\\");\\nconst headers = lines[0].split(/,|;/);\\n\\nconst jsonData = lines.slice(1).map((line) => {\\n  // Split on ',' or ';' for each line\\n  const data = line.split(/,|;/);\\n  let obj = {};\\n  headers.forEach((header, i) => {\\n    obj[header] = data[i];\\n  });\\n  return obj;\\n});\\n\\nif (jsonData.length === 0) {\\n  throw new Error(\\\"No data to process\\\");\\n}\\n\\nreturn jsonData;\\n\"},\"typeVersion\":2,\"alwaysOutputData\":true},{\"id\":\"a9803789-0397-4f5f-9cd2-cb630f983efc\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2380,40],\"parameters\":{\"color\":7,\"width\":700,\"height\":600,\"content\":\"## Sample of Raw CSV Data Send\\nUse the HTTP request node below to see how to send the Raw CSV data into this workflow. Don't forget to include the \\\\n's \"},\"typeVersion\":1},{\"id\":\"8fb97224-706b-41de-a7ab-cbe2191436e9\",\"name\":\"Check if Value\",\"type\":\"n8n-nodes-base.if\",\"position\":[1180,300],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d8d4cfda-f384-4154-8ad2-c3eabcb8c7ce\",\"operator\":{\"type\":\"string\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.error }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"4484f424-429b-449f-85c2-dd6a135972a0\",\"name\":\"Send Raw CSV\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2480,200],\"parameters\":{\"url\":\"[insert URL here]\",\"body\":\"album, year, US_peak_chart_post\\nThe White Stripes, 1999, -\\nDe Stijl, 2000, -\\nWhite Blood Cells, 2001, 61\\nElephant, 2003, 6\\nGet Behind Me Satan, 2005, 3\\nIcky Thump, 2007, 2\\nUnder Great White Northern Lights, 2010, 11\\nLive in Mississippi, 2011, -\\nLive at the Gold Dollar, 2012, -\\nNine Miles from the White City, 2013, -\\n\",\"method\":\"POST\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"file\"}}},\"sendBody\":true,\"contentType\":\"raw\",\"rawContentType\":\"text/plain\"},\"typeVersion\":4.2},{\"id\":\"70a46bce-32da-4868-a960-3ee1cefbed1f\",\"name\":\"POST\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[140,420],\"webhookId\":\"add125c9-1591-4e1c-b68c-8032b99b6010\",\"parameters\":{\"path\":\"tool/csv-to-json\",\"options\":{\"binaryPropertyName\":\"data\"},\"httpMethod\":\"POST\",\"responseMode\":\"responseNode\"},\"typeVersion\":1.1},{\"id\":\"116cfc2c-6e5f-4367-8c80-e1341e7d196a\",\"name\":\"Aggregate\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[1580,220],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\",\"destinationFieldName\":\"jsondata\"},\"typeVersion\":1},{\"id\":\"967dc555-2599-4fb0-b3e1-00164bae4120\",\"name\":\"Aggregate1\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[1580,360],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\",\"destinationFieldName\":\"jsondata\"},\"typeVersion\":1},{\"id\":\"51c77def-cdf7-41da-bfd1-e585f0553672\",\"name\":\"Success Response2\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"onError\":\"continueErrorOutput\",\"position\":[1900,400],\"parameters\":{\"options\":{\"responseCode\":200},\"respondWith\":\"json\",\"responseBody\":\"={{ JSON.stringify($json.jsondata) }}\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"POST\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"Switch\":{\"main\":[[{\"node\":\"Extract From File\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Change Field\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]},\"Aggregate\":{\"main\":[[{\"node\":\"Success Response\",\"type\":\"main\",\"index\":0}]]},\"Aggregate1\":{\"main\":[[{\"node\":\"Success Response2\",\"type\":\"main\",\"index\":0}]]},\"Change Field\":{\"main\":[[{\"node\":\"Convert Raw Text To CSV\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]},\"Check if Value\":{\"main\":[[{\"node\":\"Aggregate1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]},\"Error Response\":{\"main\":[[{\"node\":\"Send to Error Channel\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Send to Error Channel\",\"type\":\"main\",\"index\":0}]]},\"Success Response\":{\"main\":[[],[{\"node\":\"Send to Error Channel\",\"type\":\"main\",\"index\":0}]]},\"Extract From File\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Error Response\",\"type\":\"main\",\"index\":0}]]},\"Success Response2\":{\"main\":[[],[{\"node\":\"Send to Error Channel\",\"type\":\"main\",\"index\":0}]]},\"Convert Raw Text To CSV\":{\"main\":[[{\"node\":\"Check if Value\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Who this template is for\n\nThis template is for developers or teams who need to convert CSV data into JSON format through an API endpoint, with support for both file uploads and raw CSV text input.\n\n## Use case\n\nConverting CSV files or raw CSV text data into JSON format via a webhook endpoint, with error handling and notifications. This is particularly useful when you need to transform CSV data into JSON as part of a larger automation or integration process.\n\n## How this workflow works\n\n  1. Receives POST requests through a webhook endpoint at\n\n\n    \n    \n    /tool/csv-to-json\n    \n\n  1. Uses a Switch node to handle different input types: \n     * File uploads (binary data)\n     * Plain text CSV data\n     * JSON format data\n  2. Processes the CSV data: \n     * For files: Uses the Extract From File node\n     * For raw text: Converts the text to CSV using a custom Code node that handles both comma and semicolon delimiters\n  3. Aggregates the processed data and returns: \n     * Success response (200): Converted JSON data\n     * Error response (500): Error message with details\n  4. In case of errors, sends notifications to a Slack error channel with execution details and a link to debug\n\n\n\n## Set up steps\n\n  1. Configure the webhook endpoint by deploying the workflow\n  2. Set up Slack integration for error notifications: \n     * Update the Slack channel ID (currently set to \"C0832GBAEN4\")\n     * Configure OAuth2 authentication for Slack\n  3. Test the endpoint using either: \n     * CURL for file uploads:\n           \n           bash\n           Copy\n           curl -X POST \"https://yoururl.com/webhook-test/tool/csv-to-json\" \\\n                -H \"Content-Type: text/csv\" \\\n                --data-binary @path/to/your/file.csv\n           \n           \n\n     * Or send raw CSV data as text/plain content type\n\n\n\n",
  "crawled_at": "2025-05-26T01:50:05.705570",
  "readme_zh": "## 适用对象\n\n本模板适用于需要通过API端点将CSV数据转换为JSON格式的开发者和团队，支持文件上传和原始CSV文本输入两种方式。\n\n## 使用场景\n\n通过Webhook端点将CSV文件或原始CSV文本数据转换为JSON格式，包含错误处理和通知功能。当您需要将CSV数据转换为JSON作为自动化流程或系统集成的一部分时，此模板尤为实用。\n\n## 工作流原理\n\n1. 通过Webhook端点接收POST请求：\n   \n   ```\n   /tool/csv-to-json\n   ```\n\n2. 使用Switch节点处理不同输入类型：\n   * 文件上传（二进制数据）\n   * 纯文本CSV数据\n   * JSON格式数据\n\n3. 处理CSV数据：\n   * 文件类型：使用Extract From File节点\n   * 原始文本：通过自定义Code节点转换为CSV（支持逗号和分号分隔符）\n\n4. 汇总处理结果并返回：\n   * 成功响应（200）：转换后的JSON数据\n   * 错误响应（500）：包含详细信息的错误提示\n\n5. 错误发生时，向Slack错误频道发送通知（含执行详情和调试链接）\n\n## 配置步骤\n\n1. 部署工作流以配置Webhook端点\n2. 设置Slack错误通知集成：\n   * 更新Slack频道ID（当前设置为\"C0832GBAEN4\"）\n   * 配置Slack的OAuth2认证\n3. 测试端点（任选一种方式）：\n   * 使用CURL测试文件上传：\n     ```bash\n     curl -X POST \"https://yoururl.com/webhook-test/tool/csv-to-json\" \\\n          -H \"Content-Type: text/csv\" \\\n          --data-binary @path/to/your/file.csv\n     ```\n   * 或发送text/plain类型的原始CSV数据",
  "title_zh": "带错误处理和Slack通知的CSV转JSON转换器",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"id\": \"b73fed9b-d56c-4175-a310-8c09ed51acd2\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        80,\n        60\n      ],\n      \"parameters\": {\n        \"width\": 464,\n        \"height\": 303,\n        \"content\": \"## 测试\\n\\n可通过CURL或类似工具进行测试。\\n\\n使用表单数据提交文件时：\\ncurl -X POST \\\"https://yoururl.com/webhook-test/tool/csv-to-json\\\" \\\\\\n     -H \\\"Content-Type: text/csv\\\" \\\\\\n     --data-binary @文件路径/your/file.csv\\n\\n也可通过测试工作流进行验证\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6ed4b2cc-444f-44e2-ab91-34337acd7a9b\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1680,\n        580\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 396,\n        \"height\": 256,\n        \"content\": \"## 响应\\n在可能的情况下，我们将返回二进制对象。\\n```\\n如果出现错误\\n```\\n{\\n  \\\"status\\\": \\\"error\\\",\\n  \\\"data\\\": \\\"需要显示的错误信息\\\"\\n}\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4eff962e-e636-4704-835a-672ccd705e16\",\n      \"name\": \"Extract From File\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        680,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"binaryPropertyName\": \"data0\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ccc66f1e-e000-4048-a492-b80fbf8c8fce\",\n      \"name\": \"Error Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1900,\n        900\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 500\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"status\\\": \\\"error\\\",\\n  \\\"data\\\": \\\"There was a problem converting your CSV. Please refresh the page and try again.\\\"\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a7d34aba-6ded-4cc8-8866-7d4aa6ae3255\",\n      \"name\": \"Success Response\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1920,\n        220\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={\\n  \\\"status\\\": \\\"OK\\\",\\n  \\\"data\\\": {{ JSON.stringify($json.jsondata) }}\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3484b148-4ba5-4b54-9401-44010ac31178\",\n      \"name\": \"Change Field\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        680,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b2e3bec3-221e-4f1d-b439-f75174f68ed1\",\n              \"name\": \"csv\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"f35635fe-8943-486b-b5fa-4f566dd8f938\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        60,\n        40\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 2298,\n        \"height\": 1027,\n        \"content\": \"\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cede2fad-f0ee-4082-a403-81f6d8eb188e\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        340,\n        400\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"File\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 1,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"operator\": {\n                      \"type\": \"object\",\n                      \"operation\": \"notEmpty\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $binary }}\",\n                    \"rightValue\": \"\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"Data/Text\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 1,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"8930ce1a-a4cc-4094-b08f-a23a13dec40c\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.headers['content-type'] }}\",\n                    \"rightValue\": \"text/plain\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"appJSON\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 1,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"e3108952-daa2-425c-8c70-7d2ce0949e0c\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.headers['content-type'] }}\",\n                    \"rightValue\": \"=application/json\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"a2d92aeb-25eb-4d3c-82ad-16d2124099a8\",\n      \"name\": \"Send to Error Channel\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        2380,\n        880\n      ],\n      \"webhookId\": \"d8e1201d-cbcc-4153-a164-51d7b3e17c84\",\n      \"parameters\": {\n        \"text\": \":interrobang: Error in XML to JSON tool\",\n        \"select\": \"channel\",\n        \"blocksUi\": \"={\\n\\t\\\"blocks\\\": [\\n{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\":interrobang: Error in CSV to JSON tool\\\"\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"type\\\": \\\"section\\\",\\n\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"mrkdwn\\\",\\n\\t\\t\\t\\t\\\"text\\\": \\\"*Time:*\\\\n{{ $now.format('dd/MM/yyyy HH:mm:ss') }}\\\\n*Execution ID:*\\\\n{{ $execution.id }}\\\\n\\\"\\n\\t\\t\\t},\\n\\t\\t\\t\\\"accessory\\\": {\\n\\t\\t\\t\\t\\\"type\\\": \\\"button\\\",\\n\\t\\t\\t\\t\\\"text\\\": {\\n\\t\\t\\t\\t\\t\\\"type\\\": \\\"plain_text\\\",\\n\\t\\t\\t\\t\\t\\\"text\\\": \\\"Go to Error\\\",\\n\\t\\t\\t\\t\\t\\\"emoji\\\": true\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"value\\\": \\\"error\\\",\\n\\t\\t\\t\\t\\\"url\\\": \\\"[insert URL here]{{ $workflow.id }}/executions/{{ $execution.id }}\\\",\\n\\t\\t\\t\\t\\\"action_id\\\": \\\"button-action\\\",\\n\\t\\t\\t\\t\\\"style\\\": \\\"primary\\\"\\n\\t\\t\\t}\\n\\t\\t}\\n\\t]\\n}\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"C0832GBAEN4\"\n        },\n        \"messageType\": \"block\",\n        \"otherOptions\": {},\n        \"authentication\": \"oAuth2\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"b21c88d1-6f21-4ada-95ef-8ea91463e7ad\",\n      \"name\": \"Convert Raw Text To CSV\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        940,\n        300\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const csvData = $input.all()[0]?.json?.csv;\\n\\n// Use a regex to split on either ',' or ';'\\nconst lines = csvData.split(\\\"\\\\n\\\");\\nconst headers = lines[0].split(/,|;/);\\n\\nconst jsonData = lines.slice(1).map((line) => {\\n  // Split on ',' or ';' for each line\\n  const data = line.split(/,|;/);\\n  let obj = {};\\n  headers.forEach((header, i) => {\\n    obj[header] = data[i];\\n  });\\n  return obj;\\n});\\n\\nif (jsonData.length === 0) {\\n  throw new Error(\\\"No data to process\\\");\\n}\\n\\nreturn jsonData;\\n\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"a9803789-0397-4f5f-9cd2-cb630f983efc\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2380,\n        40\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 700,\n        \"height\": 600,\n        \"content\": \"## 原始CSV数据发送示例\\n使用下方的HTTP请求节点查看如何将原始CSV数据发送到此工作流中。别忘了包含换行符\\\\n。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8fb97224-706b-41de-a7ab-cbe2191436e9\",\n      \"name\": \"Check if Value\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1180,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"d8d4cfda-f384-4154-8ad2-c3eabcb8c7ce\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.error }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"4484f424-429b-449f-85c2-dd6a135972a0\",\n      \"name\": \"Send Raw CSV\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2480,\n        200\n      ],\n      \"parameters\": {\n        \"url\": \"[insert URL here]\",\n        \"body\": \"album, year, US_peak_chart_post\\nThe White Stripes, 1999, -\\nDe Stijl, 2000, -\\nWhite Blood Cells, 2001, 61\\nElephant, 2003, 6\\nGet Behind Me Satan, 2005, 3\\nIcky Thump, 2007, 2\\nUnder Great White Northern Lights, 2010, 11\\nLive in Mississippi, 2011, -\\nLive at the Gold Dollar, 2012, -\\nNine Miles from the White City, 2013, -\\n\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"file\"\n            }\n          }\n        },\n        \"sendBody\": true,\n        \"contentType\": \"raw\",\n        \"rawContentType\": \"text/plain\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"70a46bce-32da-4868-a960-3ee1cefbed1f\",\n      \"name\": \"POST\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        140,\n        420\n      ],\n      \"webhookId\": \"add125c9-1591-4e1c-b68c-8032b99b6010\",\n      \"parameters\": {\n        \"path\": \"tool/csv-to-json\",\n        \"options\": {\n          \"binaryPropertyName\": \"data\"\n        },\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"116cfc2c-6e5f-4367-8c80-e1341e7d196a\",\n      \"name\": \"Aggregate\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        1580,\n        220\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"jsondata\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"967dc555-2599-4fb0-b3e1-00164bae4120\",\n      \"name\": \"Aggregate1\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        1580,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"jsondata\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"51c77def-cdf7-41da-bfd1-e585f0553672\",\n      \"name\": \"Success Response2\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        1900,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={{ JSON.stringify($json.jsondata) }}\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"POST\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract From File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Change Field\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success Response2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Change Field\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert Raw Text To CSV\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check if Value\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error Response\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send to Error Channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Send to Error Channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Success Response\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Send to Error Channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract From File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Success Response2\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Send to Error Channel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert Raw Text To CSV\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check if Value\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}