{
  "url": "https://n8n.io/workflows/2443-public-webhook-relay/",
  "title": "Public Webhook Relay",
  "author": "Jay Hartley",
  "publish_date": "Last update 8 months ago",
  "publish_date_absolute": "2024-09-25",
  "categories": [
    {
      "name": "IT Ops"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"7858a8e25b8fc4dae485c1ef345e6fe74effb1f5060433ef500b4c186c965c18\"},\"nodes\":[{\"id\":\"4a82b490-3550-4700-8e9a-5ae1ef7c327f\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-100,600],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"seconds\",\"secondsInterval\":10}]}},\"typeVersion\":1.2},{\"id\":\"bfe180f2-329c-4d00-9d93-3a87d694cb4e\",\"name\":\"Get Auth Token\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[720,1080],\"parameters\":{\"url\":\"https://webhook.site/token\",\"method\":\"POST\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"26089f68-9d3c-4abd-8541-1d63a8a303c1\",\"name\":\"Unprocessed Requests\",\"type\":\"n8n-nodes-base.code\",\"position\":[1420,680],\"parameters\":{\"jsCode\":\"let filter_method = \\\"POST\\\"\\nlet last_processed = $json.value ? $json.value : 0\\nlet data = $json.data\\n\\nfunction dateToTime(datetime){\\n  return new Date(datetime.replace(\\\" \\\", \\\"T\\\") + \\\"Z\\\").getTime()\\n}\\n\\n//Convert datetimes to timestamps\\ndata.forEach(datum=>{datum.created_at = dateToTime(datum.created_at)})\\n\\n//Filter all new POST requests\\nreturn data.filter(datum=>!last_processed || datum.created_at > last_processed).filter(datum=>!filter_method || datum.method==filter_method)\"},\"typeVersion\":2},{\"id\":\"00a5c01c-0cc1-4a56-9b5b-b90cc778ee36\",\"name\":\"Get Latest Requests\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1060,800],\"parameters\":{\"url\":\"=https://webhook.site/token/{{ $json.value }}/requests\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"42fbb0c3-34c9-4d97-8761-1b9c84c2f8f7\",\"name\":\"POST to n8n\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2000,680],\"parameters\":{\"url\":\"={{ $('Local Webhook Address').first().json.webhook }}\",\"body\":\"={{ $('Unprocessed Requests').item.json.content }}\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"contentType\":\"raw\",\"rawContentType\":\"=application/json\"},\"typeVersion\":4.2},{\"id\":\"fd38a00e-2d7f-4621-8f18-47d1770ef3ac\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1220,680],\"parameters\":{\"mode\":\"combine\",\"options\":{\"includeUnpaired\":true},\"combineBy\":\"combineByPosition\"},\"typeVersion\":3},{\"id\":\"ef347c09-9870-42db-9109-934277290e0b\",\"name\":\"Local Webhook Address\",\"type\":\"n8n-nodes-base.set\",\"position\":[160,700],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"3c53386d-23a8-4c8a-b5e9-dfbb755e2be1\",\"name\":\"webhook\",\"type\":\"string\",\"value\":\"http://localhost:5678/webhook/66210723-bd48-473c-8f8d-73d39d5012db\"}]}},\"typeVersion\":3.4},{\"id\":\"89baa16d-4a06-4f98-9735-9cc9fda5ff09\",\"name\":\"Latest Update Time\",\"type\":\"n8n-nodes-base.code\",\"position\":[1600,680],\"parameters\":{\"jsCode\":\"var datetimes = $('Unprocessed Requests').all().map(x=>x.json.created_at)\\nreturn {last_time: Math.max(...datetimes)}\"},\"typeVersion\":2},{\"id\":\"c826677d-317f-4ad4-959d-153862de4ff7\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[620,980],\"parameters\":{\"width\":460.2964713549969,\"height\":288.34663983291097,\"content\":\"## 1. Retrieve existing or get new auth token for webhook.site\"},\"typeVersion\":1},{\"id\":\"f4bc9a8c-d9dc-4969-9251-ce892a5ed41e\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1080,517.8563272190441],\"parameters\":{\"width\":483.2839292355176,\"height\":384.1277143350834,\"content\":\"## 2. Check if any new requests to webhook that came later than the last checked request\"},\"typeVersion\":1},{\"id\":\"adaf19be-cb2f-4727-9881-1a3e4098c528\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1608.5062710597388,518.9281636095216],\"parameters\":{\"width\":395.16534069351894,\"height\":380.2964713549969,\"content\":\"## 3. Relay the request to the local n8n workflow set in *Local Webhook Address*\"},\"typeVersion\":1},{\"id\":\"4e7add8c-1e95-4ebb-b7c8-35cee3cdeed5\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-760,340],\"parameters\":{\"color\":4,\"width\":566.9804381508956,\"height\":859.1365566530386,\"content\":\"# Public Webhook Relay\\n## How it Works\\nUtilizes webhook.site to receive public webhook requests and relays them to your local n8n workflow\\n\\n## How to Use\\n- To use with local key-value store:\\n Go to settings > community nodes and enter ```@horka.tv/n8n-nodes-storage-kv``` to install the key-value store node\\n- To use with a different storage method:\\n Replace the four key-value nodes with a temporary storage option of your choice (Airtable, Notion, Firebase, etc). This is required to save data between runs.\\n- Set **Schedule Trigger** with a polling interval (default is every 10 seconds).\\n- Set your local workflow address in Local Webhook Address.\\n\\n## How to Test\\n- Set the workflow to *Active*.\\n- After workflow executes at least once, you can check the input to **Get Latest Requests** for your auth token.\\n- Run this command: ```curl -X POST -H \\\"Content-Type: application/json\\\" -d '{\\\"foo\\\":\\\"bar\\\"}'  https://webhook.site/[THE AUTH TOKEN YOU JUST GOT]```\\n- Now check **Executions** and confirm that the workflow ran all the way to the end. Confirm in **Unprocessed Requests** that your data was retrieved (data[0].content should be equal to {\\\"foo\\\":\\\"bar\\\"})\\n- Now check your other local workflow and confirm that it was triggered with the correct data packet ```{\\\"foo\\\":\\\"bar\\\"}```.\\n- *You're done!*\\n\\n## Caveats\\nAt present, the relay expects a POST with form/json data. If you wish to relay raw data or GET requests, please alter the **Unprocessed Requests** and **POST to n8n** nodes accordingly.\"},\"typeVersion\":1},{\"id\":\"5d8db2a1-569e-47c0-99a1-d66cb8b86897\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[40,608.688533362355],\"parameters\":{\"color\":3,\"width\":304.23688498154337,\"height\":264.4911255434983,\"content\":\"### 0. Set this to your local workflow address (Production URL or Test URL in your Workflow Trigger node)\"},\"typeVersion\":1},{\"id\":\"e728e8fe-1a7d-4f44-96b8-7344b70b0452\",\"name\":\"Store Auth Token\",\"type\":\"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\"position\":[880,1080],\"parameters\":{\"key\":\"auth_token\",\"value\":\"={{ $json.uuid }}\",\"fileName\":\"savefile\"},\"typeVersion\":1},{\"id\":\"1c19ff08-d6ed-4874-9c1a-69e92b25138a\",\"name\":\"Store Last Processed\",\"type\":\"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\"position\":[1800,680],\"parameters\":{\"key\":\"last_processed\",\"value\":\"={{ $json.last_time }}\",\"fileName\":\"savefile\"},\"typeVersion\":1},{\"id\":\"ea927186-6147-42c7-8873-029616bdbe6d\",\"name\":\"Retrieve Auth Token\",\"type\":\"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\"position\":[380,860],\"parameters\":{\"key\":\"auth_token\",\"fileName\":\"savefile\",\"operation\":\"read\"},\"typeVersion\":1},{\"id\":\"f217889c-7104-4183-8adb-4459f6cdc3d6\",\"name\":\"Retrieve Last Processed\",\"type\":\"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\"position\":[680,620],\"parameters\":{\"key\":\"last_processed\",\"fileName\":\"savefile\",\"operation\":\"read\"},\"typeVersion\":1},{\"id\":\"12293fc3-8964-40da-8326-85c36dade0df\",\"name\":\"If Auth Token Exists\",\"type\":\"n8n-nodes-base.if\",\"position\":[580,860],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"4356f226-da36-418b-957d-880872ddc420\",\"operator\":{\"type\":\"string\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.value }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.1}],\"pinData\":{},\"connections\":{\"Merge\":{\"main\":[[{\"node\":\"Unprocessed Requests\",\"type\":\"main\",\"index\":0}]]},\"Get Auth Token\":{\"main\":[[{\"node\":\"Store Auth Token\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Local Webhook Address\",\"type\":\"main\",\"index\":0},{\"node\":\"Retrieve Last Processed\",\"type\":\"main\",\"index\":0}]]},\"Store Auth Token\":{\"main\":[[{\"node\":\"Get Latest Requests\",\"type\":\"main\",\"index\":0}]]},\"Latest Update Time\":{\"main\":[[{\"node\":\"Store Last Processed\",\"type\":\"main\",\"index\":0}]]},\"Get Latest Requests\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]},\"Retrieve Auth Token\":{\"main\":[[{\"node\":\"If Auth Token Exists\",\"type\":\"main\",\"index\":0}]]},\"If Auth Token Exists\":{\"main\":[[{\"node\":\"Get Latest Requests\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get Auth Token\",\"type\":\"main\",\"index\":0}]]},\"Store Last Processed\":{\"main\":[[{\"node\":\"POST to n8n\",\"type\":\"main\",\"index\":0}]]},\"Unprocessed Requests\":{\"main\":[[{\"node\":\"Latest Update Time\",\"type\":\"main\",\"index\":0}]]},\"Local Webhook Address\":{\"main\":[[{\"node\":\"Retrieve Auth Token\",\"type\":\"main\",\"index\":0}]]},\"Retrieve Last Processed\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Disclaimer\n\nThis template only works on n8n local instances!\n\n## How it Works\n\nThis workflow allows you to to receive webhooks from the public web and have your local workflow catch them, without any remote proxy. It is very useful for running quick tests without exposing your dev server. All you have to do is activate the workflow and use the public address as defined below.\n\n## Set up steps\n\nIf you use the default key-value storage, there are only three steps:\n\n  1. Install the _@horka.tv/n8n-nodes-storage-kv_ community node\n  2. Put your n8n workflow address in **Local Webhook Address**\n  3. Activate the workflow and, from _Executions_ , note down your public webhook token from the inputs to **Get Latest Requests**.\n\n\n\nYou can now use <https://webhook.site/>[YOUR TOKEN] as a webhook destination, to receive webhook requests from the public web.\n",
  "crawled_at": "2025-05-25T23:53:11.058594",
  "readme_zh": "## 免责声明\n\n本模板仅适用于n8n本地实例！\n\n## 工作原理\n\n此工作流允许您接收来自公共网络的Webhook请求，并由本地工作流直接捕获，无需任何远程代理服务。这对于快速测试而不暴露开发服务器非常有用。您只需激活工作流，并使用下文定义的公共地址即可。\n\n## 设置步骤\n\n若使用默认键值存储，仅需三步：\n\n  1. 安装社区节点模块 _@horka.tv/n8n-nodes-storage-kv_\n  2. 在**本地Webhook地址**中填入您的n8n工作流地址\n  3. 激活工作流后，通过_执行记录_从**获取最新请求**的输入参数中记录您的公共Webhook令牌\n\n现在即可使用 <https://webhook.site/>[您的令牌] 作为Webhook接收地址，用于接收来自公共网络的请求。",
  "title_zh": "公共Webhook中继",
  "publish_date_zh": "最后更新于7个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"7858a8e25b8fc4dae485c1ef345e6fe74effb1f5060433ef500b4c186c965c18\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"4a82b490-3550-4700-8e9a-5ae1ef7c327f\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -100,\n        600\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"seconds\",\n              \"secondsInterval\": 10\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"bfe180f2-329c-4d00-9d93-3a87d694cb4e\",\n      \"name\": \"Get Auth Token\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        720,\n        1080\n      ],\n      \"parameters\": {\n        \"url\": \"https://webhook.site/token\",\n        \"method\": \"POST\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"26089f68-9d3c-4abd-8541-1d63a8a303c1\",\n      \"name\": \"Unprocessed Requests\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1420,\n        680\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let filter_method = \\\"POST\\\"\\nlet last_processed = $json.value ? $json.value : 0\\nlet data = $json.data\\n\\nfunction dateToTime(datetime){\\n  return new Date(datetime.replace(\\\" \\\", \\\"T\\\") + \\\"Z\\\").getTime()\\n}\\n\\n//Convert datetimes to timestamps\\ndata.forEach(datum=>{datum.created_at = dateToTime(datum.created_at)})\\n\\n//Filter all new POST requests\\nreturn data.filter(datum=>!last_processed || datum.created_at > last_processed).filter(datum=>!filter_method || datum.method==filter_method)\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"00a5c01c-0cc1-4a56-9b5b-b90cc778ee36\",\n      \"name\": \"Get Latest Requests\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1060,\n        800\n      ],\n      \"parameters\": {\n        \"url\": \"=https://webhook.site/token/{{ $json.value }}/requests\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"42fbb0c3-34c9-4d97-8761-1b9c84c2f8f7\",\n      \"name\": \"POST to n8n\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2000,\n        680\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('Local Webhook Address').first().json.webhook }}\",\n        \"body\": \"={{ $('Unprocessed Requests').item.json.content }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"raw\",\n        \"rawContentType\": \"=application/json\"\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"fd38a00e-2d7f-4621-8f18-47d1770ef3ac\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1220,\n        680\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"includeUnpaired\": true\n        },\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"ef347c09-9870-42db-9109-934277290e0b\",\n      \"name\": \"Local Webhook Address\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        160,\n        700\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3c53386d-23a8-4c8a-b5e9-dfbb755e2be1\",\n              \"name\": \"webhook\",\n              \"type\": \"string\",\n              \"value\": \"http://localhost:5678/webhook/66210723-bd48-473c-8f8d-73d39d5012db\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"89baa16d-4a06-4f98-9735-9cc9fda5ff09\",\n      \"name\": \"Latest Update Time\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1600,\n        680\n      ],\n      \"parameters\": {\n        \"jsCode\": \"var datetimes = $('Unprocessed Requests').all().map(x=>x.json.created_at)\\nreturn {last_time: Math.max(...datetimes)}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c826677d-317f-4ad4-959d-153862de4ff7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        620,\n        980\n      ],\n      \"parameters\": {\n        \"width\": 460.2964713549969,\n        \"height\": 288.34663983291097,\n        \"content\": \"## 1. 获取现有或新的Webhook.site认证令牌\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f4bc9a8c-d9dc-4969-9251-ce892a5ed41e\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1080,\n        517.8563272190441\n      ],\n      \"parameters\": {\n        \"width\": 483.2839292355176,\n        \"height\": 384.1277143350834,\n        \"content\": \"## 2. 检查是否有晚于最后检查请求的新webhook请求\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"adaf19be-cb2f-4727-9881-1a3e4098c528\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1608.5062710597388,\n        518.9281636095216\n      ],\n      \"parameters\": {\n        \"width\": 395.16534069351894,\n        \"height\": 380.2964713549969,\n        \"content\": \"## 3. 将请求转发至*本地Webhook地址*中设置的本地n8n工作流\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4e7add8c-1e95-4ebb-b7c8-35cee3cdeed5\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -760,\n        340\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 566.9804381508956,\n        \"height\": 859.1365566530386,\n        \"content\": \"# 公共Webhook中继服务\\n## 工作原理\\n通过webhook.site接收公共webhook请求，并将其转发至本地n8n工作流\\n\\n## 使用指南\\n- 使用本地键值存储：\\n  前往设置 > 社区节点，输入```@horka.tv/n8n-nodes-storage-kv```安装键值存储节点\\n- 使用其他存储方式：\\n  将四个键值节点替换为您选择的临时存储方案（Airtable、Notion、Firebase等）。此操作用于保存各次运行间的数据。\\n- 在**计划触发器**中设置轮询间隔（默认为每10秒）。\\n- 在\\\"本地Webhook地址\\\"中配置您的工作流本地地址。\\n\\n## 测试方法\\n- 将工作流状态设为*激活*。\\n- 工作流首次执行后，可在**获取最新请求**的输入中查看认证令牌。\\n- 执行命令：```curl -X POST -H \\\"Content-Type: application/json\\\" -d '{\\\"foo\\\":\\\"bar\\\"}'  https://webhook.site/[刚获取的认证令牌]```\\n- 检查**执行记录**确认工作流完整运行。在**未处理请求**中验证数据是否获取成功（data[0].content应显示为{\\\"foo\\\":\\\"bar\\\"}）\\n- 检查您的另一个本地工作流，确认其是否以正确数据包```{\\\"foo\\\":\\\"bar\\\"}```触发\\n- *至此配置完成！*\\n\\n## 注意事项\\n当前中继服务仅支持POST方式提交的表单/JSON数据。如需中继原始数据或GET请求，请相应修改**未处理请求**和**POST到n8n**节点配置。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5d8db2a1-569e-47c0-99a1-d66cb8b86897\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        40,\n        608.688533362355\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 304.23688498154337,\n        \"height\": 264.4911255434983,\n        \"content\": \"### 0. 将此设置为你的本地工作流地址（工作流触发节点中的生产URL或测试URL）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e728e8fe-1a7d-4f44-96b8-7344b70b0452\",\n      \"name\": \"Store Auth Token\",\n      \"type\": \"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\n      \"position\": [\n        880,\n        1080\n      ],\n      \"parameters\": {\n        \"key\": \"auth_token\",\n        \"value\": \"={{ $json.uuid }}\",\n        \"fileName\": \"savefile\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c19ff08-d6ed-4874-9c1a-69e92b25138a\",\n      \"name\": \"Store Last Processed\",\n      \"type\": \"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\n      \"position\": [\n        1800,\n        680\n      ],\n      \"parameters\": {\n        \"key\": \"last_processed\",\n        \"value\": \"={{ $json.last_time }}\",\n        \"fileName\": \"savefile\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ea927186-6147-42c7-8873-029616bdbe6d\",\n      \"name\": \"Retrieve Auth Token\",\n      \"type\": \"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\n      \"position\": [\n        380,\n        860\n      ],\n      \"parameters\": {\n        \"key\": \"auth_token\",\n        \"fileName\": \"savefile\",\n        \"operation\": \"read\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f217889c-7104-4183-8adb-4459f6cdc3d6\",\n      \"name\": \"Retrieve Last Processed\",\n      \"type\": \"@horka.tv/n8n-nodes-storage-kv.keyValueStorage\",\n      \"position\": [\n        680,\n        620\n      ],\n      \"parameters\": {\n        \"key\": \"last_processed\",\n        \"fileName\": \"savefile\",\n        \"operation\": \"read\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"12293fc3-8964-40da-8326-85c36dade0df\",\n      \"name\": \"If Auth Token Exists\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        580,\n        860\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"4356f226-da36-418b-957d-880872ddc420\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.value }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Unprocessed Requests\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Auth Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store Auth Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Local Webhook Address\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Retrieve Last Processed\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Store Auth Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Latest Requests\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Latest Update Time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store Last Processed\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Latest Requests\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Retrieve Auth Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If Auth Token Exists\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If Auth Token Exists\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Latest Requests\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Auth Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Store Last Processed\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"POST to n8n\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Unprocessed Requests\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Latest Update Time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Local Webhook Address\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Retrieve Auth Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve Last Processed\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}