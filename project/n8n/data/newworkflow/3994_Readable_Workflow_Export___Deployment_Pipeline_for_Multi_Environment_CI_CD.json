{
  "url": "https://n8n.io/workflows/3994-readable-workflow-export-and-deployment-pipeline-for-multi-environment-cicd/",
  "title": "Readable Workflow Export & Deployment Pipeline for Multi-Environment CI/CD",
  "author": "Klaasjan te Voortwis",
  "publish_date": "Last update 4 days ago",
  "publish_date_absolute": "2025-05-22",
  "categories": [],
  "workflow_json": "{\"meta\":{\"instanceId\":\"ce9d1036890ad908eb71bc905b95b126863ca1ff55b0267ee175e7a644abdfcf\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"84883c25-ad4f-4b18-a227-609815a9024b\",\"name\":\"Remove root node\",\"type\":\"n8n-nodes-base.set\",\"position\":[780,-680],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={{ $json.parsedData }}\"},\"typeVersion\":3.4},{\"id\":\"de5315d0-447e-4740-966a-f2fa711f54a4\",\"name\":\"TAG? Auto deploy to dev\",\"type\":\"n8n-nodes-base.if\",\"position\":[1060,-340],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"03241d00-9ec1-4215-8036-2d219a7874cb\",\"operator\":{\"type\":\"array\",\"operation\":\"contains\",\"rightType\":\"any\"},\"leftValue\":\"={{ $json.tags.map((obj) => obj.name) }}\",\"rightValue\":\"Auto deploy to dev\"}]}},\"typeVersion\":2.2},{\"id\":\"82f0885b-ab23-4472-89d4-0a3c79ec3efb\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1060,-780],\"parameters\":{\"width\":520,\"height\":280,\"content\":\"## export\\nadd the data in exports folder with readable names\"},\"typeVersion\":1},{\"id\":\"aa297fef-b961-435d-ba78-05cb73fd03f7\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-140,-780],\"parameters\":{\"width\":380,\"height\":280,\"content\":\"## n8n export workflows\\nadd the data in exports folder per workflow\"},\"typeVersion\":1},{\"id\":\"1c3188c5-9913-4c28-ae48-3cb79ae3dabd\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1300,-460],\"parameters\":{\"width\":520,\"height\":280,\"content\":\"## export\\nadd files to the import-dev folder if they should auto deploy to dev\"},\"typeVersion\":1},{\"id\":\"78a8be19-93cf-4a36-aaed-70ff29ae5e9e\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1300,-140],\"parameters\":{\"width\":520,\"height\":280,\"content\":\"## export\\nadd files to the import-dev folder if they should auto deploy to dev\"},\"typeVersion\":1},{\"id\":\"b7aa0923-340b-4be8-805a-f5f1dbe73af3\",\"name\":\"TAG? Auto deploy to PROD\",\"type\":\"n8n-nodes-base.if\",\"position\":[1060,-20],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"03241d00-9ec1-4215-8036-2d219a7874cb\",\"operator\":{\"type\":\"array\",\"operation\":\"contains\",\"rightType\":\"any\"},\"leftValue\":\"={{ $json.tags.map((obj) => obj.name) }}\",\"rightValue\":\"Auto deploy to PROD\"}]}},\"typeVersion\":2.2},{\"id\":\"1f8086d4-c318-4eb4-b8ba-8e196bbd944d\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-360,-1220],\"parameters\":{\"color\":5,\"width\":620,\"height\":420,\"content\":\"# Export workflows\\n\\n- All workflows will be stored, first with their ID as name.\\n- These files will be processed and stored again with a readbable filename in the format **WorkflowName (ID).json**\\n- If the files have a tag **'Auto deploy to dev'** or **'Auto deploy to PROD'** they will stored to these individual folders.\\n\\nOn commit a build pipeline will create a new image containing these workflow files and autodeploy this.\\n\\nOn startup:\\n- Before we start n8n we will import the exported workflows using the n8n cli.\\n- We start n8n and will wait till it is started.\\n- Imported workflows will be disabled in n8n.\\n- We manually start an AutoStarter workflow to start all workflows that have a specific **'AutoStarted'** tag.\"},\"typeVersion\":1},{\"id\":\"e132b429-ce1e-4dea-bc0d-856e4a547203\",\"name\":\"Start export workflows\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-300,-680],\"parameters\":{},\"typeVersion\":1},{\"id\":\"d7f06044-52a4-4a1e-86ba-019b832bcbe8\",\"name\":\"Create folders and run n8n cli\",\"type\":\"n8n-nodes-base.executeCommand\",\"position\":[-100,-680],\"parameters\":{\"command\":\"mkdir export; \\nmkdir export/n8n-workflows; \\nmkdir export/named-workflows;\\nrm -Rf export/n8n-workflows/*;\\nrm -Rf export/named-workflows/*;\\n\\nmkdir import-dev/workflows;\\n\\nn8n export:workflow --all --output=export/n8n-workflows --pretty --separate\"},\"typeVersion\":1},{\"id\":\"41ffdc1d-59ce-411d-9542-1c5cdcc43e35\",\"name\":\"load exported workflows\",\"type\":\"n8n-nodes-base.readWriteFile\",\"position\":[360,-680],\"parameters\":{\"options\":{},\"fileSelector\":\"export/n8n-workflows/*.*\"},\"typeVersion\":1},{\"id\":\"ff01046f-66f5-462f-af84-dc59d00b51d6\",\"name\":\"parse workflow\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[580,-680],\"parameters\":{\"options\":{},\"operation\":\"fromJson\",\"destinationKey\":\"parsedData\"},\"typeVersion\":1},{\"id\":\"920c1ea4-650a-4a37-a907-6e4d9c661b7e\",\"name\":\"Create JSON  file with readable name\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[1100,-680],\"parameters\":{\"mode\":\"each\",\"options\":{\"format\":true,\"fileName\":\"=./export/named-workflows/{{ $json.name }} ({{ $json.id }}).json\"},\"operation\":\"toJson\"},\"typeVersion\":1.1},{\"id\":\"0ea7c70b-2cdb-4edb-84a1-54742c1e7c5b\",\"name\":\"Store named workflow\",\"type\":\"n8n-nodes-base.readWriteFile\",\"position\":[1340,-680],\"parameters\":{\"options\":{},\"fileName\":\"={{ $binary.data.directory }}/{{ $binary.data.fileName }}\",\"operation\":\"write\"},\"typeVersion\":1},{\"id\":\"3989b580-5525-4666-bc17-f40675bc56be\",\"name\":\"Create JSON  file with readable name (dev)\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[1360,-360],\"parameters\":{\"mode\":\"each\",\"options\":{\"format\":true,\"fileName\":\"=./import-dev/workflows/{{ $json.name }} ({{ $json.id }}).json\"},\"operation\":\"toJson\"},\"typeVersion\":1.1},{\"id\":\"dcf2ea35-5214-4328-bced-ba3ee6d9f813\",\"name\":\"Create JSON  file with readable name (prod)\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[1360,-40],\"parameters\":{\"mode\":\"each\",\"options\":{\"format\":true,\"fileName\":\"=./import-prod/workflows/{{ $json.name }} ({{ $json.id }}).json\"},\"operation\":\"toJson\"},\"typeVersion\":1.1},{\"id\":\"fa94f550-6367-4a8b-b55b-bcd217078985\",\"name\":\"Store named workflow (dev)\",\"type\":\"n8n-nodes-base.readWriteFile\",\"position\":[1580,-360],\"parameters\":{\"options\":{},\"fileName\":\"={{ $binary.data.directory }}/{{ $binary.data.fileName }}\",\"operation\":\"write\"},\"typeVersion\":1},{\"id\":\"72efde7d-8ac1-41e4-b823-621fd5effebf\",\"name\":\"Store named workflow (prod)\",\"type\":\"n8n-nodes-base.readWriteFile\",\"position\":[1580,-40],\"parameters\":{\"options\":{},\"fileName\":\"={{ $binary.data.directory }}/{{ $binary.data.fileName }}\",\"operation\":\"write\"},\"typeVersion\":1},{\"id\":\"1a5ad014-7fc7-41d5-b576-26e65bcf48a5\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-360,-320],\"parameters\":{\"color\":4,\"width\":880,\"height\":460,\"content\":\"## Dockerfile\\n```\\nFROM docker.io/n8nio/n8n:stable\\n \\n# Some default n8n settings\\nENV N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true\\nENV N8N_RUNNERS_ENABLED=true\\n \\n# Add new entrypoint for auto importing credentials and workflows\\nUSER root\\nCOPY docker-files/importing-docker-entrypoint.sh /importing-docker-entrypoint.sh\\nRUN chmod +x /importing-docker-entrypoint.sh\\nUSER node\\n \\n# Optionally add extra packages\\n# RUN apk add --update graphicsmagick tzdata\\nCOPY package.json .\\nRUN npm install\\n \\n# Copy only necessary source files\\nCOPY import-dev ./import-dev\\nCOPY import-prod ./import-prod\\n \\nENTRYPOINT [\\\"tini\\\" \\\"--\\\" \\\"/importing-docker-entrypoint.sh\\\"]\\n```\"},\"typeVersion\":1},{\"id\":\"e14394da-d144-463e-af5f-fba4e6dffc20\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-360,160],\"parameters\":{\"color\":4,\"width\":1400,\"height\":1000,\"content\":\"## docker-files/importing-docker-entrypoint.sh\\n```\\n#!/bin/sh\\n \\n# https://github.com/n8n-io/n8n/blob/master/docker/images/n8n\\n \\n# mount this file in /importing-docker-entrypoint.sh and override the command\\n \\nif [ -d /opt/custom-certificates ]; then\\n  echo \\\"Trusting custom certificates from /opt/custom-certificates.\\\"\\n  export NODE_OPTIONS=\\\"--use-openssl-ca $NODE_OPTIONS\\\"\\n  export SSL_CERT_DIR=/opt/custom-certificates\\n  c_rehash /opt/custom-certificates\\nfi\\n \\necho \\\"Importing credentials and workflows...\\\"\\necho \\\"  these can be stored in /opt/import/credentials and /opt/import/workflows\\\"\\nif [ -d /opt/import/credentials ]; then\\n  n8n import:credentials --input=/opt/import/credentials --separate\\nfi\\nif [ -d /opt/import/workflows ]; then\\n  n8n import:workflow --input=/opt/import/workflows --separate\\nfi\\n \\necho \\\"Importing more credentials and workflows...\\\"\\necho \\\"  folder locations can be set using environment variables STARTUP_CREDENTIALS_LOAD_LOCATION and STARTUP_WORKFLOWS_LOAD_LOCATION\\\"\\necho \\\"  credentials: $STARTUP_CREDENTIALS_LOAD_LOCATION\\\"\\necho \\\"  workflows  : $STARTUP_WORKFLOWS_LOAD_LOCATION\\\"\\nif [ -n \\\"$STARTUP_CREDENTIALS_LOAD_LOCATION\\\" ] && [ -d \\\"$STARTUP_CREDENTIALS_LOAD_LOCATION\\\" ]; then\\n  n8n import:credentials --input=\\\"$STARTUP_CREDENTIALS_LOAD_LOCATION\\\" --separate\\nfi\\nif [ -n \\\"$STARTUP_WORKFLOWS_LOAD_LOCATION\\\" ] && [ -d \\\"$STARTUP_WORKFLOWS_LOAD_LOCATION\\\" ]; then\\n  n8n import:workflow --input=\\\"$STARTUP_WORKFLOWS_LOAD_LOCATION\\\" --separate\\nfi\\n \\necho \\\"Auto executing workflow...\\\"\\necho \\\"  The id can be configured with STARTUP_WORKFLOW_ID\\\"\\n# Check if STARTUP_WORKFLOW_ID is set and run the workflow after 30 seconds\\nif [ -n \\\"$STARTUP_WORKFLOW_ID\\\" ]; then\\n  echo \\\"Will execute workflow with ID $STARTUP_WORKFLOW_ID after 10 and 60seconds\\\"\\n  (\\n    sleep 10\\n    echo \\\"Executing workflow with ID $STARTUP_WORKFLOW_ID\\\"\\n    n8n execute --id $STARTUP_WORKFLOW_ID\\n    sleep 50\\n    echo \\\"Executing workflow with ID $STARTUP_WORKFLOW_ID\\\"\\n    n8n execute --id $STARTUP_WORKFLOW_ID\\n  ) &\\nfi\\n \\necho \\\"Starting n8n\\\"\\nif [ \\\"$#\\\" -gt 0 ]; then\\n  # Got started with arguments\\n  exec n8n \\\"$@\\\"\\nelse\\n  # Got started without arguments\\n  exec n8n\\nfi\\n```\"},\"typeVersion\":1},{\"id\":\"dcc9029e-8d83-4e26-a5c5-e55e53248af1\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-360,-420],\"parameters\":{\"color\":4,\"width\":880,\"height\":80,\"content\":\"# Example files for us in a delivery pipeline\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"parse workflow\":{\"main\":[[{\"node\":\"Remove root node\",\"type\":\"main\",\"index\":0}]]},\"Remove root node\":{\"main\":[[{\"node\":\"Create JSON  file with readable name\",\"type\":\"main\",\"index\":0},{\"node\":\"TAG? Auto deploy to dev\",\"type\":\"main\",\"index\":0},{\"node\":\"TAG? Auto deploy to PROD\",\"type\":\"main\",\"index\":0}]]},\"Start export workflows\":{\"main\":[[{\"node\":\"Create folders and run n8n cli\",\"type\":\"main\",\"index\":0}]]},\"TAG? Auto deploy to dev\":{\"main\":[[{\"node\":\"Create JSON  file with readable name (dev)\",\"type\":\"main\",\"index\":0}]]},\"load exported workflows\":{\"main\":[[{\"node\":\"parse workflow\",\"type\":\"main\",\"index\":0}]]},\"TAG? Auto deploy to PROD\":{\"main\":[[{\"node\":\"Create JSON  file with readable name (prod)\",\"type\":\"main\",\"index\":0}]]},\"Create folders and run n8n cli\":{\"main\":[[{\"node\":\"load exported workflows\",\"type\":\"main\",\"index\":0}]]},\"Create JSON  file with readable name\":{\"main\":[[{\"node\":\"Store named workflow\",\"type\":\"main\",\"index\":0}]]},\"Create JSON  file with readable name (dev)\":{\"main\":[[{\"node\":\"Store named workflow (dev)\",\"type\":\"main\",\"index\":0}]]},\"Create JSON  file with readable name (prod)\":{\"main\":[[{\"node\":\"Store named workflow (prod)\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "**This n8n workflow template uses community nodes and is only compatible with the self-hosted version of n8n.**\n\n## Export workflows with readable names, tagged for different environments\n\nTo ensure understandable workflow exports, ease of use in delivery pipelines, and a better developer experience, this workflow helps with exporting workflows.\n\n## Inner workings\n\n  * First, the workflow ensures that the directory structure for storing the workflows is correct.\n  * Exports all workflows.\n  * Next, it processes all workflow files and stores them with readable names.\n  * Based on tags, it will _also_ export to `dev` and `prod` folders for easy commit and usage in a delivery pipeline.\n\n\n\n## Configration\n\nNo special setup is required for readable exporting.\n\n## Usage\n\nCreate a workflow and tag it with '_Auto deploy to dev_ '  \nRun the workflow, this will create the needed folders and workflows with readable names.  \nCommit these in your version control.  \nHave a CICD pipeline build an n8n container  \n—see the attached Dockerfile.\n\nCheck our **Auto Starter workflow** for auto-starting workflows after deployment.\n\n## CI/CD Bonus:\n\nAttached are two nodes with some example configuration on building your own automated n8n deployment.\n\n  * A Dockerfile, to get the new entrypoint and exported workflows packaged in the container.\n  * An updated entrypoint to build your own container, import the workflows, and run the Auto Starter.\n\n\n\nSet the following environment variables:\n\n  * `STARTUP_WORKFLOWS_LOAD_LOCATION`: to specify the folder to import from and distinguish between environments.\n  * `STARTUP_WORKFLOW_ID`: the ID of the workflow to run after starting n8n. \n\n> **Note:** The 'Instance Started' n8n trigger won't work, as all workflows are disabled upon import.\n\n\n\n",
  "crawled_at": "2025-05-26T06:12:44.905388",
  "readme_zh": "**此n8n工作流模板使用社区节点，仅兼容自托管版n8n**\n\n## 导出具有可读名称的工作流，并按不同环境打标\n\n为确保工作流导出清晰易懂、便于交付流水线使用并提升开发者体验，本工作流可辅助完成导出操作。\n\n## 实现原理\n\n* 首先确保存储工作流的目录结构正确\n* 导出全部工作流\n* 随后处理所有工作流文件，以可读名称存储\n* 根据标签_额外_导出至`dev`和`prod`文件夹，便于提交至交付流水线\n\n## 配置\n\n无需特殊设置即可实现可读性导出\n\n## 使用方法\n\n1. 创建工作流并标记'_自动部署至开发环境_'\n2. 运行工作流，将自动创建所需文件夹及可读名称的工作流文件\n3. 将生成文件提交至版本控制系统\n4. 通过CI/CD流水线构建n8n容器（参考附带的Dockerfile）\n\n查看**自动启动工作流**实现部署后自动启动作业\n\n## CI/CD附加组件：\n\n附带两个配置示例节点，助您构建自动化n8n部署方案：\n\n* Dockerfile - 用于打包新入口点及导出的工作流至容器\n* 更新版入口点脚本 - 用于构建自定义容器、导入工作流并运行自动启动器\n\n需设置以下环境变量：\n\n* `STARTUP_WORKFLOWS_LOAD_LOCATION` - 指定导入目录并区分环境\n* `STARTUP_WORKFLOW_ID` - n8n启动后需运行的工作流ID\n\n> **注意：** 由于导入时所有工作流均处于禁用状态，\"实例启动\"触发器将失效",
  "title_zh": "可读性工作流导出与多环境持续集成/部署管道",
  "publish_date_zh": "上次更新于4天前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"ce9d1036890ad908eb71bc905b95b126863ca1ff55b0267ee175e7a644abdfcf\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"84883c25-ad4f-4b18-a227-609815a9024b\",\n      \"name\": \"Remove root node\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        780,\n        -680\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={{ $json.parsedData }}\"\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"de5315d0-447e-4740-966a-f2fa711f54a4\",\n      \"name\": \"TAG? Auto deploy to dev\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1060,\n        -340\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"03241d00-9ec1-4215-8036-2d219a7874cb\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"contains\",\n                \"rightType\": \"any\"\n              },\n              \"leftValue\": \"={{ $json.tags.map((obj) => obj.name) }}\",\n              \"rightValue\": \"Auto deploy to dev\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"82f0885b-ab23-4472-89d4-0a3c79ec3efb\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1060,\n        -780\n      ],\n      \"parameters\": {\n        \"width\": 520,\n        \"height\": 280,\n        \"content\": \"## 导出\\n将数据添加到exports文件夹中，并使用易于理解的名称\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aa297fef-b961-435d-ba78-05cb73fd03f7\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -140,\n        -780\n      ],\n      \"parameters\": {\n        \"width\": 380,\n        \"height\": 280,\n        \"content\": \"## n8n 导出工作流\\n将数据按工作流添加到导出文件夹中\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c3188c5-9913-4c28-ae48-3cb79ae3dabd\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1300,\n        -460\n      ],\n      \"parameters\": {\n        \"width\": 520,\n        \"height\": 280,\n        \"content\": \"## 导出\\n如果文件需要自动部署到开发环境，请将它们添加到 import-dev 文件夹中\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"78a8be19-93cf-4a36-aaed-70ff29ae5e9e\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1300,\n        -140\n      ],\n      \"parameters\": {\n        \"width\": 520,\n        \"height\": 280,\n        \"content\": \"## 导出\\n如果文件需要自动部署到开发环境，请将它们添加到 import-dev 文件夹中\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b7aa0923-340b-4be8-805a-f5f1dbe73af3\",\n      \"name\": \"TAG? Auto deploy to PROD\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1060,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"03241d00-9ec1-4215-8036-2d219a7874cb\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"contains\",\n                \"rightType\": \"any\"\n              },\n              \"leftValue\": \"={{ $json.tags.map((obj) => obj.name) }}\",\n              \"rightValue\": \"Auto deploy to PROD\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"1f8086d4-c318-4eb4-b8ba-8e196bbd944d\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -360,\n        -1220\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 620,\n        \"height\": 420,\n        \"content\": \"# 导出工作流\\n\\n- 所有工作流将以ID作为初始文件名存储\\n- 这些文件经处理后，将以**工作流名称 (ID).json**的可读格式重新存储\\n- 若文件标记有**'自动部署到开发环境'**或**'自动部署到生产环境'**标签，将被存入对应独立文件夹\\n\\n提交代码时，构建流水线将创建包含这些工作流文件的新镜像并自动部署\\n\\n启动时：\\n- 在启动n8n前，我们将通过n8n命令行工具导入已导出的工作流\\n- 启动n8n并等待其完全初始化\\n- 导入的工作流在n8n中将处于禁用状态\\n- 手动运行AutoStarter工作流来启动所有带有**'自动启动'**标签的工作流\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e132b429-ce1e-4dea-bc0d-856e4a547203\",\n      \"name\": \"Start export workflows\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -300,\n        -680\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d7f06044-52a4-4a1e-86ba-019b832bcbe8\",\n      \"name\": \"Create folders and run n8n cli\",\n      \"type\": \"n8n-nodes-base.executeCommand\",\n      \"position\": [\n        -100,\n        -680\n      ],\n      \"parameters\": {\n        \"command\": \"mkdir export; \\nmkdir export/n8n-workflows; \\nmkdir export/named-workflows;\\nrm -Rf export/n8n-workflows/*;\\nrm -Rf export/named-workflows/*;\\n\\nmkdir import-dev/workflows;\\n\\nn8n export:workflow --all --output=export/n8n-workflows --pretty --separate\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"41ffdc1d-59ce-411d-9542-1c5cdcc43e35\",\n      \"name\": \"load exported workflows\",\n      \"type\": \"n8n-nodes-base.readWriteFile\",\n      \"position\": [\n        360,\n        -680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fileSelector\": \"export/n8n-workflows/*.*\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ff01046f-66f5-462f-af84-dc59d00b51d6\",\n      \"name\": \"parse workflow\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        580,\n        -680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"fromJson\",\n        \"destinationKey\": \"parsedData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"920c1ea4-650a-4a37-a907-6e4d9c661b7e\",\n      \"name\": \"Create JSON  file with readable name\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        1100,\n        -680\n      ],\n      \"parameters\": {\n        \"mode\": \"each\",\n        \"options\": {\n          \"format\": true,\n          \"fileName\": \"=./export/named-workflows/{{ $json.name }} ({{ $json.id }}).json\"\n        },\n        \"operation\": \"toJson\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"0ea7c70b-2cdb-4edb-84a1-54742c1e7c5b\",\n      \"name\": \"Store named workflow\",\n      \"type\": \"n8n-nodes-base.readWriteFile\",\n      \"position\": [\n        1340,\n        -680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fileName\": \"={{ $binary.data.directory }}/{{ $binary.data.fileName }}\",\n        \"operation\": \"write\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3989b580-5525-4666-bc17-f40675bc56be\",\n      \"name\": \"Create JSON  file with readable name (dev)\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        1360,\n        -360\n      ],\n      \"parameters\": {\n        \"mode\": \"each\",\n        \"options\": {\n          \"format\": true,\n          \"fileName\": \"=./import-dev/workflows/{{ $json.name }} ({{ $json.id }}).json\"\n        },\n        \"operation\": \"toJson\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"dcf2ea35-5214-4328-bced-ba3ee6d9f813\",\n      \"name\": \"Create JSON  file with readable name (prod)\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        1360,\n        -40\n      ],\n      \"parameters\": {\n        \"mode\": \"each\",\n        \"options\": {\n          \"format\": true,\n          \"fileName\": \"=./import-prod/workflows/{{ $json.name }} ({{ $json.id }}).json\"\n        },\n        \"operation\": \"toJson\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"fa94f550-6367-4a8b-b55b-bcd217078985\",\n      \"name\": \"Store named workflow (dev)\",\n      \"type\": \"n8n-nodes-base.readWriteFile\",\n      \"position\": [\n        1580,\n        -360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fileName\": \"={{ $binary.data.directory }}/{{ $binary.data.fileName }}\",\n        \"operation\": \"write\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"72efde7d-8ac1-41e4-b823-621fd5effebf\",\n      \"name\": \"Store named workflow (prod)\",\n      \"type\": \"n8n-nodes-base.readWriteFile\",\n      \"position\": [\n        1580,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fileName\": \"={{ $binary.data.directory }}/{{ $binary.data.fileName }}\",\n        \"operation\": \"write\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1a5ad014-7fc7-41d5-b576-26e65bcf48a5\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -360,\n        -320\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 880,\n        \"height\": 460,\n        \"content\": \"## Dockerfile\\n```\\nFROM docker.io/n8nio/n8n:stable\\n \\n# 默认n8n配置参数\\nENV N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true\\nENV N8N_RUNNERS_ENABLED=true\\n \\n# 添加自动导入凭据和工作流的新入口点\\nUSER root\\nCOPY docker-files/importing-docker-entrypoint.sh /importing-docker-entrypoint.sh\\nRUN chmod +x /importing-docker-entrypoint.sh\\nUSER node\\n \\n# 可选安装额外依赖包\\n# RUN apk add --update graphicsmagick tzdata\\nCOPY package.json .\\nRUN npm install\\n \\n# 仅复制必要的源码文件\\nCOPY import-dev ./import-dev\\nCOPY import-prod ./import-prod\\n \\nENTRYPOINT [\\\"tini\\\" \\\"--\\\" \\\"/importing-docker-entrypoint.sh\\\"]\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e14394da-d144-463e-af5f-fba4e6dffc20\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -360,\n        160\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1400,\n        \"height\": 1000,\n        \"content\": \"## docker-files/importing-docker-entrypoint.sh\\n```\\n#!/bin/sh\\n\\n# 源自n8n官方仓库的Docker镜像配置\\n# 可将此文件挂载到容器内/importing-docker-entrypoint.sh路径并覆盖默认命令\\n\\n# 处理自定义证书\\nif [ -d /opt/custom-certificates ]; then\\n  echo \\\"正在加载/opt/custom-certificates目录下的自定义证书...\\\"\\n  export NODE_OPTIONS=\\\"--use-openssl-ca $NODE_OPTIONS\\\"\\n  export SSL_CERT_DIR=/opt/custom-certificates\\n  c_rehash /opt/custom-certificates\\nfi\\n\\n# 导入凭证和工作流\\necho \\\"正在导入凭证和工作流...\\\"\\necho \\\"  这些文件可存放在/opt/import/credentials和/opt/import/workflows目录\\\"\\nif [ -d /opt/import/credentials ]; then\\n  n8n import:credentials --input=/opt/import/credentials --separate\\nfi\\nif [ -d /opt/import/workflows ]; then\\n  n8n import:workflow --input=/opt/import/workflows --separate\\nfi\\n\\n# 通过环境变量导入更多凭证和工作流\\necho \\\"正在通过环境变量导入更多凭证和工作流...\\\"\\necho \\\"  路径可通过STARTUP_CREDENTIALS_LOAD_LOCATION和STARTUP_WORKFLOWS_LOAD_LOCATION环境变量设置\\\"\\necho \\\"  凭证路径: $STARTUP_CREDENTIALS_LOAD_LOCATION\\\"\\necho \\\"  工作流路径: $STARTUP_WORKFLOWS_LOAD_LOCATION\\\"\\nif [ -n \\\"$STARTUP_CREDENTIALS_LOAD_LOCATION\\\" ] && [ -d \\\"$STARTUP_CREDENTIALS_LOAD_LOCATION\\\" ]; then\\n  n8n import:credentials --input=\\\"$STARTUP_CREDENTIALS_LOAD_LOCATION\\\" --separate\\nfi\\nif [ -n \\\"$STARTUP_WORKFLOWS_LOAD_LOCATION\\\" ] && [ -d \\\"$STARTUP_WORKFLOWS_LOAD_LOCATION\\\" ]; then\\n  n8n import:workflow --input=\\\"$STARTUP_WORKFLOWS_LOAD_LOCATION\\\" --separate\\nfi\\n\\n# 自动执行工作流\\necho \\\"正在配置工作流自动执行...\\\"\\necho \\\"  工作流ID可通过STARTUP_WORKFLOW_ID环境变量配置\\\"\\nif [ -n \\\"$STARTUP_WORKFLOW_ID\\\" ]; then\\n  echo \\\"将在10秒和60秒后执行ID为$STARTUP_WORKFLOW_ID的工作流\\\"\\n  (\\n    sleep 10\\n    echo \\\"正在执行ID为$STARTUP_WORKFLOW_ID的工作流\\\"\\n    n8n execute --id $STARTUP_WORKFLOW_ID\\n    sleep 50\\n    echo \\\"正在执行ID为$STARTUP_WORKFLOW_ID的工作流\\\"\\n    n8n execute --id $STARTUP_WORKFLOW_ID\\n  ) &\\nfi\\n\\n# 启动n8n\\necho \\\"正在启动n8n服务...\\\"\\nif [ \\\"$#\\\" -gt 0 ]; then\\n  # 带参数启动\\n  exec n8n \\\"$@\\\"\\nelse\\n  # 无参数启动\\n  exec n8n\\nfi\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dcc9029e-8d83-4e26-a5c5-e55e53248af1\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -360,\n        -420\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 880,\n        \"height\": 80,\n        \"content\": \"# 交付管道中的示例文件\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"parse workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove root node\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove root node\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create JSON  file with readable name\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"TAG? Auto deploy to dev\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"TAG? Auto deploy to PROD\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Start export workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create folders and run n8n cli\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"TAG? Auto deploy to dev\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create JSON  file with readable name (dev)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"load exported workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"parse workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"TAG? Auto deploy to PROD\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create JSON  file with readable name (prod)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create folders and run n8n cli\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"load exported workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create JSON  file with readable name\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store named workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create JSON  file with readable name (dev)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store named workflow (dev)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create JSON  file with readable name (prod)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Store named workflow (prod)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}