{
  "url": "https://n8n.io/workflows/1991-analyze-email-headers-for-ips-and-spoofing/",
  "title": "Analyze Email Headers for IPs and Spoofing",
  "author": "n8n Team",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "SecOps"
    }
  ],
  "workflow_json": "{\"id\":\"3tJcVzt2OqeyjfnH\",\"meta\":{\"instanceId\":\"03e9d14e9196363fe7191ce21dc0bb17387a6e755dcc9acc4f5904752919dca8\"},\"name\":\"Analyze_email_headers_for_IPs_and_spoofing__3\",\"tags\":[{\"id\":\"GCHVocImoXoEVnzP\",\"name\":\"🛠️ In progress\",\"createdAt\":\"2023-10-31T02:17:21.618Z\",\"updatedAt\":\"2023-10-31T02:17:21.618Z\"},{\"id\":\"QPJKatvLSxxtrE8U\",\"name\":\"Secops\",\"createdAt\":\"2023-10-31T02:15:11.396Z\",\"updatedAt\":\"2023-10-31T02:15:11.396Z\"}],\"nodes\":[{\"id\":\"a2dca82d-f2b4-41f7-942a-2713a5ae012e\",\"name\":\"Receive Headers\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-320,740],\"webhookId\":\"1bde44ab-1360-48b3-9b2f-260a82629bfa\",\"parameters\":{\"path\":\"90e9e395-1d40-4575-b2a0-fbf52c534167\",\"options\":{},\"httpMethod\":\"POST\",\"responseMode\":\"responseNode\"},\"typeVersion\":1},{\"id\":\"8cb2e9f4-6954-4812-a443-47cc83e7db0a\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2900,420],\"parameters\":{\"width\":528.410729274179,\"height\":545.969373616973,\"content\":\"## Output\\nReturns output like:\\n```\\n[\\n    {\\n        \\\"ipAnalysis\\\": [\\n            {\\n                \\\"IP\\\": \\\"104.245.209.248\\\",\\n                \\\"fraud_score\\\": 87,\\n                \\\"recent_abuse\\\": true,\\n                \\\"Organization\\\": \\\"Deft Hosting\\\",\\n                \\\"tor\\\": false,\\n                \\\"ISP\\\": \\\"Server Central Network\\\",\\n                \\\"recent_spam_activity\\\": \\\"Identified spam in the past 24-48 hours\\\",\\n                \\\"ip_sender_reputation\\\": \\\"Bad\\\"\\n            },\\n            {\\n                \\\"IP\\\": \\\"09.06.05.41\\\",\\n                \\\"recent_spam_activity\\\": \\\"unknown\\\",\\n                \\\"ip_sender_reputation\\\": \\\"unknown\\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\\"spf\\\": \\\"pass\\\",\\n        \\\"dkim\\\": \\\"pass\\\",\\n        \\\"dmarc\\\": \\\"pass\\\"\\n    }\\n]\\n```\"},\"typeVersion\":1},{\"id\":\"2464403b-5cb9-4090-b923-912bb8af673a\",\"name\":\"Fraud Score\",\"type\":\"n8n-nodes-base.code\",\"position\":[1340,560],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"let recentSpamActivity = \\\"undefined\\\";\\nlet ipSenderReputation = \\\"undefined\\\";\\n\\ntry {\\n  if ($('IP Quality Score')) {\\n    const fraudScore = $('IP Quality Score').item.json.fraud_score;\\n\\n    recentSpamActivity = \\\"Not associated with recent spam activity\\\";\\n    \\n    if( fraudScore >= 85 ) {\\n      recentSpamActivity = \\\"Identified spam in the past 24-48 hours\\\";\\n    } else if( fraudScore >= 75 ) {\\n      recentSpamActivity = \\\"Identified spam in the past month\\\";\\n    }\\n\\n    if(!fraudScore) recentSpamActivity = \\\"unknown\\\";\\n    \\n    ipSenderReputation = \\\"unknown\\\";\\n    \\n    if( fraudScore >= 85 ) {\\n      ipSenderReputation = \\\"Bad\\\";\\n    } else if( fraudScore >= 75 ) {\\n      ipSenderReputation = \\\"Poor\\\";  \\n    } else if( fraudScore >= 50 ) {\\n      ipSenderReputation = \\\"Suspicious\\\";  \\n    } else if( fraudScore >= 11 ) {\\n      ipSenderReputation = \\\"OK\\\";  \\n    } else if( fraudScore <= 10 ) {\\n      ipSenderReputation = \\\"Good\\\";  \\n    }\\n  }\\n} catch (error) {\\n  return {\\n    \\\"recent_spam_activity\\\": recentSpamActivity,\\n    \\\"ip_sender_reputation\\\": ipSenderReputation\\n  };\\n}\\n\\nreturn {\\n  \\\"recent_spam_activity\\\": recentSpamActivity,\\n  \\\"ip_sender_reputation\\\": ipSenderReputation\\n};\"},\"typeVersion\":2},{\"id\":\"70e3e88a-001a-40fc-a771-ace7696f54eb\",\"name\":\"Respond to Webhook\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[2680,760],\"parameters\":{\"options\":{\"responseCode\":200},\"respondWith\":\"text\",\"responseBody\":\"={{ $json.result }}\"},\"typeVersion\":1},{\"id\":\"4e16523d-a7e1-44d1-840a-3df3a44bd034\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[460,-39.5],\"parameters\":{\"width\":628.6931617686989,\"height\":834.0576186324413,\"content\":\"![ipqualityscore](https://i.imgur.com/CQRV2uV.png)\\n## IP Reputation and Email Security Analysis\\nThis critical part of the workflow specializes in fortifying email security by extracting IP addresses from received headers. With a refined process, it analyzes the extracted IPs against the IP Quality Score API, assessing potential risks and preventing fraudulent activities.\\n\\nThe `Extract IPs from \\\"received\\\"` node initiates the process by isolating IP addresses from email headers, demonstrating n8n's capacity to dissect and parse complex data. The `Split Out IPs` node then prepares these IPs for individual scrutiny, showcasing the flexibility of n8n to handle data at granular levels. Finally, the `IP Quality Score` node queries an external API to evaluate each IP, reinforcing the security parameters by providing detailed risk assessments.\\n\\n### Authentication - Free Tier Available (5000 credits/month)\\n\\nIP Quality Score uses the API key as part of the website URL. Since n8n does not currently allow for exposing credentials in the URL, you will need to hardcode your API key in the fake expression snippet in the `IP Quality Score` node.\\n\\nThe API key can be found by [visiting their documentation here](https://www.ipqualityscore.com/documentation/proxy-detection-api/overview), logging in, and then scrolling down to the Private Key. \"},\"typeVersion\":1},{\"id\":\"2e8ead40-a97a-4c7e-953c-33546b83eaf6\",\"name\":\"Explode Email Header\",\"type\":\"n8n-nodes-base.code\",\"position\":[80,740],\"parameters\":{\"jsCode\":\"// Takes the Header string and splits it into various items for analysis.\\nlet returnArray = [];\\n\\nfor (const item of $input.all()) {\\n  const headerStr = item.json.header;\\n  const headerLines = headerStr.split('\\\\n');\\n    const headerObj = {};\\n\\n    let currentKey = null;\\n    let currentValue = '';\\n\\n    headerLines.forEach((line) => {\\n        const match = line.match(/^([\\\\w-]+):\\\\s*(.*)/);\\n\\n        if (match) {\\n            if (currentKey) {\\n                if (!headerObj[currentKey]) headerObj[currentKey] = [];\\n                headerObj[currentKey].push({ [`${currentKey}`]: currentValue });\\n            }\\n\\n            currentKey = match[1].toLowerCase();\\n            currentValue = match[2];\\n        } else {\\n            currentValue += ' ' + line.trim();\\n        }\\n    });\\n\\n    if (currentKey) {\\n        if (!headerObj[currentKey]) headerObj[currentKey] = [];\\n        headerObj[currentKey].push({ [`${currentKey}Item`]: currentValue });\\n    }\\n  returnArray.push({\\\"header\\\":headerObj});\\n}\\n\\nreturn returnArray;\"},\"typeVersion\":2},{\"id\":\"1118176d-a315-439d-a3b6-fe4d40c900c6\",\"name\":\"Split Out IPs\",\"type\":\"n8n-nodes-base.itemLists\",\"position\":[740,560],\"parameters\":{\"options\":{\"destinationFieldName\":\"ip\"},\"fieldToSplitOut\":\"ips\"},\"typeVersion\":3},{\"id\":\"ef118900-11a6-418a-b1b3-159933d62cbf\",\"name\":\"Extract IPs from \\\"received\\\"\",\"type\":\"n8n-nodes-base.code\",\"position\":[540,560],\"parameters\":{\"jsCode\":\"let ips = []\\n\\nfor (const item of $input.all()) {\\n  const header = JSON.stringify(item.json.header.received);\\n  console.log(header)\\n  const ipRegex = /\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\b/g;\\n  const ipAddresses = header.match(ipRegex) || [];\\n  ips.push(...ipAddresses);\\n}\\n\\nreturn [\\n  {\\n    ips: ips\\n  }\\n];\"},\"typeVersion\":2,\"alwaysOutputData\":true},{\"id\":\"ffefc1e2-214c-47d7-a7a3-104fefdccda1\",\"name\":\"IP Quality Score\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[920,560],\"parameters\":{\"url\":\"=https://ipqualityscore.com/api/json/ip/{{ Replace me with your API key, it can be found inside the api documentation, leave json.ip alone }}/{{ $json.ip }}?strictness=1&allow_public_access_points=true&lighter_penalties=true\",\"options\":{}},\"typeVersion\":4.1},{\"id\":\"2f1c5b30-950c-4e0d-81a6-bf4c2c64f968\",\"name\":\"IP-API\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1140,560],\"parameters\":{\"url\":\"=http://ip-api.com/json/{{ $('Split Out IPs').item.json.ip }}\",\"method\":\"POST\",\"options\":{}},\"typeVersion\":4.1},{\"id\":\"c9cae845-63e8-475a-bc08-ba0552712394\",\"name\":\"Collect interesting data\",\"type\":\"n8n-nodes-base.set\",\"position\":[1520,560],\"parameters\":{\"values\":{\"string\":[{\"name\":\"IP\",\"value\":\"={{ $('Split Out IPs').item.json.ip }}\"},{\"name\":\"fraud_score\",\"value\":\"={{ $('IP Quality Score').item.json.fraud_score }}\"},{\"name\":\"recent_abuse\",\"value\":\"={{ $('IP Quality Score').item.json.recent_abuse }}\"},{\"name\":\"Organization\",\"value\":\"={{ $('IP Quality Score').item.json.organization }}\"},{\"name\":\"tor\",\"value\":\"={{ $('IP Quality Score').item.json.tor }}\"},{\"name\":\"ISP\",\"value\":\"={{ $('IP-API').item.json.isp }}\"},{\"name\":\"recent_spam_activity\",\"value\":\"={{ $json.recent_spam_activity }}\"},{\"name\":\"ip_sender_reputation\",\"value\":\"={{ $json.ip_sender_reputation }}\"}]},\"options\":{\"dotNotation\":true},\"keepOnlySet\":true},\"typeVersion\":2},{\"id\":\"01b33cc9-b7b3-44e6-b683-b753e6daa2dc\",\"name\":\"SPF/DKIM/DMARC from \\\"authentication-results\\\"\",\"type\":\"n8n-nodes-base.code\",\"position\":[520,1160],\"parameters\":{\"jsCode\":\"let mailAuth = [];\\n\\nfor (const item of $input.all()) {\\n  // SPF\\n  let spf = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=pass\\\") ) {\\n    spf = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=fail\\\") ) {\\n    spf = \\\"fail\\\";    \\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=neutral\\\") ) {\\n    spf = \\\"neutral\\\";\\n  }\\n\\n  // DKIM\\n  let dkim = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=pass\\\") ) {\\n    dkim = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=fail\\\") ) {\\n    dkim = \\\"fail\\\";    \\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=temperror\\\") ) {\\n    dkim = \\\"error\\\";\\n  }\\n\\n  // DMARC\\n  let dmarc = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dmarc=pass\\\") ) {\\n    dmarc = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dmarc=fail\\\") ) {\\n    dmarc = \\\"fail\\\";    \\n  }\\n  \\n  mailAuth.push({\\n    \\\"spf\\\": spf,\\n    \\\"dkim\\\": dkim,\\n    \\\"dmarc\\\": dmarc\\n  });\\n}\\n\\nreturn mailAuth;\"},\"typeVersion\":2},{\"id\":\"33923ec2-10db-4799-9b5e-a369cdd74640\",\"name\":\"SPF from \\\"received-spf\\\"\",\"type\":\"n8n-nodes-base.code\",\"position\":[500,1858],\"parameters\":{\"jsCode\":\"let spfArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const spfList = item.json.header[\\\"received-spf\\\"];\\n\\n    if (!spfList || spfList.length == 0) {\\n        spfArray.push(\\\"not-found\\\");\\n    } else {\\n        for (const spfItem of spfList) {\\n            if (spfItem[\\\"received-spf\\\"].toLowerCase().includes(\\\"fail\\\")) {\\n                spfArray.push(\\\"fail\\\");\\n            } else if (spfItem[\\\"received-spf\\\"].toLowerCase().includes(\\\"pass\\\")) {\\n                spfArray.push(\\\"pass\\\");\\n            } else {\\n                spfArray.push(\\\"found\\\");\\n            }\\n        }\\n    }\\n}\\nreturn [{spf:spfArray.join(\\\",\\\")}];\\n\"},\"typeVersion\":2,\"alwaysOutputData\":true},{\"id\":\"9cec1f09-3887-46ec-aa25-b03a0ab34190\",\"name\":\"DKIM from \\\"dkim-signature\\\"\",\"type\":\"n8n-nodes-base.code\",\"position\":[760,1858],\"parameters\":{\"jsCode\":\"let dkimArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const dkimList = item.json.header[\\\"dkim-signature\\\"];\\n\\n    if (!dkimList || dkimList.length == 0) { dkimArray.push(\\\"not-found\\\") } else {\\n        dkimArray.push(\\\"found\\\");\\n        return dkimArray;\\n    }\\n\\n}\\nreturn [{dkim:dkimArray.join(\\\",\\\")}];\\n\"},\"typeVersion\":2,\"alwaysOutputData\":true},{\"id\":\"0f856808-c044-4547-bc81-5e6d1208d9ad\",\"name\":\"DMARC from \\\"received-dmarc\\\"\",\"type\":\"n8n-nodes-base.code\",\"position\":[1020,1858],\"parameters\":{\"jsCode\":\"let dmarcArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const dmarcList = item.json.header[\\\"received-dmarc\\\"];\\n\\n    if (!dmarcList || dmarcList.length == 0) {\\n        dmarcArray.push(\\\"not-found\\\");\\n    } else {\\n        for (const dmarcItem of dmarcList) {\\n            if (dmarcItem[\\\"received-dmarc\\\"].toLowerCase().includes(\\\"fail\\\")) {\\n                dmarcArray.push(\\\"fail\\\");\\n            } else if (dmarcItem[\\\"received-dmarc\\\"].toLowerCase().includes(\\\"pass\\\")) {\\n                dmarcArray.push(\\\"pass\\\");\\n            } else {\\n                dmarcArray.push(\\\"found\\\");\\n            }\\n        }\\n    }\\n}\\nreturn [{dmarc:dmarcArray.join(\\\",\\\")}];\"},\"typeVersion\":2,\"alwaysOutputData\":true},{\"id\":\"0780dc59-8a4c-4355-9cdc-35b2505043a6\",\"name\":\"DKIM\",\"type\":\"n8n-nodes-base.switch\",\"position\":[1260,2718],\"parameters\":{\"rules\":{\"rules\":[{\"value2\":\"spf=pass\",\"operation\":\"contains\"},{\"output\":1,\"value2\":\"spf=fail\",\"operation\":\"contains\"},{\"output\":2,\"value2\":\"spf=neutral\",\"operation\":\"contains\"}]},\"value1\":\"={{ $('Authentication Results Present?').item.json.header['authentication-results'] }}\",\"dataType\":\"string\",\"fallbackOutput\":3},\"typeVersion\":1},{\"id\":\"b0be02f9-ae6c-460e-9e1c-0be8f878f81b\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-359.7001600000003,-46.60400000000038],\"parameters\":{\"width\":811.1951544353835,\"height\":1042.0833160085729,\"content\":\"![webhook](https://i.imgur.com/D6SP9P0.png)\\n## Workflow Overview\\nThis n8n workflow is adept at dissecting email headers to assess security risks. It employs a webhook to receive data, then diverges into two thorough investigative paths based on specific header contents. For emails with `received` headers, it extracts IP details and consults the IP Quality Score API for comprehensive risk assessments, including potential fraud or abuse and geolocation insights via the IP-API.\\n\\nConversely, when `authentication-results` headers are present, it meticulously evaluates SPF, DKIM, and DMARC verifications, categorizing each email based on the authentication checks.\\n\\nFinally, the workflow converges the data from both paths to provide a cohesive analysis, which is then relayed back through the webhook, furnishing a detailed report on IP reputation and email authentication status.\\n\\n`Please note that the workflow is not yet complete, but should still work without the DKIM analysis.`\\n\\n## Triggered Via Webhook\\nThe workflow is triggered on-demand by incoming webhook queries or can be used inside of the `Execute Workflow` node by replacing the `webhook trigger` with an `Execute Workflow Trigger` and the `respond to webhook` node with a `Set node` set to only keep the set node data. This allows you to use it as part of a larger workflow, in which this portion handles the header analysis. Simply add the  Example input looks like:\\n\\n```\\n[\\n  {\\n    \\\"headers\\\": {\\n      \\\"host\\\": \\\"internal.users.n8n.cloud\\\"\\n    },\\n    \\\"params\\\": {},\\n    \\\"query\\\": {},\\n    \\\"body\\\": \\\"Delivered-To: g.andreini@gmail.com\\\\nReceived: by 2002:a05:7412:be08:b0:df:2c3c:4cc with SMTP id la8csp2349351rdb;\\\\n        Tue, 5 Sep 2023 15:06:08 -0700 (PDT)\\\\nX-Google-Smtp-Source: AGHT+IEHz2WAE5kssnJSpwJyhbuq3ZjNQTqZfo6OFeCd5w2EKOdnF3nICb1zIL4Y1tahQpr5xY6+\\\\nX-Received: by 2002:a17:907:78c3:b0:9a1:f2d3:ade9 with SMTP id kv3-20020a17090778c300b009a1f2d3ade9mr802685ejc.42.1693951567785;\\\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\\\nARC-Seal: i=1; a=rsa-sha256; t=1693951567; cv=none;\\\\n        d=google.com; s=arc-20160816;\\\\n        b=zsD04giTt/gbOxX6IW6/ETi7zkiuLYPaM6nYtckkcCfhqz5H7qvNN1NkDrlbnsXEr2\\\\n         3jVLDlhAZCXVg4qGNEWTjfzLwn5eQoUdW7iy//8XZU3Xy2xtORLBKKWs+Pjzx2sBP9KS\\\\n         zsy0Tg+rlAqi/aOH8+D+ANC0dCibsPau92zLS6GIvil700hvAJ7KB9fw0s/Ntx4z8VGv\\\\n         0P+BodOQDO9kdHtuMkgu/waF86Xe0ImcxtvMHQ/mNjbTSRDTa0d04+X7ILVf4q0B5gFg\\\\n         tnykE51GIS8Ey8ElAd4z/it1E/ffMJ7QAgiDSO0tZRc2NnM0QQ1oYrO9IL0cNuW1P33Q\\\\n         PfNA==\\\\nARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;\\\\n        h=mime-version:date:subject:to:from:reply-to:message-id;\\\\n        bh=f9tT4LpRqlQSioyOCLufJC57T1y2rwgsPezOJPbokDM=;\\\\n        fh=syfPZFOxHm03Bg8T666hpPsY3BFS1EZPTr8jKyQ7bFk=;\\\\n        b=fsZErxdmb95VXJpAyI8Pff38Ifu47WaONvSwpYaSstYbRoKDZSS3SH247NHt/+uyq+\\\\n         7UUF37XenbcZif1p3iOa96JxcYBtLLp3cI9pe8NRQjJtceXQk70PVcCGNXORiAxoCGT+\\\\n         iCMzUoFjTAfhK729rSldyFJ+I+WU3k+W/CjL1+geJkU5fEmg+eBEo8hDifqW3Iv73auq\\\\n         uDnxkLZ55yX9W2ARwv/204qqqxYHKfdXDIWGDyeXE10NHLTr/GAR8DWVx6qD8b4U0Zc3\\\\n         MC+SZxGsIcSCr5ouXIovuQBYcdmqDgDxAaN9VTfYdnXobblN6bo3OcC0rqiiyVJnV3ZA\\\\n         BYoQ==\\\\nARC-Authentication-Results: i=1; mx.google.com;\\\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\\\nReturn-Path: <eljyzxd@molkase.de>\\\\nReceived: from mail19.interhost.it (mail19.interhost.it. [89.31.72.29])\\\\n        by mx.google.com with ESMTPS id k15-20020a170906578f00b00992aaed9f81si7955121ejq.356.2023.09.05.15.06.07\\\\n        for <g.andreini@gmail.com>\\\\n        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);\\\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\\\nReceived-SPF: fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) client-ip=89.31.72.29;\\\\nAuthentication-Results: mx.google.com;\\\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\\\nReceived: from mailfront2.interhost.it (mailfront2.interhost.it [89.31.72.21]) (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits)) (No client certificate requested) by mail19.interhost.it (Postfix) with ESMTPS id 7BA73561D21 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\\\nReceived: from mailfront2.interhost.it (localhost [127.0.0.1]) by mailfront2.interhost.it (Postfix) with ESMTP id 5AEE1835B2 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\\\nReceived-SPF: Pass (mailfrom) identity=mailfrom; client-ip=62.173.139.164; helo=mail.molkase.de; envelope-from=eljyzxd@molkase.de; receiver=<UNKNOWN>\\\\nReceived: from mail.molkase.de (mail.molkase.de [62.173.139.164]) by mailfront2.interhost.it (Postfix) with ESMTP id A8BC3835B5 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:05 +0200 (CEST)\\\\nReceived: from molkase.de (mail.molkase.de [62.173.139.164]) by mail.molkase.de (Postfix) with ESMTPA id A561D80FB872; Tue,\\\\n  5 Sep 2023 23:08:50 +0300 (EEST)\\\\nMessage-ID: <15404342A12424728J51235153O87748181D@ideljyzxd>\\\\nReply-To: Legal Casino <eljyzxd@molkase.de>\\\\nFrom: Legal Casino <eljyzxd@molkase.de>\\\\nTo: <info@tevassociati.it>\\\\nSubject: Bonus for all European residents\\\\nDate: Tue, 05 Sep 2023 23:08:55 +0300\\\\nMIME-Version: 1.0\\\\nContent-Type: multipart/related; type=\\\\\\\"multipart/alternative\\\\\\\"; boundary=\\\\\\\"----=_NextPart_000_0018_01D9E04D.79971B70\\\\\\\"\\\\nX-Virus-Scanned: ClamAV using ClamSMTP\\\"\\n  }\\n]\\n```\"},\"typeVersion\":1},{\"id\":\"3c8fe0f3-0b65-4366-9c1e-a2a7bcc35ed5\",\"name\":\"Extract Email Header from webhook\",\"type\":\"n8n-nodes-base.set\",\"position\":[-99,740],\"parameters\":{\"values\":{\"string\":[{\"name\":\"header\",\"value\":\"={{ $json.body }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":2},{\"id\":\"4eef6457-27cf-442f-bccf-75663170401b\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1100,20],\"parameters\":{\"width\":610.1426815377504,\"height\":772.7590323462559,\"content\":\"![ipapi](https://i.imgur.com/OMhn14b.png)\\n## IP Reputation and Fraud Analysis\\nThis workflow section performs an in-depth reputation assessment of each IP address. The `IP-API` node retrieves geolocation data, while the `Fraud Score` node evaluates the risk associated with the IP, flagging any potential spam or abuse activities.\\n\\n### Consolidation of Findings\\nKey data points such as fraud scores and ISP information are synthesized by the `Collect interesting data` node, providing a clear profile of each IP for informed decision-making.\\n\\n### Authentication - Free Tier Available (45 requests/min)\\nThis endpoint is limited to `45 requests per minute from an IP address`.\\n\\nIf you go over the limit your requests will be throttled `(HTTP 429)` until your rate limit window is reset. If you constantly go over the limit your IP address will be banned for 1 hour.\\n\\nNo authentication needed, [Click here to view documentation.](https://ip-api.com/docs)\"},\"typeVersion\":1},{\"id\":\"764de66e-8e40-44d1-8c09-fb099753d800\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1720,141.75],\"parameters\":{\"width\":1153.9919748350057,\"height\":818.3738794326835,\"content\":\"![n8n](https://i.imgur.com/lKnBNnH.png)\\n## Analyze and Respond to Email Header Analysis\\nThe concluding segment of the `Analyze Email Headers For IPs and Spoofing` workflow integrates sophisticated data processing to analyze and respond to the collected email header information. This part of the workflow is crucial as it synthesizes the data gathered from email headers and prepares it for actionable insights.\\n\\n- `Data Aggregation and Merging:` The nodes `Merge1` and Item `Lists2` are pivotal for aggregating the data from previous steps. These nodes effectively concatenate various items and compile the IP analysis data. This operation is essential for creating a comprehensive view of the email headers, focusing particularly on IPs and potential spoofing indicators.\\n\\n- `Further Merging and Response Preparation:` Another merge operation is performed by `Merge3`, which prepares the data for the final output. Following this, Item Lists3 further concatenates items to form a single, coherent result. This step ensures that all the relevant information is accurately compiled and ready for the final response.\\n\\n- `Final Response to Webhook:` The Respond to Webhook node serves as the endpoint of this workflow. It is configured to respond with the analyzed data, encapsulated in a text format. The response is set to return a 200 HTTP status code, signaling a successful operation. This node exemplifies n8n's capability in not just processing and analyzing data, but also in seamlessly communicating results back to a designated receiver, be it a webhook or any other endpoint.\\n\\n\\nBy the end of this workflow, you have a structured and detailed analysis of email headers, specifically tailored to identify IPs and potential spoofing threats. This underscores n8n's effectiveness as a cybersecurity tool, providing not just data processing capabilities but also actionable insights crucial for maintaining email security.\"},\"typeVersion\":1},{\"id\":\"2fa3c912-f478-48a1-9b2e-5e3f51c6a363\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[460,800],\"parameters\":{\"width\":630.5819800503231,\"height\":535.80387776221,\"content\":\"![nodejs](https://i.imgur.com/OqjRFGZ.png)\\n## Authentication Analysis\\n\\nThis section assesses the presence and validity of SPF, DKIM, and DMARC records within email headers to confirm authentication. `SPF/DKIM/DMARC from \\\"authentication-results\\\"` node evaluates the authentication results, ensuring that emails meet the set security standards for sender verification. \\n\\nThe n8n code nodes use either a version of `Javascript` called `node.js` or a version of `Python` called `Pyodide`. In this case we are using Javascript.\"},\"typeVersion\":1},{\"id\":\"5297e5a0-f2d1-4ee3-b931-9b1abe75b2cc\",\"name\":\"Sticky Note10\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[460,2038],\"parameters\":{\"width\":983.9576126829675,\"height\":1039.0141642262715,\"content\":\"![n8n](https://i.imgur.com/yz109RJ.png)\\n## SPF and DKIM Authentication Routing\\nThis group of nodes orchestrates the authentication status routing for SPF and DKIM records found in email headers.\\n\\nSPF Validation Decision-Making\\nThe `SPF` switch node evaluates the SPF results from the email header, directing the flow to different paths based on whether SPF passes, fails, or is neutral. The `\\\"Set1,\\\" \\\"Set2,\\\" and \\\"Set4\\\"` nodes then assign the respective SPF authentication statuses, marking emails for further processing based on their security verification.\\n\\nDKIM Evaluation Handling\\nAlthough not explicitly processing DKIM, the `\\\"DKIM\\\" switch node` is likely misnamed and should be adjusted to reflect its role correctly. It seems to be set up for similar routing logic as the SPF node, which suggests it should handle DKIM results. If it's indeed for DKIM, ensure it's checking for `\\\"dkim=pass/fail/neutral\\\"` within the authentication results.\\n\\nUnknown SPF Status Assignment\\nFinally, the `\\\"Set5\\\"` node appears to handle cases where SPF results are not found or are indeterminate, setting the status to `\\\"unknown.\\\"`\"},\"typeVersion\":1},{\"id\":\"f6c06bc5-048c-433e-9bfa-f155ca6735e4\",\"name\":\"Received Headers Present?\",\"type\":\"n8n-nodes-base.if\",\"position\":[300,660],\"parameters\":{\"conditions\":{\"number\":[{\"value1\":\"={{ $json.header.received.length }}\",\"operation\":\"larger\"}]}},\"typeVersion\":1},{\"id\":\"a92ef09c-0cc6-469c-98ff-8c6172615a4b\",\"name\":\"Authentication Results Present?\",\"type\":\"n8n-nodes-base.if\",\"position\":[300,820],\"parameters\":{\"conditions\":{\"number\":[{\"value1\":\"={{ $json.header[\\\"authentication-results\\\"].length }}\",\"operation\":\"larger\"}]}},\"typeVersion\":1},{\"id\":\"aef7f739-dfef-40b1-b01f-29adad4a9bda\",\"name\":\"Aggregate Authentication Data\",\"type\":\"n8n-nodes-base.set\",\"position\":[1280,1858],\"parameters\":{\"values\":{\"string\":[{\"name\":\"spf\",\"value\":\"={{ $('SPF from \\\"received-spf\\\"').all() }}\"},{\"name\":\"dkim\",\"value\":\"={{ $('DKIM from \\\"dkim-signature\\\"').all() }}\"},{\"name\":\"dmarc\",\"value\":\"={{ $('DMARC from \\\"received-dmarc\\\"').all() }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":2},{\"id\":\"5d7ce661-3bdf-45e5-a1e2-335602e62b5d\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[460,1349.3807407407407],\"parameters\":{\"width\":984.4210239195738,\"height\":672.6925241611406,\"content\":\"![nodejs](https://i.imgur.com/OqjRFGZ.png)\\n## Email Authentication Assessment\\nThis set of nodes is dedicated to evaluating the authentication of email headers, specifically focusing on SPF, DKIM, and DMARC validations.\\n\\n### SPF, DKIM, and DMARC Extraction\\nStarting with `SPF from 'received-spf',` this node analyzes the email's SPF records for compliance. Following this, `DKIM from 'dkim-signature'` examines the DKIM signatures to verify their presence and status. Next, `DMARC from 'received-dmarc'` checks DMARC records for alignment with expected security practices.\\n\\n### Data Aggregation\\nOnce the assessments are complete, `Aggregate Authentication Data` compiles the findings into a cohesive dataset, providing clear indicators of each email's authentication status.\\n\\n### Key Focus\\nThese nodes are essential in filtering out potentially harmful emails by verifying their authenticity, a key step in protecting against phishing and spoofing attempts.\\n\"},\"typeVersion\":1},{\"id\":\"88888a82-815b-423a-85d3-8c86756d10cd\",\"name\":\"IP Data Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1800,660],\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"b7add244-9759-450f-8b01-6ec4555a5971\",\"name\":\"Merge Security Data\",\"type\":\"n8n-nodes-base.merge\",\"position\":[2171,760],\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"ef679cda-9420-44fd-90cc-23be1b166e2c\",\"name\":\"Join IP Analysis into one JSON object\",\"type\":\"n8n-nodes-base.itemLists\",\"position\":[1960,660],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\",\"operation\":\"concatenateItems\",\"destinationFieldName\":\"ipAnalysis\"},\"typeVersion\":3},{\"id\":\"1e5ae57b-948c-40c8-8248-fcbda80264e2\",\"name\":\"Join results into one JSON object\",\"type\":\"n8n-nodes-base.itemLists\",\"position\":[2391,760],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\",\"operation\":\"concatenateItems\",\"destinationFieldName\":\"result\"},\"typeVersion\":3},{\"id\":\"7fef7675-1350-4886-b184-f907dacf08b1\",\"name\":\"SPF Authentication Checker\",\"type\":\"n8n-nodes-base.switch\",\"position\":[500,2718],\"parameters\":{\"rules\":{\"rules\":[{\"value2\":\"spf=pass\",\"operation\":\"contains\"},{\"output\":1,\"value2\":\"spf=fail\",\"operation\":\"contains\"},{\"output\":2,\"value2\":\"spf=neutral\",\"operation\":\"contains\"}]},\"value1\":\"={{ JSON.stringify($json.header[\\\"authentication-results\\\"]) }}\",\"dataType\":\"string\",\"fallbackOutput\":3},\"typeVersion\":1},{\"id\":\"410ccb8c-a551-45a3-a487-b0ce15a56882\",\"name\":\"Set SPF Pass Status\",\"type\":\"n8n-nodes-base.set\",\"position\":[920,2518],\"parameters\":{\"values\":{\"string\":[{\"name\":\"spf\",\"value\":\"pass\"}]},\"options\":{}},\"typeVersion\":2},{\"id\":\"127c0c91-162c-4cbb-b692-eb0675a55c42\",\"name\":\"Set SPF Fail Status\",\"type\":\"n8n-nodes-base.set\",\"position\":[920,2658],\"parameters\":{\"values\":{\"string\":[{\"name\":\"spf\",\"value\":\"fail\"}]},\"options\":{}},\"typeVersion\":2},{\"id\":\"7a15ae91-012f-4fc8-9075-7f855b15d979\",\"name\":\"Set SPF Neutral Status\",\"type\":\"n8n-nodes-base.set\",\"position\":[920,2798],\"parameters\":{\"values\":{\"string\":[{\"name\":\"spf\",\"value\":\"neutral\"}]},\"options\":{}},\"typeVersion\":2},{\"id\":\"2ac1e5ce-83a4-4205-9774-76506f06108e\",\"name\":\"Set SPF UnknownStatus\",\"type\":\"n8n-nodes-base.set\",\"position\":[920,2938],\"parameters\":{\"values\":{\"string\":[{\"name\":\"spf\",\"value\":\"unknown\"}]},\"options\":{}},\"typeVersion\":2}],\"active\":false,\"pinData\":{\"Receive Headers\":[{\"json\":{\"body\":\"Delivered-To: g.andreini@gmail.com\\nReceived: by 2002:a05:7412:be08:b0:df:2c3c:4cc with SMTP id la8csp2349351rdb;\\n        Tue, 5 Sep 2023 15:06:08 -0700 (PDT)\\nX-Google-Smtp-Source: AGHT+IEHz2WAE5kssnJSpwJyhbuq3ZjNQTqZfo6OFeCd5w2EKOdnF3nICb1zIL4Y1tahQpr5xY6+\\nX-Received: by 2002:a17:907:78c3:b0:9a1:f2d3:ade9 with SMTP id kv3-20020a17090778c300b009a1f2d3ade9mr802685ejc.42.1693951567785;\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\nARC-Seal: i=1; a=rsa-sha256; t=1693951567; cv=none;\\n        d=google.com; s=arc-20160816;\\n        b=zsD04giTt/gbOxX6IW6/ETi7zkiuLYPaM6nYtckkcCfhqz5H7qvNN1NkDrlbnsXEr2\\n         3jVLDlhAZCXVg4qGNEWTjfzLwn5eQoUdW7iy//8XZU3Xy2xtORLBKKWs+Pjzx2sBP9KS\\n         zsy0Tg+rlAqi/aOH8+D+ANC0dCibsPau92zLS6GIvil700hvAJ7KB9fw0s/Ntx4z8VGv\\n         0P+BodOQDO9kdHtuMkgu/waF86Xe0ImcxtvMHQ/mNjbTSRDTa0d04+X7ILVf4q0B5gFg\\n         tnykE51GIS8Ey8ElAd4z/it1E/ffMJ7QAgiDSO0tZRc2NnM0QQ1oYrO9IL0cNuW1P33Q\\n         PfNA==\\nARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;\\n        h=mime-version:date:subject:to:from:reply-to:message-id;\\n        bh=f9tT4LpRqlQSioyOCLufJC57T1y2rwgsPezOJPbokDM=;\\n        fh=syfPZFOxHm03Bg8T666hpPsY3BFS1EZPTr8jKyQ7bFk=;\\n        b=fsZErxdmb95VXJpAyI8Pff38Ifu47WaONvSwpYaSstYbRoKDZSS3SH247NHt/+uyq+\\n         7UUF37XenbcZif1p3iOa96JxcYBtLLp3cI9pe8NRQjJtceXQk70PVcCGNXORiAxoCGT+\\n         iCMzUoFjTAfhK729rSldyFJ+I+WU3k+W/CjL1+geJkU5fEmg+eBEo8hDifqW3Iv73auq\\n         uDnxkLZ55yX9W2ARwv/204qqqxYHKfdXDIWGDyeXE10NHLTr/GAR8DWVx6qD8b4U0Zc3\\n         MC+SZxGsIcSCr5ouXIovuQBYcdmqDgDxAaN9VTfYdnXobblN6bo3OcC0rqiiyVJnV3ZA\\n         BYoQ==\\nARC-Authentication-Results: i=1; mx.google.com;\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\nReturn-Path: <eljyzxd@molkase.de>\\nReceived: from mail19.interhost.it (mail19.interhost.it. [89.31.72.29])\\n        by mx.google.com with ESMTPS id k15-20020a170906578f00b00992aaed9f81si7955121ejq.356.2023.09.05.15.06.07\\n        for <g.andreini@gmail.com>\\n        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\nReceived-SPF: fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) client-ip=89.31.72.29;\\nAuthentication-Results: mx.google.com;\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\nReceived: from mailfront2.interhost.it (mailfront2.interhost.it [89.31.72.21]) (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits)) (No client certificate requested) by mail19.interhost.it (Postfix) with ESMTPS id 7BA73561D21 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\nReceived: from mailfront2.interhost.it (localhost [127.0.0.1]) by mailfront2.interhost.it (Postfix) with ESMTP id 5AEE1835B2 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\nReceived-SPF: Pass (mailfrom) identity=mailfrom; client-ip=62.173.139.164; helo=mail.molkase.de; envelope-from=eljyzxd@molkase.de; receiver=<UNKNOWN>\\nReceived: from mail.molkase.de (mail.molkase.de [62.173.139.164]) by mailfront2.interhost.it (Postfix) with ESMTP id A8BC3835B5 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:05 +0200 (CEST)\\nReceived: from molkase.de (mail.molkase.de [62.173.139.164]) by mail.molkase.de (Postfix) with ESMTPA id A561D80FB872; Tue,\\n  5 Sep 2023 23:08:50 +0300 (EEST)\\nMessage-ID: <15404342A12424728J51235153O87748181D@ideljyzxd>\\nReply-To: Legal Casino <eljyzxd@molkase.de>\\nFrom: Legal Casino <eljyzxd@molkase.de>\\nTo: <info@tevassociati.it>\\nSubject: Bonus for all European residents\\nDate: Tue, 05 Sep 2023 23:08:55 +0300\\nMIME-Version: 1.0\\nContent-Type: multipart/related; type=\\\"multipart/alternative\\\"; boundary=\\\"----=_NextPart_000_0018_01D9E04D.79971B70\\\"\\nX-Virus-Scanned: ClamAV using ClamSMTP\",\"query\":{},\"params\":{},\"headers\":{\"host\":\"internal.users.n8n.cloud\",\"accept\":\"*/*\",\"x-real-ip\":\"10.255.0.2\",\"user-agent\":\"PostmanRuntime/7.32.3\",\"content-type\":\"text/plain\",\"authorization\":\"1234567890\",\"postman-token\":\"8701ef86-2136-4c79-941a-bc8ed79bcc9e\",\"content-length\":\"3900\",\"accept-encoding\":\"gzip, deflate, br\",\"x-forwarded-for\":\"10.255.0.2\",\"x-forwarded-host\":\"internal.users.n8n.cloud\",\"x-forwarded-port\":\"443\",\"x-forwarded-proto\":\"https\",\"x-forwarded-server\":\"e591fa1c2d01\"}},\"pairedItem\":{\"item\":0}}]},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"6e01f4f9-d42b-4168-91a1-0bfe850c43ea\",\"connections\":{\"IP-API\":{\"main\":[[{\"node\":\"Fraud Score\",\"type\":\"main\",\"index\":0}]]},\"Fraud Score\":{\"main\":[[{\"node\":\"Collect interesting data\",\"type\":\"main\",\"index\":0}]]},\"IP Data Merge\":{\"main\":[[{\"node\":\"Join IP Analysis into one JSON object\",\"type\":\"main\",\"index\":0}]]},\"Split Out IPs\":{\"main\":[[{\"node\":\"IP Quality Score\",\"type\":\"main\",\"index\":0}]]},\"Receive Headers\":{\"main\":[[{\"node\":\"Extract Email Header from webhook\",\"type\":\"main\",\"index\":0}]]},\"IP Quality Score\":{\"main\":[[{\"node\":\"IP-API\",\"type\":\"main\",\"index\":0}]]},\"Merge Security Data\":{\"main\":[[{\"node\":\"Join results into one JSON object\",\"type\":\"main\",\"index\":0}]]},\"Set SPF Fail Status\":{\"main\":[[{\"node\":\"DKIM\",\"type\":\"main\",\"index\":0}]]},\"Set SPF Pass Status\":{\"main\":[[{\"node\":\"DKIM\",\"type\":\"main\",\"index\":0}]]},\"Explode Email Header\":{\"main\":[[{\"node\":\"Received Headers Present?\",\"type\":\"main\",\"index\":0},{\"node\":\"Authentication Results Present?\",\"type\":\"main\",\"index\":0}]]},\"Set SPF UnknownStatus\":{\"main\":[[{\"node\":\"DKIM\",\"type\":\"main\",\"index\":0}]]},\"Set SPF Neutral Status\":{\"main\":[[{\"node\":\"DKIM\",\"type\":\"main\",\"index\":0}]]},\"SPF from \\\"received-spf\\\"\":{\"main\":[[{\"node\":\"DKIM from \\\"dkim-signature\\\"\",\"type\":\"main\",\"index\":0}]]},\"Collect interesting data\":{\"main\":[[{\"node\":\"IP Data Merge\",\"type\":\"main\",\"index\":0}]]},\"Received Headers Present?\":{\"main\":[[{\"node\":\"Extract IPs from \\\"received\\\"\",\"type\":\"main\",\"index\":0}],[{\"node\":\"IP Data Merge\",\"type\":\"main\",\"index\":1}]]},\"DKIM from \\\"dkim-signature\\\"\":{\"main\":[[{\"node\":\"DMARC from \\\"received-dmarc\\\"\",\"type\":\"main\",\"index\":0}]]},\"SPF Authentication Checker\":{\"main\":[[{\"node\":\"Set SPF Pass Status\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Set SPF Fail Status\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Set SPF Neutral Status\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Set SPF UnknownStatus\",\"type\":\"main\",\"index\":0}]]},\"DMARC from \\\"received-dmarc\\\"\":{\"main\":[[{\"node\":\"Aggregate Authentication Data\",\"type\":\"main\",\"index\":0}]]},\"Extract IPs from \\\"received\\\"\":{\"main\":[[{\"node\":\"Split Out IPs\",\"type\":\"main\",\"index\":0}]]},\"Aggregate Authentication Data\":{\"main\":[[{\"node\":\"Merge Security Data\",\"type\":\"main\",\"index\":1}]]},\"Authentication Results Present?\":{\"main\":[[{\"node\":\"SPF/DKIM/DMARC from \\\"authentication-results\\\"\",\"type\":\"main\",\"index\":0},{\"node\":\"SPF Authentication Checker\",\"type\":\"main\",\"index\":0}],[{\"node\":\"SPF from \\\"received-spf\\\"\",\"type\":\"main\",\"index\":0}]]},\"Extract Email Header from webhook\":{\"main\":[[{\"node\":\"Explode Email Header\",\"type\":\"main\",\"index\":0}]]},\"Join results into one JSON object\":{\"main\":[[{\"node\":\"Respond to Webhook\",\"type\":\"main\",\"index\":0}]]},\"Join IP Analysis into one JSON object\":{\"main\":[[{\"node\":\"Merge Security Data\",\"type\":\"main\",\"index\":0}]]},\"SPF/DKIM/DMARC from \\\"authentication-results\\\"\":{\"main\":[[{\"node\":\"Merge Security Data\",\"type\":\"main\",\"index\":1}]]}}}",
  "readme": "This n8n workflow is designed to analyze email headers received via a webhook. The workflow splits into two main paths based on the presence of the received and authentication results headers.\n\nIn the first path, if received headers are present, the workflow extracts IP addresses from these headers and then queries the IP Quality Score API to gather information about the IP addresses, including fraud score, abuse history, organization, and more. Geolocation data is also obtained from the IP-API API. The workflow collects and aggregates this information for each IP address.\n\nIn the second path, if authentication-results headers are present, the workflow extracts SPF, DKIM, and DMARC authentication results. It then evaluates these results and sets fields accordingly (e.g., SPF pass/fail/neutral).\n\nThe paths merge their results, and the workflow responds to the original webhook with the aggregated analysis, including IP information and authentication results.\n\nPotential issues during setup include ensuring proper configuration of the webhook calls with header authentication, handling authentication and API keys for the IP Quality Score API, and addressing any discrepancies or errors in the logic nodes, such as handling SPF, DKIM, and DMARC results correctly. Additionally, thorough testing with various email header formats is essential to ensure accurate analysis and response.\n",
  "crawled_at": "2025-05-25T20:31:47.941527",
  "readme_zh": "此n8n工作流专为分析通过Webhook接收的电子邮件头而设计。工作流根据是否存在Received头与Authentication-Results头分为两条主路径。\n\n首条路径中，若检测到Received头，工作流会从中提取IP地址，随后查询IP质量评分API获取包括欺诈评分、滥用记录、所属机构等在内的IP情报，并通过IP-API接口获取地理位置数据。工作流将逐一对IP地址进行信息采集与汇总。\n\n次条路径中，若存在Authentication-Results头，则提取SPF、DKIM及DMARC验证结果，并根据验证状态设置相应字段（如SPF通过/失败/中立）。\n\n两条路径的结果最终合并，工作流将整合后的分析报告（含IP情报与认证结果）反馈至原始Webhook。\n\n配置过程中需注意：确保Webhook调用时正确配置头部认证、妥善管理IP质量评分API的鉴权密钥、正确处理逻辑节点中的异常（如准确解析SPF/DKIM/DMARC结果）。此外，需使用多种邮件头格式进行充分测试，以保证分析响应精准无误。",
  "title_zh": "分析邮件头以获取IP地址及检测伪造信息",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"id\": \"3tJcVzt2OqeyjfnH\",\n  \"meta\": {\n    \"instanceId\": \"03e9d14e9196363fe7191ce21dc0bb17387a6e755dcc9acc4f5904752919dca8\"\n  },\n  \"name\": \"Analyze_email_headers_for_IPs_and_spoofing__3\",\n  \"tags\": [\n    {\n      \"id\": \"GCHVocImoXoEVnzP\",\n      \"name\": \"🛠️ In progress\",\n      \"createdAt\": \"2023-10-31T02:17:21.618Z\",\n      \"updatedAt\": \"2023-10-31T02:17:21.618Z\"\n    },\n    {\n      \"id\": \"QPJKatvLSxxtrE8U\",\n      \"name\": \"Secops\",\n      \"createdAt\": \"2023-10-31T02:15:11.396Z\",\n      \"updatedAt\": \"2023-10-31T02:15:11.396Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"a2dca82d-f2b4-41f7-942a-2713a5ae012e\",\n      \"name\": \"Receive Headers\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -320,\n        740\n      ],\n      \"webhookId\": \"1bde44ab-1360-48b3-9b2f-260a82629bfa\",\n      \"parameters\": {\n        \"path\": \"90e9e395-1d40-4575-b2a0-fbf52c534167\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8cb2e9f4-6954-4812-a443-47cc83e7db0a\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2900,\n        420\n      ],\n      \"parameters\": {\n        \"width\": 528.410729274179,\n        \"height\": 545.969373616973,\n        \"content\": \"## 输出\\n返回类似以下格式的输出：\\n```\\n[\\n    {\\n        \\\"IP分析\\\": [\\n            {\\n                \\\"IP地址\\\": \\\"104.245.209.248\\\",\\n                \\\"欺诈评分\\\": 87,\\n                \\\"近期滥用记录\\\": true,\\n                \\\"所属组织\\\": \\\"Deft Hosting\\\",\\n                \\\"是否Tor节点\\\": false,\\n                \\\"网络服务提供商\\\": \\\"Server Central Network\\\",\\n                \\\"近期垃圾邮件活动\\\": \\\"过去24-48小时内发现垃圾邮件\\\",\\n                \\\"发件IP信誉\\\": \\\"差\\\"\\n            },\\n            {\\n                \\\"IP地址\\\": \\\"09.06.05.41\\\",\\n                \\\"近期垃圾邮件活动\\\": \\\"未知\\\",\\n                \\\"发件IP信誉\\\": \\\"未知\\\"\\n            }\\n        ]\\n    },\\n    {\\n        \\\"SPF验证\\\": \\\"通过\\\",\\n        \\\"DKIM验证\\\": \\\"通过\\\",\\n        \\\"DMARC验证\\\": \\\"通过\\\"\\n    }\\n]\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2464403b-5cb9-4090-b923-912bb8af673a\",\n      \"name\": \"Fraud Score\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1340,\n        560\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"let recentSpamActivity = \\\"undefined\\\";\\nlet ipSenderReputation = \\\"undefined\\\";\\n\\ntry {\\n  if ($('IP Quality Score')) {\\n    const fraudScore = $('IP Quality Score').item.json.fraud_score;\\n\\n    recentSpamActivity = \\\"Not associated with recent spam activity\\\";\\n    \\n    if( fraudScore >= 85 ) {\\n      recentSpamActivity = \\\"Identified spam in the past 24-48 hours\\\";\\n    } else if( fraudScore >= 75 ) {\\n      recentSpamActivity = \\\"Identified spam in the past month\\\";\\n    }\\n\\n    if(!fraudScore) recentSpamActivity = \\\"unknown\\\";\\n    \\n    ipSenderReputation = \\\"unknown\\\";\\n    \\n    if( fraudScore >= 85 ) {\\n      ipSenderReputation = \\\"Bad\\\";\\n    } else if( fraudScore >= 75 ) {\\n      ipSenderReputation = \\\"Poor\\\";  \\n    } else if( fraudScore >= 50 ) {\\n      ipSenderReputation = \\\"Suspicious\\\";  \\n    } else if( fraudScore >= 11 ) {\\n      ipSenderReputation = \\\"OK\\\";  \\n    } else if( fraudScore <= 10 ) {\\n      ipSenderReputation = \\\"Good\\\";  \\n    }\\n  }\\n} catch (error) {\\n  return {\\n    \\\"recent_spam_activity\\\": recentSpamActivity,\\n    \\\"ip_sender_reputation\\\": ipSenderReputation\\n  };\\n}\\n\\nreturn {\\n  \\\"recent_spam_activity\\\": recentSpamActivity,\\n  \\\"ip_sender_reputation\\\": ipSenderReputation\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"70e3e88a-001a-40fc-a771-ace7696f54eb\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        2680,\n        760\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"text\",\n        \"responseBody\": \"={{ $json.result }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4e16523d-a7e1-44d1-840a-3df3a44bd034\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        -39.5\n      ],\n      \"parameters\": {\n        \"width\": 628.6931617686989,\n        \"height\": 834.0576186324413,\n        \"content\": \"![IP质量评分](https://i.imgur.com/CQRV2uV.png)\\n## IP信誉与邮件安全分析\\n该工作流的核心环节通过提取邮件头中的IP地址强化安全防护。经过优化的流程会将提取的IP提交至IP Quality Score API进行风险分析，评估潜在威胁并阻断欺诈行为。\\n\\n`从\\\"received\\\"提取IP`节点率先从邮件头中分离出IP地址，展现了n8n解析复杂数据结构的能力。随后`拆分IP`节点对各个IP进行独立处理，体现了n8n处理细粒度数据的灵活性。最终`IP质量评分`节点通过外部API查询每个IP的详细风险评估，从而增强安全防护层级。\\n\\n### 认证方式 - 提供免费层级（每月5000积分）\\n\\nIP Quality Score的API密钥需作为网址组成部分。由于n8n当前不支持在URL中暴露凭证，您需要在`IP质量评分`节点的模拟表达式代码段中硬编码API密钥。\\n\\n通过[访问官方文档](https://www.ipqualityscore.com/documentation/proxy-detection-api/overview)登录账户后，下拉至\\\"Private Key\\\"即可获取API密钥。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2e8ead40-a97a-4c7e-953c-33546b83eaf6\",\n      \"name\": \"Explode Email Header\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        80,\n        740\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Takes the Header string and splits it into various items for analysis.\\nlet returnArray = [];\\n\\nfor (const item of $input.all()) {\\n  const headerStr = item.json.header;\\n  const headerLines = headerStr.split('\\\\n');\\n    const headerObj = {};\\n\\n    let currentKey = null;\\n    let currentValue = '';\\n\\n    headerLines.forEach((line) => {\\n        const match = line.match(/^([\\\\w-]+):\\\\s*(.*)/);\\n\\n        if (match) {\\n            if (currentKey) {\\n                if (!headerObj[currentKey]) headerObj[currentKey] = [];\\n                headerObj[currentKey].push({ [`${currentKey}`]: currentValue });\\n            }\\n\\n            currentKey = match[1].toLowerCase();\\n            currentValue = match[2];\\n        } else {\\n            currentValue += ' ' + line.trim();\\n        }\\n    });\\n\\n    if (currentKey) {\\n        if (!headerObj[currentKey]) headerObj[currentKey] = [];\\n        headerObj[currentKey].push({ [`${currentKey}Item`]: currentValue });\\n    }\\n  returnArray.push({\\\"header\\\":headerObj});\\n}\\n\\nreturn returnArray;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1118176d-a315-439d-a3b6-fe4d40c900c6\",\n      \"name\": \"Split Out IPs\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"position\": [\n        740,\n        560\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"destinationFieldName\": \"ip\"\n        },\n        \"fieldToSplitOut\": \"ips\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"ef118900-11a6-418a-b1b3-159933d62cbf\",\n      \"name\": \"Extract IPs from \\\"received\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        540,\n        560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let ips = []\\n\\nfor (const item of $input.all()) {\\n  const header = JSON.stringify(item.json.header.received);\\n  console.log(header)\\n  const ipRegex = /\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\b/g;\\n  const ipAddresses = header.match(ipRegex) || [];\\n  ips.push(...ipAddresses);\\n}\\n\\nreturn [\\n  {\\n    ips: ips\\n  }\\n];\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"ffefc1e2-214c-47d7-a7a3-104fefdccda1\",\n      \"name\": \"IP Quality Score\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        920,\n        560\n      ],\n      \"parameters\": {\n        \"url\": \"=https://ipqualityscore.com/api/json/ip/{{ Replace me with your API key, it can be found inside the api documentation, leave json.ip alone }}/{{ $json.ip }}?strictness=1&allow_public_access_points=true&lighter_penalties=true\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"2f1c5b30-950c-4e0d-81a6-bf4c2c64f968\",\n      \"name\": \"IP-API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1140,\n        560\n      ],\n      \"parameters\": {\n        \"url\": \"=http://ip-api.com/json/{{ $('Split Out IPs').item.json.ip }}\",\n        \"method\": \"POST\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"id\": \"c9cae845-63e8-475a-bc08-ba0552712394\",\n      \"name\": \"Collect interesting data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1520,\n        560\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"IP\",\n              \"value\": \"={{ $('Split Out IPs').item.json.ip }}\"\n            },\n            {\n              \"name\": \"fraud_score\",\n              \"value\": \"={{ $('IP Quality Score').item.json.fraud_score }}\"\n            },\n            {\n              \"name\": \"recent_abuse\",\n              \"value\": \"={{ $('IP Quality Score').item.json.recent_abuse }}\"\n            },\n            {\n              \"name\": \"Organization\",\n              \"value\": \"={{ $('IP Quality Score').item.json.organization }}\"\n            },\n            {\n              \"name\": \"tor\",\n              \"value\": \"={{ $('IP Quality Score').item.json.tor }}\"\n            },\n            {\n              \"name\": \"ISP\",\n              \"value\": \"={{ $('IP-API').item.json.isp }}\"\n            },\n            {\n              \"name\": \"recent_spam_activity\",\n              \"value\": \"={{ $json.recent_spam_activity }}\"\n            },\n            {\n              \"name\": \"ip_sender_reputation\",\n              \"value\": \"={{ $json.ip_sender_reputation }}\"\n            }\n          ]\n        },\n        \"options\": {\n          \"dotNotation\": true\n        },\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"01b33cc9-b7b3-44e6-b683-b753e6daa2dc\",\n      \"name\": \"SPF/DKIM/DMARC from \\\"authentication-results\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        520,\n        1160\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let mailAuth = [];\\n\\nfor (const item of $input.all()) {\\n  // SPF\\n  let spf = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=pass\\\") ) {\\n    spf = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=fail\\\") ) {\\n    spf = \\\"fail\\\";    \\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"spf=neutral\\\") ) {\\n    spf = \\\"neutral\\\";\\n  }\\n\\n  // DKIM\\n  let dkim = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=pass\\\") ) {\\n    dkim = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=fail\\\") ) {\\n    dkim = \\\"fail\\\";    \\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dkim=temperror\\\") ) {\\n    dkim = \\\"error\\\";\\n  }\\n\\n  // DMARC\\n  let dmarc = \\\"unknown\\\";\\n  if( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dmarc=pass\\\") ) {\\n    dmarc = \\\"pass\\\";\\n  } else if ( JSON.stringify(item.json.header[\\\"authentication-results\\\"]).includes(\\\"dmarc=fail\\\") ) {\\n    dmarc = \\\"fail\\\";    \\n  }\\n  \\n  mailAuth.push({\\n    \\\"spf\\\": spf,\\n    \\\"dkim\\\": dkim,\\n    \\\"dmarc\\\": dmarc\\n  });\\n}\\n\\nreturn mailAuth;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"33923ec2-10db-4799-9b5e-a369cdd74640\",\n      \"name\": \"SPF from \\\"received-spf\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        500,\n        1858\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let spfArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const spfList = item.json.header[\\\"received-spf\\\"];\\n\\n    if (!spfList || spfList.length == 0) {\\n        spfArray.push(\\\"not-found\\\");\\n    } else {\\n        for (const spfItem of spfList) {\\n            if (spfItem[\\\"received-spf\\\"].toLowerCase().includes(\\\"fail\\\")) {\\n                spfArray.push(\\\"fail\\\");\\n            } else if (spfItem[\\\"received-spf\\\"].toLowerCase().includes(\\\"pass\\\")) {\\n                spfArray.push(\\\"pass\\\");\\n            } else {\\n                spfArray.push(\\\"found\\\");\\n            }\\n        }\\n    }\\n}\\nreturn [{spf:spfArray.join(\\\",\\\")}];\\n\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"9cec1f09-3887-46ec-aa25-b03a0ab34190\",\n      \"name\": \"DKIM from \\\"dkim-signature\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        760,\n        1858\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let dkimArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const dkimList = item.json.header[\\\"dkim-signature\\\"];\\n\\n    if (!dkimList || dkimList.length == 0) { dkimArray.push(\\\"not-found\\\") } else {\\n        dkimArray.push(\\\"found\\\");\\n        return dkimArray;\\n    }\\n\\n}\\nreturn [{dkim:dkimArray.join(\\\",\\\")}];\\n\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"0f856808-c044-4547-bc81-5e6d1208d9ad\",\n      \"name\": \"DMARC from \\\"received-dmarc\\\"\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1020,\n        1858\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let dmarcArray = [];\\n\\nfor (const item of $('Authentication Results Present?').all()) {\\n    const dmarcList = item.json.header[\\\"received-dmarc\\\"];\\n\\n    if (!dmarcList || dmarcList.length == 0) {\\n        dmarcArray.push(\\\"not-found\\\");\\n    } else {\\n        for (const dmarcItem of dmarcList) {\\n            if (dmarcItem[\\\"received-dmarc\\\"].toLowerCase().includes(\\\"fail\\\")) {\\n                dmarcArray.push(\\\"fail\\\");\\n            } else if (dmarcItem[\\\"received-dmarc\\\"].toLowerCase().includes(\\\"pass\\\")) {\\n                dmarcArray.push(\\\"pass\\\");\\n            } else {\\n                dmarcArray.push(\\\"found\\\");\\n            }\\n        }\\n    }\\n}\\nreturn [{dmarc:dmarcArray.join(\\\",\\\")}];\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"0780dc59-8a4c-4355-9cdc-35b2505043a6\",\n      \"name\": \"DKIM\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1260,\n        2718\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"spf=pass\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 1,\n              \"value2\": \"spf=fail\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 2,\n              \"value2\": \"spf=neutral\",\n              \"operation\": \"contains\"\n            }\n          ]\n        },\n        \"value1\": \"={{ $('Authentication Results Present?').item.json.header['authentication-results'] }}\",\n        \"dataType\": \"string\",\n        \"fallbackOutput\": 3\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b0be02f9-ae6c-460e-9e1c-0be8f878f81b\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -359.7001600000003,\n        -46.60400000000038\n      ],\n      \"parameters\": {\n        \"width\": 811.1951544353835,\n        \"height\": 1042.0833160085729,\n        \"content\": \"![webhook](https://i.imgur.com/D6SP9P0.png)\\n## 工作流概览\\n该n8n工作流擅长解析邮件头以评估安全风险。它通过webhook接收数据后，根据特定头部内容分两条路径进行深入分析。对于含`received`头部的邮件，会提取IP详情并通过IP Quality Score API进行综合风险评估（包括潜在欺诈/滥用检测），同时借助IP-API获取地理位置信息。\\n\\n若存在`authentication-results`头部，则严格评估SPF、DKIM和DMARC验证结果，并据此对邮件进行分类。\\n\\n最终工作流将两条路径的数据合并生成综合分析报告，通过webhook返回，提供关于IP信誉和邮件认证状态的详细评估。\\n\\n`请注意：当前工作流尚未最终完成，但即使缺少DKIM分析模块仍可正常运行。`\\n\\n## 触发方式\\n本工作流可通过传入的webhook查询按需触发，也可在`Execute Workflow`节点中使用（需将`webhook触发器`替换为`Execute Workflow触发器`，并将`响应webhook`节点替换为仅保留设置节点数据的`Set节点`）。这使得它能作为大型工作流中的邮件头分析模块使用。典型输入示例如下：\\n\\n```\\n[\\n  {\\n    \\\"headers\\\": {\\n      \\\"host\\\": \\\"internal.users.n8n.cloud\\\"\\n    },\\n    \\\"params\\\": {},\\n    \\\"query\\\": {},\\n    \\\"body\\\": \\\"Delivered-To: g.andreini@gmail.com\\\\nReceived: by 2002:a05:7412:be08:b0:df:2c3c:4cc with SMTP id la8csp2349351rdb;\\\\n        Tue, 5 Sep 2023 15:06:08 -0700 (PDT)\\\\nX-Google-Smtp-Source: AGHT+IEHz2WAE5kssnJSpwJyhbuq3ZjNQTqZfo6OFeCd5w2EKOdnF3nICb1zIL4Y1tahQpr5xY6+\\\\nX-Received: by 2002:a17:907:78c3:b0:9a1:f2d3:ade9 with SMTP id kv3-20020a17090778c300b009a1f2d3ade9mr802685ejc.42.1693951567785;\\\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\\\nARC-Seal: i=1; a=rsa-sha256; t=1693951567; cv=none;\\\\n        d=google.com; s=arc-20160816;\\\\n        b=zsD04giTt/gbOxX6IW6/ETi7zkiuLYPaM6nYtckkcCfhqz5H7qvNN1NkDrlbnsXEr2\\\\n         3jVLDlhAZCXVg4qGNEWTjfzLwn5eQoUdW7iy//8XZU3Xy2xtORLBKKWs+Pjzx2sBP9KS\\\\n         zsy0Tg+rlAqi/aOH8+D+ANC0dCibsPau92zLS6GIvil700hvAJ7KB9fw0s/Ntx4z8VGv\\\\n         0P+BodOQDO9kdHtuMkgu/waF86Xe0ImcxtvMHQ/mNjbTSRDTa0d04+X7ILVf4q0B5gFg\\\\n         tnykE51GIS8Ey8ElAd4z/it1E/ffMJ7QAgiDSO0tZRc2NnM0QQ1oYrO9IL0cNuW1P33Q\\\\n         PfNA==\\\\nARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;\\\\n        h=mime-version:date:subject:to:from:reply-to:message-id;\\\\n        bh=f9tT4LpRqlQSioyOCLufJC57T1y2rwgsPezOJPbokDM=;\\\\n        fh=syfPZFOxHm03Bg8T666hpPsY3BFS1EZPTr8jKyQ7bFk=;\\\\n        b=fsZErxdmb95VXJpAyI8Pff38Ifu47WaONvSwpYaSstYbRoKDZSS3SH247NHt/+uyq+\\\\n         7UUF37XenbcZif1p3iOa96JxcYBtLLp3cI9pe8NRQjJtceXQk70PVcCGNXORiAxoCGT+\\\\n         iCMzUoFjTAfhK729rSldyFJ+I+WU3k+W/CjL1+geJkU5fEmg+eBEo8hDifqW3Iv73auq\\\\n         uDnxkLZ55yX9W2ARwv/204qqqxYHKfdXDIWGDyeXE10NHLTr/GAR8DWVx6qD8b4U0Zc3\\\\n         MC+SZxGsIcSCr5ouXIovuQBYcdmqDgDxAaN9VTfYdnXobblN6bo3OcC0rqiiyVJnV3ZA\\\\n         BYoQ==\\\\nARC-Authentication-Results: i=1; mx.google.com;\\\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\\\nReturn-Path: <eljyzxd@molkase.de>\\\\nReceived: from mail19.interhost.it (mail19.interhost.it. [89.31.72.29])\\\\n        by mx.google.com with ESMTPS id k15-20020a170906578f00b00992aaed9f81si7955121ejq.356.2023.09.05.15.06.07\\\\n        for <g.andreini@gmail.com>\\\\n        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);\\\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\\\nReceived-SPF: fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) client-ip=89.31.72.29;\\\\nAuthentication-Results: mx.google.com;\\\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\\\nReceived: from mailfront2.interhost.it (mailfront2.interhost.it [89.31.72.21]) (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits)) (No client certificate requested) by mail19.interhost.it (Postfix) with ESMTPS id 7BA73561D21 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\\\nReceived: from mailfront2.interhost.it (localhost [127.0.0.1]) by mailfront2.interhost.it (Postfix) with ESMTP id 5AEE1835B2 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\\\nReceived-SPF: Pass (mailfrom) identity=mailfrom; client-ip=62.173.139.164; helo=mail.molkase.de; envelope-from=eljyzxd@molkase.de; receiver=<UNKNOWN>\\\\nReceived: from mail.molkase.de (mail.molkase.de [62.173.139.164]) by mailfront2.interhost.it (Postfix) with ESMTP id A8BC3835B5 for <info@thepund.it>; Wed,\\\\n  6 Sep 2023 00:06:05 +0200 (CEST)\\\\nReceived: from molkase.de (mail.molkase.de [62.173.139.164]) by mail.molkase.de (Postfix) with ESMTPA id A561D80FB872; Tue,\\\\n  5 Sep 2023 23:08:50 +0300 (EEST)\\\\nMessage-ID: <15404342A12424728J51235153O87748181D@ideljyzxd>\\\\nReply-To: Legal Casino <eljyzxd@molkase.de>\\\\nFrom: Legal Casino <eljyzxd@molkase.de>\\\\nTo: <info@tevassociati.it>\\\\nSubject: Bonus for all European residents\\\\nDate: Tue, 05 Sep 2023 23:08:55 +0300\\\\nMIME-Version: 1.0\\\\nContent-Type: multipart/related; type=\\\\\\\"multipart/alternative\\\\\\\"; boundary=\\\\\\\"----=_NextPart_000_0018_01D9E04D.79971B70\\\\\\\"\\\\nX-Virus-Scanned: ClamAV using ClamSMTP\\\"\\n  }\\n]\\n```\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3c8fe0f3-0b65-4366-9c1e-a2a7bcc35ed5\",\n      \"name\": \"Extract Email Header from webhook\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -99,\n        740\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"header\",\n              \"value\": \"={{ $json.body }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"4eef6457-27cf-442f-bccf-75663170401b\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1100,\n        20\n      ],\n      \"parameters\": {\n        \"width\": 610.1426815377504,\n        \"height\": 772.7590323462559,\n        \"content\": \"![ipapi](https://i.imgur.com/OMhn14b.png)\\n## IP信誉与欺诈分析\\n该工作流模块对每个IP地址进行深度信誉评估。`IP-API`节点获取地理位置数据，而`欺诈评分`节点评估IP关联风险，标记潜在垃圾邮件或滥用活动。\\n\\n### 数据整合\\n通过`收集关键数据`节点综合欺诈评分、ISP信息等核心指标，为每个IP生成清晰画像，辅助决策制定。\\n\\n### 认证 - 免费层级可用（45次请求/分钟）\\n该端点限制为`每个IP地址每分钟45次请求`。\\n\\n若超出限制，请求将被限流`（HTTP 429）`直至速率限制窗口重置。若持续超限，该IP地址将被封禁1小时。\\n\\n无需认证，[点击查看文档](https://ip-api.com/docs)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"764de66e-8e40-44d1-8c09-fb099753d800\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1720,\n        141.75\n      ],\n      \"parameters\": {\n        \"width\": 1153.9919748350057,\n        \"height\": 818.3738794326835,\n        \"content\": \"![n8n](https://i.imgur.com/lKnBNnH.png)\\n## 邮件头分析与响应处理\\n`分析邮件头中的IP与伪造信息`工作流的最终环节通过高级数据处理技术，对收集到的邮件头信息进行深度解析与响应。这一阶段作为工作流的关键枢纽，将邮件头提取的数据转化为可操作的网络安全洞见。\\n\\n- `数据聚合与合并处理:` 核心节点`Merge1`与`Item Lists2`承担了前期数据的汇总任务，通过智能拼接条目与编译IP分析数据，构建出完整的邮件头分析视图，重点聚焦IP地址追踪与伪造特征识别。\\n\\n- `二次合并与响应准备:` 节点`Merge3`执行二次数据融合，为最终输出做准备。随后`Item Lists3`对条目进行最终聚合，形成结构化的分析结果，确保所有关键信息被精准整合至响应模块。\\n\\n- `Webhook终端响应:` 通过Respond to Webhook节点实现工作流闭环，该节点将封装为文本格式的分析结果连同200 HTTP状态码返回，标志着全流程的成功执行。此设计充分展现了n8n平台不仅具备数据处理能力，更能将分析结论精准回传至指定接收端（如Webhook或其他终端接口）。\\n\\n本工作流最终输出结构化的邮件头深度分析报告，特别强化了IP溯源与反邮件伪造功能，彰显了n8n作为网络安全工具的卓越效能——不仅提供数据处理能力，更输出对维护邮件安全至关重要的决策依据。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2fa3c912-f478-48a1-9b2e-5e3f51c6a363\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        800\n      ],\n      \"parameters\": {\n        \"width\": 630.5819800503231,\n        \"height\": 535.80387776221,\n        \"content\": \"![nodejs](https://i.imgur.com/OqjRFGZ.png)\\n## 认证分析\\n\\n本节通过评估邮件头中SPF、DKIM和DMARC记录的存在及有效性来验证认证。`来自\\\"authentication-results\\\"的SPF/DKIM/DMARC`节点会检查认证结果，确保邮件符合发件人验证的安全标准。\\n\\nn8n代码节点使用一种名为`node.js`的`Javascript`版本或名为`Pyodide`的`Python`版本。本例中我们使用的是Javascript。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5297e5a0-f2d1-4ee3-b931-9b1abe75b2cc\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        2038\n      ],\n      \"parameters\": {\n        \"width\": 983.9576126829675,\n        \"height\": 1039.0141642262715,\n        \"content\": \"![n8n](https://i.imgur.com/yz109RJ.png)\\n## SPF与DKIM认证路由\\n这组节点负责对邮件头中的SPF和DKIM记录进行认证状态路由编排。\\n\\nSPF验证决策\\n`SPF`开关节点评估邮件头中的SPF结果，根据SPF通过、失败或中立状态将流程导向不同路径。随后`\\\"Set1\\\"`、`\\\"Set2\\\"`和`\\\"Set4\\\"`节点会分配相应的SPF认证状态，根据安全验证结果标记邮件以进行后续处理。\\n\\nDKIM评估处理\\n虽然未明确处理DKIM，但`\\\"DKIM\\\"开关节点`可能存在命名不当，应调整以准确反映其功能。该节点似乎采用了与SPF节点相似的路由逻辑，表明其应处理DKIM结果。若确实用于DKIM验证，需确保其检查认证结果中的`\\\"dkim=pass/fail/neutral\\\"`状态。\\n\\n未知SPF状态分配\\n最后，`\\\"Set5\\\"`节点用于处理未找到SPF结果或结果不确定的情况，将状态标记为`\\\"unknown\\\"`。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f6c06bc5-048c-433e-9bfa-f155ca6735e4\",\n      \"name\": \"Received Headers Present?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        300,\n        660\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"number\": [\n            {\n              \"value1\": \"={{ $json.header.received.length }}\",\n              \"operation\": \"larger\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a92ef09c-0cc6-469c-98ff-8c6172615a4b\",\n      \"name\": \"Authentication Results Present?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        300,\n        820\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"number\": [\n            {\n              \"value1\": \"={{ $json.header[\\\"authentication-results\\\"].length }}\",\n              \"operation\": \"larger\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aef7f739-dfef-40b1-b01f-29adad4a9bda\",\n      \"name\": \"Aggregate Authentication Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1280,\n        1858\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"={{ $('SPF from \\\"received-spf\\\"').all() }}\"\n            },\n            {\n              \"name\": \"dkim\",\n              \"value\": \"={{ $('DKIM from \\\"dkim-signature\\\"').all() }}\"\n            },\n            {\n              \"name\": \"dmarc\",\n              \"value\": \"={{ $('DMARC from \\\"received-dmarc\\\"').all() }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5d7ce661-3bdf-45e5-a1e2-335602e62b5d\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        1349.3807407407407\n      ],\n      \"parameters\": {\n        \"width\": 984.4210239195738,\n        \"height\": 672.6925241611406,\n        \"content\": \"![nodejs](https://i.imgur.com/OqjRFGZ.png)\\n## 邮件认证评估\\n本组节点专用于评估邮件头部的认证情况，重点检测SPF、DKIM和DMARC验证结果。\\n\\n### SPF、DKIM与DMARC提取\\n起始节点`从'received-spf'提取SPF`会分析邮件的SPF记录合规性。随后`从'dkim-signature'提取DKIM`节点检查DKIM签名的存在状态及有效性。紧接着`从'received-dmarc'提取DMARC`节点验证DMARC记录是否符合预期的安全规范。\\n\\n### 数据汇总\\n当所有评估完成后，`聚合认证数据`节点会将各项发现整合成统一数据集，清晰标注每封邮件的认证状态指标。\\n\\n### 核心功能\\n这些节点通过验证邮件真实性来过滤潜在恶意邮件，是防御钓鱼攻击和伪造行为的关键防线。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"88888a82-815b-423a-85d3-8c86756d10cd\",\n      \"name\": \"IP Data Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1800,\n        660\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"b7add244-9759-450f-8b01-6ec4555a5971\",\n      \"name\": \"Merge Security Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2171,\n        760\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"ef679cda-9420-44fd-90cc-23be1b166e2c\",\n      \"name\": \"Join IP Analysis into one JSON object\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"position\": [\n        1960,\n        660\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"operation\": \"concatenateItems\",\n        \"destinationFieldName\": \"ipAnalysis\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1e5ae57b-948c-40c8-8248-fcbda80264e2\",\n      \"name\": \"Join results into one JSON object\",\n      \"type\": \"n8n-nodes-base.itemLists\",\n      \"position\": [\n        2391,\n        760\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"operation\": \"concatenateItems\",\n        \"destinationFieldName\": \"result\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"7fef7675-1350-4886-b184-f907dacf08b1\",\n      \"name\": \"SPF Authentication Checker\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        500,\n        2718\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"spf=pass\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 1,\n              \"value2\": \"spf=fail\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 2,\n              \"value2\": \"spf=neutral\",\n              \"operation\": \"contains\"\n            }\n          ]\n        },\n        \"value1\": \"={{ JSON.stringify($json.header[\\\"authentication-results\\\"]) }}\",\n        \"dataType\": \"string\",\n        \"fallbackOutput\": 3\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"410ccb8c-a551-45a3-a487-b0ce15a56882\",\n      \"name\": \"Set SPF Pass Status\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        2518\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"pass\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"127c0c91-162c-4cbb-b692-eb0675a55c42\",\n      \"name\": \"Set SPF Fail Status\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        2658\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"fail\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7a15ae91-012f-4fc8-9075-7f855b15d979\",\n      \"name\": \"Set SPF Neutral Status\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        2798\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"neutral\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2ac1e5ce-83a4-4205-9774-76506f06108e\",\n      \"name\": \"Set SPF UnknownStatus\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        2938\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spf\",\n              \"value\": \"unknown\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"Receive Headers\": [\n      {\n        \"json\": {\n          \"body\": \"Delivered-To: g.andreini@gmail.com\\nReceived: by 2002:a05:7412:be08:b0:df:2c3c:4cc with SMTP id la8csp2349351rdb;\\n        Tue, 5 Sep 2023 15:06:08 -0700 (PDT)\\nX-Google-Smtp-Source: AGHT+IEHz2WAE5kssnJSpwJyhbuq3ZjNQTqZfo6OFeCd5w2EKOdnF3nICb1zIL4Y1tahQpr5xY6+\\nX-Received: by 2002:a17:907:78c3:b0:9a1:f2d3:ade9 with SMTP id kv3-20020a17090778c300b009a1f2d3ade9mr802685ejc.42.1693951567785;\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\nARC-Seal: i=1; a=rsa-sha256; t=1693951567; cv=none;\\n        d=google.com; s=arc-20160816;\\n        b=zsD04giTt/gbOxX6IW6/ETi7zkiuLYPaM6nYtckkcCfhqz5H7qvNN1NkDrlbnsXEr2\\n         3jVLDlhAZCXVg4qGNEWTjfzLwn5eQoUdW7iy//8XZU3Xy2xtORLBKKWs+Pjzx2sBP9KS\\n         zsy0Tg+rlAqi/aOH8+D+ANC0dCibsPau92zLS6GIvil700hvAJ7KB9fw0s/Ntx4z8VGv\\n         0P+BodOQDO9kdHtuMkgu/waF86Xe0ImcxtvMHQ/mNjbTSRDTa0d04+X7ILVf4q0B5gFg\\n         tnykE51GIS8Ey8ElAd4z/it1E/ffMJ7QAgiDSO0tZRc2NnM0QQ1oYrO9IL0cNuW1P33Q\\n         PfNA==\\nARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;\\n        h=mime-version:date:subject:to:from:reply-to:message-id;\\n        bh=f9tT4LpRqlQSioyOCLufJC57T1y2rwgsPezOJPbokDM=;\\n        fh=syfPZFOxHm03Bg8T666hpPsY3BFS1EZPTr8jKyQ7bFk=;\\n        b=fsZErxdmb95VXJpAyI8Pff38Ifu47WaONvSwpYaSstYbRoKDZSS3SH247NHt/+uyq+\\n         7UUF37XenbcZif1p3iOa96JxcYBtLLp3cI9pe8NRQjJtceXQk70PVcCGNXORiAxoCGT+\\n         iCMzUoFjTAfhK729rSldyFJ+I+WU3k+W/CjL1+geJkU5fEmg+eBEo8hDifqW3Iv73auq\\n         uDnxkLZ55yX9W2ARwv/204qqqxYHKfdXDIWGDyeXE10NHLTr/GAR8DWVx6qD8b4U0Zc3\\n         MC+SZxGsIcSCr5ouXIovuQBYcdmqDgDxAaN9VTfYdnXobblN6bo3OcC0rqiiyVJnV3ZA\\n         BYoQ==\\nARC-Authentication-Results: i=1; mx.google.com;\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\nReturn-Path: <eljyzxd@molkase.de>\\nReceived: from mail19.interhost.it (mail19.interhost.it. [89.31.72.29])\\n        by mx.google.com with ESMTPS id k15-20020a170906578f00b00992aaed9f81si7955121ejq.356.2023.09.05.15.06.07\\n        for <g.andreini@gmail.com>\\n        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);\\n        Tue, 05 Sep 2023 15:06:07 -0700 (PDT)\\nReceived-SPF: fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) client-ip=89.31.72.29;\\nAuthentication-Results: mx.google.com;\\n       spf=fail (google.com: domain of eljyzxd@molkase.de does not designate 89.31.72.29 as permitted sender) smtp.mailfrom=eljyzxd@molkase.de\\nReceived: from mailfront2.interhost.it (mailfront2.interhost.it [89.31.72.21]) (using TLSv1.2 with cipher ADH-AES256-GCM-SHA384 (256/256 bits)) (No client certificate requested) by mail19.interhost.it (Postfix) with ESMTPS id 7BA73561D21 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\nReceived: from mailfront2.interhost.it (localhost [127.0.0.1]) by mailfront2.interhost.it (Postfix) with ESMTP id 5AEE1835B2 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:06 +0200 (CEST)\\nReceived-SPF: Pass (mailfrom) identity=mailfrom; client-ip=62.173.139.164; helo=mail.molkase.de; envelope-from=eljyzxd@molkase.de; receiver=<UNKNOWN>\\nReceived: from mail.molkase.de (mail.molkase.de [62.173.139.164]) by mailfront2.interhost.it (Postfix) with ESMTP id A8BC3835B5 for <info@thepund.it>; Wed,\\n  6 Sep 2023 00:06:05 +0200 (CEST)\\nReceived: from molkase.de (mail.molkase.de [62.173.139.164]) by mail.molkase.de (Postfix) with ESMTPA id A561D80FB872; Tue,\\n  5 Sep 2023 23:08:50 +0300 (EEST)\\nMessage-ID: <15404342A12424728J51235153O87748181D@ideljyzxd>\\nReply-To: Legal Casino <eljyzxd@molkase.de>\\nFrom: Legal Casino <eljyzxd@molkase.de>\\nTo: <info@tevassociati.it>\\nSubject: Bonus for all European residents\\nDate: Tue, 05 Sep 2023 23:08:55 +0300\\nMIME-Version: 1.0\\nContent-Type: multipart/related; type=\\\"multipart/alternative\\\"; boundary=\\\"----=_NextPart_000_0018_01D9E04D.79971B70\\\"\\nX-Virus-Scanned: ClamAV using ClamSMTP\",\n          \"query\": {},\n          \"params\": {},\n          \"headers\": {\n            \"host\": \"internal.users.n8n.cloud\",\n            \"accept\": \"*/*\",\n            \"x-real-ip\": \"10.255.0.2\",\n            \"user-agent\": \"PostmanRuntime/7.32.3\",\n            \"content-type\": \"text/plain\",\n            \"authorization\": \"1234567890\",\n            \"postman-token\": \"8701ef86-2136-4c79-941a-bc8ed79bcc9e\",\n            \"content-length\": \"3900\",\n            \"accept-encoding\": \"gzip, deflate, br\",\n            \"x-forwarded-for\": \"10.255.0.2\",\n            \"x-forwarded-host\": \"internal.users.n8n.cloud\",\n            \"x-forwarded-port\": \"443\",\n            \"x-forwarded-proto\": \"https\",\n            \"x-forwarded-server\": \"e591fa1c2d01\"\n          }\n        },\n        \"pairedItem\": {\n          \"item\": 0\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"6e01f4f9-d42b-4168-91a1-0bfe850c43ea\",\n  \"connections\": {\n    \"IP-API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fraud Score\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fraud Score\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Collect interesting data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IP Data Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join IP Analysis into one JSON object\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out IPs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IP Quality Score\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receive Headers\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Email Header from webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IP Quality Score\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IP-API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge Security Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join results into one JSON object\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set SPF Fail Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set SPF Pass Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Explode Email Header\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Received Headers Present?\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Authentication Results Present?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set SPF UnknownStatus\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set SPF Neutral Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SPF from \\\"received-spf\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DKIM from \\\"dkim-signature\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Collect interesting data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IP Data Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Received Headers Present?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract IPs from \\\"received\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"IP Data Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"DKIM from \\\"dkim-signature\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"DMARC from \\\"received-dmarc\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SPF Authentication Checker\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set SPF Pass Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Set SPF Fail Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Set SPF Neutral Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Set SPF UnknownStatus\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"DMARC from \\\"received-dmarc\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate Authentication Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract IPs from \\\"received\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out IPs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate Authentication Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Security Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Authentication Results Present?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SPF/DKIM/DMARC from \\\"authentication-results\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"SPF Authentication Checker\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"SPF from \\\"received-spf\\\"\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Email Header from webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Explode Email Header\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Join results into one JSON object\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Join IP Analysis into one JSON object\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Security Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SPF/DKIM/DMARC from \\\"authentication-results\\\"\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Security Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    }\n  }\n}"
}