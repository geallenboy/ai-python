{
  "url": "https://n8n.io/workflows/3942-ai-powered-restaurant-order-chatbot-with-gpt-4o-for-pos-integration/",
  "title": "AI-Powered Restaurant Order Chatbot with GPT-4o for POS Integration",
  "author": "Kumar Shivam",
  "publish_date": "Last update 12 days ago",
  "publish_date_absolute": "2025-05-14",
  "categories": [
    {
      "name": "Sales"
    },
    {
      "name": "Support"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"d73282515b90623d4a8783919a2d772c706425d649e1512792f37ac51e07e4a8\"},\"nodes\":[{\"id\":\"62b3c7cb-1993-44f1-8b86-38a34ca1d029\",\"name\":\"Information Extractor\",\"type\":\"@n8n/n8n-nodes-langchain.informationExtractor\",\"position\":[-200,500],\"parameters\":{\"text\":\"={{ $json.query }}\",\"options\":{},\"schemaType\":\"fromJson\",\"jsonSchemaExample\":\"{\\n  \\\"name\\\": \\\"Information Extractor\\\",\\n  \\\"type\\\": \\\"n8n-nodes-base.informationExtractor\\\",\\n  \\\"parameters\\\": {\\n    \\\"extract\\\": [\\n      {\\n        \\\"name\\\": \\\"items\\\",\\n        \\\"pattern\\\": \\\"(latte|coffee|tea|cappuccino)\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"quantity\\\",\\n        \\\"pattern\\\": \\\"\\\\\\\\d+\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"table\\\",\\n        \\\"pattern\\\": \\\"table number (\\\\\\\\d+)\\\"\\n      }\\n    ]\\n  }\\n}\\n\"},\"typeVersion\":1},{\"id\":\"75883f27-af58-4791-9e1a-a70b83e1cead\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-180,740],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"OizdHUANhz9NIHyd\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"aeefdd4b-bf7d-4824-97d8-0afc356fb7d6\",\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[120,540],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"8a5dda0c-a567-4305-83a3-68d6fb573dd3\",\"operator\":{\"type\":\"array\",\"operation\":\"empty\",\"singleValue\":true},\"leftValue\":\"={{ $json.output.parameters.extract }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"9e3f8a1b-ccd8-4f4d-91cb-b99cc46f412f\",\"name\":\"Google Sheets\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[840,420],\"parameters\":{\"columns\":{\"value\":{\"Item\":\"={{ $json.item }}\",\"Quantity\":\"={{ $json.quantity }}\",\"Table No\":\"={{ $json.table }}\",\"Timestamp\":\"={{ $now }}\"},\"schema\":[{\"id\":\"Timestamp\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Timestamp\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Table No\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Table No\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Item\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Item\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Quantity\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Quantity\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/16fXaxEcfnq_-oif9tp94-3uTeHSFWoSnuBPNTljuW-k/edit#gid=0\",\"cachedResultName\":\"Order log\"},\"documentId\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"https://docs.google.com/spreadsheets/d/16fXaxEcfnq_-oif9tp94-3uTeHSFWoSnuBPNTljuW-k/edit?usp=sharing\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"0RSJGMBcFzxY9GkS\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"4cc1818f-1585-42e1-a111-7b55557aebcb\",\"name\":\"Code\",\"type\":\"n8n-nodes-base.code\",\"position\":[380,560],\"parameters\":{\"language\":\"python\",\"pythonCode\":\"# Input from n8n\\ninput_data = items\\n\\n# Get the extracted list\\nextract_data = input_data[0].get('json', {}).get('output', {}).get('parameters', {}).get('extract', [])\\n\\n# Prepare variables\\norder_items = []\\ntable_number = None\\n\\n# Separate entries by type\\nitems_list = []\\nquantities = []\\n\\n# Parse all entries\\nfor entry in extract_data:\\n    if entry['name'] == 'table number':\\n        table_number = entry['pattern']\\n    elif entry['name'] == 'item':\\n        items_list.append(entry['pattern'])\\n    elif entry['name'] == 'quantity':\\n        quantities.append(int(entry['pattern']))\\n\\n# Pair items and quantities\\nfor i in range(len(items_list)):\\n    item_data = {\\n        'item': items_list[i],\\n        'quantity': quantities[i] if i < len(quantities) else None,\\n        'table': table_number\\n    }\\n    order_items.append(item_data)\\n\\n# Set final output\\noutput = [{'json': item} for item in order_items]\\n\\nreturn output\"},\"typeVersion\":2},{\"id\":\"a92d2745-148b-4e2a-b8f7-82d3993ff34f\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[620,500],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"aea89e6c-37a9-4859-adc8-b7e449701503\",\"name\":\"Replace Me\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[800,660],\"parameters\":{},\"typeVersion\":1},{\"id\":\"b31dba52-b27e-4267-be32-a7730b4d08a8\",\"name\":\"No Operation, do nothing\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[440,400],\"parameters\":{},\"typeVersion\":1},{\"id\":\"d7f9a381-6bc2-44d0-81ac-6e0fbe77d70a\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-260,220],\"parameters\":{\"color\":3,\"width\":340,\"height\":680,\"content\":\"## JSON PARSER\\n\\n1.converts the textual data final order like\\nitem name \\nquantity \\nand table name in a json.\\n\\n2.if the data doesn't include the above it returns null.\"},\"typeVersion\":1},{\"id\":\"acc7a528-f767-4576-b08d-6fc386f57648\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[100,220],\"parameters\":{\"color\":2,\"width\":460,\"height\":680,\"content\":\"## Refine/Split the jsons into multiple items\\n\\nIf the data from previous item is not null the custom code block splits the data into multiple json items in a list.\"},\"typeVersion\":1},{\"id\":\"857a3102-f5e1-4db5-afb4-154544414701\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[580,220],\"parameters\":{\"color\":4,\"width\":440,\"height\":680,\"content\":\"## Send each item as a record in Google sheet\\n\\n\\n**Each item is looped over and produce a batch of 1 item and appended as row in sheet with timestamp.\\n\"},\"typeVersion\":1},{\"id\":\"a1ff2b0f-0b48-4ea2-8121-4e2d72197ef7\",\"name\":\"Triggered on Restaurant Chat workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[-440,500],\"parameters\":{\"inputSource\":\"passthrough\"},\"typeVersion\":1.1},{\"id\":\"8689b773-a1c4-4de4-a66e-fab8c9eb6244\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-140,-280],\"webhookId\":\"d931c4a7-02f5-4359-918f-7ad3fae7b144\",\"parameters\":{\"public\":true,\"options\":{}},\"typeVersion\":1.1},{\"id\":\"de310ce2-3868-4a0f-aa9b-38253e75dbda\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[100,-260],\"parameters\":{\"options\":{\"systemMessage\":\"\\n\\nYou are a polite and efficient restaurant assistant.\\n\\nYour job is to take customer orders, verify the order details, correct any mistakes, and confirm the order.\\n\\nFollow these steps:\\n\\nGreeting and Asking for the Order\\n\\nIf the customer greets you (e.g., \\\"Hello\\\", \\\"Hi\\\", \\\"Good evening\\\"), respond with:\\n\\n\\\"Hello! How can I assist you today? What would you like to order?\\\"\\n\\nOrder Parsing and Understanding\\n\\nAccept orders in flexible formats, such as:\\n\\n\\\"1 latte, 2 coffee, table number 5\\\"\\n\\n\\\"latte 2, pepsi 1, table 3\\\"\\n\\n\\\"1 cappucino\\\"\\n\\n\\\"1 tea table no 4\\\"\\n\\nYour goal is to extract the following:\\n\\nItem names (e.g., latte, coffee, chocolate, tea, pepsi)\\n\\nQuantities (must be numeric)\\n\\nTable number (must be numeric)\\n\\nVerify and Handle Missing or Incorrect Information\\n\\nFor each item in the order:\\n\\nIf the item name is missing, respond:\\n\\\"Sorry, the item name is missing. What would you like to order?\\\"\\n\\nIf the quantity is missing, respond:\\n\\\"How many [item] would you like?\\\"\\n\\nIf the table number is missing, respond:\\n\\\"Could you please provide a table number?\\\"\\n\\nIf there are spelling mistakes in the item name, suggest corrections. Example:\\n\\\"Did you mean chocolate instead of chocolat? Please confirm.\\\"\\n\\nUse fuzzy matching to detect common variations and typos.\\n\\nFinal Confirmation\\n\\nOnce all necessary details are collected, present an order summary like this:\\n\\nHere’s your order summary:\\n\\n1 latte\\n\\n2 coffee\\n\\nTable number: 5\\nShall I confirm this order?\\n\\nOn Confirmation: Use the Tool\\n\\nWhen the user confirms, use the tool ConfirmOrder to send the final confirmation message as plain text in this format:\\n\\nThank you for confirming! Your order will be prepared shortly. Enjoy your time with us!\\n\\nOrder details are following:\\nitem quantity\\nlatte 1\\ncoffee 2\\n\\nAdded to table number 5\\n\\nEnsure numeric values (quantities and table numbers) are correctly extracted, even if they appear at the start or end. Always confirm with the user if there is any uncertainty.\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}},\"typeVersion\":1.9},{\"id\":\"9dda45ee-0a92-448c-8a7e-8daa99282cda\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-20,20],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{\"responseFormat\":\"text\"}},\"credentials\":{\"openAiApi\":{\"id\":\"OizdHUANhz9NIHyd\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"0c0189d5-8fb4-4679-b2e2-221a3e2a4c88\",\"name\":\"Call n8n Workflow Tool\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[360,20],\"parameters\":{\"workflowId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"wgaJ0eJQtYA8oKSC\",\"cachedResultName\":\"Restaurant POS workflow\"},\"description\":\"This tool sends the text output generated by the AI Agent node to another n8n workflow for additional handling or automation.\",\"workflowInputs\":{\"value\":{},\"schema\":[],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"notesInFlow\":false,\"typeVersion\":2.2},{\"id\":\"9292db7f-6ffc-486e-b31a-bcbd6ef7ab98\",\"name\":\"Last 5 conversations Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[140,40],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"2782d5b6-d33b-4c89-ac79-90bf380f0828\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[60,-380],\"parameters\":{\"width\":340,\"height\":300,\"content\":\"## Restaurant Order Chat bot\\n** It chats with the user and refines the order for the pos system in another workflow.\"},\"typeVersion\":1},{\"id\":\"7c298718-e9e3-40d3-a612-94c578bd3100\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[500,-20],\"parameters\":{\"color\":5,\"content\":\"## Call the subworkflow\\nit passes the data to the subworkflow for further process\\n\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"If\":{\"main\":[[{\"node\":\"No Operation, do nothing\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Code\",\"type\":\"main\",\"index\":0}]]},\"Code\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"AI Agent\":{\"main\":[[]]},\"Replace Me\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items\":{\"main\":[[{\"node\":\"Google Sheets\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Replace Me\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"Information Extractor\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Information Extractor\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]},\"Call n8n Workflow Tool\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Last 5 conversations Memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Triggered on Restaurant Chat workflow\":{\"main\":[[{\"node\":\"Information Extractor\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow automates the restaurant POS (Point of Sale) data management process, facilitating seamless order handling, customer tracking, inventory management, and sales reporting. It retrieves order details, processes payment information, updates inventory, and generates real-time sales reports, all integrated into a centralized system that improves restaurant operations.\n\nThe workflow integrates various systems, including a POS terminal to gather order data, payment gateways to process transactions, inventory management tools to update stock, and reporting tools like Google Sheets or an internal database for generating sales and performance reports.\n\nWho Needs Restaurant POS Automation?  \nThis POS automation workflow is ideal for restaurant owners, managers, and staff looking to streamline their operations:\n\nRestaurant Owners – Automate order processing, track sales, and monitor inventory to ensure smooth operations.\n\nManagers – Access real-time sales data and performance reports to make informed decisions.\n\nStaff – Reduce manual work, focusing on providing better customer service while the system handles orders and payments.\n\nInventory Teams – Automatically update inventory levels based on orders and ingredient usage.\n\nIf you need a reliable and automated POS solution to manage restaurant orders, payments, inventory, and reporting, this workflow minimizes human error, boosts efficiency, and saves valuable time.\n\nWhy Use This Workflow?\n\nEnd-to-End Automation – Automates everything from order input to inventory updates and sales reporting.\n\nSeamless Integration – Connects POS, payment systems, inventory management, and reporting tools for smooth data flow.(if needed)\n\nReal-Time Data – Provides up-to-the-minute reports on sales, stock levels, and order statuses.\n\nScalable & Efficient – Supports multiple locations, multiple users, and high order volumes.\n\nStep-by-Step: How This Workflow Manages POS Data\n\nCollect Orders – Retrieves order details from the POS system, including customer information, ordered items, and payment details.\n\nUpdate Inventory – Decreases inventory levels based on sold items, ensuring stock counts are always accurate.\n\nGenerate Reports – Compiles sales, revenue, and inventory data into real-time reports and stores them in Google Sheets or an internal database.\n\nTrack Customer Data – Keeps a log of customer details and order history for better service and marketing insights.\n\nCustomization: Tailor to Your Needs\n\nMultiple POS Systems – Adapt the workflow to work with different POS systems or terminals based on your restaurant setup.\n\nCustom Reporting – Modify the reporting format or include specific sales metrics (e.g., daily totals, best-selling items, employee performance).\n\nInventory Management – Adjust inventory updates to include alerts when stock reaches critical levels or needs reordering.\n\nIntegration with Accounting Software – Connect with platforms like QuickBooks for automated financial tracking.\n\n🔑 Prerequisites\n\nPOS System Integration – Ensure the POS system can export order data in a compatible format.\n\nPayment Gateway API – Set up the necessary API keys for payment processing (e.g., Stripe, PayPal).\n\nInventory Management Tools – Use inventory software or databases that can automatically update stock levels.\n\nReporting Tools – Use Google Sheets or an internal database to store and generate sales and inventory reports.\n\n🚀 Installation & Setup\n\nConfigure Credentials\n\nSet up API credentials for payment gateways and inventory management tools.\n\nImport Workflow\n\nImport the workflow into your automation platform (e.g., n8n, Zapier).\n\nLink POS system, payment gateway, and inventory management systems.\n\nTest & Run\n\nProcess a test order to ensure that data flows correctly through each step.\n\nVerify that inventory updates and reports are generated as expected.\n\n⚠ Important\n\nData Privacy – Ensure compliance with data protection regulations (e.g., GDPR, PCI DSS) when handling customer payment and order data.\n\nSystem Downtime – Monitor system performance to ensure that the workflow runs without disruptions during peak hours.\n\nSummary  \nThis restaurant POS automation workflow integrates order management, payment processing, inventory updates, and real-time reporting, enabling efficient restaurant operations. Whether you are running a single location or a chain of restaurants, this solution streamlines daily tasks, reduces errors, and provides valuable insights, saving time and improving customer satisfaction. 🚀\n",
  "crawled_at": "2025-05-26T06:04:12.063636",
  "readme_zh": "该工作流实现了餐厅POS（销售终端）数据管理流程的自动化，无缝衔接订单处理、顾客追踪、库存管理与销售报表生成。系统自动获取订单详情、处理支付信息、更新库存并生成实时销售报告，所有功能集成于统一平台，全面优化餐厅运营。\n\n工作流整合多套系统：通过POS终端采集订单数据，对接支付网关完成交易，联动库存管理工具更新存货，并借助Google表格或内部数据库等报表工具生成销售绩效分析。\n\n适用对象  \n本自动化方案专为希望提升运营效率的餐厅经营者设计：\n\n业主端——自动化订单处理，实时掌握销售动态与库存状况  \n管理层——获取实时销售数据与绩效报表辅助决策  \n服务人员——减少手工操作，专注提升顾客体验  \n仓储团队——根据订单及原料消耗自动更新库存  \n\n若您需要一套可靠的自动化POS解决方案来管理订单、支付、库存及报表，本工作流将有效减少人为失误，提升运营效率，节省宝贵时间。\n\n核心优势\n\n全流程自动化——从订单录入到库存更新、报表生成全程自动处理  \n无缝集成——联通POS系统、支付渠道、库存管理与报表工具（按需配置）  \n实时数据——提供销售、库存及订单状态的最新动态  \n弹性扩展——支持多门店、多用户及高并发订单处理  \n\n工作流执行步骤\n\n1. 订单采集——从POS系统提取顾客信息、点单明细及支付数据  \n2. 库存更新——根据售出商品自动扣减库存，确保数据精准  \n3. 报表生成——汇总销售、营收及库存数据至Google表格或内部数据库  \n4. 顾客追踪——记录客户信息及消费历史，优化服务与营销策略  \n\n定制化服务\n\n多POS系统适配——兼容各类POS终端设备  \n个性化报表——支持定制日报表、畅销品分析、员工业绩等维度  \n智能库存预警——设置库存阈值提醒及自动补货功能  \n财务系统对接——可集成QuickBooks等财务软件  \n\n🔑 前置要求\n\n• 支持数据导出的POS系统  \n• 支付网关API密钥（如Stripe、PayPal）  \n• 可自动更新的库存管理工具  \n• Google表格或数据库等报表存储方案  \n\n🚀 部署指南\n\n1. 凭证配置  \n   设置支付网关与库存系统的API密钥  \n2. 工作流导入  \n   将流程部署至自动化平台（如n8n、Zapier）  \n   对接POS系统、支付网关及库存管理模块  \n3. 测试验证  \n   通过测试订单验证全流程数据准确性  \n   确认库存更新与报表生成功能正常  \n\n⚠ 注意事项\n\n• 严格遵守GDPR、PCI DSS等数据隐私法规  \n• 高峰时段需监控系统稳定性  \n\n方案价值  \n本自动化工作流通过整合订单管理、支付处理、库存更新与实时报表功能，显著提升餐厅运营效率。无论单体门店还是连锁集团，均可通过该方案优化日常作业、降低差错率、获取商业洞察，在节省时间成本的同时提升顾客满意度。🚀",
  "title_zh": "基于GPT-4o的AI餐厅点餐聊天机器人（支持POS系统集成）",
  "publish_date_zh": "上次更新于5天前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"d73282515b90623d4a8783919a2d772c706425d649e1512792f37ac51e07e4a8\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"62b3c7cb-1993-44f1-8b86-38a34ca1d029\",\n      \"name\": \"Information Extractor\",\n      \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\",\n      \"position\": [\n        -200,\n        500\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.query }}\",\n        \"options\": {},\n        \"schemaType\": \"fromJson\",\n        \"jsonSchemaExample\": \"{\\n  \\\"name\\\": \\\"Information Extractor\\\",\\n  \\\"type\\\": \\\"n8n-nodes-base.informationExtractor\\\",\\n  \\\"parameters\\\": {\\n    \\\"extract\\\": [\\n      {\\n        \\\"name\\\": \\\"items\\\",\\n        \\\"pattern\\\": \\\"(latte|coffee|tea|cappuccino)\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"quantity\\\",\\n        \\\"pattern\\\": \\\"\\\\\\\\d+\\\"\\n      },\\n      {\\n        \\\"name\\\": \\\"table\\\",\\n        \\\"pattern\\\": \\\"table number (\\\\\\\\d+)\\\"\\n      }\\n    ]\\n  }\\n}\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"75883f27-af58-4791-9e1a-a70b83e1cead\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -180,\n        740\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"OizdHUANhz9NIHyd\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"aeefdd4b-bf7d-4824-97d8-0afc356fb7d6\",\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        120,\n        540\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"8a5dda0c-a567-4305-83a3-68d6fb573dd3\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"empty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.output.parameters.extract }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"9e3f8a1b-ccd8-4f4d-91cb-b99cc46f412f\",\n      \"name\": \"Google Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        840,\n        420\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"Item\": \"={{ $json.item }}\",\n            \"Quantity\": \"={{ $json.quantity }}\",\n            \"Table No\": \"={{ $json.table }}\",\n            \"Timestamp\": \"={{ $now }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"Timestamp\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Timestamp\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Table No\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Table No\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Item\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Item\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Quantity\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Quantity\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/16fXaxEcfnq_-oif9tp94-3uTeHSFWoSnuBPNTljuW-k/edit#gid=0\",\n          \"cachedResultName\": \"Order log\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"https://docs.google.com/spreadsheets/d/16fXaxEcfnq_-oif9tp94-3uTeHSFWoSnuBPNTljuW-k/edit?usp=sharing\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"0RSJGMBcFzxY9GkS\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"4cc1818f-1585-42e1-a111-7b55557aebcb\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        380,\n        560\n      ],\n      \"parameters\": {\n        \"language\": \"python\",\n        \"pythonCode\": \"# Input from n8n\\ninput_data = items\\n\\n# Get the extracted list\\nextract_data = input_data[0].get('json', {}).get('output', {}).get('parameters', {}).get('extract', [])\\n\\n# Prepare variables\\norder_items = []\\ntable_number = None\\n\\n# Separate entries by type\\nitems_list = []\\nquantities = []\\n\\n# Parse all entries\\nfor entry in extract_data:\\n    if entry['name'] == 'table number':\\n        table_number = entry['pattern']\\n    elif entry['name'] == 'item':\\n        items_list.append(entry['pattern'])\\n    elif entry['name'] == 'quantity':\\n        quantities.append(int(entry['pattern']))\\n\\n# Pair items and quantities\\nfor i in range(len(items_list)):\\n    item_data = {\\n        'item': items_list[i],\\n        'quantity': quantities[i] if i < len(quantities) else None,\\n        'table': table_number\\n    }\\n    order_items.append(item_data)\\n\\n# Set final output\\noutput = [{'json': item} for item in order_items]\\n\\nreturn output\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a92d2745-148b-4e2a-b8f7-82d3993ff34f\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        620,\n        500\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"aea89e6c-37a9-4859-adc8-b7e449701503\",\n      \"name\": \"Replace Me\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        800,\n        660\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b31dba52-b27e-4267-be32-a7730b4d08a8\",\n      \"name\": \"No Operation, do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        440,\n        400\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d7f9a381-6bc2-44d0-81ac-6e0fbe77d70a\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -260,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 340,\n        \"height\": 680,\n        \"content\": \"## JSON解析器\\n\\n1. 将文本数据按以下最终格式转换为JSON：\\n   商品名称\\n   数量\\n   以及桌号\\n\\n2. 如果数据不包含上述内容，则返回null。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"acc7a528-f767-4576-b08d-6fc386f57648\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 460,\n        \"height\": 680,\n        \"content\": \"## 将JSON数据精炼/拆分为多个条目\\n\\n若前一项数据不为空，自定义代码块会将数据拆分成列表中的多个JSON条目。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"857a3102-f5e1-4db5-afb4-154544414701\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        580,\n        220\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 440,\n        \"height\": 680,\n        \"content\": \"## 将每个项目作为记录发送到谷歌表格\\n\\n\\n**每个项目经过循环处理，生成一个包含单个项目的批次，并附带时间戳作为新行添加到表格中。**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a1ff2b0f-0b48-4ea2-8121-4e2d72197ef7\",\n      \"name\": \"Triggered on Restaurant Chat workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -440,\n        500\n      ],\n      \"parameters\": {\n        \"inputSource\": \"passthrough\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8689b773-a1c4-4de4-a66e-fab8c9eb6244\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -140,\n        -280\n      ],\n      \"webhookId\": \"d931c4a7-02f5-4359-918f-7ad3fae7b144\",\n      \"parameters\": {\n        \"public\": true,\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"de310ce2-3868-4a0f-aa9b-38253e75dbda\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        100,\n        -260\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"systemMessage\": \"\\n\\nYou are a polite and efficient restaurant assistant.\\n\\nYour job is to take customer orders, verify the order details, correct any mistakes, and confirm the order.\\n\\nFollow these steps:\\n\\nGreeting and Asking for the Order\\n\\nIf the customer greets you (e.g., \\\"Hello\\\", \\\"Hi\\\", \\\"Good evening\\\"), respond with:\\n\\n\\\"Hello! How can I assist you today? What would you like to order?\\\"\\n\\nOrder Parsing and Understanding\\n\\nAccept orders in flexible formats, such as:\\n\\n\\\"1 latte, 2 coffee, table number 5\\\"\\n\\n\\\"latte 2, pepsi 1, table 3\\\"\\n\\n\\\"1 cappucino\\\"\\n\\n\\\"1 tea table no 4\\\"\\n\\nYour goal is to extract the following:\\n\\nItem names (e.g., latte, coffee, chocolate, tea, pepsi)\\n\\nQuantities (must be numeric)\\n\\nTable number (must be numeric)\\n\\nVerify and Handle Missing or Incorrect Information\\n\\nFor each item in the order:\\n\\nIf the item name is missing, respond:\\n\\\"Sorry, the item name is missing. What would you like to order?\\\"\\n\\nIf the quantity is missing, respond:\\n\\\"How many [item] would you like?\\\"\\n\\nIf the table number is missing, respond:\\n\\\"Could you please provide a table number?\\\"\\n\\nIf there are spelling mistakes in the item name, suggest corrections. Example:\\n\\\"Did you mean chocolate instead of chocolat? Please confirm.\\\"\\n\\nUse fuzzy matching to detect common variations and typos.\\n\\nFinal Confirmation\\n\\nOnce all necessary details are collected, present an order summary like this:\\n\\nHere’s your order summary:\\n\\n1 latte\\n\\n2 coffee\\n\\nTable number: 5\\nShall I confirm this order?\\n\\nOn Confirmation: Use the Tool\\n\\nWhen the user confirms, use the tool ConfirmOrder to send the final confirmation message as plain text in this format:\\n\\nThank you for confirming! Your order will be prepared shortly. Enjoy your time with us!\\n\\nOrder details are following:\\nitem quantity\\nlatte 1\\ncoffee 2\\n\\nAdded to table number 5\\n\\nEnsure numeric values (quantities and table numbers) are correctly extracted, even if they appear at the start or end. Always confirm with the user if there is any uncertainty.\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n        }\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"9dda45ee-0a92-448c-8a7e-8daa99282cda\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -20,\n        20\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {\n          \"responseFormat\": \"text\"\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"OizdHUANhz9NIHyd\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"0c0189d5-8fb4-4679-b2e2-221a3e2a4c88\",\n      \"name\": \"Call n8n Workflow Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        360,\n        20\n      ],\n      \"parameters\": {\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"wgaJ0eJQtYA8oKSC\",\n          \"cachedResultName\": \"Restaurant POS workflow\"\n        },\n        \"description\": \"This tool sends the text output generated by the AI Agent node to another n8n workflow for additional handling or automation.\",\n        \"workflowInputs\": {\n          \"value\": {},\n          \"schema\": [],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"9292db7f-6ffc-486e-b31a-bcbd6ef7ab98\",\n      \"name\": \"Last 5 conversations Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        140,\n        40\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"2782d5b6-d33b-4c89-ac79-90bf380f0828\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        60,\n        -380\n      ],\n      \"parameters\": {\n        \"width\": 340,\n        \"height\": 300,\n        \"content\": \"## 餐厅点餐聊天机器人\\n** 该机器人与用户对话，并在另一工作流程中为POS系统完善订单细节。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7c298718-e9e3-40d3-a612-94c578bd3100\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        500,\n        -20\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"content\": \"## 调用子工作流\\n它将数据传递给子工作流以进行进一步处理\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"If\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"No Operation, do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Replace Me\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Replace Me\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Information Extractor\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Information Extractor\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Call n8n Workflow Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Last 5 conversations Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Triggered on Restaurant Chat workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Information Extractor\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}