{
  "url": "https://n8n.io/workflows/3970-secure-api-endpoint-with-bearer-token-authentication-and-field-validation/",
  "title": "Secure API Endpoint with Bearer Token Authentication and Field Validation",
  "author": "Audun",
  "publish_date": "Last update 12 days ago",
  "publish_date_absolute": "2025-05-14",
  "categories": [
    {
      "name": "Engineering"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"dfb8aefc80b77b230bd90d6a6e5210eb7a28e6e1d2a8b1d27d54942b54eb9e7a\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"4f42007b-3813-410f-a608-5af89459b14f\",\"name\":\"Check Authorization Header\",\"type\":\"n8n-nodes-base.if\",\"position\":[-20,20],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $('Webhook').item.json.headers.authorization }}\",\"value2\":\"=Bearer {{ $json.config.bearerToken }}\"}]}},\"typeVersion\":1},{\"id\":\"86d6157e-593d-4370-a480-1a9417300555\",\"name\":\"401 Unauthorized\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[340,280],\"parameters\":{\"options\":{\"responseCode\":401},\"respondWith\":\"json\",\"responseBody\":\"{\\n  \\\"code\\\": 401,\\n  \\\"message\\\": \\\"Unauthorized: Missing or invalid authorization token.\\\",\\n  \\\"hint\\\": \\\"Ensure the request includes a valid 'Authorization' header (e.g., 'Bearer YOUR_SECRET_TOKEN').\\\"\\n}\"},\"typeVersion\":1},{\"id\":\"0831093a-adef-41dc-8ac0-2e1998fc22ad\",\"name\":\"200 OK\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[1140,20],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"b4f42651-c7f6-43a3-a695-7d5197b45642\",\"name\":\"Configuration\",\"type\":\"n8n-nodes-base.set\",\"position\":[-300,20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"4c35898d-5a70-41bc-9fb6-9d63bbbee222\",\"name\":\"config.bearerToken\",\"type\":\"string\",\"value\":\"123\"},{\"id\":\"822739a6-15da-48df-8f92-c4b1adce5fef\",\"name\":\"config.requiredFields.message\",\"type\":\"string\",\"value\":\"true\"}]}},\"typeVersion\":3.4},{\"id\":\"f1539109-8585-4cf2-9b9b-f3012544ac6c\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-580,20],\"webhookId\":\"2c5b9b70-1b08-44b1-a007-dc3d9f7e70db\",\"parameters\":{\"path\":\"secure-webhook\",\"options\":{},\"httpMethod\":\"POST\",\"responseMode\":\"responseNode\"},\"typeVersion\":1},{\"id\":\"bcf1183c-9a3d-41eb-89f7-1666d3a6c5fc\",\"name\":\"Has required fields?\",\"type\":\"n8n-nodes-base.code\",\"position\":[220,20],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"if(! $json.config.requiredFields) {\\n  return { json: { valid: true } };\\n}\\n\\nconst body = $('Webhook').first().json.body;\\n\\nlet requiredFields = $json.config.requiredFields;\\n\\nfor (let [key, value] of Object.entries(requiredFields)) {\\n  console.log(`${key}: ${value}`);\\n  if (!(key in body)) {\\n    return { json: { valid: false } };\\n  }\\n}\\n\\nreturn { json: { valid: true } };\"},\"typeVersion\":2},{\"id\":\"81b125f1-faa0-4998-8624-431746052a84\",\"name\":\"Check Valid Request\",\"type\":\"n8n-nodes-base.if\",\"position\":[440,20],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"8c7fe174-f284-4e41-b851-8939f0c2d19f\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ $json.valid }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"906c671d-e2a6-4a9e-b7df-d7b9142ffeb4\",\"name\":\"400 Bad Request\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[780,280],\"parameters\":{\"options\":{\"responseCode\":401},\"respondWith\":\"json\",\"responseBody\":\"{\\n  \\\"code\\\": 400,\\n  \\\"message\\\": \\\"Bad Request: Missing required fields\\\",\\n  \\\"hint\\\": \\\"Make sure all required fields are included in the request body.\\\"\\n}\"},\"typeVersion\":1},{\"id\":\"ce657170-34e4-4b40-ba22-bb4638fa98c6\",\"name\":\"Create Response\",\"type\":\"n8n-nodes-base.set\",\"position\":[920,20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"c6258b81-6f40-4dd5-8a60-89e2b0322490\",\"name\":\"message\",\"type\":\"string\",\"value\":\"Success! Workflow completed.\"}]}},\"typeVersion\":3.4},{\"id\":\"0a6b9f12-9b60-458e-85de-014a66063e50\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-440,-280],\"parameters\":{\"color\":6,\"width\":360,\"height\":460,\"content\":\"### üõ†Ô∏è Config Node Setup\\n\\n*This node defines the configuration for the secure webhook.*\\n\\n- `config.bearerToken`: The expected Bearer token for authentication.\\n\\n- `config.requiredFields`: Set one key for each required field in the incoming request body (e.g., `config.requiredFields.message`.\\n*üëâ The value doesn't matter, only the keys are checked.*\"},\"typeVersion\":1},{\"id\":\"bba24ba5-3c8d-40f7-99e0-44115b1025e0\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-440,200],\"parameters\":{\"color\":3,\"width\":1740,\"height\":240,\"content\":\"### üö´ Error Handling Nodes\\n\\n*These nodes return standardized JSON error responses:*\\n\\n- üîí `401 Unauthorized`:\\nTriggered when the request is missing a valid Bearer token.\\n\\n- üì≠ `400 Bad Request`:\\nTriggered when required fields are missing from the request body.\"},\"typeVersion\":1},{\"id\":\"f451c9be-4cfb-4628-8aa7-66b66ad86bab\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[840,-280],\"parameters\":{\"color\":4,\"width\":460,\"height\":460,\"content\":\"### ‚úÖ Set & 200 Response Nodes\\n\\n- üß± `Create Response`\\nBuilds the JSON response from the incoming request.\\nUse this to extract, transform, or forward specific values (e.g., message, sender, etc.).\\n\\n- üì¨ `200 OK`\\nReturns a successful response using values from the `Create Response` node.\"},\"typeVersion\":1},{\"id\":\"8d4e8406-c3fe-4e8a-bfa8-18407fe5e67a\",\"name\":\"Add workflow nodes here\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[680,20],\"parameters\":{},\"typeVersion\":1},{\"id\":\"f3f461a6-dc48-42cd-ac75-d045795006d0\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[160,-280],\"parameters\":{\"color\":7,\"width\":440,\"height\":460,\"content\":\"### üîç Required Fields Validator\\n\\n*This Code node checks if all fields defined in config.requiredFields are present in the incoming request body.*\\n\\n- Reads the body from the Webhook node.\\n\\n- Loops through each key in config.requiredFields.\\n\\n- Returns `{ valid: true }` if all are present, otherwise `{ valid: false }`.\"},\"typeVersion\":1},{\"id\":\"2766dae8-8def-462f-a53c-0f51606eea0a\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1220,-340],\"parameters\":{\"color\":5,\"width\":760,\"height\":780,\"content\":\"## üîê Secure Webhook ‚Äì Summary\\n\\n*This workflow protects a public webhook with **authentication** and **payload validation**.*\\n\\n\\n---\\n\\n#### üß© Why use it?\\n- ‚úÖ Ensure only trusted clients can call your workflow (via Bearer token).\\n- ‚úÖ Validate that all expected fields are present in the request body.\\n- ‚úÖ Return helpful and consistent JSON responses (`200`, `400`, `401`).\\n\\n---\\n\\n#### ‚öôÔ∏è How it works:\\n1. **`Webhook`** ‚Äì Entry point for external `POST` requests.\\n2. **`Configuration`** ‚Äì Defines `config.bearerToken` and `config.requiredFields`.\\n3. **`Check Authorization Header`** ‚Äì Compares incoming Bearer token with config.\\n4. **`401 Unauthorized`** ‚Äì Returned if the token is missing or incorrect.\\n5. **`Has required fields?`** ‚Äì JS code checks for required fields in the request body.\\n6. **`400 Bad Request`** ‚Äì Returned if any required field is missing.\\n7. **`Create Response` & `200 OK`** ‚Äì Returns a custom success message.\\n\\n---\\n\\n#### üõ† Setup Instructions:\\n- Set your desired Bearer token in `config.bearerToken`.\\n- For each required field, set a key in `config.requiredFields`  \\n  *(e.g., `config.requiredFields.message)*.\\n*üëâ The value doesn't matter, only the keys are checked.*\\n- Replace the **`Add workflow nodes here`** node with your own workflow logic.\\n- Edit the `Create Response` node to build your response.\\n\\n---\\n\\nüìå *Great for building secure, reusable webhook endpoints for APIs, forms, or 3rd-party services.*\"},\"typeVersion\":1},{\"id\":\"70c8f060-587a-4524-ab32-7362cc0c4cf9\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1220,-600],\"parameters\":{\"color\":6,\"width\":760,\"height\":240,\"content\":\"## Support My Work! ‚ù§Ô∏è\\n\\n**üëã Hello! I'm Audun / xqus** \\nüîó My work: [xqus.com](https://xqus.com)\\n\\nIf my n8n workflows saved you time or sparked ideas, [consider sending a little support](https://donate.stripe.com/9AQ6ps6Kna3t8Vi28b) my way. It helps me keep building cool stuff ‚Äî and maybe grab a coffee ‚òï along the way!\\n\\n-Thanks a lot! üôå\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"200 OK\":{\"main\":[[]]},\"Webhook\":{\"main\":[[{\"node\":\"Configuration\",\"type\":\"main\",\"index\":0}]]},\"Configuration\":{\"main\":[[{\"node\":\"Check Authorization Header\",\"type\":\"main\",\"index\":0}]]},\"Create Response\":{\"main\":[[{\"node\":\"200 OK\",\"type\":\"main\",\"index\":0}]]},\"Check Valid Request\":{\"main\":[[{\"node\":\"Add workflow nodes here\",\"type\":\"main\",\"index\":0}],[{\"node\":\"400 Bad Request\",\"type\":\"main\",\"index\":0}]]},\"Has required fields?\":{\"main\":[[{\"node\":\"Check Valid Request\",\"type\":\"main\",\"index\":0}]]},\"Add workflow nodes here\":{\"main\":[[{\"node\":\"Create Response\",\"type\":\"main\",\"index\":0}]]},\"Check Authorization Header\":{\"main\":[[{\"node\":\"Has required fields?\",\"type\":\"main\",\"index\":0}],[{\"node\":\"401 Unauthorized\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "A reusable and production-ready n8n workflow that secures public webhooks using **Bearer Token authentication** and **dynamic request validation**.\n\n* * *\n\n## ‚ú® What It Does\n\n  * **Verifies Bearer Token**  \nCompares the `Authorization` header with a configured secret token.\n\n  * **Validates Required Fields**  \nChecks that all expected fields are present in the incoming request body.\n\n  * **Returns Standardized JSON Responses**\n\n    * `401 Unauthorized` if token is missing or invalid\n    * `400 Bad Request` if required fields are missing\n    * `200 OK` with a custom success payload\n\n\n\n* * *\n\n## üë§ Who It‚Äôs For\n\n  * Developers exposing n8n workflows as APIs\n  * No-code/low-code builders integrating with external forms or tools\n  * Anyone needing simple authentication and validation on incoming webhooks\n\n\n\n* * *\n\n## üí° Why Use It\n\n  * üîí **Secure** : Prevents unauthorized access to your public workflows\n  * üßº **Clean** : Centralized configuration for token and required fields\n  * ‚öôÔ∏è **Flexible** : Easy to extend and customize for any use case\n\n\n\n* * *\n\n## üõ† Setup Instructions\n\n  1. **Configure Values in the`Configuration` Node**\n\n     * Set your secret token:  \n`config.bearerToken = YOUR_TOKEN`\n     * Define required request fields by key:  \nExample:\n           \n           config.requiredFields.message = true;\n           config.requiredFields.email = true;\n           \n\n‚úÖ Only the **keys** matter ‚Äì values can be anything.\n  2. **Plug in Your Business Logic**  \nReplace the `\"Add workflow nodes here\"` with your own logic.\n\n  3. **Customize the Success Response**  \nEdit the `Create Response` node to shape your success payload.\n\n\n\n\n* * *\n\n## üß™ Use Cases\n\n  * Securing public form submissions\n  * Creating internal API endpoints\n  * Validating data from external services\n\n\n\n* * *\n\nüìå _Use this as a base for building secure, API-style workflows in n8n._\n\n* * *\n\n**üëã Hello! I'm[Audun / xqus](https://xqus.com)**\n\nIf my n8n workflows saved you time or sparked ideas, [consider sending a little support](https://donate.stripe.com/9AQ6ps6Kna3t8Vi28b) my way. It helps me keep building cool stuff ‚Äî and maybe grab a coffee ‚òï along the way!\n",
  "crawled_at": "2025-05-26T06:09:17.171031",
  "readme_zh": "‰∏Ä‰∏™ÂèØÂ§çÁî®‰∏îÂèØÁõ¥Êé•ÊäïÂÖ•Áîü‰∫ßÁöÑn8nÂ∑•‰ΩúÊµÅÔºåÈÄöËøá**Bearer TokenËÆ§ËØÅ**Âíå**Âä®ÊÄÅËØ∑Ê±ÇÈ™åËØÅ**‰øùÊä§ÂÖ¨ÂÖ±WebhookÂÆâÂÖ®„ÄÇ\n\n* * *\n\n## ‚ú® ÂäüËÉΩ‰∫ÆÁÇπ\n\n  * **È™åËØÅBearer Token**  \nÊØîÂØπ`Authorization`ËØ∑Ê±ÇÂ§¥‰∏éÈÖçÁΩÆÁöÑÂØÜÈí•‰ª§Áâå\n\n  * **Ê†°È™åÂøÖÂ°´Â≠óÊÆµ**  \nÊ£ÄÊü•ËØ∑Ê±Ç‰Ωì‰∏≠ÊòØÂê¶ÂåÖÂê´ÊâÄÊúâÈ¢ÑÊúüÂ≠óÊÆµ\n\n  * **ËøîÂõûÊ†áÂáÜÂåñJSONÂìçÂ∫î**\n\n    * ‰ª§ÁâåÁº∫Â§±ÊàñÊó†ÊïàÊó∂ËøîÂõû`401 Unauthorized`\n    * ÂøÖÂ°´Â≠óÊÆµÁº∫Â§±Êó∂ËøîÂõû`400 Bad Request`\n    * ÊàêÂäüÊó∂ËøîÂõûÂê´Ëá™ÂÆö‰πâÂÜÖÂÆπÁöÑ`200 OK`ÂìçÂ∫î",
  "title_zh": "‰ΩøÁî®ÊâøËΩΩ‰ª§ÁâåËÆ§ËØÅÂíåÂ≠óÊÆµÈ™åËØÅ‰øùÊä§APIÁ´ØÁÇπ",
  "publish_date_zh": "ÊúÄËøëÊõ¥Êñ∞‰∫é‰∏ÄÂ§©Ââç",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"dfb8aefc80b77b230bd90d6a6e5210eb7a28e6e1d2a8b1d27d54942b54eb9e7a\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"4f42007b-3813-410f-a608-5af89459b14f\",\n      \"name\": \"Check Authorization Header\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -20,\n        20\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $('Webhook').item.json.headers.authorization }}\",\n              \"value2\": \"=Bearer {{ $json.config.bearerToken }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"86d6157e-593d-4370-a480-1a9417300555\",\n      \"name\": \"401 Unauthorized\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        340,\n        280\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 401\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"code\\\": 401,\\n  \\\"message\\\": \\\"Unauthorized: Missing or invalid authorization token.\\\",\\n  \\\"hint\\\": \\\"Ensure the request includes a valid 'Authorization' header (e.g., 'Bearer YOUR_SECRET_TOKEN').\\\"\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0831093a-adef-41dc-8ac0-2e1998fc22ad\",\n      \"name\": \"200 OK\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1140,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b4f42651-c7f6-43a3-a695-7d5197b45642\",\n      \"name\": \"Configuration\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -300,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"4c35898d-5a70-41bc-9fb6-9d63bbbee222\",\n              \"name\": \"config.bearerToken\",\n              \"type\": \"string\",\n              \"value\": \"123\"\n            },\n            {\n              \"id\": \"822739a6-15da-48df-8f92-c4b1adce5fef\",\n              \"name\": \"config.requiredFields.message\",\n              \"type\": \"string\",\n              \"value\": \"true\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"f1539109-8585-4cf2-9b9b-f3012544ac6c\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -580,\n        20\n      ],\n      \"webhookId\": \"2c5b9b70-1b08-44b1-a007-dc3d9f7e70db\",\n      \"parameters\": {\n        \"path\": \"secure-webhook\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bcf1183c-9a3d-41eb-89f7-1666d3a6c5fc\",\n      \"name\": \"Has required fields?\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        220,\n        20\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"if(! $json.config.requiredFields) {\\n  return { json: { valid: true } };\\n}\\n\\nconst body = $('Webhook').first().json.body;\\n\\nlet requiredFields = $json.config.requiredFields;\\n\\nfor (let [key, value] of Object.entries(requiredFields)) {\\n  console.log(`${key}: ${value}`);\\n  if (!(key in body)) {\\n    return { json: { valid: false } };\\n  }\\n}\\n\\nreturn { json: { valid: true } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"81b125f1-faa0-4998-8624-431746052a84\",\n      \"name\": \"Check Valid Request\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        440,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"8c7fe174-f284-4e41-b851-8939f0c2d19f\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.valid }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"906c671d-e2a6-4a9e-b7df-d7b9142ffeb4\",\n      \"name\": \"400 Bad Request\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        780,\n        280\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 401\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"code\\\": 400,\\n  \\\"message\\\": \\\"Bad Request: Missing required fields\\\",\\n  \\\"hint\\\": \\\"Make sure all required fields are included in the request body.\\\"\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ce657170-34e4-4b40-ba22-bb4638fa98c6\",\n      \"name\": \"Create Response\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c6258b81-6f40-4dd5-8a60-89e2b0322490\",\n              \"name\": \"message\",\n              \"type\": \"string\",\n              \"value\": \"Success! Workflow completed.\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"0a6b9f12-9b60-458e-85de-014a66063e50\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 360,\n        \"height\": 460,\n        \"content\": \"### üõ†Ô∏è ÈÖçÁΩÆËäÇÁÇπËÆæÁΩÆ\\n\\n*Ê≠§ËäÇÁÇπÁî®‰∫éÂÆö‰πâÂÆâÂÖ®ÁΩëÁªúÈí©Â≠êÁöÑÈÖçÁΩÆ„ÄÇ*\\n\\n- `config.bearerToken`: Áî®‰∫éË∫´‰ªΩÈ™åËØÅÁöÑÈ¢ÑÊúüBearer‰ª§Áâå„ÄÇ\\n\\n- `config.requiredFields`: ‰∏∫ËØ∑Ê±Ç‰Ωì‰∏≠ÊØè‰∏™ÂøÖÂ°´Â≠óÊÆµËÆæÁΩÆ‰∏Ä‰∏™ÈîÆÔºà‰æãÂ¶Ç`config.requiredFields.message`Ôºâ„ÄÇ\\n*üëâ ÂÖ∑‰ΩìÂÄºÊó†ÂÖ≥Á¥ßË¶ÅÔºå‰ªÖÊ£ÄÊü•ÈîÆÂêçÊòØÂê¶Â≠òÂú®„ÄÇ*\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bba24ba5-3c8d-40f7-99e0-44115b1025e0\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        200\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 1740,\n        \"height\": 240,\n        \"content\": \"### üö´ ÈîôËØØÂ§ÑÁêÜËäÇÁÇπ\\n\\n*‰ª•‰∏ãËäÇÁÇπËøîÂõûÊ†áÂáÜÂåñÁöÑJSONÈîôËØØÂìçÂ∫îÔºö*\\n\\n- üîí `401 Êú™ÊéàÊùÉ`Ôºö\\nÂΩìËØ∑Ê±ÇÁº∫Â∞ëÊúâÊïàÁöÑBearer‰ª§ÁâåÊó∂Ëß¶Âèë„ÄÇ\\n\\n- üì≠ `400 ÈîôËØØËØ∑Ê±Ç`Ôºö\\nÂΩìËØ∑Ê±Ç‰Ωì‰∏≠Áº∫Â∞ëÂøÖÂ°´Â≠óÊÆµÊó∂Ëß¶Âèë„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f451c9be-4cfb-4628-8aa7-66b66ad86bab\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        840,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 460,\n        \"height\": 460,\n        \"content\": \"### ‚úÖ ËÆæÁΩÆ‰∏é200ÂìçÂ∫îËäÇÁÇπ\\n\\n- üß± `ÂàõÂª∫ÂìçÂ∫î`\\n‰ªé‰º†ÂÖ•ËØ∑Ê±ÇÊûÑÂª∫JSONÂìçÂ∫î„ÄÇ\\nÁî®‰∫éÊèêÂèñ„ÄÅËΩ¨Êç¢ÊàñËΩ¨ÂèëÁâπÂÆöÂÄºÔºàÂ¶ÇÊ∂àÊÅØ„ÄÅÂèëÈÄÅËÄÖÁ≠âÔºâ„ÄÇ\\n\\n- üì¨ `200 ÊàêÂäüÂìçÂ∫î`\\n‰ΩøÁî®`ÂàõÂª∫ÂìçÂ∫î`ËäÇÁÇπ‰∏≠ÁöÑÂÄºËøîÂõûÊàêÂäüÂìçÂ∫î„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d4e8406-c3fe-4e8a-bfa8-18407fe5e67a\",\n      \"name\": \"Add workflow nodes here\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        680,\n        20\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f3f461a6-dc48-42cd-ac75-d045795006d0\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        160,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 440,\n        \"height\": 460,\n        \"content\": \"### üîç ÂøÖÂ°´Â≠óÊÆµÈ™åËØÅÂô®\\n\\n*Ê≠§‰ª£Á†ÅËäÇÁÇπÁî®‰∫éÊ£ÄÊü•‰º†ÂÖ•ËØ∑Ê±Ç‰Ωì‰∏≠ÊòØÂê¶ÂåÖÂê´config.requiredFieldsÂÆö‰πâÁöÑÊâÄÊúâÂ≠óÊÆµ„ÄÇ*\\n\\n- ‰ªéWebhookËäÇÁÇπËØªÂèñËØ∑Ê±Ç‰Ωì„ÄÇ\\n\\n- ÈÅçÂéÜconfig.requiredFields‰∏≠ÁöÑÊØè‰∏™ÈîÆ„ÄÇ\\n\\n- Â¶ÇÊûúÊâÄÊúâÂ≠óÊÆµÈÉΩÂ≠òÂú®ÂàôËøîÂõû`{ valid: true }`ÔºåÂê¶ÂàôËøîÂõû`{ valid: false }`„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2766dae8-8def-462f-a53c-0f51606eea0a\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1220,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 760,\n        \"height\": 780,\n        \"content\": \"## üîê ÂÆâÂÖ®Webhook ‚Äì Ê¶ÇË¶Å\\n\\n*ËØ•Â∑•‰ΩúÊµÅÈÄöËøá**Ë∫´‰ªΩÈ™åËØÅ**Âíå**ËΩΩËç∑È™åËØÅ**‰øùÊä§ÂÖ¨ÂºÄÁöÑWebhookÊé•Âè£„ÄÇ*\\n\\n---\\n\\n#### üß© ‰ΩøÁî®Âú∫ÊôØ\\n- ‚úÖ ‰ªÖÂÖÅËÆ∏Âèó‰ø°ÂÆ¢Êà∑Á´ØË∞ÉÁî®Â∑•‰ΩúÊµÅÔºàÈÄöËøáBearer‰ª§ÁâåÈ™åËØÅÔºâ\\n- ‚úÖ Ê†°È™åËØ∑Ê±Ç‰ΩìÊòØÂê¶ÂåÖÂê´ÂÖ®ÈÉ®ÂøÖÂ°´Â≠óÊÆµ\\n- ‚úÖ ËøîÂõûÊ†áÂáÜÂåñJSONÂìçÂ∫îÔºà`200`„ÄÅ`400`„ÄÅ`401`Áä∂ÊÄÅÁ†ÅÔºâ\\n\\n---\\n\\n#### ‚öôÔ∏è Â∑•‰ΩúÂéüÁêÜÔºö\\n1. **`Webhook`** ‚Äì Êé•Êî∂Â§ñÈÉ®`POST`ËØ∑Ê±ÇÁöÑÂÖ•Âè£ËäÇÁÇπ\\n2. **`ÈÖçÁΩÆ`** ‚Äì ÂÆö‰πâ`config.bearerToken`Âíå`config.requiredFields`\\n3. **`Ê†°È™åÊéàÊùÉÂ§¥`** ‚Äì ÊØîÂØπËØ∑Ê±ÇÊê∫Â∏¶ÁöÑBearer‰ª§Áâå‰∏éÈÖçÁΩÆÂÄº\\n4. **`401Êú™ÊéàÊùÉ`** ‚Äì ‰ª§ÁâåÁº∫Â§±ÊàñÈîôËØØÊó∂ËøîÂõû\\n5. **`ÂøÖÂ°´Â≠óÊÆµÊ†°È™å`** ‚Äì ÈÄöËøáJS‰ª£Á†ÅÈ™åËØÅËØ∑Ê±Ç‰ΩìÂ≠óÊÆµÂÆåÊï¥ÊÄß\\n6. **`400ÈîôËØØËØ∑Ê±Ç`** ‚Äì Áº∫Â§±ÂøÖÂ°´Â≠óÊÆµÊó∂ËøîÂõû\\n7. **`ÊûÑÈÄ†ÂìçÂ∫î`‰∏é`200ÊàêÂäü`** ‚Äì ËøîÂõûËá™ÂÆö‰πâÊàêÂäüÊ∂àÊÅØ\\n\\n---\\n\\n#### üõ† ÈÖçÁΩÆËØ¥ÊòéÔºö\\n- Âú®`config.bearerToken`‰∏≠ËÆæÁΩÆ‰Ω†ÁöÑBearer‰ª§Áâå\\n- Âú®`config.requiredFields`‰∏≠ËÆæÁΩÆÂøÖÂ°´Â≠óÊÆµÈîÆÂêç  \\n  *(‰æãÂ¶Ç`config.requiredFields.message`)*\\n*üëâ Â≠óÊÆµÂÄº‰∏çÂΩ±ÂìçÊ†°È™åÔºå‰ªÖÊ£ÄÊü•ÈîÆÂêçÊòØÂê¶Â≠òÂú®*\\n- Â∞Ü**`Âú®Ê≠§Ê∑ªÂä†Â∑•‰ΩúÊµÅËäÇÁÇπ`**ÊõøÊç¢‰∏∫‰Ω†ÁöÑ‰∏öÂä°ÈÄªËæë\\n- ‰øÆÊîπ`ÊûÑÈÄ†ÂìçÂ∫î`ËäÇÁÇπÂÆöÂà∂ËøîÂõûÂÜÖÂÆπ\\n\\n---\\n\\nüìå *ÁâπÂà´ÈÄÇÁî®‰∫é‰∏∫API„ÄÅË°®ÂçïÊàñÁ¨¨‰∏âÊñπÊúçÂä°ÊûÑÂª∫ÂÆâÂÖ®ÂèØÂ§çÁî®ÁöÑWebhookÁ´ØÁÇπ*\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"70c8f060-587a-4524-ab32-7362cc0c4cf9\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1220,\n        -600\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 760,\n        \"height\": 240,\n        \"content\": \"## ÊîØÊåÅÊàëÁöÑÂàõ‰ΩúÔºÅ‚ù§Ô∏è  \\n\\n**üëã ‰Ω†Â•ΩÔºÅÊàëÊòØ Audun / xqus**  \\nüîó ÊàëÁöÑ‰ΩúÂìÅÔºö[xqus.com](https://xqus.com)  \\n\\nÂ¶ÇÊûúÊàëÁöÑ n8n Â∑•‰ΩúÊµÅ‰∏∫‰Ω†ËäÇÁúÅ‰∫ÜÊó∂Èó¥ÊàñÊøÄÂèë‰∫ÜÁÅµÊÑüÔºå[‰∏çÂ¶®Â∞èÂ∞èÊîØÊåÅ‰∏Ä‰∏ã](https://donate.stripe.com/9AQ6ps6Kna3t8Vi28b)„ÄÇ‰Ω†ÁöÑÊîØÊåÅËÉΩËÆ©ÊàëÁªßÁª≠ÊâìÈÄ†ÊúâË∂£ÁöÑ‰∏úË•ø‚Äî‚ÄîÈ°∫‰æøËøòËÉΩÂñùÊùØÂíñÂï°ÊèêÁ•û ‚òïÔºÅ  \\n\\n-Ë°∑ÂøÉÊÑüË∞¢ÔºÅüôå\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"200 OK\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Configuration\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Configuration\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Authorization Header\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create Response\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"200 OK\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Valid Request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add workflow nodes here\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"400 Bad Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Has required fields?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Valid Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add workflow nodes here\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Response\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Authorization Header\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Has required fields?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"401 Unauthorized\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}