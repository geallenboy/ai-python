{
  "url": "https://n8n.io/workflows/3799-interactive-knowledge-base-chat-with-supabase-rag-using-ai/",
  "title": "Interactive Knowledge Base Chat with Supabase RAG using AI 📚💬",
  "author": "Immanuel",
  "publish_date": "Last update 18 days ago",
  "publish_date_absolute": "2025-05-08",
  "categories": [
    {
      "name": "Support"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"6fZffoKqrzLAmbHc\",\"meta\":{\"instanceId\":\"3aaeb6eaba3494bbdbe57e25fa3d02783cfbc460b1e823f7b741cf26edc7ca3d\"},\"name\":\"Google Drive File Ingestion to Supabase for Knowledge Base\",\"tags\":[],\"nodes\":[{\"id\":\"eff80cb0-26e5-4a19-a4d6-671a11fe26b6\",\"name\":\"File Created\",\"type\":\"n8n-nodes-base.googleDriveTrigger\",\"position\":[-80,880],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a78ad8a2-93a9-4c71-8916-e6247d408d82\",\"name\":\"Update to File\",\"type\":\"n8n-nodes-base.googleDriveTrigger\",\"position\":[-80,680],\"parameters\":{},\"typeVersion\":1},{\"id\":\"f8a528ba-9638-4a32-a2e2-596c4a63da0c\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[140,780],\"parameters\":{},\"typeVersion\":3},{\"id\":\"bf8e763f-fff5-4fa4-a0ec-4b13bdeb498d\",\"name\":\"Set File ID\",\"type\":\"n8n-nodes-base.set\",\"position\":[360,640],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"47bc2891-8f9f-416d-b2ce-8fd656796348\",\"name\":\"Check for Duplicates\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[800,540],\"parameters\":{},\"typeVersion\":2.6,\"alwaysOutputData\":true},{\"id\":\"71dd64ed-9c40-4ef0-bf24-5243b2cff499\",\"name\":\"Insert Metadata\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[1900,740],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"6a66a187-30c1-46b0-830f-484add803b1d\",\"name\":\"Extract from File PDF\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[3000,180],\"parameters\":{},\"typeVersion\":1},{\"id\":\"ebc02b0a-0481-42e8-8043-e9bcd6c0f02e\",\"name\":\"Extract from CSV\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[2560,580],\"parameters\":{},\"typeVersion\":1},{\"id\":\"8bb13f35-03c3-413a-9dcc-1526f40325d3\",\"name\":\"Extract from XLSX\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[2560,980],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a598e49c-d9bc-4305-b917-ccc64feb4c68\",\"name\":\"Aggregate\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[2780,740],\"parameters\":{},\"typeVersion\":1},{\"id\":\"e1c0c059-66f5-4a1b-b76a-8db1823c25e1\",\"name\":\"Summarize\",\"type\":\"n8n-nodes-base.summarize\",\"position\":[3000,740],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"cb46dfca-96ce-478a-98cb-5c94fd48e104\",\"name\":\"Extract from RTF\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[3000,1160],\"parameters\":{},\"typeVersion\":1},{\"id\":\"9832240d-7cea-465e-b167-17fcf254f5f7\",\"name\":\"Error Logger\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[1240,1380],\"parameters\":{},\"typeVersion\":1},{\"id\":\"01b5f966-e5b7-436e-9551-c31f6b9d4eac\",\"name\":\"Validate File\",\"type\":\"n8n-nodes-base.if\",\"position\":[580,640],\"parameters\":{},\"typeVersion\":1},{\"id\":\"466e1cc8-25e7-462c-b19f-467c66eb1d77\",\"name\":\"IF Duplicate Check\",\"type\":\"n8n-nodes-base.if\",\"position\":[1020,540],\"parameters\":{},\"typeVersion\":2.2},{\"id\":\"0dd9891e-7dd3-4f2d-8a2e-094ab3cecec6\",\"name\":\"Log Duplicate\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[1240,440],\"parameters\":{},\"typeVersion\":1},{\"id\":\"7d05de17-7909-4da3-bba3-c7f512af1708\",\"name\":\"Supabase Vector Store\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreSupabase\",\"position\":[3240,440],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"a764be2e-110f-4320-8bae-f04a749a3ac5\",\"name\":\"Embeddings OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[3220,660],\"parameters\":{},\"typeVersion\":1.2},{\"id\":\"0ef91d4c-7d6b-4544-9ef5-09a0bdb6dd7c\",\"name\":\"Default Data Loader\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[3340,660],\"parameters\":{},\"typeVersion\":1},{\"id\":\"86c648a9-4b9d-4afb-9e2e-f4fff12a1ce0\",\"name\":\"Debug File ID\",\"type\":\"n8n-nodes-base.set\",\"position\":[1240,740],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"392916f3-2265-4c57-abfd-37054da9e741\",\"name\":\"Download File\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[2120,740],\"parameters\":{},\"typeVersion\":3},{\"id\":\"a7367c0f-6f22-4099-ac6c-8511081b79f6\",\"name\":\"Set Schema\",\"type\":\"n8n-nodes-base.set\",\"position\":[3360,1160],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"7051505f-4da8-44c0-90c4-c522d3a2f6d3\",\"name\":\"Schema Document Metadata\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[3600,1160],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"6f76fa9d-d1f9-4e05-80af-ec78fed5416c\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"position\":[2340,680],\"parameters\":{},\"typeVersion\":3.2},{\"id\":\"f62efcf8-bb87-4e4e-9c73-0c86ec1c55fd\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-120,-60],\"parameters\":{\"content\":\"\"},\"typeVersion\":1},{\"id\":\"82015f8b-1456-4b04-bf38-2735e7f416f6\",\"name\":\"Extract from DOC\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[3000,1360],\"parameters\":{},\"typeVersion\":1},{\"id\":\"7af0771c-bed1-4cbb-8122-01ec2d8b4664\",\"name\":\"Slack Duplicate Notification\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1460,440],\"webhookId\":\"b530b409-ce3a-44eb-9efc-ab091105fa54\",\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"a5ef8a35-ea86-466a-bb6b-2f3ef72acab7\",\"name\":\"Error Notification\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1460,1400],\"webhookId\":\"b530b409-ce3a-44eb-9efc-ab091105fa54\",\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"6ca4d2d7-536c-4229-ac19-39dcb0853c4c\",\"name\":\"Delete old Doc\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[1460,740],\"parameters\":{},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"98d0c000-5d9b-419b-aa7c-e98a9f0a90e2\",\"name\":\"Extract from TXT\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[3000,380],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a53ca5ed-b9f0-4f9e-bb55-017dc5ed1451\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1880,-40],\"parameters\":{\"content\":\"\"},\"typeVersion\":1},{\"id\":\"a1c76c00-0bed-48f0-ad8c-f686d5186222\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1620,-40],\"parameters\":{\"content\":\"\"},\"typeVersion\":1},{\"id\":\"71f8678a-ef8b-40ef-a3ef-3ee90afe65dc\",\"name\":\"RAG AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-880,700],\"parameters\":{},\"typeVersion\":1.8},{\"id\":\"7c7ebb71-1699-46a5-a756-cf2589815dc8\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-1460,1180],\"parameters\":{},\"typeVersion\":1.2},{\"id\":\"510482ba-030b-4777-9740-bf8993dce021\",\"name\":\"Postgres Chat Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\"position\":[-1280,1180],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"223791e6-5148-47cd-aab6-ca9cb20b7017\",\"name\":\"List Documents\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[-1060,1180],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"25cc4ca1-4910-4ae7-a755-c5611946c325\",\"name\":\"Query Document Rows\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[-620,1180],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"194c1ee8-1c21-4a1d-b8d2-9991dc8133fd\",\"name\":\"Character Text Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter\",\"position\":[3440,860],\"parameters\":{},\"typeVersion\":1},{\"id\":\"f311ab63-88fa-413a-8ba9-aa866e1fb5f0\",\"name\":\"Insert Table Rows\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[2780,940],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"529e05ca-0494-4eb3-b0f4-275ba252f646\",\"name\":\"Delete Old Data Rows\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[1680,740],\"parameters\":{},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"d1702791-fe65-4068-982b-8b378f9c2e0a\",\"name\":\"Set Error Type\",\"type\":\"n8n-nodes-base.set\",\"position\":[1020,1200],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"23a05be3-2b40-400b-b8d4-21ee6db78ac4\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-1440,720],\"webhookId\":\"db7e7558-fd4c-4743-b42c-d3b3a38e4d19\",\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"89262c14-2910-4a9d-b86a-84c015e0daa5\",\"name\":\"Edit Fields2\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1180,700],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"2325e26f-6237-4128-bead-17e0a9ccb50d\",\"name\":\"Supabase Vector Store2\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreSupabase\",\"position\":[-460,840],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"1289b037-7bc9-4d13-9516-328f1f781c14\",\"name\":\"Embeddings OpenAI2\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[-240,1060],\"parameters\":{},\"typeVersion\":1.2},{\"id\":\"3d15f7db-e7b7-4bb7-a5f7-9962f3a81051\",\"name\":\"Get Full Document Text - Get File Contents\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[-820,1180],\"parameters\":{},\"typeVersion\":2.6}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"0c6700ed-433f-46ca-8907-c2f4f94adfda\",\"connections\":{\"Switch\":{\"main\":[[{\"node\":\"Extract from File PDF\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from TXT\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from CSV\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from XLSX\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from RTF\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from DOC\",\"type\":\"main\",\"index\":0}]]},\"Aggregate\":{\"main\":[[{\"node\":\"Summarize\",\"type\":\"main\",\"index\":0}]]},\"Summarize\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0},{\"node\":\"Set Schema\",\"type\":\"main\",\"index\":0}]]},\"Set Schema\":{\"main\":[[{\"node\":\"Schema Document Metadata\",\"type\":\"main\",\"index\":0}]]},\"Set File ID\":{\"main\":[[{\"node\":\"Validate File\",\"type\":\"main\",\"index\":0}]]},\"Edit Fields2\":{\"main\":[[{\"node\":\"RAG AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Error Logger\":{\"main\":[[{\"node\":\"Error Notification\",\"type\":\"main\",\"index\":0}]]},\"File Created\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Debug File ID\":{\"main\":[[{\"node\":\"Delete old Doc\",\"type\":\"main\",\"index\":0}]]},\"Download File\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"Log Duplicate\":{\"main\":[[{\"node\":\"Slack Duplicate Notification\",\"type\":\"main\",\"index\":0}]]},\"Validate File\":{\"main\":[[{\"node\":\"Check for Duplicates\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Set Error Type\",\"type\":\"main\",\"index\":0}]]},\"Delete old Doc\":{\"main\":[[{\"node\":\"Delete Old Data Rows\",\"type\":\"main\",\"index\":0}]]},\"List Documents\":{\"ai_tool\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Set Error Type\":{\"main\":[[{\"node\":\"Error Logger\",\"type\":\"main\",\"index\":0}]]},\"Update to File\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Insert Metadata\":{\"main\":[[{\"node\":\"Download File\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items\":{\"main\":[[],[{\"node\":\"Set File ID\",\"type\":\"main\",\"index\":0}]]},\"Extract from CSV\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0},{\"node\":\"Insert Table Rows\",\"type\":\"main\",\"index\":0}]]},\"Extract from DOC\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Extract from RTF\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Extract from TXT\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Embeddings OpenAI\":{\"ai_embedding\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Extract from XLSX\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0},{\"node\":\"Insert Table Rows\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Embeddings OpenAI2\":{\"ai_embedding\":[[{\"node\":\"Supabase Vector Store2\",\"type\":\"ai_embedding\",\"index\":0}]]},\"IF Duplicate Check\":{\"main\":[[{\"node\":\"Log Duplicate\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Debug File ID\",\"type\":\"main\",\"index\":0}]]},\"Default Data Loader\":{\"ai_document\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"ai_document\",\"index\":0}]]},\"Query Document Rows\":{\"ai_tool\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Check for Duplicates\":{\"main\":[[{\"node\":\"IF Duplicate Check\",\"type\":\"main\",\"index\":0}]]},\"Delete Old Data Rows\":{\"main\":[[{\"node\":\"Insert Metadata\",\"type\":\"main\",\"index\":0}]]},\"Postgres Chat Memory\":{\"ai_memory\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Extract from File PDF\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Supabase Vector Store\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Supabase Vector Store2\":{\"ai_tool\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Character Text Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Default Data Loader\",\"type\":\"ai_textSplitter\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"Edit Fields2\",\"type\":\"main\",\"index\":0}]]},\"Get Full Document Text - Get File Contents\":{\"ai_tool\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]}}}",
  "readme": "# Google Drive File Ingestion to Supabase for Knowledge Base 📂💾\n\n## Overview 🌟\n\nThis n8n workflow automates the process of ingesting files from **Google Drive** into a **Supabase** database, preparing them for a knowledge base system. It supports **text-based files** (PDF, DOCX, TXT, etc.) and **tabular data** (XLSX, CSV, Google Sheets), extracting content, generating embeddings, and storing data in structured tables. This is a foundational workflow for building a **company knowledge base** that can be queried via a chat interface (e.g., using a RAG workflow). 🚀\n\n### Problem Solved 🎯\n\nManually managing a knowledge base with files from Google Drive is time-consuming and error-prone. This workflow solves that by:\n\n  * Automatically **ingesting files** from Google Drive as they are created or updated.\n  * **Extracting content** from various file types (text and tabular).\n  * Generating **embeddings** for text-based files to enable vector search.\n  * Storing data in **Supabase** for efficient retrieval.\n  * Handling **duplicates** and errors to ensure data consistency.\n\n\n\n**Target Audience** :\n\n  * **Knowledge Managers** : Build a centralized knowledge base from company files.\n  * **Data Teams** : Automate the ingestion of spreadsheets and documents.\n  * **Developers** : Integrate with other workflows (e.g., RAG for querying the knowledge base).\n\n\n\n## Workflow Description 🔍\n\nThis workflow listens for new or updated files in Google Drive, processes them based on their type, and stores the extracted data in Supabase tables for later retrieval. Here’s how it works:\n\n  1. **File Detection** : Triggers when a file is created or updated in Google Drive.\n  2. **File Processing** : Loops through each file, extracts metadata, and validates the file type.\n  3. **Duplicate Check** : Ensures the file hasn’t been processed before.\n  4. **Content Extraction** : \n     * **Text-based Files** : Downloads the file, extracts text, splits it into chunks, generates embeddings, and stores the chunks in Supabase.\n     * **Tabular Files** : Extracts data from spreadsheets and stores it as rows in Supabase.\n  5. **Metadata Storage** : Stores file metadata and basic info in Supabase tables.\n  6. **Error Handling** : Logs errors for unsupported formats or duplicates.\n\n\n\n## Nodes Breakdown 🛠️\n\n### 1\\. Detect New File 🔔\n\n  * **Type** : Google Drive Trigger\n  * **Purpose** : Triggers the workflow when a new file is created in Google Drive.\n  * **Configuration** : \n    * Credential: Google Drive OAuth2\n    * Event: `File Created`\n  * **Customization** : \n    * Specify a folder to monitor specific directories.\n\n\n\n### 2\\. Detect Updated File 🔔\n\n  * **Type** : Google Drive Trigger\n  * **Purpose** : Triggers the workflow when a file is updated in Google Drive.\n  * **Configuration** : \n    * Credential: Google Drive OAuth2\n    * Event: `File Updated`\n  * **Customization** : \n    * Currently disconnected; reconnect if updates need to be processed.\n\n\n\n### 3\\. Process Each File 🔄\n\n  * **Type** : Loop Over Items\n  * **Purpose** : Processes each file individually from the Google Drive trigger.\n  * **Configuration** : \n    * Input: `{{ $json.files }}`\n  * **Customization** : \n    * Adjust the batch size if processing multiple files at once.\n\n\n\n### 4\\. Extract File Metadata 🆔\n\n  * **Type** : Set\n  * **Purpose** : Extracts metadata like `file_id`, `file_name`, `mime_type`, and `web_view_link`.\n  * **Configuration** : \n    * Fields: \n      * `file_id`: `{{ $json.id }}`\n      * `file_name`: `{{ $json.name }}`\n      * `mime_type`: `{{ $json.mimeType }}`\n      * `web_view_link`: `{{ $json.webViewLink }}`\n  * **Customization** : \n    * Add more metadata fields if needed (e.g., `size`, `createdTime`).\n\n\n\n### 5\\. Check File Type ✅\n\n  * **Type** : IF\n  * **Purpose** : Validates the file type by checking the MIME type.\n  * **Configuration** : \n    * Condition: `mime_type` contains supported types (e.g., `application/pdf`, `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`).\n  * **Customization** : \n    * Add more supported MIME types as needed.\n\n\n\n### 6\\. Find Duplicates 🔍\n\n  * **Type** : Supabase\n  * **Purpose** : Checks if the file has already been processed by querying `knowledge_base`.\n  * **Configuration** : \n    * Operation: Select\n    * Table: `knowledge_base`\n    * Filter: `file_id = {{ $node['Extract File Metadata'].json.file_id }}`\n  * **Customization** : \n    * Add additional duplicate checks (e.g., by file name).\n\n\n\n### 7\\. Handle Duplicates 🔄\n\n  * **Type** : IF\n  * **Purpose** : Routes the workflow based on whether a duplicate is found.\n  * **Configuration** : \n    * Condition: `{{ $node['Find Duplicates'].json.length &gt; 0 }}`\n  * **Customization** : \n    * Add notifications for duplicates if desired.\n\n\n\n### 8\\. Remove Old Text Data 🗑️\n\n  * **Type** : Supabase\n  * **Purpose** : Deletes old text data from `documents` if the file is a duplicate.\n  * **Configuration** : \n    * Operation: Delete\n    * Table: `documents`\n    * Filter: `metadata-&gt;&gt;'file_id' = {{ $node['Extract File Metadata'].json.file_id }}`\n  * **Customization** : \n    * Add logging before deletion.\n\n\n\n### 9\\. Remove Old Data 🗑️\n\n  * **Type** : Supabase\n  * **Purpose** : Deletes old tabular data from `document_rows` if the file is a duplicate.\n  * **Configuration** : \n    * Operation: Delete\n    * Table: `document_rows`\n    * Filter: `dataset_id = {{ $node['Extract File Metadata'].json.file_id }}`\n  * **Customization** : \n    * Add logging before deletion.\n\n\n\n### 10\\. Route by File Type 🔀\n\n  * **Type** : Switch\n  * **Purpose** : Routes the workflow based on the file’s MIME type (text-based or tabular).\n  * **Configuration** : \n    * Rules: Based on `mime_type` (e.g., `application/pdf` for text, `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet` for tabular).\n  * **Customization** : \n    * Add more routes for additional file types.\n\n\n\n### 11\\. Download File Content 📥\n\n  * **Type** : Google Drive\n  * **Purpose** : Downloads the file content for text-based files.\n  * **Configuration** : \n    * Credential: Google Drive OAuth2\n    * File ID: `{{ $node['Extract File Metadata'].json.file_id }}`\n  * **Customization** : \n    * Add error handling for download failures.\n\n\n\n### 12\\. Extract PDF Text 📜\n\n  * **Type** : Extract from File (PDF)\n  * **Purpose** : Extracts text from PDF files.\n  * **Configuration** : \n    * File Content: `{{ $node['Download File Content'].binary.data }}`\n  * **Customization** : \n    * Adjust extraction settings for better accuracy.\n\n\n\n### 13\\. Extract DOCX Text 📜\n\n  * **Type** : Extract from File (DOCX)\n  * **Purpose** : Extracts text from DOCX files.\n  * **Configuration** : \n    * File Content: `{{ $node['Download File Content'].binary.data }}`\n  * **Customization** : \n    * Add support for other text formats (e.g., TXT, RTF).\n\n\n\n### 14\\. Extract XLSX Data 📊\n\n  * **Type** : Extract from File (XLSX)\n  * **Purpose** : Extracts tabular data from XLSX files.\n  * **Configuration** : \n    * File ID: `{{ $node['Extract File Metadata'].json.file_id }}`\n  * **Customization** : \n    * Add support for CSV or Google Sheets.\n\n\n\n### 15\\. Split Text into Chunks ✂️\n\n  * **Type** : Text Splitter\n  * **Purpose** : Splits extracted text into manageable chunks for embedding.\n  * **Configuration** : \n    * Chunk Size: `1000`\n    * Chunk Overlap: `200`\n  * **Customization** : \n    * Adjust chunk size and overlap based on document length.\n\n\n\n### 16\\. Generate Text Embeddings 🌐\n\n  * **Type** : OpenAI\n  * **Purpose** : Generates embeddings for text chunks using OpenAI.\n  * **Configuration** : \n    * Credential: OpenAI API key\n    * Operation: Embedding\n    * Model: `text-embedding-ada-002`\n  * **Customization** : \n    * Switch to a different embedding model if needed.\n\n\n\n### 17\\. Store Text in Supabase 💾\n\n  * **Type** : Supabase Vector Store\n  * **Purpose** : Stores text chunks and embeddings in the `documents` table.\n  * **Configuration** : \n    * Credential: Supabase credentials\n    * Operation: Insert Documents\n    * Table Name: `documents`\n  * **Customization** : \n    * Add metadata fields to store additional context.\n\n\n\n### 18\\. Store Tabular Data 💾\n\n  * **Type** : Supabase\n  * **Purpose** : Stores tabular data in the `document_rows` table.\n  * **Configuration** : \n    * Operation: Insert\n    * Table: `document_rows`\n    * Columns: `dataset_id`, `row_data`\n  * **Customization** : \n    * Add validation for tabular data structure.\n\n\n\n### 19\\. Store File Metadata 📋\n\n  * **Type** : Supabase\n  * **Purpose** : Stores file metadata in the `document_metadata` table.\n  * **Configuration** : \n    * Operation: Insert\n    * Table: `document_metadata`\n    * Columns: `file_id`, `file_name`, `file_type`, `file_url`\n  * **Customization** : \n    * Add more metadata fields as needed.\n\n\n\n### 20\\. Record in Knowledge Base 📚\n\n  * **Type** : Supabase\n  * **Purpose** : Stores basic file info in the `knowledge_base` table.\n  * **Configuration** : \n    * Operation: Insert\n    * Table: `knowledge_base`\n    * Columns: `file_id`, `file_name`, `file_type`, `file_url`, `upload_date`\n  * **Customization** : \n    * Add indexes for faster lookups.\n\n\n\n### 21\\. Log File Errors ⚠️\n\n  * **Type** : Supabase\n  * **Purpose** : Logs errors for unsupported file types.\n  * **Configuration** : \n    * Operation: Insert\n    * Table: `error_log`\n    * Columns: `error_type`, `error_message`\n  * **Customization** : \n    * Add notifications for errors.\n\n\n\n### 22\\. Log Duplicate Errors ⚠️\n\n  * **Type** : Supabase\n  * **Purpose** : Logs errors for duplicate files.\n  * **Configuration** : \n    * Operation: Insert\n    * Table: `error_log`\n    * Columns: `error_type`, `error_message`\n  * **Customization** : \n    * Add notifications for duplicates.\n\n\n\n# Interactive Knowledge Base Chat with Supabase RAG using GPT-4o-mini 📚💬\n\n## Introduction 🌟\n\nThis n8n workflow creates an **interactive chat interface** that allows users to query a company knowledge base using **Retrieval-Augmented Generation (RAG)**. It retrieves relevant information from text documents and tabular data stored in **Supabase** , then generates natural language responses using **OpenAI’s GPT-4o-mini** model. Designed for teams managing internal knowledge, this workflow enables users to ask questions like “What’s the remote work policy?” or “Show me the latest budget data” and receive accurate, context-aware responses in a conversational format. 🚀\n\n## Problem Statement 🎯\n\nManaging a company knowledge base can be a daunting task—employees often struggle to find specific information buried in documents or spreadsheets, leading to wasted time and inefficiencies. Traditional search methods may not understand natural language queries or provide contextually relevant results. This workflow solves these issues by:\n\n  * Offering a **chat-based interface** for natural language queries, making it easy for users to ask questions in their own words.\n  * Leveraging **RAG** to retrieve relevant text and tabular data from Supabase, ensuring responses are accurate and context-aware.\n  * Supporting diverse file types, including **text-based files** (e.g., PDFs, DOCX) and **tabular data** (e.g., XLSX, CSV), for comprehensive knowledge access.\n  * Maintaining **conversation history** to provide context during interactions, improving the user experience.\n\n\n\n## Target Audience 👥\n\nThis workflow is ideal for:\n\n  * **HR Teams** : Quickly access company policies, employee handbooks, or benefits documents.\n  * **Finance Teams** : Retrieve budget data, expense reports, or financial summaries from spreadsheets.\n  * **Knowledge Managers** : Build a centralized assistant for internal documentation, streamlining information access.\n  * **Developers** : Extend the workflow with additional tools or integrations for custom use cases.\n\n\n\n## Workflow Description 🔍\n\nThis workflow consists of a chat interface powered by n8n’s Chat Trigger node, an AI Agent node for RAG, and several tools to retrieve data from Supabase. Here’s how it works step-by-step:\n\n  1. **User Initiates a Chat** : The user interacts with a chat interface, sending queries like “Summarize our remote work policy” or “Show budget data for Q1 2025.”\n  2. **Query Processing with RAG** : The AI Agent processes the query using RAG, retrieving relevant data from Supabase tables and generating a response with OpenAI’s GPT-4o-mini model.\n  3. **Data Retrieval and Response Generation** : The workflow uses multiple tools to fetch data: \n     * Retrieves text chunks from the `documents` table using vector search.\n     * Fetches tabular data from the `document_rows` table based on file IDs.\n     * Extracts full document text or lists available files as needed.\n     * Generates a natural language response combining the retrieved data.\n  4. **Conversation History Management** : Stores the conversation history in Supabase to maintain context for follow-up questions.\n  5. **Response Delivery** : Formats and sends the response back to the chat interface for the user to view.\n\n\n\n## Nodes Breakdown 🛠️\n\n### 1\\. Start Chat Interface 💬\n\n  * **Type** : Chat Trigger\n  * **Purpose** : Provides the interactive chat interface for users to input queries and receive responses.\n  * **Configuration** : \n    * Chat Title: `Company Knowledge Base Assistant`\n    * Chat Subtitle: `Ask me anything about company documents!`\n    * Welcome Message: `Hello! I’m your Company Knowledge Base Assistant. How can I help you today?`\n    * Suggestions: `What is the company policy on remote work?`, `Show me the latest budget data.`, `List all policy documents.`\n    * Output Chat Session ID: `true`\n    * Output User Message: `true`\n  * **Customization** : \n    * Update the title and welcome message to align with your company branding (e.g., `HR Knowledge Assistant`).\n    * Add more suggestions relevant to your use case (e.g., `What are the company benefits?`).\n\n\n\n### 2\\. Process Query with RAG 🧠\n\n  * **Type** : AI Agent\n  * **Purpose** : Orchestrates the RAG process by retrieving relevant data using tools and generating responses with OpenAI’s GPT-4o-mini.\n  * **Configuration** : \n    * Credential: OpenAI API key\n    * Model: `gpt-4o-mini`\n    * System Prompt: `You are a helpful assistant for a company knowledge base. Use the provided tools to retrieve relevant information from documents and tabular data. If the query involves tabular data, format it clearly in your response. If no relevant data is found, respond with \"I couldn’t find any relevant information. Can you provide more details?\"`\n    * Input Field: `{{ $node['Start Chat Interface'].json.message }}`\n  * **Customization** : \n    * Switch to a different model (e.g., `gpt-3.5-turbo`) to adjust cost or performance.\n    * Modify the system prompt to change the tone (e.g., more formal for HR use cases).\n\n\n\n### 3\\. Retrieve Text Chunks 📄\n\n  * **Type** : Supabase Vector Store (Tool)\n  * **Purpose** : Retrieves relevant text chunks from the `documents` table using vector search.\n  * **Configuration** : \n    * Credential: Supabase credentials\n    * Operation Mode: Retrieve Documents (As Tool for AI Agent)\n    * Table Name: `documents`\n    * Embedding Field: `embedding`\n    * Content Field: `content_text`\n    * Metadata Field: `metadata`\n    * Embedding Model: OpenAI `text-embedding-ada-002`\n    * Top K: `10`\n  * **Customization** : \n    * Adjust `Top K` to retrieve more or fewer results (e.g., `5` for faster responses).\n    * Ensure the `match_documents` function (see prerequisites) is defined in Supabase.\n\n\n\n### 4\\. Fetch Tabular Data 📊\n\n  * **Type** : Supabase (Tool, Execute Query)\n  * **Purpose** : Retrieves tabular data from the `document_rows` table based on a file ID.\n  * **Configuration** : \n    * Credential: Supabase credentials\n    * Operation: Execute Query\n    * Query: `SELECT row_data FROM document_rows WHERE dataset_id = $1 LIMIT 10`\n    * Tool Description: `Run a SQL query - use this to query from the document_rows table once you know the file ID you are querying. dataset_id is the file_id and you are always using the row_data for filtering, which is a jsonb field that has all the keys from the file schema given in the document_metadata table.`\n  * **Customization** : \n    * Modify the query to filter specific columns or add conditions (e.g., `WHERE dataset_id = $1 AND row_data-&gt;&gt;'year' = '2025'`).\n    * Increase the `LIMIT` for larger datasets.\n\n\n\n### 5\\. Extract Full Document Text 📜\n\n  * **Type** : Supabase (Tool, Execute Query)\n  * **Purpose** : Fetches the full text of a document by concatenating all text chunks for a given `file_id`.\n  * **Configuration** : \n    * Credential: Supabase credentials\n    * Operation: Execute Query\n    * Query: `SELECT string_agg(content_text, ' ') as document_text FROM documents WHERE metadata-&gt;&gt;'file_id' = $1 GROUP BY metadata-&gt;&gt;'file_id'`\n    * Tool Description: `Given file id fetch the text from the documents`\n  * **Customization** : \n    * Add filters to the query if needed (e.g., limit to specific metadata fields).\n\n\n\n### 6\\. List Available Files 📋\n\n  * **Type** : Supabase (Tool, Select)\n  * **Purpose** : Lists all files in the knowledge base from the `document_metadata` table.\n  * **Configuration** : \n    * Credential: Supabase credentials\n    * Operation: Select\n    * Schema: `public`\n    * Table: `document_metadata`\n    * Tool Description: `Use this tool to fetch all documents including the table schema if the file is csv, excel or xlsx`\n  * **Customization** : \n    * Add filters to list specific file types (e.g., `WHERE file_type = 'application/pdf'`).\n    * Modify the columns selected to include additional metadata (e.g., `file_size`).\n\n\n\n### 7\\. Manage Chat History 💾\n\n  * **Type** : Postgres Chat Memory (Tool)\n  * **Purpose** : Stores and retrieves conversation history to maintain context.\n  * **Configuration** : \n    * Credential: Supabase credentials (Postgres-compatible)\n    * Table Name: `n8n_chat_history`\n    * Session ID Field: `session_id`\n    * Session ID Value: `{{ $node['Start Chat Interface'].json.sessionId }}`\n    * Message Field: `message`\n    * Sender Field: `sender`\n    * Timestamp Field: `timestamp`\n    * Context Window Length: `5`\n  * **Customization** : \n    * Increase the context window length for longer conversations (e.g., `10` messages).\n    * Add indexes on `session_id` and `timestamp` in Supabase for better performance.\n\n\n\n### 8\\. Format and Send Response 📤\n\n  * **Type** : Set\n  * **Purpose** : Formats the AI Agent’s response and sends it back to the chat interface.\n  * **Configuration** : \n    * Fields: \n      * `response`: `{{ $node['Process Query with RAG'].json.output }}`\n  * **Customization** : \n    * Add additional formatting to the response if needed (e.g., prepend with a timestamp or apply markdown formatting).\n\n\n\n## Setup Instructions 🛠️\n\n### Prerequisites 📋\n\n  1. **n8n Setup** : \n     * Ensure you’re using n8n version 1.0 or higher.\n     * Enable the AI features in n8n settings.\n  2. **Supabase** : \n     * Create a Supabase project and set up the following tables: \n       * `documents`: `id (uuid)`, `content_text (text)`, `embedding (vector(1536))`, `metadata (jsonb)`\n       * `document_rows`: `id (uuid)`, `dataset_id (varchar)`, `row_data (jsonb)`\n       * `document_metadata`: `file_id (varchar)`, `file_name (varchar)`, `file_type (varchar)`, `file_url (text)`\n       * `knowledge_base`: `id (serial)`, `file_id (varchar)`, `file_name (varchar)`, `file_type (varchar)`, `file_url (text)`, `upload_date (timestamp)`\n       * `n8n_chat_history`: `id (serial)`, `session_id (varchar)`, `message (text)`, `sender (varchar)`, `timestamp (timestamp)`\n     * Add the `match_documents` function to Supabase to enable vector search:\n           \n           CREATE OR REPLACE FUNCTION match_documents (\n             query_embedding vector(1536),\n             match_count int DEFAULT 5,\n             filter jsonb DEFAULT '{}'\n           ) RETURNS TABLE (\n             id uuid,\n             content_text text,\n             metadata jsonb,\n             similarity float\n           ) LANGUAGE plpgsql AS $$  \n           BEGIN\n             RETURN QUERY\n             SELECT\n               documents.id,\n               documents.content_text,\n               documents.metadata,\n               1 - (documents.embedding &lt;=&gt; query_embedding) as similarity\n             FROM documents\n             WHERE documents.metadata @&gt; filter\n             ORDER BY similarity DESC\n             LIMIT match_count;\n           END;\n             $$;\n\n\n\n",
  "crawled_at": "2025-05-26T05:35:18.376015",
  "readme_zh": "# 谷歌云端硬盘文件导入Supabase知识库系统 📂💾\n\n## 概述 🌟\n\n本n8n工作流实现了从**谷歌云端硬盘**自动导入文件至**Supabase**数据库的全流程，为构建知识库系统做好准备。支持处理**文本类文件**（PDF、DOCX、TXT等）和**表格数据**（XLSX、CSV、谷歌表格），包括内容提取、向量嵌入生成及结构化存储。这是构建可通过聊天界面查询的**企业知识库**（例如采用RAG工作流）的基础架构。🚀\n\n### 解决的问题 🎯\n\n手动管理来自谷歌云端硬盘的知识库既耗时又易出错。本工作流通过以下方式解决：\n* 自动**捕获新增或更新的文件**\n* 从各类文件中**提取内容**（文本与表格）\n* 为文本文件生成**向量嵌入**以实现语义搜索\n* 将数据高效存储至**Supabase**\n* 处理**重复文件**和错误以确保数据一致性\n\n**目标用户**：\n* **知识管理者**：集中管理企业文件知识库\n* **数据团队**：自动化电子表格与文档的采集\n* **开发者**：与其他工作流集成（如知识库查询RAG系统）\n\n## 工作流说明 🔍\n\n本系统监听谷歌云端硬盘的文件变动，按类型处理后将数据存储至Supabase表。运作流程如下：\n1. **文件检测**：触发谷歌云端硬盘文件创建/更新事件\n2. **文件处理**：遍历文件并提取元数据\n3. **去重检查**：确保文件未被处理过\n4. **内容提取**：\n   * **文本文件**：下载→文本提取→分块→生成嵌入→存储至Supabase\n   * **表格文件**：提取数据后按行存储\n5. **元数据存储**：保存文件基础信息\n6. **错误处理**：记录不支持格式或重复文件的错误\n\n## 节点详解 🛠️\n\n### 1. 新文件检测 🔔\n* **类型**：谷歌云端硬盘触发器\n* **配置**：OAuth2认证，监听`文件创建`事件\n* **定制**：可指定监控特定文件夹\n\n### 2. 更新文件检测 🔔\n* **类型**：谷歌云端硬盘触发器\n* **配置**：OAuth2认证，监听`文件更新`事件\n* **注**：当前未启用，需时重新连接\n\n### 3. 文件遍历处理 🔄\n* **类型**：循环节点\n* **输入**：`{{ $json.files }}`\n* **定制**：可调整批量处理数量\n\n### 4. 元数据提取 🆔\n* **类型**：数据集节点\n* **字段**：文件ID、名称、MIME类型、网页链接\n* **扩展**：可添加文件大小等额外元数据\n\n### 5. 文件类型校验 ✅\n* **类型**：条件分支\n* **逻辑**：根据MIME类型分流（如PDF/XLSX）\n* **扩展**：支持添加更多文件类型\n\n### 6. 重复文件检查 🔍\n* **类型**：Supabase查询\n* **操作**：在`knowledge_base`表中检查file_id是否存在\n\n### 7. 重复处理逻辑 🔄\n* **类型**：条件分支\n* **逻辑**：根据查询结果决定后续流程\n\n### 8. 清理旧文本数据 🗑️\n* **类型**：Supabase删除\n* **目标**：`documents`表中关联file_id的旧数据\n\n### 9. 清理旧表格数据 🗑️\n* **类型**：Supabase删除\n* **目标**：`document_rows`表中关联file_id的旧数据\n\n### 10. 文件类型路由 🔀\n* **类型**：路由节点\n* **规则**：按MIME类型分流处理路径\n\n### 11. 文件下载 📥\n* **类型**：谷歌云端硬盘下载\n* **配置**：通过file_id获取二进制内容\n\n### 12. PDF文本提取 📜\n* **类型**：PDF解析器\n* **输入**：下载的二进制数据\n\n### 13. DOCX文本提取 📜\n* **类型**：DOCX解析器\n* **扩展**：可支持TXT/RTF等格式\n\n### 14. XLSX数据提取 📊\n* **类型**：表格提取器\n* **扩展**：可支持CSV/谷歌表格\n\n### 15. 文本分块 ✂️\n* **类型**：文本分割器\n* **参数**：块大小1000，重叠200字符\n* **优化**：根据文档特性调整参数\n\n### 16. 生成向量嵌入 🌐\n* **类型**：OpenAI嵌入\n* **模型**：text-embedding-ada-002\n* **替代**：可更换其他嵌入模型\n\n### 17. 文本存储Supabase 💾\n* **类型**：Supabase向量存储\n* **表名**：`documents`\n* **扩展**：可添加更多元数据字段\n\n### 18. 表格数据存储 💾\n* **类型**：Supabase插入\n* **表名**：`document_rows`\n* **字段**：数据集ID和行数据\n\n### 19. 元数据存储 📋\n* **类型**：Supabase插入\n* **表名**：`document_metadata`\n* **字段**：文件基础信息\n\n### 20. 知识库记录 📚\n* **类型**：Supabase插入\n* **表名**：`knowledge_base`\n* **扩展**：可添加索引优化查询\n\n### 21. 错误日志记录 ⚠️\n* **类型**：Supabase插入\n* **表名**：`error_log`\n* **通知**：可配置错误提醒\n\n# 基于Supabase RAG的交互式知识库聊天系统 📚💬\n\n## 简介 🌟\n\n本n8n工作流构建了**交互式聊天界面**，通过**检索增强生成(RAG)**技术查询企业知识库。系统从Supabase的文本和表格数据中检索信息，并采用**OpenAI的GPT-4o-mini**生成自然语言回复。适用于团队知识管理场景，用户可提问如\"远程办公政策是什么？\"或\"显示最新预算数据\"等问题，获得精准的对话式回复。🚀\n\n## 核心价值 🎯\n\n解决企业知识库检索难题：\n* **自然语言交互**：支持口语化提问\n* **多格式支持**：覆盖文本与表格数据\n* **上下文保持**：维护对话历史记录\n* **精准检索**：基于语义的向量搜索\n\n**典型用户**：\n* **HR部门**：快速查询政策手册\n* **财务团队**：获取预算表格数据\n* **知识管理员**：构建统一信息门户\n* **开发者**：扩展定制功能\n\n## 系统架构 🔍\n\n1. **用户发起对话**：通过聊天界面输入查询\n2. **RAG处理**：结合检索与生成技术\n3. **数据获取**：\n   * 从`documents`表获取文本片段\n   * 从`document_rows`表提取表格数据\n4. **历史管理**：Supabase存储对话上下文\n5. **响应生成**：格式化输出查询结果\n\n## 关键节点 🛠️\n\n### 1. 聊天界面 💬\n* **类型**：聊天触发器\n* **欢迎语**：\"您好！我是企业知识库助手\"\n* **建议提问**：内置典型问题示例\n\n### 2. RAG处理器 🧠\n* **模型**：GPT-4o-mini\n* **系统提示**：设定助手角色与应答规范\n* **替代**：可切换其他GPT模型\n\n### 3. 文本检索器 📄\n* **类型**：Supabase向量检索\n* **参数**：返回前10个相关片段\n* **依赖**：需预置match_documents函数\n\n### 4. 表格查询器 📊\n* **SQL**：按file_id检索表格行数据\n* **优化**：可添加条件过滤\n\n### 5. 全文提取器 📜\n* **SQL**：聚合同一文件的所有文本块\n\n### 6. 文件列表器 📋\n* **操作**：查询document_metadata表\n* **扩展**：支持按类型过滤\n\n### 7. 对话存储器 💾\n* **表名**：n8n_chat_history\n* **上下文**：保留最近5条对话\n\n### 8. 响应格式化 📤\n* **操作**：整理AI生成的回复内容\n\n## 部署指南 🛠️\n\n### 前置要求 📋\n\n1. **n8n配置**：\n   * 需1.0以上版本\n   * 启用AI功能模块\n2. **Supabase准备**：\n   * 创建五个数据表\n   * 部署match_documents函数：\n     ```sql\n     CREATE OR REPLACE FUNCTION match_documents(\n       query_embedding vector(1536),\n       match_count int DEFAULT 5,\n       filter jsonb DEFAULT '{}'\n     ) RETURNS TABLE (\n       id uuid,\n       content_text text,\n       metadata jsonb,\n       similarity float\n     ) LANGUAGE plpgsql AS $$\n     BEGIN\n       RETURN QUERY\n       SELECT\n         documents.id,\n         documents.content_text,\n         documents.metadata,\n         1 - (documents.embedding <=> query_embedding) as similarity\n       FROM documents\n       WHERE documents.metadata @> filter\n       ORDER BY similarity DESC\n       LIMIT match_count;\n     END;\n     $$;\n     ```",
  "title_zh": "使用AI与Supabase RAG交互式知识库聊天 📚💬",
  "publish_date_zh": "上次更新于11天前",
  "workflow_json_zh": "{\"id\":\"6fZffoKqrzLAmbHc\",\"meta\":{\"instanceId\":\"3aaeb6eaba3494bbdbe57e25fa3d02783cfbc460b1e823f7b741cf26edc7ca3d\"},\"name\":\"Google Drive File Ingestion to Supabase for Knowledge Base\",\"tags\":[],\"nodes\":[{\"id\":\"eff80cb0-26e5-4a19-a4d6-671a11fe26b6\",\"name\":\"File Created\",\"type\":\"n8n-nodes-base.googleDriveTrigger\",\"position\":[-80,880],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a78ad8a2-93a9-4c71-8916-e6247d408d82\",\"name\":\"Update to File\",\"type\":\"n8n-nodes-base.googleDriveTrigger\",\"position\":[-80,680],\"parameters\":{},\"typeVersion\":1},{\"id\":\"f8a528ba-9638-4a32-a2e2-596c4a63da0c\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[140,780],\"parameters\":{},\"typeVersion\":3},{\"id\":\"bf8e763f-fff5-4fa4-a0ec-4b13bdeb498d\",\"name\":\"Set File ID\",\"type\":\"n8n-nodes-base.set\",\"position\":[360,640],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"47bc2891-8f9f-416d-b2ce-8fd656796348\",\"name\":\"Check for Duplicates\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[800,540],\"parameters\":{},\"typeVersion\":2.6,\"alwaysOutputData\":true},{\"id\":\"71dd64ed-9c40-4ef0-bf24-5243b2cff499\",\"name\":\"Insert Metadata\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[1900,740],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"6a66a187-30c1-46b0-830f-484add803b1d\",\"name\":\"Extract from File PDF\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[3000,180],\"parameters\":{},\"typeVersion\":1},{\"id\":\"ebc02b0a-0481-42e8-8043-e9bcd6c0f02e\",\"name\":\"Extract from CSV\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[2560,580],\"parameters\":{},\"typeVersion\":1},{\"id\":\"8bb13f35-03c3-413a-9dcc-1526f40325d3\",\"name\":\"Extract from XLSX\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[2560,980],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a598e49c-d9bc-4305-b917-ccc64feb4c68\",\"name\":\"Aggregate\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[2780,740],\"parameters\":{},\"typeVersion\":1},{\"id\":\"e1c0c059-66f5-4a1b-b76a-8db1823c25e1\",\"name\":\"Summarize\",\"type\":\"n8n-nodes-base.summarize\",\"position\":[3000,740],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"cb46dfca-96ce-478a-98cb-5c94fd48e104\",\"name\":\"Extract from RTF\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[3000,1160],\"parameters\":{},\"typeVersion\":1},{\"id\":\"9832240d-7cea-465e-b167-17fcf254f5f7\",\"name\":\"Error Logger\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[1240,1380],\"parameters\":{},\"typeVersion\":1},{\"id\":\"01b5f966-e5b7-436e-9551-c31f6b9d4eac\",\"name\":\"Validate File\",\"type\":\"n8n-nodes-base.if\",\"position\":[580,640],\"parameters\":{},\"typeVersion\":1},{\"id\":\"466e1cc8-25e7-462c-b19f-467c66eb1d77\",\"name\":\"IF Duplicate Check\",\"type\":\"n8n-nodes-base.if\",\"position\":[1020,540],\"parameters\":{},\"typeVersion\":2.2},{\"id\":\"0dd9891e-7dd3-4f2d-8a2e-094ab3cecec6\",\"name\":\"Log Duplicate\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[1240,440],\"parameters\":{},\"typeVersion\":1},{\"id\":\"7d05de17-7909-4da3-bba3-c7f512af1708\",\"name\":\"Supabase Vector Store\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreSupabase\",\"position\":[3240,440],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"a764be2e-110f-4320-8bae-f04a749a3ac5\",\"name\":\"Embeddings OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[3220,660],\"parameters\":{},\"typeVersion\":1.2},{\"id\":\"0ef91d4c-7d6b-4544-9ef5-09a0bdb6dd7c\",\"name\":\"Default Data Loader\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[3340,660],\"parameters\":{},\"typeVersion\":1},{\"id\":\"86c648a9-4b9d-4afb-9e2e-f4fff12a1ce0\",\"name\":\"Debug File ID\",\"type\":\"n8n-nodes-base.set\",\"position\":[1240,740],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"392916f3-2265-4c57-abfd-37054da9e741\",\"name\":\"Download File\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[2120,740],\"parameters\":{},\"typeVersion\":3},{\"id\":\"a7367c0f-6f22-4099-ac6c-8511081b79f6\",\"name\":\"Set Schema\",\"type\":\"n8n-nodes-base.set\",\"position\":[3360,1160],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"7051505f-4da8-44c0-90c4-c522d3a2f6d3\",\"name\":\"Schema Document Metadata\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[3600,1160],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"6f76fa9d-d1f9-4e05-80af-ec78fed5416c\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"position\":[2340,680],\"parameters\":{},\"typeVersion\":3.2},{\"id\":\"f62efcf8-bb87-4e4e-9c73-0c86ec1c55fd\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-120,-60],\"parameters\":{\"content\":\"\"},\"typeVersion\":1},{\"id\":\"82015f8b-1456-4b04-bf38-2735e7f416f6\",\"name\":\"Extract from DOC\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[3000,1360],\"parameters\":{},\"typeVersion\":1},{\"id\":\"7af0771c-bed1-4cbb-8122-01ec2d8b4664\",\"name\":\"Slack Duplicate Notification\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1460,440],\"webhookId\":\"b530b409-ce3a-44eb-9efc-ab091105fa54\",\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"a5ef8a35-ea86-466a-bb6b-2f3ef72acab7\",\"name\":\"Error Notification\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1460,1400],\"webhookId\":\"b530b409-ce3a-44eb-9efc-ab091105fa54\",\"parameters\":{},\"typeVersion\":2.1},{\"id\":\"6ca4d2d7-536c-4229-ac19-39dcb0853c4c\",\"name\":\"Delete old Doc\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[1460,740],\"parameters\":{},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"98d0c000-5d9b-419b-aa7c-e98a9f0a90e2\",\"name\":\"Extract from TXT\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[3000,380],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a53ca5ed-b9f0-4f9e-bb55-017dc5ed1451\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1880,-40],\"parameters\":{\"content\":\"\"},\"typeVersion\":1},{\"id\":\"a1c76c00-0bed-48f0-ad8c-f686d5186222\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1620,-40],\"parameters\":{\"content\":\"\"},\"typeVersion\":1},{\"id\":\"71f8678a-ef8b-40ef-a3ef-3ee90afe65dc\",\"name\":\"RAG AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-880,700],\"parameters\":{},\"typeVersion\":1.8},{\"id\":\"7c7ebb71-1699-46a5-a756-cf2589815dc8\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-1460,1180],\"parameters\":{},\"typeVersion\":1.2},{\"id\":\"510482ba-030b-4777-9740-bf8993dce021\",\"name\":\"Postgres Chat Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\"position\":[-1280,1180],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"223791e6-5148-47cd-aab6-ca9cb20b7017\",\"name\":\"List Documents\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[-1060,1180],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"25cc4ca1-4910-4ae7-a755-c5611946c325\",\"name\":\"Query Document Rows\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[-620,1180],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"194c1ee8-1c21-4a1d-b8d2-9991dc8133fd\",\"name\":\"Character Text Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter\",\"position\":[3440,860],\"parameters\":{},\"typeVersion\":1},{\"id\":\"f311ab63-88fa-413a-8ba9-aa866e1fb5f0\",\"name\":\"Insert Table Rows\",\"type\":\"n8n-nodes-base.postgres\",\"position\":[2780,940],\"parameters\":{},\"typeVersion\":2.6},{\"id\":\"529e05ca-0494-4eb3-b0f4-275ba252f646\",\"name\":\"Delete Old Data Rows\",\"type\":\"n8n-nodes-base.supabase\",\"position\":[1680,740],\"parameters\":{},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"d1702791-fe65-4068-982b-8b378f9c2e0a\",\"name\":\"Set Error Type\",\"type\":\"n8n-nodes-base.set\",\"position\":[1020,1200],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"23a05be3-2b40-400b-b8d4-21ee6db78ac4\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-1440,720],\"webhookId\":\"db7e7558-fd4c-4743-b42c-d3b3a38e4d19\",\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"89262c14-2910-4a9d-b86a-84c015e0daa5\",\"name\":\"Edit Fields2\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1180,700],\"parameters\":{},\"typeVersion\":3.4},{\"id\":\"2325e26f-6237-4128-bead-17e0a9ccb50d\",\"name\":\"Supabase Vector Store2\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreSupabase\",\"position\":[-460,840],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"1289b037-7bc9-4d13-9516-328f1f781c14\",\"name\":\"Embeddings OpenAI2\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[-240,1060],\"parameters\":{},\"typeVersion\":1.2},{\"id\":\"3d15f7db-e7b7-4bb7-a5f7-9962f3a81051\",\"name\":\"Get Full Document Text - Get File Contents\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[-820,1180],\"parameters\":{},\"typeVersion\":2.6}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"0c6700ed-433f-46ca-8907-c2f4f94adfda\",\"connections\":{\"Switch\":{\"main\":[[{\"node\":\"Extract from File PDF\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from TXT\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from CSV\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from XLSX\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from RTF\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract from DOC\",\"type\":\"main\",\"index\":0}]]},\"Aggregate\":{\"main\":[[{\"node\":\"Summarize\",\"type\":\"main\",\"index\":0}]]},\"Summarize\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0},{\"node\":\"Set Schema\",\"type\":\"main\",\"index\":0}]]},\"Set Schema\":{\"main\":[[{\"node\":\"Schema Document Metadata\",\"type\":\"main\",\"index\":0}]]},\"Set File ID\":{\"main\":[[{\"node\":\"Validate File\",\"type\":\"main\",\"index\":0}]]},\"Edit Fields2\":{\"main\":[[{\"node\":\"RAG AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Error Logger\":{\"main\":[[{\"node\":\"Error Notification\",\"type\":\"main\",\"index\":0}]]},\"File Created\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Debug File ID\":{\"main\":[[{\"node\":\"Delete old Doc\",\"type\":\"main\",\"index\":0}]]},\"Download File\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"Log Duplicate\":{\"main\":[[{\"node\":\"Slack Duplicate Notification\",\"type\":\"main\",\"index\":0}]]},\"Validate File\":{\"main\":[[{\"node\":\"Check for Duplicates\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Set Error Type\",\"type\":\"main\",\"index\":0}]]},\"Delete old Doc\":{\"main\":[[{\"node\":\"Delete Old Data Rows\",\"type\":\"main\",\"index\":0}]]},\"List Documents\":{\"ai_tool\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Set Error Type\":{\"main\":[[{\"node\":\"Error Logger\",\"type\":\"main\",\"index\":0}]]},\"Update to File\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Insert Metadata\":{\"main\":[[{\"node\":\"Download File\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items\":{\"main\":[[],[{\"node\":\"Set File ID\",\"type\":\"main\",\"index\":0}]]},\"Extract from CSV\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0},{\"node\":\"Insert Table Rows\",\"type\":\"main\",\"index\":0}]]},\"Extract from DOC\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Extract from RTF\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Extract from TXT\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Embeddings OpenAI\":{\"ai_embedding\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Extract from XLSX\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0},{\"node\":\"Insert Table Rows\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Embeddings OpenAI2\":{\"ai_embedding\":[[{\"node\":\"Supabase Vector Store2\",\"type\":\"ai_embedding\",\"index\":0}]]},\"IF Duplicate Check\":{\"main\":[[{\"node\":\"Log Duplicate\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Debug File ID\",\"type\":\"main\",\"index\":0}]]},\"Default Data Loader\":{\"ai_document\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"ai_document\",\"index\":0}]]},\"Query Document Rows\":{\"ai_tool\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Check for Duplicates\":{\"main\":[[{\"node\":\"IF Duplicate Check\",\"type\":\"main\",\"index\":0}]]},\"Delete Old Data Rows\":{\"main\":[[{\"node\":\"Insert Metadata\",\"type\":\"main\",\"index\":0}]]},\"Postgres Chat Memory\":{\"ai_memory\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Extract from File PDF\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Supabase Vector Store\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Supabase Vector Store2\":{\"ai_tool\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Character Text Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Default Data Loader\",\"type\":\"ai_textSplitter\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"Edit Fields2\",\"type\":\"main\",\"index\":0}]]},\"Get Full Document Text - Get File Contents\":{\"ai_tool\":[[{\"node\":\"RAG AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]}}}"
}