{
  "url": "https://n8n.io/workflows/3630-build-your-own-filesystem-mcp-server/",
  "title": "Build your own FileSystem MCP server",
  "author": "Jimleuk",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "categories": [],
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"},\"nodes\":[{\"id\":\"24be8907-684e-4b57-9642-6f4a45ca7af3\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-380,-280],\"parameters\":{\"color\":7,\"width\":680,\"height\":660,\"content\":\"## 1. Set up an MCP Server Trigger\\n[Read more about the MCP Server Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger)\"},\"typeVersion\":1},{\"id\":\"d5845d0a-648f-4bc1-b087-bc0d17506ed3\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-380,-400],\"parameters\":{\"color\":5,\"width\":380,\"height\":100,\"content\":\"### Always Authenticate Your Server!\\nBefore going to production, it's always advised to enable authentication on your MCP server trigger.\"},\"typeVersion\":1},{\"id\":\"fe9f1c8e-8334-4732-be3a-5ee49036e11e\",\"name\":\"FileSystem MCP Server\",\"type\":\"@n8n/n8n-nodes-langchain.mcpTrigger\",\"position\":[-180,-140],\"webhookId\":\"0d93cfd5-2fbf-457e-9535-5bfc9a73ba9e\",\"parameters\":{\"path\":\"0d93cfd5-2fbf-457e-9535-5bfc9a73ba9e\"},\"typeVersion\":1},{\"id\":\"fb49782f-d8de-480b-a470-e37adb2e3036\",\"name\":\"ListDirectory\",\"type\":\"n8n-nodes-base.executeCommandTool\",\"position\":[-300,60],\"parameters\":{\"command\":\"=ls /home/node/{{ $fromAI('path', 'optional, leave blank for project root directory.') }}\",\"toolDescription\":\"List directories under the project root folder. The project root directory is /home/node/\"},\"typeVersion\":1},{\"id\":\"8fa93054-bcf5-4fbc-9825-df16be063eb2\",\"name\":\"CreateDirectory\",\"type\":\"n8n-nodes-base.executeCommandTool\",\"position\":[-200,160],\"parameters\":{\"command\":\"=mkdir -p /home/node/{{ $fromAI('filename', 'name of directory. Will be scoped under the /home/node/ project root directory. Optionally use path to create within subdirectories') }}\",\"toolDescription\":\"Create directories under the project root folder. The project root folder is /home/node.\"},\"typeVersion\":1},{\"id\":\"aafe884d-0e6e-476a-92fe-b2111f624417\",\"name\":\"When Executed by Another Workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[400,40],\"parameters\":{\"workflowInputs\":{\"values\":[{\"name\":\"operation\"},{\"name\":\"filenames\",\"type\":\"array\"},{\"name\":\"contents\",\"type\":\"array\"}]}},\"typeVersion\":1.1},{\"id\":\"d85925b6-d58d-43b5-a6ca-3e43cbc81121\",\"name\":\"Operation\",\"type\":\"n8n-nodes-base.switch\",\"position\":[580,40],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"writeOneOrMultipleFiles\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"c1da2138-e2df-46d4-b1f4-97525c05e778\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.operation }}\",\"rightValue\":\"writeOneOrMultipleFiles\"}]},\"renameOutput\":true},{\"outputKey\":\"readOneOrMultipleFiles\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"cc02a5a2-609c-4dbe-bdb6-45f145947e47\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.operation }}\",\"rightValue\":\"readOneOrMultipleFiles\"}]},\"renameOutput\":true}]},\"options\":{}},\"typeVersion\":3.2},{\"id\":\"e9ec2928-5e33-4213-a53a-92b7d840d49e\",\"name\":\"readOneOrMultipleFiles\",\"type\":\"n8n-nodes-base.executeCommand\",\"position\":[840,140],\"parameters\":{\"command\":\"=cat {{ $json.filenames.join(' ') }}\"},\"typeVersion\":1},{\"id\":\"77ba2a48-b4b9-4a23-818d-e028a7762514\",\"name\":\"ReadFiles\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[40,160],\"parameters\":{\"name\":\"readFil\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"=Call this tool to read the contents of a file. Include file extension.\",\"workflowInputs\":{\"value\":{\"contents\":\"[]\",\"filenames\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('filenames', `An array of filenames`, 'string') }}\",\"operation\":\"readOneOrMultipleFiles\"},\"schema\":[{\"id\":\"operation\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"operation\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"filenames\",\"type\":\"array\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"filenames\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"contents\",\"type\":\"array\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"contents\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.1},{\"id\":\"2ddf9a9a-cade-41c0-a068-482345452d4b\",\"name\":\"WriteFiles\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[140,60],\"parameters\":{\"name\":\"write_file\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"Call this tool to write contents to one or more files. Filenames and Contents are matched by their respective Array Indexes. Eg. To write to a single file, use { filenames: [<filename1>,<filename2>], contents: [<content1>,<content2>] } \",\"workflowInputs\":{\"value\":{\"contents\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('contents', `An array of strings for content to be written`, 'string') }}\",\"filenames\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('filenames', `An array of strings for filenames`, 'string') }}\",\"operation\":\"writeOneOrMultipleFiles\"},\"schema\":[{\"id\":\"operation\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"operation\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"filenames\",\"type\":\"array\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"filenames\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"contents\",\"type\":\"array\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"contents\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.1},{\"id\":\"a5d9e11b-0583-4c67-b30b-be1d4185b891\",\"name\":\"writeOneOrMultipleFiles\",\"type\":\"n8n-nodes-base.executeCommand\",\"position\":[840,-60],\"parameters\":{\"command\":\"={{\\n$json.filenames.map((filename,idx) =>\\n  `echo \\\"${$json.contents[idx] ?? ''}\\\" > /home/node/${filename}`\\n).join('\\\\n')\\n}}\"},\"typeVersion\":1},{\"id\":\"de2f715c-b6d1-4702-9d39-2527108b5706\",\"name\":\"SearchDirectory\",\"type\":\"n8n-nodes-base.executeCommandTool\",\"position\":[-80,240],\"parameters\":{\"command\":\"=find /home/node/ -name \\\"{{ $fromAI('filename', 'A name search paramter for the linux find tool') }}\\\"\\n\",\"toolDescription\":\"Search the project folder for a file by name. The project root directory is /home/node/\"},\"typeVersion\":1},{\"id\":\"a4918bb1-8882-45c8-a05c-a3e22912cc0f\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[320,-280],\"parameters\":{\"color\":7,\"width\":740,\"height\":660,\"content\":\"## 2. Use Custom Workflow Tool for More Complex Commands\\n[Learn more about the Execute Command tool](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executecommand/)\\n\\n\"},\"typeVersion\":1},{\"id\":\"ebf6c15b-e4e0-4db0-bb4e-36e204fb6a47\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-880,-740],\"parameters\":{\"width\":460,\"height\":1120,\"content\":\"## Try It Out!\\n### This n8n demonstrates how to build a simple FileSystem MCP server. Connecting to this server allows MCP clients and agents to list, read and create directories and files on the local machine or remote server.\\n\\nThis MCP example is based off an official MCP reference implementation which can be found here -https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem\\n\\n### How it works\\n* A MCP server trigger is used and connected to 5 tools: 3 Execute Command tools and 2 custom workflow tools.\\n* The 3 Execute Command tools allow for listing, searching and creating directories. \\n* The 2 custom workflow tools are for reading and writing files to disk.\\n* Special care has been to not allow the MCP agent to execute arbitrary linux commands on the target server. This is achieved by only allowing the agent to provide parameters such as filenames and paths rather than raw commands. \\n\\n### How to use\\n* This Filesystem MCP server will write to the server which hosts the n8n instance - this can be your local machine or a remove server. If your target filesystem is on neither, then modify the commands to connect to the desired server.\\n* Connect your MCP client by following the n8n guidelines here - https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop\\n* Try the following queries in your MCP client:\\n  * \\\"Please help me list all folders under the project directory.\\\"\\n  * \\\"Help me create a bash script to send a notification to Slack.\\\"\\n  * \\\"Search for the log file on the 22nd April and read its contents. What was the cause of the outage?\\\"\\n\\n### Requirements\\n* Linux file system for this example template. Feel free to modify if working on Windows.\\n* MCP Client or Agent for usage such as Claude Desktop - https://claude.ai/download\\n\\n### Customising this workflow\\n* Implement the moving and renaming of files by adding more custom workflow tools to the MCP server.\\n* Remember to set the MCP server to require credentials before going to production and sharing this MCP server with others!\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Operation\":{\"main\":[[{\"node\":\"writeOneOrMultipleFiles\",\"type\":\"main\",\"index\":0}],[{\"node\":\"readOneOrMultipleFiles\",\"type\":\"main\",\"index\":0}]]},\"ReadFiles\":{\"ai_tool\":[[{\"node\":\"FileSystem MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"WriteFiles\":{\"ai_tool\":[[{\"node\":\"FileSystem MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"ListDirectory\":{\"ai_tool\":[[{\"node\":\"FileSystem MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"CreateDirectory\":{\"ai_tool\":[[{\"node\":\"FileSystem MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"SearchDirectory\":{\"ai_tool\":[[{\"node\":\"FileSystem MCP Server\",\"type\":\"ai_tool\",\"index\":0}]]},\"When Executed by Another Workflow\":{\"main\":[[{\"node\":\"Operation\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "**This template is for self-hosted n8n instances only.**\n\n### This n8n demonstrates how to build a simple FileSystem MCP server. Connecting to this server allows MCP clients and agents to list, read and create directories and files on the local machine or remote server.\n\nThis MCP example is based off an official MCP reference implementation which can be found here -<https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem>\n\n### How it works\n\n  * A MCP server trigger is used and connected to 5 tools: 3 Execute Command tools and 2 custom workflow tools.\n  * The 3 Execute Command tools allow for listing, searching and creating directories.\n  * The 2 custom workflow tools are for reading and writing files to disk.\n  * Special care has been to not allow the MCP agent to execute arbitrary linux commands on the target server. This is achieved by only allowing the agent to provide parameters such as filenames and paths rather than raw commands.\n\n\n\n### How to use\n\n  * This Filesystem MCP server will write to the server which hosts the n8n instance - this can be your local machine or a remove server. If your target filesystem is on neither, then modify the commands to connect to the desired server.\n  * Connect your MCP client by following the n8n guidelines here - <https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop>\n  * Try the following queries in your MCP client: \n    * \"Please help me list all folders under the project directory.\"\n    * \"Help me create a bash script to send a notification to Slack.\"\n    * \"Search for the log file on the 22nd April and read its contents. What was the cause of the outage?\"\n\n\n\n### Requirements\n\n  * Linux file system for this example template. Feel free to modify if working on Windows.\n  * MCP Client or Agent for usage such as Claude Desktop - <https://claude.ai/download>\n\n\n\n### Customising this workflow\n\n  * Implement the moving and renaming of files by adding more custom workflow tools to the MCP server.\n  * Remember to set the MCP server to require credentials before going to production and sharing this MCP server with others!\n\n\n",
  "crawled_at": "2025-05-26T05:05:48.606052",
  "readme_zh": "**此模板仅适用于自托管的n8n实例。**\n\n### 本n8n示例演示如何构建一个简单的文件系统MCP服务器。连接此服务器后，MCP客户端和代理可对本地机器或远程服务器上的目录及文件执行列举、读取和创建操作。\n\n该MCP示例基于官方MCP参考实现（详见：<https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem>）\n\n### 实现原理\n\n* 使用MCP服务器触发器连接5个工具：3个执行命令工具和2个自定义工作流工具\n* 3个执行命令工具分别实现目录列举、搜索和创建功能\n* 2个自定义工作流工具用于读写磁盘文件\n* 特别注意限制MCP代理在目标服务器上执行任意Linux命令，仅允许代理提供文件名、路径等参数而非原始命令\n\n### 使用方法\n\n* 该文件系统MCP服务器将写入托管n8n实例的服务器（可以是本地机器或远程服务器）。若目标文件系统不在该服务器，请修改命令以连接目标服务器\n* 按照n8n指南连接MCP客户端：<https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop>\n* 在MCP客户端尝试以下查询：\n  * \"请帮我列出项目目录下所有文件夹\"\n  * \"帮我创建一个发送Slack通知的bash脚本\"\n  * \"搜索4月22日的日志文件并读取内容，当时中断的原因是什么？\"\n\n### 环境要求\n\n* 本示例模板需Linux文件系统（Windows环境请自行修改）\n* 需MCP客户端或代理（如Claude Desktop：<https://claude.ai/download>）\n\n### 自定义扩展\n\n* 通过添加更多自定义工作流工具实现文件移动和重命名功能\n* 正式投产前请务必设置MCP服务器身份验证，再与他人共享该MCP服务器",
  "title_zh": "构建您自己的FileSystem MCP服务器",
  "publish_date_zh": "上次更新于一个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"24be8907-684e-4b57-9642-6f4a45ca7af3\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -380,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 680,\n        \"height\": 660,\n        \"content\": \"## 1. 设置MCP服务器触发器\\n[了解更多关于MCP服务器触发器的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d5845d0a-648f-4bc1-b087-bc0d17506ed3\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -380,\n        -400\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 380,\n        \"height\": 100,\n        \"content\": \"### 始终验证您的服务器身份！\\n在投入生产环境前，强烈建议您为MCP服务器触发器启用身份验证功能。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fe9f1c8e-8334-4732-be3a-5ee49036e11e\",\n      \"name\": \"FileSystem MCP Server\",\n      \"type\": \"@n8n/n8n-nodes-langchain.mcpTrigger\",\n      \"position\": [\n        -180,\n        -140\n      ],\n      \"webhookId\": \"0d93cfd5-2fbf-457e-9535-5bfc9a73ba9e\",\n      \"parameters\": {\n        \"path\": \"0d93cfd5-2fbf-457e-9535-5bfc9a73ba9e\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fb49782f-d8de-480b-a470-e37adb2e3036\",\n      \"name\": \"ListDirectory\",\n      \"type\": \"n8n-nodes-base.executeCommandTool\",\n      \"position\": [\n        -300,\n        60\n      ],\n      \"parameters\": {\n        \"command\": \"=ls /home/node/{{ $fromAI('path', 'optional, leave blank for project root directory.') }}\",\n        \"toolDescription\": \"List directories under the project root folder. The project root directory is /home/node/\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8fa93054-bcf5-4fbc-9825-df16be063eb2\",\n      \"name\": \"CreateDirectory\",\n      \"type\": \"n8n-nodes-base.executeCommandTool\",\n      \"position\": [\n        -200,\n        160\n      ],\n      \"parameters\": {\n        \"command\": \"=mkdir -p /home/node/{{ $fromAI('filename', 'name of directory. Will be scoped under the /home/node/ project root directory. Optionally use path to create within subdirectories') }}\",\n        \"toolDescription\": \"Create directories under the project root folder. The project root folder is /home/node.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aafe884d-0e6e-476a-92fe-b2111f624417\",\n      \"name\": \"When Executed by Another Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        400,\n        40\n      ],\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"operation\"\n            },\n            {\n              \"name\": \"filenames\",\n              \"type\": \"array\"\n            },\n            {\n              \"name\": \"contents\",\n              \"type\": \"array\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"d85925b6-d58d-43b5-a6ca-3e43cbc81121\",\n      \"name\": \"Operation\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        580,\n        40\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"writeOneOrMultipleFiles\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"c1da2138-e2df-46d4-b1f4-97525c05e778\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.operation }}\",\n                    \"rightValue\": \"writeOneOrMultipleFiles\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"readOneOrMultipleFiles\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"cc02a5a2-609c-4dbe-bdb6-45f145947e47\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.operation }}\",\n                    \"rightValue\": \"readOneOrMultipleFiles\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"e9ec2928-5e33-4213-a53a-92b7d840d49e\",\n      \"name\": \"readOneOrMultipleFiles\",\n      \"type\": \"n8n-nodes-base.executeCommand\",\n      \"position\": [\n        840,\n        140\n      ],\n      \"parameters\": {\n        \"command\": \"=cat {{ $json.filenames.join(' ') }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"77ba2a48-b4b9-4a23-818d-e028a7762514\",\n      \"name\": \"ReadFiles\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        40,\n        160\n      ],\n      \"parameters\": {\n        \"name\": \"readFil\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"=Call this tool to read the contents of a file. Include file extension.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"contents\": \"[]\",\n            \"filenames\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('filenames', `An array of filenames`, 'string') }}\",\n            \"operation\": \"readOneOrMultipleFiles\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"filenames\",\n              \"type\": \"array\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"filenames\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"contents\",\n              \"type\": \"array\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"contents\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"2ddf9a9a-cade-41c0-a068-482345452d4b\",\n      \"name\": \"WriteFiles\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        140,\n        60\n      ],\n      \"parameters\": {\n        \"name\": \"write_file\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Call this tool to write contents to one or more files. Filenames and Contents are matched by their respective Array Indexes. Eg. To write to a single file, use { filenames: [<filename1>,<filename2>], contents: [<content1>,<content2>] } \",\n        \"workflowInputs\": {\n          \"value\": {\n            \"contents\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('contents', `An array of strings for content to be written`, 'string') }}\",\n            \"filenames\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('filenames', `An array of strings for filenames`, 'string') }}\",\n            \"operation\": \"writeOneOrMultipleFiles\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"operation\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"operation\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"filenames\",\n              \"type\": \"array\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"filenames\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"contents\",\n              \"type\": \"array\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"contents\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"a5d9e11b-0583-4c67-b30b-be1d4185b891\",\n      \"name\": \"writeOneOrMultipleFiles\",\n      \"type\": \"n8n-nodes-base.executeCommand\",\n      \"position\": [\n        840,\n        -60\n      ],\n      \"parameters\": {\n        \"command\": \"={{\\n$json.filenames.map((filename,idx) =>\\n  `echo \\\"${$json.contents[idx] ?? ''}\\\" > /home/node/${filename}`\\n).join('\\\\n')\\n}}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"de2f715c-b6d1-4702-9d39-2527108b5706\",\n      \"name\": \"SearchDirectory\",\n      \"type\": \"n8n-nodes-base.executeCommandTool\",\n      \"position\": [\n        -80,\n        240\n      ],\n      \"parameters\": {\n        \"command\": \"=find /home/node/ -name \\\"{{ $fromAI('filename', 'A name search paramter for the linux find tool') }}\\\"\\n\",\n        \"toolDescription\": \"Search the project folder for a file by name. The project root directory is /home/node/\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4918bb1-8882-45c8-a05c-a3e22912cc0f\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        320,\n        -280\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 740,\n        \"height\": 660,\n        \"content\": \"## 2. 使用自定义工作流工具处理更复杂命令\\n[了解更多关于执行命令工具的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executecommand/)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ebf6c15b-e4e0-4db0-bb4e-36e204fb6a47\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -880,\n        -740\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 1120,\n        \"content\": \"## 试试看！\\n### 本n8n示例演示如何构建一个简单的文件系统MCP服务器。连接该服务器后，MCP客户端和代理可以列出、读取及在本地机器或远程服务器上创建目录和文件。\\n\\n此MCP示例基于官方参考实现，源码详见：https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem\\n\\n### 工作原理\\n* 使用MCP服务器触发器连接5个工具：3个执行命令工具和2个自定义工作流工具\\n* 3个执行命令工具分别实现目录列表、搜索和创建功能\\n* 2个自定义工作流工具用于文件读取和磁盘写入\\n* 特别注意限制了MCP代理在目标服务器上执行任意Linux命令的权限，仅允许代理提供文件名、路径等参数而非原始命令\\n\\n### 使用方法\\n* 该文件系统MCP服务器将写入托管n8n实例的服务器（可以是本地机器或远程服务器）。若目标文件系统不在该服务器，请修改命令以连接目标服务器\\n* 按照n8n指南连接MCP客户端：https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-langchain.mcptrigger/#integrating-with-claude-desktop\\n* 在MCP客户端尝试以下查询：\\n  * \\\"请帮我列出项目目录下所有文件夹\\\"\\n  * \\\"帮我创建发送Slack通知的bash脚本\\\"\\n  * \\\"搜索4月22日的日志文件并读取内容，当时中断的原因是什么？\\\"\\n\\n### 环境要求\\n* 本示例模板需Linux文件系统，Windows环境请自行修改\\n* 需配合MCP客户端/代理使用（如Claude桌面版）：https://claude.ai/download\\n\\n### 自定义扩展\\n* 通过添加更多自定义工作流工具，实现文件移动和重命名功能\\n* 正式投产或共享该MCP服务器前，请务必设置凭证验证要求！\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Operation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"writeOneOrMultipleFiles\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"readOneOrMultipleFiles\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ReadFiles\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"FileSystem MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"WriteFiles\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"FileSystem MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ListDirectory\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"FileSystem MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"CreateDirectory\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"FileSystem MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SearchDirectory\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"FileSystem MCP Server\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When Executed by Another Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Operation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}