{
  "url": "https://n8n.io/workflows/1169-handle-pagination-in-http-requests/",
  "title": "Handle pagination in HTTP Requests",
  "author": "Harshil Agrawal",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "Sales"
    },
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "{\"nodes\":[{\"name\":\"On clicking 'execute'\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[200,470],\"parameters\":{},\"typeVersion\":1},{\"name\":\"HTTP Request\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[600,470],\"parameters\":{\"url\":\"={{$node[\\\"Config URL\\\"].json[\\\"next\\\"]}}\",\"options\":{},\"queryParametersUi\":{\"parameter\":[{\"name\":\"hapikey\",\"value\":\"<YOUR_API_KEY>\"},{\"name\":\"limit\",\"value\":\"100\"}]}},\"typeVersion\":1},{\"name\":\"NoOp\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[800,470],\"parameters\":{},\"typeVersion\":1},{\"name\":\"Wait\",\"type\":\"n8n-nodes-base.function\",\"position\":[1000,470],\"parameters\":{\"functionCode\":\"return new Promise((resolve, reject) => {\\n      setTimeout(() => { resolve([{ json: {} }]) }, 5000);\\n    })\\n\"},\"typeVersion\":1},{\"name\":\"Config URL\",\"type\":\"n8n-nodes-base.function\",\"position\":[400,470],\"parameters\":{\"functionCode\":\"\\nlet next = 'https://api.hubapi.com/crm/v3/objects/contacts'\\n\\nif (items[0].json.next) {\\n  next = items[0].json.next\\n}\\n\\nreturn [\\n  {\\n    json: {\\n      next : next\\n    }\\n  }\\n]\"},\"typeVersion\":1},{\"name\":\"Check if pagination?\",\"type\":\"n8n-nodes-base.if\",\"position\":[1250,470],\"parameters\":{\"conditions\":{\"string\":[],\"boolean\":[{\"value1\":\"={{$node[\\\"HTTP Request\\\"].json[\\\"paging\\\"] ? true : false}}\",\"value2\":true}]}},\"typeVersion\":1},{\"name\":\"Set next URL\",\"type\":\"n8n-nodes-base.set\",\"position\":[890,210],\"parameters\":{\"values\":{\"string\":[{\"name\":\"next\",\"value\":\"={{$node[\\\"HTTP Request\\\"].json[\\\"paging\\\"][\\\"next\\\"][\\\"link\\\"]}}\"}]},\"options\":{},\"keepOnlySet\":true},\"executeOnce\":true,\"typeVersion\":1},{\"name\":\"Combine all data\",\"type\":\"n8n-nodes-base.function\",\"position\":[1500,560],\"parameters\":{\"functionCode\":\"const allData = []\\n\\nlet counter = 0;\\ndo {\\n  try {\\n    const items = $items(\\\"HTTP Request\\\", 0, counter).map(item => item.json.results);\\n                    \\n    const aja = items[0].map(item => {\\n      return { json: item }\\n    })    \\n    \\n    allData.push.apply(allData, aja);\\n    //allData.push($items(\\\"Increment\\\", 0, counter));\\n  } catch (error) {\\n    return allData;  \\n  }\\n\\n  counter++;\\n} while(true);\\n\\n\"},\"typeVersion\":1}],\"connections\":{\"NoOp\":{\"main\":[[{\"node\":\"Wait\",\"type\":\"main\",\"index\":0}]]},\"Wait\":{\"main\":[[{\"node\":\"Check if pagination?\",\"type\":\"main\",\"index\":0}]]},\"Config URL\":{\"main\":[[{\"node\":\"HTTP Request\",\"type\":\"main\",\"index\":0}]]},\"HTTP Request\":{\"main\":[[{\"node\":\"NoOp\",\"type\":\"main\",\"index\":0}]]},\"Set next URL\":{\"main\":[[{\"node\":\"Config URL\",\"type\":\"main\",\"index\":0}]]},\"Check if pagination?\":{\"main\":[[{\"node\":\"Set next URL\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Combine all data\",\"type\":\"main\",\"index\":0}]]},\"On clicking 'execute'\":{\"main\":[[{\"node\":\"Config URL\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This example workflow demonstrates how to handle pagination.\n\nThis example assumes that the API you are making the request to has pagination, and returns a cursor (something that points to the next page).\n\nThis example workflow makes a request to the HubSpot API to fetch contacts. You will have to modify the parameters based on your API.\n\n**Config URL node:** This node sets the URL that the HTTP Request node calls.\n\n**HTTP Request node:** This node makes the API call and returns the data from the API. Based on your API, you will have to modify the parameters of the node.\n\n**NoOp node and Wait node:** These nodes help me avoiding any rate limits. If you're API has rate limits, make sure you configure the correct time in the Wait node.\n\n**Check if pagination:** This IF node checks if the API returns any cursor. If the API doesn't return any cursor, it means that there is no data to be fetched, and the node returns false. If the API returns a cursor, it means that there is still some data that needs to be fetched. In this case, the node returns true.\n\n**Set next URL:** This Set node is used to set the URL. In the next cycle, the HTTP Request node makes a call to this URL.\n\n**Combine all data:** This node combines all the data that gets returned by the API calls from the HTTP Request node.\n",
  "crawled_at": "2025-05-25T19:25:18.940462",
  "readme_zh": "本示例工作流演示了如何处理分页机制。\n\n该示例假设您请求的API支持分页功能，并会返回游标（指向下一页的标识符）。\n\n此工作流向HubSpot API发起请求以获取联系人数据。您需要根据实际API调整参数配置。\n\n**URL配置节点：** 该节点设置HTTP请求节点调用的目标URL。\n\n**HTTP请求节点：** 该节点执行API调用并返回接口数据。您需要根据具体API修改节点参数。\n\n**空操作节点与等待节点：** 这些节点用于规避请求频率限制。若您的API存在速率限制，请确保在等待节点中配置正确的间隔时间。\n\n**分页检查：** 该IF节点检测API是否返回游标。若无游标返回，则表示数据已全部获取完毕，节点返回false。若返回游标，则说明仍有待获取数据，此时节点返回true。\n\n**设置下一页URL：** 该Set节点用于更新请求URL。在下一轮循环中，HTTP请求节点将调用此新URL。\n\n**数据合并：** 该节点将HTTP请求节点所有API调用返回的数据进行整合。",
  "title_zh": "处理HTTP请求中的分页",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"name\": \"On clicking 'execute'\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        200,\n        470\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"HTTP Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        600,\n        470\n      ],\n      \"parameters\": {\n        \"url\": \"={{$node[\\\"Config URL\\\"].json[\\\"next\\\"]}}\",\n        \"options\": {},\n        \"queryParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"hapikey\",\n              \"value\": \"<YOUR_API_KEY>\"\n            },\n            {\n              \"name\": \"limit\",\n              \"value\": \"100\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"NoOp\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        800,\n        470\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Wait\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1000,\n        470\n      ],\n      \"parameters\": {\n        \"functionCode\": \"return new Promise((resolve, reject) => {\\n      setTimeout(() => { resolve([{ json: {} }]) }, 5000);\\n    })\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Config URL\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        400,\n        470\n      ],\n      \"parameters\": {\n        \"functionCode\": \"\\nlet next = 'https://api.hubapi.com/crm/v3/objects/contacts'\\n\\nif (items[0].json.next) {\\n  next = items[0].json.next\\n}\\n\\nreturn [\\n  {\\n    json: {\\n      next : next\\n    }\\n  }\\n]\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Check if pagination?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1250,\n        470\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [],\n          \"boolean\": [\n            {\n              \"value1\": \"={{$node[\\\"HTTP Request\\\"].json[\\\"paging\\\"] ? true : false}}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Set next URL\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        890,\n        210\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"next\",\n              \"value\": \"={{$node[\\\"HTTP Request\\\"].json[\\\"paging\\\"][\\\"next\\\"][\\\"link\\\"]}}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Combine all data\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1500,\n        560\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const allData = []\\n\\nlet counter = 0;\\ndo {\\n  try {\\n    const items = $items(\\\"HTTP Request\\\", 0, counter).map(item => item.json.results);\\n                    \\n    const aja = items[0].map(item => {\\n      return { json: item }\\n    })    \\n    \\n    allData.push.apply(allData, aja);\\n    //allData.push($items(\\\"Increment\\\", 0, counter));\\n  } catch (error) {\\n    return allData;  \\n  }\\n\\n  counter++;\\n} while(true);\\n\\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"NoOp\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check if pagination?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Config URL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"NoOp\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set next URL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Config URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check if pagination?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set next URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Combine all data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On clicking 'execute'\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Config URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}