{
  "url": "https://n8n.io/workflows/3881-travel-planning-agent-with-couchbase-vector-search-gemini-20-flash-and-openai/",
  "title": "Travel Planning Agent with Couchbase Vector Search, Gemini 2.0 Flash and OpenAI",
  "author": "Elliot Scribner",
  "publish_date": "Last update 18 days ago",
  "publish_date_absolute": "2025-05-08",
  "categories": [
    {
      "name": "Other"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"iGAzT789R7Q1fOOE\",\"meta\":{\"instanceId\":\"7a1e9dd164c758cbdeb7cf88274e567a937a36ed99d4d22ff24b645841097c48\",\"templateId\":\"3577\",\"templateCredsSetupCompleted\":true},\"name\":\"Travel Planning Agent with Couchbase Vector Search, Gemini 2.0 Flash and OpenAI\",\"tags\":[],\"nodes\":[{\"id\":\"0f361616-a552-43ed-9754-794780113955\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[380,240],\"webhookId\":\"c22b2240-ff07-44e5-a1aa-63584150a1cb\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"e8b9815d-0fe5-4e7c-a20b-1602384580cd\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[560,480],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-2.0-flash\"},\"typeVersion\":1},{\"id\":\"a4b15997-de4d-4c78-b623-e936442134af\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1260,280],\"parameters\":{\"color\":3,\"width\":800,\"height\":500,\"content\":\"## AI Travel Agent Powered by Couchbase.\\n\\n### You will need to:\\n1. Setup your Google API Credentials for the Gemini LLM\\n2. Setup your OpenAI Credentials for the OpenAI embedding nodes.\\n3. Create a Couchbase cluster (using [Couchbase Capella](https://cloud.couchbase.com/) in the cloud, or Couchbase Server)\\n4. Add [Database credentials](https://docs.couchbase.com/cloud/clusters/manage-database-users.html#create-database-credentials) with appropriate permissions for the operations you want to perform\\n5. Configure [Allowed IP addresses](https://docs.couchbase.com/cloud/clusters/allow-ip-address.html) for your n8n instance. Use `0.0.0.0/0` for easier testing.\\n6. Create a bucket, scope, and collection. We recommend the following:\\n   - Bucket: `travel-agent`\\n   - Scope: `vectors`\\n   - Collection: `points-of-interest`\\n7. Navigate to the Data Tools, click the Search tab, and click Import Search Index. Upload the following JSON file found [here](https://gist.github.com/ejscribner/6f16343d4b44b1af31e8f344557814b0).\\n\\n\\nOnce all of that is configured you will need to send the loading webhook with some data points (see example).\\n\\nThis should create vectorized data in  `points-of-interest` collection.\\n\\nOnce you have data points there try to ask the Agent questions about the data points and test the response. Eg. \\\"Where should I go for a romantic getaway?\\\"\"},\"typeVersion\":1},{\"id\":\"34866f8e-00b0-4706-82d7-491b9531a8b6\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[800,1000],\"webhookId\":\"3ca6fbdd-a157-4e9d-9042-237048da85b6\",\"parameters\":{\"path\":\"3ca6fbdd-a157-4e9d-9042-237048da85b6\",\"options\":{\"rawBody\":true},\"httpMethod\":\"POST\"},\"typeVersion\":2},{\"id\":\"26d4e62a-42b0-4e09-8585-827e5bcc9fff\",\"name\":\"Default Data Loader\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[1180,1360],\"parameters\":{\"options\":{},\"jsonData\":\"={{ $json.body.raw_body.point_of_interest.title }} - {{ $json.body.raw_body.point_of_interest.description }}\",\"jsonMode\":\"expressionData\"},\"typeVersion\":1},{\"id\":\"63fc308f-4d1c-4d24-9b20-68d7e6c2dbba\",\"name\":\"Recursive Character Text Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\"position\":[1280,1540],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"84f8c32b-8e0c-457c-aaec-17827042674d\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-60,1060],\"parameters\":{\"width\":720,\"height\":460,\"content\":\"## CURL Command to Ingest Data.\\n\\nHere is an example of how you can load data into your webhook once its active and ready to get requests.\\n\\n```\\ncurl -X POST \\\"webhook url\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"raw_body\\\": {\\n      \\\"point_of_interest\\\": {\\n        \\\"title\\\": \\\"Eiffel Tower\\\",\\n        \\\"description\\\": \\\"Iconic iron lattice tower located on the Champ de Mars in Paris, France.\\\"\\n      }\\n    }\\n  }'\\n```\\n\\n(replace webhook url with the URL listed in the webhook node)\\n\\nA shell script to bulk insert six data points can be found [here](https://gist.github.com/ejscribner/355a46a0a383a4878e65e2230b92c6b5). Be sure to activate the workflow and use the production Webhook URL when running the script.\"},\"typeVersion\":1},{\"id\":\"b2cf8788-849c-4420-b448-bd49caa4941e\",\"name\":\"Simple Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[720,480],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"0bf7fef9-f999-42a8-a6a8-ab111fe9a084\",\"name\":\"AI Travel Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[600,240],\"parameters\":{\"options\":{\"maxIterations\":10,\"systemMessage\":\"You are a helpful assistant for a trip planner. You have a vector search capability to locate points of interest, Use it and don't invent much.\"}},\"typeVersion\":1.8},{\"id\":\"3af3c8ce-582b-407c-847a-8063f9ad2e1a\",\"name\":\"Retrieve docs with Couchbase Search Vector\",\"type\":\"n8n-nodes-couchbase.vectorStoreCouchbaseSearch\",\"position\":[860,500],\"parameters\":{\"mode\":\"retrieve-as-tool\",\"topK\":10,\"options\":{},\"toolName\":\"PointofinterestKB\",\"embedding\":\"embedding\",\"textFieldKey\":\"description\",\"couchbaseScope\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\",\"cachedResultUrl\":\"\",\"cachedResultName\":\"\"},\"couchbaseBucket\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\"},\"toolDescription\":\"The list of Points of Interest from the database.\",\"vectorIndexName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\",\"cachedResultUrl\":\"\",\"cachedResultName\":\"\"},\"couchbaseCollection\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\",\"cachedResultUrl\":\"\",\"cachedResultName\":\"\"}},\"typeVersion\":1.1},{\"id\":\"77a4e857-607a-4bbc-a28d-8a715f9415d5\",\"name\":\"Insert docs with Couchbase Search Vector\",\"type\":\"n8n-nodes-couchbase.vectorStoreCouchbaseSearch\",\"position\":[1100,1120],\"parameters\":{\"mode\":\"insert\",\"options\":{},\"embedding\":\"embedding\",\"textFieldKey\":\"description\",\"couchbaseScope\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\",\"cachedResultUrl\":\"\",\"cachedResultName\":\"\"},\"couchbaseBucket\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\"},\"vectorIndexName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\",\"cachedResultUrl\":\"\",\"cachedResultName\":\"\"},\"embeddingBatchSize\":1,\"couchbaseCollection\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\",\"cachedResultUrl\":\"\",\"cachedResultName\":\"\"}},\"typeVersion\":1.1},{\"id\":\"4c0274c3-6647-4f45-b7d4-d63cfe2102ea\",\"name\":\"Generate OpenAI Embeddings using text-embedding-3-small\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[960,740],\"parameters\":{\"options\":{}},\"typeVersion\":1.2},{\"id\":\"83f864fa-a298-4738-a102-ca2d283377de\",\"name\":\"Generate OpenAI Embeddings using text-embedding-3-small1\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[1000,1340],\"parameters\":{\"options\":{}},\"typeVersion\":1.2}],\"active\":true,\"pinData\":{},\"settings\":{\"callerPolicy\":\"workflowsFromSameOwner\",\"executionOrder\":\"v1\"},\"versionId\":\"80e40e5a-35a3-4fa4-b90e-ac9d76897bbd\",\"connections\":{\"Webhook\":{\"main\":[[{\"node\":\"Insert docs with Couchbase Search Vector\",\"type\":\"main\",\"index\":0}]]},\"Simple Memory\":{\"ai_memory\":[[{\"node\":\"AI Travel Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Default Data Loader\":{\"ai_document\":[[{\"node\":\"Insert docs with Couchbase Search Vector\",\"type\":\"ai_document\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Travel Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"AI Travel Agent\",\"type\":\"main\",\"index\":0}]]},\"Recursive Character Text Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Default Data Loader\",\"type\":\"ai_textSplitter\",\"index\":0}]]},\"Retrieve docs with Couchbase Search Vector\":{\"ai_tool\":[[{\"node\":\"AI Travel Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Generate OpenAI Embeddings using text-embedding-3-small\":{\"ai_embedding\":[[{\"node\":\"Retrieve docs with Couchbase Search Vector\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Generate OpenAI Embeddings using text-embedding-3-small1\":{\"ai_embedding\":[[{\"node\":\"Insert docs with Couchbase Search Vector\",\"type\":\"ai_embedding\",\"index\":0}]]}}}",
  "readme": "> Disclaimer: this workflow template uses the `n8n-nodes-couchbase` community package. Community nodes are unverified and usage of them comes with some [risks](https://docs.n8n.io/integrations/community-nodes/risks/). See [here](https://docs.n8n.io/integrations/community-nodes/installation/gui-install/) for instructions on installing n8n community nodes.\n\nThis template is intended for use by those interested in learning more about Agentic AI workflow development, as well as those interested in learning how to use the Couchbase Search Vector Store node for practical applications.\n\nThis workflow helps users decide on travel destinations based on descriptions of several points of interest loaded into Couchbase and retrieved using Vector Search.\n\n### How it Works\n\nThis template contains two workflows:\n\n  1. The Data Ingestion workflow uses the following nodes \n     1. Webhook node (to listen for HTTP requests)\n     2. OpenAI Embeddings node (to generate embeddings on document insertion) \n        1. _Note: You’ll need to configure[OpenAI credentials](https://docs.n8n.io/integrations/builtin/credentials/openai/) for this node_\n     3. Couchbase Vector node (configured for document insertion)\n     4. Default Data Loader and Recursive Character Text Splitter\n  2. The Chat Application workflow uses the following nodes \n     1. Chat Trigger node\n     2. AI Tools Agent node connect to: \n        * Gemini (as the Chat Model, for generating responses) \n          * _Note: You will have to configure[Gemini credentials](https://docs.n8n.io/integrations/builtin/credentials/googleai/) for this node_\n        * Simple Memory (as the Memory, to maintain conversation context)\n        * Couchbase Search Vector node (as the Tool, for search)\n        * OpenAI Embeddings node (as the Embedding model for the Couchbase Search Vector node, to convert queries to vectors) \n          * _Note: You’ll need to configure[OpenAI credentials](https://docs.n8n.io/integrations/builtin/credentials/openai/) for this node_\n\n\n\n### Set up\n\nSetting up this workflow is easy and only takes around 10 minutes.\n\n#### Prerequisites\n\n  * A Couchbase Cluster running the Search Service, and corresponding database access credentials \n    * Be sure the Couchbase cluster allows the incoming IP address for n8n\n    * Create a Vector Search Index using [this index definition](https://gist.github.com/ejscribner/6f16343d4b44b1af31e8f344557814b0)\n    * Create a bucket (called `travel-agent`), scope (called `vectors`), and collection (called `points-of-interest`) in your Cluster\n  * OpenAI API Key\n  * Gemini API Key\n\n\n\n#### Steps\n\n  1. Configure all necessary credentials (Couchbase, OpenAI, and Gemini)\n  2. Select your bucket, scope, and collection for each of the Couchbase vector nodes\n  3. Ingest data, either using the cURL statements found on the sticky note within the workflow, or using [this shell script](https://gist.github.com/ejscribner/355a46a0a383a4878e65e2230b92c6b5) to ingest 6 points of interest\n  4. Open the chat and test out your travel agent!\n\n\n\n### Customization and Next Steps\n\n  * This workflow template can be made more robust by enhancing the data model to include more information about each point of interest. For example, the addition of price ranges, ideal seasons to visit, activity types, and accomodation options can help inform the LLM further about each destination, and in turn allow it to provide a more tailored response and be more helpful for travel planning.\n  * Alternatively, the data model could be entirely re-configured to suit a wide variety of other use cases. This template can serve as a building block for all sorts of AI Agent applications using RAG and is not limited to only travel recommendations.\n\n\n",
  "crawled_at": "2025-05-26T05:52:09.472875",
  "readme_zh": "免责声明：本工作流模板使用了`n8n-nodes-couchbase`社区扩展包。社区节点未经官方验证，使用可能存在[风险](https://docs.n8n.io/integrations/community-nodes/risks/)。社区节点安装指南请参阅[此处](https://docs.n8n.io/integrations/community-nodes/installation/gui-install/)。\n\n本模板适用于两类人群：希望深入了解智能体AI工作流开发的探索者，以及想学习如何将Couchbase向量搜索节点应用于实际场景的实践者。\n\n该工作流通过加载到Couchbase的景点描述数据，结合向量搜索技术，帮助用户智能推荐旅行目的地。\n\n### 实现原理\n\n模板包含两个独立工作流：\n\n1. **数据注入工作流**包含以下节点：\n   - Webhook节点（监听HTTP请求）\n   - OpenAI嵌入节点（生成文档向量）\n     - *注：需配置[OpenAI凭证](https://docs.n8n.io/integrations/builtin/credentials/openai/)*\n   - Couchbase向量节点（文档写入配置）\n   - 默认数据加载器与递归文本分割器\n\n2. **聊天应用工作流**包含以下节点：\n   - 聊天触发器节点\n   - AI工具代理节点（连接以下组件）：\n     * Gemini（作为聊天模型生成回复）\n       - *注：需配置[Gemini凭证](https://docs.n8n.io/integrations/builtin/credentials/googleai/)*\n     * 简易记忆模块（维护对话上下文）\n     * Couchbase搜索向量节点（作为搜索工具）\n     * OpenAI嵌入节点（为搜索节点提供查询向量转换）\n       - *注：需配置[OpenAI凭证](https://docs.n8n.io/integrations/builtin/credentials/openai/)*\n\n### 配置指南\n\n10分钟快速部署：\n\n#### 先决条件\n\n* 运行搜索服务的Couchbase集群及数据库凭证\n  * 确保集群允许n8n服务器IP访问\n  * 使用[此索引定义](https://gist.github.com/ejscribner/6f16343d4b44b1af31e8f344557814b0)创建向量搜索索引\n  * 在集群中创建存储桶（命名为`travel-agent`）、作用域（命名为`vectors`）和集合（命名为`points-of-interest`）\n* OpenAI API密钥\n* Gemini API密钥\n\n#### 部署步骤\n\n1. 配置所有必要凭证（Couchbase、OpenAI和Gemini）\n2. 为每个Couchbase向量节点选择对应的存储桶/作用域/集合\n3. 注入数据（可选方式）：\n   - 使用工作流内便签标注的cURL命令\n   - 运行[此Shell脚本](https://gist.github.com/ejscribner/355a46a0a383a4878e65e2230b92c6b5)注入6个景点数据\n4. 开启聊天界面测试旅行助手功能\n\n### 扩展建议\n\n* 可通过增强数据模型提升推荐精准度：例如添加价格区间、最佳游览季节、活动类型、住宿选项等字段，使大语言模型能给出更个性化的旅行建议\n* 本模板数据模型可自由重构，适用于各类RAG（检索增强生成）场景，不仅限于旅行推荐，可作为智能体应用的基础构建模块",
  "title_zh": "集成Couchbase向量搜索、Gemini 2.0 Flash与OpenAI的智能旅行规划助手",
  "publish_date_zh": "上次更新于11天前",
  "workflow_json_zh": "{\n  \"id\": \"iGAzT789R7Q1fOOE\",\n  \"meta\": {\n    \"instanceId\": \"7a1e9dd164c758cbdeb7cf88274e567a937a36ed99d4d22ff24b645841097c48\",\n    \"templateId\": \"3577\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Travel Planning Agent with Couchbase Vector Search, Gemini 2.0 Flash and OpenAI\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"0f361616-a552-43ed-9754-794780113955\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        380,\n        240\n      ],\n      \"webhookId\": \"c22b2240-ff07-44e5-a1aa-63584150a1cb\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"e8b9815d-0fe5-4e7c-a20b-1602384580cd\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        560,\n        480\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4b15997-de4d-4c78-b623-e936442134af\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1260,\n        280\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 800,\n        \"height\": 500,\n        \"content\": \"## 基于Couchbase的AI旅行助手\\n\\n### 准备工作：\\n1. 配置Gemini大语言模型的Google API凭证\\n2. 设置OpenAI嵌入节点的OpenAI凭证\\n3. 创建Couchbase集群（使用云端[Couchbase Capella](https://cloud.couchbase.com/)或Couchbase Server）\\n4. 添加具有相应操作权限的[数据库凭证](https://docs.couchbase.com/cloud/clusters/manage-database-users.html#create-database-credentials)\\n5. 为n8n实例配置[允许的IP地址](https://docs.couchbase.com/cloud/clusters/allow-ip-address.html)，测试阶段建议使用`0.0.0.0/0`\\n6. 创建存储桶、作用域和集合，推荐如下结构：\\n   - 存储桶：`travel-agent`\\n   - 作用域：`vectors`\\n   - 集合：`points-of-interest`\\n7. 进入数据工具，点击搜索标签页，选择导入搜索索引，上传[此JSON文件](https://gist.github.com/ejscribner/6f16343d4b44b1af31e8f344557814b0)\\n\\n完成配置后，需通过加载webhook发送数据点（参考示例）。\\n\\n这将在`points-of-interest`集合中生成向量化数据。\\n\\n当数据就绪后，可尝试向助手提问以测试响应，例如：\\\"哪里适合浪漫度假？\\\"\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"34866f8e-00b0-4706-82d7-491b9531a8b6\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        800,\n        1000\n      ],\n      \"webhookId\": \"3ca6fbdd-a157-4e9d-9042-237048da85b6\",\n      \"parameters\": {\n        \"path\": \"3ca6fbdd-a157-4e9d-9042-237048da85b6\",\n        \"options\": {\n          \"rawBody\": true\n        },\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"26d4e62a-42b0-4e09-8585-827e5bcc9fff\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        1180,\n        1360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"jsonData\": \"={{ $json.body.raw_body.point_of_interest.title }} - {{ $json.body.raw_body.point_of_interest.description }}\",\n        \"jsonMode\": \"expressionData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"63fc308f-4d1c-4d24-9b20-68d7e6c2dbba\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        1280,\n        1540\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"84f8c32b-8e0c-457c-aaec-17827042674d\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -60,\n        1060\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 460,\n        \"content\": \"## 通过CURL命令导入数据\\n\\n以下示例展示了如何在Webhook激活并准备接收请求后，向其中加载数据：\\n\\n```\\ncurl -X POST \\\"Webhook网址\\\" \\\\\\n  -H \\\"Content-Type: application/json\\\" \\\\\\n  -d '{\\n    \\\"raw_body\\\": {\\n      \\\"point_of_interest\\\": {\\n        \\\"title\\\": \\\"埃菲尔铁塔\\\",\\n        \\\"description\\\": \\\"位于法国巴黎战神广场的标志性镂空结构铁塔\\\"\\n      }\\n    }\\n  }'\\n```\\n\\n（请将\\\"Webhook网址\\\"替换为Webhook节点中列出的实际URL）\\n\\n如需批量插入六个数据点，可参考[此处的Shell脚本](https://gist.github.com/ejscribner/355a46a0a383a4878e65e2230b92c6b5)。运行脚本前请确保工作流已激活，并使用生产环境的Webhook URL。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b2cf8788-849c-4420-b448-bd49caa4941e\",\n      \"name\": \"Simple Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        720,\n        480\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"0bf7fef9-f999-42a8-a6a8-ab111fe9a084\",\n      \"name\": \"AI Travel Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        600,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"maxIterations\": 10,\n          \"systemMessage\": \"You are a helpful assistant for a trip planner. You have a vector search capability to locate points of interest, Use it and don't invent much.\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"3af3c8ce-582b-407c-847a-8063f9ad2e1a\",\n      \"name\": \"Retrieve docs with Couchbase Search Vector\",\n      \"type\": \"n8n-nodes-couchbase.vectorStoreCouchbaseSearch\",\n      \"position\": [\n        860,\n        500\n      ],\n      \"parameters\": {\n        \"mode\": \"retrieve-as-tool\",\n        \"topK\": 10,\n        \"options\": {},\n        \"toolName\": \"PointofinterestKB\",\n        \"embedding\": \"embedding\",\n        \"textFieldKey\": \"description\",\n        \"couchbaseScope\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        },\n        \"couchbaseBucket\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\"\n        },\n        \"toolDescription\": \"The list of Points of Interest from the database.\",\n        \"vectorIndexName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        },\n        \"couchbaseCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"77a4e857-607a-4bbc-a28d-8a715f9415d5\",\n      \"name\": \"Insert docs with Couchbase Search Vector\",\n      \"type\": \"n8n-nodes-couchbase.vectorStoreCouchbaseSearch\",\n      \"position\": [\n        1100,\n        1120\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"embedding\": \"embedding\",\n        \"textFieldKey\": \"description\",\n        \"couchbaseScope\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        },\n        \"couchbaseBucket\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\"\n        },\n        \"vectorIndexName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        },\n        \"embeddingBatchSize\": 1,\n        \"couchbaseCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"4c0274c3-6647-4f45-b7d4-d63cfe2102ea\",\n      \"name\": \"Generate OpenAI Embeddings using text-embedding-3-small\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        960,\n        740\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"83f864fa-a298-4738-a102-ca2d283377de\",\n      \"name\": \"Generate OpenAI Embeddings using text-embedding-3-small1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        1000,\n        1340\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"80e40e5a-35a3-4fa4-b90e-ac9d76897bbd\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Insert docs with Couchbase Search Vector\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simple Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Travel Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Insert docs with Couchbase Search Vector\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Travel Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Travel Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve docs with Couchbase Search Vector\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Travel Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate OpenAI Embeddings using text-embedding-3-small\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Retrieve docs with Couchbase Search Vector\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate OpenAI Embeddings using text-embedding-3-small1\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Insert docs with Couchbase Search Vector\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}