{
  "url": "https://n8n.io/workflows/4064-automated-daily-workflow-backup-to-github/",
  "title": "Automated daily workflow backup to GitHub",
  "author": "Hugo",
  "publish_date": "Last update 9 days ago",
  "publish_date_absolute": "2025-05-17",
  "categories": [
    {
      "name": "Engineering"
    },
    {
      "name": "DevOps"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"nodes\":[{\"id\":\"2aafc10f-0bb7-419f-a6b3-fa90f5f68653\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[100,-20],\"parameters\":{\"rule\":{\"interval\":[{}]}},\"typeVersion\":1.2},{\"id\":\"da87b4f8-4507-456b-bfc3-3ae7d9400449\",\"name\":\"Retrieve workflows\",\"type\":\"n8n-nodes-base.n8n\",\"position\":[580,-20],\"parameters\":{\"filters\":{},\"requestOptions\":{}},\"typeVersion\":1},{\"id\":\"6cd7d968-6fa0-4ab0-ac58-ceb15c8b7b4a\",\"name\":\"Aggregate\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[420,-20],\"parameters\":{\"options\":{},\"fieldsToAggregate\":{\"fieldToAggregate\":[{\"fieldToAggregate\":\"name\"}]}},\"typeVersion\":1},{\"id\":\"854f6e82-babb-474e-a138-2a6c398fd60e\",\"name\":\"List files from repo\",\"type\":\"n8n-nodes-base.github\",\"position\":[260,-20],\"webhookId\":\"354d699e-44b0-4444-9d31-af7fd4ff5561\",\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"\"},\"filePath\":\"=\",\"resource\":\"file\",\"operation\":\"list\",\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\"},\"authentication\":\"oAuth2\"},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"8abba016-1f34-420a-b10b-3c8e44297725\",\"name\":\"Update file\",\"type\":\"n8n-nodes-base.github\",\"position\":[1380,-100],\"webhookId\":\"27218087-8df7-474d-a39f-70cfa9c34ec8\",\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"\"},\"filePath\":\"={{ $('Retrieve workflows').item.json.name.replace(/\\\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json\",\"resource\":\"file\",\"operation\":\"edit\",\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\"},\"fileContent\":\"={{ $('To base64').item.json.data }}\",\"commitMessage\":\"=backup-{{ $('Commit date & file name').item.json.commitDate }}\",\"authentication\":\"oAuth2\"},\"typeVersion\":1},{\"id\":\"d55efcc7-5873-4c9a-b374-b7b31814905b\",\"name\":\"Upload file\",\"type\":\"n8n-nodes-base.github\",\"position\":[1380,60],\"webhookId\":\"ce4b561b-acb9-4cd8-b76f-4928dada9674\",\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"\"},\"filePath\":\"={{ $('Retrieve workflows').item.json.name.replace(/\\\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json\",\"resource\":\"file\",\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\"},\"fileContent\":\"={{ $('To base64').item.json.data }}\",\"commitMessage\":\"=backup-{{ $node['Commit date & file name'].json.commitDate }}\",\"authentication\":\"oAuth2\"},\"typeVersion\":1},{\"id\":\"09909c9f-8a68-4670-8396-65fae9be51ff\",\"name\":\"Check if file exists\",\"type\":\"n8n-nodes-base.if\",\"position\":[1220,-20],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $('Aggregate').item.json.name }}\",\"value2\":\"={{ $('Retrieve workflows').item.json.name.replace(/\\\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json\",\"operation\":\"contains\"}]}},\"typeVersion\":1},{\"id\":\"43990124-eac4-4c57-9da3-39053d9e5850\",\"name\":\"Json file\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[740,-20],\"parameters\":{\"mode\":\"each\",\"options\":{\"format\":true},\"operation\":\"toJson\"},\"typeVersion\":1.1},{\"id\":\"956de457-4d05-4ea8-be7b-390861a739d4\",\"name\":\"To base64\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[900,-20],\"parameters\":{\"options\":{},\"operation\":\"binaryToPropery\"},\"typeVersion\":1},{\"id\":\"fc258985-2621-42a3-9bc6-01048a92b702\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[240,-160],\"parameters\":{\"color\":5,\"width\":300,\"height\":380,\"content\":\"### Retrieve previous file names from Github\"},\"typeVersion\":1},{\"id\":\"1bfedd8f-1921-4f33-aa45-7ab612f26059\",\"name\":\"Commit date & file name\",\"type\":\"n8n-nodes-base.set\",\"position\":[1060,-20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"fe4a36ef-9f04-40e3-99bd-cc517a49b440\",\"name\":\"commitDate\",\"type\":\"string\",\"value\":\"={{ $now.format('dd-MM-yyyy/H:mm') }}\"},{\"id\":\"b0fe1bcc-e79c-4a6b-b8b4-44222c8bf4e8\",\"name\":\"fileName\",\"type\":\"string\",\"value\":\"={{ $('Retrieve workflows').item.json.name.replace(/\\\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json\"}]}},\"typeVersion\":3.4},{\"id\":\"2f36af66-12ca-451a-a1ca-c5a71b94b644\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,-160],\"parameters\":{\"color\":3,\"width\":460,\"height\":380,\"content\":\"### Retrieve and process workflows from n8n\"},\"typeVersion\":1},{\"id\":\"dc914f31-e6b5-43b0-8a4e-f9f46118fa30\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1040,-160],\"parameters\":{\"color\":4,\"width\":460,\"height\":380,\"content\":\"### Commit + edit/create files if needed\"},\"typeVersion\":1}],\"connections\":{\"Aggregate\":{\"main\":[[{\"node\":\"Retrieve workflows\",\"type\":\"main\",\"index\":0}]]},\"Json file\":{\"main\":[[{\"node\":\"To base64\",\"type\":\"main\",\"index\":0}]]},\"To base64\":{\"main\":[[{\"node\":\"Commit date & file name\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"List files from repo\",\"type\":\"main\",\"index\":0}]]},\"Retrieve workflows\":{\"main\":[[{\"node\":\"Json file\",\"type\":\"main\",\"index\":0}]]},\"Check if file exists\":{\"main\":[[{\"node\":\"Update file\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Upload file\",\"type\":\"main\",\"index\":0}]]},\"List files from repo\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0}]]},\"Commit date & file name\":{\"main\":[[{\"node\":\"Check if file exists\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow provides a robust solution for automatically backing up all your n8n workflows to a designated GitHub repository on a daily basis. By leveraging the n8n API and GitHub API, it ensures your workflows are version-controlled and securely stored, safeguarding against data loss and facilitating disaster recovery.\n\n### How it works\n\nThe automation follows these key steps:\n\n  1. **Scheduled trigger** : The workflow is initiated automatically every day at a pre-configured time.\n  2. **List existing backups** : It first connects to your GitHub repository to retrieve a list of already backed-up workflow files. This helps in determining whether a workflow's backup file needs to be created or updated.\n  3. **Retrieve n8n workflows** : The workflow then fetches all current workflows directly from your n8n instance using the n8n REST API.\n  4. **Process and prepare** : Each retrieved workflow is individually processed. Its data is converted into JSON format. This JSON content is then encoded to base64, a format suitable for GitHub API file operations.\n  5. **Commit to GitHub** : For each n8n workflow: \n     * A standardized filename is generated (e.g., `workflow-name-tag.json`).\n     * The workflow checks if a file with this name already exists in the GitHub repository (based on the list fetched in step 2).\n     * **If the file exists** : It updates the existing file with the latest version of the workflow.\n     * **If it's a new workflow (file doesn't exist)** : A new file is created in the repository.\n     * Each commit is timestamped for clarity.\n\n\n\nThis process ensures that you always have an up-to-date version of all your n8n workflows stored securely in your GitHub version control system, providing peace of mind and a reliable backup history.\n\n### Pre-requisites\n\nBefore you can use this template, please ensure you have the following:\n\n  * An active n8n instance (self-hosted or cloud).\n  * A GitHub account.\n  * A GitHub repository created where you want to store the workflow backups.\n  * A GitHub Personal Access Token with `repo` scope (or fine-grained token with read/write access to the specific backup repository). This token will be used for GitHub API authentication.\n  * n8n API credentials (API key) for your n8n instance.\n\n\n\n### Set up steps\n\nSetting up this workflow should take approximately 10-15 minutes if you have your credentials ready.\n\n  1. **Import the template** : Import this workflow into your n8n instance.\n  2. **Configure n8n API credentials** : \n     * Locate the \"Retrieve workflows\" node.\n     * In the \"Credentials\" section for \"n8n API\", create new credentials (or select existing ones).\n     * Enter your n8n instance URL and your n8n API Key (you can create your n8n api key in the settings of your n8n instance)\n  3. **Configure GitHub credentials** : \n     * Locate the \"List files from repo\" node (and subsequently \"Update file\" / \"Upload file\" nodes which will use the same credential).\n     * In the \"Credentials\" section for \"GitHub API\", create new credentials.\n     * Select OAuth2/Personal Access Token authentication method.\n     * Enter the GitHub Personal Access Token you generated as per the pre-requisites.\n  4. **Specify repository details** : \n     * In the \"List files from repo\", \"Update file\", and \"Upload file\" GitHub nodes: \n       * Set the `Owner`: Your GitHub username or organization name.\n       * Set the `Repository`: The name of your GitHub repository dedicated to backups.\n       * Set the `Branch` (e.g., `main` or `master`) where backups should be stored.\n       * (Optional) Specify a `Path` within the repository if you want backups in a specific folder (e.g., `n8n_backups/`). Leave blank to store in the root.\n  5. **Adjust schedule (Optional)** : \n     * Select the \"Schedule Trigger\" node.\n     * Modify the trigger interval (e.g., change the time of day or frequency) as needed. By default, it's set for a daily run.\n  6. **Activate the workflow** : Save and activate the workflow.\n\n\n\n### Explanation of nodes\n\nHere's a detailed breakdown of each node used in this workflow:\n\n  * **Schedule trigger**\n    * **Type** : `n8n-nodes-base.scheduleTrigger`\n    * **Purpose** : This node automatically starts the workflow based on a defined schedule (e.g., daily at midnight).\n  * **List files from repo**\n    * **Type** : `n8n-nodes-base.github`\n    * **Purpose** : Connects to your specified GitHub repository and lists all files, primarily to check for existing workflow backups.\n  * **Aggregate**\n    * **Type** : `n8n-nodes-base.aggregate`\n    * **Purpose** : Consolidates the list of file names obtained from the \"List files from repo\" node into a single item for easier lookup later in the \"Check if file exists\" node.\n  * **Retrieve workflows**\n    * **Type** : `n8n-nodes-base.n8n`\n    * **Purpose** : Uses the n8n API to fetch a list of all workflows currently present in your n8n instance.\n  * **Json file**\n    * **Type** : `n8n-nodes-base.convertToFile`\n    * **Purpose** : Takes the data of each workflow (retrieved by the \"Retrieve workflows\" node) and converts it into a structured JSON file format.\n  * **To base64**\n    * **Type** : `n8n-nodes-base.extractFromFile`\n    * **Purpose** : Converts the binary content of the JSON file (from the \"Json file\" node) into a base64 encoded string. This encoding is required by the GitHub API for file content.\n  * **Commit date & file name**\n    * **Type** : `n8n-nodes-base.set`\n    * **Purpose** : Prepares metadata for the GitHub commit. It generates: \n      * `commitDate`: The current date and time for the commit message.\n      * `fileName`: A standardized file name for the workflow backup (e.g., `my-workflow-vps-backups.json`), typically using the workflow's name and its first tag.\n  * **Check if file exists**\n    * **Type** : `n8n-nodes-base.if`\n    * **Purpose** : A conditional node. It checks if the `fileName` (generated by \"Commit date & file name\") is present in the list of files aggregated by the \"Aggregate\" node. This determines if the workflow backup already exists in GitHub.\n  * **Update file**\n    * **Type** : `n8n-nodes-base.github`\n    * **Purpose** : If the \"Check if file exists\" node determines the file _does_ exist, this node updates that existing file in your GitHub repository with the latest workflow content (base64 encoded) and a commit message.\n  * **Upload file**\n    * **Type** : `n8n-nodes-base.github`\n    * **Purpose** : If the \"Check if file exists\" node determines the file _does not_ exist, this node creates and uploads a new file to your GitHub repository with the workflow content and a commit message.\n\n\n\n### Customization\n\nHere are a few ways you can customize this template to better fit your needs:\n\n  * **Backup path** : In the GitHub nodes (\"List files from repo\", \"Update file\", \"Upload file\"), you can specify a `Path` parameter to store backups in a specific folder within your repository (e.g., `workflows/` or `daily_backups/`).\n  * **Filename convention** : Modify the \"Commit date & file name\" node (specifically the expression for `fileName`) to change how backup files are named. For example, you might want to include the workflow ID or a different date format.\n  * **Commit messages** : Customize the commit messages in the \"Update file\" and \"Upload file\" GitHub nodes to include more specific information if needed.\n  * **Error handling** : Consider adding error handling branches (e.g., using the \"Error Trigger\" node or checking for node execution failures) to notify you if a backup fails for any reason.\n  * **Filtering workflows** : If you only want to back up specific workflows (e.g., those with a particular tag or name pattern), you can add a \"Filter\" node after \"Retrieve workflows\" to include only the desired workflows in the backup process.\n  * **Backup frequency** : Adjust the \"Schedule Trigger\" node to change how often the backup runs (e.g., hourly, weekly, or on specific days).\n\n\n\nTemplate was created in n8n `v1.92.2`\n",
  "crawled_at": "2025-05-26T06:25:38.463731",
  "readme_zh": "该工作流提供了一套自动化解决方案，能够每日将您的所有n8n工作流备份至指定GitHub仓库。通过整合n8n API与GitHub API，确保您的工作流实现版本控制与安全存储，有效防范数据丢失并简化灾难恢复流程。\n\n### 运作原理\n\n本自动化流程包含以下关键步骤：\n\n1. **定时触发**：每日在预设时间自动启动工作流\n2. **备份清单获取**：首先连接GitHub仓库，获取已备份工作流文件列表，用于判断后续需新建还是更新文件\n3. **工作流抓取**：通过n8n REST API从您的n8n实例获取当前所有工作流\n4. **数据处理**：对每个工作流进行独立处理，将其转换为JSON格式后编码为base64（GitHub API文件操作的标准格式）\n5. **提交至GitHub**：\n   * 生成标准化文件名（如`工作流名称-标签.json`）\n   * 核对该文件是否已存在于仓库（基于步骤2获取的清单）\n   * **文件存在**：更新现有文件为最新版本\n   * **新工作流**：在仓库创建新文件\n   * 每次提交均附带时间戳标记\n\n该流程确保您的所有n8n工作流都能实时更新至GitHub版本控制系统，提供完整的备份历史与安全保障。\n\n### 前置准备\n\n使用本模板前请确保满足以下条件：\n\n* 运行中的n8n实例（自托管或云端）\n* GitHub账户\n* 用于存储备份的GitHub仓库\n* 具有`repo`权限的GitHub个人访问令牌（或对指定仓库具备读写权限的细粒度令牌），用于API认证\n* n8n实例的API密钥凭证\n\n### 配置步骤\n\n若凭证已就绪，配置约需10-15分钟：\n\n1. **导入模板**：将本工作流导入n8n实例\n2. **配置n8n API凭证**：\n   * 定位\"获取工作流\"节点\n   * 在\"n8n API\"凭证处新建或选择现有凭证\n   * 输入n8n实例URL及API密钥（可在n8n实例设置中创建）\n3. **配置GitHub凭证**：\n   * 定位\"列出仓库文件\"节点（后续\"更新文件\"/\"上传文件\"节点将共用此凭证）\n   * 在\"GitHub API\"凭证处新建凭证\n   * 选择OAuth2/个人访问令牌认证方式\n   * 输入预先生成的访问令牌\n4. **指定仓库详情**：\n   * 在GitHub相关节点中设置：\n     * `所有者`：GitHub用户名或组织名\n     * `仓库`：备份专用仓库名称\n     * `分支`：备份存储分支（如`main`或`master`）\n     * （可选）`路径`：指定子文件夹路径（如`n8n_backups/`），留空则存储至根目录\n5. **调整计划（可选）**：\n   * 修改\"定时触发器\"节点的执行频率（默认每日执行）\n6. **激活工作流**：保存并启用\n\n### 节点详解\n\n核心节点功能说明：\n\n* **定时触发器**：\n  - 类型：`scheduleTrigger`\n  - 功能：按预设计划（如每日零点）自动触发工作流\n* **列出仓库文件**：\n  - 类型：`github`\n  - 功能：获取GitHub仓库现有文件列表用于比对\n* **数据聚合**：\n  - 类型：`aggregate`\n  - 功能：整合文件列表为单一条目便于查询\n* **获取工作流**：\n  - 类型：`n8n`\n  - 功能：通过API获取n8n实例中所有工作流\n* **JSON转换**：\n  - 类型：`convertToFile`\n  - 功能：将工作流数据转为JSON文件格式\n* **Base64编码**：\n  - 类型：`extractFromFile`\n  - 功能：将JSON内容编码为GitHub API要求的base64格式\n* **提交信息生成**：\n  - 类型：`set`\n  - 功能：生成带时间戳的提交消息及标准化文件名（含工作流名称与首标签）\n* **文件存在检查**：\n  - 类型：`if`\n  - 功能：判断当前工作流是否已有备份文件\n* **文件更新/上传**：\n  - 类型：`github`\n  - 功能：根据检查结果执行文件更新或新建操作\n\n### 定制选项\n\n推荐定制方式：\n\n* **存储路径**：在GitHub节点中指定`路径`参数实现分类存储\n* **命名规则**：修改\"提交信息生成\"节点中的文件名生成逻辑\n* **提交信息**：自定义GitHub节点的提交描述\n* **错误处理**：添加错误触发节点实现失败通知\n* **工作流筛选**：通过\"过滤\"节点实现指定标签/名称模式的工作流备份\n* **执行频率**：调整定时触发器设置变更备份周期\n\n本模板基于n8n `v1.92.2`版本创建",
  "title_zh": "每日工作流自动备份至GitHub",
  "publish_date_zh": "最后更新于2天前",
  "workflow_json_zh": "{\"nodes\":[{\"id\":\"2aafc10f-0bb7-419f-a6b3-fa90f5f68653\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[100,-20],\"parameters\":{\"rule\":{\"interval\":[{}]}},\"typeVersion\":1.2},{\"id\":\"da87b4f8-4507-456b-bfc3-3ae7d9400449\",\"name\":\"Retrieve workflows\",\"type\":\"n8n-nodes-base.n8n\",\"position\":[580,-20],\"parameters\":{\"filters\":{},\"requestOptions\":{}},\"typeVersion\":1},{\"id\":\"6cd7d968-6fa0-4ab0-ac58-ceb15c8b7b4a\",\"name\":\"Aggregate\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[420,-20],\"parameters\":{\"options\":{},\"fieldsToAggregate\":{\"fieldToAggregate\":[{\"fieldToAggregate\":\"name\"}]}},\"typeVersion\":1},{\"id\":\"854f6e82-babb-474e-a138-2a6c398fd60e\",\"name\":\"List files from repo\",\"type\":\"n8n-nodes-base.github\",\"position\":[260,-20],\"webhookId\":\"354d699e-44b0-4444-9d31-af7fd4ff5561\",\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"\"},\"filePath\":\"=\",\"resource\":\"file\",\"operation\":\"list\",\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\"},\"authentication\":\"oAuth2\"},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"8abba016-1f34-420a-b10b-3c8e44297725\",\"name\":\"Update file\",\"type\":\"n8n-nodes-base.github\",\"position\":[1380,-100],\"webhookId\":\"27218087-8df7-474d-a39f-70cfa9c34ec8\",\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"\"},\"filePath\":\"={{ $('Retrieve workflows').item.json.name.replace(/\\\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json\",\"resource\":\"file\",\"operation\":\"edit\",\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\"},\"fileContent\":\"={{ $('To base64').item.json.data }}\",\"commitMessage\":\"=backup-{{ $('Commit date & file name').item.json.commitDate }}\",\"authentication\":\"oAuth2\"},\"typeVersion\":1},{\"id\":\"d55efcc7-5873-4c9a-b374-b7b31814905b\",\"name\":\"Upload file\",\"type\":\"n8n-nodes-base.github\",\"position\":[1380,60],\"webhookId\":\"ce4b561b-acb9-4cd8-b76f-4928dada9674\",\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"\"},\"filePath\":\"={{ $('Retrieve workflows').item.json.name.replace(/\\\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json\",\"resource\":\"file\",\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\"},\"fileContent\":\"={{ $('To base64').item.json.data }}\",\"commitMessage\":\"=backup-{{ $node['Commit date & file name'].json.commitDate }}\",\"authentication\":\"oAuth2\"},\"typeVersion\":1},{\"id\":\"09909c9f-8a68-4670-8396-65fae9be51ff\",\"name\":\"Check if file exists\",\"type\":\"n8n-nodes-base.if\",\"position\":[1220,-20],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $('Aggregate').item.json.name }}\",\"value2\":\"={{ $('Retrieve workflows').item.json.name.replace(/\\\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json\",\"operation\":\"contains\"}]}},\"typeVersion\":1},{\"id\":\"43990124-eac4-4c57-9da3-39053d9e5850\",\"name\":\"Json file\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[740,-20],\"parameters\":{\"mode\":\"each\",\"options\":{\"format\":true},\"operation\":\"toJson\"},\"typeVersion\":1.1},{\"id\":\"956de457-4d05-4ea8-be7b-390861a739d4\",\"name\":\"To base64\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[900,-20],\"parameters\":{\"options\":{},\"operation\":\"binaryToPropery\"},\"typeVersion\":1},{\"id\":\"fc258985-2621-42a3-9bc6-01048a92b702\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[240,-160],\"parameters\":{\"color\":5,\"width\":300,\"height\":380,\"content\":\"### 从Github检索之前的文件名\"},\"typeVersion\":1},{\"id\":\"1bfedd8f-1921-4f33-aa45-7ab612f26059\",\"name\":\"Commit date & file name\",\"type\":\"n8n-nodes-base.set\",\"position\":[1060,-20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"fe4a36ef-9f04-40e3-99bd-cc517a49b440\",\"name\":\"commitDate\",\"type\":\"string\",\"value\":\"={{ $now.format('dd-MM-yyyy/H:mm') }}\"},{\"id\":\"b0fe1bcc-e79c-4a6b-b8b4-44222c8bf4e8\",\"name\":\"fileName\",\"type\":\"string\",\"value\":\"={{ $('Retrieve workflows').item.json.name.replace(/\\\\s+/g, '-').toLowerCase() }}-{{ $('Retrieve workflows').item.json.tags[0].name }}.json\"}]}},\"typeVersion\":3.4},{\"id\":\"2f36af66-12ca-451a-a1ca-c5a71b94b644\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,-160],\"parameters\":{\"color\":3,\"width\":460,\"height\":380,\"content\":\"### 从n8n检索并处理工作流程\"},\"typeVersion\":1},{\"id\":\"dc914f31-e6b5-43b0-8a4e-f9f46118fa30\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1040,-160],\"parameters\":{\"color\":4,\"width\":460,\"height\":380,\"content\":\"提交 + 根据需要编辑/创建文件\"},\"typeVersion\":1}],\"connections\":{\"Aggregate\":{\"main\":[[{\"node\":\"Retrieve workflows\",\"type\":\"main\",\"index\":0}]]},\"Json file\":{\"main\":[[{\"node\":\"To base64\",\"type\":\"main\",\"index\":0}]]},\"To base64\":{\"main\":[[{\"node\":\"Commit date & file name\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"List files from repo\",\"type\":\"main\",\"index\":0}]]},\"Retrieve workflows\":{\"main\":[[{\"node\":\"Json file\",\"type\":\"main\",\"index\":0}]]},\"Check if file exists\":{\"main\":[[{\"node\":\"Update file\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Upload file\",\"type\":\"main\",\"index\":0}]]},\"List files from repo\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0}]]},\"Commit date & file name\":{\"main\":[[{\"node\":\"Check if file exists\",\"type\":\"main\",\"index\":0}]]}}}"
}