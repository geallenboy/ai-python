{
  "url": "https://n8n.io/workflows/2319-better-oauth20-workflow-for-pipedrive-crm-with-supabase/",
  "title": "Better Oauth2.0 workflow for Pipedrive CRM with Supabase",
  "author": "Priya Jain",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "Sales"
    },
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "",
  "readme": "This workflow provides an OAuth 2.0 auth token refresh process for better control. Developers can utilize it as an alternative to n8n's built-in OAuth flow to achieve improved control and visibility. In this template, I've used [Pipedrive API](https://developers.pipedrive.com/docs/api/v1/Oauth#get-tokens), but users can apply it with any app that requires the authorization_code for token access.\n\nThis resolves the issue of manually refreshing the OAuth 2.0 token when it expires, or when n8n's native OAuth stops working.\n\n## What you need to replicate this\n\n  1. Your database with a pre-existing table for storing authentication tokens and associated information. I'm using Supabase in this example, but you can also employ a self-hosted MySQL.\n\n\n\nHere's a [quick video](https://go.screenpal.com/watch/cZiXhEV8N0y) on setting up the Supabase table.\n\n  1. Create a client app for your chosen application that you want to access via the API.\n\n  2. After duplicating the template:\n\n\n\n\na. Add credentials to your database and connect the DB nodes in all 3 workflows.\n\n  1. Enable/Publish the first workflow, \"1. Generate and Save Pipedrive tokens to Database.\"\n\n  2. Open your client app and follow the Pipedrive instructions to authenticate.\n\n\n\n\nClick on [Install and test](https://www.awesomescreenshot.com/image/49321214?key=886672146f2ba1b1482d43a625b72f10).\n\nThis will save your initial refresh token and access token to the database.\n\n  1. Please watch the [YouTube video](https://youtu.be/6nXi_yverss) for a detailed demonstration of the workflow:\n\n\n\n## How it operates\n\n**Workflow 1**. Create a workflow to capture the authorization_code, generate the access_token, and refresh the token, and then save the token to the database.\n\n**Workflow 2**. Develop your primary workflow to fetch or post data to/from your application. Observe the logic to include an if condition when an error occurs with an invalid token. This triggers the third workflow to refresh the token.\n\n**Workflow 3**. This workflow will handle the token refresh. Remember to send the unique ID to the webhook to fetch the necessary tokens from your table.\n\nDetailed demonstration of the workflow:  \n<https://youtu.be/6nXi_yverss>\n",
  "crawled_at": "2025-05-25T23:28:40.549734",
  "readme_zh": "该工作流提供了一种OAuth 2.0授权令牌刷新流程，以实现更精细的控制。开发者可将其作为n8n内置OAuth流程的替代方案，从而获得更好的控制力和可见性。本模板采用[Pipedrive API](https://developers.pipedrive.com/docs/api/v1/Oauth#get-tokens)演示，但用户可将其应用于任何需要authorization_code获取令牌的应用。\n\n此方案解决了OAuth 2.0令牌过期时需手动刷新，或n8n原生OAuth功能失效的问题。\n\n## 复现所需条件\n\n1. 需准备已存有认证令牌及相关信息的数据表。本示例使用Supabase，您也可采用自托管MySQL数据库。\n\n[点击观看Supabase数据表配置视频](https://go.screenpal.com/watch/cZiXhEV8N0y)\n\n2. 为待接入API的应用创建客户端应用\n\n3. 复制模板后：\n   \n   a. 将数据库凭证添加至三个工作流的所有数据库节点\n\n4. 启用/发布首个工作流\"1. 生成并存储Pipedrive令牌至数据库\"\n\n5. 打开客户端应用，按Pipedrive指引完成认证\n\n点击[安装并测试](https://www.awesomescreenshot.com/image/49321214?key=886672146f2ba1b1482d43a625b72f10)\n\n此时初始刷新令牌和访问令牌将存入数据库\n\n6. 观看[YouTube视频](https://youtu.be/6nXi_yverss)了解工作流详细演示：\n\n## 运行原理\n\n**工作流1**：创建捕获authorization_code、生成access_token并刷新令牌的流程，最终将令牌存储至数据库\n\n**工作流2**：开发主工作流以从应用获取/提交数据。注意需包含错误处理逻辑——当令牌失效时触发条件判断，进而激活第三个工作流进行令牌刷新\n\n**工作流3**：专用于处理令牌刷新。切记通过webhook发送唯一ID以从数据表获取对应令牌\n\n工作流详细演示：  \n<https://youtu.be/6nXi_yverss>",
  "title_zh": "为Pipedrive CRM与Supabase优化的Oauth2.0工作流",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"id\": \"IYgbtNpyB4E6Jbxo\",\n  \"meta\": {\n    \"instanceId\": \"35ae520798f87e479496aa54e1a1f89ffdf43eee77986511d08258a12b1edc98\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"2. Refresh Pipedrive tokens\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"2b66edcd-c71a-4dac-971f-deb1b09ef85b\",\n      \"name\": \"Stop and Error\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        1460,\n        -80\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"Token refresh failed\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"b48d6760-766e-4b39-be35-89de7dc3ab5e\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        60,\n        -300\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 872,\n        \"height\": 97,\n        \"content\": \"## 第二步：\\n创建一个工作流程，用于在访问令牌需要刷新时更新您的访问令牌。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6119eef3-9ffa-45a1-b238-412738e7529e\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        -80\n      ],\n      \"parameters\": {\n        \"height\": 211,\n        \"content\": \"发布唯一数据以标识数据库中的行，并能够获取现有的访问令牌和刷新令牌\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2d76be21-95e1-4747-b761-126b133e8264\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        980,\n        -220\n      ],\n      \"parameters\": {\n        \"content\": \"## 从Pipedrive获取令牌\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9a44eb63-9d31-4b24-9171-1f9a828a5c52\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        -740\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 995,\n        \"height\": 82,\n        \"content\": \"## 第一步：\\n在用户认证并安装应用时，将刷新令牌和访问令牌保存至数据库。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f3247e6a-7c1c-4479-9f83-f3bc4146f254\",\n      \"name\": \"Insert\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        1600,\n        -660\n      ],\n      \"parameters\": {\n        \"tableId\": \"App_tok\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ref_token\",\n              \"fieldValue\": \"={{ $node[\\\"Generate Refresh Token from authcode\\\"].json[\\\"body\\\"][\\\"refresh_token\\\"] }}\"\n            },\n            {\n              \"fieldId\": \"acc_token\",\n              \"fieldValue\": \"={{ $node[\\\"Generate Refresh Token from authcode\\\"].json[\\\"body\\\"][\\\"access_token\\\"] }}\"\n            },\n            {\n              \"fieldId\": \"Platform\",\n              \"fieldValue\": \"Pipedrive\"\n            },\n            {\n              \"fieldId\": \"created_at\",\n              \"fieldValue\": \"={{$now.toUTC().toString()}}\"\n            },\n            {\n              \"fieldId\": \"updated_at\",\n              \"fieldValue\": \"={{$now.toUTC().toString()}}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"tlmP1CXY3ExzjJDs\",\n          \"name\": \"Supabase Automation\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f7ad45d0-7055-45f4-9971-031ffebfdbda\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        500,\n        -640\n      ],\n      \"parameters\": {\n        \"content\": \"你也可以像第二步那样使用 SET NODE + tobase64 函数。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e14e2dac-e84b-475f-a01b-14bb723eedc8\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        200\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 1644,\n        \"height\": 80,\n        \"content\": \"## 第三步：\\n发起实际API调用。本示例中使用的是搜索联系人接口，请根据您的具体需求参考Pipedrive API文档进行操作。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b450c928-e0e4-4f49-829e-03b61828d4d9\",\n      \"name\": \"Get Pipedrive Token\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        600,\n        660\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"Platform\",\n              \"keyValue\": \"Pipedrive\"\n            },\n            {\n              \"keyName\": \"AppId\",\n              \"keyValue\": \"57db0bab2932f657\"\n            }\n          ]\n        },\n        \"tableId\": \"App_tok\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"tlmP1CXY3ExzjJDs\",\n          \"name\": \"Supabase Automation\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f92a957a-d0ef-4037-8657-74e7fe74fe6d\",\n      \"name\": \"Get contact from Pipedrive\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        900,\n        660\n      ],\n      \"parameters\": {\n        \"url\": \"=https://priyajain-sandbox.pipedrive.com/api/v2/persons/search?fields=email&term={{ $node[\\\"Receive request\\\"].json[\\\"body\\\"][\\\"person\\\"][\\\"email\\\"] }}\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          }\n        },\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"application/json\"\n            },\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $node[\\\"Get Pipedrive Token\\\"].json[\\\"acc_token\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4,\n      \"continueOnFail\": true,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"bff21156-3da0-4cf3-b3de-c24d8abe7577\",\n      \"name\": \"Access Token Invalid\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1160,\n        700\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{ $json[\\\"error\\\"][\\\"message\\\"].includes(\\\"Invalid token: access token is invalid\\\") }}\",\n              \"value2\": \"={{ true }}\"\n            }\n          ]\n        },\n        \"combineOperation\": \"any\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9fd832b1-2af9-48c2-9d57-86a9f34bdd78\",\n      \"name\": \"Success\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1440,\n        720\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={{ $node[\\\"Get contact from Pipedrive\\\"].json[\\\"body\\\"][\\\"data\\\"][\\\"items\\\"][\\\"0\\\"][\\\"item\\\"][\\\"name\\\"] }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"daf33b32-ff7b-4d7e-8fd0-d54dfaddf405\",\n      \"name\": \"Refresh Access Token\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1360,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"http://localhost:5678/webhook/937a8843-a28a-400a-b473-bdc598366fa0\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"{\\n\\n  \\\"appId\\\":\\\"57db0bab2932f657\\\"\\n\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"E2RYFiR9PotuglZv\",\n          \"name\": \"PJ demo\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"6759a890-6c2a-4bb1-aae9-9b8723b9e143\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        580,\n        420\n      ],\n      \"parameters\": {\n        \"width\": 668,\n        \"content\": \"## 循环获取更新后的访问令牌\\n### 注意：\\n您可以根据实际需求添加更多条件，并使用Switch语句替代IF来验证API响应。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d975ce9f-2ef2-46b1-9d30-4f6e06e19b7e\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        120,\n        -960\n      ],\n      \"parameters\": {\n        \"width\": 1413,\n        \"content\": \"## 1. This workflow helps you create your own Oauth 2.0 token refresh system. It helps you have better control of your oauth 2.0 auth process.\\n## 2. I am using Pipedrive API here. However, you can re-use this for other similar applications. \"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"40d59a94-563d-459c-91d0-4206c2a19704\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        180,\n        580\n      ],\n      \"parameters\": {\n        \"height\": 248,\n        \"content\": \"第三方应用程序向webhook发送请求\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"03945766-570c-47db-82c6-2c973e45106d\",\n      \"name\": \"convert clientId and secret to base64\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        560,\n        -560\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\\nconst client_id = \\\"57db0bab2932f657\\\";\\nconst client_secret = \\\"edfaba095e9e7ddefe2e960ce2e98345230a016d\\\";\\n\\n// Combine client_id and client_secret with a colon\\nconst combinedString = client_id+\\\":\\\"+client_secret;\\n\\n// Encode the combined string in Base64\\nconst encodedString = Buffer.from(combinedString).toString('base64');\\n\\n// Create the Authorization header value\\nconst authorizationHeader = `Basic ${encodedString}`;\\n\\nreturn {\\\"authheader\\\":authorizationHeader};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8ca6eb93-6994-4536-b61e-d884c8515929\",\n      \"name\": \"Generate Refresh Token from authcode\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"maxTries\": 2,\n      \"position\": [\n        820,\n        -560\n      ],\n      \"parameters\": {\n        \"url\": \"https://oauth.pipedrive.com/oauth/token\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          }\n        },\n        \"sendBody\": true,\n        \"contentType\": \"form-urlencoded\",\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"grant_type\",\n              \"value\": \"authorization_code\"\n            },\n            {\n              \"name\": \"code\",\n              \"value\": \"={{$node[\\\"catch Auth code\\\"].json[\\\"query\\\"][\\\"code\\\"]}}\"\n            },\n            {\n              \"name\": \"redirect_uri\",\n              \"value\": \"={{ $node[\\\"catch Auth code\\\"].json[\\\"webhookUrl\\\"] }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"={{$node[\\\"convert clientId and secret to base64\\\"].json[\\\"authheader\\\"]}}\"\n            }\n          ]\n        }\n      },\n      \"retryOnFail\": false,\n      \"typeVersion\": 4,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"9c1b22e1-fd50-4c70-91cf-f4ea8cc7d3ac\",\n      \"name\": \"Look for the related record in Supabase\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        1060,\n        -540\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"Platform\",\n              \"keyValue\": \"Pipedrive\"\n            }\n          ]\n        },\n        \"tableId\": \"App_tok\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"tlmP1CXY3ExzjJDs\",\n          \"name\": \"Supabase Automation\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"53602a58-d47a-4133-b9ec-4ea421a75eea\",\n      \"name\": \"IF rec not found\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1260,\n        -540\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"number\": [\n            {\n              \"value1\": \"={{ $json.values().length }}\",\n              \"operation\": \"equal\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"38e5d91c-1bea-4f7a-8336-98748005d02e\",\n      \"name\": \"Update tokns in the record\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        1600,\n        -460\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"Platform\",\n              \"keyValue\": \"Pipedrive\",\n              \"condition\": \"eq\"\n            }\n          ]\n        },\n        \"tableId\": \"App_tok\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"acc_token\",\n              \"fieldValue\": \"={{ $node[\\\"Generate Refresh Token from authcode\\\"].json[\\\"body\\\"][\\\"access_token\\\"] }}\"\n            },\n            {\n              \"fieldId\": \"ref_token\",\n              \"fieldValue\": \"={{ $node[\\\"Generate Refresh Token from authcode\\\"].json[\\\"body\\\"][\\\"refresh_token\\\"] }}\"\n            },\n            {\n              \"fieldId\": \"updated_at\",\n              \"fieldValue\": \"={{$now.toUTC().toString()}}\"\n            }\n          ]\n        },\n        \"matchType\": \"allFilters\",\n        \"operation\": \"update\"\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"tlmP1CXY3ExzjJDs\",\n          \"name\": \"Supabase Automation\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"43a2613d-7793-48c9-8934-57d9b713f5fe\",\n      \"name\": \"Supabase- look for the record\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        600,\n        -140\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"Platform\",\n              \"keyValue\": \"Pipedrive\"\n            },\n            {\n              \"keyName\": \"AppId\",\n              \"keyValue\": \"={{ $node[\\\"Webhook\\\"].json[\\\"body\\\"][\\\"appId\\\"] }}\"\n            }\n          ]\n        },\n        \"tableId\": \"App_tok\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"tlmP1CXY3ExzjJDs\",\n          \"name\": \"Supabase Automation\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"366bd343-419c-4a77-b2ce-e6124a6cc291\",\n      \"name\": \"combine client id and secret\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        840,\n        -140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"4330b857-6184-4ad8-82dc-a8b806ab8077\",\n              \"name\": \"authheader\",\n              \"type\": \"string\",\n              \"value\": \"57db0bab2932f657:edfaba095e9e7ddefe2e960ce2e98345230a016d\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"156acb8f-3a23-40ec-b011-9db8bfa6d98b\",\n      \"name\": \"Get Pipedrive acess token\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1060,\n        -140\n      ],\n      \"parameters\": {\n        \"url\": \"https://oauth.pipedrive.com/oauth/token\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"form-urlencoded\",\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"grant_type\",\n              \"value\": \"refresh_token\"\n            },\n            {\n              \"name\": \"refresh_token\",\n              \"value\": \"={{ $node[\\\"Supabase- look for the record\\\"].json[\\\"ref_token\\\"] }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Basic {{ $json[\\\"authheader\\\"].base64Encode() }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3e20309e-6d50-444c-b9e1-cf6d6982e546\",\n      \"name\": \"IF success\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1240,\n        -140\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ Object.keys($input.first().json)[0]}}\",\n              \"value2\": \"access_token\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1e991aa7-9888-404d-8f80-bb6ce0a3b777\",\n      \"name\": \"Update thr row with new access token\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"position\": [\n        1420,\n        -280\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"Platform\",\n              \"keyValue\": \"Pipedrive\",\n              \"condition\": \"eq\"\n            }\n          ]\n        },\n        \"tableId\": \"App_tok\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"acc_token\",\n              \"fieldValue\": \"={{ $node[\\\"Get Pipedrive acess token\\\"].json[\\\"access_token\\\"] }}\"\n            },\n            {\n              \"fieldId\": \"ref_token\",\n              \"fieldValue\": \"={{ $node[\\\"Get Pipedrive acess token\\\"].json[\\\"refresh_token\\\"] }}\"\n            }\n          ]\n        },\n        \"matchType\": \"allFilters\",\n        \"operation\": \"update\"\n      },\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"tlmP1CXY3ExzjJDs\",\n          \"name\": \"Supabase Automation\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"d0989bad-9176-44a2-86ce-db07a5e8a34c\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        340,\n        -140\n      ],\n      \"webhookId\": \"937a8843-a28a-400a-b473-bdc598366fa0\",\n      \"parameters\": {\n        \"path\": \"937a8843-a28a-400a-b473-bdc598366fa0\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"lastNode\",\n        \"authentication\": \"basicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"E2RYFiR9PotuglZv\",\n          \"name\": \"PJ demo\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"108a2ea1-de2a-4df3-9d9f-0ce1b27a52e9\",\n      \"name\": \"Receive request\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        280,\n        680\n      ],\n      \"webhookId\": \"47704458-bfa6-4d95-adf1-97fc78e35d8a\",\n      \"parameters\": {\n        \"path\": \"47704458-bfa6-4d95-adf1-97fc78e35d8a\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\",\n        \"authentication\": \"basicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"E2RYFiR9PotuglZv\",\n          \"name\": \"PJ demo\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f983cfd1-52db-4839-88af-6386ec7c7256\",\n      \"name\": \"catch Auth code\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        300,\n        -560\n      ],\n      \"webhookId\": \"aae545fb-a69d-4e20-91ce-65f105d0ea2f\",\n      \"parameters\": {\n        \"path\": \"aae545fb-a69d-4e20-91ce-65f105d0ea2f\",\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"Receive request\": [\n      {\n        \"json\": {\n          \"body\": {\n            \"person\": {\n              \"email\": \"priya+solar@psw.com\"\n            }\n          },\n          \"query\": {},\n          \"params\": {},\n          \"headers\": {\n            \"host\": \"http://localhost:5678\",\n            \"accept\": \"*/*\",\n            \"user-agent\": \"PostmanRuntime/7.39.0\",\n            \"content-type\": \"application/json\",\n            \"authorization\": \"Basic xxxxxxx==\",\n            \"cache-control\": \"no-cache\",\n            \"postman-token\": \"41b79257-xxxx-xxxx-xxxx-9e004cae4e9e\",\n            \"content-length\": \"52\",\n            \"accept-encoding\": \"gzip, deflate, br\",\n            \"x-forwarded-for\": \"54.86.50.139\",\n            \"x-forwarded-host\": \"localhost:5678\",\n            \"x-forwarded-proto\": \"https\"\n          },\n          \"webhookUrl\": \"http://localhost:5678/webhook-test/47704458-bfa6-4d95-adf1-97fc78e35d8a\",\n          \"executionMode\": \"test\"\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true\n  },\n  \"versionId\": \"54499ed8-4677-400a-9e03-d0d84f8a97b5\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Supabase- look for the record\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF success\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update thr row with new access token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Stop and Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receive request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Pipedrive Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"catch Auth code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"convert clientId and secret to base64\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF rec not found\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Insert\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Update tokns in the record\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Pipedrive Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get contact from Pipedrive\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Access Token Invalid\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Refresh Access Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Success\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Refresh Access Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Pipedrive Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Pipedrive acess token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF success\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get contact from Pipedrive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Access Token Invalid\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"combine client id and secret\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Pipedrive acess token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Supabase- look for the record\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"combine client id and secret\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Refresh Token from authcode\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Look for the related record in Supabase\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"convert clientId and secret to base64\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Refresh Token from authcode\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Look for the related record in Supabase\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF rec not found\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}