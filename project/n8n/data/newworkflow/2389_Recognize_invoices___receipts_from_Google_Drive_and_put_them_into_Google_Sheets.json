{
  "url": "https://n8n.io/workflows/2389-recognize-invoices-receipts-from-google-drive-and-put-them-into-google-sheets/",
  "title": "Recognize invoices / receipts from Google Drive and put them into Google Sheets",
  "author": "Anthony",
  "publish_date": "Last update 8 months ago",
  "publish_date_absolute": "2024-09-25",
  "categories": [
    {
      "name": "Finance"
    }
  ],
  "workflow_json": "{\"id\":\"dVDyWWhO5FdPM3qx\",\"meta\":{\"instanceId\":\"5b860a91d7844b5237bb51cc58691ca8c3dc5b576f42d4d6bbedfb8d43d58ece\",\"templateCredsSetupCompleted\":true},\"name\":\"OCR receipts from Google Drive\",\"tags\":[],\"nodes\":[{\"id\":\"0794d7e7-196f-46a6-b3cf-85faa436e21e\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[660,200],\"parameters\":{},\"typeVersion\":1},{\"id\":\"94342020-7019-4565-8f18-5ca3d3512f80\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1320,660],\"parameters\":{\"width\":1120.9554973821976,\"height\":1062.9450261780098,\"content\":\"# Recognize invoices and convert them into structured JSON\\n## Video Demo\\nhttps://youtu.be/mGPt7fqGQD8\\n\\n## Quick OCR playground\\n### 1. Get your OakPDF OCR API key here:\\nhttps://rapidapi.com/restyler/api/receipt-and-invoice-ocr-api\\n\\n### 2. Poceed to the OCR Playground and upload your document or use example files:\\nhttps://ocr.oakpdf.com/ \\n\\n\\n**The API can recognize any document format: medical, financial, legal -- let me know which format you want to try and I will be happy to add it to the Playground!**\\n\\n## Running the n8n Workflow\\nThis workflow allows you to recognize a folder with receipts or invoices (make sure your files are in .pdf, .png, or .jpg format). The workflow can be triggered via the \\\"Test workflow\\\" button, and it also monitors the folder for new files, automatically recognizing them.\\n\\n### 1. n8n import glitch\\nAfter import, the trigger node \\\"When clicking 'Test workflow'\\\" might be disconnected. You need to connect it via 2 arrows to \\\"Google Sheets1\\\" and \\\"Google Drive\\\" nodes. So, the workflow has 2 triggers - via button, and via Google Sheets \\\"new file\\\" event - both of these triggers should be connected to 2 nodes.\\nHere is how it should looks like: https://ocr.oakpdf.com/n8n_fix.png\\n\\n\\n### 2. Set up RapidAPI HTTP auth key\\nCreate new \\\"HTTP header\\\" n8n credential and paste your RapidAPI key from https://rapidapi.com/restyler/api/receipt-and-invoice-ocr-api  into it. https://ocr.oakpdf.com/n8n_api_key.png\\n\\nMake sure \\\"HTTP Request\\\" node uses this credential.\\n\\n### 3. Set up your Google Auth\\nYou need a Google connection to work with your Google Sheets and Google Drive accounts: https://docs.n8n.io/integrations/builtin/credentials/google/oauth-generic/#finish-your-n8n-credential\\n\\n### 4. Set up Google Sheets\\nCopy this Google Sheets document: https://docs.google.com/spreadsheets/d/1G0w-OMdFRrtvzOLPpfFJpsBVNqJ9cfRLMKCVWfrTQBg/edit?usp=sharing\\n\\n# Custom document formats and advanced usage\\nEmail: contact@scrapeninja.net \\nLinkedin: https://www.linkedin.com/in/anthony-sidashin/\\n\"},\"typeVersion\":1},{\"id\":\"77f96df1-8ee3-48aa-b602-d13df568c8ef\",\"name\":\"OCR recognize\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1820,420],\"parameters\":{\"url\":\"https://receipt-and-invoice-ocr-api.p.rapidapi.com/recognize\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"contentType\":\"multipart-form-data\",\"sendHeaders\":true,\"authentication\":\"genericCredentialType\",\"bodyParameters\":{\"parameters\":[{\"name\":\"file\",\"parameterType\":\"formBinaryData\",\"inputDataFieldName\":\"data\"},{\"name\":\"settings\",\"value\":\"{ \\\"documentType\\\": \\\"invoice\\\" }\"}]},\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"REKoulS8g286TBGw\",\"name\":\"ScrapeNinja RapidAPI\"}},\"typeVersion\":4.2},{\"id\":\"44a107a8-e658-4ad3-be75-497758621c7c\",\"name\":\"Unserialize response JSON\",\"type\":\"n8n-nodes-base.code\",\"position\":[2040,420],\"parameters\":{\"jsCode\":\"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\\nfor (const item of $input.all()) {\\n  item.json.parsedData = JSON.parse(item.json.result.data);\\n}\\n\\nreturn $input.all();\"},\"typeVersion\":2},{\"id\":\"4f34624f-3161-4baf-8ab7-1d84502c691b\",\"name\":\"On new file in Google Drive\",\"type\":\"n8n-nodes-base.googleDriveTrigger\",\"position\":[660,540],\"parameters\":{\"event\":\"fileCreated\",\"options\":{},\"pollTimes\":{\"item\":[{\"mode\":\"everyMinute\"}]},\"triggerOn\":\"specificFolder\",\"folderToWatch\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1MjLoaDp2KgJgJDfgUce8RmniwGBUOZnI\",\"cachedResultUrl\":\"https://drive.google.com/drive/folders/1MjLoaDp2KgJgJDfgUce8RmniwGBUOZnI\",\"cachedResultName\":\"n8n_test_ocr\"}},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"6kO9ougy9t3XrL52\",\"name\":\"Google Drive account\"}},\"typeVersion\":1},{\"id\":\"30591844-baaa-4f04-860b-436489780a2f\",\"name\":\"Load files from Google Drive folder\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[1040,540],\"parameters\":{\"filter\":{\"folderId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1MjLoaDp2KgJgJDfgUce8RmniwGBUOZnI\",\"cachedResultUrl\":\"https://drive.google.com/drive/folders/1MjLoaDp2KgJgJDfgUce8RmniwGBUOZnI\",\"cachedResultName\":\"n8n_test_ocr\"}},\"options\":{},\"resource\":\"fileFolder\",\"returnAll\":true},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"6kO9ougy9t3XrL52\",\"name\":\"Google Drive account\"}},\"executeOnce\":true,\"typeVersion\":3},{\"id\":\"f7887199-151d-4320-aa0c-5c2c9fdeca81\",\"name\":\"Filter processed files\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1360,420],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"joinMode\":\"keepNonMatches\",\"outputDataFrom\":\"input2\",\"fieldsToMatchString\":\"id\"},\"typeVersion\":3},{\"id\":\"9b1fac99-d718-4b47-8b7c-c19a6c9a8544\",\"name\":\"Download file for OCR\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[1600,420],\"parameters\":{\"fileId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $json.id }}\"},\"options\":{},\"operation\":\"download\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"6kO9ougy9t3XrL52\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"c91a5931-43b2-4eec-bb17-7becdc2e15a8\",\"name\":\"Save OCR result into Sheets\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[2260,420],\"parameters\":{\"columns\":{\"value\":{\"id\":\"={{ $('Load files from Google Drive folder').item.json.id }}\",\"data\":\"={{ $json.parsedData }}\",\"from\":\"={{ $json.parsedData.from.company_name }}  (country: {{ $json.parsedData.from.addr_country_code }})\",\"amount\":\"={{ $json.parsedData.total_due }}  {{ $json.parsedData.currency }}\",\"filename\":\"={{ $('Load files from Google Drive folder').item.json.name }}\",\"line1_cost\":\"={{ $json.parsedData.lines[0].line_cost }}\",\"line1_descr\":\"={{ $json.parsedData.lines[0].descr }}\"},\"schema\":[{\"id\":\"id\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"id\",\"defaultMatch\":true,\"canBeUsedToMatch\":true},{\"id\":\"filename\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"filename\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"data\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"data\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"from\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"from\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"amount\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"amount\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"line1_descr\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"line1_descr\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"line1_cost\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"line1_cost\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[\"id\"]},\"options\":{},\"operation\":\"appendOrUpdate\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8/edit?usp=drivesdk\",\"cachedResultName\":\"n8n_test_ocr\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"vowsrhMIxy2PRDbH\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.3},{\"id\":\"7c3a1afa-a3ce-454f-bb6e-481e45267f25\",\"name\":\"Get already processed rows from Sheets\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1040,200],\"parameters\":{\"options\":{},\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8/edit?usp=drivesdk\",\"cachedResultName\":\"n8n_test_ocr\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"vowsrhMIxy2PRDbH\",\"name\":\"Google Sheets account\"}},\"executeOnce\":true,\"typeVersion\":4.3,\"alwaysOutputData\":true}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"085fcb5e-3972-4670-9e04-3fc1c7d722e2\",\"connections\":{\"OCR recognize\":{\"main\":[[{\"node\":\"Unserialize response JSON\",\"type\":\"main\",\"index\":0}]]},\"Download file for OCR\":{\"main\":[[{\"node\":\"OCR recognize\",\"type\":\"main\",\"index\":0}]]},\"Filter processed files\":{\"main\":[[{\"node\":\"Download file for OCR\",\"type\":\"main\",\"index\":0}]]},\"Unserialize response JSON\":{\"main\":[[{\"node\":\"Save OCR result into Sheets\",\"type\":\"main\",\"index\":0}]]},\"On new file in Google Drive\":{\"main\":[[{\"node\":\"Get already processed rows from Sheets\",\"type\":\"main\",\"index\":0},{\"node\":\"Load files from Google Drive folder\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Load files from Google Drive folder\",\"type\":\"main\",\"index\":0},{\"node\":\"Get already processed rows from Sheets\",\"type\":\"main\",\"index\":0}]]},\"Load files from Google Drive folder\":{\"main\":[[{\"node\":\"Filter processed files\",\"type\":\"main\",\"index\":1}]]},\"Get already processed rows from Sheets\":{\"main\":[[{\"node\":\"Filter processed files\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow allows you to recognize a folder with receipts or invoices (make sure your files are in .pdf, .png, or .jpg format). The workflow can be triggered via the \"Test workflow\" button, and it also monitors the folder for new files, automatically recognizing them.\n\n## Video Demo\n\n<https://youtu.be/mGPt7fqGQD8>\n\n### 1\\. n8n import glitch\n\nAfter import, the trigger node \"When clicking 'Test workflow'\" might be disconnected. You need to connect it via 2 arrows to \"Google Sheets1\" and \"Google Drive\" nodes. So, the workflow has 2 triggers - via button, and via Google Sheets \"new file\" event - both of these triggers should be connected to 2 nodes.  \nHere is how it should look like: <https://ocr.oakpdf.com/n8n_fix.png>\n\n### 2\\. Set up RapidAPI HTTP auth key\n\nCreate new \"HTTP header\" n8n credential and paste your RapidAPI key from <https://rapidapi.com/restyler/api/receipt-and-invoice-ocr-api> into it. <https://ocr.oakpdf.com/n8n_api_key.png>\n\nMake sure \"HTTP Request\" node uses this credential.\n\n### 3\\. Set up your Google Auth\n\nYou need a Google connection to work with your Google Sheets and Google Drive accounts: <https://docs.n8n.io/integrations/builtin/credentials/google/oauth-generic/#finish-your-n8n-credential>\n\n### 4\\. Set up Google Sheets\n\nCopy this Google Sheets document: <https://docs.google.com/spreadsheets/d/1G0w-OMdFRrtvzOLPpfFJpsBVNqJ9cfRLMKCVWfrTQBg/edit?usp=sharing>\n\n## Custom document formats and advanced usage\n\nEmail: [contact@scrapeninja.net](mailto:contact@scrapeninja.net)  \nLinkedin: <https://www.linkedin.com/in/anthony-sidashin/>\n",
  "crawled_at": "2025-05-25T23:41:48.640513",
  "readme_zh": "该工作流支持识别包含收据或发票的文件夹（请确保文件格式为.pdf、.png或.jpg）。您可通过\"测试工作流\"按钮触发流程，系统也会自动监控文件夹中的新增文件并进行识别。\n\n## 视频演示\n\n<https://youtu.be/mGPt7fqGQD8>\n\n### 1\\. n8n导入异常处理\n\n导入后，\"点击'测试工作流'时\"触发器节点可能出现断开连接。需通过2个箭头将其重新连接至\"Google Sheets1\"和\"Google Drive\"节点。本工作流设有双触发器——按钮触发与Google Sheets\"新文件\"事件触发，二者均应连接至这两个节点。  \n正确连接图示：<https://ocr.oakpdf.com/n8n_fix.png>\n\n### 2\\. 配置RapidAPI密钥\n\n新建\"HTTP头\"n8n凭证，将从<https://rapidapi.com/restyler/api/receipt-and-invoice-ocr-api>获取的RapidAPI密钥粘贴其中。<https://ocr.oakpdf.com/n8n_api_key.png>  \n确保\"HTTP请求\"节点使用该凭证。\n\n### 3\\. 设置谷歌授权\n\n需配置谷歌连接以操作Google Sheets和Google Drive账户：<https://docs.n8n.io/integrations/builtin/credentials/google/oauth-generic/#finish-your-n8n-credential>\n\n### 4\\. 配置Google Sheets\n\n复制此谷歌表格文档：<https://docs.google.com/spreadsheets/d/1G0w-OMdFRrtvzOLPpfFJpsBVNqJ9cfRLMKCVWfrTQBg/edit?usp=sharing>\n\n## 自定义文档格式与高级应用\n\n联系邮箱：[contact@scrapeninja.net](mailto:contact@scrapeninja.net)  \n领英主页：<https://www.linkedin.com/in/anthony-sidashin/>",
  "title_zh": "从Google Drive识别发票/收据并导入Google Sheets",
  "publish_date_zh": "最后更新于8个月前",
  "workflow_json_zh": "{\n  \"id\": \"dVDyWWhO5FdPM3qx\",\n  \"meta\": {\n    \"instanceId\": \"5b860a91d7844b5237bb51cc58691ca8c3dc5b576f42d4d6bbedfb8d43d58ece\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"OCR receipts from Google Drive\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"0794d7e7-196f-46a6-b3cf-85faa436e21e\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        660,\n        200\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"94342020-7019-4565-8f18-5ca3d3512f80\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1320,\n        660\n      ],\n      \"parameters\": {\n        \"width\": 1120.9554973821976,\n        \"height\": 1062.9450261780098,\n        \"content\": \"# 发票识别并转换为结构化JSON\\n## 视频演示\\nhttps://youtu.be/mGPt7fqGQD8\\n\\n## 快速OCR体验区\\n### 1. 获取OakPDF OCR API密钥：\\nhttps://rapidapi.com/restyler/api/receipt-and-invoice-ocr-api\\n\\n### 2. 进入OCR体验区上传文件或使用示例文档：\\nhttps://ocr.oakpdf.com/\\n\\n**本API支持识别各类文档格式（医疗/金融/法律等）——请告知您想测试的格式，我们将很高兴为您添加到体验区！**\\n\\n## 运行n8n工作流\\n该工作流可自动识别文件夹中的收据/发票（确保文件为.pdf/.png/.jpg格式）。既可通过\\\"测试工作流\\\"按钮触发，也能监控文件夹自动识别新增文件。\\n\\n### 1. n8n导入异常处理\\n导入后\\\"When clicking 'Test workflow'\\\"触发节点可能断开连接。需通过2个箭头重新连接至\\\"Google Sheets1\\\"和\\\"Google Drive\\\"节点。本工作流包含按钮触发和Google Sheets\\\"新文件\\\"事件双触发器，二者均需连接两个节点。\\n正确连接示意图：https://ocr.oakpdf.com/n8n_fix.png\\n\\n### 2. 配置RapidAPI认证密钥\\n新建\\\"HTTP header\\\"类型n8n凭证，粘贴来自https://rapidapi.com/restyler/api/receipt-and-invoice-ocr-api 的RapidAPI密钥。图示：https://ocr.oakpdf.com/n8n_api_key.png\\n\\n确保\\\"HTTP Request\\\"节点使用该凭证。\\n\\n### 3. 配置Google身份验证\\n需建立Google连接以操作Google Sheets和Google Drive账户：\\nhttps://docs.n8n.io/integrations/builtin/credentials/google/oauth-generic/#finish-your-n8n-credential\\n\\n### 4. 配置Google表格\\n复制此表格模板：\\nhttps://docs.google.com/spreadsheets/d/1G0w-OMdFRrtvzOLPpfFJpsBVNqJ9cfRLMKCVWfrTQBg/edit?usp=sharing\\n\\n# 定制文档格式与高级应用\\n联系邮箱：contact@scrapeninja.net\\n领英主页：https://www.linkedin.com/in/anthony-sidashin/\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"77f96df1-8ee3-48aa-b602-d13df568c8ef\",\n      \"name\": \"OCR recognize\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1820,\n        420\n      ],\n      \"parameters\": {\n        \"url\": \"https://receipt-and-invoice-ocr-api.p.rapidapi.com/recognize\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"multipart-form-data\",\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"file\",\n              \"parameterType\": \"formBinaryData\",\n              \"inputDataFieldName\": \"data\"\n            },\n            {\n              \"name\": \"settings\",\n              \"value\": \"{ \\\"documentType\\\": \\\"invoice\\\" }\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {}\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"REKoulS8g286TBGw\",\n          \"name\": \"ScrapeNinja RapidAPI\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"44a107a8-e658-4ad3-be75-497758621c7c\",\n      \"name\": \"Unserialize response JSON\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2040,\n        420\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\\nfor (const item of $input.all()) {\\n  item.json.parsedData = JSON.parse(item.json.result.data);\\n}\\n\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"4f34624f-3161-4baf-8ab7-1d84502c691b\",\n      \"name\": \"On new file in Google Drive\",\n      \"type\": \"n8n-nodes-base.googleDriveTrigger\",\n      \"position\": [\n        660,\n        540\n      ],\n      \"parameters\": {\n        \"event\": \"fileCreated\",\n        \"options\": {},\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyMinute\"\n            }\n          ]\n        },\n        \"triggerOn\": \"specificFolder\",\n        \"folderToWatch\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1MjLoaDp2KgJgJDfgUce8RmniwGBUOZnI\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/folders/1MjLoaDp2KgJgJDfgUce8RmniwGBUOZnI\",\n          \"cachedResultName\": \"n8n_test_ocr\"\n        }\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"6kO9ougy9t3XrL52\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"30591844-baaa-4f04-860b-436489780a2f\",\n      \"name\": \"Load files from Google Drive folder\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        1040,\n        540\n      ],\n      \"parameters\": {\n        \"filter\": {\n          \"folderId\": {\n            \"__rl\": true,\n            \"mode\": \"list\",\n            \"value\": \"1MjLoaDp2KgJgJDfgUce8RmniwGBUOZnI\",\n            \"cachedResultUrl\": \"https://drive.google.com/drive/folders/1MjLoaDp2KgJgJDfgUce8RmniwGBUOZnI\",\n            \"cachedResultName\": \"n8n_test_ocr\"\n          }\n        },\n        \"options\": {},\n        \"resource\": \"fileFolder\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"6kO9ougy9t3XrL52\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"f7887199-151d-4320-aa0c-5c2c9fdeca81\",\n      \"name\": \"Filter processed files\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1360,\n        420\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"joinMode\": \"keepNonMatches\",\n        \"outputDataFrom\": \"input2\",\n        \"fieldsToMatchString\": \"id\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"9b1fac99-d718-4b47-8b7c-c19a6c9a8544\",\n      \"name\": \"Download file for OCR\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        1600,\n        420\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.id }}\"\n        },\n        \"options\": {},\n        \"operation\": \"download\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"6kO9ougy9t3XrL52\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"c91a5931-43b2-4eec-bb17-7becdc2e15a8\",\n      \"name\": \"Save OCR result into Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        2260,\n        420\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"id\": \"={{ $('Load files from Google Drive folder').item.json.id }}\",\n            \"data\": \"={{ $json.parsedData }}\",\n            \"from\": \"={{ $json.parsedData.from.company_name }}  (country: {{ $json.parsedData.from.addr_country_code }})\",\n            \"amount\": \"={{ $json.parsedData.total_due }}  {{ $json.parsedData.currency }}\",\n            \"filename\": \"={{ $('Load files from Google Drive folder').item.json.name }}\",\n            \"line1_cost\": \"={{ $json.parsedData.lines[0].line_cost }}\",\n            \"line1_descr\": \"={{ $json.parsedData.lines[0].descr }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"id\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"id\",\n              \"defaultMatch\": true,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"filename\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"filename\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"data\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"data\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"from\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"from\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"amount\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"amount\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"line1_descr\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"line1_descr\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"line1_cost\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"line1_cost\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"id\"\n          ]\n        },\n        \"options\": {},\n        \"operation\": \"appendOrUpdate\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8/edit?usp=drivesdk\",\n          \"cachedResultName\": \"n8n_test_ocr\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"vowsrhMIxy2PRDbH\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.3\n    },\n    {\n      \"id\": \"7c3a1afa-a3ce-454f-bb6e-481e45267f25\",\n      \"name\": \"Get already processed rows from Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1040,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/19ACXNwlTDB73obmvSNJB3sA06ADF2myJGmAeiSa3NN8/edit?usp=drivesdk\",\n          \"cachedResultName\": \"n8n_test_ocr\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"vowsrhMIxy2PRDbH\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 4.3,\n      \"alwaysOutputData\": true\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"085fcb5e-3972-4670-9e04-3fc1c7d722e2\",\n  \"connections\": {\n    \"OCR recognize\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Unserialize response JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download file for OCR\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OCR recognize\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter processed files\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download file for OCR\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Unserialize response JSON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save OCR result into Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On new file in Google Drive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get already processed rows from Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Load files from Google Drive folder\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Load files from Google Drive folder\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get already processed rows from Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Load files from Google Drive folder\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter processed files\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Get already processed rows from Sheets\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter processed files\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}