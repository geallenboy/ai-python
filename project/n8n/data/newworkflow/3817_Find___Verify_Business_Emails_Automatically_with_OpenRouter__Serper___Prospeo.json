{
  "url": "https://n8n.io/workflows/3817-find-and-verify-business-emails-automatically-with-openrouter-serper-and-prospeo/",
  "title": "Find & Verify Business Emails Automatically with OpenRouter, Serper & Prospeo",
  "author": "Naveen Choudhary",
  "publish_date": "Last update 6 days ago",
  "publish_date_absolute": "2025-05-20",
  "categories": [
    {
      "name": "Sales"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"ttpfi7eLWpC3Hdxi\",\"meta\":{\"instanceId\":\"6fbb2e76a4f4743fb890492ba219000e5322811de9fe9ceb63aae628bc0e9ca4\",\"templateCredsSetupCompleted\":true},\"name\":\"My workflow 11\",\"tags\":[],\"nodes\":[{\"id\":\"19cfc4f3-a220-4788-8e19-c6abbf65b948\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[240,460],\"parameters\":{},\"typeVersion\":1},{\"id\":\"75cfd806-858f-4355-9d93-820620098657\",\"name\":\"Get Rows\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[460,460],\"parameters\":{\"options\":{},\"filtersUI\":{\"values\":[{\"lookupValue\":\"false\",\"lookupColumn\":\"Status\"}]},\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit#gid=0\",\"cachedResultName\":\"Emails\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit?usp=drivesdk\",\"cachedResultName\":\"Find Emails\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"4\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5,\"alwaysOutputData\":true},{\"id\":\"58350462-bdd6-4e97-abb8-97458b2ad169\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"onError\":\"continueRegularOutput\",\"position\":[1340,320],\"parameters\":{\"text\":\"=You can use the below information to extract email pattern for {{ $('Get Rows').item.json.Domain }}\\n\\nSnippet1: {{ $('Get Email Pattern').item.json.organic[0].snippet }}\\nSnippet2: {{ $('Get Email Pattern').item.json.organic[1].snippet }}\\nSnippet3: {{ $('Get Email Pattern').item.json.organic[2].snippet }}\\n\\nUse the extracted email pattern to build email address for:\\nFirst Name: {{ $('Get Rows').item.json['First Name'] }}\\nLast Name: {{ $('Get Rows').item.json['Last Name'] }}\\nDomain: {{ $('Get Rows').item.json.Domain }}\",\"options\":{\"systemMessage\":\"=You are an expert email pattern analyzer and constructor. Your task is to:\\n\\n1. Analyze three website snippets from a domain to identify the common email pattern used at that company.\\n2. Based on your analysis, construct a likely email address for a specific person using their first name, last name, and the company domain.\\n\\n## Rules for pattern identification:\\n- Look for any visible email addresses in the snippets (e.g., contact@company.com, j.smith@domain.com)\\n- Identify patterns such as:\\n  * first.last@domain.com\\n  * first_last@domain.com\\n  * firstlast@domain.com\\n  * first@domain.com\\n  * first.initial.last@domain.com\\n  * last.first@domain.com\\n  * firstinitiallast@domain.com\\n  * lastfirst@domain.com\\n  * etc.\\n\\n## If no clear pattern is found:\\n- Suggest the most probable pattern based on common business email conventions\\n- Rank your confidence level in the suggested pattern (high, medium, low)\\n- Propose 1-2 alternative patterns as backups\\n\\n## Output format:\\n1. **Identified Pattern**: [pattern description]\\n2. **Confidence**: [high/medium/low]\\n3. **Constructed Email**: [email address using the pattern]\\n4. **Alternative Formats**: [1-2 backup email formats if confidence is not high]\\n\\nImportant: Your entire response must be valid JSON only, with no explanatory text before or after. Do not include markdown formatting, backticks, or code blocks around the JSON.\\n\\n\\nBe precise, analytical, and logical in your pattern detection and email construction.\"},\"promptType\":\"define\",\"hasOutputParser\":true},\"notesInFlow\":false,\"retryOnFail\":false,\"typeVersion\":1.9},{\"id\":\"bcb79bcf-55f6-406c-9fea-ff6d09f8bcae\",\"name\":\"OpenRouter Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\"position\":[1260,600],\"parameters\":{\"model\":\"openai/o3-mini\",\"options\":{}},\"credentials\":{\"openRouterApi\":{\"id\":\"as3Nrpj9fJwXfB8s\",\"name\":\"OpenRouter account\"}},\"typeVersion\":1},{\"id\":\"c5ea7423-66d2-448e-90f2-934f41cc946f\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[1600,600],\"parameters\":{\"jsonSchemaExample\":\"{\\n  \\\"identifiedPattern\\\": \\\"first.last@domain.com\\\",\\n  \\\"confidence\\\": \\\"high\\\",\\n  \\\"constructedEmail\\\": \\\"john.doe@example.com\\\",\\n  \\\"alternativeFormats\\\": [\\n    \\\"j.doe@example.com\\\",\\n    \\\"john@example.com\\\"\\n  ]\\n}\"},\"typeVersion\":1.2},{\"id\":\"6d33e7da-b138-4853-a615-4617df2b5736\",\"name\":\"Verify Email\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1720,320],\"parameters\":{\"url\":\"=https://api.prospeo.io/email-verifier\",\"method\":\"POST\",\"options\":{\"redirect\":{\"redirect\":{}}},\"sendBody\":true,\"authentication\":\"genericCredentialType\",\"bodyParameters\":{\"parameters\":[{\"name\":\"email\",\"value\":\"={{ $json.output.constructedEmail }}\"}]},\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"iy0AUIpuers7IfwW\",\"name\":\"Prospeo Header Auth\"}},\"typeVersion\":4.2},{\"id\":\"a96ce029-3c43-408d-bf8f-7d06071d6213\",\"name\":\"Update Rows\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1940,460],\"parameters\":{\"columns\":{\"value\":{\"ID\":\"={{ $('Get Rows').item.json.ID }}\",\"Email\":\"={{ $('AI Agent').item.json.output.constructedEmail }}\",\"Status\":\"TRUE\",\"Confidence\":\"={{ $('AI Agent').item.json.output.confidence }}\",\"Email Status\":\"={{ $json.response.email_status }}\",\"Email Pattern\":\"={{ $('AI Agent').item.json.output.identifiedPattern }}\"},\"schema\":[{\"id\":\"ID\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"ID\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"First Name\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"First Name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Last Name\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Last Name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Website\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Website\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Domain\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Domain\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Email Pattern\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Email Pattern\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Email\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Email\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Confidence\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Confidence\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Email Status\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Email Status\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Status\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Status\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[\"ID\"],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"appendOrUpdate\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit#gid=0\",\"cachedResultName\":\"Emails\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit?usp=drivesdk\",\"cachedResultName\":\"Find Emails\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"4\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"9c987841-2034-4489-99d4-5d600f816679\",\"name\":\"Get Email Pattern\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[680,460],\"parameters\":{\"url\":\"https://google.serper.dev/search\",\"method\":\"POST\",\"options\":{\"redirect\":{\"redirect\":{}}},\"sendBody\":true,\"authentication\":\"genericCredentialType\",\"bodyParameters\":{\"parameters\":[{\"name\":\"q\",\"value\":\"=site:rocketreach.co email pattern for {{ $json.Domain }}\"}]},\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"KTwiEEvaHRmqJsB9\",\"name\":\"serpr.dev Header Auth account\"}},\"typeVersion\":4.2},{\"id\":\"1e0e9523-76bc-4bf3-8061-7980248df3d7\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[1140,380],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"cf462ecb-1392-4486-b017-73172971a03a\",\"name\":\"Has Snippet Results?\",\"type\":\"n8n-nodes-base.if\",\"position\":[900,460],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"857568fd-ee3e-4d86-8853-2db9dd810c55\",\"operator\":{\"type\":\"array\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json.organic }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"80200a67-ca87-4775-bf91-40e9c0b4ad61\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[0,0],\"parameters\":{\"width\":600,\"height\":300,\"content\":\"## 📨 Find Emails – Basic  \\nAutomates **Google Sheets → Serper → Gemini Flash → Prospeo/Sparkle → Sheets**  \\n\\n1. Pull rows where `Status = FALSE`  \\n2. Scrape 3 RocketReach snippets with **Serper.dev**  \\n3. Detect email pattern & build address (Gemini Flash via **OpenRouter**)  \\n4. Verify (**Prospeo API** or Sparkle bulk)  \\n5. Write back ➜ set `Status = TRUE`\\n\\n<!-- Ideal users: SDRs, recruiters, growth teams -->\"},\"typeVersion\":1},{\"id\":\"55375484-6dcc-4f69-a88a-5aa43432f870\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[820,0],\"parameters\":{\"color\":5,\"width\":880,\"height\":300,\"content\":\"> ## 🔧 Quick setup\\n>\\n> **Google Sheet**  \\n> Copy → https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit?usp=sharing  \\n\\n\\n> **API keys**  \\n\\n> • Serper → header **X‑API‑KEY** in *Get Email Pattern*  \\n> • OpenRouter → creds on *OpenRouter Chat Model*  \\n> • Prospeo → header **X‑KEY** in *Verify Email*\\n>\\n> Need volume? export the \\\"Email\\\" column and bulk‑verify free in Sparkle (10 k/day).\\n\"},\"typeVersion\":1},{\"id\":\"ffc1edd6-14e4-4051-b7ea-82bc219050f5\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1900,0],\"parameters\":{\"color\":4,\"width\":600,\"height\":300,\"content\":\"### ➡️ Columns updated\\n\\n* **Email** – constructed address  \\n* **Email Pattern** – e.g. `first.last@`  \\n* **Confidence** – high / medium / low  \\n* **Email Status** – `deliverable`, `risky`, etc.  \\n* **Status** – flips to `TRUE`\\n\\n<!-- Feel free to add Phone, LinkedIn URL, etc. in Update Rows mapping -->\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"1c56475c-a2e6-4c84-9082-1e7b729c0e39\",\"connections\":{\"AI Agent\":{\"main\":[[{\"node\":\"Verify Email\",\"type\":\"main\",\"index\":0}]]},\"Get Rows\":{\"main\":[[{\"node\":\"Get Email Pattern\",\"type\":\"main\",\"index\":0}]]},\"Update Rows\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Verify Email\":{\"main\":[[{\"node\":\"Update Rows\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items\":{\"main\":[[],[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Get Email Pattern\":{\"main\":[[{\"node\":\"Has Snippet Results?\",\"type\":\"main\",\"index\":0}]]},\"OpenRouter Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Has Snippet Results?\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"AI Agent\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Get Rows\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "#### **Who is this template for?**\n\nGrowth teams, SDRs, recruiters, or anyone who routinely hunts for hard‑to‑find business emails and would rather spend time reaching out than guessing formats.\n\n#### **What problem does this workflow solve?**\n\nManually piecing together email patterns, cross‑checking them in a verifier, and updating a tracking sheet is slow and error‑prone. This template automates the entire loop—research, guess, verify, and log—so you hit **Start** and watch rows fill up with ready‑to‑send addresses.\n\n#### **What this workflow does**\n\n  1. **Pull fresh leads** – Grabs only the rows in your Google Sheet where `Status` = `FALSE`.\n  2. **Find the company pattern** – Queries **Serper.dev** for snippets and feeds them to **Gemini Flash** (via OpenRouter) to spot the dominant email format.\n  3. **Build the address** – Constructs a likely email for every first/last name.\n  4. **Verify in real time** – Pings **Prospeo** by default (API) _or_ lets you bulk‑clean in **[Sparkle.io](http://Sparkle.io)**.\n  5. **Write it back** – Updates the sheet with pattern, email, confidence, verification status, and flips `Status` to `TRUE`.\n  6. **Loop until done** – Runs batch‑by‑batch so you never hit API limits.\n\n\n\n* * *\n\n### 🆓 **Work free‑tier magic (up to ~2,500 contacts/month)**\n\nService | Free allowance | How this template uses it  \n---|---|---  \n**Serper.dev** | 2,500 searches/mo | Scrapes three public email snippets per domain to learn the pattern  \n**[Sparkle.io](http://Sparkle.io)** | 10,000 bulk verifications/day | Manual _upload‑download_ option—perfect to clean your first 2.5k emails at zero cost  \n**Prospeo** | 75 API calls/mo | Built‑in if you prefer _fully automated_ verification  \n  \n**Quick Sparkle workflow:**\n\n  1. Let the template generate emails.\n  2. Export the “Email” column to CSV → upload to [Sparkle.io](http://Sparkle.io).\n  3. Download the results and paste the \"verification_status\" back into the sheet (or add a small n8n import sub‑flow).\n\n\n\n* * *\n\n#### **Setup (5 minutes)**\n\n  1. **Copy the Google Sheet** linked in the sticky note and paste its ID into the _Get Rows_ and _Update Rows_ nodes.\n  2. Add credentials for Google Sheets, Serper (X‑API‑KEY), OpenRouter, and _optionally_ Prospeo.\n  3. Hit **Execute Workflow** —that’s it.\n\n\n\n* * *\n\n#### **How to customise**\n\n  * **Prefer Sparkle for volume:** Skip the Prospeo node, export emails in one click, bulk‑verify in Sparkle, and re‑import results.\n  * **Swap the search source:** Replace the _Get Email Pattern_ HTTP node with Bing, Brave, etc.\n  * **Extend enrichment:** Add phone look‑ups or LinkedIn scrapers before the _Update Rows_ node.\n  * **Auto‑run:** Replace the Manual Trigger with a Cron node so the sheet cleans itself every morning.\n\n\n\n* * *\n\n### **Additional resources**\n\nTool | Purpose | Link  \n---|---|---  \n**Prospeo** – API‑ready email verification<br><sub>**Special offer:** 20 % free credits for the first 3 months on any plan using this link!</sub> | Real‑time, single‑call mailbox validation | [prospeo.io](https://prospeo.io/?via=naveen)  \n**[Sparkle.io](http://Sparkle.io)** – high‑volume bulk verifier (manual upload) | Free daily quota of 10 000 verifications | [app.sparkle.io/sign‑up](https://app.sparkle.io/sign-up)  \n**OpenRouter** – API gateway for Gemini Flash & other LLMs | One key unlocks multiple frontier models | [openrouter.ai](https://openrouter.ai/)  \n**Serper.dev** – Google Search API | 2 500 searches/month on the free tier | [serper.dev](https://serper.dev/)  \n  \nAdd the relevant keys or signup details from these links, drop them into the matching n8n credentials, and you’re all set to enrich your first 2 500 contacts at zero cost. Happy building!\n",
  "crawled_at": "2025-05-26T05:39:08.964401",
  "readme_zh": "#### **这个模板适合谁？**\n\n增长团队、销售开发代表（SDR）、招聘人员，或任何经常需要寻找难以获取的商业邮箱，并希望将时间花在联系而非猜测邮箱格式上的人。\n\n#### **这个工作流解决了什么问题？**\n\n手动拼凑邮箱格式、在验证工具中交叉检查并更新跟踪表格，不仅耗时且容易出错。此模板自动化了整个流程——研究、猜测、验证和记录——你只需点击**开始**，即可看到表格中填满可直接发送的邮箱地址。\n\n#### **工作流功能**\n\n1. **获取新线索** – 仅抓取Google表格中`Status`为`FALSE`的行。  \n2. **识别公司邮箱格式** – 通过**Serper.dev**搜索片段，并输入至**Gemini Flash**（通过OpenRouter）以确定主要邮箱格式。  \n3. **生成邮箱地址** – 根据每个名字（名/姓）生成可能的邮箱。  \n4. **实时验证** – 默认通过**Prospeo**（API）验证，或支持在**[Sparkle.io](http://Sparkle.io)**批量清理。  \n5. **回写结果** – 更新表格中的格式、邮箱、置信度、验证状态，并将`Status`标记为`TRUE`。  \n6. **循环至完成** – 分批处理，避免触发API限制。\n\n---\n\n### 🆓 **免费层使用技巧（每月约2,500个联系人）**\n\n| 服务                | 免费额度               | 模板用途                                                                 |\n|---------------------|------------------------|--------------------------------------------------------------------------|\n| **Serper.dev**      | 2,500次搜索/月        | 抓取每个域名的3条公开邮箱片段以识别格式                                   |\n| **[Sparkle.io](http://Sparkle.io)** | 10,000次批量验证/天   | 手动**上传-下载**选项，零成本清理前2,500个邮箱                           |\n| **Prospeo**         | 75次API调用/月        | 内置支持，适合偏好**全自动**验证的用户                                   |\n\n**Sparkle快速流程：**  \n1. 让模板生成邮箱。  \n2. 导出“Email”列至CSV → 上传至[Sparkle.io](http://Sparkle.io)。  \n3. 下载结果并将“verification_status”粘贴回表格（或添加n8n导入子流程）。\n\n---\n\n#### **设置（5分钟）**  \n1. **复制Google表格**（见置顶注释链接），将其ID粘贴至_Get Rows_和_Update Rows_节点。  \n2. 配置Google Sheets、Serper（X-API-KEY）、OpenRouter及（可选）Prospeo的凭证。  \n3. 点击**执行工作流**——完成。\n\n---\n\n#### **自定义选项**  \n- **批量使用Sparkle**：跳过Prospeo节点，一键导出邮箱，在Sparkle批量验证后重新导入结果。  \n- **更换搜索源**：将_Get Email Pattern_的HTTP节点替换为Bing、Brave等。  \n- **扩展功能**：在_Update Rows_节点前添加电话查询或LinkedIn爬虫。  \n- **自动运行**：用Cron节点替换手动触发器，实现每日自动更新表格。\n\n---\n\n### **其他资源**\n\n| 工具与用途                                                                 | 链接                                                                 |\n|----------------------------------------------------------------------------|----------------------------------------------------------------------|\n| **Prospeo** – 实时邮箱验证API<br><sub>**限时优惠：** 通过此链接注册，首3个月任意套餐享20%免费额度！</sub> | [prospeo.io](https://prospeo.io/?via=naveen)                         |\n| **[Sparkle.io](http://Sparkle.io)** – 高容量批量验证工具（手动上传）       | [app.sparkle.io/sign-up](https://app.sparkle.io/sign-up)             |\n| **OpenRouter** – Gemini Flash等LLM的API网关                               | [openrouter.ai](https://openrouter.ai/)                              |\n| **Serper.dev** – Google搜索API                                            | [serper.dev](https://serper.dev/)                                    |\n\n从以上链接获取密钥或注册信息，填入对应n8n凭证，即可零成本高效处理首批2,500个联系人。祝使用愉快！",
  "title_zh": "使用OpenRouter、Serper和Prospeo自动查找并验证企业邮箱",
  "publish_date_zh": "最后更新于6天前",
  "workflow_json_zh": "{\n  \"id\": \"ttpfi7eLWpC3Hdxi\",\n  \"meta\": {\n    \"instanceId\": \"6fbb2e76a4f4743fb890492ba219000e5322811de9fe9ceb63aae628bc0e9ca4\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"My workflow 11\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"19cfc4f3-a220-4788-8e19-c6abbf65b948\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        240,\n        460\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"75cfd806-858f-4355-9d93-820620098657\",\n      \"name\": \"Get Rows\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        460,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"filtersUI\": {\n          \"values\": [\n            {\n              \"lookupValue\": \"false\",\n              \"lookupColumn\": \"Status\"\n            }\n          ]\n        },\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit#gid=0\",\n          \"cachedResultName\": \"Emails\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Find Emails\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"4\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"58350462-bdd6-4e97-abb8-97458b2ad169\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        1340,\n        320\n      ],\n      \"parameters\": {\n        \"text\": \"=You can use the below information to extract email pattern for {{ $('Get Rows').item.json.Domain }}\\n\\nSnippet1: {{ $('Get Email Pattern').item.json.organic[0].snippet }}\\nSnippet2: {{ $('Get Email Pattern').item.json.organic[1].snippet }}\\nSnippet3: {{ $('Get Email Pattern').item.json.organic[2].snippet }}\\n\\nUse the extracted email pattern to build email address for:\\nFirst Name: {{ $('Get Rows').item.json['First Name'] }}\\nLast Name: {{ $('Get Rows').item.json['Last Name'] }}\\nDomain: {{ $('Get Rows').item.json.Domain }}\",\n        \"options\": {\n          \"systemMessage\": \"=You are an expert email pattern analyzer and constructor. Your task is to:\\n\\n1. Analyze three website snippets from a domain to identify the common email pattern used at that company.\\n2. Based on your analysis, construct a likely email address for a specific person using their first name, last name, and the company domain.\\n\\n## Rules for pattern identification:\\n- Look for any visible email addresses in the snippets (e.g., contact@company.com, j.smith@domain.com)\\n- Identify patterns such as:\\n  * first.last@domain.com\\n  * first_last@domain.com\\n  * firstlast@domain.com\\n  * first@domain.com\\n  * first.initial.last@domain.com\\n  * last.first@domain.com\\n  * firstinitiallast@domain.com\\n  * lastfirst@domain.com\\n  * etc.\\n\\n## If no clear pattern is found:\\n- Suggest the most probable pattern based on common business email conventions\\n- Rank your confidence level in the suggested pattern (high, medium, low)\\n- Propose 1-2 alternative patterns as backups\\n\\n## Output format:\\n1. **Identified Pattern**: [pattern description]\\n2. **Confidence**: [high/medium/low]\\n3. **Constructed Email**: [email address using the pattern]\\n4. **Alternative Formats**: [1-2 backup email formats if confidence is not high]\\n\\nImportant: Your entire response must be valid JSON only, with no explanatory text before or after. Do not include markdown formatting, backticks, or code blocks around the JSON.\\n\\n\\nBe precise, analytical, and logical in your pattern detection and email construction.\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"notesInFlow\": false,\n      \"retryOnFail\": false,\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"bcb79bcf-55f6-406c-9fea-ff6d09f8bcae\",\n      \"name\": \"OpenRouter Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\n      \"position\": [\n        1260,\n        600\n      ],\n      \"parameters\": {\n        \"model\": \"openai/o3-mini\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openRouterApi\": {\n          \"id\": \"as3Nrpj9fJwXfB8s\",\n          \"name\": \"OpenRouter account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c5ea7423-66d2-448e-90f2-934f41cc946f\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1600,\n        600\n      ],\n      \"parameters\": {\n        \"jsonSchemaExample\": \"{\\n  \\\"identifiedPattern\\\": \\\"first.last@domain.com\\\",\\n  \\\"confidence\\\": \\\"high\\\",\\n  \\\"constructedEmail\\\": \\\"john.doe@example.com\\\",\\n  \\\"alternativeFormats\\\": [\\n    \\\"j.doe@example.com\\\",\\n    \\\"john@example.com\\\"\\n  ]\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"6d33e7da-b138-4853-a615-4617df2b5736\",\n      \"name\": \"Verify Email\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1720,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.prospeo.io/email-verifier\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          }\n        },\n        \"sendBody\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"email\",\n              \"value\": \"={{ $json.output.constructedEmail }}\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"iy0AUIpuers7IfwW\",\n          \"name\": \"Prospeo Header Auth\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"a96ce029-3c43-408d-bf8f-7d06071d6213\",\n      \"name\": \"Update Rows\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1940,\n        460\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"ID\": \"={{ $('Get Rows').item.json.ID }}\",\n            \"Email\": \"={{ $('AI Agent').item.json.output.constructedEmail }}\",\n            \"Status\": \"TRUE\",\n            \"Confidence\": \"={{ $('AI Agent').item.json.output.confidence }}\",\n            \"Email Status\": \"={{ $json.response.email_status }}\",\n            \"Email Pattern\": \"={{ $('AI Agent').item.json.output.identifiedPattern }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"ID\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"ID\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"First Name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"First Name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Last Name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Last Name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Website\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Website\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Domain\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Domain\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Email Pattern\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Email Pattern\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Email\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Email\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Confidence\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Confidence\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Email Status\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Email Status\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Status\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Status\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"ID\"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"appendOrUpdate\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit#gid=0\",\n          \"cachedResultName\": \"Emails\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Find Emails\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"4\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"9c987841-2034-4489-99d4-5d600f816679\",\n      \"name\": \"Get Email Pattern\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        680,\n        460\n      ],\n      \"parameters\": {\n        \"url\": \"https://google.serper.dev/search\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          }\n        },\n        \"sendBody\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"q\",\n              \"value\": \"=site:rocketreach.co email pattern for {{ $json.Domain }}\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"KTwiEEvaHRmqJsB9\",\n          \"name\": \"serpr.dev Header Auth account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"1e0e9523-76bc-4bf3-8061-7980248df3d7\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        1140,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"cf462ecb-1392-4486-b017-73172971a03a\",\n      \"name\": \"Has Snippet Results?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        900,\n        460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"857568fd-ee3e-4d86-8853-2db9dd810c55\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.organic }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"80200a67-ca87-4775-bf91-40e9c0b4ad61\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"width\": 600,\n        \"height\": 300,\n        \"content\": \"## 📨 查找邮箱 – 基础版  \\n自动化流程 **Google表格 → Serper → Gemini Flash → Prospeo/Sparkle → 表格**  \\n\\n1. 提取 `状态 = FALSE` 的行  \\n2. 用 **Serper.dev** 抓取3条RocketReach摘要  \\n3. 识别邮箱格式并生成地址（通过 **OpenRouter** 调用Gemini Flash）  \\n4. 验证（**Prospeo API** 或Sparkle批量验证）  \\n5. 回写数据 ➜ 将 `状态` 设为TRUE  \\n\\n<!-- 适用人群：销售开发代表、招聘人员、增长团队 -->\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"55375484-6dcc-4f69-a88a-5aa43432f870\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        820,\n        0\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 880,\n        \"height\": 300,\n        \"content\": \"> ## 🔧 快速设置  \\n>  \\n> **谷歌表格**  \\n> 复制链接 → https://docs.google.com/spreadsheets/d/1rZk6P7OyIiRX6Z4DuGDy_WDKOmdbhkAr7c4keuDz2cc/edit?usp=sharing  \\n>  \\n> **API密钥**  \\n>  \\n> • Serper → 在*获取邮箱格式*中使用请求头 **X‑API‑KEY**  \\n> • OpenRouter → 在*OpenRouter聊天模型*中填写凭证  \\n> • Prospeo → 在*验证邮箱*中使用请求头 **X‑KEY**  \\n>  \\n> 需要批量处理？导出\\\"Email\\\"列后，可在Sparkle免费批量验证（每日上限1万条）。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ffc1edd6-14e4-4051-b7ea-82bc219050f5\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1900,\n        0\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 600,\n        \"height\": 300,\n        \"content\": \"### ➡️ 已更新列项\\n\\n* **邮箱** – 构建的地址  \\n* **邮箱格式** – 例如 `名.姓@`  \\n* **置信度** – 高/中/低  \\n* **邮箱状态** – `可送达`、`风险`等  \\n* **状态** – 切换为 `TRUE`  \\n\\n<!-- 可在“更新行”映射中添加电话、领英URL等信息 -->\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"1c56475c-a2e6-4c84-9082-1e7b729c0e39\",\n  \"connections\": {\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Verify Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Rows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Email Pattern\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Rows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Verify Email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Rows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Email Pattern\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Has Snippet Results?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenRouter Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Has Snippet Results?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Rows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}