{
  "url": "https://n8n.io/workflows/2517-send-google-analytics-data-to-ai-to-analyze-then-save-results-in-baserow/",
  "title": "Send Google analytics data to A.I. to analyze then save results in Baserow",
  "author": "Keith Rumjahn",
  "publish_date": "Last update 3 months ago",
  "publish_date_absolute": "2025-02-26",
  "categories": [
    {
      "name": "Product"
    },
    {
      "name": "AI"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"id\":\"K3uf8aY8wipScEay\",\"meta\":{\"instanceId\":\"558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a\",\"templateCredsSetupCompleted\":true},\"name\":\"Google analytics template\",\"tags\":[],\"nodes\":[{\"id\":\"6a9fc442-d0a3-48be-8dff-94f8d9cd5cf1\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[460,460],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"weeks\"}]}},\"typeVersion\":1.2},{\"id\":\"484cbc41-f57d-4c3d-a458-e439d480d290\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[460,640],\"parameters\":{},\"typeVersion\":1},{\"id\":\"b1b66e9b-5fea-407b-9c1e-39bd2a9d4a90\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[460,100],\"parameters\":{\"width\":714.172987012987,\"content\":\"## Send Google analytics to A.I. and save results to baserow\\n\\nThis workflow will check for country views, page engagement and google search console results. It will take this week's data and compare it to last week's data.\\n\\n[You can read more about this workflow here](https://rumjahn.com/how-i-used-a-i-to-be-an-seo-expert-and-analyzed-my-google-analytics-data-in-n8n-and-make-com/)\"},\"typeVersion\":1},{\"id\":\"adde29fc-ddb5-4b50-aa78-313ac9ede879\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[633.6540259740264,320],\"parameters\":{\"color\":4,\"width\":2097.92831168831,\"height\":342.6576623376624,\"content\":\"## Property ID\\n\\n1. Create your [Google Analytics Credentials](https://docs.n8n.io/integrations/builtin/credentials/google/oauth-single-service/?utm_source=n8n_app&utm_medium=credential_settings&utm_campaign=create_new_credentials_modal)\\n2. Enter your [property ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id).\"},\"typeVersion\":1},{\"id\":\"f2fb8535-e81e-4ca1-80df-ee68edba6386\",\"name\":\"Get Page Engagement Stats for this week\",\"type\":\"n8n-nodes-base.googleAnalytics\",\"position\":[700,460],\"parameters\":{\"simple\":false,\"returnAll\":true,\"metricsGA4\":{\"metricValues\":[{\"name\":\"screenPageViews\",\"listName\":\"other\"},{\"name\":\"activeUsers\",\"listName\":\"other\"},{\"name\":\"screenPageViewsPerUser\",\"listName\":\"other\"},{\"name\":\"eventCount\",\"listName\":\"other\"}]},\"propertyId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"460520224\"},\"dimensionsGA4\":{\"dimensionValues\":[{\"name\":\"unifiedScreenName\",\"listName\":\"other\"}]},\"additionalFields\":{}},\"credentials\":{\"googleAnalyticsOAuth2\":{\"id\":\"b1GX8VBMKCUNweV1\",\"name\":\"Google Analytics account\"}},\"typeVersion\":2},{\"id\":\"1d761425-cebf-4787-b286-b723a0851485\",\"name\":\"Get Page Engagement Stats for prior week\",\"type\":\"n8n-nodes-base.googleAnalytics\",\"position\":[1060,460],\"parameters\":{\"simple\":false,\"endDate\":\"2024-10-23T00:00:00\",\"dateRange\":\"custom\",\"returnAll\":true,\"startDate\":\"={{$today.minus({days: 14})}}\",\"metricsGA4\":{\"metricValues\":[{\"name\":\"screenPageViews\",\"listName\":\"other\"},{\"name\":\"activeUsers\",\"listName\":\"other\"},{\"name\":\"screenPageViewsPerUser\",\"listName\":\"other\"},{\"name\":\"eventCount\",\"listName\":\"other\"}]},\"propertyId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"460520224\"},\"dimensionsGA4\":{\"dimensionValues\":[{\"name\":\"unifiedScreenName\",\"listName\":\"other\"}]},\"additionalFields\":{}},\"typeVersion\":2},{\"id\":\"f8dac36b-9e8a-407f-b923-b4cea368f1bc\",\"name\":\"Parse data from Google Analytics\",\"type\":\"n8n-nodes-base.code\",\"position\":[880,460],\"parameters\":{\"jsCode\":\"function transformToUrlString(items) {\\n    // Debug logging\\n    console.log('Input items:', JSON.stringify(items, null, 2));\\n    \\n    // Check if items is an array and has content\\n    if (!Array.isArray(items) || items.length === 0) {\\n        console.log('Items is not an array or is empty');\\n        throw new Error('Invalid data structure');\\n    }\\n\\n    // Check if first item exists and has json property\\n    if (!items[0] || !items[0].json) {\\n        console.log('First item is missing or has no json property');\\n        throw new Error('Invalid data structure');\\n    }\\n\\n    // Get the analytics data\\n    const analyticsData = items[0].json;\\n    \\n    // Check if analyticsData has rows\\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\\n        console.log('Analytics data is missing or has no rows array');\\n        throw new Error('Invalid data structure');\\n    }\\n    \\n    // Map each row to a simplified object\\n    const simplified = analyticsData.rows.map(row => {\\n        if (!row.dimensionValues?.[0]?.value || !row.metricValues?.length) {\\n            console.log('Invalid row structure:', row);\\n            throw new Error('Invalid row structure');\\n        }\\n        \\n        return {\\n            page: row.dimensionValues[0].value,\\n            pageViews: parseInt(row.metricValues[0].value) || 0,\\n            activeUsers: parseInt(row.metricValues[1].value) || 0,\\n            viewsPerUser: parseFloat(row.metricValues[2].value) || 0,\\n            eventCount: parseInt(row.metricValues[3].value) || 0\\n        };\\n    });\\n    \\n    // Convert to JSON string and encode for URL\\n    return encodeURIComponent(JSON.stringify(simplified));\\n}\\n\\n// Get input data and transform it\\nconst urlString = transformToUrlString($input.all());\\n\\n// Return the result\\nreturn { json: { urlString } };\"},\"typeVersion\":2},{\"id\":\"ed880442-c92e-4347-b277-e8794aea6fbc\",\"name\":\"Parse GA data\",\"type\":\"n8n-nodes-base.code\",\"position\":[1240,460],\"parameters\":{\"jsCode\":\"function transformToUrlString(items) {\\n    // Debug logging\\n    console.log('Input items:', JSON.stringify(items, null, 2));\\n    \\n    // Check if items is an array and has content\\n    if (!Array.isArray(items) || items.length === 0) {\\n        console.log('Items is not an array or is empty');\\n        throw new Error('Invalid data structure');\\n    }\\n\\n    // Check if first item exists and has json property\\n    if (!items[0] || !items[0].json) {\\n        console.log('First item is missing or has no json property');\\n        throw new Error('Invalid data structure');\\n    }\\n\\n    // Get the analytics data\\n    const analyticsData = items[0].json;\\n    \\n    // Check if analyticsData has rows\\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\\n        console.log('Analytics data is missing or has no rows array');\\n        throw new Error('Invalid data structure');\\n    }\\n    \\n    // Map each row to a simplified object\\n    const simplified = analyticsData.rows.map(row => {\\n        if (!row.dimensionValues?.[0]?.value || !row.metricValues?.length) {\\n            console.log('Invalid row structure:', row);\\n            throw new Error('Invalid row structure');\\n        }\\n        \\n        return {\\n            page: row.dimensionValues[0].value,\\n            pageViews: parseInt(row.metricValues[0].value) || 0,\\n            activeUsers: parseInt(row.metricValues[1].value) || 0,\\n            viewsPerUser: parseFloat(row.metricValues[2].value) || 0,\\n            eventCount: parseInt(row.metricValues[3].value) || 0\\n        };\\n    });\\n    \\n    // Convert to JSON string and encode for URL\\n    return encodeURIComponent(JSON.stringify(simplified));\\n}\\n\\n// Get input data and transform it\\nconst urlString = transformToUrlString($input.all());\\n\\n// Return the result\\nreturn { json: { urlString } };\"},\"typeVersion\":2},{\"id\":\"46e092cc-af94-4e64-aa92-931c56345eff\",\"name\":\"Get Google Search Results for this week\",\"type\":\"n8n-nodes-base.googleAnalytics\",\"position\":[1420,460],\"parameters\":{\"simple\":false,\"returnAll\":true,\"metricsGA4\":{\"metricValues\":[{\"name\":\"activeUsers\",\"listName\":\"other\"},{\"name\":\"engagedSessions\",\"listName\":\"other\"},{\"name\":\"engagementRate\",\"listName\":\"other\"},{\"name\":\"eventCount\",\"listName\":\"other\"},{\"name\":\"organicGoogleSearchAveragePosition\",\"listName\":\"other\"},{\"name\":\"organicGoogleSearchClickThroughRate\",\"listName\":\"other\"},{\"name\":\"organicGoogleSearchClicks\",\"listName\":\"other\"},{\"name\":\"organicGoogleSearchImpressions\",\"listName\":\"other\"}]},\"propertyId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"460520224\"},\"dimensionsGA4\":{\"dimensionValues\":[{\"name\":\"landingPagePlusQueryString\",\"listName\":\"other\"}]},\"additionalFields\":{}},\"credentials\":{\"googleAnalyticsOAuth2\":{\"id\":\"b1GX8VBMKCUNweV1\",\"name\":\"Google Analytics account\"}},\"typeVersion\":2},{\"id\":\"709d0aaf-bd3d-4d83-9e66-b7df495855bd\",\"name\":\"Get Google Search Results for last week\",\"type\":\"n8n-nodes-base.googleAnalytics\",\"position\":[1780,460],\"parameters\":{\"simple\":false,\"endDate\":\"={{$today.minus({days: 7})}}\",\"dateRange\":\"custom\",\"returnAll\":true,\"startDate\":\"={{$today.minus({days: 14})}}\",\"metricsGA4\":{\"metricValues\":[{\"name\":\"activeUsers\",\"listName\":\"other\"},{\"name\":\"engagedSessions\",\"listName\":\"other\"},{\"name\":\"engagementRate\",\"listName\":\"other\"},{\"name\":\"eventCount\",\"listName\":\"other\"},{\"name\":\"organicGoogleSearchAveragePosition\",\"listName\":\"other\"},{\"name\":\"organicGoogleSearchClickThroughRate\",\"listName\":\"other\"},{\"name\":\"organicGoogleSearchClicks\",\"listName\":\"other\"},{\"name\":\"organicGoogleSearchImpressions\",\"listName\":\"other\"}]},\"propertyId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"460520224\"},\"dimensionsGA4\":{\"dimensionValues\":[{\"name\":\"landingPagePlusQueryString\",\"listName\":\"other\"}]},\"additionalFields\":{}},\"credentials\":{\"googleAnalyticsOAuth2\":{\"id\":\"b1GX8VBMKCUNweV1\",\"name\":\"Google Analytics account\"}},\"typeVersion\":2},{\"id\":\"7d3835d6-d1f5-4159-8e34-871871e63989\",\"name\":\"Parse Google Analytics Data\",\"type\":\"n8n-nodes-base.code\",\"position\":[1600,460],\"parameters\":{\"jsCode\":\"function transformToUrlString(items) {\\n    // In n8n, we need to check if items is an array and get the json property\\n    const data = items[0].json;\\n    \\n    if (!data || !data.rows) {\\n        console.log('No valid data found');\\n        return encodeURIComponent(JSON.stringify([]));\\n    }\\n    \\n    try {\\n        // Process each row\\n        const simplified = data.rows.map(row => ({\\n            page: row.dimensionValues[0].value,\\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\\n            engagedSessions: parseInt(row.metricValues[1].value) || 0,\\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\\n            eventCount: parseInt(row.metricValues[3].value) || 0,\\n            avgPosition: parseFloat(row.metricValues[4].value) || 0,\\n            ctr: parseFloat(row.metricValues[5].value) || 0,\\n            clicks: parseInt(row.metricValues[6].value) || 0,\\n            impressions: parseInt(row.metricValues[7].value) || 0\\n        }));\\n        \\n        return encodeURIComponent(JSON.stringify(simplified));\\n    } catch (error) {\\n        console.log('Error processing data:', error);\\n        throw new Error('Invalid data structure');\\n    }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"},\"typeVersion\":2},{\"id\":\"c018fda4-a2e6-48f4-aabb-039c66374dc7\",\"name\":\"Parse Google Analytics Data1\",\"type\":\"n8n-nodes-base.code\",\"position\":[1940,460],\"parameters\":{\"jsCode\":\"function transformToUrlString(items) {\\n    // In n8n, we need to check if items is an array and get the json property\\n    const data = items[0].json;\\n    \\n    if (!data || !data.rows) {\\n        console.log('No valid data found');\\n        return encodeURIComponent(JSON.stringify([]));\\n    }\\n    \\n    try {\\n        // Process each row\\n        const simplified = data.rows.map(row => ({\\n            page: row.dimensionValues[0].value,\\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\\n            engagedSessions: parseInt(row.metricValues[1].value) || 0,\\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\\n            eventCount: parseInt(row.metricValues[3].value) || 0,\\n            avgPosition: parseFloat(row.metricValues[4].value) || 0,\\n            ctr: parseFloat(row.metricValues[5].value) || 0,\\n            clicks: parseInt(row.metricValues[6].value) || 0,\\n            impressions: parseInt(row.metricValues[7].value) || 0\\n        }));\\n        \\n        return encodeURIComponent(JSON.stringify(simplified));\\n    } catch (error) {\\n        console.log('Error processing data:', error);\\n        throw new Error('Invalid data structure');\\n    }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"},\"typeVersion\":2},{\"id\":\"d8f775cd-daf9-42de-a527-d932be46d945\",\"name\":\"Get Country views data for this week\",\"type\":\"n8n-nodes-base.googleAnalytics\",\"position\":[2120,460],\"parameters\":{\"simple\":false,\"returnAll\":true,\"metricsGA4\":{\"metricValues\":[{\"name\":\"activeUsers\",\"listName\":\"other\"},{\"name\":\"newUsers\",\"listName\":\"other\"},{\"name\":\"engagementRate\",\"listName\":\"other\"},{\"name\":\"engagedSessions\",\"listName\":\"other\"},{\"name\":\"eventCount\",\"listName\":\"other\"},{\"listName\":\"other\"},{\"name\":\"sessions\",\"listName\":\"other\"}]},\"propertyId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"460520224\"},\"dimensionsGA4\":{\"dimensionValues\":[{\"name\":\"country\",\"listName\":\"other\"}]},\"additionalFields\":{}},\"credentials\":{\"googleAnalyticsOAuth2\":{\"id\":\"b1GX8VBMKCUNweV1\",\"name\":\"Google Analytics account\"}},\"typeVersion\":2},{\"id\":\"7119e57c-cbf4-49a9-b0c9-1f3da1fd2af3\",\"name\":\"Get Country views data for last week\",\"type\":\"n8n-nodes-base.googleAnalytics\",\"position\":[2440,460],\"parameters\":{\"simple\":false,\"endDate\":\"={{$today.minus({days: 7})}}\",\"dateRange\":\"custom\",\"returnAll\":true,\"startDate\":\"={{$today.minus({days: 14})}}\",\"metricsGA4\":{\"metricValues\":[{\"name\":\"activeUsers\",\"listName\":\"other\"},{\"name\":\"newUsers\",\"listName\":\"other\"},{\"name\":\"engagementRate\",\"listName\":\"other\"},{\"name\":\"engagedSessions\",\"listName\":\"other\"},{\"name\":\"eventCount\",\"listName\":\"other\"},{\"listName\":\"other\"},{\"name\":\"sessions\",\"listName\":\"other\"}]},\"propertyId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"460520224\"},\"dimensionsGA4\":{\"dimensionValues\":[{\"name\":\"country\",\"listName\":\"other\"}]},\"additionalFields\":{}},\"typeVersion\":2},{\"id\":\"546d6cd2-6db6-4276-be35-abbe5a7e9b6a\",\"name\":\"Parse Google analytics data\",\"type\":\"n8n-nodes-base.code\",\"position\":[2280,460],\"parameters\":{\"jsCode\":\"function transformToUrlString(items) {\\n    // In n8n, we need to check if items is an array and get the json property\\n    const data = items[0].json;\\n    \\n    if (!data || !data.rows) {\\n        console.log('No valid data found');\\n        return encodeURIComponent(JSON.stringify([]));\\n    }\\n    \\n    try {\\n        // Process each row\\n        const simplified = data.rows.map(row => ({\\n            country: row.dimensionValues[0].value,\\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\\n            newUsers: parseInt(row.metricValues[1].value) || 0,\\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\\n            engagedSessions: parseInt(row.metricValues[3].value) || 0,\\n            eventCount: parseInt(row.metricValues[4].value) || 0,\\n            totalUsers: parseInt(row.metricValues[5].value) || 0,\\n            sessions: parseInt(row.metricValues[6].value) || 0\\n        }));\\n        \\n        return encodeURIComponent(JSON.stringify(simplified));\\n    } catch (error) {\\n        console.log('Error processing data:', error);\\n        throw new Error('Invalid data structure');\\n    }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"},\"typeVersion\":2},{\"id\":\"87cb137c-686d-49a5-8657-06ed0c5f5c27\",\"name\":\"Parse Google analytics data1\",\"type\":\"n8n-nodes-base.code\",\"position\":[2600,460],\"parameters\":{\"jsCode\":\"function transformToUrlString(items) {\\n    // In n8n, we need to check if items is an array and get the json property\\n    const data = items[0].json;\\n    \\n    if (!data || !data.rows) {\\n        console.log('No valid data found');\\n        return encodeURIComponent(JSON.stringify([]));\\n    }\\n    \\n    try {\\n        // Process each row\\n        const simplified = data.rows.map(row => ({\\n            country: row.dimensionValues[0].value,\\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\\n            newUsers: parseInt(row.metricValues[1].value) || 0,\\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\\n            engagedSessions: parseInt(row.metricValues[3].value) || 0,\\n            eventCount: parseInt(row.metricValues[4].value) || 0,\\n            totalUsers: parseInt(row.metricValues[5].value) || 0,\\n            sessions: parseInt(row.metricValues[6].value) || 0\\n        }));\\n        \\n        return encodeURIComponent(JSON.stringify(simplified));\\n    } catch (error) {\\n        console.log('Error processing data:', error);\\n        throw new Error('Invalid data structure');\\n    }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"},\"typeVersion\":2},{\"id\":\"06c4478d-a13a-4587-9f1f-451a68798a9f\",\"name\":\"Send page data to A.I.\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2760,460],\"parameters\":{\"url\":\"https://openrouter.ai/api/v1/chat/completions\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"model\\\": \\\"meta-llama/llama-3.1-70b-instruct:free\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"You are an SEO expert. Compare the data from past 2 weeks, give me a table in markdown. Then give me 5 suggestions to improve my SEO. Output the data so that it works with markdown editors. Data from 2 weeks ago:{{ $json.urlString }} Data from last week: {{ $('Parse data from Google Analytics').item.json.urlString }}\\\"\\n    }\\n  ]\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"typeVersion\":4.2,\"alwaysOutputData\":false},{\"id\":\"4ad522b0-afe4-4eff-aa16-b86cc892ead8\",\"name\":\"Send page Search data to A.I.\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2920,460],\"parameters\":{\"url\":\"https://openrouter.ai/api/v1/chat/completions\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"model\\\": \\\"meta-llama/llama-3.1-70b-instruct:free\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"You are an SEO expert. Compare the data from past 2 weeks, give me a table in markdown. Then give me 5 suggestions to improve my SEO. Output the data so that it works with markdown editors. Data from 2 weeks ago:{{ $('Parse Google Analytics Data1').item.json.urlString }} Data from last week:{{ $('Parse Google Analytics Data').item.json.urlString }}\\\"\\n    }\\n  ]\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"typeVersion\":4.2,\"alwaysOutputData\":false},{\"id\":\"07e1eebf-f16a-44c0-83b5-76bf65a3d3fc\",\"name\":\"Send country view data to A.I.\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[3080,460],\"parameters\":{\"url\":\"https://openrouter.ai/api/v1/chat/completions\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"model\\\": \\\"meta-llama/llama-3.1-70b-instruct:free\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"You are an SEO expert. Compare the data from past 2 weeks, give me a table in markdown. Then give me 5 suggestions to improve my SEO. Output the data so that it works with markdown editors. Data from 2 weeks ago:{{ $('Parse Google analytics data1').item.json.urlString }} Data from last week:{{ $('Parse Google analytics data').item.json.urlString }}\\\"\\n    }\\n  ]\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"typeVersion\":4.2,\"alwaysOutputData\":false},{\"id\":\"c4648ad8-2377-42a0-a431-931b53631c9d\",\"name\":\"Save A.I. output to Baserow\",\"type\":\"n8n-nodes-base.baserow\",\"position\":[3240,460],\"parameters\":{\"tableId\":601,\"fieldsUi\":{\"fieldValues\":[{\"fieldId\":5833,\"fieldValue\":\"Name of your blog\"},{\"fieldId\":5831,\"fieldValue\":\"={{ $('Send page data to A.I.').item.json.choices[0].message.content }}\"},{\"fieldId\":5830,\"fieldValue\":\"={{ $('Send page Search data to A.I.').item.json.choices[0].message.content }}\"},{\"fieldId\":5832,\"fieldValue\":\"={{ $json.choices[0].message.content }}\"},{\"fieldId\":5829,\"fieldValue\":\"={{ DateTime.now() }}\"}]},\"operation\":\"create\",\"databaseId\":121},\"typeVersion\":1},{\"id\":\"e185c836-c12f-4452-92bd-0daaf33b653a\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2760,180],\"parameters\":{\"color\":5,\"width\":441.7412987012988,\"height\":508.95792207792226,\"content\":\"## Send data to A.I.\\n\\nFill in your Openrouter A.I. credentials. Use Header Auth.\\n- Username: Authorization\\n- Password: Bearer {insert your API key}\\n\\nRemember to add a space after bearer. Also, feel free to modify the prompt to A.1.\"},\"typeVersion\":1},{\"id\":\"a1de2d16-d09e-4c74-8be1-f6bab8c34246\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[3220,180],\"parameters\":{\"color\":6,\"width\":331.32883116883124,\"height\":474.88,\"content\":\"## Send data to Baserow\\n\\nCreate a table first with the following columns:\\n- Name\\n- Country Views\\n- Page Views\\n- Search Report\\n- Blog \\n\\nEnter the name of your website under \\\"Blog\\\" field.\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"ac4b5eac-1c84-49ce-9ff7-794f857265b4\",\"connections\":{\"Parse GA data\":{\"main\":[[{\"node\":\"Get Google Search Results for this week\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Get Page Engagement Stats for this week\",\"type\":\"main\",\"index\":0}]]},\"Send page data to A.I.\":{\"main\":[[{\"node\":\"Send page Search data to A.I.\",\"type\":\"main\",\"index\":0}]]},\"Parse Google Analytics Data\":{\"main\":[[{\"node\":\"Get Google Search Results for last week\",\"type\":\"main\",\"index\":0}]]},\"Parse Google analytics data\":{\"main\":[[{\"node\":\"Get Country views data for last week\",\"type\":\"main\",\"index\":0}]]},\"Parse Google Analytics Data1\":{\"main\":[[{\"node\":\"Get Country views data for this week\",\"type\":\"main\",\"index\":0}]]},\"Parse Google analytics data1\":{\"main\":[[{\"node\":\"Send page data to A.I.\",\"type\":\"main\",\"index\":0}]]},\"Send page Search data to A.I.\":{\"main\":[[{\"node\":\"Send country view data to A.I.\",\"type\":\"main\",\"index\":0}]]},\"Send country view data to A.I.\":{\"main\":[[{\"node\":\"Save A.I. output to Baserow\",\"type\":\"main\",\"index\":0}]]},\"Parse data from Google Analytics\":{\"main\":[[{\"node\":\"Get Page Engagement Stats for prior week\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Get Page Engagement Stats for this week\",\"type\":\"main\",\"index\":0}]]},\"Get Country views data for last week\":{\"main\":[[{\"node\":\"Parse Google analytics data1\",\"type\":\"main\",\"index\":0}]]},\"Get Country views data for this week\":{\"main\":[[{\"node\":\"Parse Google analytics data\",\"type\":\"main\",\"index\":0}]]},\"Get Google Search Results for last week\":{\"main\":[[{\"node\":\"Parse Google Analytics Data1\",\"type\":\"main\",\"index\":0}]]},\"Get Google Search Results for this week\":{\"main\":[[{\"node\":\"Parse Google Analytics Data\",\"type\":\"main\",\"index\":0}]]},\"Get Page Engagement Stats for this week\":{\"main\":[[{\"node\":\"Parse data from Google Analytics\",\"type\":\"main\",\"index\":0}]]},\"Get Page Engagement Stats for prior week\":{\"main\":[[{\"node\":\"Parse GA data\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Who's this for?\n\n  * If you own a website and need to analyze your Google analytics data\n  * If you need to create an SEO report on which pages are getting most traffic or how your google search terms are performing\n  * If you want to grow your site based on suggestions from data\n\n\n\n![Screenshot 20241101 at 11.07.21 PM.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_11_01_at_11_07_21_PM_b98ad0f6c2.png)  \n![Screenshot 20241101 at 11.07.31 PM.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_11_01_at_11_07_31_PM_eae0cf406b.png)\n\n## Use case\n\nInstead of hiring an SEO expert, I run this report weekly. It checks compares the data from this week to the week before:\n\n  * Views based on countries\n  * The top performing pages\n  * Google search console performance\n\n\n\n[Watch youtube tutorial here](https://www.youtube.com/watch?v=KlWFhTz9M9g)\n\n[Get my SEO A.I. agent system here](https://2828633406999.gumroad.com/l/rumjahn)\n\n[Read my detailed case study here](https://rumjahn.com/how-i-used-a-i-to-be-an-seo-expert-and-analyzed-my-google-analytics-data-in-n8n-and-make-com/)\n\n## How it works\n\n  * The workflow gathers google analytics for the past 7 days then it gathers the data for the week before for comparison.\n  * It does this 3 times to get: views per country, engagement per page and google search console results for organic search results.\n  * The google analytics nodes has already chosen the correct dimensions and metrics.\n  * At the end, it passes the data to [openrouter.ai](http://openrouter.ai) for A.I. analyse.\n  * Finally it saves to baserow.\n\n\n\n## How to use this\n\n  * Input your Google analytics credentials\n  * Input your property ID\n  * Input your [Openrouter.ai](http://Openrouter.ai) credentials\n  * Input your baserow credentials\n  * You will need to create a baserow database with columns: Name, Country Views, Page Views, Search Report, Blog (name of your blog).\n\n\n\nCreated by [Rumjahn](https://rumjahn.com/)\n",
  "crawled_at": "2025-05-26T00:08:12.673248",
  "readme_zh": "## 适用对象\n\n  * 拥有网站并需要分析Google Analytics数据的用户\n  * 需要生成SEO报告（如流量最高页面/谷歌搜索词表现）的用户\n  * 希望根据数据建议优化网站增长的用户",
  "title_zh": "将谷歌分析数据发送至人工智能进行分析，然后将结果保存至Baserow",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"id\": \"K3uf8aY8wipScEay\",\n  \"meta\": {\n    \"instanceId\": \"558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Google analytics template\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"6a9fc442-d0a3-48be-8dff-94f8d9cd5cf1\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        460,\n        460\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"weeks\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"484cbc41-f57d-4c3d-a458-e439d480d290\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        460,\n        640\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b1b66e9b-5fea-407b-9c1e-39bd2a9d4a90\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        460,\n        100\n      ],\n      \"parameters\": {\n        \"width\": 714.172987012987,\n        \"content\": \"## 将谷歌分析数据发送至AI并保存结果至Baserow\\n\\n此工作流将检查国家浏览量、页面参与度及谷歌搜索控制台结果。它会提取本周数据并与上周数据进行对比分析。\\n\\n[点击此处可查阅此工作流的详细说明](https://rumjahn.com/how-i-used-a-i-to-be-an-seo-expert-and-analyzed-my-google-analytics-data-in-n8n-and-make-com/)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"adde29fc-ddb5-4b50-aa78-313ac9ede879\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        633.6540259740264,\n        320\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 2097.92831168831,\n        \"height\": 342.6576623376624,\n        \"content\": \"## 属性ID\\n\\n1. 创建您的[Google Analytics凭据](https://docs.n8n.io/integrations/builtin/credentials/google/oauth-single-service/?utm_source=n8n_app&utm_medium=credential_settings&utm_campaign=create_new_credentials_modal)\\n2. 输入您的[属性ID](https://developers.google.com/analytics/devguides/reporting/data/v1/property-id)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f2fb8535-e81e-4ca1-80df-ee68edba6386\",\n      \"name\": \"Get Page Engagement Stats for this week\",\n      \"type\": \"n8n-nodes-base.googleAnalytics\",\n      \"position\": [\n        700,\n        460\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"returnAll\": true,\n        \"metricsGA4\": {\n          \"metricValues\": [\n            {\n              \"name\": \"screenPageViews\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"activeUsers\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"screenPageViewsPerUser\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"eventCount\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"propertyId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"460520224\"\n        },\n        \"dimensionsGA4\": {\n          \"dimensionValues\": [\n            {\n              \"name\": \"unifiedScreenName\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"googleAnalyticsOAuth2\": {\n          \"id\": \"b1GX8VBMKCUNweV1\",\n          \"name\": \"Google Analytics account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1d761425-cebf-4787-b286-b723a0851485\",\n      \"name\": \"Get Page Engagement Stats for prior week\",\n      \"type\": \"n8n-nodes-base.googleAnalytics\",\n      \"position\": [\n        1060,\n        460\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"endDate\": \"2024-10-23T00:00:00\",\n        \"dateRange\": \"custom\",\n        \"returnAll\": true,\n        \"startDate\": \"={{$today.minus({days: 14})}}\",\n        \"metricsGA4\": {\n          \"metricValues\": [\n            {\n              \"name\": \"screenPageViews\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"activeUsers\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"screenPageViewsPerUser\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"eventCount\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"propertyId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"460520224\"\n        },\n        \"dimensionsGA4\": {\n          \"dimensionValues\": [\n            {\n              \"name\": \"unifiedScreenName\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"additionalFields\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f8dac36b-9e8a-407f-b923-b4cea368f1bc\",\n      \"name\": \"Parse data from Google Analytics\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        880,\n        460\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function transformToUrlString(items) {\\n    // Debug logging\\n    console.log('Input items:', JSON.stringify(items, null, 2));\\n    \\n    // Check if items is an array and has content\\n    if (!Array.isArray(items) || items.length === 0) {\\n        console.log('Items is not an array or is empty');\\n        throw new Error('Invalid data structure');\\n    }\\n\\n    // Check if first item exists and has json property\\n    if (!items[0] || !items[0].json) {\\n        console.log('First item is missing or has no json property');\\n        throw new Error('Invalid data structure');\\n    }\\n\\n    // Get the analytics data\\n    const analyticsData = items[0].json;\\n    \\n    // Check if analyticsData has rows\\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\\n        console.log('Analytics data is missing or has no rows array');\\n        throw new Error('Invalid data structure');\\n    }\\n    \\n    // Map each row to a simplified object\\n    const simplified = analyticsData.rows.map(row => {\\n        if (!row.dimensionValues?.[0]?.value || !row.metricValues?.length) {\\n            console.log('Invalid row structure:', row);\\n            throw new Error('Invalid row structure');\\n        }\\n        \\n        return {\\n            page: row.dimensionValues[0].value,\\n            pageViews: parseInt(row.metricValues[0].value) || 0,\\n            activeUsers: parseInt(row.metricValues[1].value) || 0,\\n            viewsPerUser: parseFloat(row.metricValues[2].value) || 0,\\n            eventCount: parseInt(row.metricValues[3].value) || 0\\n        };\\n    });\\n    \\n    // Convert to JSON string and encode for URL\\n    return encodeURIComponent(JSON.stringify(simplified));\\n}\\n\\n// Get input data and transform it\\nconst urlString = transformToUrlString($input.all());\\n\\n// Return the result\\nreturn { json: { urlString } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ed880442-c92e-4347-b277-e8794aea6fbc\",\n      \"name\": \"Parse GA data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1240,\n        460\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function transformToUrlString(items) {\\n    // Debug logging\\n    console.log('Input items:', JSON.stringify(items, null, 2));\\n    \\n    // Check if items is an array and has content\\n    if (!Array.isArray(items) || items.length === 0) {\\n        console.log('Items is not an array or is empty');\\n        throw new Error('Invalid data structure');\\n    }\\n\\n    // Check if first item exists and has json property\\n    if (!items[0] || !items[0].json) {\\n        console.log('First item is missing or has no json property');\\n        throw new Error('Invalid data structure');\\n    }\\n\\n    // Get the analytics data\\n    const analyticsData = items[0].json;\\n    \\n    // Check if analyticsData has rows\\n    if (!analyticsData || !Array.isArray(analyticsData.rows)) {\\n        console.log('Analytics data is missing or has no rows array');\\n        throw new Error('Invalid data structure');\\n    }\\n    \\n    // Map each row to a simplified object\\n    const simplified = analyticsData.rows.map(row => {\\n        if (!row.dimensionValues?.[0]?.value || !row.metricValues?.length) {\\n            console.log('Invalid row structure:', row);\\n            throw new Error('Invalid row structure');\\n        }\\n        \\n        return {\\n            page: row.dimensionValues[0].value,\\n            pageViews: parseInt(row.metricValues[0].value) || 0,\\n            activeUsers: parseInt(row.metricValues[1].value) || 0,\\n            viewsPerUser: parseFloat(row.metricValues[2].value) || 0,\\n            eventCount: parseInt(row.metricValues[3].value) || 0\\n        };\\n    });\\n    \\n    // Convert to JSON string and encode for URL\\n    return encodeURIComponent(JSON.stringify(simplified));\\n}\\n\\n// Get input data and transform it\\nconst urlString = transformToUrlString($input.all());\\n\\n// Return the result\\nreturn { json: { urlString } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"46e092cc-af94-4e64-aa92-931c56345eff\",\n      \"name\": \"Get Google Search Results for this week\",\n      \"type\": \"n8n-nodes-base.googleAnalytics\",\n      \"position\": [\n        1420,\n        460\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"returnAll\": true,\n        \"metricsGA4\": {\n          \"metricValues\": [\n            {\n              \"name\": \"activeUsers\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"engagedSessions\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"engagementRate\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"eventCount\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"organicGoogleSearchAveragePosition\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"organicGoogleSearchClickThroughRate\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"organicGoogleSearchClicks\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"organicGoogleSearchImpressions\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"propertyId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"460520224\"\n        },\n        \"dimensionsGA4\": {\n          \"dimensionValues\": [\n            {\n              \"name\": \"landingPagePlusQueryString\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"googleAnalyticsOAuth2\": {\n          \"id\": \"b1GX8VBMKCUNweV1\",\n          \"name\": \"Google Analytics account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"709d0aaf-bd3d-4d83-9e66-b7df495855bd\",\n      \"name\": \"Get Google Search Results for last week\",\n      \"type\": \"n8n-nodes-base.googleAnalytics\",\n      \"position\": [\n        1780,\n        460\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"endDate\": \"={{$today.minus({days: 7})}}\",\n        \"dateRange\": \"custom\",\n        \"returnAll\": true,\n        \"startDate\": \"={{$today.minus({days: 14})}}\",\n        \"metricsGA4\": {\n          \"metricValues\": [\n            {\n              \"name\": \"activeUsers\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"engagedSessions\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"engagementRate\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"eventCount\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"organicGoogleSearchAveragePosition\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"organicGoogleSearchClickThroughRate\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"organicGoogleSearchClicks\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"organicGoogleSearchImpressions\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"propertyId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"460520224\"\n        },\n        \"dimensionsGA4\": {\n          \"dimensionValues\": [\n            {\n              \"name\": \"landingPagePlusQueryString\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"googleAnalyticsOAuth2\": {\n          \"id\": \"b1GX8VBMKCUNweV1\",\n          \"name\": \"Google Analytics account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7d3835d6-d1f5-4159-8e34-871871e63989\",\n      \"name\": \"Parse Google Analytics Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1600,\n        460\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function transformToUrlString(items) {\\n    // In n8n, we need to check if items is an array and get the json property\\n    const data = items[0].json;\\n    \\n    if (!data || !data.rows) {\\n        console.log('No valid data found');\\n        return encodeURIComponent(JSON.stringify([]));\\n    }\\n    \\n    try {\\n        // Process each row\\n        const simplified = data.rows.map(row => ({\\n            page: row.dimensionValues[0].value,\\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\\n            engagedSessions: parseInt(row.metricValues[1].value) || 0,\\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\\n            eventCount: parseInt(row.metricValues[3].value) || 0,\\n            avgPosition: parseFloat(row.metricValues[4].value) || 0,\\n            ctr: parseFloat(row.metricValues[5].value) || 0,\\n            clicks: parseInt(row.metricValues[6].value) || 0,\\n            impressions: parseInt(row.metricValues[7].value) || 0\\n        }));\\n        \\n        return encodeURIComponent(JSON.stringify(simplified));\\n    } catch (error) {\\n        console.log('Error processing data:', error);\\n        throw new Error('Invalid data structure');\\n    }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c018fda4-a2e6-48f4-aabb-039c66374dc7\",\n      \"name\": \"Parse Google Analytics Data1\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1940,\n        460\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function transformToUrlString(items) {\\n    // In n8n, we need to check if items is an array and get the json property\\n    const data = items[0].json;\\n    \\n    if (!data || !data.rows) {\\n        console.log('No valid data found');\\n        return encodeURIComponent(JSON.stringify([]));\\n    }\\n    \\n    try {\\n        // Process each row\\n        const simplified = data.rows.map(row => ({\\n            page: row.dimensionValues[0].value,\\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\\n            engagedSessions: parseInt(row.metricValues[1].value) || 0,\\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\\n            eventCount: parseInt(row.metricValues[3].value) || 0,\\n            avgPosition: parseFloat(row.metricValues[4].value) || 0,\\n            ctr: parseFloat(row.metricValues[5].value) || 0,\\n            clicks: parseInt(row.metricValues[6].value) || 0,\\n            impressions: parseInt(row.metricValues[7].value) || 0\\n        }));\\n        \\n        return encodeURIComponent(JSON.stringify(simplified));\\n    } catch (error) {\\n        console.log('Error processing data:', error);\\n        throw new Error('Invalid data structure');\\n    }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d8f775cd-daf9-42de-a527-d932be46d945\",\n      \"name\": \"Get Country views data for this week\",\n      \"type\": \"n8n-nodes-base.googleAnalytics\",\n      \"position\": [\n        2120,\n        460\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"returnAll\": true,\n        \"metricsGA4\": {\n          \"metricValues\": [\n            {\n              \"name\": \"activeUsers\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"newUsers\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"engagementRate\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"engagedSessions\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"eventCount\",\n              \"listName\": \"other\"\n            },\n            {\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"sessions\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"propertyId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"460520224\"\n        },\n        \"dimensionsGA4\": {\n          \"dimensionValues\": [\n            {\n              \"name\": \"country\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"googleAnalyticsOAuth2\": {\n          \"id\": \"b1GX8VBMKCUNweV1\",\n          \"name\": \"Google Analytics account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7119e57c-cbf4-49a9-b0c9-1f3da1fd2af3\",\n      \"name\": \"Get Country views data for last week\",\n      \"type\": \"n8n-nodes-base.googleAnalytics\",\n      \"position\": [\n        2440,\n        460\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"endDate\": \"={{$today.minus({days: 7})}}\",\n        \"dateRange\": \"custom\",\n        \"returnAll\": true,\n        \"startDate\": \"={{$today.minus({days: 14})}}\",\n        \"metricsGA4\": {\n          \"metricValues\": [\n            {\n              \"name\": \"activeUsers\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"newUsers\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"engagementRate\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"engagedSessions\",\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"eventCount\",\n              \"listName\": \"other\"\n            },\n            {\n              \"listName\": \"other\"\n            },\n            {\n              \"name\": \"sessions\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"propertyId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"460520224\"\n        },\n        \"dimensionsGA4\": {\n          \"dimensionValues\": [\n            {\n              \"name\": \"country\",\n              \"listName\": \"other\"\n            }\n          ]\n        },\n        \"additionalFields\": {}\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"546d6cd2-6db6-4276-be35-abbe5a7e9b6a\",\n      \"name\": \"Parse Google analytics data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2280,\n        460\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function transformToUrlString(items) {\\n    // In n8n, we need to check if items is an array and get the json property\\n    const data = items[0].json;\\n    \\n    if (!data || !data.rows) {\\n        console.log('No valid data found');\\n        return encodeURIComponent(JSON.stringify([]));\\n    }\\n    \\n    try {\\n        // Process each row\\n        const simplified = data.rows.map(row => ({\\n            country: row.dimensionValues[0].value,\\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\\n            newUsers: parseInt(row.metricValues[1].value) || 0,\\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\\n            engagedSessions: parseInt(row.metricValues[3].value) || 0,\\n            eventCount: parseInt(row.metricValues[4].value) || 0,\\n            totalUsers: parseInt(row.metricValues[5].value) || 0,\\n            sessions: parseInt(row.metricValues[6].value) || 0\\n        }));\\n        \\n        return encodeURIComponent(JSON.stringify(simplified));\\n    } catch (error) {\\n        console.log('Error processing data:', error);\\n        throw new Error('Invalid data structure');\\n    }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"87cb137c-686d-49a5-8657-06ed0c5f5c27\",\n      \"name\": \"Parse Google analytics data1\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2600,\n        460\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function transformToUrlString(items) {\\n    // In n8n, we need to check if items is an array and get the json property\\n    const data = items[0].json;\\n    \\n    if (!data || !data.rows) {\\n        console.log('No valid data found');\\n        return encodeURIComponent(JSON.stringify([]));\\n    }\\n    \\n    try {\\n        // Process each row\\n        const simplified = data.rows.map(row => ({\\n            country: row.dimensionValues[0].value,\\n            activeUsers: parseInt(row.metricValues[0].value) || 0,\\n            newUsers: parseInt(row.metricValues[1].value) || 0,\\n            engagementRate: parseFloat(row.metricValues[2].value) || 0,\\n            engagedSessions: parseInt(row.metricValues[3].value) || 0,\\n            eventCount: parseInt(row.metricValues[4].value) || 0,\\n            totalUsers: parseInt(row.metricValues[5].value) || 0,\\n            sessions: parseInt(row.metricValues[6].value) || 0\\n        }));\\n        \\n        return encodeURIComponent(JSON.stringify(simplified));\\n    } catch (error) {\\n        console.log('Error processing data:', error);\\n        throw new Error('Invalid data structure');\\n    }\\n}\\n\\n// Get the input data\\nconst items = $input.all();\\n\\n// Process the data\\nconst result = transformToUrlString(items);\\n\\n// Return the result\\nreturn { json: { urlString: result } };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"06c4478d-a13a-4587-9f1f-451a68798a9f\",\n      \"name\": \"Send page data to A.I.\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2760,\n        460\n      ],\n      \"parameters\": {\n        \"url\": \"https://openrouter.ai/api/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"meta-llama/llama-3.1-70b-instruct:free\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"You are an SEO expert. Compare the data from past 2 weeks, give me a table in markdown. Then give me 5 suggestions to improve my SEO. Output the data so that it works with markdown editors. Data from 2 weeks ago:{{ $json.urlString }} Data from last week: {{ $('Parse data from Google Analytics').item.json.urlString }}\\\"\\n    }\\n  ]\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"4ad522b0-afe4-4eff-aa16-b86cc892ead8\",\n      \"name\": \"Send page Search data to A.I.\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2920,\n        460\n      ],\n      \"parameters\": {\n        \"url\": \"https://openrouter.ai/api/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"meta-llama/llama-3.1-70b-instruct:free\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"You are an SEO expert. Compare the data from past 2 weeks, give me a table in markdown. Then give me 5 suggestions to improve my SEO. Output the data so that it works with markdown editors. Data from 2 weeks ago:{{ $('Parse Google Analytics Data1').item.json.urlString }} Data from last week:{{ $('Parse Google Analytics Data').item.json.urlString }}\\\"\\n    }\\n  ]\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"07e1eebf-f16a-44c0-83b5-76bf65a3d3fc\",\n      \"name\": \"Send country view data to A.I.\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        3080,\n        460\n      ],\n      \"parameters\": {\n        \"url\": \"https://openrouter.ai/api/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"meta-llama/llama-3.1-70b-instruct:free\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"You are an SEO expert. Compare the data from past 2 weeks, give me a table in markdown. Then give me 5 suggestions to improve my SEO. Output the data so that it works with markdown editors. Data from 2 weeks ago:{{ $('Parse Google analytics data1').item.json.urlString }} Data from last week:{{ $('Parse Google analytics data').item.json.urlString }}\\\"\\n    }\\n  ]\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"c4648ad8-2377-42a0-a431-931b53631c9d\",\n      \"name\": \"Save A.I. output to Baserow\",\n      \"type\": \"n8n-nodes-base.baserow\",\n      \"position\": [\n        3240,\n        460\n      ],\n      \"parameters\": {\n        \"tableId\": 601,\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": 5833,\n              \"fieldValue\": \"Name of your blog\"\n            },\n            {\n              \"fieldId\": 5831,\n              \"fieldValue\": \"={{ $('Send page data to A.I.').item.json.choices[0].message.content }}\"\n            },\n            {\n              \"fieldId\": 5830,\n              \"fieldValue\": \"={{ $('Send page Search data to A.I.').item.json.choices[0].message.content }}\"\n            },\n            {\n              \"fieldId\": 5832,\n              \"fieldValue\": \"={{ $json.choices[0].message.content }}\"\n            },\n            {\n              \"fieldId\": 5829,\n              \"fieldValue\": \"={{ DateTime.now() }}\"\n            }\n          ]\n        },\n        \"operation\": \"create\",\n        \"databaseId\": 121\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e185c836-c12f-4452-92bd-0daaf33b653a\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2760,\n        180\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 441.7412987012988,\n        \"height\": 508.95792207792226,\n        \"content\": \"## 发送数据至人工智能\\n\\n填写您的Openrouter人工智能凭证。使用头部认证方式。\\n- 用户名：Authorization\\n- 密码：Bearer {插入您的API密钥}\\n\\n注意Bearer后需保留空格。您也可根据需求自由修改向人工智能提交的指令文本。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a1de2d16-d09e-4c74-8be1-f6bab8c34246\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3220,\n        180\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 331.32883116883124,\n        \"height\": 474.88,\n        \"content\": \"## 发送数据至Baserow\\n\\n首先创建包含以下字段的表格：\\n- 名称\\n- 国家访问量\\n- 页面浏览量\\n- 搜索报告\\n- 博客\\n\\n在\\\"博客\\\"字段中输入您的网站名称。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"ac4b5eac-1c84-49ce-9ff7-794f857265b4\",\n  \"connections\": {\n    \"Parse GA data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Google Search Results for this week\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Page Engagement Stats for this week\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send page data to A.I.\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send page Search data to A.I.\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Google Analytics Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Google Search Results for last week\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Google analytics data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Country views data for last week\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Google Analytics Data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Country views data for this week\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Google analytics data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send page data to A.I.\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send page Search data to A.I.\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send country view data to A.I.\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send country view data to A.I.\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save A.I. output to Baserow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse data from Google Analytics\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Page Engagement Stats for prior week\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Page Engagement Stats for this week\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Country views data for last week\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Google analytics data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Country views data for this week\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Google analytics data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Google Search Results for last week\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Google Analytics Data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Google Search Results for this week\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Google Analytics Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Page Engagement Stats for this week\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse data from Google Analytics\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Page Engagement Stats for prior week\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse GA data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}