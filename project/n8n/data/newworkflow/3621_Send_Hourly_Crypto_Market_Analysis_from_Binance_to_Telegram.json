{
  "url": "https://n8n.io/workflows/3621-send-hourly-crypto-market-analysis-from-binance-to-telegram/",
  "title": "Send Hourly Crypto Market Analysis from Binance to Telegram",
  "author": "Aurélien P.",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "Finance"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"411a4eea57cf88d4a82c27728a11bad4fe2fdcbc1ab5eae589890a37e4b909ca\",\"templateId\":\"2043\"},\"nodes\":[{\"id\":\"9fd007e4-9d21-4fef-8a28-3be3e92af6f7\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[260,600],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"5 * * * *\"}]}},\"typeVersion\":1.1},{\"id\":\"cd23c427-56f1-4924-8adf-4b38417ba652\",\"name\":\"Binance 24h Price Change\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"Get data of changed price coins in last 24h\",\"maxTries\":5,\"position\":[600,600],\"parameters\":{\"url\":\"https://api.binance.com/api/v3/ticker/24hr\",\"options\":{}},\"notesInFlow\":true,\"retryOnFail\":true,\"typeVersion\":1,\"waitBetweenTries\":5000},{\"id\":\"40e4f7bd-ac47-4617-9177-5a84ada3a92f\",\"name\":\"Send Telegram Message\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1560,600],\"webhookId\":\"75a4f97f-1a11-47fd-9f90-cbecd75ad2df\",\"parameters\":{\"text\":\"={{ $json.data }}\\n\\n\",\"chatId\":\"-4685771678\",\"additionalFields\":{\"parse_mode\":\"HTML\"}},\"credentials\":{\"telegramApi\":{\"id\":\"d6O4BUmt3I6XZJ1D\",\"name\":\"Telegram account\"}},\"typeVersion\":1},{\"id\":\"424bbed3-f134-418c-9961-e966c8dc2592\",\"name\":\"Analyze & Format Market Data\",\"type\":\"n8n-nodes-base.function\",\"position\":[900,600],\"parameters\":{\"functionCode\":\"function escapeHTML(text) {\\n  return String(text)\\n    .replace(/&/g, \\\"&amp;\\\")\\n    .replace(/</g, \\\"&lt;\\\")\\n    .replace(/>/g, \\\"&gt;\\\");\\n}\\n\\nfunction formatVolume(volume) {\\n  const vol = parseFloat(volume);\\n  if (vol >= 1_000_000_000) return (vol / 1_000_000_000).toFixed(2) + 'B';\\n  if (vol >= 1_000_000) return (vol / 1_000_000).toFixed(2) + 'M';\\n  if (vol >= 1_000) return (vol / 1_000).toFixed(2) + 'K';\\n  return vol.toString();\\n}\\n\\nfunction formatMoney(amount) {\\n  return parseFloat(amount).toLocaleString('en-US', {\\n    minimumFractionDigits: 2,\\n    maximumFractionDigits: 2\\n  });\\n}\\n\\nfunction calculateVolatility(coin) {\\n  const high = parseFloat(coin.highPrice);\\n  const low = parseFloat(coin.lowPrice);\\n  const volatility = ((high - low) / low) * 100;\\n  return volatility.toFixed(2);\\n}\\n\\nfunction calculateSpread(coin) {\\n  const ask = parseFloat(coin.askPrice);\\n  const bid = parseFloat(coin.bidPrice);\\n  const spread = ((ask - bid) / bid) * 100;\\n  return spread.toFixed(4);\\n}\\n\\nfunction calculateMarketComparison(coin, avgMarketChange) {\\n  const coinChange = parseFloat(coin.priceChangePercent);\\n  const comparison = coinChange - avgMarketChange;\\n  return comparison.toFixed(2);\\n}\\n\\nfunction formatActivity(count) {\\n  return count.toLocaleString('en-US');\\n}\\n\\nfunction calculateMomentum(coin) {\\n  const current = parseFloat(coin.lastPrice);\\n  const weighted = parseFloat(coin.weightedAvgPrice);\\n  return ((current - weighted) / weighted * 100).toFixed(2);\\n}\\n\\nfunction estimateMarketCap(coin) {\\n  return parseFloat(coin.lastPrice) * parseFloat(coin.quoteVolume);\\n}\\n\\nfunction formatCoinWithAnalytics(coin, avgMarketChange) {\\n  const change = parseFloat(coin.priceChangePercent);\\n  const arrow = change > 0 ? '🔺' : '🔻';\\n  const volatility = calculateVolatility(coin);\\n  const spread = calculateSpread(coin);\\n  const marketComparison = calculateMarketComparison(coin, avgMarketChange);\\n  const momentum = calculateMomentum(coin);\\n  \\n  const comparisonEmoji = marketComparison > 0 ? '⭐' : '⬇️';\\n  const momentumEmoji = parseFloat(momentum) > 0 ? '🔼' : '🔽';\\n  \\n  const timeFrameHours = (coin.closeTime - coin.openTime) / (1000 * 60 * 60);\\n  \\n  return `<b>${escapeHTML(coin.symbol)}</b>\\\\n` +\\n         `${arrow} Change: ${escapeHTML(change.toFixed(2))}% (${timeFrameHours.toFixed(0)}h)\\\\n` +\\n         `💰 Current: $${formatMoney(coin.lastPrice)}\\\\n` +\\n         `📊 Range: $${formatMoney(coin.lowPrice)} - $${formatMoney(coin.highPrice)}\\\\n` +\\n         `📈 Volatility: ${volatility}%\\\\n` +\\n         `🔄 Volume: ${escapeHTML(formatVolume(coin.volume))} | $${formatMoney(coin.quoteVolume)}\\\\n` +\\n         `⚖️ Bid-Ask Spread: ${spread}%\\\\n` +\\n         `${comparisonEmoji} vs Market Avg: ${marketComparison}%\\\\n` +\\n         `${momentumEmoji} Momentum: ${momentum}%\\\\n` +\\n         `🔢 Trades: ${formatActivity(coin.count)}\\\\n\\\\n`;\\n}\\n\\nfunction calculateMarketStats(coins) {\\n  const totalVolume = coins.reduce((sum, coin) => sum + parseFloat(coin.quoteVolume), 0);\\n  const averageChange = coins.reduce((sum, coin) => sum + parseFloat(coin.priceChangePercent), 0) / coins.length;\\n  const mostVolatile = [...coins].sort((a, b) => calculateVolatility(b) - calculateVolatility(a))[0];\\n  const mostTraded = [...coins].sort((a, b) => parseFloat(b.quoteVolume) - parseFloat(a.quoteVolume))[0];\\n  const leastSpread = [...coins].sort((a, b) => calculateSpread(a) - calculateSpread(b))[0];\\n  \\n  const topByVolume = [...coins]\\n    .sort((a, b) => parseFloat(b.quoteVolume) - parseFloat(a.quoteVolume))\\n    .slice(0, 3);\\n  \\n  return {\\n    totalVolume,\\n    averageChange,\\n    mostVolatile,\\n    mostTraded,\\n    leastSpread,\\n    topByVolume\\n  };\\n}\\n\\nconst now = new Date();\\nconst dateString = now.toISOString().replace('T', ' ').split('.')[0] + ' UTC';\\nconst rawData = items[0].json;\\n\\nconst binanceData = Array.isArray(rawData) ? rawData : [];\\nconst usdcPairs = binanceData.filter(coin => coin.symbol.endsWith('USDC'));\\n\\n// Filter only for Solana, Bitcoin, Ethereum\\nconst relevantSymbols = ['SOLUSDC', 'BTCUSDC', 'ETHUSDC'];\\nconst filteredCoins = usdcPairs.filter(coin => relevantSymbols.includes(coin.symbol));\\n\\n// Calculate market cap for each coin\\nfilteredCoins.forEach(coin => {\\n  coin.estimatedMarketCap = estimateMarketCap(coin);\\n});\\n\\nconst marketStats = calculateMarketStats(filteredCoins);\\nconst avgMarketChange = marketStats.averageChange;\\n\\nconst gainers = filteredCoins\\n  .filter(c => parseFloat(c.priceChangePercent) > 0)\\n  .sort((a, b) => parseFloat(b.priceChangePercent) - parseFloat(a.priceChangePercent));\\n\\nconst losers = filteredCoins\\n  .filter(c => parseFloat(c.priceChangePercent) < 0)\\n  .sort((a, b) => parseFloat(a.priceChangePercent) - parseFloat(b.priceChangePercent));\\n\\n// Build message\\nlet summary = `<b>📊 Crypto Market Summary — ${escapeHTML(dateString)}</b>\\\\n\\\\n`;\\n\\nsummary += `<b>🌐 Market Overview (BTC, ETH, SOL)</b>\\\\n` +\\n           `Average Change: ${avgMarketChange.toFixed(2)}%\\\\n` +\\n           `24h Volume: $${formatMoney(marketStats.totalVolume)}\\\\n` +\\n           `Most Volatile: ${marketStats.mostVolatile.symbol} (${calculateVolatility(marketStats.mostVolatile)}%)\\\\n` +\\n           `Most Liquid: ${marketStats.leastSpread.symbol} (${calculateSpread(marketStats.leastSpread)}% spread)\\\\n\\\\n`;\\n\\nsummary += `<b>💹 Top by Volume</b>\\\\n`;\\nmarketStats.topByVolume.forEach(coin => {\\n  summary += `${coin.symbol}: $${formatMoney(coin.quoteVolume)} | ${coin.priceChangePercent}%\\\\n`;\\n});\\nsummary += `\\\\n`;\\n\\nif (gainers.length) {\\n  summary += `<b>📈 Gainers</b>\\\\n\\\\n`;\\n  summary += gainers.map(coin => formatCoinWithAnalytics(coin, avgMarketChange)).join('');\\n}\\n\\nif (losers.length) {\\n  summary += `<b>📉 Losers</b>\\\\n\\\\n`;\\n  summary += losers.map(coin => formatCoinWithAnalytics(coin, avgMarketChange)).join('');\\n}\\n\\nconst chunks = [];\\nlet current = \\\"\\\";\\nsummary.split(/\\\\n/g).forEach(line => {\\n  const lineWithBreak = line + \\\"\\\\n\\\";\\n  if ((current + lineWithBreak).length > 4000) {\\n    chunks.push({ json: { data: current.trim() } });\\n    current = lineWithBreak;\\n  } else {\\n    current += lineWithBreak;\\n  }\\n});\\n\\nif (current.trim()) {\\n  chunks.push({ json: { data: current.trim() } });\\n}\\n\\nreturn chunks;\"},\"notesInFlow\":true,\"typeVersion\":1},{\"id\":\"1c43afdc-b15a-4380-9c6f-2056e28a37f7\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[220,-100],\"parameters\":{\"color\":6,\"width\":940,\"height\":620,\"content\":\"## 📌 Daily Crypto Market Summary Bot\\n\\n### 📈 What It Does\\nFetches hourly 24h price data from Binance for **BTC**, **ETH**, and **SOL** (USDC pairs), analyzes key market trends, and sends a well-formatted HTML summary to a Telegram chat.\\n\\n---\\n### 📊 Metrics Analyzed\\n- 🔺 Gainers / 📉 Losers\\n- 💰 Price change %\\n- 📈 Volatility (High vs Low)\\n- ⚖️ Bid-Ask Spread %\\n- 🔼 Momentum (vs Weighted Avg)\\n- ⭐ vs Market Average\\n - 🔢 Number of Trades\\n\\n---\\n### ⚠️ Notes\\n- Message output is automatically **split into chunks** to stay under Telegram’s **4096 character limit**.\\n- Output is sent in **rich HTML format** for better readability.\\n\\n---\\n\\n✅ This note is for internal guidance. Feel free to delete or update it after setup.\\n\"},\"typeVersion\":1},{\"id\":\"5bbd9227-2a52-4130-abf1-f6745327dbd4\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1540,780],\"parameters\":{\"width\":340,\"height\":240,\"content\":\"### 🛠️ Setup Instructions\\n\\n4. **Telegram**\\n   - Create a bot via [@BotFather](https://t.me/BotFather)\\n   - Add the bot to a Telegram group or use a personal chat\\n   - In the **Send Telegram Message** node:\\n     - Add your bot token under credentials\\n     - Replace the default `chatId` with your group/user chat ID\\n\"},\"typeVersion\":1},{\"id\":\"ffa51aa0-181a-415b-933c-44fd01ca27da\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,800],\"parameters\":{\"height\":180,\"content\":\"**Binance**\\n   - No Binance API key required (uses public endpoint)\\n   - Ensure internet access to call Binance API\"},\"typeVersion\":1},{\"id\":\"ba902bcb-f24c-491a-bcaa-ab7bf16e5bb1\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[220,800],\"parameters\":{\"height\":180,\"content\":\"\\n### ⏱ Schedule\\n- Runs **every hour**\\n- Cron expression: `5 * * * *`  \\n  _(At minute 5 of every hour)_\"},\"typeVersion\":1},{\"id\":\"ae8b4d48-90ab-4b28-bbc7-07ed5d333815\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[900,820],\"parameters\":{\"width\":560,\"content\":\"\\n3. **Optional: Add More Coins**\\n   - In the **Function node**, find the line:\\n     ```js\\n     const relevantSymbols = ['SOLUSDC', 'BTCUSDC', 'ETHUSDC'];\\n     ```\\n   - Add your preferred trading pairs (must end in `USDC`)\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Schedule Trigger\":{\"main\":[[{\"node\":\"Binance 24h Price Change\",\"type\":\"main\",\"index\":0}]]},\"Binance 24h Price Change\":{\"main\":[[{\"node\":\"Analyze & Format Market Data\",\"type\":\"main\",\"index\":0}]]},\"Analyze & Format Market Data\":{\"main\":[[{\"node\":\"Send Telegram Message\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# 📈 Daily Crypto Market Summary Bot (Binance to Telegram)\n\nThis workflow fetches 24h price change data from Binance for selected crypto pairs (BTC/USDC, ETH/USDC, SOL/USDC) every hour using a cron schedule.  \nIt performs in-depth analysis—including volatility, volume, bid-ask spread, momentum, and market comparison—then formats a detailed market summary.  \nThe final report is sent to a Telegram chat using HTML formatting, highlighting top gainers, losers, and key metrics in a clean, readable layout.\n\n* * *\n\n## 🔑 Key Features\n\n  * ⏱ Runs every hour (`cron: 5 * * * *`)\n  * 🔍 Filters and analyzes major coins: BTC, ETH, SOL\n  * 📊 Calculates market metrics: \n    * Volatility\n    * Bid-ask spread\n    * Momentum\n    * Estimated market cap\n    * Market average comparison\n  * 📈 Highlights gainers, losers, and top coins by volume\n  * ✂️ Splits messages to fit Telegram’s 4096 character limit\n  * 💬 Sends output in rich HTML format to a Telegram group or chat\n\n\n\n* * *\n\n## 🎯 Use Cases\n\n  * ✅ Crypto traders wanting hourly performance insights\n  * ✅ Telegram groups needing automated market updates\n  * ✅ Analysts monitoring key coin metrics in real-time\n  * ✅ Bot developers creating crypto dashboards or alerts\n\n\n\n* * *\n\n## 🛠 Technical Details\n\n  * **Data Source:** Binance 24hr ticker API (`/api/v3/ticker/24hr`)\n  * **Coins Monitored:** `BTCUSDC`, `ETHUSDC`, `SOLUSDC` (can be expanded)\n  * **Metrics Calculated:**\n    * Price change percentage\n    * Volatility (high vs low price)\n    * Bid-ask spread %\n    * Momentum (vs weighted average)\n    * Estimated market cap\n    * Number of trades\n    * Market average movement\n  * **Message Format:**\n    * HTML with emojis, bold styling, and section headings\n    * Auto-split messages when exceeding Telegram's 4096-char limit\n  * **Error Handling:**\n    * Retry on HTTP failure (up to 5 times with 5s delay)\n    * Message length checked and split for Telegram compatibility\n\n\n\n* * *\n\n## ⚙️ Setup Requirements\n\n  1. **Telegram Bot Token** — Create a bot via [@BotFather](https://t.me/BotFather) on Telegram\n  2. **Chat ID** — Use a personal ID or group chat ID (add the bot to the group)\n  3. **n8n Instance** — Either cloud or self-hosted\n  4. _(Optional)_ Modify `relevantSymbols` in the Function node to track different coins\n\n\n\n* * *\n\n## 🧠 Notes\n\n  * This workflow is highly customizable—feel free to modify the analytics, tracked pairs, or formatting.\n  * Great base for alerting systems or crypto dashboards.\n\n\n\n* * *\n\n## 📷 Example Output (Telegram)\n    \n    \n    📊 Crypto Market Summary — 2025-04-20 14:05:05 UTC\n    \n    🌐 Market Overview (BTC, ETH, SOL)\n    Average Change: -1.54%\n    24h Volume: $850,358,765.46\n    Most Volatile: SOLUSDC (4.53%)\n    Most Liquid: BTCUSDC (0.0000% spread)\n    \n    💹 Top by Volume\n    ETHUSDC: $403,860,356.75 | -1.640%\n    SOLUSDC: $279,241,338.60 | -1.706%\n    BTCUSDC: $167,257,070.12 | -1.261%\n    \n    📉 Losers\n    \n    SOLUSDC\n    🔻 Change: -1.71% (24h)\n    💰 Current: $137.10\n    📊 Range: $135.82 - $141.97\n    📈 Volatility: 4.53%\n    🔄 Volume: 2.01M | $279,241,338.60\n    ⚖️ Bid-Ask Spread: 0.0073%\n    ⬇️ vs Market Avg: -0.17%\n    🔽 Momentum: -1.42%\n    🔢 Trades: 366,119\n    \n    ETHUSDC\n    🔻 Change: -1.64% (24h)\n    💰 Current: $1,577.42\n    📊 Range: $1,565.60 - $1,631.98\n    📈 Volatility: 4.24%\n    🔄 Volume: 252.11K | $403,860,356.75\n    ⚖️ Bid-Ask Spread: 0.0044%\n    ⬇️ vs Market Avg: -0.10%\n    🔽 Momentum: -1.53%\n    🔢 Trades: 596,801\n    \n    BTCUSDC\n    🔻 Change: -1.26% (24h)\n    💰 Current: $84,336.65\n    📊 Range: $83,963.35 - $85,634.50\n    📈 Volatility: 1.99%\n    🔄 Volume: 1.97K | $167,257,070.12\n    ⚖️ Bid-Ask Spread: 0.0000%\n    ⭐ vs Market Avg: 0.27%\n    🔽 Momentum: -0.68%\n    🔢 Trades: 124,202\n",
  "crawled_at": "2025-05-26T05:03:20.922719",
  "readme_zh": "# 📈 加密货币每日行情摘要机器人（Binance至Telegram）\n\n该工作流每小时通过定时任务从Binance获取选定加密货币交易对（BTC/USDC、ETH/USDC、SOL/USDC）的24小时价格变动数据  \n进行深度分析——包括波动率、交易量、买卖价差、动量指标和市场对比——最终生成结构化行情摘要  \n分析报告通过HTML格式化发送至Telegram聊天窗口，以清晰易读的版式突出展示涨幅榜、跌幅榜及关键指标\n\n* * *\n\n## 🔑 核心功能\n\n  * ⏱ 每小时自动运行（`cron: 5 * * * *`）\n  * 🔍 筛选分析主流币种：BTC、ETH、SOL\n  * 📊 计算市场指标：\n    * 价格波动率\n    * 买卖价差\n    * 动量指标\n    * 预估市值\n    * 市场平均对比\n  * 📈 高亮展示涨幅榜、跌幅榜及交易量龙头\n  * ✂️ 自动分割消息以适应Telegram的4096字符限制\n  * 💬 使用富文本HTML格式发送至Telegram群组/聊天\n\n* * *\n\n## 🎯 应用场景\n\n  * ✅ 需要每小时行情洞察的加密货币交易者\n  * ✅ 需要自动化市场更新的Telegram群组\n  * ✅ 实时监控核心币种指标的分析师\n  * ✅ 构建加密货币仪表盘或警报系统的开发者\n\n* * *\n\n## 🛠 技术细节\n\n  * **数据源**：Binance 24小时行情API（`/api/v3/ticker/24hr`）\n  * **监控币种**：`BTCUSDC`、`ETHUSDC`、`SOLUSDC`（可扩展）\n  * **计算指标**：\n    * 价格变动百分比\n    * 波动率（最高/最低价差）\n    * 买卖价差百分比\n    * 动量指标（对比加权均价）\n    * 预估市值\n    * 交易笔数\n    * 市场平均波动\n  * **消息格式**：\n    * 含表情符号、加粗样式、章节标题的HTML\n    * 超出Telegram限制时自动分割消息\n  * **错误处理**：\n    * HTTP请求失败时自动重试（最多5次，间隔5秒）\n    * 自动检查并分割超长消息确保Telegram兼容性\n\n* * *\n\n## ⚙️ 配置要求\n\n  1. **Telegram机器人令牌** — 通过[@BotFather](https://t.me/BotFather)创建\n  2. **聊天ID** — 使用个人ID或群组ID（需将机器人添加至群组）\n  3. **n8n实例** — 云端或自托管均可\n  4. _(可选)_ 修改Function节点中的`relevantSymbols`以追踪其他币种\n\n* * *\n\n## 🧠 注意事项\n\n  * 本工作流高度可定制——可自由修改分析逻辑、追踪币种或格式样式\n  * 适合作为警报系统或加密货币仪表盘的基础模板\n\n* * *\n\n## 📷 示例输出（Telegram）\n    \n    \n    📊 加密货币市场摘要 — 2025-04-20 14:05:05 UTC\n    \n    🌐 市场概览（BTC, ETH, SOL）\n    平均涨跌幅：-1.54%\n    24小时交易量：$850,358,765.46\n    波动最大：SOLUSDC（4.53%）\n    流动性最佳：BTCUSDC（0.0000%价差）\n    \n    💹 交易量排行\n    ETHUSDC：$403,860,356.75 | -1.640%\n    SOLUSDC：$279,241,338.60 | -1.706%\n    BTCUSDC：$167,257,070.12 | -1.261%\n    \n    📉 跌幅榜\n    \n    SOLUSDC\n    🔻 24小时跌幅：-1.71%\n    💰 现价：$137.10\n    📊 波动区间：$135.82 - $141.97\n    📈 波动率：4.53%\n    🔄 交易量：2.01M | $279,241,338.60\n    ⚖️ 买卖价差：0.0073%\n    ⬇️ 对比市场平均：-0.17%\n    🔽 动量指标：-1.42%\n    🔢 成交笔数：366,119\n    \n    ETHUSDC\n    🔻 24小时跌幅：-1.64%\n    💰 现价：$1,577.42\n    📊 波动区间：$1,565.60 - $1,631.98\n    📈 波动率：4.24%\n    🔄 交易量：252.11K | $403,860,356.75\n    ⚖️ 买卖价差：0.0044%\n    ⬇️ 对比市场平均：-0.10%\n    🔽 动量指标：-1.53%\n    🔢 成交笔数：596,801\n    \n    BTCUSDC\n    🔻 24小时跌幅：-1.26%\n    💰 现价：$84,336.65\n    📊 波动区间：$83,963.35 - $85,634.50\n    📈 波动率：1.99%\n    🔄 交易量：1.97K | $167,257,070.12\n    ⚖️ 买卖价差：0.0000%\n    ⭐ 对比市场平均：+0.27%\n    🔽 动量指标：-0.68%\n    🔢 成交笔数：124,202",
  "title_zh": "将币安的每小时加密货币市场分析发送至Telegram",
  "publish_date_zh": "上次更新于一个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"411a4eea57cf88d4a82c27728a11bad4fe2fdcbc1ab5eae589890a37e4b909ca\",\n    \"templateId\": \"2043\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"9fd007e4-9d21-4fef-8a28-3be3e92af6f7\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        260,\n        600\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"5 * * * *\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"cd23c427-56f1-4924-8adf-4b38417ba652\",\n      \"name\": \"Binance 24h Price Change\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Get data of changed price coins in last 24h\",\n      \"maxTries\": 5,\n      \"position\": [\n        600,\n        600\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.binance.com/api/v3/ticker/24hr\",\n        \"options\": {}\n      },\n      \"notesInFlow\": true,\n      \"retryOnFail\": true,\n      \"typeVersion\": 1,\n      \"waitBetweenTries\": 5000\n    },\n    {\n      \"id\": \"40e4f7bd-ac47-4617-9177-5a84ada3a92f\",\n      \"name\": \"Send Telegram Message\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1560,\n        600\n      ],\n      \"webhookId\": \"75a4f97f-1a11-47fd-9f90-cbecd75ad2df\",\n      \"parameters\": {\n        \"text\": \"={{ $json.data }}\\n\\n\",\n        \"chatId\": \"-4685771678\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"d6O4BUmt3I6XZJ1D\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"424bbed3-f134-418c-9961-e966c8dc2592\",\n      \"name\": \"Analyze & Format Market Data\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        900,\n        600\n      ],\n      \"parameters\": {\n        \"functionCode\": \"function escapeHTML(text) {\\n  return String(text)\\n    .replace(/&/g, \\\"&amp;\\\")\\n    .replace(/</g, \\\"&lt;\\\")\\n    .replace(/>/g, \\\"&gt;\\\");\\n}\\n\\nfunction formatVolume(volume) {\\n  const vol = parseFloat(volume);\\n  if (vol >= 1_000_000_000) return (vol / 1_000_000_000).toFixed(2) + 'B';\\n  if (vol >= 1_000_000) return (vol / 1_000_000).toFixed(2) + 'M';\\n  if (vol >= 1_000) return (vol / 1_000).toFixed(2) + 'K';\\n  return vol.toString();\\n}\\n\\nfunction formatMoney(amount) {\\n  return parseFloat(amount).toLocaleString('en-US', {\\n    minimumFractionDigits: 2,\\n    maximumFractionDigits: 2\\n  });\\n}\\n\\nfunction calculateVolatility(coin) {\\n  const high = parseFloat(coin.highPrice);\\n  const low = parseFloat(coin.lowPrice);\\n  const volatility = ((high - low) / low) * 100;\\n  return volatility.toFixed(2);\\n}\\n\\nfunction calculateSpread(coin) {\\n  const ask = parseFloat(coin.askPrice);\\n  const bid = parseFloat(coin.bidPrice);\\n  const spread = ((ask - bid) / bid) * 100;\\n  return spread.toFixed(4);\\n}\\n\\nfunction calculateMarketComparison(coin, avgMarketChange) {\\n  const coinChange = parseFloat(coin.priceChangePercent);\\n  const comparison = coinChange - avgMarketChange;\\n  return comparison.toFixed(2);\\n}\\n\\nfunction formatActivity(count) {\\n  return count.toLocaleString('en-US');\\n}\\n\\nfunction calculateMomentum(coin) {\\n  const current = parseFloat(coin.lastPrice);\\n  const weighted = parseFloat(coin.weightedAvgPrice);\\n  return ((current - weighted) / weighted * 100).toFixed(2);\\n}\\n\\nfunction estimateMarketCap(coin) {\\n  return parseFloat(coin.lastPrice) * parseFloat(coin.quoteVolume);\\n}\\n\\nfunction formatCoinWithAnalytics(coin, avgMarketChange) {\\n  const change = parseFloat(coin.priceChangePercent);\\n  const arrow = change > 0 ? '🔺' : '🔻';\\n  const volatility = calculateVolatility(coin);\\n  const spread = calculateSpread(coin);\\n  const marketComparison = calculateMarketComparison(coin, avgMarketChange);\\n  const momentum = calculateMomentum(coin);\\n  \\n  const comparisonEmoji = marketComparison > 0 ? '⭐' : '⬇️';\\n  const momentumEmoji = parseFloat(momentum) > 0 ? '🔼' : '🔽';\\n  \\n  const timeFrameHours = (coin.closeTime - coin.openTime) / (1000 * 60 * 60);\\n  \\n  return `<b>${escapeHTML(coin.symbol)}</b>\\\\n` +\\n         `${arrow} Change: ${escapeHTML(change.toFixed(2))}% (${timeFrameHours.toFixed(0)}h)\\\\n` +\\n         `💰 Current: $${formatMoney(coin.lastPrice)}\\\\n` +\\n         `📊 Range: $${formatMoney(coin.lowPrice)} - $${formatMoney(coin.highPrice)}\\\\n` +\\n         `📈 Volatility: ${volatility}%\\\\n` +\\n         `🔄 Volume: ${escapeHTML(formatVolume(coin.volume))} | $${formatMoney(coin.quoteVolume)}\\\\n` +\\n         `⚖️ Bid-Ask Spread: ${spread}%\\\\n` +\\n         `${comparisonEmoji} vs Market Avg: ${marketComparison}%\\\\n` +\\n         `${momentumEmoji} Momentum: ${momentum}%\\\\n` +\\n         `🔢 Trades: ${formatActivity(coin.count)}\\\\n\\\\n`;\\n}\\n\\nfunction calculateMarketStats(coins) {\\n  const totalVolume = coins.reduce((sum, coin) => sum + parseFloat(coin.quoteVolume), 0);\\n  const averageChange = coins.reduce((sum, coin) => sum + parseFloat(coin.priceChangePercent), 0) / coins.length;\\n  const mostVolatile = [...coins].sort((a, b) => calculateVolatility(b) - calculateVolatility(a))[0];\\n  const mostTraded = [...coins].sort((a, b) => parseFloat(b.quoteVolume) - parseFloat(a.quoteVolume))[0];\\n  const leastSpread = [...coins].sort((a, b) => calculateSpread(a) - calculateSpread(b))[0];\\n  \\n  const topByVolume = [...coins]\\n    .sort((a, b) => parseFloat(b.quoteVolume) - parseFloat(a.quoteVolume))\\n    .slice(0, 3);\\n  \\n  return {\\n    totalVolume,\\n    averageChange,\\n    mostVolatile,\\n    mostTraded,\\n    leastSpread,\\n    topByVolume\\n  };\\n}\\n\\nconst now = new Date();\\nconst dateString = now.toISOString().replace('T', ' ').split('.')[0] + ' UTC';\\nconst rawData = items[0].json;\\n\\nconst binanceData = Array.isArray(rawData) ? rawData : [];\\nconst usdcPairs = binanceData.filter(coin => coin.symbol.endsWith('USDC'));\\n\\n// Filter only for Solana, Bitcoin, Ethereum\\nconst relevantSymbols = ['SOLUSDC', 'BTCUSDC', 'ETHUSDC'];\\nconst filteredCoins = usdcPairs.filter(coin => relevantSymbols.includes(coin.symbol));\\n\\n// Calculate market cap for each coin\\nfilteredCoins.forEach(coin => {\\n  coin.estimatedMarketCap = estimateMarketCap(coin);\\n});\\n\\nconst marketStats = calculateMarketStats(filteredCoins);\\nconst avgMarketChange = marketStats.averageChange;\\n\\nconst gainers = filteredCoins\\n  .filter(c => parseFloat(c.priceChangePercent) > 0)\\n  .sort((a, b) => parseFloat(b.priceChangePercent) - parseFloat(a.priceChangePercent));\\n\\nconst losers = filteredCoins\\n  .filter(c => parseFloat(c.priceChangePercent) < 0)\\n  .sort((a, b) => parseFloat(a.priceChangePercent) - parseFloat(b.priceChangePercent));\\n\\n// Build message\\nlet summary = `<b>📊 Crypto Market Summary — ${escapeHTML(dateString)}</b>\\\\n\\\\n`;\\n\\nsummary += `<b>🌐 Market Overview (BTC, ETH, SOL)</b>\\\\n` +\\n           `Average Change: ${avgMarketChange.toFixed(2)}%\\\\n` +\\n           `24h Volume: $${formatMoney(marketStats.totalVolume)}\\\\n` +\\n           `Most Volatile: ${marketStats.mostVolatile.symbol} (${calculateVolatility(marketStats.mostVolatile)}%)\\\\n` +\\n           `Most Liquid: ${marketStats.leastSpread.symbol} (${calculateSpread(marketStats.leastSpread)}% spread)\\\\n\\\\n`;\\n\\nsummary += `<b>💹 Top by Volume</b>\\\\n`;\\nmarketStats.topByVolume.forEach(coin => {\\n  summary += `${coin.symbol}: $${formatMoney(coin.quoteVolume)} | ${coin.priceChangePercent}%\\\\n`;\\n});\\nsummary += `\\\\n`;\\n\\nif (gainers.length) {\\n  summary += `<b>📈 Gainers</b>\\\\n\\\\n`;\\n  summary += gainers.map(coin => formatCoinWithAnalytics(coin, avgMarketChange)).join('');\\n}\\n\\nif (losers.length) {\\n  summary += `<b>📉 Losers</b>\\\\n\\\\n`;\\n  summary += losers.map(coin => formatCoinWithAnalytics(coin, avgMarketChange)).join('');\\n}\\n\\nconst chunks = [];\\nlet current = \\\"\\\";\\nsummary.split(/\\\\n/g).forEach(line => {\\n  const lineWithBreak = line + \\\"\\\\n\\\";\\n  if ((current + lineWithBreak).length > 4000) {\\n    chunks.push({ json: { data: current.trim() } });\\n    current = lineWithBreak;\\n  } else {\\n    current += lineWithBreak;\\n  }\\n});\\n\\nif (current.trim()) {\\n  chunks.push({ json: { data: current.trim() } });\\n}\\n\\nreturn chunks;\"\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c43afdc-b15a-4380-9c6f-2056e28a37f7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        220,\n        -100\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 940,\n        \"height\": 620,\n        \"content\": \"## 📌 每日加密货币市场摘要机器人  \\n\\n### 📈 功能说明  \\n每小时从币安获取 **BTC**、**ETH** 和 **SOL**（USDC交易对）的24小时价格数据，分析关键市场趋势，并将格式清晰的HTML摘要发送至Telegram群组。  \\n\\n---  \\n### 📊 分析指标  \\n- 🔺 涨幅榜 / 📉 跌幅榜  \\n- 💰 价格变动百分比  \\n- 📈 波动性（最高价 vs 最低价）  \\n- ⚖️ 买卖价差百分比  \\n- 🔼 动量（对比加权均价）  \\n- ⭐ 对比市场均值  \\n- 🔢 交易笔数  \\n\\n---  \\n### ⚠️ 注意事项  \\n- 消息内容会自动**分块发送**，以确保不超过Telegram的**4096字符限制**。  \\n- 摘要以**富文本HTML格式**发送，提升可读性。  \\n\\n---  \\n✅ 本文档为内部指引，设置完成后可随时删除或更新。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5bbd9227-2a52-4130-abf1-f6745327dbd4\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1540,\n        780\n      ],\n      \"parameters\": {\n        \"width\": 340,\n        \"height\": 240,\n        \"content\": \"### 🛠️ 设置指南\\n\\n4. **Telegram**  \\n   - 通过 [@BotFather](https://t.me/BotFather) 创建一个机器人  \\n   - 将机器人添加到 Telegram 群组或私聊对话中  \\n   - 在 **Send Telegram Message** 节点中：  \\n     - 在凭据处添加你的机器人令牌  \\n     - 将默认的 `chatId` 替换为你的群组/用户聊天 ID\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ffa51aa0-181a-415b-933c-44fd01ca27da\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        560,\n        800\n      ],\n      \"parameters\": {\n        \"height\": 180,\n        \"content\": \"**币安**  \\n   - 无需币安API密钥（使用公共端点）  \\n   - 确保网络畅通以调用币安API\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ba902bcb-f24c-491a-bcaa-ab7bf16e5bb1\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        220,\n        800\n      ],\n      \"parameters\": {\n        \"height\": 180,\n        \"content\": \"### ⏱ 计划任务\\n- 执行频率：**每小时运行一次**\\n- Cron表达式：`5 * * * *`  \\n  _(每小时的第5分钟执行)_\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ae8b4d48-90ab-4b28-bbc7-07ed5d333815\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        900,\n        820\n      ],\n      \"parameters\": {\n        \"width\": 560,\n        \"content\": \"3. **可选：添加更多币种**\\n   - 在**功能节点**中，找到以下代码行：\\n     ```js\\n     const relevantSymbols = ['SOLUSDC', 'BTCUSDC', 'ETHUSDC'];\\n     ```\\n   - 添加您偏好的交易对（必须以`USDC`结尾）\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Binance 24h Price Change\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Binance 24h Price Change\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Analyze & Format Market Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Analyze & Format Market Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Telegram Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}