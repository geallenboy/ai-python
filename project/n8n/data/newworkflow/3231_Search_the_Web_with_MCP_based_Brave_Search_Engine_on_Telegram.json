{
  "url": "https://n8n.io/workflows/3231-search-the-web-with-mcp-based-brave-search-engine-on-telegram/",
  "title": "Search the Web with MCP-based Brave Search Engine on Telegram",
  "author": "Davide",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-26",
  "categories": [
    {
      "name": "Other"
    }
  ],
  "workflow_json": "{\"id\":\"52pBJt8swWgtdY54\",\"meta\":{\"instanceId\":\"a4bfc93e975ca233ac45ed7c9227d84cf5a2329310525917adaf3312e10d5462\",\"templateCredsSetupCompleted\":true},\"name\":\"MCP Client with Brave and Telegram\",\"tags\":[],\"nodes\":[{\"id\":\"af9b297d-0f8f-408f-a4d6-7545a94e8a38\",\"name\":\"List Brave Tools\",\"type\":\"n8n-nodes-mcp.mcpClient\",\"position\":[560,-40],\"parameters\":{},\"credentials\":{\"mcpClientApi\":{\"id\":\"YEgJcPwvAlBOCEDA\",\"name\":\"MCP Client (STDIO) Brave\"}},\"typeVersion\":1},{\"id\":\"c3265586-a376-4d02-8f33-828bbba6d221\",\"name\":\"Exec Brave tool\",\"type\":\"n8n-nodes-mcp.mcpClient\",\"position\":[800,-40],\"parameters\":{\"toolName\":\"={{ $json.tools[0].name }}\",\"operation\":\"executeTool\",\"toolParameters\":\"={\\n  \\\"query\\\":\\\"{{ $('Clean query').item.json.query }}\\\"\\n}\"},\"credentials\":{\"mcpClientApi\":{\"id\":\"YEgJcPwvAlBOCEDA\",\"name\":\"MCP Client (STDIO) Brave\"}},\"typeVersion\":1},{\"id\":\"adbfe84e-ab4a-4640-bb52-fcb06f9d1450\",\"name\":\"Clean query\",\"type\":\"n8n-nodes-base.code\",\"position\":[300,-40],\"parameters\":{\"jsCode\":\"for (const item of $input.all()) {\\n  const originalText = item.json.text;\\n\\n  const query = originalText.replace(\\\"/brave \\\", \\\"\\\");\\n\\n  item.json.query = query;\\n}\\n\\nreturn $input.all();\\n\"},\"typeVersion\":2},{\"id\":\"9905cad4-e847-44be-8cc4-69fd427ce8a1\",\"name\":\"Send message\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1040,-40],\"webhookId\":\"b48bb09b-e019-46a2-994b-8058f65e6442\",\"parameters\":{\"text\":\"={{ $json.result.content[0].text }}\",\"chatId\":\"={{ $('Get Message').item.json.message.from.id }}\",\"additionalFields\":{\"parse_mode\":\"HTML\"}},\"credentials\":{\"telegramApi\":{\"id\":\"rQ5q95W7uKesMDx4\",\"name\":\"Telegram account Fastewb\"}},\"typeVersion\":1.2},{\"id\":\"bf0e7c48-bbc8-4efd-9083-2fa965902453\",\"name\":\"Get Message\",\"type\":\"n8n-nodes-base.telegramTrigger\",\"position\":[-440,-20],\"webhookId\":\"07c09a64-758b-40ea-8c24-d999048781c3\",\"parameters\":{\"updates\":[\"message\"],\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"rQ5q95W7uKesMDx4\",\"name\":\"Telegram account Fastewb\"}},\"typeVersion\":1.1},{\"id\":\"b37c6f84-bceb-476c-9a7c-5682a4e69f8d\",\"name\":\"Search with Brave?\",\"type\":\"n8n-nodes-base.if\",\"position\":[-180,-20],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"9c5ea127-cbbb-4304-8a93-b47b5c09b837\",\"operator\":{\"type\":\"string\",\"operation\":\"startsWith\"},\"leftValue\":\"={{ $json.message.text }}\",\"rightValue\":\"/brave \"}]}},\"typeVersion\":2.2},{\"id\":\"e879ea50-83f9-4a87-856c-a06a628ae31c\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-440,-860],\"parameters\":{\"color\":6,\"width\":480,\"content\":\"## PRELIMINARY STEPS\\n- Access to an n8n self-hosted instance and install the Community node \\\"n8n-nodes-mcp\\\". Please see this [easy guide](https://github.com/nerding-io/n8n-nodes-mcp)\\n- Get your Brave Search API Key: https://brave.com/search/api/\\n- Telegram Bot Access Token\\n\\n\\n\"},\"typeVersion\":1},{\"id\":\"754e62d1-efdb-460d-bdb1-2369d633a804\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-440,-660],\"parameters\":{\"color\":6,\"width\":480,\"height\":420,\"content\":\"## SET MCP BRAVE TOOL\\nIn \\\"List Brave Tools\\\" create new credential as shown in  this image\\n![image](https://github.com/nerding-io/n8n-nodes-mcp/raw/main/assets/credentials-envs.png)\\n\\nIn Environment field set this value:\\nBRAVE_API_KEY=your-api-key\"},\"typeVersion\":1},{\"id\":\"073eb8d2-9026-4031-af01-850342a5c5ca\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-240,-120],\"parameters\":{\"height\":260,\"content\":\"the search only occurs when the command \\\"/brave\\\" is present in the message\"},\"typeVersion\":1},{\"id\":\"eb76fbed-0ba0-4a56-a1fe-65e4bfb38ea8\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[240,-120],\"parameters\":{\"width\":220,\"height\":260,\"content\":\"I clean the message by removing the \\\"/brave\\\" command\"},\"typeVersion\":1},{\"id\":\"980bf4e1-15cf-4276-b746-343850ec4b6f\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[520,-120],\"parameters\":{\"width\":180,\"height\":260,\"content\":\"Get all available Brave search tools\"},\"typeVersion\":1},{\"id\":\"2c712ec4-2184-4136-bd21-f17e19fb029e\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[760,-120],\"parameters\":{\"width\":180,\"height\":260,\"content\":\"I get the search results\"},\"typeVersion\":1},{\"id\":\"226a396a-e152-422d-b4e2-670a39117f57\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-440,-1180],\"parameters\":{\"color\":3,\"width\":480,\"height\":280,\"content\":\"## MCP-based Brave Search Engine on Telegram \\n\\nThis workflow is a powerful tool for automating interactions with Brave tools through Telegram, providing users with quick and easy access to information directly in their chat.\\n\\nThis n8n workflow enables users to perform web searches directly from Telegram using the Brave search engine. By simply sending the command /brave followed by a query, the workflow retrieves search results from Brave and returns them as a Telegram message.\"},\"typeVersion\":1},{\"id\":\"7c526a9e-f3a2-433c-aeb1-ced2e5af6a12\",\"name\":\"Get Text\",\"type\":\"n8n-nodes-base.set\",\"position\":[80,-40],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"029f4e7e-b367-4aa9-863e-e372694940fb\",\"name\":\"text\",\"type\":\"string\",\"value\":\"={{ $json.message.text }}\"}]}},\"typeVersion\":3.4}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"4566dd53-d373-43da-91c5-213ca5f335c6\",\"connections\":{\"Get Text\":{\"main\":[[{\"node\":\"Clean query\",\"type\":\"main\",\"index\":0}]]},\"Clean query\":{\"main\":[[{\"node\":\"List Brave Tools\",\"type\":\"main\",\"index\":0}]]},\"Get Message\":{\"main\":[[{\"node\":\"Search with Brave?\",\"type\":\"main\",\"index\":0}]]},\"Exec Brave tool\":{\"main\":[[{\"node\":\"Send message\",\"type\":\"main\",\"index\":0}]]},\"List Brave Tools\":{\"main\":[[{\"node\":\"Exec Brave tool\",\"type\":\"main\",\"index\":0}]]},\"Search with Brave?\":{\"main\":[[{\"node\":\"Get Text\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow enables users to perform web searches directly from Telegram using the Brave search engine. By simply sending the command /brave followed by a query, the workflow retrieves search results from Brave and returns them as a Telegram message.\n\nThis workflow is ideal for users who want a quick and private way to search the web without switching between apps. 🚀\n\nThis workflow is a powerful tool for automating interactions with Brave tools through Telegram, providing users with quick and easy access to information directly in their chat.\n\nBelow is a breakdown of the workflow:\n\n* * *\n\n#### **1\\. How It Works**\n\nThe workflow is designed to process user queries from Telegram, execute a Brave tool via the MCP Client, and send the results back to the user. Here's how it works:\n\n  1. **Telegram Trigger** :\n\n     * The workflow starts with the **Telegram Trigger** node, which listens for new messages in a Telegram chat.\n     * When a message is received, the workflow checks if it starts with the command `/brave`.\n  2. **Filter Messages** :\n\n     * The **If** node filters messages that start with `/brave`. If the message doesn't start with `/brave`, the workflow stops.\n  3. **Edit Fields** :\n\n     * The **Edit Fields** node extracts the text of the message for further processing.\n  4. **Clean Query** :\n\n     * The **Clean Query** node removes the `/brave` command from the message, leaving only the user's query.\n  5. **List Brave Tools** :\n\n     * The **List Brave Tools** node retrieves the list of available tools from the MCP Client.\n  6. **Execute Brave Tool** :\n\n     * The **Exec Brave Tool** node executes the first tool in the list using the cleaned query as input.\n  7. **Send Message** :\n\n     * The **Send Message** node sends the result of the Brave tool execution back to the user in the Telegram chat.\n\n\n\n* * *\n\n#### **2\\. Preliminary Steps**\n\n  * Access to an n8n self-hosted instance and install the Community node \"n8n-nodes-mcp\". Please see this [easy guide](https://github.com/nerding-io/n8n-nodes-mcp)\n  * Get your Brave Search API Key: <https://brave.com/search/api/>\n  * Telegram Bot Access Token\n\n\n\nIn \"List Brave Tools\" create new credential as shown in this image  \n![image](https://github.com/nerding-io/n8n-nodes-mcp/raw/main/assets/credentials-envs.png)\n\nIn Environment field set this value:  \nBRAVE_API_KEY=your-api-key\n\n* * *\n\n#### **3\\. Set Up Steps**\n\nTo set up and use this workflow in n8n, follow these steps:\n\n  1. **Telegram Configuration** :\n\n     * Set up **Telegram** credentials in n8n for the **Telegram Trigger** and **Send Message** nodes.\n     * Ensure the Telegram bot is authorized to read messages and send responses in the chat.\n  2. **MCP Client Configuration** :\n\n     * Set up **MCP Client** credentials in n8n for the **List Brave Tools** and **Exec Brave Tool** nodes.\n     * Ensure the MCP Client is configured to interact with Brave tools.\n  3. **Test the Workflow** :\n\n     * Send a message starting with `/brave` followed by a query (e.g., `/brave search for AI tools`) to the Telegram chat.\n     * The workflow will: \n       * Process the query.\n       * Execute the Brave tool via the MCP Client.\n       * Send the result back to the Telegram chat.\n  4. **Optional Customization** :\n\n     * Modify the workflow to include additional features, such as: \n       * Adding more commands or tools.\n       * Integrating with other APIs or services for advanced use cases.\n       * Sending notifications via other channels (e.g., email, Slack)\n\n\n\n* * *\n\n### **Need help customizing?**\n\n[Contact me](mailto:info@n3w.it) for consulting and support or add me on [Linkedin](https://www.linkedin.com/in/davideboizza/).\n",
  "crawled_at": "2025-05-26T04:03:15.994344",
  "readme_zh": "该工作流支持用户直接在Telegram中通过Brave搜索引擎进行网页检索。只需发送以指令`/brave`开头的查询内容，系统便会从Brave获取搜索结果并以Telegram消息形式返回。\n\n此方案特别适合需要快速、私密地进行网络搜索而不必切换应用的用户。🚀\n\n该工作流是通过Telegram自动化调用Brave工具的强力助手，让用户能在聊天窗口中便捷获取信息。\n\n以下是工作流分解说明：\n\n* * *\n\n#### **1. 运行原理**\n\n工作流通过处理Telegram用户查询指令，经MCP客户端调用Brave工具后返回结果。具体流程：\n\n1. **Telegram触发**  \n   - **Telegram Trigger**节点监听聊天消息  \n   - 当收到以`/brave`开头的消息时触发流程  \n\n2. **消息过滤**  \n   - **If**节点筛选出有效指令，非`/brave`开头的消息将终止流程  \n\n3. **字段编辑**  \n   - **Edit Fields**节点提取消息文本供后续处理  \n\n4. **查询净化**  \n   - **Clean Query**节点移除`/brave`指令，保留纯查询内容  \n\n5. **工具列表**  \n   - **List Brave Tools**节点从MCP客户端获取可用工具列表  \n\n6. **执行工具**  \n   - **Exec Brave Tool**节点使用净化后的查询内容调用首个工具  \n\n7. **消息发送**  \n   - **Send Message**节点将执行结果返回至Telegram聊天窗口  \n\n* * *\n\n#### **2. 前期准备**\n\n- 部署n8n自托管实例并安装社区节点\"n8n-nodes-mcp\"（参考[简易指南](https://github.com/nerding-io/n8n-nodes-mcp)）  \n- 获取Brave搜索API密钥：<https://brave.com/search/api/>  \n- 准备Telegram机器人访问令牌  \n\n在\"List Brave Tools\"节点按图示新建凭证：  \n![凭证设置图示](https://github.com/nerding-io/n8n-nodes-mcp/raw/main/assets/credentials-envs.png)  \n\n环境变量字段填写：  \n`BRAVE_API_KEY=你的API密钥`\n\n* * *\n\n#### **3. 配置步骤**\n\n在n8n中配置工作流：\n\n1. **Telegram配置**  \n   - 为**Telegram Trigger**和**Send Message**节点设置凭证  \n   - 确保机器人具备读取消息和发送回复的权限  \n\n2. **MCP客户端配置**  \n   - 为**List Brave Tools**和**Exec Brave Tool**节点设置MCP凭证  \n   - 确认MCP客户端已配置支持Brave工具调用  \n\n3. **测试流程**  \n   - 向聊天窗口发送`/brave`开头的查询（如`/brave 人工智能工具搜索`）  \n   - 工作流将：  \n     ✓ 解析查询内容  \n     ✓ 通过MCP客户端调用Brave工具  \n     ✓ 返回结果至聊天窗口  \n\n4. **可选定制**  \n   - 扩展功能建议：  \n     ✓ 添加更多指令或工具  \n     ✓ 集成其他API实现高级功能  \n     ✓ 增加邮件/Slack等通知渠道  \n\n* * *\n\n### **需要定制帮助？**\n\n欢迎通过[邮件](mailto:info@n3w.it)咨询，或通过[Linkedin](https://www.linkedin.com/in/davideboizza/)联系。",
  "title_zh": "在Telegram上使用基于MCP的Brave搜索引擎进行网页搜索",
  "publish_date_zh": "上次更新于一个月前",
  "workflow_json_zh": "{\n  \"id\": \"52pBJt8swWgtdY54\",\n  \"meta\": {\n    \"instanceId\": \"a4bfc93e975ca233ac45ed7c9227d84cf5a2329310525917adaf3312e10d5462\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"MCP Client with Brave and Telegram\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"af9b297d-0f8f-408f-a4d6-7545a94e8a38\",\n      \"name\": \"List Brave Tools\",\n      \"type\": \"n8n-nodes-mcp.mcpClient\",\n      \"position\": [\n        560,\n        -40\n      ],\n      \"parameters\": {},\n      \"credentials\": {\n        \"mcpClientApi\": {\n          \"id\": \"YEgJcPwvAlBOCEDA\",\n          \"name\": \"MCP Client (STDIO) Brave\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c3265586-a376-4d02-8f33-828bbba6d221\",\n      \"name\": \"Exec Brave tool\",\n      \"type\": \"n8n-nodes-mcp.mcpClient\",\n      \"position\": [\n        800,\n        -40\n      ],\n      \"parameters\": {\n        \"toolName\": \"={{ $json.tools[0].name }}\",\n        \"operation\": \"executeTool\",\n        \"toolParameters\": \"={\\n  \\\"query\\\":\\\"{{ $('Clean query').item.json.query }}\\\"\\n}\"\n      },\n      \"credentials\": {\n        \"mcpClientApi\": {\n          \"id\": \"YEgJcPwvAlBOCEDA\",\n          \"name\": \"MCP Client (STDIO) Brave\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"adbfe84e-ab4a-4640-bb52-fcb06f9d1450\",\n      \"name\": \"Clean query\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        300,\n        -40\n      ],\n      \"parameters\": {\n        \"jsCode\": \"for (const item of $input.all()) {\\n  const originalText = item.json.text;\\n\\n  const query = originalText.replace(\\\"/brave \\\", \\\"\\\");\\n\\n  item.json.query = query;\\n}\\n\\nreturn $input.all();\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9905cad4-e847-44be-8cc4-69fd427ce8a1\",\n      \"name\": \"Send message\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1040,\n        -40\n      ],\n      \"webhookId\": \"b48bb09b-e019-46a2-994b-8058f65e6442\",\n      \"parameters\": {\n        \"text\": \"={{ $json.result.content[0].text }}\",\n        \"chatId\": \"={{ $('Get Message').item.json.message.from.id }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\"\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"rQ5q95W7uKesMDx4\",\n          \"name\": \"Telegram account Fastewb\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"bf0e7c48-bbc8-4efd-9083-2fa965902453\",\n      \"name\": \"Get Message\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        -440,\n        -20\n      ],\n      \"webhookId\": \"07c09a64-758b-40ea-8c24-d999048781c3\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"rQ5q95W7uKesMDx4\",\n          \"name\": \"Telegram account Fastewb\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"b37c6f84-bceb-476c-9a7c-5682a4e69f8d\",\n      \"name\": \"Search with Brave?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -180,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"9c5ea127-cbbb-4304-8a93-b47b5c09b837\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"startsWith\"\n              },\n              \"leftValue\": \"={{ $json.message.text }}\",\n              \"rightValue\": \"/brave \"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"e879ea50-83f9-4a87-856c-a06a628ae31c\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        -860\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 480,\n        \"content\": \"## 前期准备步骤\\n- 获取n8n自托管实例并安装社区节点\\\"n8n-nodes-mcp\\\"。请参阅此[简易指南](https://github.com/nerding-io/n8n-nodes-mcp)\\n- 获取您的Brave搜索API密钥：https://brave.com/search/api/\\n- 获取Telegram机器人访问令牌\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"754e62d1-efdb-460d-bdb1-2369d633a804\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        -660\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 480,\n        \"height\": 420,\n        \"content\": \"## 设置MCP Brave工具\\n在“列出Brave工具”中，按照下图所示创建新凭证\\n![image](https://github.com/nerding-io/n8n-nodes-mcp/raw/main/assets/credentials-envs.png)\\n\\n在环境字段中设置以下值：\\nBRAVE_API_KEY=您的API密钥\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"073eb8d2-9026-4031-af01-850342a5c5ca\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -240,\n        -120\n      ],\n      \"parameters\": {\n        \"height\": 260,\n        \"content\": \"仅当消息中包含“/brave”命令时才会执行搜索\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eb76fbed-0ba0-4a56-a1fe-65e4bfb38ea8\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        240,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 220,\n        \"height\": 260,\n        \"content\": \"我通过移除“/brave”命令来清理消息。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"980bf4e1-15cf-4276-b746-343850ec4b6f\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        520,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 180,\n        \"height\": 260,\n        \"content\": \"获取所有可用的Brave搜索工具\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2c712ec4-2184-4136-bd21-f17e19fb029e\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        760,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 180,\n        \"height\": 260,\n        \"content\": \"我获取了搜索结果\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"226a396a-e152-422d-b4e2-670a39117f57\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        -1180\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 480,\n        \"height\": 280,\n        \"content\": \"## 基于MCP的Brave搜索引擎Telegram版  \\n\\n该工作流是一个强大的自动化工具，通过Telegram与Brave搜索工具进行交互，让用户能直接在聊天窗口中快速便捷地获取信息。  \\n\\n此n8n工作流支持用户通过Telegram调用Brave搜索引擎直接进行网页检索。只需发送指令/brave加上查询内容，工作流便会从Brave获取搜索结果并以Telegram消息形式返回。  \\n\\n（注：根据技术文档的文体特征，采用以下处理方式：  \\n1. 保留\\\"MCP\\\"、\\\"Brave\\\"、\\\"n8n\\\"等专业术语不译  \\n2. \\\"workflow\\\"统一译为\\\"工作流\\\"符合技术领域惯例  \\n3. 将英文被动语态转换为中文主动句式（如\\\"retrieves...and returns\\\"处理为\\\"调用...进行检索...并返回\\\"）  \\n4. 长句拆分重组，如第二段原文两句话合并为中文一个语义更连贯的段落  \\n5. 添加\\\"只需\\\"等连接词提升中文可读性）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7c526a9e-f3a2-433c-aeb1-ced2e5af6a12\",\n      \"name\": \"Get Text\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        80,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"029f4e7e-b367-4aa9-863e-e372694940fb\",\n              \"name\": \"text\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.message.text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"4566dd53-d373-43da-91c5-213ca5f335c6\",\n  \"connections\": {\n    \"Get Text\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clean query\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Clean query\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"List Brave Tools\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Search with Brave?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Exec Brave tool\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"List Brave Tools\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Exec Brave tool\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search with Brave?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Text\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}