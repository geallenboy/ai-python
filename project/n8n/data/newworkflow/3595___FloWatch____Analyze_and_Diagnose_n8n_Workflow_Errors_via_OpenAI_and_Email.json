{
  "url": "https://n8n.io/workflows/3595-flowatch-analyze-and-diagnose-n8n-workflow-errors-via-openai-and-email/",
  "title": "🧠 FloWatch 👁️ Analyze and Diagnose n8n Workflow Errors via OpenAI and Email",
  "author": "RealSimple Solutions",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "Other"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"3b1q6ZJTxeONrpUV\",\"meta\":{\"instanceId\":\"\"},\"name\":\"Error Alert and Summarizer\",\"tags\":[],\"nodes\":[{\"id\":\"d29a5b06-1609-416f-bc74-0274d3321019\",\"name\":\"Error Trigger\",\"type\":\"n8n-nodes-base.errorTrigger\",\"position\":[-600,-40],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a71d3052-a89b-4e8e-baee-7fe245575f42\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[528,180],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o\",\"cachedResultName\":\"gpt-4o\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"786\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"e71dee7b-4dfd-49ab-8939-f3808ee112d7\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[648,180],\"parameters\":{\"jsonSchemaExample\":\"{\\n\\\"diagnosis\\\":\\\"\\\",\\n\\\"cause\\\":\\\"\\\",\\n\\\"resolution\\\":\\\"\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"3611e9e8-f677-49c4-b06c-fa6c28f43930\",\"name\":\"SET EMAIL\",\"type\":\"n8n-nodes-base.set\",\"position\":[-380,-40],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"45e1443a-fb44-42f8-96ad-423197c7265b\",\"name\":\"TO\",\"type\":\"string\",\"value\":\"myemail@myemail.com\"},{\"id\":\"968b05dc-f476-4e13-8166-e62005d0f936\",\"name\":\"CC\",\"type\":\"string\",\"value\":\"theiremail@theiremail.com\"},{\"id\":\"570663c5-29c0-44fb-9992-908b7cca8136\",\"name\":\"BCC\",\"type\":\"string\",\"value\":\"theiremail@theiremail.com\"}]}},\"typeVersion\":3.4},{\"id\":\"3676f72e-d06d-44f8-be35-19efe09a257e\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-450,-260],\"parameters\":{\"color\":3,\"height\":380,\"content\":\"# SET YOUR EMAILS\"},\"typeVersion\":1},{\"id\":\"f0b08a20-6ecc-4487-9a0a-30be07cc0cbb\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-40,-260],\"parameters\":{\"color\":3,\"width\":280,\"height\":380,\"content\":\"# Enable/Disable Manual Executions\"},\"typeVersion\":1},{\"id\":\"b35cd2a6-5f22-4e06-9bb0-880855c423a8\",\"name\":\"Remove Manual Exec\",\"type\":\"n8n-nodes-base.if\",\"position\":[60,-40],\"parameters\":{\"options\":{\"ignoreCase\":true},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":false,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"9b2f3ff3-db9c-406b-a97f-37620dc5fab9\",\"operator\":{\"type\":\"string\",\"operation\":\"notContains\"},\"leftValue\":\"={{ $json.mode }}\",\"rightValue\":\"manual\"}]}},\"typeVersion\":2.2},{\"id\":\"2a33b02a-78f1-4243-ba7d-f217ea4d1895\",\"name\":\"Get Failed Exec\",\"type\":\"n8n-nodes-base.n8n\",\"position\":[-160,-40],\"parameters\":{\"options\":{\"activeWorkflows\":true},\"resource\":\"execution\",\"operation\":\"get\",\"executionId\":\"={{ $('Error Trigger').item.json.execution.id }}\",\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"786\",\"name\":\"n8n account\"}},\"typeVersion\":1},{\"id\":\"b36ccbf9-4e47-44fc-aed3-424b6f121329\",\"name\":\"Extract Error Details\",\"type\":\"n8n-nodes-base.code\",\"position\":[280,-40],\"parameters\":{\"jsCode\":\"// 1) Grab your full execution JSON\\nconst exec = items[0].json;\\n\\n// 2) Build execution‐level metadata\\nconst meta = {\\n  executionId:    exec.id,\\n  finished:       exec.finished,\\n  mode:           exec.mode,\\n  status:         exec.status,\\n  createdAt:      exec.createdAt,\\n  startedAt:      exec.startedAt,\\n  stoppedAt:      exec.stoppedAt,\\n  deletedAt:      exec.deletedAt,\\n  workflowId:     exec.workflowId,\\n  workflowName:   exec.workflowData?.name,\\n  retryOf:        exec.retryOf,\\n  retrySuccessId: exec.retrySuccessId,\\n};\\n\\n// 3) Identify trigger node name from startData\\nconst runNodeFilter = exec.data?.startData?.runNodeFilter || [];\\nconst triggerNodeName = runNodeFilter[0] || null;\\n\\n// 4) Grab the raw trigger runData\\nconst runData = exec.data?.resultData?.runData || {};\\nconst triggerRuns = triggerNodeName ? (runData[triggerNodeName] || []) : [];\\n\\n// 5) Extract the JSON payload from the first run of the trigger\\nlet triggerPayload = {};\\nif (triggerRuns.length && triggerRuns[0].data?.main?.[0]?.[0]?.json) {\\n  triggerPayload = triggerRuns[0].data.main[0][0].json;\\n}\\n\\n// 6) Merge trigger info into meta\\nmeta.triggerNodeName = triggerNodeName;\\nmeta.triggerPayload  = triggerPayload;\\n\\n// 7) Now scan for all node errors, **excluding** any nodeName that contains “SERP”\\nconst allErrors = [];\\nfor (const [nodeName, runs] of Object.entries(runData)) {\\n  // Skip any of the SERP nodes\\n  if (nodeName.includes('SERP')) continue;\\n\\n  runs.forEach(run => {\\n    if (run.executionStatus === 'error') {\\n      const err     = run.error || exec.data.resultData.error || {};\\n      const nodeDef = err.node || run.node || {};\\n\\n      allErrors.push({\\n        ...meta,                    // exec + trigger metadata\\n\\n        nodeName,\\n        nodeId:        nodeDef.id,\\n        nodeType:      nodeDef.type,\\n        nodeLabel:     nodeDef.name,\\n\\n        startTime:     run.startTime,\\n        executionTime: run.executionTime,\\n        source:        run.source,\\n\\n        errorName:        err.name,\\n        errorMessage:     err.message,\\n        errorDescription: err.description,\\n        httpCode:         err.httpCode,\\n        messages:         err.messages,\\n        context:          err.context,\\n        stack:            err.stack,\\n\\n        parameters:       nodeDef.parameters,\\n        credentials:      nodeDef.credentials,\\n      });\\n    }\\n  });\\n}\\n\\n// 8) Return results\\nif (!allErrors.length) {\\n  return [{ json: { message: '✅ No (non‑SERP) errors found in this execution.' } }];\\n}\\nreturn allErrors.map(e => ({ json: e }));\\n\"},\"typeVersion\":2},{\"id\":\"a26fb0c8-99eb-466d-b201-89c402fa1af4\",\"name\":\"Error Solver Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[500,-40],\"parameters\":{\"text\":\"=Can you please help me with this error that occured in my n8n workflow? {{ JSON.stringify($json) }}\",\"options\":{\"systemMessage\":\"You are an seasoned n8n expert with specializations in managing n8n instances and workflows. The user will provide a detailed error json object and your goal is to review, analyze and understand the error and using your expertise diagnose the error and provide a detailed report to the user with your diagnosis, cause and resolution so the user understands and can immediately fix the issue.\"},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.8},{\"id\":\"8cfd7229-3ff1-4ba1-a67d-caa21be8064f\",\"name\":\"Set Diagnosis Fields\",\"type\":\"n8n-nodes-base.set\",\"position\":[876,-40],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"fac5fbee-d63d-4148-b047-5ed5af4f2574\",\"name\":\"error.diagnosis\",\"type\":\"string\",\"value\":\"={{ $json.output.diagnosis }}\"},{\"id\":\"ece9388d-f667-4984-a143-7241f622fe76\",\"name\":\"error.cause\",\"type\":\"string\",\"value\":\"={{ $json.output.cause }}\"},{\"id\":\"acb6b34a-a651-42fc-a44a-331b2e0d745c\",\"name\":\"error.resolution\",\"type\":\"string\",\"value\":\"={{ $json.output.resolution }}\"},{\"id\":\"c765754b-d6d5-4592-ac3f-99a350bc3c19\",\"name\":\"error.workflowName\",\"type\":\"string\",\"value\":\"={{ $('Extract Error Details').item.json.workflowName }}\"},{\"id\":\"dabebc62-3e0c-4d22-afbf-54ba66a912fb\",\"name\":\"error.workflowId\",\"type\":\"string\",\"value\":\"={{ $('Extract Error Details').item.json.workflowId }}\"},{\"id\":\"6ab19800-9a0f-439f-bf62-7a7afc5bf958\",\"name\":\"workflowLink\",\"type\":\"string\",\"value\":\"={{ $execution.resumeUrl.split('/').slice(0, 3).join('/') }}/workflow/{{ $('Extract Error Details').item.json.workflowId }}\"},{\"id\":\"29daaea5-052b-46d4-8192-141db159bff2\",\"name\":\"error.executionId\",\"type\":\"string\",\"value\":\"={{ $('Extract Error Details').item.json.executionId }}\"},{\"id\":\"9e4e553c-c82b-41ec-8ee2-14162cdc3bd8\",\"name\":\"executionLink\",\"type\":\"string\",\"value\":\"={{ $execution.resumeUrl.split('/').slice(0, 3).join('/') }}/workflow/{{ $('Extract Error Details').item.json.workflowId }}/executions/{{ $('Extract Error Details').item.json.executionId }}\"},{\"id\":\"7269ea9f-ed49-46cd-89f2-d4a467da529d\",\"name\":\"error.finished\",\"type\":\"boolean\",\"value\":\"={{ $('Extract Error Details').item.json.finished }}\"},{\"id\":\"29a6e6d2-5058-4dd9-b2f9-3980a6a9073a\",\"name\":\"error.startedAt\",\"type\":\"string\",\"value\":\"={{ $('Extract Error Details').item.json.startedAt }}\"},{\"id\":\"a0ad0e13-5a6e-48db-9a80-74c09434de7f\",\"name\":\"error.nodeName\",\"type\":\"string\",\"value\":\"={{ $('Extract Error Details').item.json.nodeName }}\"},{\"id\":\"6c1001d4-a581-4520-9f16-a2c7cf0e1f84\",\"name\":\"error.previousNode\",\"type\":\"string\",\"value\":\"={{ $('Extract Error Details').item.json.source[0].previousNode }}\"},{\"id\":\"8c3402ca-3f15-44ae-9b96-ea37c174334c\",\"name\":\"rawJson\",\"type\":\"string\",\"value\":\"={{ JSON.stringify($('Extract Error Details').item.json) }}\"}]}},\"typeVersion\":3.4},{\"id\":\"9e95edf0-b2f1-443b-9ac4-3e3b3311cad5\",\"name\":\"Send Gmail\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1316,-40],\"webhookId\":\"2f253c1f-36c3-4d58-ba2f-3a50bb78f188\",\"parameters\":{\"sendTo\":\"={{ $('SET EMAIL').item.json.TO }}\",\"message\":\"={{ $json.html }}\",\"options\":{\"ccList\":\"={{ $('SET EMAIL').item.json.CC }}\",\"bccList\":\"={{ $('SET EMAIL').item.json.BCC }}\",\"appendAttribution\":true},\"subject\":\"={{ $json.subject }}\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"786\",\"name\":\"Gmail account\"}},\"typeVersion\":2.1},{\"id\":\"1705ee42-0be4-41a2-8ff9-f6963eef7382\",\"name\":\"Generate Email\",\"type\":\"n8n-nodes-base.code\",\"position\":[1100,-40],\"parameters\":{\"jsCode\":\"// 1. Pull in your error payload\\nconst rawInput = items[0].json;\\nconst parsed = typeof rawInput === 'string' ? JSON.parse(rawInput) : rawInput;\\nconst errorArray = Array.isArray(parsed) ? parsed : [parsed];\\n\\n// 2. Build HTML & Markdown sections\\nlet htmlSections = '';\\n\\n\\nfor (const errObj of errorArray) {\\n  const {\\n    error: {\\n      workflowName,\\n      executionId,\\n      nodeName,\\n      previousNode,\\n      diagnosis,\\n      cause,\\n      resolution,\\n      startedAt,\\n    },\\n    workflowLink,\\n    executionLink,\\n  } = errObj;\\n\\n  // HTML block\\n  htmlSections += `\\n    <div style=\\\"border:1px solid #ddd;border-radius:4px;padding:16px;margin-bottom:20px;background:#fafafa;\\\">\\n      <h3 style=\\\"margin:0 0 10px;color:#c0392b;font-family:Arial,sans-serif;\\\">\\n        🛑 ${workflowName} — Error in node: ${nodeName}\\n      </h3>\\n      <p style=\\\"margin:4px 0;font-family:Arial,sans-serif;\\\">\\n        <strong>Workflow:</strong> \\n        <a href=\\\"${workflowLink}\\\" style=\\\"color:#2980b9;text-decoration:none;\\\">\\n          ${workflowName}\\n        </a><br/>\\n        <strong>Execution:</strong> \\n        <a href=\\\"${executionLink}\\\" style=\\\"color:#2980b9;text-decoration:none;\\\">\\n          #${executionId}\\n        </a><br/>\\n        <strong>Previous Node:</strong> ${previousNode}<br/>\\n        <strong>Started At:</strong> ${new Date(startedAt).toLocaleString('en-US', { timeZone: 'America/New_York' })}\\n      </p>\\n      <hr style=\\\"border:none;border-top:1px solid #ccc;margin:12px 0;\\\"/>\\n      <h4 style=\\\"margin:0 0 6px;color:#e67e22;font-family:Arial,sans-serif;\\\">🔍 Diagnosis</h4>\\n      <p style=\\\"margin:4px 0 12px;font-family:Arial,sans-serif;\\\">${diagnosis}</p>\\n      <h4 style=\\\"margin:0 0 6px;color:#e67e22;font-family:Arial,sans-serif;\\\">⚙️ Cause</h4>\\n      <p style=\\\"margin:4px 0 12px;font-family:Arial,sans-serif;\\\">${cause}</p>\\n      <h4 style=\\\"margin:0 0 6px;color:#e67e22;font-family:Arial,sans-serif;\\\">✅ Resolution</h4>\\n      <p style=\\\"white-space:pre-wrap;margin:4px 0;font-family:Arial,sans-serif;\\\">${resolution}</p>\\n    </div>`;\\n\\n// 3. Wrap up\\nconst html = `\\n  <div style=\\\"font-family:Arial,sans-serif;color:#333;background:#fff;padding:20px;\\\">\\n    <h2 style=\\\"margin-top:0;color:#2c3e50;\\\">Automated Error Report</h2>\\n    ${htmlSections}\\n     <p style=\\\"font-size:12px;color:#777;font-family:Arial,sans-serif;\\\">\\n  This message was generated automatically by \\n  <a href=\\\"https://realsimple.dev\\\" style=\\\"color:#777;text-decoration:none;\\\"><b>Real Simple Solutions</b></a>.\\n</p>\\n<div style=\\\"background:#f0f4ff;padding:8px 12px;margin-top:6px;border-radius:6px;font-size:12px;font-family:Arial,sans-serif;\\\">\\n  ✨ <strong>Want more n8n AI automation templates?</strong><br>\\n  Check out our full collection on \\n  <a href=\\\"https://joeper.es/4jXyRub\\\" style=\\\"color:#0066cc;text-decoration:none;\\\"><b>Gumroad</b></a>.\\n</div>\\n  </div>\\n`;\\n\\n// 4. Return all three\\nreturn [\\n  {\\n    json: {\\n      subject: `🚨 n8n Error: ${errorArray[0].error.workflowName} (#${errorArray[0].error.executionId})`,\\n      html\\n    },\\n  },\\n];\\n\"},\"typeVersion\":2}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"be484a20-26cd-4df4-a993-f7d01c2956e6\",\"connections\":{\"SET EMAIL\":{\"main\":[[{\"node\":\"Get Failed Exec\",\"type\":\"main\",\"index\":0}]]},\"Error Trigger\":{\"main\":[[{\"node\":\"SET EMAIL\",\"type\":\"main\",\"index\":0}]]},\"Generate Email\":{\"main\":[[{\"node\":\"Send Gmail\",\"type\":\"main\",\"index\":0}]]},\"Get Failed Exec\":{\"main\":[[{\"node\":\"Remove Manual Exec\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Error Solver Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Error Solver Agent\":{\"main\":[[{\"node\":\"Set Diagnosis Fields\",\"type\":\"main\",\"index\":0}]]},\"Remove Manual Exec\":{\"main\":[[{\"node\":\"Extract Error Details\",\"type\":\"main\",\"index\":0}]]},\"Set Diagnosis Fields\":{\"main\":[[{\"node\":\"Generate Email\",\"type\":\"main\",\"index\":0}]]},\"Extract Error Details\":{\"main\":[[{\"node\":\"Error Solver Agent\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Error Solver Agent\",\"type\":\"ai_outputParser\",\"index\":0}]]}}}",
  "readme": "# 🧠 Analyze and Diagnose n8n Workflow Errors Automatically via OpenAI and Email\n\n![FlowatchLogodark.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Flowatch_Logo_dark_a29f0f24c8.png)  \n![FloWatchScreenCap.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Flo_Watch_Screen_Cap_394d527c48.png)\n\n> ⚠️ **This template is available on ☁️ Cloud & 🖥️ self-hosted n8n instances with the OpenAI node enabled.**\n\n* * *\n\n## 👤 Who is this for?\n\nThis workflow is designed for **n8n developers** , **automation engineers** , and **DevOps teams** who want to automatically capture and analyze workflow errors, and receive professional HTML-styled diagnostics directly in their inbox.\n\n* * *\n\n## 💥 What problem does this solve?\n\nManually troubleshooting failed workflows in n8n can be time-consuming. This template streamlines error detection by:\n\n  * Capturing workflow failures using the **Error Trigger** node\n  * Diagnosing root causes with the help of **OpenAI**\n  * Sending a fully-formatted, human-readable **HTML error report** via email\n  * Including practical resolutions and next-step suggestions\n\n\n\nThis helps you or your team resolve issues faster and avoid repeated manual debugging.\n\n* * *\n\n## ⚙️ What this workflow does\n\n  * ⚡ **Triggers on any n8n workflow error**\n  * 📦 **Extracts relevant error metadata** including node, execution ID, and timestamps\n  * 🧠 **Sends error content to OpenAI** for analysis and recommendations\n  * 💌 **Generates an HTML email report** with inline styles and clear formatting\n  * 📥 **Emails the result to a system administrator or support email**\n\n\n\n* * *\n\n## 🛠️ Setup\n\n  1. **Install the OpenAI node** in your self-hosted n8n instance.\n  2. Add your **OpenAI API Key** securely in credentials.\n  3. Configure the **SMTP Email node** with your email credentials.\n  4. Adjust the **Error Trigger** to monitor specific workflows or all workflows.\n  5. Set your preferred **admin or dev email address** in the final node.\n\n\n\n* * *\n\n## 🔧 How to customize this workflow to your needs\n\n  * 🧩 Use a [Set node] to define your variables, such as: \n    * Default admin email\n    * Workflow filter (optional)\n  * ✍️ Customize the prompt sent to OpenAI if you want deeper or more specific analysis\n  * 🎨 Modify the email HTML styles to match your brand or internal format\n  * 💾 Add additional logging (e.g., to Airtable, Google Sheets, or Notion) for long-term error tracking\n\n\n\n* * *\n\n## 📌 Sticky Note\n\n**Title:** Automated Error Reporter with AI-Powered Diagnosis  \n**Description:** Captures any n8n error, sends it to OpenAI, and emails a beautiful HTML report to the administrator with steps to resolve the issue. Requires OpenAI credentials and SMTP configured.\n",
  "crawled_at": "2025-05-26T04:58:22.778330",
  "readme_zh": "# 🧠 通过OpenAI与邮件自动分析诊断n8n工作流错误\n\n![FlowatchLogodark.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Flowatch_Logo_dark_a29f0f24c8.png)  \n![FloWatchScreenCap.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Flo_Watch_Screen_Cap_394d527c48.png)\n\n> ⚠️ **本模板适用于已启用OpenAI节点的☁️云端版及🖥️自托管版n8n实例**\n\n* * *\n\n## 👤 适用对象\n\n本工作流专为以下用户设计：\n- **n8n开发者**\n- **自动化工程师**\n- **DevOps团队**\n帮助用户自动捕获分析工作流错误，并将专业级HTML格式诊断报告直接发送至收件箱\n\n* * *\n\n## 💥 解决痛点\n\n手动排查n8n工作流故障耗时费力，本模板通过以下方式实现错误诊断自动化：\n- 通过**错误触发器节点**捕获工作流失败事件\n- 借助**OpenAI**智能分析根本原因\n- 发送格式规范、易于阅读的**HTML错误报告邮件**\n- 提供切实可行的解决方案与后续步骤建议\n\n助您快速定位问题，告别重复调试\n\n* * *\n\n## ⚙️ 核心功能\n\n- ⚡ **实时触发所有n8n工作流错误**\n- 📦 **提取关键错误元数据**（含节点信息、执行ID、时间戳）\n- 🧠 **通过OpenAI智能分析**生成处理建议\n- 💌 **自动生成带内联样式的HTML邮件报告**\n- 📥 **将诊断报告发送至系统管理员或支持邮箱**\n\n* * *\n\n## 🛠️ 配置指南\n\n1. 在自托管实例中**安装OpenAI节点**\n2. 在凭证管理中安全添加**OpenAI API密钥**\n3. 配置**SMTP邮件节点**的邮箱凭证\n4. 调整**错误触发器**监控范围（特定工作流/全部工作流）\n5. 在末端节点设置**管理员/开发团队接收邮箱**\n\n* * *\n\n## 🔧 自定义扩展方案\n\n- 🧩 使用[Set节点]定义变量：\n  - 默认管理员邮箱\n  - 工作流过滤器（可选）\n- ✍️ 按需修改发送至OpenAI的提示词以获取深度分析\n- 🎨 调整邮件HTML样式匹配企业品牌规范\n- 💾 添加长期错误日志记录（如Airtable/Google Sheets/Notion）\n\n* * *\n\n## 📌 便签说明\n\n**标题：** 智能错误报告系统（AI诊断版）  \n**描述：** 自动捕获n8n错误，通过OpenAI分析生成解决方案，并向管理员发送精美HTML报告。需配置OpenAI凭证与SMTP服务。",
  "title_zh": "🧠 FloWatch 👁️ 通过OpenAI和电子邮件分析与诊断n8n工作流错误",
  "publish_date_zh": "上次更新于11天前",
  "workflow_json_zh": "{\n  \"id\": \"3b1q6ZJTxeONrpUV\",\n  \"meta\": {\n    \"instanceId\": \"\"\n  },\n  \"name\": \"Error Alert and Summarizer\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"d29a5b06-1609-416f-bc74-0274d3321019\",\n      \"name\": \"Error Trigger\",\n      \"type\": \"n8n-nodes-base.errorTrigger\",\n      \"position\": [\n        -600,\n        -40\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a71d3052-a89b-4e8e-baee-7fe245575f42\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        528,\n        180\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o\",\n          \"cachedResultName\": \"gpt-4o\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"786\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"e71dee7b-4dfd-49ab-8939-f3808ee112d7\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        648,\n        180\n      ],\n      \"parameters\": {\n        \"jsonSchemaExample\": \"{\\n\\\"diagnosis\\\":\\\"\\\",\\n\\\"cause\\\":\\\"\\\",\\n\\\"resolution\\\":\\\"\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"3611e9e8-f677-49c4-b06c-fa6c28f43930\",\n      \"name\": \"SET EMAIL\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -380,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"45e1443a-fb44-42f8-96ad-423197c7265b\",\n              \"name\": \"TO\",\n              \"type\": \"string\",\n              \"value\": \"myemail@myemail.com\"\n            },\n            {\n              \"id\": \"968b05dc-f476-4e13-8166-e62005d0f936\",\n              \"name\": \"CC\",\n              \"type\": \"string\",\n              \"value\": \"theiremail@theiremail.com\"\n            },\n            {\n              \"id\": \"570663c5-29c0-44fb-9992-908b7cca8136\",\n              \"name\": \"BCC\",\n              \"type\": \"string\",\n              \"value\": \"theiremail@theiremail.com\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"3676f72e-d06d-44f8-be35-19efe09a257e\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -450,\n        -260\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"height\": 380,\n        \"content\": \"# 设置您的电子邮件\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f0b08a20-6ecc-4487-9a0a-30be07cc0cbb\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -40,\n        -260\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 280,\n        \"height\": 380,\n        \"content\": \"# 启用/禁用手动执行\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b35cd2a6-5f22-4e06-9bb0-880855c423a8\",\n      \"name\": \"Remove Manual Exec\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        60,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"ignoreCase\": true\n        },\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": false,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"9b2f3ff3-db9c-406b-a97f-37620dc5fab9\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notContains\"\n              },\n              \"leftValue\": \"={{ $json.mode }}\",\n              \"rightValue\": \"manual\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"2a33b02a-78f1-4243-ba7d-f217ea4d1895\",\n      \"name\": \"Get Failed Exec\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        -160,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"activeWorkflows\": true\n        },\n        \"resource\": \"execution\",\n        \"operation\": \"get\",\n        \"executionId\": \"={{ $('Error Trigger').item.json.execution.id }}\",\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"786\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b36ccbf9-4e47-44fc-aed3-424b6f121329\",\n      \"name\": \"Extract Error Details\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        280,\n        -40\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// 1) Grab your full execution JSON\\nconst exec = items[0].json;\\n\\n// 2) Build execution‐level metadata\\nconst meta = {\\n  executionId:    exec.id,\\n  finished:       exec.finished,\\n  mode:           exec.mode,\\n  status:         exec.status,\\n  createdAt:      exec.createdAt,\\n  startedAt:      exec.startedAt,\\n  stoppedAt:      exec.stoppedAt,\\n  deletedAt:      exec.deletedAt,\\n  workflowId:     exec.workflowId,\\n  workflowName:   exec.workflowData?.name,\\n  retryOf:        exec.retryOf,\\n  retrySuccessId: exec.retrySuccessId,\\n};\\n\\n// 3) Identify trigger node name from startData\\nconst runNodeFilter = exec.data?.startData?.runNodeFilter || [];\\nconst triggerNodeName = runNodeFilter[0] || null;\\n\\n// 4) Grab the raw trigger runData\\nconst runData = exec.data?.resultData?.runData || {};\\nconst triggerRuns = triggerNodeName ? (runData[triggerNodeName] || []) : [];\\n\\n// 5) Extract the JSON payload from the first run of the trigger\\nlet triggerPayload = {};\\nif (triggerRuns.length && triggerRuns[0].data?.main?.[0]?.[0]?.json) {\\n  triggerPayload = triggerRuns[0].data.main[0][0].json;\\n}\\n\\n// 6) Merge trigger info into meta\\nmeta.triggerNodeName = triggerNodeName;\\nmeta.triggerPayload  = triggerPayload;\\n\\n// 7) Now scan for all node errors, **excluding** any nodeName that contains “SERP”\\nconst allErrors = [];\\nfor (const [nodeName, runs] of Object.entries(runData)) {\\n  // Skip any of the SERP nodes\\n  if (nodeName.includes('SERP')) continue;\\n\\n  runs.forEach(run => {\\n    if (run.executionStatus === 'error') {\\n      const err     = run.error || exec.data.resultData.error || {};\\n      const nodeDef = err.node || run.node || {};\\n\\n      allErrors.push({\\n        ...meta,                    // exec + trigger metadata\\n\\n        nodeName,\\n        nodeId:        nodeDef.id,\\n        nodeType:      nodeDef.type,\\n        nodeLabel:     nodeDef.name,\\n\\n        startTime:     run.startTime,\\n        executionTime: run.executionTime,\\n        source:        run.source,\\n\\n        errorName:        err.name,\\n        errorMessage:     err.message,\\n        errorDescription: err.description,\\n        httpCode:         err.httpCode,\\n        messages:         err.messages,\\n        context:          err.context,\\n        stack:            err.stack,\\n\\n        parameters:       nodeDef.parameters,\\n        credentials:      nodeDef.credentials,\\n      });\\n    }\\n  });\\n}\\n\\n// 8) Return results\\nif (!allErrors.length) {\\n  return [{ json: { message: '✅ No (non‑SERP) errors found in this execution.' } }];\\n}\\nreturn allErrors.map(e => ({ json: e }));\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a26fb0c8-99eb-466d-b201-89c402fa1af4\",\n      \"name\": \"Error Solver Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        500,\n        -40\n      ],\n      \"parameters\": {\n        \"text\": \"=Can you please help me with this error that occured in my n8n workflow? {{ JSON.stringify($json) }}\",\n        \"options\": {\n          \"systemMessage\": \"You are an seasoned n8n expert with specializations in managing n8n instances and workflows. The user will provide a detailed error json object and your goal is to review, analyze and understand the error and using your expertise diagnose the error and provide a detailed report to the user with your diagnosis, cause and resolution so the user understands and can immediately fix the issue.\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"8cfd7229-3ff1-4ba1-a67d-caa21be8064f\",\n      \"name\": \"Set Diagnosis Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        876,\n        -40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"fac5fbee-d63d-4148-b047-5ed5af4f2574\",\n              \"name\": \"error.diagnosis\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.diagnosis }}\"\n            },\n            {\n              \"id\": \"ece9388d-f667-4984-a143-7241f622fe76\",\n              \"name\": \"error.cause\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.cause }}\"\n            },\n            {\n              \"id\": \"acb6b34a-a651-42fc-a44a-331b2e0d745c\",\n              \"name\": \"error.resolution\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.resolution }}\"\n            },\n            {\n              \"id\": \"c765754b-d6d5-4592-ac3f-99a350bc3c19\",\n              \"name\": \"error.workflowName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Extract Error Details').item.json.workflowName }}\"\n            },\n            {\n              \"id\": \"dabebc62-3e0c-4d22-afbf-54ba66a912fb\",\n              \"name\": \"error.workflowId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Extract Error Details').item.json.workflowId }}\"\n            },\n            {\n              \"id\": \"6ab19800-9a0f-439f-bf62-7a7afc5bf958\",\n              \"name\": \"workflowLink\",\n              \"type\": \"string\",\n              \"value\": \"={{ $execution.resumeUrl.split('/').slice(0, 3).join('/') }}/workflow/{{ $('Extract Error Details').item.json.workflowId }}\"\n            },\n            {\n              \"id\": \"29daaea5-052b-46d4-8192-141db159bff2\",\n              \"name\": \"error.executionId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Extract Error Details').item.json.executionId }}\"\n            },\n            {\n              \"id\": \"9e4e553c-c82b-41ec-8ee2-14162cdc3bd8\",\n              \"name\": \"executionLink\",\n              \"type\": \"string\",\n              \"value\": \"={{ $execution.resumeUrl.split('/').slice(0, 3).join('/') }}/workflow/{{ $('Extract Error Details').item.json.workflowId }}/executions/{{ $('Extract Error Details').item.json.executionId }}\"\n            },\n            {\n              \"id\": \"7269ea9f-ed49-46cd-89f2-d4a467da529d\",\n              \"name\": \"error.finished\",\n              \"type\": \"boolean\",\n              \"value\": \"={{ $('Extract Error Details').item.json.finished }}\"\n            },\n            {\n              \"id\": \"29a6e6d2-5058-4dd9-b2f9-3980a6a9073a\",\n              \"name\": \"error.startedAt\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Extract Error Details').item.json.startedAt }}\"\n            },\n            {\n              \"id\": \"a0ad0e13-5a6e-48db-9a80-74c09434de7f\",\n              \"name\": \"error.nodeName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Extract Error Details').item.json.nodeName }}\"\n            },\n            {\n              \"id\": \"6c1001d4-a581-4520-9f16-a2c7cf0e1f84\",\n              \"name\": \"error.previousNode\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Extract Error Details').item.json.source[0].previousNode }}\"\n            },\n            {\n              \"id\": \"8c3402ca-3f15-44ae-9b96-ea37c174334c\",\n              \"name\": \"rawJson\",\n              \"type\": \"string\",\n              \"value\": \"={{ JSON.stringify($('Extract Error Details').item.json) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"9e95edf0-b2f1-443b-9ac4-3e3b3311cad5\",\n      \"name\": \"Send Gmail\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1316,\n        -40\n      ],\n      \"webhookId\": \"2f253c1f-36c3-4d58-ba2f-3a50bb78f188\",\n      \"parameters\": {\n        \"sendTo\": \"={{ $('SET EMAIL').item.json.TO }}\",\n        \"message\": \"={{ $json.html }}\",\n        \"options\": {\n          \"ccList\": \"={{ $('SET EMAIL').item.json.CC }}\",\n          \"bccList\": \"={{ $('SET EMAIL').item.json.BCC }}\",\n          \"appendAttribution\": true\n        },\n        \"subject\": \"={{ $json.subject }}\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"786\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"1705ee42-0be4-41a2-8ff9-f6963eef7382\",\n      \"name\": \"Generate Email\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1100,\n        -40\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// 1. Pull in your error payload\\nconst rawInput = items[0].json;\\nconst parsed = typeof rawInput === 'string' ? JSON.parse(rawInput) : rawInput;\\nconst errorArray = Array.isArray(parsed) ? parsed : [parsed];\\n\\n// 2. Build HTML & Markdown sections\\nlet htmlSections = '';\\n\\n\\nfor (const errObj of errorArray) {\\n  const {\\n    error: {\\n      workflowName,\\n      executionId,\\n      nodeName,\\n      previousNode,\\n      diagnosis,\\n      cause,\\n      resolution,\\n      startedAt,\\n    },\\n    workflowLink,\\n    executionLink,\\n  } = errObj;\\n\\n  // HTML block\\n  htmlSections += `\\n    <div style=\\\"border:1px solid #ddd;border-radius:4px;padding:16px;margin-bottom:20px;background:#fafafa;\\\">\\n      <h3 style=\\\"margin:0 0 10px;color:#c0392b;font-family:Arial,sans-serif;\\\">\\n        🛑 ${workflowName} — Error in node: ${nodeName}\\n      </h3>\\n      <p style=\\\"margin:4px 0;font-family:Arial,sans-serif;\\\">\\n        <strong>Workflow:</strong> \\n        <a href=\\\"${workflowLink}\\\" style=\\\"color:#2980b9;text-decoration:none;\\\">\\n          ${workflowName}\\n        </a><br/>\\n        <strong>Execution:</strong> \\n        <a href=\\\"${executionLink}\\\" style=\\\"color:#2980b9;text-decoration:none;\\\">\\n          #${executionId}\\n        </a><br/>\\n        <strong>Previous Node:</strong> ${previousNode}<br/>\\n        <strong>Started At:</strong> ${new Date(startedAt).toLocaleString('en-US', { timeZone: 'America/New_York' })}\\n      </p>\\n      <hr style=\\\"border:none;border-top:1px solid #ccc;margin:12px 0;\\\"/>\\n      <h4 style=\\\"margin:0 0 6px;color:#e67e22;font-family:Arial,sans-serif;\\\">🔍 Diagnosis</h4>\\n      <p style=\\\"margin:4px 0 12px;font-family:Arial,sans-serif;\\\">${diagnosis}</p>\\n      <h4 style=\\\"margin:0 0 6px;color:#e67e22;font-family:Arial,sans-serif;\\\">⚙️ Cause</h4>\\n      <p style=\\\"margin:4px 0 12px;font-family:Arial,sans-serif;\\\">${cause}</p>\\n      <h4 style=\\\"margin:0 0 6px;color:#e67e22;font-family:Arial,sans-serif;\\\">✅ Resolution</h4>\\n      <p style=\\\"white-space:pre-wrap;margin:4px 0;font-family:Arial,sans-serif;\\\">${resolution}</p>\\n    </div>`;\\n\\n// 3. Wrap up\\nconst html = `\\n  <div style=\\\"font-family:Arial,sans-serif;color:#333;background:#fff;padding:20px;\\\">\\n    <h2 style=\\\"margin-top:0;color:#2c3e50;\\\">Automated Error Report</h2>\\n    ${htmlSections}\\n     <p style=\\\"font-size:12px;color:#777;font-family:Arial,sans-serif;\\\">\\n  This message was generated automatically by \\n  <a href=\\\"https://realsimple.dev\\\" style=\\\"color:#777;text-decoration:none;\\\"><b>Real Simple Solutions</b></a>.\\n</p>\\n<div style=\\\"background:#f0f4ff;padding:8px 12px;margin-top:6px;border-radius:6px;font-size:12px;font-family:Arial,sans-serif;\\\">\\n  ✨ <strong>Want more n8n AI automation templates?</strong><br>\\n  Check out our full collection on \\n  <a href=\\\"https://joeper.es/4jXyRub\\\" style=\\\"color:#0066cc;text-decoration:none;\\\"><b>Gumroad</b></a>.\\n</div>\\n  </div>\\n`;\\n\\n// 4. Return all three\\nreturn [\\n  {\\n    json: {\\n      subject: `🚨 n8n Error: ${errorArray[0].error.workflowName} (#${errorArray[0].error.executionId})`,\\n      html\\n    },\\n  },\\n];\\n\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"be484a20-26cd-4df4-a993-f7d01c2956e6\",\n  \"connections\": {\n    \"SET EMAIL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Failed Exec\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SET EMAIL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Gmail\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Failed Exec\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove Manual Exec\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Error Solver Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error Solver Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Diagnosis Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove Manual Exec\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Error Details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Diagnosis Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Error Details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Error Solver Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Error Solver Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}