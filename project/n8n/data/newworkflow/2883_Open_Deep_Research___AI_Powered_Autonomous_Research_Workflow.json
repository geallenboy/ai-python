{
  "url": "https://n8n.io/workflows/2883-open-deep-research-ai-powered-autonomous-research-workflow/",
  "title": "Open Deep Research - AI-Powered Autonomous Research Workflow",
  "author": "Leonard",
  "publish_date": "Last update 3 months ago",
  "publish_date_absolute": "2025-02-26",
  "categories": [
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"WLSqXECfQF7rOj2A\",\"meta\":{\"instanceId\":\"cba4a4a2eb5d7683330e2944837278938831ed3c042e20da6f5049c07ad14798\"},\"name\":\"Open Deep Research - AI-Powered Autonomous Research Workflow\",\"tags\":[],\"nodes\":[{\"id\":\"b7b70ba1-0267-4d2b-91f4-5cc4fd22fd03\",\"name\":\"Chat Message Trigger\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-1940,160],\"webhookId\":\"cb0b9dbe-1f35-441a-b062-29624b0ebc6a\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"55a8a512-f2d4-4aed-93e5-dd9bfa2dcaad\",\"name\":\"Generate Search Queries using LLM\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[-1760,160],\"parameters\":{\"text\":\"=User Query: {{ $('Chat Message Trigger').item.json.chatInput }}\",\"messages\":{\"messageValues\":[{\"message\":\"=You are an expert research assistant. Given a user's query, generate up to four distinct, precise search queries that would help gather comprehensive information on the topic. Return only a JSON list of strings, for example: ['query1', 'query2', 'query3'].\"}]},\"promptType\":\"define\"},\"typeVersion\":1.5},{\"id\":\"5f92361a-b490-479d-8360-c87a100b470e\",\"name\":\"LLM Response Provider (OpenRouter)\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\"position\":[-1760,700],\"parameters\":{\"model\":\"google/gemini-2.0-flash-001\",\"options\":{}},\"credentials\":{\"openRouterApi\":{\"id\":\"WZWYWCfluxuKxZzV\",\"name\":\"OpenRouter account\"}},\"typeVersion\":1},{\"id\":\"4ab360eb-858f-48b8-a00d-71867d4f0c93\",\"name\":\"Parse and Chunk JSON Data\",\"type\":\"n8n-nodes-base.code\",\"position\":[-1420,160],\"parameters\":{\"jsCode\":\"// Parse the input JSON string and split it into four chunks\\nconst rawText = $json.text;\\n\\n// Remove Markdown JSON code blocks if present\\nconst cleanedText = rawText.replace(/```json|```/g, '').trim();\\n\\ntry {\\n    const jsonArray = JSON.parse(cleanedText);\\n    if (!Array.isArray(jsonArray)) {\\n        throw new Error('The JSON is not an array.');\\n    }\\n    const chunkSize = Math.ceil(jsonArray.length / 4);\\n    const chunks = [];\\n    for (let i = 0; i < jsonArray.length; i += chunkSize) {\\n        chunks.push(jsonArray.slice(i, i + chunkSize));\\n    }\\n    return chunks.map(chunk => ({ json: { chunk } }));\\n} catch (error) {\\n    return [{ json: { error: error.message } }];\\n}\\n\"},\"typeVersion\":2},{\"id\":\"5a3ac393-8355-449f-93cb-b98e8bee9b80\",\"name\":\"Perform SerpAPI Search Request\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-780,180],\"parameters\":{\"url\":\"https://serpapi.com/search\",\"options\":{},\"sendQuery\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"q\",\"value\":\"={{ $('Parse and Chunk JSON Data').item.json.chunk }}\"},{\"name\":\"api_key\",\"value\":\"={{ $credentials.SerpAPI.key }}\"},{\"name\":\"engine\",\"value\":\"google\"}]}},\"typeVersion\":4.2},{\"id\":\"dad82469-830d-40fb-9f6b-b9fefef41267\",\"name\":\"Perform Jina AI Analysis Request\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[80,160],\"parameters\":{\"url\":\"=https://r.jina.ai/{{ $json.url }}\",\"options\":{},\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"iseKF5sPsvwtJhgT\",\"name\":\"Jina AI\"}},\"typeVersion\":4.2},{\"id\":\"e21bbdf6-a903-491e-920c-ef7576f9ce80\",\"name\":\"Format SerpAPI Organic Results\",\"type\":\"n8n-nodes-base.code\",\"position\":[-460,140],\"parameters\":{\"jsCode\":\"// Format the organic search results from SerpAPI\\nconst results = $input.first().json.organic_results;\\nif (results.length === 0) {\\n  return [{ json: { error: 'No search results found.' } }];\\n}\\nconst formattedResults = results.map(result => ({\\n  title: result.title || 'No title available',\\n  url: result.link || 'No link available',\\n  source: result.source || result.displayed_link || 'Unknown source'\\n}));\\nreturn formattedResults.map(result => ({ json: result }));\\n\"},\"typeVersion\":2},{\"id\":\"a856c8e8-5c3c-4a2f-9086-66deee1afd06\",\"name\":\"Extract Relevant Context via LLM\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-1280,520],\"parameters\":{\"text\":\"=User Queries: {{ $('Parse and Chunk JSON Data').all().map(item => item.json.chunk[0]).join(', ') }}\\nWebpage Contents: \\n\\\"\\\"\\\"\\n{{ $json.data }}\\n\\\"\\\"\\\"\",\"options\":{\"systemMessage\":\"=You are an expert information extractor. Given the user's query, the search query that led to this page, and the webpage content, extract all relevant pieces of information that are useful to answer the query. Return only the relevant context as plain text without any additional commentary.\"},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"6d5c6698-0b4f-438c-91b9-3597f5d3e904\",\"name\":\"Generate Comprehensive Research Report\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-740,520],\"parameters\":{\"text\":\"=Extracted Contexts (Merged):\\n\\\"\\\"\\\"\\n{{ $json.output }}\\n\\\"\\\"\\\"\",\"options\":{\"systemMessage\":\"You are an expert researcher and report writer. Based on the gathered contexts and the original user query, generate a comprehensive, well-structured report. Include all relevant insights and conclusions without unnecessary commentary.\\n\\nFormat the report in Markdown with clear headings. For example:\\n\\n# Research Report: [User Query]\\n\\n## Key Findings\\n- Point 1\\n- Point 2\\n\\n## Detailed Analysis\\n### Aspect 1\\nSummary of findings.\\n_Source:_ [Source Name](URL)\\n\\n### Aspect 2\\nSummary of findings.\\n_Source:_ [Another Source](URL)\\n\\nNow, generate the complete report.\"},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"05fea6a1-791e-4980-8f2a-2960455066d7\",\"name\":\"Split Data for SerpAPI Batching\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[-1100,160],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"df00e7e8-99b8-484a-8047-869474fefee9\",\"name\":\"Split Data for Jina AI Batching\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[-220,140],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"2edc683b-65f7-40c3-a22d-7fbf5b67de0a\",\"name\":\"LLM Memory Buffer (Input Context)\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[-1160,740],\"parameters\":{\"sessionKey\":\"my_test_session\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":20},\"typeVersion\":1.3},{\"id\":\"23017ae7-72a7-45c7-8edf-d0ba72220675\",\"name\":\"LLM Memory Buffer (Report Context)\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[-620,760],\"parameters\":{\"sessionKey\":\"my_test_session\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":20},\"typeVersion\":1.3},{\"id\":\"6bc9533b-e265-47b3-b93a-3a4f86ba0541\",\"name\":\"Fetch Wikipedia Information\",\"type\":\"@n8n/n8n-nodes-langchain.toolWikipedia\",\"position\":[-580,920],\"parameters\":{},\"typeVersion\":1},{\"id\":\"b25c148e-047d-40a7-8818-94c3504828dd\",\"name\":\"Sticky Note: SerpAPI Setup\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-940,-20],\"parameters\":{\"color\":7,\"width\":420,\"height\":140,\"content\":\"## SerpAPI Setup Instructions\\n1. Obtain your API key from https://serpapi.com/manage-api-key.\\n2. Save your API key securely in n8n credentials (do not use plain text).\"},\"typeVersion\":1},{\"id\":\"e69c9a85-31e4-42b9-a09a-683ec5bb97d1\",\"name\":\"Sticky Note: Jina AI Setup\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-60,-40],\"parameters\":{\"color\":7,\"width\":420,\"height\":140,\"content\":\"## Jina AI Setup Instructions\\n1. Obtain your API key from https://jina.ai/api-dashboard/key-manager.\\n2. Configure your Jina AI credential in n8n to ensure secure API access.\"},\"typeVersion\":1},{\"id\":\"dbd204e0-da8e-41d8-814b-f409a23e9573\",\"name\":\"Sticky Note: OpenRouter API Setup\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1680,460],\"parameters\":{\"color\":7,\"width\":300,\"height\":180,\"content\":\"## OpenRouter API Setup Instructions\\n1. Obtain your API key from https://openrouter.ai/settings/keys.\\n2. Set up your OpenRouter credential in n8n for secure integration.\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"aa857bb3-84c1-4fe6-9464-90fc09163960\",\"connections\":{\"Chat Message Trigger\":{\"main\":[[{\"node\":\"Generate Search Queries using LLM\",\"type\":\"main\",\"index\":0}]]},\"Parse and Chunk JSON Data\":{\"main\":[[{\"node\":\"Split Data for SerpAPI Batching\",\"type\":\"main\",\"index\":0}]]},\"Fetch Wikipedia Information\":{\"ai_tool\":[[{\"node\":\"Generate Comprehensive Research Report\",\"type\":\"ai_tool\",\"index\":0}]]},\"Format SerpAPI Organic Results\":{\"main\":[[{\"node\":\"Split Data for Jina AI Batching\",\"type\":\"main\",\"index\":0}]]},\"Perform SerpAPI Search Request\":{\"main\":[[{\"node\":\"Split Data for SerpAPI Batching\",\"type\":\"main\",\"index\":0}]]},\"Split Data for Jina AI Batching\":{\"main\":[[{\"node\":\"Extract Relevant Context via LLM\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Perform Jina AI Analysis Request\",\"type\":\"main\",\"index\":0}]]},\"Split Data for SerpAPI Batching\":{\"main\":[[{\"node\":\"Format SerpAPI Organic Results\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Perform SerpAPI Search Request\",\"type\":\"main\",\"index\":0}]]},\"Extract Relevant Context via LLM\":{\"main\":[[{\"node\":\"Generate Comprehensive Research Report\",\"type\":\"main\",\"index\":0}]]},\"Perform Jina AI Analysis Request\":{\"main\":[[{\"node\":\"Split Data for Jina AI Batching\",\"type\":\"main\",\"index\":0}]]},\"Generate Search Queries using LLM\":{\"main\":[[{\"node\":\"Parse and Chunk JSON Data\",\"type\":\"main\",\"index\":0}]]},\"LLM Memory Buffer (Input Context)\":{\"ai_memory\":[[{\"node\":\"Extract Relevant Context via LLM\",\"type\":\"ai_memory\",\"index\":0}]]},\"LLM Memory Buffer (Report Context)\":{\"ai_memory\":[[{\"node\":\"Generate Comprehensive Research Report\",\"type\":\"ai_memory\",\"index\":0}]]},\"LLM Response Provider (OpenRouter)\":{\"ai_languageModel\":[[{\"node\":\"Generate Search Queries using LLM\",\"type\":\"ai_languageModel\",\"index\":0},{\"node\":\"Extract Relevant Context via LLM\",\"type\":\"ai_languageModel\",\"index\":0},{\"node\":\"Generate Comprehensive Research Report\",\"type\":\"ai_languageModel\",\"index\":0}]]}}}",
  "readme": "# **Open Deep Research - AI-Powered Autonomous Research Workflow**\n\n### **Description**\n\nThis workflow automates deep research by leveraging **AI-driven search queries, web scraping, content analysis, and structured reporting**. It enables autonomous research with **iterative refinement** , allowing users to collect, analyze, and summarize high-quality information efficiently.\n\n### **How it works**\n\n  1. **🔹 User Input**\n\n     * The user submits a research topic via a chat message.\n  2. **🧠 AI Query Generation**\n\n     * A Basic LLM generates **up to four refined search queries** to retrieve relevant information.\n  3. **🔎 SERPAPI Google Search**\n\n     * The workflow loops through each generated query and retrieves **top search results** using the **SerpAPI API**.\n  4. **📄 Jina AI Web Scraping**\n\n     * Extracts and summarizes webpage content from the URLs obtained via SerpAPI.\n  5. **📊 AI-Powered Content Evaluation**\n\n     * An **AI Agent** evaluates the **relevance** and **credibility** of the extracted content.\n  6. **🔁 Iterative Search Refinement**\n\n     * If the AI finds **insufficient** or **low-quality information** , it generates **new search queries** to improve results.\n  7. **📜 Final Report Generation**\n\n     * The AI compiles a **structured markdown report** , including **sources with citations**.\n\n\n\n### **Set Up Instructions**\n\n🚀 **Estimated setup time** : ~10-15 minutes\n\n  * **✅ Required API Keys:**\n\n    * [SerpAPI](https://serpapi.com/) → For Google Search results\n    * [Jina AI](https://jina.ai/) → For text extraction\n    * [OpenRouter](https://openrouter.ai/) → For AI-driven query generation and summarization\n  * **⚙️ n8n Components Used:**\n\n    * AI Agents with **memory buffering** for iterative research\n    * **Loops** to process multiple search queries efficiently\n    * **HTTP Requests** for direct API interactions with **SerpAPI** and **Jina AI**\n  * **📝 Recommended Enhancements:**\n\n    * Add **sticky notes** in n8n to explain each step for new users\n    * Implement **Google Drive or Notion Integration** to save reports automatically\n\n\n\n* * *\n\n🎯 **Ideal for:**  \n✔️ **Researchers & Analysts** \\- Automate background research  \n✔️ **Journalists** \\- Quickly gather reliable sources  \n✔️ **Developers** \\- Learn how to integrate multiple AI APIs into n8n  \n✔️ **Students** \\- Speed up literature reviews\n\n🔗 **Completely free and open-source!** 🚀\n",
  "crawled_at": "2025-05-26T02:16:43.539242",
  "readme_zh": "# **开放式深度研究——AI驱动的自主研究流程**\n\n### **项目描述**\n\n本工作流通过**AI驱动的搜索查询、网页抓取、内容分析与结构化报告**实现深度研究自动化。支持**迭代优化**的自主研究，帮助用户高效收集、分析并汇总高质量信息。\n\n### **运作原理**\n\n  1. **🔹 用户输入**\n\n     * 用户通过聊天消息提交研究主题\n  2. **🧠 AI查询生成**\n\n     * 基础大语言模型生成**最多四个优化搜索查询**以获取相关信息\n  3. **🔎 SERPAPI谷歌搜索**\n\n     * 工作流循环处理每个生成查询，通过**SerpAPI接口**获取**顶级搜索结果**\n  4. **📄 Jina AI网页抓取**\n\n     * 从SerpAPI获取的URL中提取并摘要网页内容\n  5. **📊 AI内容评估**\n\n     * **AI代理**评估提取内容的**相关性**与**可信度**\n  6. **🔁 迭代搜索优化**\n\n     * 当AI发现**信息不足**或**质量低下**时，自动生成**新搜索查询**改进结果\n  7. **📜 最终报告生成**\n\n     * AI整理**结构化Markdown报告**，包含**来源引用**",
  "title_zh": "开启深度研究——AI驱动的自主研究流程",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"id\": \"WLSqXECfQF7rOj2A\",\n  \"meta\": {\n    \"instanceId\": \"cba4a4a2eb5d7683330e2944837278938831ed3c042e20da6f5049c07ad14798\"\n  },\n  \"name\": \"Open Deep Research - AI-Powered Autonomous Research Workflow\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b7b70ba1-0267-4d2b-91f4-5cc4fd22fd03\",\n      \"name\": \"Chat Message Trigger\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -1940,\n        160\n      ],\n      \"webhookId\": \"cb0b9dbe-1f35-441a-b062-29624b0ebc6a\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"55a8a512-f2d4-4aed-93e5-dd9bfa2dcaad\",\n      \"name\": \"Generate Search Queries using LLM\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        -1760,\n        160\n      ],\n      \"parameters\": {\n        \"text\": \"=User Query: {{ $('Chat Message Trigger').item.json.chatInput }}\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"=You are an expert research assistant. Given a user's query, generate up to four distinct, precise search queries that would help gather comprehensive information on the topic. Return only a JSON list of strings, for example: ['query1', 'query2', 'query3'].\"\n            }\n          ]\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"5f92361a-b490-479d-8360-c87a100b470e\",\n      \"name\": \"LLM Response Provider (OpenRouter)\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\n      \"position\": [\n        -1760,\n        700\n      ],\n      \"parameters\": {\n        \"model\": \"google/gemini-2.0-flash-001\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openRouterApi\": {\n          \"id\": \"WZWYWCfluxuKxZzV\",\n          \"name\": \"OpenRouter account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4ab360eb-858f-48b8-a00d-71867d4f0c93\",\n      \"name\": \"Parse and Chunk JSON Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1420,\n        160\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Parse the input JSON string and split it into four chunks\\nconst rawText = $json.text;\\n\\n// Remove Markdown JSON code blocks if present\\nconst cleanedText = rawText.replace(/```json|```/g, '').trim();\\n\\ntry {\\n    const jsonArray = JSON.parse(cleanedText);\\n    if (!Array.isArray(jsonArray)) {\\n        throw new Error('The JSON is not an array.');\\n    }\\n    const chunkSize = Math.ceil(jsonArray.length / 4);\\n    const chunks = [];\\n    for (let i = 0; i < jsonArray.length; i += chunkSize) {\\n        chunks.push(jsonArray.slice(i, i + chunkSize));\\n    }\\n    return chunks.map(chunk => ({ json: { chunk } }));\\n} catch (error) {\\n    return [{ json: { error: error.message } }];\\n}\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5a3ac393-8355-449f-93cb-b98e8bee9b80\",\n      \"name\": \"Perform SerpAPI Search Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -780,\n        180\n      ],\n      \"parameters\": {\n        \"url\": \"https://serpapi.com/search\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"q\",\n              \"value\": \"={{ $('Parse and Chunk JSON Data').item.json.chunk }}\"\n            },\n            {\n              \"name\": \"api_key\",\n              \"value\": \"={{ $credentials.SerpAPI.key }}\"\n            },\n            {\n              \"name\": \"engine\",\n              \"value\": \"google\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"dad82469-830d-40fb-9f6b-b9fefef41267\",\n      \"name\": \"Perform Jina AI Analysis Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        80,\n        160\n      ],\n      \"parameters\": {\n        \"url\": \"=https://r.jina.ai/{{ $json.url }}\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"iseKF5sPsvwtJhgT\",\n          \"name\": \"Jina AI\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e21bbdf6-a903-491e-920c-ef7576f9ce80\",\n      \"name\": \"Format SerpAPI Organic Results\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -460,\n        140\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Format the organic search results from SerpAPI\\nconst results = $input.first().json.organic_results;\\nif (results.length === 0) {\\n  return [{ json: { error: 'No search results found.' } }];\\n}\\nconst formattedResults = results.map(result => ({\\n  title: result.title || 'No title available',\\n  url: result.link || 'No link available',\\n  source: result.source || result.displayed_link || 'Unknown source'\\n}));\\nreturn formattedResults.map(result => ({ json: result }));\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a856c8e8-5c3c-4a2f-9086-66deee1afd06\",\n      \"name\": \"Extract Relevant Context via LLM\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        -1280,\n        520\n      ],\n      \"parameters\": {\n        \"text\": \"=User Queries: {{ $('Parse and Chunk JSON Data').all().map(item => item.json.chunk[0]).join(', ') }}\\nWebpage Contents: \\n\\\"\\\"\\\"\\n{{ $json.data }}\\n\\\"\\\"\\\"\",\n        \"options\": {\n          \"systemMessage\": \"=You are an expert information extractor. Given the user's query, the search query that led to this page, and the webpage content, extract all relevant pieces of information that are useful to answer the query. Return only the relevant context as plain text without any additional commentary.\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"6d5c6698-0b4f-438c-91b9-3597f5d3e904\",\n      \"name\": \"Generate Comprehensive Research Report\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        -740,\n        520\n      ],\n      \"parameters\": {\n        \"text\": \"=Extracted Contexts (Merged):\\n\\\"\\\"\\\"\\n{{ $json.output }}\\n\\\"\\\"\\\"\",\n        \"options\": {\n          \"systemMessage\": \"You are an expert researcher and report writer. Based on the gathered contexts and the original user query, generate a comprehensive, well-structured report. Include all relevant insights and conclusions without unnecessary commentary.\\n\\nFormat the report in Markdown with clear headings. For example:\\n\\n# Research Report: [User Query]\\n\\n## Key Findings\\n- Point 1\\n- Point 2\\n\\n## Detailed Analysis\\n### Aspect 1\\nSummary of findings.\\n_Source:_ [Source Name](URL)\\n\\n### Aspect 2\\nSummary of findings.\\n_Source:_ [Another Source](URL)\\n\\nNow, generate the complete report.\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"05fea6a1-791e-4980-8f2a-2960455066d7\",\n      \"name\": \"Split Data for SerpAPI Batching\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1100,\n        160\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"df00e7e8-99b8-484a-8047-869474fefee9\",\n      \"name\": \"Split Data for Jina AI Batching\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -220,\n        140\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"2edc683b-65f7-40c3-a22d-7fbf5b67de0a\",\n      \"name\": \"LLM Memory Buffer (Input Context)\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        -1160,\n        740\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"my_test_session\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 20\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"23017ae7-72a7-45c7-8edf-d0ba72220675\",\n      \"name\": \"LLM Memory Buffer (Report Context)\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        -620,\n        760\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"my_test_session\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 20\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"6bc9533b-e265-47b3-b93a-3a4f86ba0541\",\n      \"name\": \"Fetch Wikipedia Information\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\",\n      \"position\": [\n        -580,\n        920\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b25c148e-047d-40a7-8818-94c3504828dd\",\n      \"name\": \"Sticky Note: SerpAPI Setup\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -940,\n        -20\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 420,\n        \"height\": 140,\n        \"content\": \"## SerpAPI 设置指南\\n1. 访问 https://serpapi.com/manage-api-key 获取您的API密钥\\n2. 将API密钥安全保存至n8n凭证系统（请勿使用明文存储）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e69c9a85-31e4-42b9-a09a-683ec5bb97d1\",\n      \"name\": \"Sticky Note: Jina AI Setup\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -60,\n        -40\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 420,\n        \"height\": 140,\n        \"content\": \"## Jina AI 设置指南\\n1. 访问 https://jina.ai/api-dashboard/key-manager 获取您的API密钥\\n2. 在n8n平台配置Jina AI凭证以确保安全的API访问\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dbd204e0-da8e-41d8-814b-f409a23e9573\",\n      \"name\": \"Sticky Note: OpenRouter API Setup\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1680,\n        460\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 300,\n        \"height\": 180,\n        \"content\": \"## OpenRouter API Setup Instructions\\n1. Obtain your API key from https://openrouter.ai/settings/keys.\\n2. Set up your OpenRouter credential in n8n for secure integration.\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"aa857bb3-84c1-4fe6-9464-90fc09163960\",\n  \"connections\": {\n    \"Chat Message Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Search Queries using LLM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse and Chunk JSON Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Data for SerpAPI Batching\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fetch Wikipedia Information\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Generate Comprehensive Research Report\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format SerpAPI Organic Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Data for Jina AI Batching\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Perform SerpAPI Search Request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Data for SerpAPI Batching\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Data for Jina AI Batching\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Relevant Context via LLM\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Perform Jina AI Analysis Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Data for SerpAPI Batching\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format SerpAPI Organic Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Perform SerpAPI Search Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Relevant Context via LLM\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Comprehensive Research Report\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Perform Jina AI Analysis Request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Data for Jina AI Batching\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Search Queries using LLM\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse and Chunk JSON Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"LLM Memory Buffer (Input Context)\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Extract Relevant Context via LLM\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"LLM Memory Buffer (Report Context)\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Generate Comprehensive Research Report\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"LLM Response Provider (OpenRouter)\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Generate Search Queries using LLM\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Extract Relevant Context via LLM\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Generate Comprehensive Research Report\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}