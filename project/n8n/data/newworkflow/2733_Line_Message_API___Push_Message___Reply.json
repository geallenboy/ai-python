{
  "url": "https://n8n.io/workflows/2733-line-message-api-push-message-and-reply/",
  "title": "Line Message API : Push Message & Reply",
  "author": "darrell_tw",
  "publish_date": "Last update 4 months ago",
  "publish_date_absolute": "2025-01-26",
  "categories": [
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "{\"id\":\"a5tCsfMzJPd8WDUj\",\"meta\":{\"instanceId\":\"fddb3e91967f1012c95dd02bf5ad21f279fc44715f47a7a96a33433621caa253\",\"templateCredsSetupCompleted\":true},\"name\":\"line message api demo\",\"tags\":[],\"nodes\":[{\"id\":\"2bc1cc31-136c-46a4-a789-476e33c76f3d\",\"name\":\"Line : Reply with token\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-540,-460],\"parameters\":{\"url\":\"https://api.line.me/v2/bot/message/reply\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"replyToken\\\": \\\"{{ $('Webhook from Line Message').item.json.body.events[0].replyToken }}\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"text\\\": \\\"收到您的訊息 : {{ $('Webhook from Line Message').item.json.body.events[0].message.text }}\\\"\\n    }\\n  ]\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"xB2Ip7YKSIDq7BoI\",\"name\":\"Line n8n demo auth\"}},\"typeVersion\":4.2},{\"id\":\"a1d9c986-4712-4d40-955d-40d1b19d74db\",\"name\":\"Webhook from Line Message\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-1020,-440],\"webhookId\":\"638c118e-1c98-4491-b6ff-14e2e75380b6\",\"parameters\":{\"path\":\"638c118e-1c98-4491-b6ff-14e2e75380b6\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":2},{\"id\":\"a0c94852-290f-48b9-8e11-b498ada90c8f\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1100,-620],\"parameters\":{\"width\":720,\"height\":340,\"content\":\"## Line Message API Reply\\n\\nReceived Message from user and reply with same text by using reply token  \\n\\nThere are many event types. So we need to determine if the type is message.\"},\"typeVersion\":1},{\"id\":\"278aff13-c081-47f0-a1f6-67920642e991\",\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[-800,-440],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"b63773bb-f010-4018-8142-240c9aaa4570\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.body.events[0].type }}\",\"rightValue\":\"message\"}]}},\"typeVersion\":2.2},{\"id\":\"cff2f1d3-b7a4-4940-a1d1-1e5a80d6ea28\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1100,-200],\"parameters\":{\"width\":720,\"height\":340,\"content\":\"## Line Message API Send Message\\n\\nYou need to get the Line UID first.\\nEvery user is differnt.\\n\\nIf you have the Line UID. Then you can push the message to the User.\"},\"typeVersion\":1},{\"id\":\"9348fc83-0aeb-4591-85b6-48f556512478\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-1020,-20],\"parameters\":{},\"typeVersion\":1},{\"id\":\"74db3e1b-9a22-4033-bf04-a8ff485a5d3b\",\"name\":\"Edit Fields\",\"type\":\"n8n-nodes-base.set\",\"position\":[-800,-20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"6278f340-6287-4e89-b774-f6c584954d5b\",\"name\":\"line_uid\",\"type\":\"string\",\"value\":\"Uxxxxxxxxxxxx\"}]}},\"typeVersion\":3.4},{\"id\":\"c593bd58-8f6a-4689-bb12-e71256ccf6e6\",\"name\":\"Line : Push Message\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-560,-20],\"parameters\":{\"url\":\"https://api.line.me/v2/bot/message/push\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"to\\\": \\\"{{ $json.line_uid }}\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"text\\\": \\\"推播測試\\\"\\n    }\\n  ]\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"xB2Ip7YKSIDq7BoI\",\"name\":\"Line n8n demo auth\"}},\"typeVersion\":4.2}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"240dc848-8803-4776-b01d-5f10c765f72b\",\"connections\":{\"If\":{\"main\":[[{\"node\":\"Line : Reply with token\",\"type\":\"main\",\"index\":0}]]},\"Edit Fields\":{\"main\":[[{\"node\":\"Line : Push Message\",\"type\":\"main\",\"index\":0}]]},\"Webhook from Line Message\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Edit Fields\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# Workflow Description\n\nThis workflow demonstrates how to use the **LINE Messaging API** to handle two scenarios:\n\n  1. Replying to a user's message using a **reply token**.\n  2. Sending a **push message** to a specific LINE user using their **user ID**.\n\n\n\n* * *\n\n## Key Features\n\n  1. **Webhook Integration** : Receives and processes incoming messages from LINE using a webhook.\n  2. **Conditional Logic** : Checks if the received event type is a message and handles it accordingly.\n  3. **Reply Message** : Automatically responds to the user's message using the LINE reply token.\n  4. **Push Message** : Sends a test message to a specific LINE user using their unique user ID.\n\n\n\n* * *\n\n## Pre-Configuration\n\nTo simplify the setup process, create a **Header Auth** credential in n8n:\n\n  * **Name** : `Authorization`\n  * **Value** : `Bearer {line token}`  \nThis will authenticate all API requests to the LINE Messaging API.\n\n\n\n* * *\n\n## Node Configurations\n\n### 1.1. Webhook from LINE Message\n\n  * **Purpose** : Captures incoming events from the LINE Messaging API.\n  * **Configuration** : \n    * **HTTP Method** : `POST`\n    * **Path** : `{n8n-webhook-page}`\n\n\n\n* * *\n\n### 1.2. If Condition\n\n  * **Purpose** : Checks if the received event type is `message`.\n  * **Configuration** : \n    * **Condition** : \n      * `{{ $json.body.events[0].type }} equals \"message\"`\n\n\n\n* * *\n\n### 1.3. Line: Reply with Token\n\n  * **Purpose** : Replies to the user's message using the LINE reply token.\n  * **Configuration** : \n    * **Method** : `POST`\n    * **URL** : `https://api.line.me/v2/bot/message/reply`\n    * **JSON Body** :\n          \n          {\n            \"replyToken\": \"{{ $('Webhook from Line Message').item.json.body.events[0].replyToken }}\",\n            \"messages\": [\n              {\n                \"type\": \"text\",\n                \"text\": \"收到您的訊息 : {{ $('Webhook from Line Message').item.json.body.events[0].message.text }}\"\n              }\n            ]\n          }\n          \n\n\n\n\n* * *\n\n### 2.1. Manual Trigger: Test Workflow\n\n  * **Purpose** : Triggers the workflow for testing the push message functionality.\n  * **Configuration** : No additional setup required.\n\n\n\n* * *\n\n### 2.2. Edit Fields\n\n  * **Purpose** : Prepares the unique LINE user ID for the push message.\n  * **Configuration** : \n    * **Field** : \n      * `line_uid`: `Uxxxxxxxxxxxx`\n\n\n\n* * *\n\n### 2.3. Line: Push Message\n\n  * **Purpose** : Sends a test message to a specific LINE user.\n  * **Configuration** : \n    * **Method** : `POST`\n    * **URL** : `https://api.line.me/v2/bot/message/push`\n    * **JSON Body** :\n          \n          {\n            \"to\": \"{{ $json.line_uid }}\",\n            \"messages\": [\n              {\n                \"type\": \"text\",\n                \"text\": \"推播測試\"\n              }\n            ]\n          }\n          \n\n\n\n\n* * *\n\n# 工作流程描述\n\n此工作流程展示如何使用 **LINE Messaging API** 處理兩種情境：\n\n  1. 使用 **reply token** 回應使用者的訊息。\n  2. 使用使用者的 **user ID** 發送 **推播訊息** 。\n\n\n\n* * *\n\n## 主要功能\n\n  1. **Webhook 整合** ：透過 Webhook 接收並處理來自 LINE 的訊息。\n  2. **條件邏輯** ：檢查接收到的事件類型是否為訊息並進行處理。\n  3. **回應訊息** ：使用 LINE 的 reply token 自動回覆使用者的訊息。\n  4. **推播訊息** ：使用 LINE User ID 向指定用戶發送測試訊息。\n\n\n\n* * *\n\n## 預先設定\n\n為簡化設定流程，請在 n8n 中建立 **Header Auth** 憑證：\n\n  * **名稱** ：`Authorization`\n  * **值** ：`Bearer {line token}`  \n此設定將用於認證所有 LINE Messaging API 的請求。\n\n\n\n* * *\n\n## 節點設定\n\n### 1.1. Webhook from LINE Message\n\n  * **用途** ：接收來自 LINE Messaging API 的事件。\n  * **設定** ： \n    * **HTTP 方法** ：`POST`\n    * **路徑** ：`{n8n-webhook-page}`\n\n\n\n* * *\n\n### 1.2. If 條件判斷\n\n  * **用途** ：檢查接收到的事件類型是否為 `message`。\n  * **設定** ： \n    * **條件** ： \n      * `{{ $json.body.events[0].type }} 等於 \"message\"`\n\n\n\n* * *\n\n### 1.3. Line: Reply with Token\n\n  * **用途** ：使用 LINE reply token 回應使用者訊息。\n  * **設定** ： \n    * **方法** ：`POST`\n    * **URL** ：`https://api.line.me/v2/bot/message/reply`\n    * **JSON 主體** ：\n          \n          {\n            \"replyToken\": \"{{ $('Webhook from Line Message').item.json.body.events[0].replyToken }}\",\n            \"messages\": [\n              {\n                \"type\": \"text\",\n                \"text\": \"收到您的訊息 : {{ $('Webhook from Line Message').item.json.body.events[0].message.text }}\"\n              }\n            ]\n          }\n          \n\n\n\n\n* * *\n\n### 2.1. 手動觸發：測試工作流程\n\n  * **用途** ：測試推播訊息功能。\n  * **設定** ：無需額外設定。\n\n\n\n* * *\n\n### 2.2. Edit Fields\n\n  * **用途** ：準備推播訊息所需的 LINE 使用者 ID。\n  * **設定** ： \n    * **欄位** ： \n      * `line_uid`：`Uxxxxxxxxxxxx`\n\n\n\n* * *\n\n### 2.3. Line: 推播訊息\n\n  * **用途** ：向特定 LINE 使用者發送測試訊息。\n  * **設定** ： \n    * **方法** ：`POST`\n    * **URL** ：`https://api.line.me/v2/bot/message/push`\n    * **JSON 主體** ：\n          \n          {\n            \"to\": \"{{ $json.line_uid }}\",\n            \"messages\": [\n              {\n                \"type\": \"text\",\n                \"text\": \"推播測試\"\n              }\n            ]\n          }\n          \n\n\n\n\n完成示意圖 (Storyboard Example):  \n![Line_n8n_demo.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_ef8a868a74.png)\n",
  "crawled_at": "2025-05-26T01:50:20.743556",
  "readme_zh": "# 工作流程说明\n\n本工作流程演示如何运用**LINE Messaging API**处理两种场景：\n\n1. 使用**回复令牌**回应用户消息\n2. 通过**用户ID**向特定LINE用户发送**推送消息**\n\n---\n\n## 核心功能\n\n1. **Webhook集成**：通过webhook接收并处理来自LINE的即时消息\n2. **条件判断**：自动识别消息事件类型并进行相应处理\n3. **消息回复**：利用LINE回复令牌实现自动应答\n4. **消息推送**：根据用户ID定向发送测试消息\n\n---\n\n## 前置配置\n\n为简化设置流程，请在n8n中创建**Header Auth**认证凭证：\n\n* **参数名**：`Authorization`\n* **参数值**：`Bearer {line token}`  \n该凭证将用于所有LINE Messaging API请求的身份验证\n\n---\n\n## 节点配置说明\n\n### 1.1. LINE消息Webhook\n\n* **功能**：实时捕获LINE平台推送的事件\n* **参数设置**：\n  * **HTTP方法**：`POST`\n  * **访问路径**：`{n8n-webhook-page}`\n\n---\n\n### 1.2. 条件判断节点\n\n* **功能**：校验事件类型是否为消息事件\n* **判断条件**：\n  * `{{ $json.body.events[0].type }} 等于 \"message\"`\n\n---\n\n### 1.3. LINE令牌回复\n\n* **功能**：实现消息自动回复\n* **接口配置**：\n  * **请求方式**：`POST`\n  * **API地址**：`https://api.line.me/v2/bot/message/reply`\n  * **请求体**：\n    ```json\n    {\n      \"replyToken\": \"{{ $('Webhook from Line Message').item.json.body.events[0].replyToken }}\",\n      \"messages\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"已收到您的消息：{{ $('Webhook from Line Message').item.json.body.events[0].message.text }}\"\n        }\n      ]\n    }\n    ```\n\n---\n\n### 2.1. 手动触发器\n\n* **功能**：用于测试推送消息功能\n* **说明**：无需额外配置\n\n---\n\n### 2.2. 字段编辑器\n\n* **功能**：配置目标用户ID\n* **参数设置**：\n  * **新增字段**：\n    * `line_uid`：`Uxxxxxxxxxxxx`\n\n---\n\n### 2.3. LINE消息推送\n\n* **功能**：向指定用户发送消息\n* **接口配置**：\n  * **请求方式**：`POST`\n  * **API地址**：`https://api.line.me/v2/bot/message/push`\n  * **请求体**：\n    ```json\n    {\n      \"to\": \"{{ $json.line_uid }}\",\n      \"messages\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"推送功能测试\"\n        }\n      ]\n    }\n    ```\n\n---\n\n流程示意图：  \n![Line_n8n_demo.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_ef8a868a74.png)",
  "title_zh": "Line消息API：推送消息与回复",
  "publish_date_zh": "最后更新于4个月前",
  "workflow_json_zh": "{\n  \"id\": \"a5tCsfMzJPd8WDUj\",\n  \"meta\": {\n    \"instanceId\": \"fddb3e91967f1012c95dd02bf5ad21f279fc44715f47a7a96a33433621caa253\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"line message api demo\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"2bc1cc31-136c-46a4-a789-476e33c76f3d\",\n      \"name\": \"Line : Reply with token\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -540,\n        -460\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.line.me/v2/bot/message/reply\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"replyToken\\\": \\\"{{ $('Webhook from Line Message').item.json.body.events[0].replyToken }}\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"text\\\": \\\"收到您的訊息 : {{ $('Webhook from Line Message').item.json.body.events[0].message.text }}\\\"\\n    }\\n  ]\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"xB2Ip7YKSIDq7BoI\",\n          \"name\": \"Line n8n demo auth\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"a1d9c986-4712-4d40-955d-40d1b19d74db\",\n      \"name\": \"Webhook from Line Message\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1020,\n        -440\n      ],\n      \"webhookId\": \"638c118e-1c98-4491-b6ff-14e2e75380b6\",\n      \"parameters\": {\n        \"path\": \"638c118e-1c98-4491-b6ff-14e2e75380b6\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a0c94852-290f-48b9-8e11-b498ada90c8f\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1100,\n        -620\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 340,\n        \"content\": \"## Line消息API回复\\n\\n收到用户消息后使用回复令牌返回相同内容  \\n\\n事件类型众多 需先判断是否为消息类型\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"278aff13-c081-47f0-a1f6-67920642e991\",\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -800,\n        -440\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"b63773bb-f010-4018-8142-240c9aaa4570\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.body.events[0].type }}\",\n              \"rightValue\": \"message\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"cff2f1d3-b7a4-4940-a1d1-1e5a80d6ea28\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1100,\n        -200\n      ],\n      \"parameters\": {\n        \"width\": 720,\n        \"height\": 340,\n        \"content\": \"## Line消息API发送消息\\n\\n首先需要获取用户的Line UID\\n每个用户的UID都是唯一的\\n\\n当您获得Line UID后\\n即可向该用户推送消息\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9348fc83-0aeb-4591-85b6-48f556512478\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -1020,\n        -20\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"74db3e1b-9a22-4033-bf04-a8ff485a5d3b\",\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -800,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6278f340-6287-4e89-b774-f6c584954d5b\",\n              \"name\": \"line_uid\",\n              \"type\": \"string\",\n              \"value\": \"Uxxxxxxxxxxxx\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"c593bd58-8f6a-4689-bb12-e71256ccf6e6\",\n      \"name\": \"Line : Push Message\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -560,\n        -20\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.line.me/v2/bot/message/push\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"to\\\": \\\"{{ $json.line_uid }}\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"text\\\": \\\"推播測試\\\"\\n    }\\n  ]\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"xB2Ip7YKSIDq7BoI\",\n          \"name\": \"Line n8n demo auth\"\n        }\n      },\n      \"typeVersion\": 4.2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"240dc848-8803-4776-b01d-5f10c765f72b\",\n  \"connections\": {\n    \"If\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Line : Reply with token\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Line : Push Message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook from Line Message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}