{
  "url": "https://n8n.io/workflows/2137-gmail-campaign-sender-bulk-send-emails-and-follow-up-automatically-if-no-reply/",
  "title": "Gmail campaign sender: Bulk-send emails and follow up automatically if no reply",
  "author": "David Roberts",
  "publish_date": "Last update a year ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "Sales"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"},\"nodes\":[{\"id\":\"8565747a-4108-4467-98e4-f57d441f66af\",\"name\":\"Update last contacted time\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[2380,140],\"parameters\":{\"columns\":{\"value\":{\"row_number\":\"={{ $('To email?').item.json.row_number }}\",\"first_emailed\":\"={{ $now.format('yyyy-MM-dd') }}\"},\"schema\":[{\"id\":\"email\",\"type\":\"string\",\"display\":true,\"removed\":true,\"required\":false,\"displayName\":\"email\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"first_emailed\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"first_emailed\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"name\",\"type\":\"string\",\"display\":true,\"removed\":true,\"required\":false,\"displayName\":\"name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"company\",\"type\":\"string\",\"display\":true,\"removed\":true,\"required\":false,\"displayName\":\"company\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"row_number\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":true,\"required\":false,\"displayName\":\"row_number\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[\"row_number\"]},\"options\":{},\"operation\":\"update\",\"sheetName\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"={{ $('Settings').item.json.sheet_url }}\"},\"documentId\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"={{ $('Settings').item.json.sheet_url }}\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"196\",\"name\":\"Google Sheets account (David)\"}},\"typeVersion\":4.2},{\"id\":\"5f079ac7-1bef-4bb8-8efe-1f3803357fb1\",\"name\":\"Set message template\",\"type\":\"n8n-nodes-base.set\",\"disabled\":true,\"position\":[1500,1120],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"message_template\",\"stringValue\":\"={{ $('Email sequence').first().json.emails[0].message }}\"},{\"name\":\"email\",\"stringValue\":\"david@thedavid.co.uk\"},{\"name\":\"name\",\"stringValue\":\"Daffyd\"},{\"name\":\"company\",\"stringValue\":\"Davey Enterprises\"},{\"name\":\"subject\",\"stringValue\":\"={{ $('Settings').item.json.subject }}\"},{\"name\":\"sender_name\",\"stringValue\":\"={{ $('Settings').item.json.sender_name }}\"},{\"name\":\"mail_id\",\"stringValue\":\"={{ $('Settings').item.json.mail_id }}\"},{\"name\":\"mail_seq\",\"stringValue\":\"0\"}]},\"include\":\"none\",\"options\":{}},\"typeVersion\":3.2},{\"id\":\"7ff4eabc-f49a-4adc-9a4b-750585b72070\",\"name\":\"Email sequence\",\"type\":\"n8n-nodes-base.set\",\"position\":[1000,140],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"{\\n  \\\"emails\\\": [\\n    {\\n      \\\"message\\\": \\\"Hi {name}, hope you're well!<br />\\\\n<br />\\\\nYou're doing some great things at {company}, and I wanted to touch base to see if you wanted to chat.<br />\\\\n<br />\\\\nWould it make sense to jump on a quick call?<br />\\\\n<br />\\\\nRegards,<br />\\\\n<br />\\\\nNathan<br />\\\\n\\\",\\n      \\\"send_on_day\\\": 0\\n    },\\n    {\\n      \\\"message\\\": \\\"Hi {name},<br />\\\\n<br />\\\\nJust wanted to follow up on this, since it would be great to talk.<br />\\\\n<br />\\\\nRegards,<br />\\\\n<br />\\\\nNathan<br />\\\\n\\\",\\n      \\\"send_on_day\\\": 3\\n    },\\n    {\\n      \\\"message\\\": \\\"Just thought I'd give this one last try :)<br />\\\\n<br />\\\\nNathan\\\\n\\\",\\n      \\\"send_on_day\\\": 8\\n    }\\n  ]\\n}\\n\"},\"typeVersion\":3.2},{\"id\":\"7b038199-cf02-4536-a351-b86d51b0d367\",\"name\":\"Fill message placeholders\",\"type\":\"n8n-nodes-base.code\",\"position\":[1720,1120],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"function extractPlaceholders(str) {\\n    // Regular expression to match placeholders\\n    // It matches any alphanumeric character including dashes and underscores between {}\\n    const regex = /\\\\{([a-zA-Z0-9_-]+)\\\\}/g;\\n    \\n    // Set to store unique placeholders\\n    const uniquePlaceholders = new Set();\\n\\n    // Extract and store unique placeholders\\n    let match;\\n    while ((match = regex.exec(str)) !== null) {\\n        uniquePlaceholders.add(match[1]);\\n    }\\n\\n    // Convert the Set to an array and return\\n    return Array.from(uniquePlaceholders);\\n}\\n\\nlet placeholders = Object.keys(item.json.placeholders)\\nconsole.log(placeholders)\\n\\n// Substitute all the placeholders in the message\\n  item.json.message = item.json.message_template\\n  for (let key of extractPlaceholders(item.json.message_template)) {\\n    if(!placeholders.includes(key)) throw new Error(`Missing data for placeholder '{${key}}'`)\\n    const regex = new RegExp(`\\\\\\\\{${key}\\\\\\\\}`, 'g'); // Create a regex to match the exact word surrounded by {}\\n    item.json.message = item.json.message.replaceAll(regex, item.json.placeholders[key]);\\n  }\\n\\nreturn item\"},\"typeVersion\":2},{\"id\":\"42fe4448-1a44-47aa-a04b-927d441b265a\",\"name\":\"Compose message\",\"type\":\"n8n-nodes-base.set\",\"position\":[1940,1120],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"message\",\"stringValue\":\"=<span data-cam='{{ $json.mail_id }}' data-seq='{{ $json.mail_seq }}' data-ph='{{ JSON.stringify($json.placeholders) }}'></span>{{ $json.message }}\"}]},\"options\":{}},\"typeVersion\":3.2},{\"id\":\"bccf2e89-852e-49b4-ad98-194008c47760\",\"name\":\"Get previous message threads\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1280,620],\"parameters\":{\"filters\":{\"q\":\"=subject:{{ $json.subject }} after:{{ $now.minus({'days': $json.emails.last().send_on_day+1}).toSQL().substr(0, 10) }}\"},\"resource\":\"thread\",\"returnAll\":true},\"credentials\":{\"gmailOAuth2\":{\"id\":\"198\",\"name\":\"Gmail account (David)\"}},\"typeVersion\":2.1},{\"id\":\"3ce6c45f-a257-4270-a84d-6a19ec35b2eb\",\"name\":\"Get thread details\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1500,620],\"parameters\":{\"simple\":false,\"options\":{},\"resource\":\"thread\",\"threadId\":\"={{ $json.id }}\",\"operation\":\"get\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"198\",\"name\":\"Gmail account (David)\"}},\"typeVersion\":2},{\"id\":\"9224bb16-fbc2-45b5-a2cb-f63cb440f46f\",\"name\":\"Classify threads\",\"type\":\"n8n-nodes-base.code\",\"position\":[1940,620],\"parameters\":{\"jsCode\":\"// Because emails are sent slightly after the schedule trigger runs, we'll end up waiting an extra day to send unless we take into account the execution time of the workflow\\nlet buffer_mins = 20\\n\\nlet templates = $('Email sequence').first().json.emails\\n\\nfunction next_sequence_number(messages, mail_id, sender_name) {\\n  for (let i = 0; i < messages.length; i++) {\\n    if(!('html' in messages[i])) return -1;\\n    let in_campaign = messages[i].html.includes(\\\"data-cam='\\\"+mail_id+\\\"'\\\")\\n    let valid_seq = messages[i].html.includes(\\\"data-seq='\\\"+i+\\\"'\\\")\\n    let from_us = messages[i].From.includes(sender_name)\\n    console.log(in_campaign + \\\", \\\" + valid_seq + \\\", \\\" + from_us)\\n    if(!(from_us && in_campaign && valid_seq)) {\\n      return -1;\\n    }\\n  }\\n  return messages.length;\\n}\\n\\n\\nfor (const item of $input.all()) {\\n  item.json.first_message_at = DateTime.fromMillis($('Get thread details').item.json.messages[0].internalDate*1)\\n  item.json.days_since_first_message = DateTime.now().diff(item.json.first_message_at, 'days').days\\n  item.json.next_sequence_number = next_sequence_number(\\n    item.json.messages,\\n    $('Settings').first().json.mail_id,\\n    $('Settings').first().json.sender_name\\n  );\\n  item.json.next_message_due = (\\n    item.json.next_sequence_number > 0\\n    && item.json.next_sequence_number < templates.length\\n    && templates[item.json.next_sequence_number].send_on_day <= item.json.days_since_first_message + (buffer_mins/60/24)\\n  )\\n\\n  // Retrieve the placeholder values from the snippet, for use in future messages\\n  const ph_matches = item.json.messages[0].snippet.match(/data-ph='([^']*)'/)\\n  if(ph_matches?.length > 1) {\\n    const placeholders = JSON.parse(ph_matches[1])\\n    for(key of placeholders.keys()) {\\n      item.json[key] = placeholders[key]\\n    }\\n  }\\n\\n}\\n\\nreturn $input.all();\"},\"typeVersion\":2},{\"id\":\"776cb743-339d-49f6-af3c-9ae2b464d01a\",\"name\":\"Next message due?\",\"type\":\"n8n-nodes-base.filter\",\"position\":[2160,620],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"00cf6401-f45a-4496-803c-70a5b2d7daf5\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ $json.next_message_due }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"id\":\"2ecf68b5-f5bf-4961-a849-7c0d29940387\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1906,427],\"parameters\":{\"color\":7,\"width\":181.66573318934627,\"height\":344.96230939963334,\"content\":\"Follow-up is due if:\\n- All the messages in the thread are automated (no-one has replied yet)\\n- Enough time has passed for the next message to be sent\"},\"typeVersion\":1},{\"id\":\"a3a78abb-0691-4152-a349-658b8286df2f\",\"name\":\"Execute Workflow Trigger\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[1280,1120],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a62bff23-2742-4a5e-8896-e1a3be5915fd\",\"name\":\"Replying?\",\"type\":\"n8n-nodes-base.if\",\"position\":[2160,1120],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"dc8ec88f-daef-46be-b3da-1407d5e1c0b1\",\"operator\":{\"type\":\"string\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.reply_message_id }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"id\":\"76d25df2-4472-40a6-80c6-f2e3dc8702a3\",\"name\":\"Send new message\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[2380,1240],\"parameters\":{\"sendTo\":\"={{ $json.to_email }}\",\"message\":\"={{ $json.message }}\",\"options\":{\"senderName\":\"={{ $json.sender_name }}\",\"appendAttribution\":false},\"subject\":\"={{ $json.subject }}\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"198\",\"name\":\"Gmail account (David)\"}},\"typeVersion\":2.1},{\"id\":\"ceefaf78-28b8-4711-b50e-b5487862dba6\",\"name\":\"Call message send sub-workflow\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[2820,620],\"parameters\":{\"options\":{},\"workflowId\":\"={{ $workflow.id }}\"},\"typeVersion\":1},{\"id\":\"809e9df8-881a-4b32-a3c0-e55c669bd8d1\",\"name\":\"Prepare reply params\",\"type\":\"n8n-nodes-base.set\",\"position\":[2380,620],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"message_template\",\"stringValue\":\"={{ $('Email sequence').first().json.emails[$json.next_sequence_number].message }}\"},{\"name\":\"reply_message_id\",\"stringValue\":\"={{ $json.messages.last().id }}\"},{\"name\":\"sender_name\",\"stringValue\":\"={{ $('Settings').item.json.sender_name }}\"},{\"name\":\"mail_id\",\"stringValue\":\"={{ $('Settings').item.json.mail_id }}\"},{\"name\":\"mail_seq\",\"stringValue\":\"={{ $json.next_sequence_number }}\"},{\"name\":\"to\",\"stringValue\":\"={{ $json.messages[0].To }}\"}]},\"include\":\"none\",\"options\":{}},\"typeVersion\":3.2},{\"id\":\"cdda96f1-e0a2-4ce8-bc78-da8e80f7029f\",\"name\":\"Prepare first message params\",\"type\":\"n8n-nodes-base.set\",\"position\":[1720,140],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"message_template\",\"stringValue\":\"={{ $('Email sequence').first().json.emails[0].message }}\"},{\"name\":\"to_email\",\"stringValue\":\"={{ $('Get emails').item.json[$('Settings').item.json.email_column_name] }}\"},{\"name\":\"subject\",\"stringValue\":\"={{ $('Settings').item.json.subject }}\"},{\"name\":\"sender_name\",\"stringValue\":\"={{ $('Settings').item.json.sender_name }}\"},{\"name\":\"mail_id\",\"stringValue\":\"={{ $('Settings').item.json.mail_id }}\"},{\"name\":\"mail_seq\",\"stringValue\":\"0\"}]},\"options\":{}},\"typeVersion\":3.2},{\"id\":\"c2d9869e-0608-472a-a124-26e9e6f1820a\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1240,-100],\"parameters\":{\"color\":7,\"width\":181.66573318934627,\"height\":410.4105111871959,\"content\":\"Columns the sheet needs\\n- email\\n- first_emailed (leave blank - will be filled in automatically)\\n- Other columns matching placeholders in email sequence\"},\"typeVersion\":1},{\"id\":\"26bc2c58-fea5-4ee0-b9ea-264ad00e8d32\",\"name\":\"Call message send sub-workflow1\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[2160,140],\"parameters\":{\"mode\":\"each\",\"options\":{},\"workflowId\":\"={{ $workflow.id }}\"},\"typeVersion\":1},{\"id\":\"e7e7d9bd-79c6-4534-b88d-b54cc695c7bf\",\"name\":\"To email?\",\"type\":\"n8n-nodes-base.filter\",\"position\":[1500,140],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"eeec5901-5ff0-47b1-926b-e93097d64434\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ $json.first_emailed.isEmpty() }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"id\":\"db4b6481-5fdb-4bc3-a10f-b6ccfb5b0bf0\",\"name\":\"Decode messages\",\"type\":\"n8n-nodes-base.code\",\"position\":[1720,620],\"parameters\":{\"jsCode\":\"// TODO: Some messages have an empty payload and a parts field instead (containing an array)\\n\\nfor (const item of $input.all()) {\\n  for (const message of item.json.messages) {\\n    console.log('message', message.payload.body.data || \\\"\\\")\\n    let buffer = Buffer.from(message.payload.body.data || \\\"\\\", \\\"base64\\\");\\n    message.html = buffer.toString(\\\"utf8\\\")\\n  }\\n}\\n\\nreturn $input.all();\"},\"typeVersion\":2},{\"id\":\"fc4868f0-845d-4f76-a566-b0db3d2676f8\",\"name\":\"Decode placeholder values\",\"type\":\"n8n-nodes-base.code\",\"position\":[2600,620],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"const html = $('Decode messages').item.json.messages[0].html\\nconst matches = html.match(/data-ph='([^']*)'/)\\nlet placeholders = {}\\nif(matches?.length > 0) {\\n  ph = JSON.parse(matches[1])\\n  for(k of Object.keys(ph)) {\\n    placeholders[k] = ph[k]\\n  }\\n}\\nitem.json.placeholders = placeholders\\n\\nreturn item;\"},\"typeVersion\":2},{\"id\":\"5af9b08e-6c5d-4701-a44a-794e96216948\",\"name\":\"Package placeholder values\",\"type\":\"n8n-nodes-base.code\",\"position\":[1940,140],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"function extractPlaceholders(str) {\\n    // Regular expression to match placeholders\\n    // It matches any alphanumeric character including dashes and underscores between {}\\n    const regex = /\\\\{([a-zA-Z0-9_-]+)\\\\}/g;\\n    \\n    // Set to store unique placeholders\\n    const uniquePlaceholders = new Set();\\n\\n    // Extract and store unique placeholders\\n    let match;\\n    while ((match = regex.exec(str)) !== null) {\\n        uniquePlaceholders.add(match[1]);\\n    }\\n\\n    // Convert the Set to an array and return\\n    return Array.from(uniquePlaceholders);\\n}\\n\\n\\n// Gather all the placeholder values for passing on\\nconst all_ph_raw = $('Email sequence').first().json.emails.flatMap(e => extractPlaceholders(e.message))\\nconst all_ph = [...new Set(all_ph_raw)];\\nlet placeholders = {}\\nfor(ph of all_ph) {\\n  if($('Get emails').item.json[ph] == undefined) throw new Error(`Message placeholder '{${ph}}' requires a column called '${ph}' in the Google Sheet`)\\n  placeholders[ph] = $('Get emails').item.json[ph]\\n}\\n\\nitem.json.placeholders = placeholders\\n\\nreturn item;\"},\"typeVersion\":2},{\"id\":\"e655a9c2-617b-4119-9582-45f1db2cc6d2\",\"name\":\"Settings\",\"type\":\"n8n-nodes-base.set\",\"position\":[780,140],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"5e327a1d-3f2e-40f1-aaa1-9ce888349eb0\",\"name\":\"sheet_url\",\"type\":\"string\",\"value\":\"https://docs.google.com/spreadsheets/d/12dsbRpvtVFDdPmyZ7-39vuHuFpM1eMyfOqGGGdsnrtc/edit#gid=0\"},{\"id\":\"3255270a-3ac2-4c59-8215-ea79256b55cc\",\"name\":\"subject\",\"type\":\"string\",\"value\":\"My amazing campaign\"},{\"id\":\"76b40b74-acef-49f1-a0e2-0be9a461319a\",\"name\":\"sender_name\",\"type\":\"string\",\"value\":\"Nathan Automat\"},{\"id\":\"4532eb84-5ebc-4011-8c65-d97aeae21256\",\"name\":\"email_column_name\",\"type\":\"string\",\"value\":\"email\"},{\"id\":\"83de0ceb-39ec-426a-afba-13d66bce101d\",\"name\":\"mail_id\",\"type\":\"string\",\"value\":\"123456\"}]}},\"typeVersion\":3.3},{\"id\":\"a8975f91-6413-448b-bc3f-1084959b8b31\",\"name\":\"Reply to message\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[2380,1020],\"parameters\":{\"message\":\"={{ $json.message }}\",\"options\":{\"senderName\":\"David Roberts\"},\"messageId\":\"={{ $json.reply_message_id }}\",\"operation\":\"reply\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"198\",\"name\":\"Gmail account (David)\"}},\"typeVersion\":2},{\"id\":\"d453661e-25f7-471c-90dc-633270f14396\",\"name\":\"Get emails\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1280,140],\"parameters\":{\"options\":{},\"sheetName\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"={{ $('Settings').item.json.sheet_url }}\"},\"documentId\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"={{ $('Settings').item.json.sheet_url }}\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"196\",\"name\":\"Google Sheets account (David)\"}},\"typeVersion\":4.2},{\"id\":\"7a838728-38e1-45f9-8bac-19c6ad005a38\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1220,-180],\"parameters\":{\"color\":7,\"width\":1790.5345476157208,\"height\":515.1374038700677,\"content\":\"## Send initial emails\"},\"typeVersion\":1},{\"id\":\"5d8823c1-00a7-43a2-963d-90e971167ef8\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1220,360],\"parameters\":{\"color\":7,\"width\":1797.4980261229769,\"height\":515.1374038700677,\"content\":\"## Send follow-up emails if appropriate\"},\"typeVersion\":1},{\"id\":\"fd2bb0b2-a313-45ed-ad58-935d803237e5\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1220,920],\"parameters\":{\"color\":7,\"width\":1797.4980261229769,\"height\":515.1374038700677,\"content\":\"## Sub-workflow for sending the emails\\nThis is called by the sections above - you shouldn't need to touch it\"},\"typeVersion\":1},{\"id\":\"be4a4bbb-1e10-4c9e-afb9-cc4a46a78113\",\"name\":\"Every hour\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[320,140],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"hours\",\"triggerAtMinute\":12}]}},\"typeVersion\":1.1},{\"id\":\"be582e38-6da2-4c64-8804-981936f71d88\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2120,958],\"parameters\":{\"color\":7,\"width\":181.66573318934627,\"height\":306.5470605243249,\"content\":\"If reply_message_id is set, will reply to that message.\\n\\nOtherwise, will send a new message to the user in the 'email' field\"},\"typeVersion\":1},{\"id\":\"88e9ff03-62f0-4dcf-9e28-62c95386df66\",\"name\":\"Don't email on weekends\",\"type\":\"n8n-nodes-base.filter\",\"position\":[540,140],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"195ce0cf-9d25-4e02-9f20-aa6edbc2d561\",\"operator\":{\"type\":\"boolean\",\"operation\":\"false\",\"singleValue\":true},\"leftValue\":\"={{ $now.isWeekend() }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"id\":\"7a5822f3-b2ea-42d7-8034-21a92e283112\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[740,-120],\"parameters\":{\"width\":404.04123613412946,\"height\":418.96364526464185,\"content\":\"# Try me out\\n1. Clone [this Google worksheet](https://docs.google.com/spreadsheets/d/12dsbRpvtVFDdPmyZ7-39vuHuFpM1eMyfOqGGGdsnrtc/edit#gid=0) and update the 'Settings' node with its URL (plus change any other settings there you need to)\\n2. Adjust the sequence of emails you want to send in the 'Email Sequence' node\\n\\nMake sure you set how many days after the previous email to wait before sending, and note that the emails are in HTML format.\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Settings\":{\"main\":[[{\"node\":\"Email sequence\",\"type\":\"main\",\"index\":0}]]},\"Replying?\":{\"main\":[[{\"node\":\"Reply to message\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Send new message\",\"type\":\"main\",\"index\":0}]]},\"To email?\":{\"main\":[[{\"node\":\"Prepare first message params\",\"type\":\"main\",\"index\":0}]]},\"Every hour\":{\"main\":[[{\"node\":\"Don't email on weekends\",\"type\":\"main\",\"index\":0}]]},\"Get emails\":{\"main\":[[{\"node\":\"To email?\",\"type\":\"main\",\"index\":0}]]},\"Email sequence\":{\"main\":[[{\"node\":\"Get previous message threads\",\"type\":\"main\",\"index\":0},{\"node\":\"Get emails\",\"type\":\"main\",\"index\":0}]]},\"Compose message\":{\"main\":[[{\"node\":\"Replying?\",\"type\":\"main\",\"index\":0}]]},\"Decode messages\":{\"main\":[[{\"node\":\"Classify threads\",\"type\":\"main\",\"index\":0}]]},\"Classify threads\":{\"main\":[[{\"node\":\"Next message due?\",\"type\":\"main\",\"index\":0}]]},\"Next message due?\":{\"main\":[[{\"node\":\"Prepare reply params\",\"type\":\"main\",\"index\":0}]]},\"Get thread details\":{\"main\":[[{\"node\":\"Decode messages\",\"type\":\"main\",\"index\":0}]]},\"Prepare reply params\":{\"main\":[[{\"node\":\"Decode placeholder values\",\"type\":\"main\",\"index\":0}]]},\"Set message template\":{\"main\":[[{\"node\":\"Fill message placeholders\",\"type\":\"main\",\"index\":0}]]},\"Don't email on weekends\":{\"main\":[[{\"node\":\"Settings\",\"type\":\"main\",\"index\":0}]]},\"Execute Workflow Trigger\":{\"main\":[[{\"node\":\"Set message template\",\"type\":\"main\",\"index\":0}]]},\"Decode placeholder values\":{\"main\":[[{\"node\":\"Call message send sub-workflow\",\"type\":\"main\",\"index\":0}]]},\"Fill message placeholders\":{\"main\":[[{\"node\":\"Compose message\",\"type\":\"main\",\"index\":0}]]},\"Package placeholder values\":{\"main\":[[{\"node\":\"Call message send sub-workflow1\",\"type\":\"main\",\"index\":0}]]},\"Get previous message threads\":{\"main\":[[{\"node\":\"Get thread details\",\"type\":\"main\",\"index\":0}]]},\"Prepare first message params\":{\"main\":[[{\"node\":\"Package placeholder values\",\"type\":\"main\",\"index\":0}]]},\"Call message send sub-workflow1\":{\"main\":[[{\"node\":\"Update last contacted time\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow allows you to send multi-step email campaigns using n8n, Gmail and Google Sheets.\n\nYou define a sequence of emails, and a list of email addresses to send them to. The first email is sent to everyone, but the later emails in the sequence are only sent if no-one has replied to the thread yet.\n\nThis means you only need to worry about replying to people who respond to your email, not chasing people who don’t.\n\n### Requirements\n\n  1. A list of emails in a Google sheet. You can define extra info that will be available to your email templates (e.g. name, company, etc.)\n\n\n\n![table.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/table_c0eaab8e13.png)\n\n  1. A sequence of emails to send, plus how long to wait to send each one, e.g.\n\n\n  * **On day 0:** “Hi, {name} — nice to meet you at the conference. Was wondering whether {company} would be interested in a quick call about X?”\n  * **On day 3:** “Hi, {name}, just wanted to check in on this. Let me know if there’s any interest!”\n  * **On day 7:** “{name}, just wanted to give this one last try”\n\n\n  1. A Gmail account (although you could also swap out that part for any other email service)\n\n\n\n### How it works\n\nWhen sending the emails, n8n inserts a hidden attribute in each one that tags it as being part of the email campaign. It then regularly looks through the email threads with that tag and checks whether:\n\n  1. No-one has replied yet\n  2. It’s time to send the next message\n\n\n\nThe workflow doesn’t send emails on weekends.\n\n### Notes\n\n  * This workflow is not intended for spam! Please use responsibly\n  * You can use this workflow for multiple different campaigns by making copies of the workflow and changing the sequence / Google Sheet that it uses\n\n\n",
  "crawled_at": "2025-05-25T21:21:38.790549",
  "readme_zh": "该工作流允许您利用n8n、Gmail和Google表格发送多阶段邮件营销活动。\n\n您可设定一系列邮件模板及目标邮箱列表。首封邮件将发送给所有收件人，但后续邮件仅在该邮件线程无人回复时触发发送。\n\n这意味着您只需专注回复那些对邮件作出响应的人，无需追踪沉默的收件人。\n\n### 必备条件\n\n1. 存储在Google表格中的邮箱列表。您可添加模板所需的额外信息（如姓名、公司等）\n\n![表格.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/table_c0eaab8e13.png)\n\n2. 设定邮件发送序列及间隔时间，例如：\n\n* **第0天**：\"您好，{姓名}——很高兴在会议上相识。不知{公司}是否有兴趣就X话题进行简短通话？\"\n* **第3天**：\"您好{姓名}，特此跟进。若有兴趣请随时告知！\"\n* **第7天**：\"致{姓名}，最后尝试联系一次\"\n\n3. Gmail账户（也可替换为其他邮件服务）\n\n### 运作原理\n\nn8n发送邮件时会植入隐藏标记来标识营销活动。系统将定期扫描带标记的邮件线程并检测：\n1. 该线程是否仍无人回复\n2. 是否到达下一封邮件的发送时间\n\n工作流默认不在周末发送邮件。\n\n### 注意事项\n\n* 本工作流严禁用于垃圾邮件！请合理使用\n* 通过复制工作流并修改邮件序列/关联表格，可同时运行多个不同的营销活动",
  "title_zh": "Gmail campaign sender: Bulk-send emails and follow up automatically if no reply",
  "publish_date_zh": "Last update a year ago",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"8565747a-4108-4467-98e4-f57d441f66af\",\n      \"name\": \"Update last contacted time\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        2380,\n        140\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"row_number\": \"={{ $('To email?').item.json.row_number }}\",\n            \"first_emailed\": \"={{ $now.format('yyyy-MM-dd') }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"email\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"required\": false,\n              \"displayName\": \"email\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"first_emailed\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"first_emailed\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"required\": false,\n              \"displayName\": \"name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"company\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"required\": false,\n              \"displayName\": \"company\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"row_number\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": true,\n              \"required\": false,\n              \"displayName\": \"row_number\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"row_number\"\n          ]\n        },\n        \"options\": {},\n        \"operation\": \"update\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"={{ $('Settings').item.json.sheet_url }}\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"={{ $('Settings').item.json.sheet_url }}\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"196\",\n          \"name\": \"Google Sheets account (David)\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"5f079ac7-1bef-4bb8-8efe-1f3803357fb1\",\n      \"name\": \"Set message template\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"disabled\": true,\n      \"position\": [\n        1500,\n        1120\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"message_template\",\n              \"stringValue\": \"={{ $('Email sequence').first().json.emails[0].message }}\"\n            },\n            {\n              \"name\": \"email\",\n              \"stringValue\": \"david@thedavid.co.uk\"\n            },\n            {\n              \"name\": \"name\",\n              \"stringValue\": \"Daffyd\"\n            },\n            {\n              \"name\": \"company\",\n              \"stringValue\": \"Davey Enterprises\"\n            },\n            {\n              \"name\": \"subject\",\n              \"stringValue\": \"={{ $('Settings').item.json.subject }}\"\n            },\n            {\n              \"name\": \"sender_name\",\n              \"stringValue\": \"={{ $('Settings').item.json.sender_name }}\"\n            },\n            {\n              \"name\": \"mail_id\",\n              \"stringValue\": \"={{ $('Settings').item.json.mail_id }}\"\n            },\n            {\n              \"name\": \"mail_seq\",\n              \"stringValue\": \"0\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"7ff4eabc-f49a-4adc-9a4b-750585b72070\",\n      \"name\": \"Email sequence\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1000,\n        140\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"{\\n  \\\"emails\\\": [\\n    {\\n      \\\"message\\\": \\\"Hi {name}, hope you're well!<br />\\\\n<br />\\\\nYou're doing some great things at {company}, and I wanted to touch base to see if you wanted to chat.<br />\\\\n<br />\\\\nWould it make sense to jump on a quick call?<br />\\\\n<br />\\\\nRegards,<br />\\\\n<br />\\\\nNathan<br />\\\\n\\\",\\n      \\\"send_on_day\\\": 0\\n    },\\n    {\\n      \\\"message\\\": \\\"Hi {name},<br />\\\\n<br />\\\\nJust wanted to follow up on this, since it would be great to talk.<br />\\\\n<br />\\\\nRegards,<br />\\\\n<br />\\\\nNathan<br />\\\\n\\\",\\n      \\\"send_on_day\\\": 3\\n    },\\n    {\\n      \\\"message\\\": \\\"Just thought I'd give this one last try :)<br />\\\\n<br />\\\\nNathan\\\\n\\\",\\n      \\\"send_on_day\\\": 8\\n    }\\n  ]\\n}\\n\"\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"7b038199-cf02-4536-a351-b86d51b0d367\",\n      \"name\": \"Fill message placeholders\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1720,\n        1120\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"function extractPlaceholders(str) {\\n    // Regular expression to match placeholders\\n    // It matches any alphanumeric character including dashes and underscores between {}\\n    const regex = /\\\\{([a-zA-Z0-9_-]+)\\\\}/g;\\n    \\n    // Set to store unique placeholders\\n    const uniquePlaceholders = new Set();\\n\\n    // Extract and store unique placeholders\\n    let match;\\n    while ((match = regex.exec(str)) !== null) {\\n        uniquePlaceholders.add(match[1]);\\n    }\\n\\n    // Convert the Set to an array and return\\n    return Array.from(uniquePlaceholders);\\n}\\n\\nlet placeholders = Object.keys(item.json.placeholders)\\nconsole.log(placeholders)\\n\\n// Substitute all the placeholders in the message\\n  item.json.message = item.json.message_template\\n  for (let key of extractPlaceholders(item.json.message_template)) {\\n    if(!placeholders.includes(key)) throw new Error(`Missing data for placeholder '{${key}}'`)\\n    const regex = new RegExp(`\\\\\\\\{${key}\\\\\\\\}`, 'g'); // Create a regex to match the exact word surrounded by {}\\n    item.json.message = item.json.message.replaceAll(regex, item.json.placeholders[key]);\\n  }\\n\\nreturn item\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"42fe4448-1a44-47aa-a04b-927d441b265a\",\n      \"name\": \"Compose message\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1940,\n        1120\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"message\",\n              \"stringValue\": \"=<span data-cam='{{ $json.mail_id }}' data-seq='{{ $json.mail_seq }}' data-ph='{{ JSON.stringify($json.placeholders) }}'></span>{{ $json.message }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"bccf2e89-852e-49b4-ad98-194008c47760\",\n      \"name\": \"Get previous message threads\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1280,\n        620\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"q\": \"=subject:{{ $json.subject }} after:{{ $now.minus({'days': $json.emails.last().send_on_day+1}).toSQL().substr(0, 10) }}\"\n        },\n        \"resource\": \"thread\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"198\",\n          \"name\": \"Gmail account (David)\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"3ce6c45f-a257-4270-a84d-6a19ec35b2eb\",\n      \"name\": \"Get thread details\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1500,\n        620\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"options\": {},\n        \"resource\": \"thread\",\n        \"threadId\": \"={{ $json.id }}\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"198\",\n          \"name\": \"Gmail account (David)\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9224bb16-fbc2-45b5-a2cb-f63cb440f46f\",\n      \"name\": \"Classify threads\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1940,\n        620\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Because emails are sent slightly after the schedule trigger runs, we'll end up waiting an extra day to send unless we take into account the execution time of the workflow\\nlet buffer_mins = 20\\n\\nlet templates = $('Email sequence').first().json.emails\\n\\nfunction next_sequence_number(messages, mail_id, sender_name) {\\n  for (let i = 0; i < messages.length; i++) {\\n    if(!('html' in messages[i])) return -1;\\n    let in_campaign = messages[i].html.includes(\\\"data-cam='\\\"+mail_id+\\\"'\\\")\\n    let valid_seq = messages[i].html.includes(\\\"data-seq='\\\"+i+\\\"'\\\")\\n    let from_us = messages[i].From.includes(sender_name)\\n    console.log(in_campaign + \\\", \\\" + valid_seq + \\\", \\\" + from_us)\\n    if(!(from_us && in_campaign && valid_seq)) {\\n      return -1;\\n    }\\n  }\\n  return messages.length;\\n}\\n\\n\\nfor (const item of $input.all()) {\\n  item.json.first_message_at = DateTime.fromMillis($('Get thread details').item.json.messages[0].internalDate*1)\\n  item.json.days_since_first_message = DateTime.now().diff(item.json.first_message_at, 'days').days\\n  item.json.next_sequence_number = next_sequence_number(\\n    item.json.messages,\\n    $('Settings').first().json.mail_id,\\n    $('Settings').first().json.sender_name\\n  );\\n  item.json.next_message_due = (\\n    item.json.next_sequence_number > 0\\n    && item.json.next_sequence_number < templates.length\\n    && templates[item.json.next_sequence_number].send_on_day <= item.json.days_since_first_message + (buffer_mins/60/24)\\n  )\\n\\n  // Retrieve the placeholder values from the snippet, for use in future messages\\n  const ph_matches = item.json.messages[0].snippet.match(/data-ph='([^']*)'/)\\n  if(ph_matches?.length > 1) {\\n    const placeholders = JSON.parse(ph_matches[1])\\n    for(key of placeholders.keys()) {\\n      item.json[key] = placeholders[key]\\n    }\\n  }\\n\\n}\\n\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"776cb743-339d-49f6-af3c-9ae2b464d01a\",\n      \"name\": \"Next message due?\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        2160,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"00cf6401-f45a-4496-803c-70a5b2d7daf5\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.next_message_due }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"2ecf68b5-f5bf-4961-a849-7c0d29940387\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1906,\n        427\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 181.66573318934627,\n        \"height\": 344.96230939963334,\n        \"content\": \"Follow-up is due if:\\n- All the messages in the thread are automated (no-one has replied yet)\\n- Enough time has passed for the next message to be sent\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a3a78abb-0691-4152-a349-658b8286df2f\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        1280,\n        1120\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a62bff23-2742-4a5e-8896-e1a3be5915fd\",\n      \"name\": \"Replying?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2160,\n        1120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"dc8ec88f-daef-46be-b3da-1407d5e1c0b1\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.reply_message_id }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"76d25df2-4472-40a6-80c6-f2e3dc8702a3\",\n      \"name\": \"Send new message\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        2380,\n        1240\n      ],\n      \"parameters\": {\n        \"sendTo\": \"={{ $json.to_email }}\",\n        \"message\": \"={{ $json.message }}\",\n        \"options\": {\n          \"senderName\": \"={{ $json.sender_name }}\",\n          \"appendAttribution\": false\n        },\n        \"subject\": \"={{ $json.subject }}\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"198\",\n          \"name\": \"Gmail account (David)\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"ceefaf78-28b8-4711-b50e-b5487862dba6\",\n      \"name\": \"Call message send sub-workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        2820,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"workflowId\": \"={{ $workflow.id }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"809e9df8-881a-4b32-a3c0-e55c669bd8d1\",\n      \"name\": \"Prepare reply params\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2380,\n        620\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"message_template\",\n              \"stringValue\": \"={{ $('Email sequence').first().json.emails[$json.next_sequence_number].message }}\"\n            },\n            {\n              \"name\": \"reply_message_id\",\n              \"stringValue\": \"={{ $json.messages.last().id }}\"\n            },\n            {\n              \"name\": \"sender_name\",\n              \"stringValue\": \"={{ $('Settings').item.json.sender_name }}\"\n            },\n            {\n              \"name\": \"mail_id\",\n              \"stringValue\": \"={{ $('Settings').item.json.mail_id }}\"\n            },\n            {\n              \"name\": \"mail_seq\",\n              \"stringValue\": \"={{ $json.next_sequence_number }}\"\n            },\n            {\n              \"name\": \"to\",\n              \"stringValue\": \"={{ $json.messages[0].To }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"cdda96f1-e0a2-4ce8-bc78-da8e80f7029f\",\n      \"name\": \"Prepare first message params\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1720,\n        140\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"message_template\",\n              \"stringValue\": \"={{ $('Email sequence').first().json.emails[0].message }}\"\n            },\n            {\n              \"name\": \"to_email\",\n              \"stringValue\": \"={{ $('Get emails').item.json[$('Settings').item.json.email_column_name] }}\"\n            },\n            {\n              \"name\": \"subject\",\n              \"stringValue\": \"={{ $('Settings').item.json.subject }}\"\n            },\n            {\n              \"name\": \"sender_name\",\n              \"stringValue\": \"={{ $('Settings').item.json.sender_name }}\"\n            },\n            {\n              \"name\": \"mail_id\",\n              \"stringValue\": \"={{ $('Settings').item.json.mail_id }}\"\n            },\n            {\n              \"name\": \"mail_seq\",\n              \"stringValue\": \"0\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"c2d9869e-0608-472a-a124-26e9e6f1820a\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1240,\n        -100\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 181.66573318934627,\n        \"height\": 410.4105111871959,\n        \"content\": \"表格所需列项：\\n- 邮箱\\n- 首次发送时间（留空 - 将自动填充）\\n- 其他与邮件序列占位符匹配的列\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"26bc2c58-fea5-4ee0-b9ea-264ad00e8d32\",\n      \"name\": \"Call message send sub-workflow1\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        2160,\n        140\n      ],\n      \"parameters\": {\n        \"mode\": \"each\",\n        \"options\": {},\n        \"workflowId\": \"={{ $workflow.id }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e7e7d9bd-79c6-4534-b88d-b54cc695c7bf\",\n      \"name\": \"To email?\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1500,\n        140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"eeec5901-5ff0-47b1-926b-e93097d64434\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.first_emailed.isEmpty() }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"db4b6481-5fdb-4bc3-a10f-b6ccfb5b0bf0\",\n      \"name\": \"Decode messages\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1720,\n        620\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// TODO: Some messages have an empty payload and a parts field instead (containing an array)\\n\\nfor (const item of $input.all()) {\\n  for (const message of item.json.messages) {\\n    console.log('message', message.payload.body.data || \\\"\\\")\\n    let buffer = Buffer.from(message.payload.body.data || \\\"\\\", \\\"base64\\\");\\n    message.html = buffer.toString(\\\"utf8\\\")\\n  }\\n}\\n\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"fc4868f0-845d-4f76-a566-b0db3d2676f8\",\n      \"name\": \"Decode placeholder values\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2600,\n        620\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const html = $('Decode messages').item.json.messages[0].html\\nconst matches = html.match(/data-ph='([^']*)'/)\\nlet placeholders = {}\\nif(matches?.length > 0) {\\n  ph = JSON.parse(matches[1])\\n  for(k of Object.keys(ph)) {\\n    placeholders[k] = ph[k]\\n  }\\n}\\nitem.json.placeholders = placeholders\\n\\nreturn item;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5af9b08e-6c5d-4701-a44a-794e96216948\",\n      \"name\": \"Package placeholder values\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1940,\n        140\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"function extractPlaceholders(str) {\\n    // Regular expression to match placeholders\\n    // It matches any alphanumeric character including dashes and underscores between {}\\n    const regex = /\\\\{([a-zA-Z0-9_-]+)\\\\}/g;\\n    \\n    // Set to store unique placeholders\\n    const uniquePlaceholders = new Set();\\n\\n    // Extract and store unique placeholders\\n    let match;\\n    while ((match = regex.exec(str)) !== null) {\\n        uniquePlaceholders.add(match[1]);\\n    }\\n\\n    // Convert the Set to an array and return\\n    return Array.from(uniquePlaceholders);\\n}\\n\\n\\n// Gather all the placeholder values for passing on\\nconst all_ph_raw = $('Email sequence').first().json.emails.flatMap(e => extractPlaceholders(e.message))\\nconst all_ph = [...new Set(all_ph_raw)];\\nlet placeholders = {}\\nfor(ph of all_ph) {\\n  if($('Get emails').item.json[ph] == undefined) throw new Error(`Message placeholder '{${ph}}' requires a column called '${ph}' in the Google Sheet`)\\n  placeholders[ph] = $('Get emails').item.json[ph]\\n}\\n\\nitem.json.placeholders = placeholders\\n\\nreturn item;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e655a9c2-617b-4119-9582-45f1db2cc6d2\",\n      \"name\": \"Settings\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        780,\n        140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"5e327a1d-3f2e-40f1-aaa1-9ce888349eb0\",\n              \"name\": \"sheet_url\",\n              \"type\": \"string\",\n              \"value\": \"https://docs.google.com/spreadsheets/d/12dsbRpvtVFDdPmyZ7-39vuHuFpM1eMyfOqGGGdsnrtc/edit#gid=0\"\n            },\n            {\n              \"id\": \"3255270a-3ac2-4c59-8215-ea79256b55cc\",\n              \"name\": \"subject\",\n              \"type\": \"string\",\n              \"value\": \"My amazing campaign\"\n            },\n            {\n              \"id\": \"76b40b74-acef-49f1-a0e2-0be9a461319a\",\n              \"name\": \"sender_name\",\n              \"type\": \"string\",\n              \"value\": \"Nathan Automat\"\n            },\n            {\n              \"id\": \"4532eb84-5ebc-4011-8c65-d97aeae21256\",\n              \"name\": \"email_column_name\",\n              \"type\": \"string\",\n              \"value\": \"email\"\n            },\n            {\n              \"id\": \"83de0ceb-39ec-426a-afba-13d66bce101d\",\n              \"name\": \"mail_id\",\n              \"type\": \"string\",\n              \"value\": \"123456\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"a8975f91-6413-448b-bc3f-1084959b8b31\",\n      \"name\": \"Reply to message\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        2380,\n        1020\n      ],\n      \"parameters\": {\n        \"message\": \"={{ $json.message }}\",\n        \"options\": {\n          \"senderName\": \"David Roberts\"\n        },\n        \"messageId\": \"={{ $json.reply_message_id }}\",\n        \"operation\": \"reply\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"198\",\n          \"name\": \"Gmail account (David)\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"d453661e-25f7-471c-90dc-633270f14396\",\n      \"name\": \"Get emails\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1280,\n        140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"={{ $('Settings').item.json.sheet_url }}\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"={{ $('Settings').item.json.sheet_url }}\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"196\",\n          \"name\": \"Google Sheets account (David)\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"7a838728-38e1-45f9-8bac-19c6ad005a38\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1220,\n        -180\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1790.5345476157208,\n        \"height\": 515.1374038700677,\n        \"content\": \"## 发送初始邮件\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5d8823c1-00a7-43a2-963d-90e971167ef8\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1220,\n        360\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1797.4980261229769,\n        \"height\": 515.1374038700677,\n        \"content\": \"## Send follow-up emails if appropriate\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fd2bb0b2-a313-45ed-ad58-935d803237e5\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1220,\n        920\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1797.4980261229769,\n        \"height\": 515.1374038700677,\n        \"content\": \"## 发送邮件的子流程\\n此部分由上述各模块调用——通常无需修改\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"be4a4bbb-1e10-4c9e-afb9-cc4a46a78113\",\n      \"name\": \"Every hour\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        320,\n        140\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"hours\",\n              \"triggerAtMinute\": 12\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"be582e38-6da2-4c64-8804-981936f71d88\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2120,\n        958\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 181.66573318934627,\n        \"height\": 306.5470605243249,\n        \"content\": \"若设置了reply_message_id，则会回复该条消息。\\n\\n否则，将向'email'字段中的用户发送新消息。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"88e9ff03-62f0-4dcf-9e28-62c95386df66\",\n      \"name\": \"Don't email on weekends\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        540,\n        140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"195ce0cf-9d25-4e02-9f20-aa6edbc2d561\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"false\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $now.isWeekend() }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7a5822f3-b2ea-42d7-8034-21a92e283112\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        740,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 404.04123613412946,\n        \"height\": 418.96364526464185,\n        \"content\": \"# 试用指南\\n1. 克隆[这份谷歌表格](https://docs.google.com/spreadsheets/d/12dsbRpvtVFDdPmyZ7-39vuHuFpM1eMyfOqGGGdsnrtc/edit#gid=0)，在「设置」工作表中更新URL（并根据需要修改其他配置项）\\n2. 在「邮件序列」工作表中调整您要发送的邮件顺序\\n\\n请务必设置每封邮件相对于上一封的延迟发送天数，并注意邮件内容需采用HTML格式。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Settings\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Email sequence\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Replying?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Reply to message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Send new message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"To email?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare first message params\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every hour\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Don't email on weekends\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"To email?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Email sequence\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get previous message threads\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Compose message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Replying?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Decode messages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Classify threads\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Classify threads\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Next message due?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Next message due?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare reply params\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get thread details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Decode messages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare reply params\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Decode placeholder values\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set message template\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fill message placeholders\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Don't email on weekends\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Settings\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set message template\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Decode placeholder values\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Call message send sub-workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fill message placeholders\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Compose message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Package placeholder values\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Call message send sub-workflow1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get previous message threads\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get thread details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare first message params\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Package placeholder values\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Call message send sub-workflow1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update last contacted time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}