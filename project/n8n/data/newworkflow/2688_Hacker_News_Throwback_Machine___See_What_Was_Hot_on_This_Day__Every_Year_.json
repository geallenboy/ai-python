{
  "url": "https://n8n.io/workflows/2688-hacker-news-throwback-machine-see-what-was-hot-on-this-day-every-year/",
  "title": "Hacker News Throwback Machine - See What Was Hot on This Day, Every Year!",
  "author": "ibrhdotme",
  "publish_date": "Last update 5 months ago",
  "publish_date_absolute": "2024-12-26",
  "categories": [
    {
      "name": "Other"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"nodes\":[{\"id\":\"6ea4e702-1af8-407b-b653-964a519db1c2\",\"name\":\"Basic LLM Chain\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[1560,-360],\"parameters\":{\"text\":\"=You are a highly skilled news categorizer, specializing in indentifying interesting stuff from Hacker News front-page headlines.\\n\\nYou are provided with JSON data containing a list of dates and their corresponding top headlines from the Hacker News front page. Each headline will also include a URL linking to the original article or discussion. Importantly, the dates provided will be the SAME DAY across MULTIPLE YEARS (e.g., January 1st, 2023, January 1st, 2022, January 1st, 2021, etc.). You need to indentify key headlines and also analyze how the tech landscape has evolved over the years, as reflected in the headlines for this specific day.\\n\\nYour task is to indentify top 10-15 headlines from across the years from the given json data and return in Markdown formatted bullet points categorizing into themes and adding markdown hyperlinks to the source URL with Prefixing Year before the headline. Follow the Output Foramt Mentioned.\\n\\n**Input Format:**\\n\\n```json\\n[\\n  {\\n    \\\"headlines\\\": [\\n      \\\"Headline 1 Title [URL1]\\\",\\n      \\\"Headline 2 Title [URL2]\\\",\\n      \\\"Headline 3 Title [URL3]\\\",\\n      ...\\n    ]\\n    \\\"date\\\": \\\"YYYY-MM-DD\\\",\\n  },\\n  {\\n    \\\"headlines\\\": [\\n      \\\"Headline 1 Title [URL1]\\\",\\n      \\\"Headline 2 Title [URL2]\\\",\\n      ...\\n    ]\\n    \\\"date\\\": \\\"YYYY-MM-DD\\\",\\n  },\\n  ...\\n]\\n```\\n\\n**Output Format In Markdown**\\n\\n```\\n# HN Lookback <FullMonthName-DD> | <start YYYY> to <end YYYY> \\n\\n## [Theme 1]\\n- YYYY [Headline 1](URL1)\\n- YYYY [Headline 2](URL2)\\n...\\n\\n## [Theme 2]\\n- YYYY [Headline 1](URL1)\\n- YYYY [Headline 2](URL2)\\n...\\n\\n... \\n\\n## <this is optional>\\n<if any interesing ternds emerge mention them in oneline>\\n```\\n\\n**Here is the Json data for Hackernews Headlines across the years**\\n\\n```\\n{{ JSON.stringify($json.data) }}\\n```\",\"promptType\":\"define\"},\"typeVersion\":1.5},{\"id\":\"b5a97c2a-0c3b-4ebe-aec5-7bca6b55ad4c\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[1740,-200],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-1.5-pro\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"Hx1fn2jrUvojSKye\",\"name\":\"Google Gemini(PaLM) Api account\"}},\"typeVersion\":1},{\"id\":\"18cba750-aef5-451d-880f-2c12d8540d78\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-380,-360],\"parameters\":{\"rule\":{\"interval\":[{\"triggerAtHour\":21}]}},\"typeVersion\":1.2},{\"id\":\"341da616-8670-4cd9-b47a-ee25e2ae9862\",\"name\":\"CreateYearsList\",\"type\":\"n8n-nodes-base.code\",\"position\":[-200,-360],\"parameters\":{\"jsCode\":\"for (const item of $input.all()) {\\n  const currentDateStr = item.json.timestamp.split('T')[0];\\n  const currentDate = new Date(currentDateStr);\\n  const currentYear = currentDate.getFullYear();\\n  const currentMonth = currentDate.getMonth(); // 0 for January, 1 for February, etc.\\n  const currentDay = currentDate.getDate();\\n\\n  const datesToFetch = [];\\n  for (let year = currentYear; year >= 2007; year--) {\\n    let targetDate;\\n    if (year === 2007) {\\n      // Special handling for 2007 to start from Feb 19\\n      if (currentMonth > 1 || (currentMonth === 1 && currentDay >= 19))\\n      {\\n        targetDate = new Date(2007, 1, 19); // Feb 19, 2007\\n      } else {\\n        continue; // Skip 2007 if currentDate is before Feb 19\\n      }\\n    } else {\\n      targetDate = new Date(year, currentMonth, currentDay);\\n    }\\n    \\n    // Format the date as YYYY-MM-DD\\n    const formattedDate = targetDate.toISOString().split('T')[0];\\n    datesToFetch.push(formattedDate);\\n  }\\n  item.json.datesToFetch = datesToFetch;\\n}\\n\\nreturn $input.all();\"},\"typeVersion\":2},{\"id\":\"42e24547-be24-4f29-8ce8-c0df7d47a6ff\",\"name\":\"CleanUpYearList\",\"type\":\"n8n-nodes-base.set\",\"position\":[0,-360],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"b269dc0d-21e1-4124-8f3a-2c7bfa4add5c\",\"name\":\"datesToFetch\",\"type\":\"array\",\"value\":\"={{ $json.datesToFetch }}\"}]}},\"typeVersion\":3.4},{\"id\":\"6e51ad05-0f3d-4bfb-8c8d-5b71e7355344\",\"name\":\"SplitOutYearList\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[200,-360],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"datesToFetch\"},\"typeVersion\":1},{\"id\":\"6f827071-718f-4e27-9f7a-cc50296f7bc4\",\"name\":\"GetFrontPage\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[420,-360],\"parameters\":{\"url\":\"=https://news.ycombinator.com/front\",\"options\":{\"batching\":{\"batch\":{\"batchSize\":1,\"batchInterval\":3000}}},\"sendQuery\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"day\",\"value\":\"={{ $json.datesToFetch }}\"}]}},\"typeVersion\":4.2},{\"id\":\"7287e6b1-337f-4634-ac23-5ceaa87b0db3\",\"name\":\"ExtractDetails\",\"type\":\"n8n-nodes-base.html\",\"position\":[640,-360],\"parameters\":{\"options\":{},\"operation\":\"extractHtmlContent\",\"extractionValues\":{\"values\":[{\"key\":\"=headlines\",\"cssSelector\":\".titleline\",\"returnArray\":true,\"skipSelectors\":\"span\"},{\"key\":\"date\",\"cssSelector\":\".pagetop > font\"}]}},\"typeVersion\":1.2},{\"id\":\"fceff31e-4dcd-4199-89c5-8eb75cd479bf\",\"name\":\"GetHeadlines\",\"type\":\"n8n-nodes-base.set\",\"position\":[920,-460],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"e1ce33e9-e4f8-4215-bbdb-156a955a0a97\",\"name\":\"headlines\",\"type\":\"array\",\"value\":\"={{ $json.headlines }}\"}]}},\"typeVersion\":3.4},{\"id\":\"f7683614-7225-4f05-ba12-86b326fdb4a1\",\"name\":\"GetDate\",\"type\":\"n8n-nodes-base.set\",\"position\":[920,-280],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"fc1d15f6-a999-4d6b-a7bc-3ffa9427679e\",\"name\":\"date\",\"type\":\"string\",\"value\":\"={{ $json.date }}\"}]}},\"typeVersion\":3.4},{\"id\":\"7e09ce85-ece1-46a0-aa59-8e3da66413b2\",\"name\":\"MergeHeadlinesDate\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1180,-360],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineByPosition\"},\"typeVersion\":3},{\"id\":\"db3bf408-8179-4ca4-a5b4-8a390b68f994\",\"name\":\"SingleJson\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[1380,-360],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\"},\"typeVersion\":1},{\"id\":\"2abbc0e9-ed1e-4ba0-9d2f-7c3cd314a0fe\",\"name\":\"Telegram\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[2020,-360],\"parameters\":{\"text\":\"={{ $json.text }}\",\"chatId\":\"@OnThisDayHN\",\"additionalFields\":{\"parse_mode\":\"Markdown\",\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"6nIwfhIWcwJFTPTg\",\"name\":\"OnThisDayHNBot\"}},\"typeVersion\":1.2}],\"pinData\":{},\"connections\":{\"GetDate\":{\"main\":[[{\"node\":\"MergeHeadlinesDate\",\"type\":\"main\",\"index\":1}]]},\"SingleJson\":{\"main\":[[{\"node\":\"Basic LLM Chain\",\"type\":\"main\",\"index\":0}]]},\"GetFrontPage\":{\"main\":[[{\"node\":\"ExtractDetails\",\"type\":\"main\",\"index\":0}]]},\"GetHeadlines\":{\"main\":[[{\"node\":\"MergeHeadlinesDate\",\"type\":\"main\",\"index\":0}]]},\"ExtractDetails\":{\"main\":[[{\"node\":\"GetHeadlines\",\"type\":\"main\",\"index\":0},{\"node\":\"GetDate\",\"type\":\"main\",\"index\":0}]]},\"Basic LLM Chain\":{\"main\":[[{\"node\":\"Telegram\",\"type\":\"main\",\"index\":0}]]},\"CleanUpYearList\":{\"main\":[[{\"node\":\"SplitOutYearList\",\"type\":\"main\",\"index\":0}]]},\"CreateYearsList\":{\"main\":[[{\"node\":\"CleanUpYearList\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"CreateYearsList\",\"type\":\"main\",\"index\":0}]]},\"SplitOutYearList\":{\"main\":[[{\"node\":\"GetFrontPage\",\"type\":\"main\",\"index\":0}]]},\"MergeHeadlinesDate\":{\"main\":[[{\"node\":\"SingleJson\",\"type\":\"main\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Basic LLM Chain\",\"type\":\"ai_languageModel\",\"index\":0}]]}}}",
  "readme": "This is a simple workflow that grabs HackerNews front-page headlines from _today's date across every year since 2007_ and uses a little AI magic (Google Gemini) to sort 'em into themes, sends a neat Markdown summary on Telegram.\n\n**How it works**\n\n  1. Runs daily, grabs Hacker News front page for _this day_ across every year since 2007.\n  2. Pulls headlines & dates.\n  3. Uses Google Gemini to sort headlines into topics & spot trends.\n  4. Sends a Markdown summary to Telegram.\n\n\n\n**Set up steps**\n\n  1. Clone the workflow.\n  2. Add your Google Gemini API key.\n  3. Add your Telegram bot token and chat ID.\n\n\n\n**Built on Day-01 as part of the[#100DaysOfAgenticAi](https://github.com/ibrhdotme/100DaysOfAgenticAi/)  \nFork it, tweak it, have fun!**\n",
  "crawled_at": "2025-05-26T01:42:16.484189",
  "readme_zh": "这是一个简单的工作流，它会抓取自2007年以来每年今日的HackerNews首页头条，并借助一点AI魔法（Google Gemini）将这些头条按主题分类，最后通过Telegram发送一份整洁的Markdown格式摘要。\n\n**运作原理**\n\n1. 每日自动运行，抓取2007年以来每年今日的Hacker News首页内容  \n2. 提取新闻标题和日期  \n3. 使用Google Gemini对标题进行主题归类并识别趋势  \n4. 将整理好的Markdown摘要发送至Telegram  \n\n**配置步骤**\n\n1. 克隆该工作流  \n2. 添加你的Google Gemini API密钥  \n3. 配置Telegram机器人令牌和聊天ID  \n\n**诞生于[#100DaysOfAgenticAi](https://github.com/ibrhdotme/100DaysOfAgenticAi/)计划的第一天  \n欢迎fork、自由修改、尽情探索！**",
  "title_zh": "黑客新闻时光机——查看历年今日热门话题！",
  "publish_date_zh": "最后更新于4个月前",
  "workflow_json_zh": "{\n  \"nodes\": [\n    {\n      \"id\": \"6ea4e702-1af8-407b-b653-964a519db1c2\",\n      \"name\": \"Basic LLM Chain\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        1560,\n        -360\n      ],\n      \"parameters\": {\n        \"text\": \"=You are a highly skilled news categorizer, specializing in indentifying interesting stuff from Hacker News front-page headlines.\\n\\nYou are provided with JSON data containing a list of dates and their corresponding top headlines from the Hacker News front page. Each headline will also include a URL linking to the original article or discussion. Importantly, the dates provided will be the SAME DAY across MULTIPLE YEARS (e.g., January 1st, 2023, January 1st, 2022, January 1st, 2021, etc.). You need to indentify key headlines and also analyze how the tech landscape has evolved over the years, as reflected in the headlines for this specific day.\\n\\nYour task is to indentify top 10-15 headlines from across the years from the given json data and return in Markdown formatted bullet points categorizing into themes and adding markdown hyperlinks to the source URL with Prefixing Year before the headline. Follow the Output Foramt Mentioned.\\n\\n**Input Format:**\\n\\n```json\\n[\\n  {\\n    \\\"headlines\\\": [\\n      \\\"Headline 1 Title [URL1]\\\",\\n      \\\"Headline 2 Title [URL2]\\\",\\n      \\\"Headline 3 Title [URL3]\\\",\\n      ...\\n    ]\\n    \\\"date\\\": \\\"YYYY-MM-DD\\\",\\n  },\\n  {\\n    \\\"headlines\\\": [\\n      \\\"Headline 1 Title [URL1]\\\",\\n      \\\"Headline 2 Title [URL2]\\\",\\n      ...\\n    ]\\n    \\\"date\\\": \\\"YYYY-MM-DD\\\",\\n  },\\n  ...\\n]\\n```\\n\\n**Output Format In Markdown**\\n\\n```\\n# HN Lookback <FullMonthName-DD> | <start YYYY> to <end YYYY> \\n\\n## [Theme 1]\\n- YYYY [Headline 1](URL1)\\n- YYYY [Headline 2](URL2)\\n...\\n\\n## [Theme 2]\\n- YYYY [Headline 1](URL1)\\n- YYYY [Headline 2](URL2)\\n...\\n\\n... \\n\\n## <this is optional>\\n<if any interesing ternds emerge mention them in oneline>\\n```\\n\\n**Here is the Json data for Hackernews Headlines across the years**\\n\\n```\\n{{ JSON.stringify($json.data) }}\\n```\",\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"b5a97c2a-0c3b-4ebe-aec5-7bca6b55ad4c\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        1740,\n        -200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-1.5-pro\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"Hx1fn2jrUvojSKye\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"18cba750-aef5-451d-880f-2c12d8540d78\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -380,\n        -360\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 21\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"341da616-8670-4cd9-b47a-ee25e2ae9862\",\n      \"name\": \"CreateYearsList\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -200,\n        -360\n      ],\n      \"parameters\": {\n        \"jsCode\": \"for (const item of $input.all()) {\\n  const currentDateStr = item.json.timestamp.split('T')[0];\\n  const currentDate = new Date(currentDateStr);\\n  const currentYear = currentDate.getFullYear();\\n  const currentMonth = currentDate.getMonth(); // 0 for January, 1 for February, etc.\\n  const currentDay = currentDate.getDate();\\n\\n  const datesToFetch = [];\\n  for (let year = currentYear; year >= 2007; year--) {\\n    let targetDate;\\n    if (year === 2007) {\\n      // Special handling for 2007 to start from Feb 19\\n      if (currentMonth > 1 || (currentMonth === 1 && currentDay >= 19))\\n      {\\n        targetDate = new Date(2007, 1, 19); // Feb 19, 2007\\n      } else {\\n        continue; // Skip 2007 if currentDate is before Feb 19\\n      }\\n    } else {\\n      targetDate = new Date(year, currentMonth, currentDay);\\n    }\\n    \\n    // Format the date as YYYY-MM-DD\\n    const formattedDate = targetDate.toISOString().split('T')[0];\\n    datesToFetch.push(formattedDate);\\n  }\\n  item.json.datesToFetch = datesToFetch;\\n}\\n\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"42e24547-be24-4f29-8ce8-c0df7d47a6ff\",\n      \"name\": \"CleanUpYearList\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        0,\n        -360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b269dc0d-21e1-4124-8f3a-2c7bfa4add5c\",\n              \"name\": \"datesToFetch\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.datesToFetch }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"6e51ad05-0f3d-4bfb-8c8d-5b71e7355344\",\n      \"name\": \"SplitOutYearList\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        200,\n        -360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"datesToFetch\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6f827071-718f-4e27-9f7a-cc50296f7bc4\",\n      \"name\": \"GetFrontPage\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        420,\n        -360\n      ],\n      \"parameters\": {\n        \"url\": \"=https://news.ycombinator.com/front\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 1,\n              \"batchInterval\": 3000\n            }\n          }\n        },\n        \"sendQuery\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"day\",\n              \"value\": \"={{ $json.datesToFetch }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"7287e6b1-337f-4634-ac23-5ceaa87b0db3\",\n      \"name\": \"ExtractDetails\",\n      \"type\": \"n8n-nodes-base.html\",\n      \"position\": [\n        640,\n        -360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"extractHtmlContent\",\n        \"extractionValues\": {\n          \"values\": [\n            {\n              \"key\": \"=headlines\",\n              \"cssSelector\": \".titleline\",\n              \"returnArray\": true,\n              \"skipSelectors\": \"span\"\n            },\n            {\n              \"key\": \"date\",\n              \"cssSelector\": \".pagetop > font\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"fceff31e-4dcd-4199-89c5-8eb75cd479bf\",\n      \"name\": \"GetHeadlines\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        -460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"e1ce33e9-e4f8-4215-bbdb-156a955a0a97\",\n              \"name\": \"headlines\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.headlines }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"f7683614-7225-4f05-ba12-86b326fdb4a1\",\n      \"name\": \"GetDate\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        920,\n        -280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"fc1d15f6-a999-4d6b-a7bc-3ffa9427679e\",\n              \"name\": \"date\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.date }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"7e09ce85-ece1-46a0-aa59-8e3da66413b2\",\n      \"name\": \"MergeHeadlinesDate\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1180,\n        -360\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"db3bf408-8179-4ca4-a5b4-8a390b68f994\",\n      \"name\": \"SingleJson\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        1380,\n        -360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2abbc0e9-ed1e-4ba0-9d2f-7c3cd314a0fe\",\n      \"name\": \"Telegram\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        2020,\n        -360\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.text }}\",\n        \"chatId\": \"@OnThisDayHN\",\n        \"additionalFields\": {\n          \"parse_mode\": \"Markdown\",\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"6nIwfhIWcwJFTPTg\",\n          \"name\": \"OnThisDayHNBot\"\n        }\n      },\n      \"typeVersion\": 1.2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"GetDate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"MergeHeadlinesDate\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"SingleJson\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Basic LLM Chain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"GetFrontPage\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"ExtractDetails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"GetHeadlines\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"MergeHeadlinesDate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ExtractDetails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GetHeadlines\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"GetDate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Basic LLM Chain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"CleanUpYearList\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SplitOutYearList\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"CreateYearsList\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"CleanUpYearList\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"CreateYearsList\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SplitOutYearList\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"GetFrontPage\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MergeHeadlinesDate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SingleJson\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Basic LLM Chain\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}