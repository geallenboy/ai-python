{
  "url": "https://n8n.io/workflows/4084-automatically-store-shopify-orders-in-google-sheets-with-telegram-notifications/",
  "title": "Automatically Store Shopify Orders in Google Sheets with Telegram Notifications",
  "author": "RedOne",
  "publish_date": "Last update 6 days ago",
  "publish_date_absolute": "2025-05-20",
  "categories": [
    {
      "name": "Sales"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"id\":\"VcGLTfb4lc3iScZ0\",\"meta\":{\"instanceId\":\"1037e065dca107c3c15857d49fe150792779e136a3c579aed02192a2b3d2a396\"},\"name\":\"Automatically Store Shopify Orders in Google Sheets with Telegram Notifications\",\"tags\":[],\"nodes\":[{\"id\":\"d0e405d1-9ad9-4983-bb59-fc50e62f3866\",\"name\":\"Workflow Overview\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-140,420],\"parameters\":{\"color\":\"rgba(155, 89, 182, 1)\",\"width\":500,\"height\":480,\"content\":\"## Shopify to Google Sheets Order Tracking with Telegram Notifications\\n\\nThis workflow captures incoming Shopify orders via webhook, automatically stores them in a Google Sheet for tracking and analysis, and sends instant notifications to Telegram.\\n\\n### Setup Required:\\n- Shopify store with webhook configured to this n8n webhook URL\\n- Google Sheets account with a prepared order tracking spreadsheet\\n- Telegram bot and chat ID for notifications\\n- Configure the Edit Variables node with your specific settings\\n\\n### How it works:\\n1. Webhook receives order data from Shopify\\n2. Data is transformed into a consistent format\\n3. Processed orders are saved to your Google Sheet\\n4. Notifications are sent to your Telegram chat\"},\"typeVersion\":1},{\"id\":\"ff4bd186-2677-44db-abfe-a0c5356f170a\",\"name\":\"Receive New Shopify Order\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[460,760],\"webhookId\":\"shopify-order-webhook\",\"parameters\":{\"path\":\"shopify-webhook\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":2},{\"id\":\"aee86e48-3921-46b8-85cf-fb34b4de693b\",\"name\":\"Transform Order Data to Standard Format\",\"type\":\"n8n-nodes-base.function\",\"position\":[780,560],\"parameters\":{\"functionCode\":\"// Extract and standardize Shopify order data\\nconst eventData = $input.item.json;\\nconst orderData = eventData.body; // This is the actual Shopify order object\\n\\n// Extract customer info while preserving format\\nlet customerName = '';\\nif (orderData.shipping_address && orderData.shipping_address.name) {\\n  customerName = orderData.shipping_address.name;\\n} else if (orderData.billing_address && orderData.billing_address.name) {\\n  customerName = orderData.billing_address.name;\\n} else if (orderData.customer) {\\n  // Concatenate first and last name, handling cases where one might be missing\\n  const firstName = orderData.customer.first_name || '';\\n  const lastName = orderData.customer.last_name || '';\\n  customerName = `${firstName} ${lastName}`.trim();\\n}\\n\\n// Ensure line_items exists and is an array\\nconst rawLineItems = Array.isArray(orderData.line_items) ? orderData.line_items : [];\\n\\n// Transform to standardized format\\nconst standardizedOrder = {\\n  orderId: orderData.id || '',\\n  orderNumber: orderData.order_number || '',\\n  created_at: orderData.created_at || new Date().toISOString(),\\n  processed: false, // Defaulting as per your desired structure\\n  processed_at: '',\\n  customer: {\\n    name: customerName,\\n    email: orderData.email || '',\\n    phone: (orderData.shipping_address && orderData.shipping_address.phone) ||\\n           (orderData.billing_address && orderData.billing_address.phone) || \\n           (orderData.customer && orderData.customer.phone) || \\n           ''\\n  },\\n  shippingAddress: {\\n    name: (orderData.shipping_address && orderData.shipping_address.name) || customerName,\\n    address1: (orderData.shipping_address && orderData.shipping_address.address1) || '',\\n    address2: (orderData.shipping_address && orderData.shipping_address.address2) || '',\\n    city: (orderData.shipping_address && orderData.shipping_address.city) || '',\\n    province: (orderData.shipping_address && orderData.shipping_address.province) || '',\\n    zip: (orderData.shipping_address && orderData.shipping_address.zip) || '',\\n    country: (orderData.shipping_address && orderData.shipping_address.country_code) || ''\\n  },\\n  lineItems: rawLineItems.map(item => ({\\n    id: item.id || '',\\n    productId: item.product_id || '',\\n    variantId: item.variant_id || '',\\n    sku: item.sku || '', \\n    name: item.name || item.title || '',\\n    quantity: item.quantity || 1,\\n    price: item.price || '0.00',\\n    supplier: null,\\n    fulfillment_status: item.fulfillment_status || 'unfulfilled',\\n    tracking_number: null\\n  })),\\n  totalPrice: orderData.total_price || '0.00',\\n  currency: orderData.currency || 'USD',\\n  json: JSON.stringify(orderData) // Store the full original order for reference\\n};\\n\\n// Convert objects to strings for Google Sheets\\nstandardizedOrder.customer = JSON.stringify(standardizedOrder.customer);\\nstandardizedOrder.shippingAddress = JSON.stringify(standardizedOrder.shippingAddress);\\nstandardizedOrder.lineItems = JSON.stringify(standardizedOrder.lineItems);\\n\\nreturn {json: standardizedOrder};\"},\"typeVersion\":1},{\"id\":\"f505d25f-dbd0-4d03-b2c8-9d62891decf8\",\"name\":\"Save Order to Google Sheets\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1060,520],\"parameters\":{\"columns\":{\"value\":{},\"schema\":[],\"mappingMode\":\"autoMapInputData\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":1985380983,\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/16hLaVyq09dvPpIKC4OmcRnzxa6-rR5h7eOBeDk28hnc/edit#gid=1985380983\",\"cachedResultName\":\"Order\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"16hLaVyq09dvPpIKC4OmcRnzxa6-rR5h7eOBeDk28hnc\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/16hLaVyq09dvPpIKC4OmcRnzxa6-rR5h7eOBeDk28hnc/edit?usp=drivesdk\",\"cachedResultName\":\"Daily Orders Sheet\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"ubQXdpluCtk0bGFi\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.2},{\"id\":\"ad495370-6fde-469b-802e-df03e44d1a36\",\"name\":\"Success?\",\"type\":\"n8n-nodes-base.if\",\"position\":[1260,520],\"parameters\":{\"conditions\":{\"boolean\":[{\"value1\":true,\"value2\":true}]}},\"typeVersion\":1},{\"id\":\"be410e7d-ab51-4a74-889d-10100f90cb30\",\"name\":\"Send Error Notification\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1640,840],\"parameters\":{\"text\":\"‚ùå *ERROR: Shopify Order Processing Failed*\\n\\n```\\n{{ $json.error }}\\n```\\n\\n*Error occurred at:* {{ $now }}\",\"chatId\":\"={{$node[\\\"Variables\\\"].json.telegramChatId}}\",\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"Your Telegram Id\",\"name\":\"Telegram account\"}},\"typeVersion\":1},{\"id\":\"e880a4ef-cc42-4de3-83c9-62275aabfaf2\",\"name\":\"Error Handling Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1160,220],\"parameters\":{\"color\":\"rgba(255, 153, 0, 1)\",\"content\":\"## Error Handling\\n\\nThis section checks if the Google Sheets operation was successful and sends appropriate notifications via Telegram.\\n\\nMake sure to configure a Telegram bot and set your chat ID in the Edit Variables node.\"},\"typeVersion\":1},{\"id\":\"99cae8a6-38e2-481c-8f36-3b434c8a8117\",\"name\":\"Send Success Notification1\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[1680,320],\"parameters\":{\"text\":\"=üõçÔ∏è New Order Successfully Recorded\\n\\nOrder #: {{ $node[\\\"Transform Order Data to Standard Format\\\"].json.orderNumber }}\\nCustomer: {{ JSON.parse($node[\\\"Transform Order Data to Standard Format\\\"].json.customer).name }}\\nTotal: {{ $node[\\\"Transform Order Data to Standard Format\\\"].json.currency }} {{ $node[\\\"Transform Order Data to Standard Format\\\"].json.totalPrice }}\\nDate: {{ $node[\\\"Transform Order Data to Standard Format\\\"].json.created_at }}\\n\\nOrder has been added to your Order Tracking Sheet.\",\"chatId\":\"=Your Telegram Chat Id\",\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"RIK7bBarkKBJAV5R\",\"name\":\"Telegram account\"}},\"typeVersion\":1},{\"id\":\"a8b5532a-44c8-4f2a-a54a-a9e03d321141\",\"name\":\"Variables\",\"type\":\"n8n-nodes-base.set\",\"position\":[480,500],\"parameters\":{\"values\":{\"string\":[{\"name\":\"spreadsheetId\",\"value\":\"Your Google Sheet Id\"},{\"name\":\"sheetName\",\"value\":\"orders\"},{\"name\":\"telegramChatId\",\"value\":\"Your Telegram Chat Id\"}]},\"options\":{}},\"typeVersion\":2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"e94d8900-ca57-4128-bbfa-879bb9b378ab\",\"connections\":{\"Success?\":{\"main\":[[{\"node\":\"Send Success Notification1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Send Error Notification\",\"type\":\"main\",\"index\":0}]]},\"Variables\":{\"main\":[[]]},\"Receive New Shopify Order\":{\"main\":[[{\"node\":\"Transform Order Data to Standard Format\",\"type\":\"main\",\"index\":0}]]},\"Save Order to Google Sheets\":{\"main\":[[{\"node\":\"Success?\",\"type\":\"main\",\"index\":0}]]},\"Transform Order Data to Standard Format\":{\"main\":[[{\"node\":\"Save Order to Google Sheets\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow is designed for **e-commerce store owners, operations managers, and developers** who use Shopify as their e-commerce platform and want an automated way to track and analyze their order data.\n\nIt is particularly useful for businesses that:\n\n  * Need a centralized view of all Shopify orders\n  * Want to analyze order trends without logging into Shopify\n  * Need to share order data with team members who don't have Shopify access\n  * Want to build custom reports based on order information\n\n\n\n* * *\n\n### What Problem Is This Workflow Solving?\n\nWhile Shopify provides excellent order management within its platform, many businesses need their order data available in other systems for various purposes:\n\n  * **Data accessibility** : Not everyone in your organization may have access to Shopify's admin interface\n  * **Custom reporting** : Google Sheets allows for flexible analysis and report creation\n  * **Data integration** : Having orders in Google Sheets makes it easier to combine with other business data\n  * **Backup** : Creates an additional backup of your critical order information\n\n\n\n* * *\n\n### What This Workflow Does\n\nThis n8n workflow creates an automated bridge between your Shopify store and Google Sheets:\n\n  * Listens for new order notifications from your Shopify store via webhooks\n  * Processes the incoming order data and transforms it into a structured format\n  * Stores each new order in a dedicated Google Sheets spreadsheet\n  * Sends real-time notifications to Telegram when new orders are received or errors occur\n\n\n\n* * *\n\n### Setup\n\n#### Create a Google Sheet\n\n  * Create a new Google Sheet to store your orders\n\n  * Add a sheet named `\"orders\"` with the following columns:\n\n    * `orderId`\n    * `orderNumber`\n    * `created_at`\n    * `processed`\n    * `processed_at`\n    * `json`\n    * `customer`\n    * `shippingAddress`\n    * `lineItems`\n    * `totalPrice`\n    * `currency`\n\n\n\n#### Set Up Telegram Bot\n\n  * Create a Telegram bot using **BotFather** (send `/newbot` to [@BotFather](https://t.me/BotFather))\n  * Save your bot token for use in n8n credentials\n  * Start a chat with your bot and get your chat ID (you can use [@userinfobot](https://t.me/userinfobot))\n\n\n\n#### Configure the Workflow\n\n  * Set your **Google Sheet ID** in the \"Edit Variables\" node\n  * Enter your **Telegram chat ID** in the \"Edit Variables\" node\n  * Set up your **Telegram API credentials** in n8n\n\n\n\n#### Configure Shopify Webhook\n\n  * In your Shopify admin, go to:  \n`Settings &gt; Notifications &gt; Webhooks`\n  * Create a new webhook for **\"Order creation\"**\n  * Set the URL to your **n8n webhook URL** (from the \"Receive New Shopify Order\" node)\n  * Set the format to **JSON**\n\n\n\n* * *\n\n### How to Customize This Workflow to Your Needs\n\n  * **Additional data** : Modify the \"Transform Order Data to Standard Format\" function to extract more Shopify data\n  * **Multiple sheets** : Duplicate the Google Sheets node to store different aspects of orders in separate sheets\n  * **Telegram messages** : Customize the text in Telegram nodes to include more details or rich formatting\n  * **Data processing** : Add nodes to perform calculations or transformations on order data\n  * **Additional notifications** : Add more channels like Slack, Discord, or SMS\n  * **Integrations** : Extend the workflow to send order data to other systems like CRMs, ERPs, or accounting software\n\n\n\n* * *\n\n### Final Notes\n\nThis workflow serves as a **foundation** that you can build upon to create a **comprehensive order management system** tailored to your specific business needs.\n",
  "crawled_at": "2025-05-26T06:31:00.175706",
  "readme_zh": "Êú¨Â∑•‰ΩúÊµÅ‰∏ì‰∏∫**ÁîµÂïÜÂ∫ó‰∏ª„ÄÅËøêËê•ÁªèÁêÜÂèäÂºÄÂèë‰∫∫Âëò**ËÆæËÆ°ÔºåÈÄÇÁî®‰∫é‰ΩøÁî®Shopify‰Ωú‰∏∫ÁîµÂïÜÂπ≥Âè∞Âπ∂Â∏åÊúõËá™Âä®ÂåñËøΩË∏™ÂàÜÊûêËÆ¢ÂçïÊï∞ÊçÆÁöÑÁî®Êà∑„ÄÇ\n\nÁâπÂà´ÈÄÇÂêà‰ª•‰∏ã‰∏öÂä°Âú∫ÊôØÔºö\n\n  * ÈúÄË¶ÅÈõÜ‰∏≠Êü•ÁúãÊâÄÊúâShopifyËÆ¢Âçï\n  * Â∏åÊúõ‰∏çÁôªÂΩïShopifyÂç≥ÂèØÂàÜÊûêËÆ¢ÂçïË∂ãÂäø\n  * ÈúÄ‰∏éÊó†ShopifyÊùÉÈôêÁöÑÂõ¢ÈòüÊàêÂëòÂÖ±‰∫´ËÆ¢ÂçïÊï∞ÊçÆ\n  * ÈúÄË¶ÅÂü∫‰∫éËÆ¢Âçï‰ø°ÊÅØÂàõÂª∫Ëá™ÂÆö‰πâÊä•Ë°®",
  "title_zh": "Ëá™Âä®Â∞ÜShopifyËÆ¢ÂçïÂ≠òÂÇ®Ëá≥GoogleË°®Ê†ºÂπ∂ÈôÑÂ∏¶TelegramÈÄöÁü•",
  "publish_date_zh": "ÊúÄÂêéÊõ¥Êñ∞‰∫é6Â§©Ââç",
  "workflow_json_zh": "{\n  \"id\": \"VcGLTfb4lc3iScZ0\",\n  \"meta\": {\n    \"instanceId\": \"1037e065dca107c3c15857d49fe150792779e136a3c579aed02192a2b3d2a396\"\n  },\n  \"name\": \"Automatically Store Shopify Orders in Google Sheets with Telegram Notifications\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"d0e405d1-9ad9-4983-bb59-fc50e62f3866\",\n      \"name\": \"Workflow Overview\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -140,\n        420\n      ],\n      \"parameters\": {\n        \"color\": \"rgba(155, 89, 182, 1)\",\n        \"width\": 500,\n        \"height\": 480,\n        \"content\": \"## ShopifyËÆ¢ÂçïÂêåÊ≠•Ëá≥GoogleË°®Ê†ºÂπ∂ÂèëÈÄÅTelegramÈÄöÁü•\\n\\nËØ•Â∑•‰ΩúÊµÅÈÄöËøáWebhookÊçïËé∑ShopifyËÆ¢ÂçïÔºåËá™Âä®Â∞ÜÊï∞ÊçÆÂ≠òÂÇ®Ëá≥GoogleË°®Ê†ºÁî®‰∫éËøΩË∏™ÂàÜÊûêÔºåÂπ∂ÂÆûÊó∂Êé®ÈÄÅÈÄöÁü•Ëá≥Telegram„ÄÇ\\n\\n### ÈÖçÁΩÆË¶ÅÊ±ÇÔºö\\n- Â∑≤ÈÖçÁΩÆWebhookÊåáÂêëÊ≠§n8nÊúçÂä°ÁöÑShopifyÂ∫óÈì∫\\n- ÂáÜÂ§áÂ•ΩËÆ¢ÂçïËøΩË∏™Ë°®Ê†ºÁöÑGoogleË¥¶Âè∑\\n- Áî®‰∫éÊé•Êî∂ÈÄöÁü•ÁöÑTelegramÊú∫Âô®‰∫∫Âèä‰ºöËØùID\\n- Âú®\\\"ÁºñËæëÂèòÈáè\\\"ËäÇÁÇπ‰∏≠ÈÖçÁΩÆÊÇ®ÁöÑ‰∏ìÂ±ûÂèÇÊï∞\\n\\n### ËøêË°åÂéüÁêÜÔºö\\n1. WebhookÊé•Êî∂Êù•Ëá™ShopifyÁöÑËÆ¢ÂçïÊï∞ÊçÆ\\n2. Êï∞ÊçÆË¢´ËΩ¨Êç¢‰∏∫Áªü‰∏ÄÊ†ºÂºè\\n3. Â§ÑÁêÜÂêéÁöÑËÆ¢ÂçïÂ≠òÂÖ•GoogleË°®Ê†º\\n4. ÈÄöÁü•‰ø°ÊÅØÂèëÈÄÅËá≥Telegram‰ºöËØù\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ff4bd186-2677-44db-abfe-a0c5356f170a\",\n      \"name\": \"Receive New Shopify Order\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        460,\n        760\n      ],\n      \"webhookId\": \"shopify-order-webhook\",\n      \"parameters\": {\n        \"path\": \"shopify-webhook\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"aee86e48-3921-46b8-85cf-fb34b4de693b\",\n      \"name\": \"Transform Order Data to Standard Format\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        780,\n        560\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Extract and standardize Shopify order data\\nconst eventData = $input.item.json;\\nconst orderData = eventData.body; // This is the actual Shopify order object\\n\\n// Extract customer info while preserving format\\nlet customerName = '';\\nif (orderData.shipping_address && orderData.shipping_address.name) {\\n  customerName = orderData.shipping_address.name;\\n} else if (orderData.billing_address && orderData.billing_address.name) {\\n  customerName = orderData.billing_address.name;\\n} else if (orderData.customer) {\\n  // Concatenate first and last name, handling cases where one might be missing\\n  const firstName = orderData.customer.first_name || '';\\n  const lastName = orderData.customer.last_name || '';\\n  customerName = `${firstName} ${lastName}`.trim();\\n}\\n\\n// Ensure line_items exists and is an array\\nconst rawLineItems = Array.isArray(orderData.line_items) ? orderData.line_items : [];\\n\\n// Transform to standardized format\\nconst standardizedOrder = {\\n  orderId: orderData.id || '',\\n  orderNumber: orderData.order_number || '',\\n  created_at: orderData.created_at || new Date().toISOString(),\\n  processed: false, // Defaulting as per your desired structure\\n  processed_at: '',\\n  customer: {\\n    name: customerName,\\n    email: orderData.email || '',\\n    phone: (orderData.shipping_address && orderData.shipping_address.phone) ||\\n           (orderData.billing_address && orderData.billing_address.phone) || \\n           (orderData.customer && orderData.customer.phone) || \\n           ''\\n  },\\n  shippingAddress: {\\n    name: (orderData.shipping_address && orderData.shipping_address.name) || customerName,\\n    address1: (orderData.shipping_address && orderData.shipping_address.address1) || '',\\n    address2: (orderData.shipping_address && orderData.shipping_address.address2) || '',\\n    city: (orderData.shipping_address && orderData.shipping_address.city) || '',\\n    province: (orderData.shipping_address && orderData.shipping_address.province) || '',\\n    zip: (orderData.shipping_address && orderData.shipping_address.zip) || '',\\n    country: (orderData.shipping_address && orderData.shipping_address.country_code) || ''\\n  },\\n  lineItems: rawLineItems.map(item => ({\\n    id: item.id || '',\\n    productId: item.product_id || '',\\n    variantId: item.variant_id || '',\\n    sku: item.sku || '', \\n    name: item.name || item.title || '',\\n    quantity: item.quantity || 1,\\n    price: item.price || '0.00',\\n    supplier: null,\\n    fulfillment_status: item.fulfillment_status || 'unfulfilled',\\n    tracking_number: null\\n  })),\\n  totalPrice: orderData.total_price || '0.00',\\n  currency: orderData.currency || 'USD',\\n  json: JSON.stringify(orderData) // Store the full original order for reference\\n};\\n\\n// Convert objects to strings for Google Sheets\\nstandardizedOrder.customer = JSON.stringify(standardizedOrder.customer);\\nstandardizedOrder.shippingAddress = JSON.stringify(standardizedOrder.shippingAddress);\\nstandardizedOrder.lineItems = JSON.stringify(standardizedOrder.lineItems);\\n\\nreturn {json: standardizedOrder};\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f505d25f-dbd0-4d03-b2c8-9d62891decf8\",\n      \"name\": \"Save Order to Google Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1060,\n        520\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {},\n          \"schema\": [],\n          \"mappingMode\": \"autoMapInputData\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": 1985380983,\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/16hLaVyq09dvPpIKC4OmcRnzxa6-rR5h7eOBeDk28hnc/edit#gid=1985380983\",\n          \"cachedResultName\": \"Order\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"16hLaVyq09dvPpIKC4OmcRnzxa6-rR5h7eOBeDk28hnc\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/16hLaVyq09dvPpIKC4OmcRnzxa6-rR5h7eOBeDk28hnc/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Daily Orders Sheet\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"ubQXdpluCtk0bGFi\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"ad495370-6fde-469b-802e-df03e44d1a36\",\n      \"name\": \"Success?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1260,\n        520\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": true,\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"be410e7d-ab51-4a74-889d-10100f90cb30\",\n      \"name\": \"Send Error Notification\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1640,\n        840\n      ],\n      \"parameters\": {\n        \"text\": \"‚ùå *ERROR: Shopify Order Processing Failed*\\n\\n```\\n{{ $json.error }}\\n```\\n\\n*Error occurred at:* {{ $now }}\",\n        \"chatId\": \"={{$node[\\\"Variables\\\"].json.telegramChatId}}\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"Your Telegram Id\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e880a4ef-cc42-4de3-83c9-62275aabfaf2\",\n      \"name\": \"Error Handling Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1160,\n        220\n      ],\n      \"parameters\": {\n        \"color\": \"rgba(255, 153, 0, 1)\",\n        \"content\": \"## ÈîôËØØÂ§ÑÁêÜ\\n\\nÊú¨ÈÉ®ÂàÜÁî®‰∫éÊ£ÄÊü•Google SheetsÊìç‰ΩúÊòØÂê¶ÊàêÂäüÔºåÂπ∂ÈÄöËøáTelegramÂèëÈÄÅÁõ∏Â∫îÈÄöÁü•„ÄÇ\\n\\nËØ∑Á°Æ‰øùÂú®\\\"ÁºñËæëÂèòÈáè\\\"ËäÇÁÇπ‰∏≠ÈÖçÁΩÆÂ•ΩTelegramÊú∫Âô®‰∫∫Âπ∂ËÆæÁΩÆÊÇ®ÁöÑËÅäÂ§©ID„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"99cae8a6-38e2-481c-8f36-3b434c8a8117\",\n      \"name\": \"Send Success Notification1\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        1680,\n        320\n      ],\n      \"parameters\": {\n        \"text\": \"=üõçÔ∏è New Order Successfully Recorded\\n\\nOrder #: {{ $node[\\\"Transform Order Data to Standard Format\\\"].json.orderNumber }}\\nCustomer: {{ JSON.parse($node[\\\"Transform Order Data to Standard Format\\\"].json.customer).name }}\\nTotal: {{ $node[\\\"Transform Order Data to Standard Format\\\"].json.currency }} {{ $node[\\\"Transform Order Data to Standard Format\\\"].json.totalPrice }}\\nDate: {{ $node[\\\"Transform Order Data to Standard Format\\\"].json.created_at }}\\n\\nOrder has been added to your Order Tracking Sheet.\",\n        \"chatId\": \"=Your Telegram Chat Id\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"RIK7bBarkKBJAV5R\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a8b5532a-44c8-4f2a-a54a-a9e03d321141\",\n      \"name\": \"Variables\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        480,\n        500\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"spreadsheetId\",\n              \"value\": \"Your Google Sheet Id\"\n            },\n            {\n              \"name\": \"sheetName\",\n              \"value\": \"orders\"\n            },\n            {\n              \"name\": \"telegramChatId\",\n              \"value\": \"Your Telegram Chat Id\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e94d8900-ca57-4128-bbfa-879bb9b378ab\",\n  \"connections\": {\n    \"Success?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Success Notification1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Send Error Notification\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Variables\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Receive New Shopify Order\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Transform Order Data to Standard Format\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Save Order to Google Sheets\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Success?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Transform Order Data to Standard Format\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save Order to Google Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}