{
  "url": "https://n8n.io/workflows/1423-tiny-tiny-rss-new-stared-article-saved-to-wallabag/",
  "title": "Tiny Tiny RSS new stared article saved to wallabag",
  "author": "dev",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "{\"id\":\"4\",\"name\":\"post to wallabag\",\"nodes\":[{\"name\":\"On clicking 'execute'\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[120,250],\"parameters\":{},\"typeVersion\":1},{\"name\":\"HTTP Request\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1280,380],\"parameters\":{\"url\":\"=http://{HERE-YOUR-WALLABAG-HOST}/api/entries.json\",\"options\":{},\"requestMethod\":\"POST\",\"bodyParametersUi\":{\"parameter\":[{\"name\":\"url\",\"value\":\"={{$json[\\\"url\\\"]}}\"}]},\"queryParametersUi\":{\"parameter\":[]},\"headerParametersUi\":{\"parameter\":[{\"name\":\"Authorization\",\"value\":\"=Bearer {{$json[\\\"access_token\\\"]}}\"}]}},\"typeVersion\":1},{\"name\":\"Cron\",\"type\":\"n8n-nodes-base.cron\",\"position\":[120,400],\"parameters\":{\"triggerTimes\":{\"item\":[{\"mode\":\"everyX\",\"unit\":\"minutes\",\"value\":10}]}},\"typeVersion\":1},{\"name\":\"Function\",\"type\":\"n8n-nodes-base.function\",\"position\":[900,470],\"parameters\":{\"functionCode\":\"// Get the global workflow static data\\nconst staticData = getWorkflowStaticData('global')\\n\\n// Access its data\\nconst lastStarRssId = staticData.lastStarRssId\\n\\nlet list = []\\n\\nfor (const item of items[0].json.content){\\n  let currentId = item.id\\n  if(currentId == lastStarRssId) break;\\n  list.push({'json':{\\n    'id': currentId,\\n    'lastId': lastStarRssId,\\n    'url': item.link,\\n    'tags': item.tags,\\n    'access_token': items[1].json.access_token\\n  }})\\n}\\n\\n\\n// Get the last ID from Rss Feed\\nlet currentStarRssId = items[0].json.content[0].id\\n\\n// TODO: make a loop to get all the items beyond the last saved id\\nif(!lastStarRssId || currentStarRssId != lastStarRssId)\\n{  \\n  // Update its data\\n  staticData.lastStarRssId = currentStarRssId;\\n  \\n}\\nelse { list = [{'json':{ 'id': 'Nan', 'lastId': staticData.lastStarRssId }}] }\\nreturn list;\\n\\n/*return [{'json':{'url': items[0].json.content.pop(), 'wallabag':items[1].json}}]*/\"},\"typeVersion\":1},{\"name\":\"IF\",\"type\":\"n8n-nodes-base.if\",\"position\":[1100,470],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{$node[\\\"Function\\\"].json[\\\"id\\\"]}}\",\"value2\":\"NaN\",\"operation\":\"notEqual\"}],\"boolean\":[]}},\"typeVersion\":1},{\"name\":\"NoOp\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[1290,570],\"parameters\":{},\"typeVersion\":1},{\"name\":\"Auth Wallabag\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[490,590],\"parameters\":{\"url\":\"http://{HERE-YOUR-WALLABAG-HOST}/oauth/v2/token\",\"options\":{},\"requestMethod\":\"POST\",\"bodyParametersUi\":{\"parameter\":[{\"name\":\"grant_type\",\"value\":\"password\"},{\"name\":\"client_id\",\"value\":\"{HERE-YOUR-CLIENT_ID}\"},{\"name\":\"client_secret\",\"value\":\"{HERE-YOUR-CLIENT_SECRET}\"},{\"name\":\"username\",\"value\":\"{HERE-YOUR-USERNAME}\"},{\"name\":\"password\",\"value\":\"{HERE-YOUR-PASSWORD}\"}]}},\"typeVersion\":1},{\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[710,470],\"parameters\":{},\"typeVersion\":1},{\"name\":\"Get stared articles\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[490,400],\"parameters\":{\"url\":\"http://{HERE-YOUR-TTRSS-HOST}/tt-rss/api/\",\"options\":{},\"requestMethod\":\"POST\",\"bodyParametersUi\":{\"parameter\":[{\"name\":\"sid\",\"value\":\"={{$json[\\\"content\\\"][\\\"session_id\\\"]}}\"},{\"name\":\"op\",\"value\":\"getHeadLines\"},{\"name\":\"feed_id\",\"value\":\"-1\"}]}},\"typeVersion\":1},{\"name\":\"Auth TTRss\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[320,400],\"parameters\":{\"url\":\"http://{HERE-YOUR-TTRSS-HOST}/tt-rss/api/\",\"options\":{},\"requestMethod\":\"POST\",\"bodyParametersUi\":{\"parameter\":[{\"name\":\"op\",\"value\":\"login\"},{\"name\":\"user\",\"value\":\"{HERE-YOUR-API-USER}\"},{\"name\":\"password\",\"value\":\"{HERE-YOUR-API-SECRET}\"}]}},\"typeVersion\":1}],\"active\":false,\"settings\":{},\"connections\":{\"IF\":{\"main\":[[{\"node\":\"HTTP Request\",\"type\":\"main\",\"index\":0}],[{\"node\":\"NoOp\",\"type\":\"main\",\"index\":0}]]},\"Cron\":{\"main\":[[{\"node\":\"Auth TTRss\",\"type\":\"main\",\"index\":0}]]},\"Merge\":{\"main\":[[{\"node\":\"Function\",\"type\":\"main\",\"index\":0}]]},\"Function\":{\"main\":[[{\"node\":\"IF\",\"type\":\"main\",\"index\":0}]]},\"Auth TTRss\":{\"main\":[[{\"node\":\"Get stared articles\",\"type\":\"main\",\"index\":0}]]},\"Auth Wallabag\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]},\"Get stared articles\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]},\"On clicking 'execute'\":{\"main\":[[{\"node\":\"Auth TTRss\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "Every 10 minutes check if a new article was stared, if so, save it in wallabag to read it later.\n",
  "crawled_at": "2025-05-25T19:41:30.346955",
  "readme_zh": "每10分钟检查是否有新文章被收藏，若有，则将其保存至wallabag以便稍后阅读。",
  "title_zh": "Tiny Tiny RSS 新收藏文章已保存至 wallabag",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"id\": \"4\",\n  \"name\": \"post to wallabag\",\n  \"nodes\": [\n    {\n      \"name\": \"On clicking 'execute'\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        120,\n        250\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"HTTP Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1280,\n        380\n      ],\n      \"parameters\": {\n        \"url\": \"=http://{HERE-YOUR-WALLABAG-HOST}/api/entries.json\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{$json[\\\"url\\\"]}}\"\n            }\n          ]\n        },\n        \"queryParametersUi\": {\n          \"parameter\": []\n        },\n        \"headerParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{$json[\\\"access_token\\\"]}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Cron\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        120,\n        400\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyX\",\n              \"unit\": \"minutes\",\n              \"value\": 10\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Function\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        900,\n        470\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Get the global workflow static data\\nconst staticData = getWorkflowStaticData('global')\\n\\n// Access its data\\nconst lastStarRssId = staticData.lastStarRssId\\n\\nlet list = []\\n\\nfor (const item of items[0].json.content){\\n  let currentId = item.id\\n  if(currentId == lastStarRssId) break;\\n  list.push({'json':{\\n    'id': currentId,\\n    'lastId': lastStarRssId,\\n    'url': item.link,\\n    'tags': item.tags,\\n    'access_token': items[1].json.access_token\\n  }})\\n}\\n\\n\\n// Get the last ID from Rss Feed\\nlet currentStarRssId = items[0].json.content[0].id\\n\\n// TODO: make a loop to get all the items beyond the last saved id\\nif(!lastStarRssId || currentStarRssId != lastStarRssId)\\n{  \\n  // Update its data\\n  staticData.lastStarRssId = currentStarRssId;\\n  \\n}\\nelse { list = [{'json':{ 'id': 'Nan', 'lastId': staticData.lastStarRssId }}] }\\nreturn list;\\n\\n/*return [{'json':{'url': items[0].json.content.pop(), 'wallabag':items[1].json}}]*/\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"IF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1100,\n        470\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$node[\\\"Function\\\"].json[\\\"id\\\"]}}\",\n              \"value2\": \"NaN\",\n              \"operation\": \"notEqual\"\n            }\n          ],\n          \"boolean\": []\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"NoOp\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1290,\n        570\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Auth Wallabag\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        490,\n        590\n      ],\n      \"parameters\": {\n        \"url\": \"http://{HERE-YOUR-WALLABAG-HOST}/oauth/v2/token\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"grant_type\",\n              \"value\": \"password\"\n            },\n            {\n              \"name\": \"client_id\",\n              \"value\": \"{HERE-YOUR-CLIENT_ID}\"\n            },\n            {\n              \"name\": \"client_secret\",\n              \"value\": \"{HERE-YOUR-CLIENT_SECRET}\"\n            },\n            {\n              \"name\": \"username\",\n              \"value\": \"{HERE-YOUR-USERNAME}\"\n            },\n            {\n              \"name\": \"password\",\n              \"value\": \"{HERE-YOUR-PASSWORD}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        710,\n        470\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Get stared articles\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        490,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"http://{HERE-YOUR-TTRSS-HOST}/tt-rss/api/\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"sid\",\n              \"value\": \"={{$json[\\\"content\\\"][\\\"session_id\\\"]}}\"\n            },\n            {\n              \"name\": \"op\",\n              \"value\": \"getHeadLines\"\n            },\n            {\n              \"name\": \"feed_id\",\n              \"value\": \"-1\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Auth TTRss\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        320,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"http://{HERE-YOUR-TTRSS-HOST}/tt-rss/api/\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"bodyParametersUi\": {\n          \"parameter\": [\n            {\n              \"name\": \"op\",\n              \"value\": \"login\"\n            },\n            {\n              \"name\": \"user\",\n              \"value\": \"{HERE-YOUR-API-USER}\"\n            },\n            {\n              \"name\": \"password\",\n              \"value\": \"{HERE-YOUR-API-SECRET}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"settings\": {},\n  \"connections\": {\n    \"IF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"NoOp\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Cron\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Auth TTRss\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Function\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Function\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Auth TTRss\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get stared articles\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Auth Wallabag\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Get stared articles\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On clicking 'execute'\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Auth TTRss\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}