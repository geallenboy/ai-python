{
  "url": "https://n8n.io/workflows/3033-callforge-03-gong-transcript-processor-and-salesforce-enricher/",
  "title": "CallForge - 03 - Gong Transcript Processor and Salesforce Enricher",
  "author": "Angel Menendez",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-26",
  "categories": [
    {
      "name": "Sales"
    },
    {
      "name": "Product"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"e893e48c-1b69-413a-90d7-ad6ce5987e7c\",\"name\":\"Execute Workflow Trigger\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[-180,-60],\"parameters\":{},\"typeVersion\":1},{\"id\":\"1c42e95b-705d-43ae-91ce-1029334b9e9a\",\"name\":\"Retrieve detailed call data\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[60,40],\"parameters\":{\"url\":\"https://api.gong.io/v2/calls/extensive\",\"options\":{\"fullResponse\":true},\"requestMethod\":\"POST\",\"authentication\":\"genericCredentialType\",\"jsonParameters\":true,\"genericAuthType\":\"httpHeaderAuth\",\"bodyParametersJson\":\"={\\n  \\\"contentSelector\\\": {\\n    \\\"context\\\": \\\"Extended\\\",\\n    \\\"contextTiming\\\": [\\\"Now\\\", \\\"TimeOfCall\\\"],\\n    \\\"exposedFields\\\": {\\n      \\\"collaboration\\\": {\\n        \\\"publicComments\\\": true\\n      },\\n      \\\"content\\\": {\\n        \\\"pointsOfInterest\\\": true,\\n        \\\"structure\\\": true,\\n        \\\"topics\\\": true,\\n        \\\"trackers\\\": true\\n      },\\n      \\\"interaction\\\": {\\n        \\\"personInteractionStats\\\": true,\\n        \\\"questions\\\": true,\\n        \\\"speakers\\\": true,\\n        \\\"video\\\": true\\n      },\\n      \\\"media\\\": false,\\n      \\\"parties\\\": true\\n    }\\n  },\\n  \\\"filter\\\": {\\n    \\\"callIds\\\": [\\\"{{ $json['calldata[0].calls'].id }}\\\"]\\n  }\\n}\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"Bz7PHFY0lgEhLsC0\",\"name\":\"Giulio Gong API\"}},\"typeVersion\":2},{\"id\":\"69c9ef1a-9ef4-4c3f-ab62-a5c9b2a10a4e\",\"name\":\"Get transcript\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[60,-140],\"parameters\":{\"url\":\"https://api.gong.io/v2/calls/transcript?callIds=1807130744801961509\",\"options\":{\"fullResponse\":true},\"requestMethod\":\"POST\",\"authentication\":\"genericCredentialType\",\"jsonParameters\":true,\"genericAuthType\":\"httpHeaderAuth\",\"bodyParametersJson\":\"={\\\"filter\\\":{\\\"callIds\\\":[\\\"{{ $json['calldata[0].calls'].id }}\\\"]}}\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"Bz7PHFY0lgEhLsC0\",\"name\":\"Giulio Gong API\"}},\"typeVersion\":2},{\"id\":\"a9643d2c-6245-4c40-92ee-49eb667e3348\",\"name\":\"Join Transcript to String\",\"type\":\"n8n-nodes-base.set\",\"position\":[260,-140],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"c9828e0c-fce4-487d-b5cb-bff625cb7c8e\",\"name\":\"Conversation\",\"type\":\"array\",\"value\":\"={{ $jmespath($json.body.callTranscripts, '[].transcript[].{\\\"speaker\\\": speakerId, \\\"text\\\": sentences[].text}') }}\"}]}},\"typeVersion\":3.4},{\"id\":\"ce7cce2a-95b2-4d74-865d-d1af028e16de\",\"name\":\"Isolate Notion Data\",\"type\":\"n8n-nodes-base.set\",\"position\":[2720,-100],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"ee14c39a-1590-4262-b5ab-36640a6e3c31\",\"name\":\"metaData.CompanyName\",\"type\":\"string\",\"value\":\"={{ $json.sfOpp[0].Name }}\"},{\"id\":\"0d323985-076c-456f-bf4c-d9520b07f73d\",\"name\":\"Attendees.internal\",\"type\":\"array\",\"value\":\"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`Internal`].emailAddress') }}\"},{\"id\":\"ee040180-fce4-4d68-a406-26a88a383c14\",\"name\":\"metaData.title\",\"type\":\"string\",\"value\":\"={{ $json.gongData[0].metaData.title }}\"},{\"id\":\"dea503f9-d575-4804-bbe7-0dcf7d5fbea4\",\"name\":\"metaData.started\",\"type\":\"string\",\"value\":\"={{ $json.gongData[0].metaData.started }}\"},{\"id\":\"91fa2545-6a02-43e6-b893-4d3133540a5c\",\"name\":\"metaData.GongCallID\",\"type\":\"string\",\"value\":\"={{ $json.gongData[0].metaData.id }}\"},{\"id\":\"c0cbfa8b-40d1-4838-a375-88ea8eb85170\",\"name\":\"metaData.url\",\"type\":\"string\",\"value\":\"={{ $json.gongData[0].metaData.url }}\"},{\"id\":\"d10a0184-f17c-4fd6-aed5-72656e15f856\",\"name\":\"Conversation\",\"type\":\"string\",\"value\":\"={{ $json.gongData[0].conversationText }}\"},{\"id\":\"02eb0113-7e52-4931-bd10-3f2bee87d984\",\"name\":\"Attendees.external\",\"type\":\"array\",\"value\":\"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress') }}\"},{\"id\":\"c2183c7b-d552-4a16-bb08-c9ed247f8111\",\"name\":\"Attendees.externalNames\",\"type\":\"array\",\"value\":\"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].name') }}\"},{\"id\":\"a232bd40-ae56-4c12-8b3f-9062d4880415\",\"name\":\"Attendees.internalNames\",\"type\":\"array\",\"value\":\"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`Internal`].name') }}\"},{\"id\":\"99f7143e-af6c-45d2-b3a1-c5169c6632eb\",\"name\":\"metaData.Integrations\",\"type\":\"string\",\"value\":\"={{ $('Execute Workflow Trigger').item.json['calldata[1].integrations'] }}\"},{\"id\":\"7fe14a89-5fda-4594-8b5a-6fbd8a519db9\",\"name\":\"metaData.Competitors\",\"type\":\"string\",\"value\":\"={{ $('Execute Workflow Trigger').item.json['calldata[2].competitors'] }}\"},{\"id\":\"29fb3dbe-071c-4b02-9dd9-afa4c3a4ad8f\",\"name\":\"metaData.domain\",\"type\":\"string\",\"value\":\"={{ \\n  (() => {\\n    // List of known free email domains\\n    const freeEmailDomains = [\\n      'gmail.com',\\n      'yahoo.com',\\n      'hotmail.com',\\n      'outlook.com',\\n      'aol.com',\\n      'icloud.com',\\n      'mail.com',\\n      'yandex.com',\\n      'protonmail.com'\\n    ];\\n\\n    // Extract email addresses using JMESPath\\n    const emailAddresses = $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress');\\n\\n    // Function to extract the domain from an email address\\n    const extractDomain = (email) => email.match(/@([\\\\w.-]+)/)?.[1];\\n\\n    // Filter out free email domains\\n    const companyDomains = emailAddresses\\n      .map(extractDomain)\\n      .filter(domain => domain && !freeEmailDomains.includes(domain.toLowerCase()));\\n\\n    // Return the first non-free domain or \\\"Unknown\\\" if none are found\\n    return companyDomains[0] || 'Unknown';\\n  })()\\n}}\"},{\"id\":\"b28eb61e-6052-4022-9d31-447dbf877982\",\"name\":\"sfOpp\",\"type\":\"array\",\"value\":\"={{ $json.sfOpp }}\"}]}},\"typeVersion\":3.4},{\"id\":\"38574bd1-82f3-4499-9369-9241e41b35d1\",\"name\":\"Join Affiliation\",\"type\":\"n8n-nodes-base.code\",\"position\":[740,-120],\"parameters\":{\"jsCode\":\"// Retrieve input data from all items\\nconst inputData = $input.all();\\nconst originalJson = inputData[0].json; // Get the original JSON data\\nconst conversation = originalJson.Conversation;\\nconst parties = originalJson.parties;\\n\\n// Create a mapping of speakerId to affiliation\\nconst affiliationMap = {};\\nparties.forEach(party => {\\n  affiliationMap[party.speakerId] = party.affiliation;\\n});\\n\\n// Replace speakerId with affiliation in the conversation data\\nconst updatedConversation = conversation.map(entry => {\\n  const affiliation = affiliationMap[entry.speaker] || 'Unknown'; // Fallback to 'Unknown' if not found\\n  return {\\n    ...entry,\\n    speaker: affiliation, // Replace speakerId with affiliation\\n  };\\n});\\n\\n// Return the updated conversation along with the original JSON data\\nreturn [{ json: { ...originalJson, updatedConversation } }];\\n\"},\"typeVersion\":2},{\"id\":\"15809205-cb1d-4d83-8c67-35ab486071b2\",\"name\":\"Join conversation\",\"type\":\"n8n-nodes-base.code\",\"position\":[940,-120],\"parameters\":{\"jsCode\":\"// Retrieve the original JSON data\\nconst originalJson = $json;\\nconst conversation = originalJson.updatedConversation;\\n\\n// Create an array to hold the formatted lines\\nconst formattedLines = [];\\n\\n// Iterate over each entry in the conversation\\nconversation.forEach(entry => {\\n  const speaker = entry.speaker;\\n  const texts = entry.text;\\n\\n  // Iterate over each text item and format it as \\\"speaker: text\\\"\\n  texts.forEach(line => {\\n    formattedLines.push(`${speaker}: ${line}`);\\n  });\\n});\\n\\n// Join the formatted lines with newline characters\\nconst result = formattedLines.join('\\\\n');\\n\\n// Return the original JSON data along with the new conversationText field\\nreturn [{ json: { ...originalJson, conversationText: result } }];\\n\"},\"typeVersion\":2},{\"id\":\"1ac9e862-ddf2-4cd5-9339-c69061182231\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-600,-500],\"parameters\":{\"width\":340,\"height\":820,\"content\":\"![Callforge](https://uploads.n8n.io/templates/callforgeshadow.png)\\n## CallForge - The AI Gong Sales Call Processor\\nCallForge allows you to extract important information for different departments from your Sales Gong Calls. \\n\\n### Transcript PreProcessor\\nThis workflow preps the call transcripts to pass into the call processor. It starts by using the code node to separate the different speakers into either Internal or External speaker. It also pulls data from Salesforce to enrich the call data by pulling things such as company name. \"},\"typeVersion\":1},{\"id\":\"7d8f99e2-13c7-4bf2-becc-c7b5c663028d\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-240,-340],\"parameters\":{\"color\":7,\"width\":720,\"height\":660,\"content\":\"## Get Gong Transcript and Call Details\\nThe transcript is to pass into the AI prompt, but needs to be transformed first. The Call details provide the Prompt with metadata.\"},\"typeVersion\":1},{\"id\":\"1454276d-46e6-40b2-9494-c9c380f3eaa1\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[500,-340],\"parameters\":{\"color\":7,\"width\":580,\"height\":660,\"content\":\"## Format Call Transcript \\nHere we join the call transcript together and then set the speaker as either Internal (for our sales team) or External (for our customers). \"},\"typeVersion\":1},{\"id\":\"d7fa6f56-8234-4995-b559-4809095efcb4\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1100,-340],\"parameters\":{\"color\":7,\"width\":1320,\"height\":780,\"content\":\"## Enrich Call Data\\nHere we get the Pipedrive ID using the email domain and use that to search pipedrive for the customer. We also pass the domain into the People Data Labs api to get location data. \"},\"typeVersion\":1},{\"id\":\"b5274357-4e45-4d8b-938d-b3c66f98c82f\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2440,-340],\"parameters\":{\"color\":7,\"width\":480,\"height\":660,\"content\":\"## Extract Final Data Blob\\nHere we merge the final outputs and get rid of anything we don't need for the final AI prompt. \"},\"typeVersion\":1},{\"id\":\"a940a941-f9e2-4449-895f-3268e2203a1e\",\"name\":\"Extract SF Opp Data\",\"type\":\"n8n-nodes-base.set\",\"position\":[1700,80],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"64f7f8ec-3c1c-4743-9e5b-6bb5d385e9d2\",\"name\":\"SFOppId\",\"type\":\"string\",\"value\":\"={{ $json.Id }}\"},{\"id\":\"85629904-617a-4a5f-87a3-72f2349cdf99\",\"name\":\"OppType\",\"type\":\"string\",\"value\":\"={{ $json.Type }}\"},{\"id\":\"f6ec091d-0784-4000-ad49-3bb6ece375ca\",\"name\":\"LeadSource\",\"type\":\"string\",\"value\":\"={{ $json.LeadSource }}\"},{\"id\":\"a3fd520e-3577-4c2d-a09a-ad3bc76e0bd7\",\"name\":\"IsClosed\",\"type\":\"boolean\",\"value\":\"={{ $json.IsClosed }}\"},{\"id\":\"8a1fac85-5f1b-4ab2-86ea-586df1e2af2b\",\"name\":\"IsWon\",\"type\":\"boolean\",\"value\":\"={{ $json.IsWon }}\"},{\"id\":\"0f86f2a2-94bb-412a-b831-974f2528fca3\",\"name\":\"sfStage\",\"type\":\"string\",\"value\":\"={{ $json.StageName }}\"},{\"id\":\"f455d38b-d48a-483c-b0d9-def9514741ef\",\"name\":\"companyAccountId\",\"type\":\"string\",\"value\":\"={{ $json.AccountId }}\"},{\"id\":\"1eb560db-3dd8-46cb-993d-0e370e25222f\",\"name\":\"usingn8n\",\"type\":\"string\",\"value\":\"={{ $json.n8n_experience__c }}\"},{\"id\":\"e1d251e3-40e5-4b63-bbc3-c45e503bb108\",\"name\":\"ForecastCategory\",\"type\":\"string\",\"value\":\"={{ $json.ForecastCategory }}\"}]}},\"typeVersion\":3.4},{\"id\":\"0b2b5078-96b5-423c-82d1-278f013ecdff\",\"name\":\"Extract SF Opp Data1\",\"type\":\"n8n-nodes-base.set\",\"position\":[1880,260],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"261c0f53-82d1-4deb-ae52-09ea342d0f88\",\"name\":\"Employees\",\"type\":\"string\",\"value\":\"={{ $json.Employees_Bucket__c }}\"},{\"id\":\"ca1c9890-4a7d-43c6-b7ad-bf1d522574a7\",\"name\":\"Name\",\"type\":\"string\",\"value\":\"={{ $json.Name }}\"}]}},\"typeVersion\":3.4},{\"id\":\"fec915a1-10ea-4be6-a15f-cea0ae837633\",\"name\":\"Get Opp Data\",\"type\":\"n8n-nodes-base.salesforce\",\"position\":[1460,80],\"parameters\":{\"resource\":\"opportunity\",\"operation\":\"get\",\"opportunityId\":\"={{ $('Execute Workflow Trigger').item.json[\\\"calldata[0].calls\\\"].sfOpp }}\"},\"credentials\":{\"salesforceOAuth2Api\":{\"id\":\"Ykybxuyh0jK0o3qH\",\"name\":\"Angel SF Creds v3\"}},\"typeVersion\":1},{\"id\":\"793127ea-d1c7-4f29-a536-c87ece9d6601\",\"name\":\"Get account data\",\"type\":\"n8n-nodes-base.salesforce\",\"position\":[1700,260],\"parameters\":{\"resource\":\"account\",\"accountId\":\"={{ $json.AccountId }}\",\"operation\":\"get\"},\"credentials\":{\"salesforceOAuth2Api\":{\"id\":\"Ykybxuyh0jK0o3qH\",\"name\":\"Angel SF Creds v3\"}},\"typeVersion\":1},{\"id\":\"249ef11d-47b3-415c-aac0-13437c1fd5c8\",\"name\":\"Extract Call Data\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[260,40],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"body.calls\"},\"typeVersion\":1},{\"id\":\"a572d7e8-6613-4f46-8abf-9a254f22cfc1\",\"name\":\"Merge call and transcript Data\",\"type\":\"n8n-nodes-base.merge\",\"position\":[540,-120],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineByPosition\"},\"typeVersion\":3},{\"id\":\"1bcbafc1-5ef5-43a4-af2a-9689888fc086\",\"name\":\"Aggregate Gong Call Transcript\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[1720,-120],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\",\"destinationFieldName\":\"gongData\"},\"typeVersion\":1},{\"id\":\"df307a52-512d-4397-8d22-a8a51a06fe21\",\"name\":\"Get External Attendees Emails\",\"type\":\"n8n-nodes-base.set\",\"position\":[1280,80],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"0a813814-2e7d-40e0-961f-ba59baf5ece5\",\"name\":\"externalAttendees\",\"type\":\"array\",\"value\":\"={{ $jmespath($json.parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress') }}\"}]}},\"typeVersion\":3.4},{\"id\":\"a4c7450e-5ad6-4e2f-ab72-0f56ae1390c1\",\"name\":\"Combine Salesforce Opp Data\",\"type\":\"n8n-nodes-base.merge\",\"position\":[2060,100],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineByPosition\"},\"typeVersion\":3},{\"id\":\"8c201ee7-16f7-4c05-8f6c-d3543c4445e0\",\"name\":\"Aggregate Salesforce data\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[2260,100],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\",\"destinationFieldName\":\"sfOpp\"},\"typeVersion\":1},{\"id\":\"735173b9-cec1-43b3-94c5-13dc368473dd\",\"name\":\"Merge Enriched Transcript Data\",\"type\":\"n8n-nodes-base.merge\",\"position\":[2520,-100],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineByPosition\"},\"typeVersion\":3}],\"pinData\":{},\"connections\":{\"Get Opp Data\":{\"main\":[[{\"node\":\"Extract SF Opp Data\",\"type\":\"main\",\"index\":0},{\"node\":\"Get account data\",\"type\":\"main\",\"index\":0}]]},\"Get transcript\":{\"main\":[[{\"node\":\"Join Transcript to String\",\"type\":\"main\",\"index\":0}]]},\"Get account data\":{\"main\":[[{\"node\":\"Extract SF Opp Data1\",\"type\":\"main\",\"index\":0}]]},\"Join Affiliation\":{\"main\":[[{\"node\":\"Join conversation\",\"type\":\"main\",\"index\":0}]]},\"Extract Call Data\":{\"main\":[[{\"node\":\"Merge call and transcript Data\",\"type\":\"main\",\"index\":1}]]},\"Join conversation\":{\"main\":[[{\"node\":\"Get External Attendees Emails\",\"type\":\"main\",\"index\":0},{\"node\":\"Aggregate Gong Call Transcript\",\"type\":\"main\",\"index\":0}]]},\"Extract SF Opp Data\":{\"main\":[[{\"node\":\"Combine Salesforce Opp Data\",\"type\":\"main\",\"index\":0}]]},\"Extract SF Opp Data1\":{\"main\":[[{\"node\":\"Combine Salesforce Opp Data\",\"type\":\"main\",\"index\":1}]]},\"Execute Workflow Trigger\":{\"main\":[[{\"node\":\"Get transcript\",\"type\":\"main\",\"index\":0},{\"node\":\"Retrieve detailed call data\",\"type\":\"main\",\"index\":0}]]},\"Aggregate Salesforce data\":{\"main\":[[{\"node\":\"Merge Enriched Transcript Data\",\"type\":\"main\",\"index\":1}]]},\"Join Transcript to String\":{\"main\":[[{\"node\":\"Merge call and transcript Data\",\"type\":\"main\",\"index\":0}]]},\"Combine Salesforce Opp Data\":{\"main\":[[{\"node\":\"Aggregate Salesforce data\",\"type\":\"main\",\"index\":0}]]},\"Retrieve detailed call data\":{\"main\":[[{\"node\":\"Extract Call Data\",\"type\":\"main\",\"index\":0}]]},\"Get External Attendees Emails\":{\"main\":[[{\"node\":\"Get Opp Data\",\"type\":\"main\",\"index\":0}]]},\"Aggregate Gong Call Transcript\":{\"main\":[[{\"node\":\"Merge Enriched Transcript Data\",\"type\":\"main\",\"index\":0}]]},\"Merge Enriched Transcript Data\":{\"main\":[[{\"node\":\"Isolate Notion Data\",\"type\":\"main\",\"index\":0}]]},\"Merge call and transcript Data\":{\"main\":[[{\"node\":\"Join Affiliation\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "![callforgecompressed.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/callforgecompressed_8b448da7e9.png)\n\n* * *\n\n# **CallForge - AI Gong Transcript PreProcessor**\n\nTransform your **[Gong.io](http://Gong.io)** call transcripts into structured, enriched, and AI-ready data for **better sales insights and analytics**.\n\n## **Who is This For?**\n\nThis workflow is designed for:  \n✅ **Sales teams** looking to automate call transcript formatting.  \n✅ **Revenue operations (RevOps) professionals** optimizing AI-driven insights.  \n✅ **Businesses using[Gong.io](http://Gong.io)** that need **structured, enriched call transcripts** for better decision-making.\n\n## **What Problem Does This Workflow Solve?**\n\nManually processing raw **Gong call transcripts** is inefficient and often lacks essential **context for AI-driven insights**.\n\nWith **CallForge** , you can:  \n✔ **Extract and format Gong call transcripts** for structured AI processing.  \n✔ **Enhance metadata** using sales data from **Salesforce**.  \n✔ **Classify speakers** as **internal (sales team)** or **external (customers)**.  \n✔ **Identify external companies** by filtering out free email domains (e.g., Gmail, Yahoo).  \n✔ **Enrich customer profiles** using **PeopleDataLabs** to identify company details and locations.  \n✔ **Prepare transcripts for AI models** by structuring conversations and removing unnecessary noise.\n\n## **What This Workflow Does**\n\n### **1\\. Retrieves Gong Call Data**\n\n  * Calls the **Gong API** to extract **call metadata, speaker interactions, and collaboration details**.\n  * Fetches **call transcripts** for AI processing.\n\n\n\n### **2\\. Processes and Cleans Transcripts**\n\n  * Converts **call transcripts** into **structured, speaker-based dialogues**.\n  * Assigns each speaker as either **Internal (Sales Team)** or **External (Customer)**.\n\n\n\n### **3\\. Extracts Company Information**\n\n  * **Retrieves Salesforce data** to match customers with existing sales opportunities.\n  * **Filters out free email domains** to determine the **customer’s actual company domain**.\n  * Calls the **PeopleDataLabs API** to retrieve additional **company data and location details**.\n\n\n\n### **4\\. Merges and Enriches Data**\n\n  * **Combines Gong metadata, Salesforce customer details and insights**.\n  * Ensures all necessary data is available for **AI-driven sales insights**.\n\n\n\n### **5\\. Final Formatting for AI Processing**\n\n  * Merges all **call transcript data** into a **single structured format** for AI analysis.\n  * Extracts the final **cleaned, enriched dataset** for further **AI-powered insights**.\n\n\n\n## **How to Set Up This Workflow**\n\n### **1\\. Connect Your APIs**\n\n🔹 **Gong API Access** – Set up your Gong API credentials in n8n.  \n🔹 **Salesforce Setup** – Ensure API access if you want customer enrichment.  \n🔹 **PeopleDataLabs API** – Required to retrieve company and location details based on email domains.  \n🔹 **Webhook Integration** – Modify the webhook call to **push enriched call data** to an internal system.\n\n  * [CallForge - 01 - Filter Gong Calls Synced to Salesforce by Opportunity Stage](https://n8n.io/workflows/3031-callforge-01-filter-gong-calls-synced-to-salesforce-by-opportunity-stage/)\n  * [CallForge - 02 - Prep Gong Calls with Sheets & Notion for AI Summarization](https://n8n.io/workflows/3032-callforge-02-prep-gong-calls-with-sheets-and-notion-for-ai-summarization/)\n  * [CallForge - 03 - Gong Transcript Processor and Salesforce Enricher](https://n8n.io/workflows/3033-callforge-03-gong-transcript-processor-and-salesforce-enricher/)\n  * [CallForge - 04 - AI Workflow for Gong.io Sales Calls](https://n8n.io/workflows/3034-callforge-04-ai-workflow-for-gongio-sales-calls/)\n  * [CallForge - 05 - Gong.io Call Analysis with Azure AI & CRM Sync](https://n8n.io/workflows/3035-callforge-05-gongio-call-analysis-with-azure-ai-and-crm-sync/)\n  * [CallForge - 06 - Automate Sales Insights with Gong.io, Notion & AI](https://n8n.io/workflows/3036-callforge-06-automate-sales-insights-with-gongio-notion-and-ai/)\n  * [CallForge - 07 - AI Marketing Data Processing with Gong & Notion](https://n8n.io/workflows/3037-callforge-07-ai-marketing-data-processing-with-gong-and-notion/)\n  * [CallForge - 08 - AI Product Insights from Sales Calls with Notion](https://n8n.io/workflows/3039-callforge-08-ai-product-insights-from-sales-calls-with-notion/)\n\n\n\n## **How to Customize This Workflow**\n\n💡 **Modify Data Sources** – Connect different CRMs (e.g., **HubSpot, Zoho**) instead of Salesforce.  \n💡 **Expand AI Analysis** – Add another **AI model (e.g., OpenAI GPT, Claude)** for advanced conversation insights.  \n💡 **Change Speaker Classification Rules** – Adjust **internal vs. external speaker logic** to match your team’s structure.  \n💡 **Filter Specific Customers** – Modify the **free email filtering logic** to better fit your company’s needs.\n\n## **Why Use CallForge?**\n\n🚀 **Automate Gong call transcript processing** to save time.  \n📊 **Improve AI accuracy** with enriched, structured data.  \n🛠 **Enhance sales strategy** by extracting actionable insights from calls.\n\n**Start optimizing your Gong transcript analysis today!**\n",
  "crawled_at": "2025-05-26T03:32:07.082596",
  "readme_zh": "![callforgecompressed.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/callforgecompressed_8b448da7e9.png)\n\n* * *\n\n# **CallForge - AI通话转录预处理工具**\n\n将您的**[Gong.io](http://Gong.io)**通话转录转化为结构化、增强且适配AI处理的数据，**获取更优质的销售洞察与分析**。\n\n## **适用对象**\n\n本工作流专为以下场景设计：  \n✅ **销售团队**：希望自动化处理通话转录格式  \n✅ **营收运营(RevOps)专家**：优化AI驱动的洞察分析  \n✅ **使用[Gong.io](http://Gong.io)的企业**：需要**结构化增强版通话记录**辅助决策  \n\n## **解决的核心痛点**\n\n人工处理原始**Gong通话记录**效率低下，且往往缺乏**AI分析所需的关键上下文**。\n\n通过**CallForge**，您可以：  \n✔ **提取并格式化Gong通话记录**，实现结构化AI处理  \n✔ 利用**Salesforce**销售数据**增强元数据**  \n✔ 将发言者分类为**内部成员（销售团队）**或**外部人员（客户）**  \n✔ 通过过滤免费邮箱域名（如Gmail、Yahoo）**识别外部企业**  \n✔ 使用**PeopleDataLabs**完善客户档案，获取企业详情与地理位置  \n✔ 通过结构化对话内容并剔除无效信息，**为AI模型准备转录文本**  \n\n## **核心功能**\n\n### **1. 获取Gong通话数据**\n\n  * 调用**Gong API**提取**通话元数据、发言互动及协作细节**  \n  * 获取**通话转录文本**用于AI处理  \n\n### **2. 处理并清洗文本**\n\n  * 将**通话记录**转化为**结构化分角色对话**  \n  * 标注每位发言者为**内部（销售团队）**或**外部（客户）**  \n\n### **3. 提取企业信息**\n\n  * **调取Salesforce数据**匹配现有销售机会中的客户  \n  * **过滤免费邮箱域名**，确认**客户真实企业域名**  \n  * 调用**PeopleDataLabs API**获取补充**企业数据与位置信息**  \n\n### **4. 数据融合与增强**\n\n  * **整合Gong元数据、Salesforce客户详情及洞察**  \n  * 确保所有数据就绪，支持**AI驱动的销售分析**  \n\n### **5. AI处理终稿格式化**\n\n  * 将所有**通话记录数据**合并为**单一结构化格式**供AI分析  \n  * 输出最终**清洗后的增强数据集**，用于**AI深度洞察**  \n\n## **配置指南**\n\n### **1. 连接API**\n\n🔹 **Gong API** – 在n8n配置您的Gong API凭证  \n🔹 **Salesforce** – 如需客户数据增强，确保开启API访问  \n🔹 **PeopleDataLabs API** – 基于邮箱域名获取企业及位置详情  \n🔹 **Webhook集成** – 修改webhook调用以**推送增强数据**至内部系统  \n\n  * [CallForge - 01 - 按商机阶段筛选与Salesforce同步的Gong通话](https://n8n.io/workflows/3031-callforge-01-filter-gong-calls-synced-to-salesforce-by-opportunity-stage/)  \n  * [CallForge - 02 - 使用Sheets和Notion为AI摘要准备Gong通话](https://n8n.io/workflows/3032-callforge-02-prep-gong-calls-with-sheets-and-notion-for-ai-summarization/)  \n  * [CallForge - 03 - Gong转录处理器与Salesforce增强器](https://n8n.io/workflows/3033-callforge-03-gong-transcript-processor-and-salesforce-enricher/)  \n  * [CallForge - 04 - Gong销售通话AI分析工作流](https://n8n.io/workflows/3034-callforge-04-ai-workflow-for-gongio-sales-calls/)  \n  * [CallForge - 05 - 基于Azure AI的Gong通话分析与CRM同步](https://n8n.io/workflows/3035-callforge-05-gongio-call-analysis-with-azure-ai-and-crm-sync/)  \n  * [CallForge - 06 - Gong与Notion及AI的销售洞察自动化](https://n8n.io/workflows/3036-callforge-06-automate-sales-insights-with-gongio-notion-and-ai/)  \n  * [CallForge - 07 - Gong与Notion的AI营销数据处理](https://n8n.io/workflows/3037-callforge-07-ai-marketing-data-processing-with-gong-and-notion/)  \n  * [CallForge - 08 - 从销售通话中提取AI产品洞察至Notion](https://n8n.io/workflows/3039-callforge-08-ai-product-insights-from-sales-calls-with-notion/)  \n\n## **定制化方案**\n\n💡 **更换数据源** – 对接其他CRM（如**HubSpot、Zoho**）替代Salesforce  \n💡 **扩展AI分析** – 增加**AI模型（如OpenAI GPT、Claude）**获取深度对话洞察  \n💡 **调整发言者分类规则** – 根据团队结构自定义**内外部分类逻辑**  \n💡 **特定客户筛选** – 修改**免费邮箱过滤逻辑**以适配业务需求  \n\n## **选择CallForge的理由**\n\n🚀 **自动化处理Gong通话记录**，节省时间成本  \n📊 **通过增强结构化数据提升AI分析准确度**  \n🛠 **从通话中提取可执行洞察**，优化销售策略  \n\n**立即开启您的Gong转录分析优化之旅！**",
  "title_zh": "CallForge - 03 - 会议记录处理器与Salesforce数据增强器",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"cb484ba7b742928a2048bf8829668bed5b5ad9787579adea888f05980292a4a7\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"e893e48c-1b69-413a-90d7-ad6ce5987e7c\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -180,\n        -60\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1c42e95b-705d-43ae-91ce-1029334b9e9a\",\n      \"name\": \"Retrieve detailed call data\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        60,\n        40\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.gong.io/v2/calls/extensive\",\n        \"options\": {\n          \"fullResponse\": true\n        },\n        \"requestMethod\": \"POST\",\n        \"authentication\": \"genericCredentialType\",\n        \"jsonParameters\": true,\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"bodyParametersJson\": \"={\\n  \\\"contentSelector\\\": {\\n    \\\"context\\\": \\\"Extended\\\",\\n    \\\"contextTiming\\\": [\\\"Now\\\", \\\"TimeOfCall\\\"],\\n    \\\"exposedFields\\\": {\\n      \\\"collaboration\\\": {\\n        \\\"publicComments\\\": true\\n      },\\n      \\\"content\\\": {\\n        \\\"pointsOfInterest\\\": true,\\n        \\\"structure\\\": true,\\n        \\\"topics\\\": true,\\n        \\\"trackers\\\": true\\n      },\\n      \\\"interaction\\\": {\\n        \\\"personInteractionStats\\\": true,\\n        \\\"questions\\\": true,\\n        \\\"speakers\\\": true,\\n        \\\"video\\\": true\\n      },\\n      \\\"media\\\": false,\\n      \\\"parties\\\": true\\n    }\\n  },\\n  \\\"filter\\\": {\\n    \\\"callIds\\\": [\\\"{{ $json['calldata[0].calls'].id }}\\\"]\\n  }\\n}\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"Bz7PHFY0lgEhLsC0\",\n          \"name\": \"Giulio Gong API\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"69c9ef1a-9ef4-4c3f-ab62-a5c9b2a10a4e\",\n      \"name\": \"Get transcript\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        60,\n        -140\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.gong.io/v2/calls/transcript?callIds=1807130744801961509\",\n        \"options\": {\n          \"fullResponse\": true\n        },\n        \"requestMethod\": \"POST\",\n        \"authentication\": \"genericCredentialType\",\n        \"jsonParameters\": true,\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"bodyParametersJson\": \"={\\\"filter\\\":{\\\"callIds\\\":[\\\"{{ $json['calldata[0].calls'].id }}\\\"]}}\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"Bz7PHFY0lgEhLsC0\",\n          \"name\": \"Giulio Gong API\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a9643d2c-6245-4c40-92ee-49eb667e3348\",\n      \"name\": \"Join Transcript to String\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        260,\n        -140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c9828e0c-fce4-487d-b5cb-bff625cb7c8e\",\n              \"name\": \"Conversation\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.body.callTranscripts, '[].transcript[].{\\\"speaker\\\": speakerId, \\\"text\\\": sentences[].text}') }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"ce7cce2a-95b2-4d74-865d-d1af028e16de\",\n      \"name\": \"Isolate Notion Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2720,\n        -100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ee14c39a-1590-4262-b5ab-36640a6e3c31\",\n              \"name\": \"metaData.CompanyName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.sfOpp[0].Name }}\"\n            },\n            {\n              \"id\": \"0d323985-076c-456f-bf4c-d9520b07f73d\",\n              \"name\": \"Attendees.internal\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`Internal`].emailAddress') }}\"\n            },\n            {\n              \"id\": \"ee040180-fce4-4d68-a406-26a88a383c14\",\n              \"name\": \"metaData.title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].metaData.title }}\"\n            },\n            {\n              \"id\": \"dea503f9-d575-4804-bbe7-0dcf7d5fbea4\",\n              \"name\": \"metaData.started\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].metaData.started }}\"\n            },\n            {\n              \"id\": \"91fa2545-6a02-43e6-b893-4d3133540a5c\",\n              \"name\": \"metaData.GongCallID\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].metaData.id }}\"\n            },\n            {\n              \"id\": \"c0cbfa8b-40d1-4838-a375-88ea8eb85170\",\n              \"name\": \"metaData.url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].metaData.url }}\"\n            },\n            {\n              \"id\": \"d10a0184-f17c-4fd6-aed5-72656e15f856\",\n              \"name\": \"Conversation\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.gongData[0].conversationText }}\"\n            },\n            {\n              \"id\": \"02eb0113-7e52-4931-bd10-3f2bee87d984\",\n              \"name\": \"Attendees.external\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress') }}\"\n            },\n            {\n              \"id\": \"c2183c7b-d552-4a16-bb08-c9ed247f8111\",\n              \"name\": \"Attendees.externalNames\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].name') }}\"\n            },\n            {\n              \"id\": \"a232bd40-ae56-4c12-8b3f-9062d4880415\",\n              \"name\": \"Attendees.internalNames\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.gongData[0].parties, '[?affiliation==`Internal`].name') }}\"\n            },\n            {\n              \"id\": \"99f7143e-af6c-45d2-b3a1-c5169c6632eb\",\n              \"name\": \"metaData.Integrations\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json['calldata[1].integrations'] }}\"\n            },\n            {\n              \"id\": \"7fe14a89-5fda-4594-8b5a-6fbd8a519db9\",\n              \"name\": \"metaData.Competitors\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Execute Workflow Trigger').item.json['calldata[2].competitors'] }}\"\n            },\n            {\n              \"id\": \"29fb3dbe-071c-4b02-9dd9-afa4c3a4ad8f\",\n              \"name\": \"metaData.domain\",\n              \"type\": \"string\",\n              \"value\": \"={{ \\n  (() => {\\n    // List of known free email domains\\n    const freeEmailDomains = [\\n      'gmail.com',\\n      'yahoo.com',\\n      'hotmail.com',\\n      'outlook.com',\\n      'aol.com',\\n      'icloud.com',\\n      'mail.com',\\n      'yandex.com',\\n      'protonmail.com'\\n    ];\\n\\n    // Extract email addresses using JMESPath\\n    const emailAddresses = $jmespath($json.gongData[0].parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress');\\n\\n    // Function to extract the domain from an email address\\n    const extractDomain = (email) => email.match(/@([\\\\w.-]+)/)?.[1];\\n\\n    // Filter out free email domains\\n    const companyDomains = emailAddresses\\n      .map(extractDomain)\\n      .filter(domain => domain && !freeEmailDomains.includes(domain.toLowerCase()));\\n\\n    // Return the first non-free domain or \\\"Unknown\\\" if none are found\\n    return companyDomains[0] || 'Unknown';\\n  })()\\n}}\"\n            },\n            {\n              \"id\": \"b28eb61e-6052-4022-9d31-447dbf877982\",\n              \"name\": \"sfOpp\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.sfOpp }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"38574bd1-82f3-4499-9369-9241e41b35d1\",\n      \"name\": \"Join Affiliation\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        740,\n        -120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Retrieve input data from all items\\nconst inputData = $input.all();\\nconst originalJson = inputData[0].json; // Get the original JSON data\\nconst conversation = originalJson.Conversation;\\nconst parties = originalJson.parties;\\n\\n// Create a mapping of speakerId to affiliation\\nconst affiliationMap = {};\\nparties.forEach(party => {\\n  affiliationMap[party.speakerId] = party.affiliation;\\n});\\n\\n// Replace speakerId with affiliation in the conversation data\\nconst updatedConversation = conversation.map(entry => {\\n  const affiliation = affiliationMap[entry.speaker] || 'Unknown'; // Fallback to 'Unknown' if not found\\n  return {\\n    ...entry,\\n    speaker: affiliation, // Replace speakerId with affiliation\\n  };\\n});\\n\\n// Return the updated conversation along with the original JSON data\\nreturn [{ json: { ...originalJson, updatedConversation } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"15809205-cb1d-4d83-8c67-35ab486071b2\",\n      \"name\": \"Join conversation\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        940,\n        -120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Retrieve the original JSON data\\nconst originalJson = $json;\\nconst conversation = originalJson.updatedConversation;\\n\\n// Create an array to hold the formatted lines\\nconst formattedLines = [];\\n\\n// Iterate over each entry in the conversation\\nconversation.forEach(entry => {\\n  const speaker = entry.speaker;\\n  const texts = entry.text;\\n\\n  // Iterate over each text item and format it as \\\"speaker: text\\\"\\n  texts.forEach(line => {\\n    formattedLines.push(`${speaker}: ${line}`);\\n  });\\n});\\n\\n// Join the formatted lines with newline characters\\nconst result = formattedLines.join('\\\\n');\\n\\n// Return the original JSON data along with the new conversationText field\\nreturn [{ json: { ...originalJson, conversationText: result } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1ac9e862-ddf2-4cd5-9339-c69061182231\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -600,\n        -500\n      ],\n      \"parameters\": {\n        \"width\": 340,\n        \"height\": 820,\n        \"content\": \"![Callforge](https://uploads.n8n.io/templates/callforgeshadow.png)\\n## CallForge - 智能销售通话分析系统\\nCallForge 帮助您从销售通话录音中提取关键信息，供不同部门使用。\\n\\n### 通话文本预处理流程\\n该工作流会对通话文本进行预处理，以便后续分析处理。首先通过代码节点区分内部与外部发言者，同时从Salesforce获取公司名称等数据来丰富通话内容。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7d8f99e2-13c7-4bf2-becc-c7b5c663028d\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -240,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 720,\n        \"height\": 660,\n        \"content\": \"## 获取Gong通话记录及详情\\n通话记录需经转换后才能输入AI提示框，而通话详情则为提示框提供元数据。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1454276d-46e6-40b2-9494-c9c380f3eaa1\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        500,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 580,\n        \"height\": 660,\n        \"content\": \"## 通话记录格式模板  \\n在此我们将通话记录内容整合，并标注发言者身份为内部（代表我方销售团队）或外部（代表客户方）。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d7fa6f56-8234-4995-b559-4809095efcb4\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1100,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 1320,\n        \"height\": 780,\n        \"content\": \"## 丰富通话数据\\n此处我们通过电子邮件域名获取Pipedrive ID，并利用该ID在Pipedrive中搜索客户信息。同时，我们将该域名传入People Data Labs API以获取地理位置数据。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b5274357-4e45-4d8b-938d-b3c66f98c82f\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2440,\n        -340\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 480,\n        \"height\": 660,\n        \"content\": \"## 提取最终数据块\\n在此步骤中，我们将合并最终输出结果，并剔除AI最终提示中不需要的所有内容。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a940a941-f9e2-4449-895f-3268e2203a1e\",\n      \"name\": \"Extract SF Opp Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1700,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"64f7f8ec-3c1c-4743-9e5b-6bb5d385e9d2\",\n              \"name\": \"SFOppId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Id }}\"\n            },\n            {\n              \"id\": \"85629904-617a-4a5f-87a3-72f2349cdf99\",\n              \"name\": \"OppType\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Type }}\"\n            },\n            {\n              \"id\": \"f6ec091d-0784-4000-ad49-3bb6ece375ca\",\n              \"name\": \"LeadSource\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.LeadSource }}\"\n            },\n            {\n              \"id\": \"a3fd520e-3577-4c2d-a09a-ad3bc76e0bd7\",\n              \"name\": \"IsClosed\",\n              \"type\": \"boolean\",\n              \"value\": \"={{ $json.IsClosed }}\"\n            },\n            {\n              \"id\": \"8a1fac85-5f1b-4ab2-86ea-586df1e2af2b\",\n              \"name\": \"IsWon\",\n              \"type\": \"boolean\",\n              \"value\": \"={{ $json.IsWon }}\"\n            },\n            {\n              \"id\": \"0f86f2a2-94bb-412a-b831-974f2528fca3\",\n              \"name\": \"sfStage\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.StageName }}\"\n            },\n            {\n              \"id\": \"f455d38b-d48a-483c-b0d9-def9514741ef\",\n              \"name\": \"companyAccountId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.AccountId }}\"\n            },\n            {\n              \"id\": \"1eb560db-3dd8-46cb-993d-0e370e25222f\",\n              \"name\": \"usingn8n\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.n8n_experience__c }}\"\n            },\n            {\n              \"id\": \"e1d251e3-40e5-4b63-bbc3-c45e503bb108\",\n              \"name\": \"ForecastCategory\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.ForecastCategory }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"0b2b5078-96b5-423c-82d1-278f013ecdff\",\n      \"name\": \"Extract SF Opp Data1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1880,\n        260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"261c0f53-82d1-4deb-ae52-09ea342d0f88\",\n              \"name\": \"Employees\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Employees_Bucket__c }}\"\n            },\n            {\n              \"id\": \"ca1c9890-4a7d-43c6-b7ad-bf1d522574a7\",\n              \"name\": \"Name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.Name }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"fec915a1-10ea-4be6-a15f-cea0ae837633\",\n      \"name\": \"Get Opp Data\",\n      \"type\": \"n8n-nodes-base.salesforce\",\n      \"position\": [\n        1460,\n        80\n      ],\n      \"parameters\": {\n        \"resource\": \"opportunity\",\n        \"operation\": \"get\",\n        \"opportunityId\": \"={{ $('Execute Workflow Trigger').item.json[\\\"calldata[0].calls\\\"].sfOpp }}\"\n      },\n      \"credentials\": {\n        \"salesforceOAuth2Api\": {\n          \"id\": \"Ykybxuyh0jK0o3qH\",\n          \"name\": \"Angel SF Creds v3\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"793127ea-d1c7-4f29-a536-c87ece9d6601\",\n      \"name\": \"Get account data\",\n      \"type\": \"n8n-nodes-base.salesforce\",\n      \"position\": [\n        1700,\n        260\n      ],\n      \"parameters\": {\n        \"resource\": \"account\",\n        \"accountId\": \"={{ $json.AccountId }}\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"salesforceOAuth2Api\": {\n          \"id\": \"Ykybxuyh0jK0o3qH\",\n          \"name\": \"Angel SF Creds v3\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"249ef11d-47b3-415c-aac0-13437c1fd5c8\",\n      \"name\": \"Extract Call Data\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        260,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"body.calls\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a572d7e8-6613-4f46-8abf-9a254f22cfc1\",\n      \"name\": \"Merge call and transcript Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        540,\n        -120\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1bcbafc1-5ef5-43a4-af2a-9689888fc086\",\n      \"name\": \"Aggregate Gong Call Transcript\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        1720,\n        -120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"gongData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"df307a52-512d-4397-8d22-a8a51a06fe21\",\n      \"name\": \"Get External Attendees Emails\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1280,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"0a813814-2e7d-40e0-961f-ba59baf5ece5\",\n              \"name\": \"externalAttendees\",\n              \"type\": \"array\",\n              \"value\": \"={{ $jmespath($json.parties, '[?affiliation==`External` || affiliation==`Unknown`].emailAddress') }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a4c7450e-5ad6-4e2f-ab72-0f56ae1390c1\",\n      \"name\": \"Combine Salesforce Opp Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2060,\n        100\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"8c201ee7-16f7-4c05-8f6c-d3543c4445e0\",\n      \"name\": \"Aggregate Salesforce data\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        2260,\n        100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\",\n        \"destinationFieldName\": \"sfOpp\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"735173b9-cec1-43b3-94c5-13dc368473dd\",\n      \"name\": \"Merge Enriched Transcript Data\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2520,\n        -100\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Get Opp Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract SF Opp Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Get account data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join Transcript to String\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get account data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract SF Opp Data1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Join Affiliation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join conversation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Call Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge call and transcript Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Join conversation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get External Attendees Emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Aggregate Gong Call Transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract SF Opp Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Salesforce Opp Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract SF Opp Data1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Salesforce Opp Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Retrieve detailed call data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate Salesforce data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Enriched Transcript Data\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Join Transcript to String\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge call and transcript Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Salesforce Opp Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate Salesforce data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve detailed call data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Call Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get External Attendees Emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Opp Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate Gong Call Transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Enriched Transcript Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge Enriched Transcript Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Isolate Notion Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge call and transcript Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Join Affiliation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}