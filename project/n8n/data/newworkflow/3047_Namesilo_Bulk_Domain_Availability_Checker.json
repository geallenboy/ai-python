{
  "url": "https://n8n.io/workflows/3047-namesilo-bulk-domain-availability-checker/",
  "title": "Namesilo Bulk Domain Availability Checker",
  "author": "n8n custom workflows",
  "publish_date": "Last update 3 months ago",
  "publish_date_absolute": "2025-02-26",
  "categories": [
    {
      "name": "Engineering"
    }
  ],
  "workflow_json": "{\"id\":\"phqg5Kk3YowxoMHQ\",\"meta\":{\"instanceId\":\"3b02b4d565b70d8766b64aa225626d46b11a527d9f5fe390a8405f2a09e8b8a4\"},\"name\":\"Namesilo Bulk Domain Availability [Template]\",\"tags\":[{\"id\":\"28jVdgW1S4XWqLH4\",\"name\":\"Templates\",\"createdAt\":\"2025-02-28T12:22:07.921Z\",\"updatedAt\":\"2025-02-28T12:22:07.921Z\"}],\"nodes\":[{\"id\":\"b1184b35-0ab4-42d8-a5b2-66ef926d7eed\",\"name\":\"Set Data\",\"type\":\"n8n-nodes-base.set\",\"position\":[-240,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"05a34cf0-9462-4684-aac8-32b4b17e9ef0\",\"name\":\"Domains\",\"type\":\"string\",\"value\":\"=domain1.com\\ndomain2.com\\ndomain3.com\"},{\"id\":\"438830f9-27fe-4e89-bcb9-766483e2d9b1\",\"name\":\"Namesilo API Key\",\"type\":\"string\",\"value\":\"YOUR_API_KEY\"}]}},\"typeVersion\":3.4},{\"id\":\"7fc40d31-a43b-4273-a6eb-d519fda815d4\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-800,-340],\"parameters\":{\"width\":580,\"height\":280,\"content\":\"## How-To\\n1. Claim your free Namesilo API key here: https://www.namesilo.com/account/api-manager\\n\\n2. Set your API key and domains in \\\"Set Data\\\" node.\\n\\nThe workflow send up to 200 domains per loop until all domains are processed. The output is in Excel format.\\n\\nEnjoy!\\n\\nNote: Each loop wait 5min. This is required due to Namesilo rate limits.\"},\"typeVersion\":1},{\"id\":\"a2137f76-9e08-4743-b914-b10bbebc9a13\",\"name\":\"Convert & Split Domains\",\"type\":\"n8n-nodes-base.code\",\"position\":[-60,0],\"parameters\":{\"jsCode\":\"// Get domains from input JSON\\nconst domains = $json.Domains.split(\\\"\\\\n\\\").map(domain => domain.trim()).filter(Boolean);\\n\\n// Define batch size\\nconst batchSize = 200;\\n\\n// Split into batches of 200\\nlet batches = [];\\nfor (let i = 0; i < domains.length; i += batchSize) {\\n    batches.push(domains.slice(i, i + batchSize).join(\\\",\\\"));\\n}\\n\\n// Return batches as an array\\nreturn batches.map(batch => ({ batchedDomains: batch }));\"},\"typeVersion\":2},{\"id\":\"41140017-1f98-4ea9-ac97-9d48e5bdfda1\",\"name\":\"Wait\",\"type\":\"n8n-nodes-base.wait\",\"position\":[680,-200],\"webhookId\":\"3ede79a2-7875-462f-b15a-1c74339e2a8a\",\"parameters\":{\"unit\":\"minutes\"},\"typeVersion\":1.1},{\"id\":\"9aa9ddb5-9091-4726-917c-bce9d0f207c9\",\"name\":\"Merge Results\",\"type\":\"n8n-nodes-base.code\",\"position\":[320,0],\"parameters\":{\"jsCode\":\"// This re-maps each input item (if needed)\\nconst newItems = items.map(item => ({\\n  json: {\\n    Domain: item.json.Domain,\\n    Availability: item.json.Availability\\n  }\\n}));\\n\\nreturn newItems;\"},\"typeVersion\":2},{\"id\":\"bb2fd210-fd11-4712-94d0-fabb7060705c\",\"name\":\"Loop Over Domains\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[120,0],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"5d97cd82-f7d5-4f98-a789-8c0fcf473f0f\",\"name\":\"Namesilo Requests\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[320,-200],\"parameters\":{\"url\":\"=https://www.namesilo.com/apibatch/checkRegisterAvailability?version=1&type=json&key={{ $('Set Data').item.json['Namesilo API Key'] }}&domains={{ $json.batchedDomains }}\",\"options\":{}},\"retryOnFail\":true,\"typeVersion\":4.2,\"waitBetweenTries\":5000},{\"id\":\"c4f38893-636a-4293-9e10-395be30683d0\",\"name\":\"Parse Data\",\"type\":\"n8n-nodes-base.code\",\"position\":[500,-200],\"parameters\":{\"jsCode\":\"// Ensure input data exists\\nif (!$json || !$json.data) {\\n    throw new Error(\\\"Invalid input data format\\\");\\n}\\n\\n// Parse the JSON string inside `data`\\nlet parsedData;\\ntry {\\n    parsedData = JSON.parse($json.data);\\n} catch (error) {\\n    throw new Error(\\\"Error parsing JSON data: \\\" + error.message);\\n}\\n\\n// Extract available and unavailable domains safely\\nconst availableDomains = parsedData.reply?.available ? Object.values(parsedData.reply.available) : [];\\nconst unavailableDomains = parsedData.reply?.unavailable ? Object.values(parsedData.reply.unavailable) : [];\\n\\n// Prepare the output array\\nconst output = [];\\n\\n// Process available domains\\navailableDomains.forEach(domainObj => {\\n    if (domainObj && domainObj.domain) {\\n        output.push({\\n            Domain: domainObj.domain,\\n            Availability: \\\"Available\\\"\\n        });\\n    }\\n});\\n\\n// Process unavailable domains\\nunavailableDomains.forEach(domain => {\\n    if (typeof domain === \\\"string\\\") {\\n        output.push({\\n            Domain: domain,\\n            Availability: \\\"Unavailable\\\"\\n        });\\n    } else if (typeof domain === \\\"object\\\" && domain.domain) {\\n        output.push({\\n            Domain: domain.domain,\\n            Availability: \\\"Unavailable\\\"\\n        });\\n    }\\n});\\n\\n// Return the structured data\\nreturn output;\"},\"typeVersion\":2},{\"id\":\"ec7b8311-65b7-45b0-85ae-b91d7c82e123\",\"name\":\"Convert to Excel\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[500,0],\"parameters\":{\"options\":{\"fileName\":\"domain_results.xlsx\"},\"operation\":\"xlsx\",\"binaryPropertyName\":\"={{ $json.MergedDomains }}\"},\"typeVersion\":1.1},{\"id\":\"7d33c875-ce2d-404c-97a0-f551939d59f4\",\"name\":\"Start\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-420,0],\"parameters\":{},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"1a05d4b0-db0c-4554-8abf-0547130be16c\",\"connections\":{\"Wait\":{\"main\":[[{\"node\":\"Loop Over Domains\",\"type\":\"main\",\"index\":0}]]},\"Start\":{\"main\":[[{\"node\":\"Set Data\",\"type\":\"main\",\"index\":0}]]},\"Set Data\":{\"main\":[[{\"node\":\"Convert & Split Domains\",\"type\":\"main\",\"index\":0}]]},\"Parse Data\":{\"main\":[[{\"node\":\"Wait\",\"type\":\"main\",\"index\":0}]]},\"Merge Results\":{\"main\":[[{\"node\":\"Convert to Excel\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Domains\":{\"main\":[[{\"node\":\"Merge Results\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Namesilo Requests\",\"type\":\"main\",\"index\":0}]]},\"Namesilo Requests\":{\"main\":[[{\"node\":\"Parse Data\",\"type\":\"main\",\"index\":0}]]},\"Convert & Split Domains\":{\"main\":[[{\"node\":\"Loop Over Domains\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Introduction\n\nThe namesilo Bulk Domain Availability workflow is a powerful automation solution designed to check the registration status of multiple domains simultaneously using the Namesilo API.\n\nThis workflow efficiently processes large lists of domains by splitting them into manageable batches, adhering to API rate limits, and compiling the results into a convenient Excel spreadsheet.\n\nIt eliminates the tedious process of manually checking domains one by one, saving significant time for domain investors, web developers, and digital marketers. The workflow is particularly valuable during brainstorming sessions for new projects, when conducting domain portfolio audits, or when preparing domain acquisition strategies.\n\nBy automating the domain availability check process, users can quickly identify available domains for registration without the hassle of navigating through multiple web interfaces.\n\n## Who is this for?\n\nThis workflow is ideal for:\n\n  * Domain investors and flippers who need to check multiple domains quickly\n  * Web developers and agencies evaluating domain options for client projects\n  * Digital marketers researching domain availability for campaigns\n  * Business owners exploring domain options for new ventures\n  * IT professionals managing domain portfolios\n\n\n\nUsers should have basic familiarity with n8n workflow concepts and a Namesilo account to obtain an API key. No coding knowledge is required, though understanding of domain name systems would be beneficial.\n\n## What problem is this workflow solving?\n\nChecking domain availability one-by-one is a time-consuming and tedious process, especially when dealing with dozens or hundreds of potential domains. This workflow solves several key challenges:\n\n  1. **Manual Inefficiency** : Eliminates the need to individually search for each domain through registrar websites.\n  2. **Rate Limiting** : Handles API rate limits automatically with built-in waiting periods.\n  3. **Data Organization** : Compiles availability results into a structured Excel file rather than scattered notes or multiple browser tabs.\n  4. **Bulk Processing** : Processes up to 200 domains per batch, with the ability to handle unlimited domains across multiple batches.\n  5. **Time Management** : Frees up valuable time that would otherwise be spent on repetitive manual checks.\n\n\n\n## What this workflow does\n\n### Overview\n\nThe workflow takes a list of domains, processes them in batches of up to 200 domains per request (to comply with API limitations), checks their availability using the Namesilo API, and compiles the results into an Excel spreadsheet showing which domains are available for registration and which are already taken.\n\n### Process\n\n  1. **Input Setup** : The workflow begins with a manual trigger and uses the \"Set Data\" node to collect the list of domains to check and your Namesilo API key.\n  2. **Domain Processing** : The \"Convert & Split Domains\" node transforms the input list into batches of up to 200 domains to comply with API limitations.\n  3. **Batch Processing** : The workflow loops through each batch of domains.\n  4. **API Integration** : For each batch, the \"Namesilo Requests\" node sends a request to the Namesilo API to check domain availability.\n  5. **Data Parsing** : The \"Parse Data\" node processes the API response, extracting information about which domains are available and which are taken.\n  6. **Rate Limit Management** : A 5-minute wait period is enforced between batches to respect Namesilo's API rate limits.\n  7. **Data Compilation** : The \"Merge Results\" node combines all the availability data.\n  8. **Output Generation** : Finally, the \"Convert to Excel\" node creates an Excel file with two columns: Domain and Availability (showing \"Available\" or \"Unavailable\" for each domain).\n\n\n\n## Setup\n\n  1. **Import the workflow** : Download the workflow JSON file and import it into your n8n instance.\n  2. **Get Namesilo API key** : Create a free account at Namesilo and obtain your API key from <https://www.namesilo.com/account/api-manager>\n  3. **Configure the workflow** : \n     * Open the \"Set Data\" node\n     * Enter your Namesilo API key in the \"Namesilo API Key\" field\n     * Enter your list of domains (one per line) in the \"Domains\" field\n  4. **Save and activate** : Save the workflow and run it using the manual trigger.\n\n\n\n## How to customize this workflow to your needs\n\n  * **Modify domain input format** : You can adjust the code in the \"Convert & Split Domains\" node if your domain list comes in a different format.\n  * **Change batch size** : If needed, you can modify the batch size (currently set to 200) in the \"Convert & Split Domains\" node to accommodate different API limitations.\n  * **Adjust wait time** : If you have a premium API account with different rate limits, you can modify the wait time in the \"Wait\" node.\n  * **Enhance output format** : Customize the \"Convert to Excel\" node to add additional columns or formatting to the output file.\n  * **Add domain filtering** : You could add a node before the API request to filter domains based on specific criteria (length, keywords, TLDs).\n  * **Integrate with other services** : Connect this workflow to domain registrars to automatically register available domains that meet your criteria.\n\n\n",
  "crawled_at": "2025-05-26T03:34:53.380021",
  "readme_zh": "##  简介\n\nNamesilo批量域名查询工作流是一款高效自动化工具，通过Namesilo API实现多域名注册状态批量检测。该解决方案将海量域名列表智能分批次处理，严格遵守API速率限制，最终生成结构清晰的Excel报表。\n\n本工作流彻底改变了传统人工逐条查询的低效模式，为域名投资人、网站开发者和数字营销专家节省大量时间。特别适用于新项目创意构思、域名资产盘点和收购策略制定等场景，用户无需反复切换网页界面即可快速锁定可注册域名资源。\n\n##  适用人群\n\n本工作流特别推荐给：\n* 域名投资客：需要快速批量筛查域名\n* 网站开发团队：为客户项目评估域名选项\n* 数字营销专家：为推广活动查询域名可用性\n* 创业人士：为新业务寻找理想域名\n* IT管理人员：负责企业域名资产维护\n\n使用者需具备n8n工作流基础操作知识，并持有Namesilo账户以获取API密钥。虽无需编程技能，但了解域名系统将更有助益。\n\n##  解决方案\n\n传统逐条查询方式在处理大批量域名时效率低下，本工作流针对性解决五大痛点：\n1. **人工低效** ：告别注册商网站的单条查询模式\n2. **速率管控** ：内置智能等待机制应对API限制\n3. **数据整合** ：结构化Excel报表替代零散记录\n4. **批量处理** ：支持每批次200域名，无限批次连续处理\n5. **时间管理** ：释放重复查询消耗的宝贵时间\n\n##  功能说明\n\n###  核心流程\n工作流接收域名列表后，自动分批次（每批上限200个）通过Namesilo API检测可用性，最终生成Excel报表清晰标注每个域名的注册状态（可注册/已注册）。\n\n###  执行步骤\n1. **初始配置** ：通过手动触发器启动，\"数据设置\"节点收集API密钥和待查域名列表\n2. **域名预处理** ：\"域名转换分割\"节点将列表分拆为合规批次\n3. **批次处理** ：循环处理每个域名批次\n4. **API交互** ：\"Namesilo请求\"节点发送批量查询请求\n5. **数据解析** ：\"数据解析\"节点提取域名状态信息\n6. **速率控制** ：批次间强制5分钟间隔遵守API限制\n7. **结果汇总** ：\"合并结果\"节点整合所有查询数据\n8. **报表生成** ：\"Excel转换\"节点输出两列式报表（域名/可用状态）\n\n##  配置指南\n\n1. **导入工作流** ：下载JSON文件至n8n实例\n2. **获取API密钥** ：通过Namesilo账户管理界面获取（https://www.namesilo.com/account/api-manager）\n3. **参数设置** ：\n   * 在\"数据设置\"节点输入API密钥\n   * 按行填写待查域名列表\n4. **启用流程** ：保存后通过手动触发器运行\n\n##  定制建议\n\n* **输入格式调整** ：修改\"域名转换分割\"节点代码适配不同格式\n* **批次量优化** ：根据API限制调整当前200的批次上限\n* **间隔时间设置** ：在\"等待\"节点修改适合您API套餐的间隔\n* **报表增强** ：定制\"Excel转换\"节点添加更多数据列\n* **域名过滤** ：可增加预处理节点进行关键词/TLD筛选\n* **服务集成** ：对接注册商实现优质域名自动抢注",
  "title_zh": "Namesilo 批量域名可用性检查工具",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"id\": \"phqg5Kk3YowxoMHQ\",\n  \"meta\": {\n    \"instanceId\": \"3b02b4d565b70d8766b64aa225626d46b11a527d9f5fe390a8405f2a09e8b8a4\"\n  },\n  \"name\": \"Namesilo Bulk Domain Availability [Template]\",\n  \"tags\": [\n    {\n      \"id\": \"28jVdgW1S4XWqLH4\",\n      \"name\": \"Templates\",\n      \"createdAt\": \"2025-02-28T12:22:07.921Z\",\n      \"updatedAt\": \"2025-02-28T12:22:07.921Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"b1184b35-0ab4-42d8-a5b2-66ef926d7eed\",\n      \"name\": \"Set Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -240,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"05a34cf0-9462-4684-aac8-32b4b17e9ef0\",\n              \"name\": \"Domains\",\n              \"type\": \"string\",\n              \"value\": \"=domain1.com\\ndomain2.com\\ndomain3.com\"\n            },\n            {\n              \"id\": \"438830f9-27fe-4e89-bcb9-766483e2d9b1\",\n              \"name\": \"Namesilo API Key\",\n              \"type\": \"string\",\n              \"value\": \"YOUR_API_KEY\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"7fc40d31-a43b-4273-a6eb-d519fda815d4\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -800,\n        -340\n      ],\n      \"parameters\": {\n        \"width\": 580,\n        \"height\": 280,\n        \"content\": \"## 使用指南\\n1. 在此处领取免费Namesilo API密钥：https://www.namesilo.com/account/api-manager\\n\\n2. 在\\\"Set Data\\\"节点中设置您的API密钥和域名列表。\\n\\n本工作流每次循环最多处理200个域名，直至所有域名处理完毕。输出结果为Excel格式。\\n\\n祝您使用愉快！\\n\\n注：每次循环间隔5分钟，这是Namesilo接口速率限制的要求。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a2137f76-9e08-4743-b914-b10bbebc9a13\",\n      \"name\": \"Convert & Split Domains\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -60,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get domains from input JSON\\nconst domains = $json.Domains.split(\\\"\\\\n\\\").map(domain => domain.trim()).filter(Boolean);\\n\\n// Define batch size\\nconst batchSize = 200;\\n\\n// Split into batches of 200\\nlet batches = [];\\nfor (let i = 0; i < domains.length; i += batchSize) {\\n    batches.push(domains.slice(i, i + batchSize).join(\\\",\\\"));\\n}\\n\\n// Return batches as an array\\nreturn batches.map(batch => ({ batchedDomains: batch }));\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"41140017-1f98-4ea9-ac97-9d48e5bdfda1\",\n      \"name\": \"Wait\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        680,\n        -200\n      ],\n      \"webhookId\": \"3ede79a2-7875-462f-b15a-1c74339e2a8a\",\n      \"parameters\": {\n        \"unit\": \"minutes\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"9aa9ddb5-9091-4726-917c-bce9d0f207c9\",\n      \"name\": \"Merge Results\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        320,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// This re-maps each input item (if needed)\\nconst newItems = items.map(item => ({\\n  json: {\\n    Domain: item.json.Domain,\\n    Availability: item.json.Availability\\n  }\\n}));\\n\\nreturn newItems;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"bb2fd210-fd11-4712-94d0-fabb7060705c\",\n      \"name\": \"Loop Over Domains\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        120,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"5d97cd82-f7d5-4f98-a789-8c0fcf473f0f\",\n      \"name\": \"Namesilo Requests\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        320,\n        -200\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.namesilo.com/apibatch/checkRegisterAvailability?version=1&type=json&key={{ $('Set Data').item.json['Namesilo API Key'] }}&domains={{ $json.batchedDomains }}\",\n        \"options\": {}\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 4.2,\n      \"waitBetweenTries\": 5000\n    },\n    {\n      \"id\": \"c4f38893-636a-4293-9e10-395be30683d0\",\n      \"name\": \"Parse Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        500,\n        -200\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Ensure input data exists\\nif (!$json || !$json.data) {\\n    throw new Error(\\\"Invalid input data format\\\");\\n}\\n\\n// Parse the JSON string inside `data`\\nlet parsedData;\\ntry {\\n    parsedData = JSON.parse($json.data);\\n} catch (error) {\\n    throw new Error(\\\"Error parsing JSON data: \\\" + error.message);\\n}\\n\\n// Extract available and unavailable domains safely\\nconst availableDomains = parsedData.reply?.available ? Object.values(parsedData.reply.available) : [];\\nconst unavailableDomains = parsedData.reply?.unavailable ? Object.values(parsedData.reply.unavailable) : [];\\n\\n// Prepare the output array\\nconst output = [];\\n\\n// Process available domains\\navailableDomains.forEach(domainObj => {\\n    if (domainObj && domainObj.domain) {\\n        output.push({\\n            Domain: domainObj.domain,\\n            Availability: \\\"Available\\\"\\n        });\\n    }\\n});\\n\\n// Process unavailable domains\\nunavailableDomains.forEach(domain => {\\n    if (typeof domain === \\\"string\\\") {\\n        output.push({\\n            Domain: domain,\\n            Availability: \\\"Unavailable\\\"\\n        });\\n    } else if (typeof domain === \\\"object\\\" && domain.domain) {\\n        output.push({\\n            Domain: domain.domain,\\n            Availability: \\\"Unavailable\\\"\\n        });\\n    }\\n});\\n\\n// Return the structured data\\nreturn output;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"ec7b8311-65b7-45b0-85ae-b91d7c82e123\",\n      \"name\": \"Convert to Excel\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        500,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"fileName\": \"domain_results.xlsx\"\n        },\n        \"operation\": \"xlsx\",\n        \"binaryPropertyName\": \"={{ $json.MergedDomains }}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"7d33c875-ce2d-404c-97a0-f551939d59f4\",\n      \"name\": \"Start\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -420,\n        0\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"1a05d4b0-db0c-4554-8abf-0547130be16c\",\n  \"connections\": {\n    \"Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Domains\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Start\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert & Split Domains\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert to Excel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Domains\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Namesilo Requests\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Namesilo Requests\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert & Split Domains\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Domains\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}