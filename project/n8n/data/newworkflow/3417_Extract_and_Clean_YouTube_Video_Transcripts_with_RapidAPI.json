{
  "url": "https://n8n.io/workflows/3417-extract-and-clean-youtube-video-transcripts-with-rapidapi/",
  "title": "Extract and Clean YouTube Video Transcripts with RapidAPI",
  "author": "Joseph",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-26",
  "categories": [
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"id\":\"XxkmcgZC4OtIOVoD\",\"meta\":{\"instanceId\":\"b3c467df4053d13fe31cc98f3c66fa1d16300ba750506bfd019a0913cec71ea3\"},\"name\":\"Youtube Video Transcript Extraction\",\"tags\":[],\"nodes\":[{\"id\":\"686e639a-650d-480d-9887-11bd4140f1fe\",\"name\":\"YoutubeVideoURL\",\"type\":\"n8n-nodes-base.formTrigger\",\"position\":[-20,0],\"webhookId\":\"156a04c8-917d-4624-a46e-8fbcab89d16b\",\"parameters\":{\"options\":{},\"formTitle\":\"Youtube Video Transcriber\",\"formFields\":{\"values\":[{\"fieldLabel\":\"Youtube Video Url\",\"requiredField\":true}]}},\"typeVersion\":2.2},{\"id\":\"5384c4ed-a726-4253-8a88-d413124f80be\",\"name\":\"cleanedTranscript\",\"type\":\"n8n-nodes-base.set\",\"position\":[740,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"7653a859-556d-4e00-bafa-6f70f90de0d7\",\"name\":\"transcript\",\"type\":\"string\",\"value\":\"={{ $json.cleanedTranscript }}\"}]}},\"typeVersion\":3.4},{\"id\":\"83b6567f-c931-429c-8d7c-0b2549820ca1\",\"name\":\"processTranscript\",\"type\":\"n8n-nodes-base.function\",\"position\":[500,0],\"parameters\":{\"functionCode\":\"// Extract and process the transcript\\nconst data = $input.first().json;\\n\\nif (!data.transcript && !data.text) {\\n  return {\\n    json: {\\n      success: false,\\n      message: 'No transcript available for this video',\\n      videoUrl: $input.first().json.body?.videoUrl || 'Unknown'\\n    }\\n  };\\n}\\n\\n// Process the transcript text\\nlet transcriptText = '';\\n\\n// Handle different API response formats\\nif (data.transcript) {\\n  // Format for array of transcript segments\\n  if (Array.isArray(data.transcript)) {\\n    data.transcript.forEach(segment => {\\n      if (segment.text) {\\n        transcriptText += segment.text + ' ';\\n      }\\n    });\\n  } else if (typeof data.transcript === 'string') {\\n    transcriptText = data.transcript;\\n  }\\n} else if (data.text) {\\n  // Format for single transcript object with text property\\n  transcriptText = data.text;\\n}\\n\\n// Clean up the transcript (remove extra spaces, normalize punctuation)\\nconst cleanedTranscript = transcriptText\\n  .replace(/\\\\s+/g, ' ')\\n  .replace(/\\\\s([.,!?])/g, '$1')\\n  .trim();\\n\\nreturn {\\n  json: {\\n    success: true,\\n    videoUrl: $input.first().json.body?.videoUrl || 'From transcript',\\n    rawTranscript: data.text || data.transcript,\\n    cleanedTranscript,\\n    duration: data.duration,\\n    offset: data.offset,\\n    language: data.lang\\n  }\\n};\"},\"typeVersion\":1},{\"id\":\"cebf0fd7-6b66-4287-bede-fab53061bed2\",\"name\":\"extractTranscript\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[240,0],\"parameters\":{\"url\":\"https://youtube-transcript3.p.rapidapi.com/api/transcript\",\"options\":{},\"sendBody\":true,\"sendQuery\":true,\"sendHeaders\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"url\",\"value\":\"={{ $json['Youtube Video Url'] }}\"}]},\"queryParameters\":{\"parameters\":[{\"name\":\"videoId\",\"value\":\"ZacjOVVgoLY\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"x-rapidapi-host\",\"value\":\"youtube-transcript3.p.rapidapi.com\"},{\"name\":\"x-rapidapi-key\",\"value\":\"\\\"your_api_key\\\"\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":3}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"084b006b-36f9-46a7-8a0b-7656126b29cd\",\"connections\":{\"YoutubeVideoURL\":{\"main\":[[{\"node\":\"extractTranscript\",\"type\":\"main\",\"index\":0}]]},\"extractTranscript\":{\"main\":[[{\"node\":\"processTranscript\",\"type\":\"main\",\"index\":0}]]},\"processTranscript\":{\"main\":[[{\"node\":\"cleanedTranscript\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "Here is your refined template description with detailed step-by-step instructions, markdown formatting, and customization guidance.\n\n* * *\n\n# YouTube Transcript Extraction Workflow\n\nThis **n8n workflow** extracts and processes transcripts from YouTube videos using the **YouTube Transcript API** on RapidAPI. It allows users to retrieve subtitles from YouTube videos, clean them up, and return structured transcript data for further processing.\n\n## Table of Contents\n\n  * Problem Statement & Target Audience\n  * Pre-conditions & API Requirements\n  * Step-by-Step Workflow Explanation\n  * Customization Guide\n  * How to Set Up This Workflow\n\n\n\n* * *\n\n## Problem Statement & Target Audience\n\n### **Who is this for?**\n\nThis workflow is ideal for content creators, researchers, and developers who need to:\n\n  * Extract **subtitles** from YouTube videos automatically.\n  * **Format and clean** transcript data for readability.\n  * Use transcripts for **summarization, content repurposing, or language analysis**.\n\n\n\n* * *\n\n## Pre-conditions & API Requirements\n\n### **API Required**\n\n  * **YouTube Transcript API** ([RapidAPI](https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3/playground))\n\n\n\n### **n8n Setup Prerequisites**\n\n  * A running **n8n instance** ([Installation Guide](https://docs.n8n.io/))\n  * A **RapidAPI account** to access the **YouTube Transcript API**\n  * An **API key** from RapidAPI to authenticate requests\n\n\n\n* * *\n\n## Step-by-Step Workflow Explanation\n\n### **1\\. Input YouTube Video URL (Trigger)**\n\n  * This step provides a simple input form where users enter a YouTube video URL.\n\n\n\n### **2\\. HTTP Request Node (Retrieve Transcript Data)**\n\n  * Makes a **POST request** to the YouTube Transcript API via RapidAPI.\n  * Passes the video URL received from the input form.\n  * Uses an **environment variable** to store the API key securely.\n\n\n\n### **3\\. Function Node (Process Transcript)**\n\n  * **Receives** the API response containing the **raw transcript**.\n  * **Processes and cleans** the transcript: \n    * Removes unwanted characters.\n    * Formats text for readability.\n  * **Handles errors** when no transcript is available.\n  * **Outputs** both the **raw and cleaned transcript** for further use.\n\n\n\n### **4\\. Set Field Node (Response Formatting)**\n\n  * **Structures** the processed transcript data into a user-friendly format.\n  * **Returns** the final transcript data to the client.\n\n\n\n* * *\n\n## Customization Guide\n\n### **1\\. Modify Transcript Cleaning Rules**\n\n  * Update the **Function Node** to apply custom text processing, such as: \n    * Removing timestamps.\n    * Changing the output format (e.g., JSON, plain text).\n\n\n\n### **2\\. Store Transcripts in a Database**\n\n  * Add a **Database Node** (e.g., MySQL, PostgreSQL, or Firebase) to save transcripts.\n\n\n\n### **3\\. Generate Summaries from Transcripts**\n\n  * Integrate **AI services** (e.g., OpenAI, Google Gemini) to summarize transcripts.\n\n\n\n### **4\\. Convert Transcripts into Speech**\n\n  * Use **ElevenLabs API** to generate an AI-powered voiceover from transcripts.\n\n\n\n* * *\n\n## How to Set Up This Workflow\n\n### **Step 1: Import the Workflow into n8n**\n\n  * Download or copy the workflow JSON file.\n  * Import it into your **n8n instance**.\n\n\n\n### **Step 2: Set Up the API Key**\n\n  * Sign up for the **[YouTube Transcript API](https://rapidapi.com/solid-api-solid-api-default/api/youtube-transcript3/playground)**.\n  * Subscribe to the api.\n  * Copy and paste your api key where the \"your_api_key\" is.\n\n\n\n### **Step 3: Activate the Workflow**\n\n  * Start the workflow in **n8n**.\n  * Enter a **YouTube video URL** in the input form.\n  * The workflow will return a **cleaned transcript**.\n\n\n\n* * *\n\nThis workflow ensures seamless YouTube transcript extraction and processing with minimal manual effort. 🚀\n",
  "crawled_at": "2025-05-26T04:26:12.315040",
  "readme_zh": "以下是您优化后的模板描述，包含详细的分步说明、Markdown格式及定制指南。\n\n* * *\n\n# YouTube字幕提取工作流\n\n本**n8n工作流**通过RapidAPI平台的**YouTube Transcript API**提取并处理YouTube视频字幕。用户可自动获取视频字幕、清理文本内容，并输出结构化字幕数据以供后续使用。\n\n## 目录\n\n  * 问题陈述与目标用户  \n  * 前置条件与API要求  \n  * 工作流分步说明  \n  * 定制指南  \n  * 工作流设置方法",
  "title_zh": "使用RapidAPI提取并清理YouTube视频字幕",
  "publish_date_zh": "最后一次更新于一个月前",
  "workflow_json_zh": "{\n  \"id\": \"XxkmcgZC4OtIOVoD\",\n  \"meta\": {\n    \"instanceId\": \"b3c467df4053d13fe31cc98f3c66fa1d16300ba750506bfd019a0913cec71ea3\"\n  },\n  \"name\": \"Youtube Video Transcript Extraction\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"686e639a-650d-480d-9887-11bd4140f1fe\",\n      \"name\": \"YoutubeVideoURL\",\n      \"type\": \"n8n-nodes-base.formTrigger\",\n      \"position\": [\n        -20,\n        0\n      ],\n      \"webhookId\": \"156a04c8-917d-4624-a46e-8fbcab89d16b\",\n      \"parameters\": {\n        \"options\": {},\n        \"formTitle\": \"Youtube Video Transcriber\",\n        \"formFields\": {\n          \"values\": [\n            {\n              \"fieldLabel\": \"Youtube Video Url\",\n              \"requiredField\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"5384c4ed-a726-4253-8a88-d413124f80be\",\n      \"name\": \"cleanedTranscript\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        740,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"7653a859-556d-4e00-bafa-6f70f90de0d7\",\n              \"name\": \"transcript\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.cleanedTranscript }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"83b6567f-c931-429c-8d7c-0b2549820ca1\",\n      \"name\": \"processTranscript\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        500,\n        0\n      ],\n      \"parameters\": {\n        \"functionCode\": \"// Extract and process the transcript\\nconst data = $input.first().json;\\n\\nif (!data.transcript && !data.text) {\\n  return {\\n    json: {\\n      success: false,\\n      message: 'No transcript available for this video',\\n      videoUrl: $input.first().json.body?.videoUrl || 'Unknown'\\n    }\\n  };\\n}\\n\\n// Process the transcript text\\nlet transcriptText = '';\\n\\n// Handle different API response formats\\nif (data.transcript) {\\n  // Format for array of transcript segments\\n  if (Array.isArray(data.transcript)) {\\n    data.transcript.forEach(segment => {\\n      if (segment.text) {\\n        transcriptText += segment.text + ' ';\\n      }\\n    });\\n  } else if (typeof data.transcript === 'string') {\\n    transcriptText = data.transcript;\\n  }\\n} else if (data.text) {\\n  // Format for single transcript object with text property\\n  transcriptText = data.text;\\n}\\n\\n// Clean up the transcript (remove extra spaces, normalize punctuation)\\nconst cleanedTranscript = transcriptText\\n  .replace(/\\\\s+/g, ' ')\\n  .replace(/\\\\s([.,!?])/g, '$1')\\n  .trim();\\n\\nreturn {\\n  json: {\\n    success: true,\\n    videoUrl: $input.first().json.body?.videoUrl || 'From transcript',\\n    rawTranscript: data.text || data.transcript,\\n    cleanedTranscript,\\n    duration: data.duration,\\n    offset: data.offset,\\n    language: data.lang\\n  }\\n};\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cebf0fd7-6b66-4287-bede-fab53061bed2\",\n      \"name\": \"extractTranscript\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        240,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://youtube-transcript3.p.rapidapi.com/api/transcript\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $json['Youtube Video Url'] }}\"\n            }\n          ]\n        },\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"videoId\",\n              \"value\": \"ZacjOVVgoLY\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-rapidapi-host\",\n              \"value\": \"youtube-transcript3.p.rapidapi.com\"\n            },\n            {\n              \"name\": \"x-rapidapi-key\",\n              \"value\": \"\\\"your_api_key\\\"\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"084b006b-36f9-46a7-8a0b-7656126b29cd\",\n  \"connections\": {\n    \"YoutubeVideoURL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"extractTranscript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"extractTranscript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"processTranscript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"processTranscript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"cleanedTranscript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}