{
  "url": "https://n8n.io/workflows/3934-generate-lessons-learned-reports-from-jira-epics-with-ai-and-google-docs/",
  "title": "Generate Lessons Learned Reports from Jira Epics with AI and Google Docs",
  "author": "Tarek Mustafa",
  "publish_date": "Last update 11 days ago",
  "publish_date_absolute": "2025-05-15",
  "categories": [
    {
      "name": "Engineering"
    },
    {
      "name": "Product"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"U1xUqDLvBYYSU6EU\",\"meta\":{\"instanceId\":\"8d54a4232b4618928ac9df0152e207cb858f5f9ffa6f3ba2d31d941bdcaec9d7\",\"templateCredsSetupCompleted\":true},\"name\":\"Jira Retrospective\",\"tags\":[],\"nodes\":[{\"id\":\"b91c4727-8c63-4bf3-8101-6282aa6f592c\",\"name\":\"Jira Get All Issues\",\"type\":\"n8n-nodes-base.jira\",\"position\":[60,60],\"parameters\":{\"options\":{},\"operation\":\"getAll\"},\"credentials\":{\"jiraSoftwareCloudApi\":{\"id\":\"AqnrDWxoCa8luriP\",\"name\":\"Jira SW Cloud account\"}},\"typeVersion\":1},{\"id\":\"4cf0689c-2a1f-4a90-81f4-d3483c63fc96\",\"name\":\"Jira Get All Comments\",\"type\":\"n8n-nodes-base.jira\",\"position\":[280,60],\"parameters\":{\"options\":{},\"issueKey\":\"={{ $json.key }}\",\"resource\":\"issueComment\",\"operation\":\"getAll\"},\"credentials\":{\"jiraSoftwareCloudApi\":{\"id\":\"AqnrDWxoCa8luriP\",\"name\":\"Jira SW Cloud account\"}},\"typeVersion\":1},{\"id\":\"26803742-1a94-4969-878b-2f757aced4f8\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[940,60],\"parameters\":{\"text\":\"=comments = {{ $json.concatenated_Comment }}\\ndescription = {{ $json.Description }}\\ntitle = {{ $json.Title }}\\nstatus = {{ $json.EpicStatus }}\\nepic_name = {{ $json.EpicName }}\\n\",\"options\":{\"systemMessage\":\"=You are an AI assistant specialized in creating comprehensive Agile retrospective documents. Your task is to analyze the provided information about a completed task and generate an insightful **Lessons Learned** report formatted in **clean Markdown**, optimized for seamless conversion to Google Docs.\\n\\n---\\n\\n### üì• Input Format\\nYou will receive structured input containing:\\n* `epic_name`: The broader initiative or project category\\n* `title`: The specific task or user story name\\n* `description`: A concise explanation of what the task involved\\n\\n---\\n\\n### üì§ Output Instructions\\nGenerate a detailed **Lessons Learned** report using the following **Markdown** structure:\\n\\n# LESSONS LEARNED REPORT\\n\\n**Epic:** {epic_name} \\n**Date:** {{$today.format('yyyy-MM-dd')}}}  \\n**Task:** {title}  \\n**Description:** {description}\\n\\n## Key Findings\\n\\n* Clear, specific insight about a technical challenge encountered\\n* Process-related discovery that impacted delivery\\n* Team dynamics observation or workflow improvement identified\\n* {Add more if needed}\\n\\n## Comments & Observations\\n\\n{Write 2‚Äì3 paragraphs with:}\\n\\n* Specific examples from task execution\\n* Feedback or quotes from team members (if available)\\n* Comparisons to prior approaches\\n* Unexpected challenges or positive surprises\\n\\n## Actionable Recommendations\\n\\n1. Specific, implementable action to address a finding\\n2. Concrete suggestion for process improvement\\n3. Recommendation for knowledge sharing or team development\\n4. {Add more as needed}\\n\\n## Metrics & Impact\\n\\n{When possible, include:}\\n\\n* Time saved or efficiency gained\\n* Quality improvements\\n* User/customer feedback\\n* Cost implications\\n\\n## Tags\\n\\n`#lessons-learned` `#{normalized_epic_name}` `#{relevant_technology}` `#{improvement_area}`\\n\\n---\\n\\n### üìù Guidelines\\n\\n1. **Be specific** ‚Äì use real details, not vague statements\\n2. **Stay relevant** ‚Äì stick to the task and its broader context\\n3. **Focus on learning** ‚Äì prioritize transferable insights\\n4. **Balance** ‚Äì include both wins and challenges\\n5. **Actionability** ‚Äì make every suggestion doable\\n6. **Concise yet clear** ‚Äì avoid fluff; write for impact\\n7. **Formatting Guidelines for Google Docs compatibility:**\\n   * Use only asterisks (*) for bullet points, never hyphens (-)\\n   * Add two spaces after each line in lists for proper line breaks\\n   * Always leave a blank line before and after headings\\n   * Avoid using underscores (_) in text; use hyphens (-) instead\\n   * For emphasis, use consistently **bold** for important points and *italics* for supplementary information\\n   * When mentioning code or technical terms, use `single backticks`, never triple backticks\\n   * Use a pipe-separated format for tables as shown in the template\\n   * Keep paragraphs short (3-5 sentences) for better readability\\n8. **Metadata Handling:** Include the epic name and task title exactly as provided in the input, without modification\\n9. **Date Format:** Use YYYY-MM-DD format for the date for consistent sorting and display\\n10. **Tags:** Keep tags lowercase, with hyphens instead of spaces, and relevant to the content\\n\\n---\"},\"promptType\":\"define\"},\"typeVersion\":1.9},{\"id\":\"29e37c80-68a4-490a-8952-2dcf974ff8d3\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[920,280],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"f3KRKVUp9GyRxd6U\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"da5e365b-cc69-4bdd-bd58-e5b2ecb17387\",\"name\":\"Edit Fields\",\"type\":\"n8n-nodes-base.set\",\"position\":[500,60],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"84fcaf69-4234-46be-9fa7-15026c60fed4\",\"name\":\"EpicName\",\"type\":\"string\",\"value\":\"={{ $('Jira Get All Issues').item.json.fields.parent.fields.summary }}\"},{\"id\":\"a7890a6b-1d0d-4486-908e-d3db571b89af\",\"name\":\"EpicStatus\",\"type\":\"string\",\"value\":\"={{ $('Jira Get All Issues').item.json.fields.parent.fields.status.statusCategory.name }}\"},{\"id\":\"c2c58d73-17a8-47b5-beb6-8295905cd8c2\",\"name\":\"Title\",\"type\":\"string\",\"value\":\"={{ $('Jira Get All Issues').item.json.fields.summary }}\"},{\"id\":\"baa10a35-ab3e-490f-b9ed-e661a6e9f4aa\",\"name\":\"Description\",\"type\":\"string\",\"value\":\"={{ $('Jira Get All Issues').item.json.fields.description }}\"},{\"id\":\"5da4ae54-07e6-41b8-bd51-054fe56beb5f\",\"name\":\"Comment\",\"type\":\"string\",\"value\":\"={{ $json.body.content[0].content[0].text }}\"}]}},\"typeVersion\":3.4},{\"id\":\"9718b066-e28f-41ea-97c2-559cbd894764\",\"name\":\"Summarize\",\"type\":\"n8n-nodes-base.summarize\",\"position\":[720,60],\"parameters\":{\"options\":{},\"fieldsToSplitBy\":\"EpicName, EpicStatus, Title, Description\",\"fieldsToSummarize\":{\"values\":[{\"field\":\"Comment\",\"separateBy\":\"\\n\",\"aggregation\":\"concatenate\"}]}},\"typeVersion\":1.1},{\"id\":\"1d37efb7-09f1-43a7-a6c0-77d07b1f7a6b\",\"name\":\"Google Docs\",\"type\":\"n8n-nodes-base.googleDocs\",\"position\":[1280,60],\"parameters\":{\"simple\":false,\"actionsUi\":{\"actionFields\":[{\"text\":\"={{ $json.output }}\",\"action\":\"insert\"}]},\"operation\":\"update\",\"documentURL\":\"\"},\"credentials\":{\"googleDocsOAuth2Api\":{\"id\":\"Qe3TZG3K1euzTr3n\",\"name\":\"Google Docs account\"}},\"typeVersion\":2},{\"id\":\"bfab4af8-1f26-45b0-952b-1bd5f411d5f4\",\"name\":\"Jira Trigger\",\"type\":\"n8n-nodes-base.jiraTrigger\",\"position\":[-380,180],\"webhookId\":\"3eb46690-d7b1-4a69-9a99-8adf8f843ed9\",\"parameters\":{\"events\":[\"jira:issue_updated\"],\"additionalFields\":{\"filter\":\"\"}},\"credentials\":{\"jiraSoftwareCloudApi\":{\"id\":\"AqnrDWxoCa8luriP\",\"name\":\"Jira SW Cloud account\"}},\"typeVersion\":1.1},{\"id\":\"cc654cf3-c360-4704-a4b7-57447dbec8c6\",\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[-200,180],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"a7028dd9-e262-4528-a20f-c80a26a28202\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.changelog.items[0].toString }}\",\"rightValue\":\"Done\"}]}},\"typeVersion\":2.2},{\"id\":\"b3ccd93e-a412-46f5-858d-ef8a2cd0efa9\",\"name\":\"Simple Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[1080,280],\"parameters\":{\"sessionKey\":\"47\",\"sessionIdType\":\"customKey\"},\"typeVersion\":1.3},{\"id\":\"e8379684-93ca-4118-bab5-f52a444c50e1\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-420,-120],\"parameters\":{\"width\":380,\"height\":580,\"content\":\"## Epic Done?\\nThis Node is Triggered on any issue change in Jira. However it only triggers the automation when the Epic status is changed to **Done**\"},\"typeVersion\":1},{\"id\":\"cdddcd3f-f896-4dbf-89e2-09060111cbc6\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[20,-120],\"parameters\":{\"color\":5,\"width\":820,\"height\":580,\"content\":\"## Fetch issue Description and Comments\\nOnce the Epic is Done, these nodes fetch issues and comments that fall under the Epic. For further processing the output is bundled.\"},\"typeVersion\":1},{\"id\":\"c718a2e8-be7b-47b9-b7cc-9f4549a1060f\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[880,-120],\"parameters\":{\"color\":3,\"width\":540,\"height\":580,\"content\":\"## Summarize and send to Google Docs\\nThe LLM is summarizing the description / comments and generates a report with a layout defined in the System Message. Finally the output is send to Google Docs.\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"793ad505-261f-44ae-a197-a7c0e496dd69\",\"connections\":{\"If\":{\"main\":[[{\"node\":\"Jira Get All Issues\",\"type\":\"main\",\"index\":0}]]},\"AI Agent\":{\"main\":[[{\"node\":\"Google Docs\",\"type\":\"main\",\"index\":0}]]},\"Summarize\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Edit Fields\":{\"main\":[[{\"node\":\"Summarize\",\"type\":\"main\",\"index\":0}]]},\"Jira Trigger\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]},\"Simple Memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Jira Get All Issues\":{\"main\":[[{\"node\":\"Jira Get All Comments\",\"type\":\"main\",\"index\":0}]]},\"Jira Get All Comments\":{\"main\":[[{\"node\":\"Edit Fields\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "### Who is this for?\n\nJira users who want to ****automate**** the generation of a **Lessons Learned** or **Retrospective** report after an Epic is Done.\n\n### What problem is this workflow solving? / use case\n\nLessons Learned / Retrospective reports are often omitted in Agile teams because they take time to write. With the use of n8n and AI this process can be automated.\n\n### What is this workflow doing\n\n  * Triggers automatically upon an Epic reaching the \"Done\" status in Jira.\n  * Collects all related tasks and comments associated with the completed Epic.\n  * Intelligently filters the gathered data to provide the LLM with the most relevant information.\n  * Utilizes an LLM with a structured System Message to generate insightful reports.\n  * Delivers the finalized report directly to your specified Google Docs document.\n\n\n\n### Setup\n\n  1. Create a Jira API key and follow the Credentials Setup in the Jira trigger node.\n  2. Create credentials for Google Docs and paste your document ID into the Node.\n\n\n\n### How to customize this workflow to your needs\n\n  * Change the System Message in the AI Agent to fit your needs.\n\n\n",
  "crawled_at": "2025-05-26T06:02:30.184950",
  "readme_zh": "### ÈÄÇÁî®ÂØπË±°\n\nÈÄÇÁî®‰∫éÂ∏åÊúõÂú®ÊüêÈ°πÂè≤ËØóÔºàEpicÔºâÂÆåÊàêÂêé**Ëá™Âä®Âåñ**ÁîüÊàê**ÁªèÈ™åÊÄªÁªì**Êàñ**ÂõûÈ°æÊä•Âëä**ÁöÑJiraÁî®Êà∑„ÄÇ\n\n### ËØ•Â∑•‰ΩúÊµÅËß£ÂÜ≥‰ªÄ‰πàÈóÆÈ¢òÔºü/ ‰ΩøÁî®Âú∫ÊôØ\n\nÊïèÊç∑Âõ¢Èòü‰∏≠ÔºåÁªèÈ™åÊÄªÁªì/ÂõûÈ°æÊä•ÂëäÂ∏∏Âõ†Êí∞ÂÜôËÄóÊó∂ËÄåË¢´ÂøΩÁï•„ÄÇÂÄüÂä©n8nÂíå‰∫∫Â∑•Êô∫ËÉΩÊäÄÊúØÔºåËøô‰∏ÄÊµÅÁ®ãÂèØÂÆûÁé∞Ëá™Âä®Âåñ„ÄÇ\n\n### Â∑•‰ΩúÊµÅÂäüËÉΩËØ¥Êòé\n\n  * ÂΩìJira‰∏≠ÁöÑÂè≤ËØóÁä∂ÊÄÅÂèòÊõ¥‰∏∫\"Â∑≤ÂÆåÊàê\"Êó∂Ëá™Âä®Ëß¶Âèë\n  * Êî∂ÈõÜËØ•Âè≤ËØóÂÖ≥ËÅîÁöÑÊâÄÊúâ‰ªªÂä°ÂèäËØÑËÆ∫ÂÜÖÂÆπ\n  * Êô∫ËÉΩÁ≠õÈÄâÊï∞ÊçÆÔºå‰∏∫Â§ßÂûãËØ≠Ë®ÄÊ®°ÂûãÊèê‰æõÊúÄÁõ∏ÂÖ≥‰ø°ÊÅØ\n  * ÈÄöËøáÁªìÊûÑÂåñÁ≥ªÁªüÊèêÁ§∫ËØçË∞ÉÁî®LLMÁîüÊàêÊ∑±Â∫¶ÂàÜÊûêÊä•Âëä\n  * Â∞ÜÊúÄÁªàÊä•ÂëäÁõ¥Êé•ËæìÂá∫Ëá≥ÊåáÂÆöGoogle DocsÊñáÊ°£\n\n### ÈÖçÁΩÆÊ≠•È™§\n\n  1. ÂàõÂª∫Jira APIÂØÜÈí•ÔºåÂπ∂ÊåâÁÖßJiraËß¶ÂèëËäÇÁÇπ‰∏≠ÁöÑÂá≠ËØÅÊåáÂºïËøõË°åËÆæÁΩÆ\n  2. ÈÖçÁΩÆGoogle DocsÂá≠ËØÅÔºåÂ∞ÜÊñáÊ°£IDÁ≤òË¥¥Ëá≥ÂØπÂ∫îËäÇÁÇπ\n\n### Ëá™ÂÆö‰πâË∞ÉÊï¥Âª∫ËÆÆ\n\n  * Ê†πÊçÆÈúÄÊ±Ç‰øÆÊîπAI‰ª£ÁêÜ‰∏≠ÁöÑÁ≥ªÁªüÊèêÁ§∫ËØçÊ®°Êùø",
  "title_zh": "Âà©Áî®AIÂíåGoogleÊñáÊ°£‰ªéJiraÂè≤ËØóÁîüÊàêÁªèÈ™åÊïôËÆ≠Êä•Âëä",
  "publish_date_zh": "ÊúÄÂêéÊõ¥Êñ∞‰∫é6Â§©Ââç",
  "workflow_json_zh": "{\n  \"id\": \"U1xUqDLvBYYSU6EU\",\n  \"meta\": {\n    \"instanceId\": \"8d54a4232b4618928ac9df0152e207cb858f5f9ffa6f3ba2d31d941bdcaec9d7\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Jira Retrospective\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b91c4727-8c63-4bf3-8101-6282aa6f592c\",\n      \"name\": \"Jira Get All Issues\",\n      \"type\": \"n8n-nodes-base.jira\",\n      \"position\": [\n        60,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"getAll\"\n      },\n      \"credentials\": {\n        \"jiraSoftwareCloudApi\": {\n          \"id\": \"AqnrDWxoCa8luriP\",\n          \"name\": \"Jira SW Cloud account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4cf0689c-2a1f-4a90-81f4-d3483c63fc96\",\n      \"name\": \"Jira Get All Comments\",\n      \"type\": \"n8n-nodes-base.jira\",\n      \"position\": [\n        280,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"issueKey\": \"={{ $json.key }}\",\n        \"resource\": \"issueComment\",\n        \"operation\": \"getAll\"\n      },\n      \"credentials\": {\n        \"jiraSoftwareCloudApi\": {\n          \"id\": \"AqnrDWxoCa8luriP\",\n          \"name\": \"Jira SW Cloud account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"26803742-1a94-4969-878b-2f757aced4f8\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        940,\n        60\n      ],\n      \"parameters\": {\n        \"text\": \"=comments = {{ $json.concatenated_Comment }}\\ndescription = {{ $json.Description }}\\ntitle = {{ $json.Title }}\\nstatus = {{ $json.EpicStatus }}\\nepic_name = {{ $json.EpicName }}\\n\",\n        \"options\": {\n          \"systemMessage\": \"=You are an AI assistant specialized in creating comprehensive Agile retrospective documents. Your task is to analyze the provided information about a completed task and generate an insightful **Lessons Learned** report formatted in **clean Markdown**, optimized for seamless conversion to Google Docs.\\n\\n---\\n\\n### üì• Input Format\\nYou will receive structured input containing:\\n* `epic_name`: The broader initiative or project category\\n* `title`: The specific task or user story name\\n* `description`: A concise explanation of what the task involved\\n\\n---\\n\\n### üì§ Output Instructions\\nGenerate a detailed **Lessons Learned** report using the following **Markdown** structure:\\n\\n# LESSONS LEARNED REPORT\\n\\n**Epic:** {epic_name} \\n**Date:** {{$today.format('yyyy-MM-dd')}}}  \\n**Task:** {title}  \\n**Description:** {description}\\n\\n## Key Findings\\n\\n* Clear, specific insight about a technical challenge encountered\\n* Process-related discovery that impacted delivery\\n* Team dynamics observation or workflow improvement identified\\n* {Add more if needed}\\n\\n## Comments & Observations\\n\\n{Write 2‚Äì3 paragraphs with:}\\n\\n* Specific examples from task execution\\n* Feedback or quotes from team members (if available)\\n* Comparisons to prior approaches\\n* Unexpected challenges or positive surprises\\n\\n## Actionable Recommendations\\n\\n1. Specific, implementable action to address a finding\\n2. Concrete suggestion for process improvement\\n3. Recommendation for knowledge sharing or team development\\n4. {Add more as needed}\\n\\n## Metrics & Impact\\n\\n{When possible, include:}\\n\\n* Time saved or efficiency gained\\n* Quality improvements\\n* User/customer feedback\\n* Cost implications\\n\\n## Tags\\n\\n`#lessons-learned` `#{normalized_epic_name}` `#{relevant_technology}` `#{improvement_area}`\\n\\n---\\n\\n### üìù Guidelines\\n\\n1. **Be specific** ‚Äì use real details, not vague statements\\n2. **Stay relevant** ‚Äì stick to the task and its broader context\\n3. **Focus on learning** ‚Äì prioritize transferable insights\\n4. **Balance** ‚Äì include both wins and challenges\\n5. **Actionability** ‚Äì make every suggestion doable\\n6. **Concise yet clear** ‚Äì avoid fluff; write for impact\\n7. **Formatting Guidelines for Google Docs compatibility:**\\n   * Use only asterisks (*) for bullet points, never hyphens (-)\\n   * Add two spaces after each line in lists for proper line breaks\\n   * Always leave a blank line before and after headings\\n   * Avoid using underscores (_) in text; use hyphens (-) instead\\n   * For emphasis, use consistently **bold** for important points and *italics* for supplementary information\\n   * When mentioning code or technical terms, use `single backticks`, never triple backticks\\n   * Use a pipe-separated format for tables as shown in the template\\n   * Keep paragraphs short (3-5 sentences) for better readability\\n8. **Metadata Handling:** Include the epic name and task title exactly as provided in the input, without modification\\n9. **Date Format:** Use YYYY-MM-DD format for the date for consistent sorting and display\\n10. **Tags:** Keep tags lowercase, with hyphens instead of spaces, and relevant to the content\\n\\n---\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"29e37c80-68a4-490a-8952-2dcf974ff8d3\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        920,\n        280\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"f3KRKVUp9GyRxd6U\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"da5e365b-cc69-4bdd-bd58-e5b2ecb17387\",\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        500,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"84fcaf69-4234-46be-9fa7-15026c60fed4\",\n              \"name\": \"EpicName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Jira Get All Issues').item.json.fields.parent.fields.summary }}\"\n            },\n            {\n              \"id\": \"a7890a6b-1d0d-4486-908e-d3db571b89af\",\n              \"name\": \"EpicStatus\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Jira Get All Issues').item.json.fields.parent.fields.status.statusCategory.name }}\"\n            },\n            {\n              \"id\": \"c2c58d73-17a8-47b5-beb6-8295905cd8c2\",\n              \"name\": \"Title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Jira Get All Issues').item.json.fields.summary }}\"\n            },\n            {\n              \"id\": \"baa10a35-ab3e-490f-b9ed-e661a6e9f4aa\",\n              \"name\": \"Description\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Jira Get All Issues').item.json.fields.description }}\"\n            },\n            {\n              \"id\": \"5da4ae54-07e6-41b8-bd51-054fe56beb5f\",\n              \"name\": \"Comment\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.content[0].content[0].text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"9718b066-e28f-41ea-97c2-559cbd894764\",\n      \"name\": \"Summarize\",\n      \"type\": \"n8n-nodes-base.summarize\",\n      \"position\": [\n        720,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldsToSplitBy\": \"EpicName, EpicStatus, Title, Description\",\n        \"fieldsToSummarize\": {\n          \"values\": [\n            {\n              \"field\": \"Comment\",\n              \"separateBy\": \"\\n\",\n              \"aggregation\": \"concatenate\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"1d37efb7-09f1-43a7-a6c0-77d07b1f7a6b\",\n      \"name\": \"Google Docs\",\n      \"type\": \"n8n-nodes-base.googleDocs\",\n      \"position\": [\n        1280,\n        60\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"actionsUi\": {\n          \"actionFields\": [\n            {\n              \"text\": \"={{ $json.output }}\",\n              \"action\": \"insert\"\n            }\n          ]\n        },\n        \"operation\": \"update\",\n        \"documentURL\": \"14X5gcowEprmL6ORyoo9tIrWWEB1HlhkixXUelesCLXs\"\n      },\n      \"credentials\": {\n        \"googleDocsOAuth2Api\": {\n          \"id\": \"Qe3TZG3K1euzTr3n\",\n          \"name\": \"Google Docs account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"bfab4af8-1f26-45b0-952b-1bd5f411d5f4\",\n      \"name\": \"Jira Trigger\",\n      \"type\": \"n8n-nodes-base.jiraTrigger\",\n      \"position\": [\n        -380,\n        180\n      ],\n      \"webhookId\": \"3eb46690-d7b1-4a69-9a99-8adf8f843ed9\",\n      \"parameters\": {\n        \"events\": [\n          \"jira:issue_updated\"\n        ],\n        \"additionalFields\": {\n          \"filter\": \"\"\n        }\n      },\n      \"credentials\": {\n        \"jiraSoftwareCloudApi\": {\n          \"id\": \"AqnrDWxoCa8luriP\",\n          \"name\": \"Jira SW Cloud account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"cc654cf3-c360-4704-a4b7-57447dbec8c6\",\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -200,\n        180\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"a7028dd9-e262-4528-a20f-c80a26a28202\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.changelog.items[0].toString }}\",\n              \"rightValue\": \"Done\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"b3ccd93e-a412-46f5-858d-ef8a2cd0efa9\",\n      \"name\": \"Simple Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        1080,\n        280\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"47\",\n        \"sessionIdType\": \"customKey\"\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"e8379684-93ca-4118-bab5-f52a444c50e1\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -420,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 380,\n        \"height\": 580,\n        \"content\": \"## Âè≤ËØóÂÆåÊàê‰∫ÜÂêóÔºü\\nÊ≠§ËäÇÁÇπÂú®Jira‰∏≠ÁöÑ‰ªª‰ΩïÈóÆÈ¢òÂèòÊõ¥Êó∂Ëß¶Âèë„ÄÇÁÑ∂ËÄåÔºå‰ªÖÂΩìÂè≤ËØóÁä∂ÊÄÅÂèòÊõ¥‰∏∫**ÂÆåÊàê**Êó∂Êâç‰ºöËß¶ÂèëËá™Âä®ÂåñÊµÅÁ®ã„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cdddcd3f-f896-4dbf-89e2-09060111cbc6\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        20,\n        -120\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 820,\n        \"height\": 580,\n        \"content\": \"## Ëé∑ÂèñÈóÆÈ¢òÊèèËø∞‰∏éËØÑËÆ∫\\nÂΩìÂè≤ËØó‰ªªÂä°ÂÆåÊàêÂêéÔºåËøô‰∫õËäÇÁÇπ‰ºöËé∑ÂèñÂ±û‰∫éËØ•Âè≤ËØó‰ªªÂä°‰∏ãÁöÑÊâÄÊúâÈóÆÈ¢òÂíåËØÑËÆ∫„ÄÇ‰∏∫‰æø‰∫éÂêéÁª≠Â§ÑÁêÜÔºåËæìÂá∫ÁªìÊûú‰ºöË¢´ÊâìÂåÖÊï¥Âêà„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c718a2e8-be7b-47b9-b7cc-9f4549a1060f\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        880,\n        -120\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 540,\n        \"height\": 580,\n        \"content\": \"## ÊÄªÁªìÂπ∂ÂèëÈÄÅËá≥Ë∞∑Ê≠åÊñáÊ°£\\nÂ§ßËØ≠Ë®ÄÊ®°ÂûãÊ≠£Âú®ÂØπÊèèËø∞/ËØÑËÆ∫ËøõË°åÊÄªÁªìÔºåÂπ∂Ê†πÊçÆÁ≥ªÁªüÊ∂àÊÅØ‰∏≠ÂÆö‰πâÁöÑÊ†ºÂºèÁîüÊàêÊä•Âëä„ÄÇÊúÄÁªàËæìÂá∫ÂÜÖÂÆπÂ∞ÜÂèëÈÄÅËá≥Ë∞∑Ê≠åÊñáÊ°£„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"793ad505-261f-44ae-a197-a7c0e496dd69\",\n  \"connections\": {\n    \"If\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Jira Get All Issues\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Google Docs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Summarize\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Summarize\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Jira Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simple Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Jira Get All Issues\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Jira Get All Comments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Jira Get All Comments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}