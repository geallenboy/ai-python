{
  "url": "https://n8n.io/workflows/2805-todoist-weekly-email-of-completed-tasks/",
  "title": "Todoist weekly email of completed tasks",
  "author": "Martijn Smit",
  "publish_date": "Last update 4 months ago",
  "publish_date_absolute": "2025-01-26",
  "categories": [
    {
      "name": "Other"
    }
  ],
  "workflow_json": "{\"id\":\"VLRbAr4OrtnHUU2l\",\"name\":\"Todoist Weekly Review Template\",\"tags\":[],\"nodes\":[{\"id\":\"45351dbb-6c0c-4442-a350-35d966a26fa1\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[0,180],\"parameters\":{},\"typeVersion\":1},{\"id\":\"9644a07e-0b97-4b48-846c-821f620128cc\",\"name\":\"Get completed tasks via Todoist API\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[220,0],\"parameters\":{\"url\":\"https://api.todoist.com/sync/v9/completed/get_all\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"authentication\":\"predefinedCredentialType\",\"bodyParameters\":{\"parameters\":[{\"name\":\"since\",\"value\":\"={{ $now.minus(7, 'days') }}\"},{\"name\":\"until\",\"value\":\"={{ $now }}\"}]},\"nodeCredentialType\":\"todoistApi\"},\"credentials\":{\"todoistApi\":{}},\"typeVersion\":4.2},{\"id\":\"94f40824-43ff-45ae-adfd-b18a5903cba1\",\"name\":\"Optional: Ignore specific projects\",\"type\":\"n8n-nodes-base.code\",\"position\":[440,0],\"parameters\":{\"jsCode\":\"// maintain this array with ignored Todoist project_id's\\n// empty \\\"[]\\\" it when you don't want to ignore any\\nconst ignoredProjects = ['2335544024'];\\n\\n// Remove ignored projects\\nconst items = $input.all()[0].json.items;\\nvar newItems = [];\\nfor(j = 0; j < items.length; j++) {\\n  if(!ignoredProjects.includes(items[j].project_id)) {\\n    newItems.push(items[j]);\\n  }\\n}\\n\\nreturn newItems;\"},\"typeVersion\":2},{\"id\":\"c50b00d6-4e9c-43e5-b6b8-ee0caac78c68\",\"name\":\"Format the email body\",\"type\":\"n8n-nodes-base.code\",\"position\":[660,0],\"parameters\":{\"jsCode\":\"const items = $input.all();\\n\\n// Group items by day\\nconst grouped = items.reduce((acc, item) => {\\n  const date = new Date(item.json.completed_at).toISOString().split('T')[0];\\n  acc[date] = acc[date] || [];\\n  acc[date].push(item.json.content);\\n  return acc;\\n}, {});\\n\\n// Format the grouped data into an HTML string for the email\\nlet emailBody = \\\"<h1>Completed Items</h1>\\\";\\nfor (const [date, contents] of Object.entries(grouped)) {\\n  emailBody += `<h2>${date}</h2><ul>`;\\n  contents.forEach(content => {\\n    emailBody += `<li>${content}</li>`;\\n  });\\n  emailBody += `</ul>`;\\n}\\n\\nreturn [{ json: { emailBody } }];\\n\"},\"typeVersion\":2},{\"id\":\"42b38a9b-2dbc-46f5-895c-f8597eb48bf1\",\"name\":\"Every Friday afternoon\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[0,0],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"weeks\",\"triggerAtDay\":[5],\"triggerAtHour\":15}]}},\"typeVersion\":1.2},{\"id\":\"adece42d-d84a-41c8-8269-35ba08879e52\",\"name\":\"Send Email\",\"type\":\"n8n-nodes-base.emailSend\",\"position\":[860,0],\"parameters\":{\"options\":{},\"subject\":\"Todoist Weekly Review\",\"emailFormat\":\"={{ $('Format the email body').item.json.emailBody }}\"},\"typeVersion\":2.1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"fcf19ca1-c2bc-4832-8cfe-184424484f60\",\"connections\":{\"Format the email body\":{\"main\":[[{\"node\":\"Send Email\",\"type\":\"main\",\"index\":0}]]},\"Every Friday afternoon\":{\"main\":[[{\"node\":\"Get completed tasks via Todoist API\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Get completed tasks via Todoist API\",\"type\":\"main\",\"index\":0}]]},\"Optional: Ignore specific projects\":{\"main\":[[{\"node\":\"Format the email body\",\"type\":\"main\",\"index\":0}]]},\"Get completed tasks via Todoist API\":{\"main\":[[{\"node\":\"Optional: Ignore specific projects\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow template helps Todoist users get a weekly overview of their completed tasks via email, making it easier to review their past week.\n\n### Why use this workflow?\n\nTodoist doesn’t provide completed task reports or filters in its built-in reports or n8n app. This workflow solves that by using Todoist’s public API to fetch your completed tasks.\n\n### How it works\n\n  * Runs every Friday afternoon (or manually).\n  * Uses the Todoist public API to retrieve completed tasks.\n  * Excludes specific projects you set (e.g., a grocery list).\n  * Sends an email summary, grouping tasks by the day they were completed.\n\n\n\n### Set up steps\n\n  1. Copy your Todoist API token ([found here](https://app.todoist.com/app/settings/integrations/developer)).\n  2. Create a **Todoist API** credential in n8n.\n  3. Create an **SMTP** credential in n8n. \n     * Alternatively, use a preferred email service like Brevo, Mailjet, etc.\n  4. Import this workflow template.\n  5. In the **Get completed tasks via Todoist API** step, select your Todoist API credential.\n  6. In the **Send Email** step: \n     * Select your SMTP credential.\n     * Set the sender and recipient email addresses.\n  7. Run the workflow manually and check your inbox!\n\n\n\n### Ignoring specific projects\n\nIf you do not want your grocery list, workouts, or other tasks from specific Todoist projects showing up in your weekly summary, modify the step called **Optional: Ignore specific projects** and change this line:\n    \n    \n    const ignoredProjects = ['2335544024'];\n    \n\nThis should be an array with the `id` of each project you'd like to ignore. You can find a list of your projects (inc. their Ids) by visiting this link: <https://api.todoist.com/rest/v2/projects>\n",
  "crawled_at": "2025-05-26T02:03:34.889320",
  "readme_zh": "该工作流模板帮助Todoist用户通过电子邮件获取每周已完成任务的概览，便于回顾过去一周的工作。\n\n### 使用场景\n\nTodoist内置报表和n8n应用中均不提供已完成任务报告或筛选功能。本工作流通过调用Todoist公共API获取已完成任务解决此问题。\n\n### 运行机制\n\n  * 每周五下午自动运行（或手动触发）\n  * 通过Todoist公共API获取已完成任务\n  * 自动排除预设项目（如购物清单）\n  * 按任务完成日期分组发送邮件摘要\n\n### 配置步骤\n\n  1. 复制Todoist API令牌（[获取地址](https://app.todoist.com/app/settings/integrations/developer)）\n  2. 在n8n创建**Todoist API**凭证\n  3. 在n8n创建**SMTP**凭证\n     * 也可使用Brevo、Mailjet等邮件服务\n  4. 导入本工作流模板\n  5. 在**通过Todoist API获取已完成任务**节点选择API凭证\n  6. 在**发送邮件**节点：\n     * 选择SMTP凭证\n     * 设置发件人和收件邮箱\n  7. 手动运行工作流并查收邮件！\n\n### 排除特定项目\n\n若需排除购物清单、健身计划等特定项目的任务，请修改**可选：排除特定项目**节点中的代码行：\n    \n    \n    const ignoredProjects = ['2335544024'];\n    \n此处应填入需要排除的项目`id`数组。可通过访问<https://api.todoist.com/rest/v2/projects>查看所有项目及其ID",
  "title_zh": "Todoist每周已完成任务邮件",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"VLRbAr4OrtnHUU2l\",\n  \"name\": \"Todoist Weekly Review Template\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"45351dbb-6c0c-4442-a350-35d966a26fa1\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        0,\n        180\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9644a07e-0b97-4b48-846c-821f620128cc\",\n      \"name\": \"Get completed tasks via Todoist API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        220,\n        0\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/sync/v9/completed/get_all\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"since\",\n              \"value\": \"={{ $now.minus(7, 'days') }}\"\n            },\n            {\n              \"name\": \"until\",\n              \"value\": \"={{ $now }}\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"todoistApi\"\n      },\n      \"credentials\": {\n        \"todoistApi\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"94f40824-43ff-45ae-adfd-b18a5903cba1\",\n      \"name\": \"Optional: Ignore specific projects\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        440,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// maintain this array with ignored Todoist project_id's\\n// empty \\\"[]\\\" it when you don't want to ignore any\\nconst ignoredProjects = ['2335544024'];\\n\\n// Remove ignored projects\\nconst items = $input.all()[0].json.items;\\nvar newItems = [];\\nfor(j = 0; j < items.length; j++) {\\n  if(!ignoredProjects.includes(items[j].project_id)) {\\n    newItems.push(items[j]);\\n  }\\n}\\n\\nreturn newItems;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c50b00d6-4e9c-43e5-b6b8-ee0caac78c68\",\n      \"name\": \"Format the email body\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        660,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const items = $input.all();\\n\\n// Group items by day\\nconst grouped = items.reduce((acc, item) => {\\n  const date = new Date(item.json.completed_at).toISOString().split('T')[0];\\n  acc[date] = acc[date] || [];\\n  acc[date].push(item.json.content);\\n  return acc;\\n}, {});\\n\\n// Format the grouped data into an HTML string for the email\\nlet emailBody = \\\"<h1>Completed Items</h1>\\\";\\nfor (const [date, contents] of Object.entries(grouped)) {\\n  emailBody += `<h2>${date}</h2><ul>`;\\n  contents.forEach(content => {\\n    emailBody += `<li>${content}</li>`;\\n  });\\n  emailBody += `</ul>`;\\n}\\n\\nreturn [{ json: { emailBody } }];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"42b38a9b-2dbc-46f5-895c-f8597eb48bf1\",\n      \"name\": \"Every Friday afternoon\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"weeks\",\n              \"triggerAtDay\": [\n                5\n              ],\n              \"triggerAtHour\": 15\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"adece42d-d84a-41c8-8269-35ba08879e52\",\n      \"name\": \"Send Email\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        860,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"subject\": \"Todoist Weekly Review\",\n        \"emailFormat\": \"={{ $('Format the email body').item.json.emailBody }}\"\n      },\n      \"typeVersion\": 2.1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"fcf19ca1-c2bc-4832-8cfe-184424484f60\",\n  \"connections\": {\n    \"Format the email body\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every Friday afternoon\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get completed tasks via Todoist API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get completed tasks via Todoist API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Optional: Ignore specific projects\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format the email body\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get completed tasks via Todoist API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Optional: Ignore specific projects\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}