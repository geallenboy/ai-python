{
  "url": "https://n8n.io/workflows/3038-error-handler-send-telegram-real-time-workflow-failure-alerts/",
  "title": "Error Handler send Telegram: Real-Time Workflow Failure Alerts",
  "author": "L Hùng",
  "publish_date": "Last update 3 months ago",
  "publish_date_absolute": "2025-02-26",
  "categories": [
    {
      "name": "Other"
    },
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "{\"id\":\"ozo5jlbwPHgaMnVt\",\"meta\":{\"instanceId\":\"2c69a61055797162319204105e5a124e409f0c7fbfaba08ee106324374f4ae73\"},\"name\":\"Error Handler send Telegram\",\"tags\":[],\"nodes\":[{\"id\":\"3968e71e-d9fb-4810-81bb-18ecf073b3ee\",\"name\":\"Telegram\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[520,-200],\"webhookId\":\"b3f6e388-8313-4bc1-8077-d81471b2f95d\",\"parameters\":{\"text\":\"=Workflow: {{ $('Error Trigger').first().json.workflow.name }}\\nData & Time: {{ $now }}\\nURL: {{ $('Error Trigger').first().json.execution.url }}\\nLast Node: {{ $('Error Trigger').first().json.execution.lastNodeExecuted }}\\nError Detal: {{ $('Error Trigger').first().json.execution.error.message }}\\n\",\"chatId\":\"={{ $('Config').item.json.telegramChatId }}\",\"additionalFields\":{\"parse_mode\":\"HTML\",\"appendAttribution\":false}},\"credentials\":{\"telegramApi\":{\"id\":\"BCYwPAl9pdnRqKeR\",\"name\":\"Telegram n8n Log Test\"}},\"retryOnFail\":true,\"typeVersion\":1.2,\"waitBetweenTries\":3000},{\"id\":\"bbb54150-b749-49e2-9c49-720341691151\",\"name\":\"Error Trigger\",\"type\":\"n8n-nodes-base.errorTrigger\",\"position\":[60,-200],\"parameters\":{},\"typeVersion\":1},{\"id\":\"68bc359d-4c7f-4027-8e76-c2bc6b612ede\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-520,-820],\"parameters\":{\"width\":1420,\"height\":1240,\"content\":\"### **How to Use Telegram Error Notifier**\\n\\n### **Step 1: Prerequisites**\\n1. **Telegram Bot:**\\n   - Create a bot using [BotFather](https://core.telegram.org/bots#botfather) and get the bot token.\\n   - Add the bot to your Telegram group/channel and note the `chatId`.\\n\\n2. **n8n Setup:**\\n   - Ensure the **Telegram** and **Error Trigger** nodes are installed.\\n---\\n### **Step 2: Configure the Workflow**\\n1. **Update Telegram Chat ID:**\\n   - Open the **Config** node.\\n   - Replace `telegramChatId` with your actual Telegram group/channel ID:\\n     ```json\\n     return [\\n       {\\n         \\\"telegramChatId\\\": 123456789, // Replace with your chat ID, format 123456789 or -123456789\\n       }\\n     ];\\n     ```\\n\\n2. **Set Telegram Bot Credentials:**\\n   - Open the **Telegram** node.\\n   - Add your bot token in the **Credentials** section.\\n\\n3. **Activate the Workflow:**\\n   - Toggle the **Active** switch to enable the workflow.\\n---\\n### **Step 3: Set Up Error Workflow**\\n1. Open the workflow where you want error notifications.\\n2. Go to **Settings** > **Error Workflow**.\\n3. Select **Telegram Error Notifier** from the dropdown.\\n4. Save the changes.\\n---\\n### **Step 4: Test the Workflow**\\n1. Trigger an error in the workflow.\\n2. Check your Telegram for the error notification, which includes:\\n   - Workflow name\\n   - Date and time\\n   - Execution URL\\n   - Last node executed\\n   - Error details\\n---\\n### **Example Notification**\\n```\\nWorkflow: My Workflow 1\\nData & Time: 2023-10-27T12:34:56Z\\nURL: https://n8n.example.com/execution/12345\\nLast Node: HTTP Request\\nError Detail: Failed to connect to the server.\\n```\\n---\\n### **Troubleshooting**\\n- **No Notifications:**  \\n  Ensure the workflow is active, and the bot token/chat ID is correct.\\n- **Permission Issues:**  \\n  Ensure the bot can send messages in your Telegram group/channel.\\n---\"},\"typeVersion\":1},{\"id\":\"6bcf5a24-643d-4fbe-81c9-c8830dc8f1b6\",\"name\":\"Config\",\"type\":\"n8n-nodes-base.set\",\"position\":[300,-200],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"bf7b1294-b50d-49f7-a5f1-76b0d6845aea\",\"name\":\"telegramChatId\",\"type\":\"string\",\"value\":\"123456789\"}]}},\"typeVersion\":3.4}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"e3a6d588-a83c-4d4e-afdc-232624479723\",\"connections\":{\"Config\":{\"main\":[[{\"node\":\"Telegram\",\"type\":\"main\",\"index\":0}]]},\"Error Trigger\":{\"main\":[[{\"node\":\"Config\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow acts as an error handler, sending real-time notifications to Telegram when another workflow fails. It provides detailed error information, including workflow name, timestamp, execution URL, last executed node, and error message.\n\n* * *\n\n### **Pre-Conditions**\n\n  * A Telegram bot created via [BotFather](https://core.telegram.org/bots#botfather).\n  * The bot token and Telegram group/channel `chatId`.\n  * An active n8n instance with the **Telegram** and **Error Trigger** nodes installed.\n\n\n\n* * *\n\n### **Setup**\n\n  1. **Workflow Configuration:**\n\n     * Import the workflow into n8n.\n     * Update the Telegram `chatId` in the **Config** node.\n     * Add your Telegram bot token in the **Telegram** node credentials.\n  2. **Error Workflow Setup:**\n\n     * Set this workflow as the **Error Workflow** in other workflows.\n  3. **Testing:**\n\n     * Trigger an error in another workflow to verify Telegram notifications.\n\n\n\n* * *\n\n### **Who the Workflow is For**\n\n  * **Developers:** Monitoring workflow failures in real-time.\n  * **Teams:** Managing multiple n8n workflows and needing instant error alerts.\n  * **n8n Users:** Looking for a simple way to handle workflow errors via Telegram.\n\n\n\n* * *\n\n### **Primary Use**\n\n  * Automates error notifications for failed workflows.\n  * Sends detailed error reports to Telegram for quick troubleshooting.\n  * Easily customizable to fit specific monitoring needs.\n\n\n",
  "crawled_at": "2025-05-26T03:33:17.083424",
  "readme_zh": "该工作流作为错误处理器，当其他工作流运行失败时，会向Telegram发送实时通知。它能提供详尽的错误信息，包括工作流名称、时间戳、执行链接、最后执行的节点以及错误信息。\n\n* * *\n\n### **前置条件**\n\n  * 通过[BotFather](https://core.telegram.org/bots#botfather)创建Telegram机器人\n  * 获取机器人令牌和Telegram群组/频道`chatId`\n  * 已安装**Telegram**和**Error Trigger**节点的n8n运行实例\n\n* * *\n\n### **配置步骤**\n\n  1. **工作流配置:**\n     * 将工作流导入n8n\n     * 在**Config**节点中更新Telegram的`chatId`\n     * 在**Telegram**节点凭证中添加机器人令牌\n  2. **错误工作流设置:**\n     * 在其他工作流中将此工作流设为**错误工作流**\n  3. **测试验证:**\n     * 在其他工作流中触发错误以测试Telegram通知功能\n\n* * *\n\n### **适用对象**\n\n  * **开发者:** 实时监控工作流故障\n  * **团队:** 需要管理多个n8n工作流并及时获取错误警报\n  * **n8n用户:** 希望通过Telegram简单处理工作流错误\n\n* * *\n\n### **主要用途**\n\n  * 自动化发送失败工作流的错误通知\n  * 向Telegram推送详细错误报告以便快速排查\n  * 可轻松自定义以满足特定监控需求",
  "title_zh": "错误处理程序发送Telegram：实时工作流故障警报",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"id\": \"ozo5jlbwPHgaMnVt\",\n  \"meta\": {\n    \"instanceId\": \"2c69a61055797162319204105e5a124e409f0c7fbfaba08ee106324374f4ae73\"\n  },\n  \"name\": \"Error Handler send Telegram\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"3968e71e-d9fb-4810-81bb-18ecf073b3ee\",\n      \"name\": \"Telegram\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        520,\n        -200\n      ],\n      \"webhookId\": \"b3f6e388-8313-4bc1-8077-d81471b2f95d\",\n      \"parameters\": {\n        \"text\": \"=Workflow: {{ $('Error Trigger').first().json.workflow.name }}\\nData & Time: {{ $now }}\\nURL: {{ $('Error Trigger').first().json.execution.url }}\\nLast Node: {{ $('Error Trigger').first().json.execution.lastNodeExecuted }}\\nError Detal: {{ $('Error Trigger').first().json.execution.error.message }}\\n\",\n        \"chatId\": \"={{ $('Config').item.json.telegramChatId }}\",\n        \"additionalFields\": {\n          \"parse_mode\": \"HTML\",\n          \"appendAttribution\": false\n        }\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"BCYwPAl9pdnRqKeR\",\n          \"name\": \"Telegram n8n Log Test\"\n        }\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 1.2,\n      \"waitBetweenTries\": 3000\n    },\n    {\n      \"id\": \"bbb54150-b749-49e2-9c49-720341691151\",\n      \"name\": \"Error Trigger\",\n      \"type\": \"n8n-nodes-base.errorTrigger\",\n      \"position\": [\n        60,\n        -200\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"68bc359d-4c7f-4027-8e76-c2bc6b612ede\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -520,\n        -820\n      ],\n      \"parameters\": {\n        \"width\": 1420,\n        \"height\": 1240,\n        \"content\": \"### **如何使用 Telegram 错误通知器**\\n\\n### **步骤1：准备工作**\\n1. **Telegram 机器人：**\\n   - 通过 [BotFather](https://core.telegram.org/bots#botfather) 创建一个机器人并获取机器人令牌。\\n   - 将机器人添加到你的 Telegram 群组/频道，并记录 `chatId`。\\n\\n2. **n8n 设置：**\\n   - 确保已安装 **Telegram** 和 **Error Trigger** 节点。\\n---\\n### **步骤2：配置工作流**\\n1. **更新 Telegram 聊天 ID：**\\n   - 打开 **Config** 节点。\\n   - 将 `telegramChatId` 替换为你的实际 Telegram 群组/频道 ID：\\n     ```json\\n     return [\\n       {\\n         \\\"telegramChatId\\\": 123456789, // 替换为你的聊天 ID，格式为 123456789 或 -123456789\\n       }\\n     ];\\n     ```\\n\\n2. **设置 Telegram 机器人凭证：**\\n   - 打开 **Telegram** 节点。\\n   - 在 **Credentials** 部分添加你的机器人令牌。\\n\\n3. **激活工作流：**\\n   - 切换 **Active** 开关以启用工作流。\\n---\\n### **步骤3：设置错误工作流**\\n1. 打开需要错误通知的工作流。\\n2. 进入 **Settings** > **Error Workflow**。\\n3. 从下拉菜单中选择 **Telegram Error Notifier**。\\n4. 保存更改。\\n---\\n### **步骤4：测试工作流**\\n1. 在工作流中触发一个错误。\\n2. 检查 Telegram 是否收到错误通知，内容包括：\\n   - 工作流名称\\n   - 日期和时间\\n   - 执行 URL\\n   - 最后执行的节点\\n   - 错误详情\\n---\\n### **示例通知**\\n```\\n工作流: 我的工作流 1\\n日期 & 时间: 2023-10-27T12:34:56Z\\nURL: https://n8n.example.com/execution/12345\\n最后节点: HTTP 请求\\n错误详情: 无法连接到服务器。\\n```\\n---\\n### **故障排除**\\n- **未收到通知：**  \\n  确保工作流已激活，且机器人令牌/聊天 ID 正确。\\n- **权限问题：**  \\n  确保机器人可以在你的 Telegram 群组/频道中发送消息。\\n---\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6bcf5a24-643d-4fbe-81c9-c8830dc8f1b6\",\n      \"name\": \"Config\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        300,\n        -200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"bf7b1294-b50d-49f7-a5f1-76b0d6845aea\",\n              \"name\": \"telegramChatId\",\n              \"type\": \"string\",\n              \"value\": \"123456789\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e3a6d588-a83c-4d4e-afdc-232624479723\",\n  \"connections\": {\n    \"Config\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Config\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}