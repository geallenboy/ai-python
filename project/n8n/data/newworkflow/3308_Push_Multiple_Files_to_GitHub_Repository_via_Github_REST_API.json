{
  "url": "https://n8n.io/workflows/3308-push-multiple-files-to-github-repository-via-github-rest-api/",
  "title": "Push Multiple Files to GitHub Repository via Github REST API",
  "author": "Custom Workflows AI",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-26",
  "categories": [
    {
      "name": "DevOps"
    }
  ],
  "workflow_json": "{\"id\":\"RtTHLr1SAwIpntKr\",\"meta\":{\"instanceId\":\"ddfdf733df99a65c801a91865dba5b7c087c95cc22a459ff3647e6deddf2aee6\"},\"name\":\"Push Multiple Files to Github Repo via Github REST API\",\"tags\":[],\"nodes\":[{\"id\":\"f9de827d-6aea-47f9-ac01-bf41e9a41642\",\"name\":\"Get latest commit SHA\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-300,180],\"parameters\":{\"url\":\"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/refs/heads/{{ $('Set Github Info').item.json['Github Branch'] }}\",\"options\":{},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"}]}},\"typeVersion\":4.2},{\"id\":\"28576f1f-2e41-46fe-9bb3-9e4678bb3f45\",\"name\":\"Get base tree SHA\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-120,180],\"parameters\":{\"url\":\"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/commits/{{ $json.object.sha }}\",\"options\":{},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"}]}},\"typeVersion\":4.2},{\"id\":\"eb3c7f72-a2bd-4ef2-ae9d-e548746a1260\",\"name\":\"Create new tree\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[60,180],\"parameters\":{\"url\":\"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/trees\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"sendHeaders\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"base_tree\",\"value\":\"={{ $json[\\\"tree\\\"][\\\"sha\\\"] }}\"},{\"name\":\"tree[0].path\",\"value\":\"public/file1.txt\"},{\"name\":\"tree[0].mode\",\"value\":\"100644\"},{\"name\":\"tree[0].type\",\"value\":\"blob\"},{\"name\":\"tree[0].content\",\"value\":\"={{ $('File 1').item.json.content }}\"},{\"name\":\"tree[1].path\",\"value\":\"public/file2.txt\"},{\"name\":\"tree[1].mode\",\"value\":\"100644\"},{\"name\":\"tree[1].type\",\"value\":\"blob\"},{\"name\":\"tree[1].content\",\"value\":\"={{ $('File 2').item.json.content }}\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":4.2},{\"id\":\"ba76ddd3-844a-4aa1-8a5a-efaa2f228044\",\"name\":\"Create commit\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[240,180],\"parameters\":{\"url\":\"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/commits\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"message\\\": \\\"{{ $('Set Github Info').item.json['Github Commit Update Message'] }}\\\",\\n  \\\"tree\\\": \\\"{{ $json.sha }}\\\",\\n  \\\"parents\\\": [\\\"{{ $('Get latest commit SHA').item.json.object.sha }}\\\"]\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":4.2},{\"id\":\"3a29539c-dd3f-4092-9d36-84fe9d65c2bf\",\"name\":\"Update branch\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[420,180],\"parameters\":{\"url\":\"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/refs/heads/{{ $('Set Github Info').item.json['Github Branch'] }}\",\"method\":\"PATCH\",\"options\":{},\"jsonBody\":\"={\\n  \\\"sha\\\": \\\"{{ $json.sha }}\\\",\\n  \\\"force\\\": false\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":4.2},{\"id\":\"891f7a36-a17d-4c32-bd62-e68c8a0ae0a7\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-300,-60],\"parameters\":{},\"typeVersion\":1},{\"id\":\"ea97d057-fc19-49cc-a5fb-1ab0adbceacb\",\"name\":\"Set Github Info\",\"type\":\"n8n-nodes-base.set\",\"position\":[-120,-60],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"c1ba4494-05cf-4c4f-8ec1-283083fbcaa4\",\"name\":\"Github Token\",\"type\":\"string\",\"value\":\"YOUR_GITHUB_PAT_TOKEN\"},{\"id\":\"3e65c520-9fcd-442a-adf3-2a0f273b149b\",\"name\":\"Github Repo\",\"type\":\"string\",\"value\":\"YOUR_GITHUB_REPO_NAME\"},{\"id\":\"49bf7a21-6fc2-4c8c-a229-1b2f41a4de71\",\"name\":\"Github Username\",\"type\":\"string\",\"value\":\"YOUR_GITHUB_USERNAME\"},{\"id\":\"c8cf6bad-5c28-4536-ac16-1442a4fdbd18\",\"name\":\"Github Branch\",\"type\":\"string\",\"value\":\"main\"},{\"id\":\"3fea08bc-032e-4194-9fd6-9e4de79e2fcf\",\"name\":\"Github Commit Update Message\",\"type\":\"string\",\"value\":\"Updating file1.txt and file2.txt\"}]}},\"typeVersion\":3.4},{\"id\":\"afd1d74c-7d06-4e49-a906-a9d637ce8600\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-960,-80],\"parameters\":{\"width\":580,\"height\":380,\"content\":\"## Push Multiple Files to GitHub Repo  \\nA streamlined workflow for uploading multiple files to a GitHub repository via the GitHub REST API. This solution addresses a significant limitation of the native GitHub n8n node, which supports only single-file uploads.\\n\\nThis approach enables batch file operations, making it particularly valuable for automation scenarios that require simultaneous uploads of multiple files to your GitHub repositories.\\n\\n### Setup Instructions:\\n1. Create a new GitHub Personal Access Token [here](https://github.com/settings/personal-access-tokens). In the \\\"Repository access\\\" section, select your repository and grant \\\"Read and write\\\" permissions under the \\\"Contents\\\" category.  \\n2. Configure your GitHub information in the \\\"Set GitHub Info\\\" node.  \\n3. Update the \\\"Create New Tree\\\" node with your filenames and content. You can add as many tree entries (files) as needed.\"},\"typeVersion\":1},{\"id\":\"d282fec1-0fd9-4956-95b4-0437ed67ff03\",\"name\":\"File 1\",\"type\":\"n8n-nodes-base.set\",\"position\":[60,-60],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"0ddbab7f-7073-4568-9ca5-2b3799d4a87e\",\"name\":\"content\",\"type\":\"string\",\"value\":\"This is the content of your file #1.\"}]}},\"typeVersion\":3.4},{\"id\":\"426b3d80-c5af-4029-a4e7-b56b0af7601a\",\"name\":\"File 2\",\"type\":\"n8n-nodes-base.set\",\"position\":[240,-60],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"0ddbab7f-7073-4568-9ca5-2b3799d4a87e\",\"name\":\"content\",\"type\":\"string\",\"value\":\"This is the content of your file #2.\"}]}},\"typeVersion\":3.4}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"2920d785-d42a-4901-b5d9-6929ac62c132\",\"connections\":{\"File 1\":{\"main\":[[{\"node\":\"File 2\",\"type\":\"main\",\"index\":0}]]},\"File 2\":{\"main\":[[{\"node\":\"Get latest commit SHA\",\"type\":\"main\",\"index\":0}]]},\"Create commit\":{\"main\":[[{\"node\":\"Update branch\",\"type\":\"main\",\"index\":0}]]},\"Create new tree\":{\"main\":[[{\"node\":\"Create commit\",\"type\":\"main\",\"index\":0}]]},\"Set Github Info\":{\"main\":[[{\"node\":\"File 1\",\"type\":\"main\",\"index\":0}]]},\"Get base tree SHA\":{\"main\":[[{\"node\":\"Create new tree\",\"type\":\"main\",\"index\":0}]]},\"Get latest commit SHA\":{\"main\":[[{\"node\":\"Get base tree SHA\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Set Github Info\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Introduction\n\nThis workflow offers a streamlined solution for uploading multiple files to a GitHub repository simultaneously using GitHub's REST API. It addresses a significant limitation of n8n's native GitHub node, which only supports single-file uploads at a time. By leveraging GitHub's Git Data API, this workflow creates a new Git tree containing multiple files, commits this tree, and updates the target branch—all in a single automated process.\n\nThe workflow is particularly valuable for automation scenarios that require batch file operations, such as deploying website updates, publishing documentation, or maintaining configuration files across repositories. It eliminates the need for multiple separate API calls when working with multiple files, making your automation more efficient and less prone to partial update issues.\n\nBy abstracting the complexities of GitHub's Git Data API into a reusable workflow, it provides a practical solution for developers, content managers, and DevOps professionals who need to programmatically manage repository content at scale.\n\n## Who is this for?\n\nThis workflow is designed for:\n\n  * Developers and DevOps engineers who need to automate file updates in GitHub repositories\n  * Content managers who regularly publish multiple files to GitHub-hosted websites or documentation\n  * Automation specialists looking to integrate GitHub operations into larger workflows\n  * Teams using n8n for CI/CD processes who need to push code or configuration changes\n\n\n\nUsers should have basic familiarity with GitHub concepts (repositories, branches, commits) and should be comfortable obtaining and using GitHub Personal Access Tokens. While the workflow handles the API complexity, users should understand the fundamentals of version control to effectively utilize and customize it.\n\n## What problem is this workflow solving?\n\nThis workflow addresses several key challenges:\n\n  1. **Limited batch operations** : n8n's native GitHub node only supports uploading one file at a time, making multi-file operations cumbersome and inefficient.\n\n  2. **API complexity** : GitHub's Git Data API requires multiple sequential calls with interdependent data to create commits with multiple files, which is complex to implement manually.\n\n  3. **Automation bottlenecks** : Without this workflow, automating multi-file updates would require either multiple separate API calls (risking partial updates) or custom scripting outside of n8n.\n\n  4. **Consistency issues** : When files need to be updated together (e.g., code and corresponding documentation), this workflow ensures they're committed in a single atomic operation.\n\n\n\n\nBy solving these issues, the workflow enables reliable, atomic updates of multiple files, maintaining repository consistency and simplifying automation processes.\n\n## What this workflow does\n\n### Overview\n\nThis workflow uses GitHub's REST API to push multiple files to a repository in a single operation. It follows Git's internal model by:\n\n  1. Retrieving the current state of the repository\n  2. Creating a new tree with the files to be added or updated\n  3. Creating a new commit with this tree\n  4. Updating the branch reference to point to the new commit\n\n\n\n### Process\n\n  1. **Initialization** : The workflow starts with a manual trigger and sets up GitHub credentials and repository information.\n\n  2. **File Content Definition** : Two \"Set\" nodes define the content for the files to be uploaded.\n\n  3. **Repository State Retrieval** :\n\n     * The workflow fetches the latest commit SHA for the specified branch\n     * It then retrieves the base tree SHA from this commit\n  4. **Tree Creation** : A new Git tree is created that includes both files (file1.txt and file2.txt), specifying their paths and content.\n\n  5. **Commit Creation** : A new commit is created with the specified commit message, referencing the new tree and the parent commit.\n\n  6. **Branch Update** : Finally, the branch reference is updated to point to the new commit, making the changes visible in the repository.\n\n\n\n\n## Setup\n\nTo use this workflow:\n\n  1. **Import the workflow** : Download the workflow JSON and import it into your n8n instance.\n\n  2. **Create a GitHub Personal Access Token** :\n\n     * Go to GitHub Settings → Developer Settings → Personal Access Tokens → Fine-grained tokens\n     * Create a new token with \"Contents\" permission (Read and write) for your target repository\n  3. **Configure the workflow** :\n\n     * Update the \"Set Github Info\" node with: \n       * Your GitHub Personal Access Token\n       * Your GitHub username\n       * Your repository name\n       * The target branch (default is \"main\")\n       * A commit message\n  4. **Define file content** :\n\n     * Modify the \"File 1\" and \"File 2\" nodes with the content you want to upload\n  5. **Adjust file paths if needed** :\n\n     * In the \"Create new tree\" node, update the file paths if you want to change where the files are stored in the repository\n  6. **Save and run the workflow** : Click \"Test workflow\" to execute the process.\n\n\n\n\n## How to customize this workflow to your needs\n\nThis workflow can be adapted in several ways:\n\n  1. **Add more files** :\n\n     * Create additional \"Set\" nodes for more file content\n     * In the \"Create new tree\" node, add more tree entries following the same pattern (path, mode, type, content)\n  2. **Change file locations** :\n\n     * Modify the \"path\" parameters in the \"Create new tree\" node to place files in different directories\n  3. **Dynamic file content** :\n\n     * Replace the static content in the \"File\" nodes with data from other sources\n     * Use previous nodes or HTTP requests to generate file content dynamically\n  4. **Conditional file updates** :\n\n     * Add IF nodes to determine which files should be updated based on certain conditions\n     * Create separate branches in your workflow for different update scenarios\n  5. **Scheduled updates** :\n\n     * Replace the manual trigger with a Schedule node to run the workflow at specific intervals\n     * Combine with other triggers like Webhook or database events to push files when certain events occur\n  6. **Error handling** :\n\n     * Add Error Trigger nodes to handle potential API failures\n     * Implement notification nodes to alert you of successful pushes or failures\n\n\n",
  "crawled_at": "2025-05-26T04:11:44.080377",
  "readme_zh": "## 简介\n\n本工作流提供了一套基于GitHub REST API的批量文件上传解决方案，有效克服了n8n原生GitHub节点仅支持单文件上传的局限性。通过调用GitHub的Git数据接口，该工作流能够创建包含多个文件的新Git树结构，提交该树对象并更新目标分支，所有操作均在一个自动化流程中完成。\n\n该方案特别适用于需要批量文件操作的自动化场景，例如网站更新部署、文档发布或多仓库配置文件维护。它消除了处理多文件时需多次调用API的繁琐，使自动化流程更高效且避免部分更新导致的问题。通过将复杂的Git数据接口封装成可复用工作流，为需要规模化管理仓库内容的开发者、内容运营和DevOps从业者提供了实用工具。\n\n## 适用人群\n\n本工作流特别适合：\n* 需要自动化更新GitHub仓库文件的开发者和DevOps工程师\n* 定期向GitHub托管的网站或文档发布多文件的内容管理者\n* 需将GitHub操作集成到大型工作流的自动化专家\n* 使用n8n实现CI/CD流程且需推送代码/配置变更的团队\n\n使用者需具备GitHub基础概念（仓库/分支/提交）知识，并能熟练获取和使用GitHub个人访问令牌。虽然工作流已封装API复杂度，但使用者仍需理解版本控制基本原理以有效定制流程。\n\n## 解决方案\n\n本工作流攻克了以下核心痛点：\n1. **批量操作限制**：原生n8n节点仅支持单文件上传，多文件操作低效繁琐\n2. **接口复杂性**：Git数据接口需多个依赖数据的连续调用才能实现多文件提交\n3. **自动化瓶颈**：传统方式需多次独立API调用（存在部分更新风险）或依赖外部脚本\n4. **一致性问题**：确保关联文件（如代码与文档）以原子操作形式提交\n\n通过解决这些问题，该方案实现了多文件可靠提交，既保障仓库一致性又简化了自动化流程。\n\n## 实现原理\n\n### 核心逻辑\n工作流遵循Git内部模型，通过GitHub REST接口实现多文件原子化提交：\n1. 获取仓库当前状态\n2. 创建包含新增/修改文件的新Git树\n3. 基于该树创建新提交\n4. 更新分支引用指向新提交\n\n### 执行流程\n1. **初始化**：手动触发后配置GitHub凭证和仓库信息\n2. **文件定义**：通过Set节点设置待上传文件内容\n3. **仓库状态获取**：\n   - 获取指定分支最新提交SHA\n   - 提取该提交对应的基础树SHA\n4. **树对象创建**：构建包含file1.txt与file2.txt的新Git树，指定路径与内容\n5. **提交创建**：用提交信息创建新提交，关联新树与父提交\n6. **分支更新**：将分支引用指向新提交使变更生效\n\n## 配置指南\n\n使用步骤：\n1. **导入工作流**：下载JSON文件导入n8n实例\n2. **创建访问令牌**：\n   - 访问GitHub设置→开发者设置→细粒度令牌\n   - 为目标仓库创建具有\"内容\"读写权限的令牌\n3. **工作流配置**：\n   - 在\"Set Github Info\"节点设置：\n     * 个人访问令牌\n     * GitHub用户名\n     * 仓库名称\n     * 目标分支（默认main）\n     * 提交信息\n4. **文件内容定义**：\n   - 修改\"File 1\"和\"File 2\"节点内容\n5. **路径调整**：\n   - 在\"Create new tree\"节点修改文件存储路径\n6. **保存执行**：点击\"Test workflow\"运行流程\n\n## 定制方案\n\n扩展方式包括：\n1. **增加文件**：\n   - 添加更多Set节点定义内容\n   - 在创建树节点按相同模式(path/mode/type/content)追加条目\n2. **调整路径**：\n   - 修改创建树节点中的path参数变更存储目录\n3. **动态内容**：\n   - 用其他节点或HTTP请求动态生成文件内容\n4. **条件更新**：\n   - 添加IF节点实现条件判断\n   - 创建不同分支处理不同场景\n5. **定时任务**：\n   - 将手动触发替换为Schedule节点\n   - 结合Webhook或数据库事件触发推送\n6. **异常处理**：\n   - 添加Error Trigger节点处理API故障\n   - 配置通知节点推送执行结果",
  "title_zh": "通过Github REST API推送多个文件至GitHub仓库",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"id\": \"RtTHLr1SAwIpntKr\",\n  \"meta\": {\n    \"instanceId\": \"ddfdf733df99a65c801a91865dba5b7c087c95cc22a459ff3647e6deddf2aee6\"\n  },\n  \"name\": \"Push Multiple Files to Github Repo via Github REST API\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"f9de827d-6aea-47f9-ac01-bf41e9a41642\",\n      \"name\": \"Get latest commit SHA\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -300,\n        180\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/refs/heads/{{ $('Set Github Info').item.json['Github Branch'] }}\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"28576f1f-2e41-46fe-9bb3-9e4678bb3f45\",\n      \"name\": \"Get base tree SHA\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -120,\n        180\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/commits/{{ $json.object.sha }}\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"eb3c7f72-a2bd-4ef2-ae9d-e548746a1260\",\n      \"name\": \"Create new tree\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        60,\n        180\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/trees\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"base_tree\",\n              \"value\": \"={{ $json[\\\"tree\\\"][\\\"sha\\\"] }}\"\n            },\n            {\n              \"name\": \"tree[0].path\",\n              \"value\": \"public/file1.txt\"\n            },\n            {\n              \"name\": \"tree[0].mode\",\n              \"value\": \"100644\"\n            },\n            {\n              \"name\": \"tree[0].type\",\n              \"value\": \"blob\"\n            },\n            {\n              \"name\": \"tree[0].content\",\n              \"value\": \"={{ $('File 1').item.json.content }}\"\n            },\n            {\n              \"name\": \"tree[1].path\",\n              \"value\": \"public/file2.txt\"\n            },\n            {\n              \"name\": \"tree[1].mode\",\n              \"value\": \"100644\"\n            },\n            {\n              \"name\": \"tree[1].type\",\n              \"value\": \"blob\"\n            },\n            {\n              \"name\": \"tree[1].content\",\n              \"value\": \"={{ $('File 2').item.json.content }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"ba76ddd3-844a-4aa1-8a5a-efaa2f228044\",\n      \"name\": \"Create commit\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        240,\n        180\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/commits\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"message\\\": \\\"{{ $('Set Github Info').item.json['Github Commit Update Message'] }}\\\",\\n  \\\"tree\\\": \\\"{{ $json.sha }}\\\",\\n  \\\"parents\\\": [\\\"{{ $('Get latest commit SHA').item.json.object.sha }}\\\"]\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3a29539c-dd3f-4092-9d36-84fe9d65c2bf\",\n      \"name\": \"Update branch\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        420,\n        180\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.github.com/repos/{{ $('Set Github Info').item.json['Github Username'] }}/{{ $('Set Github Info').item.json['Github Repo'] }}/git/refs/heads/{{ $('Set Github Info').item.json['Github Branch'] }}\",\n        \"method\": \"PATCH\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"sha\\\": \\\"{{ $json.sha }}\\\",\\n  \\\"force\\\": false\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Authorization\",\n              \"value\": \"=Bearer {{ $('Set Github Info').item.json['Github Token'] }}\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"891f7a36-a17d-4c32-bd62-e68c8a0ae0a7\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -300,\n        -60\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ea97d057-fc19-49cc-a5fb-1ab0adbceacb\",\n      \"name\": \"Set Github Info\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -120,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c1ba4494-05cf-4c4f-8ec1-283083fbcaa4\",\n              \"name\": \"Github Token\",\n              \"type\": \"string\",\n              \"value\": \"YOUR_GITHUB_PAT_TOKEN\"\n            },\n            {\n              \"id\": \"3e65c520-9fcd-442a-adf3-2a0f273b149b\",\n              \"name\": \"Github Repo\",\n              \"type\": \"string\",\n              \"value\": \"YOUR_GITHUB_REPO_NAME\"\n            },\n            {\n              \"id\": \"49bf7a21-6fc2-4c8c-a229-1b2f41a4de71\",\n              \"name\": \"Github Username\",\n              \"type\": \"string\",\n              \"value\": \"YOUR_GITHUB_USERNAME\"\n            },\n            {\n              \"id\": \"c8cf6bad-5c28-4536-ac16-1442a4fdbd18\",\n              \"name\": \"Github Branch\",\n              \"type\": \"string\",\n              \"value\": \"main\"\n            },\n            {\n              \"id\": \"3fea08bc-032e-4194-9fd6-9e4de79e2fcf\",\n              \"name\": \"Github Commit Update Message\",\n              \"type\": \"string\",\n              \"value\": \"Updating file1.txt and file2.txt\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"afd1d74c-7d06-4e49-a906-a9d637ce8600\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -960,\n        -80\n      ],\n      \"parameters\": {\n        \"width\": 580,\n        \"height\": 380,\n        \"content\": \"## 批量推送文件至GitHub仓库  \\n通过GitHub REST API实现多文件上传的高效工作流。此方案解决了原生GitHub n8n节点仅支持单文件上传的重要局限性。\\n\\n该方法支持批量文件操作，对于需要同时向GitHub仓库上传多个文件的自动化场景尤为实用。\\n\\n### 配置说明：\\n1. 在此处[创建](https://github.com/settings/personal-access-tokens)新的GitHub个人访问令牌。在\\\"仓库权限\\\"部分选择目标仓库，并在\\\"内容\\\"类别下授予\\\"读写\\\"权限。  \\n2. 在\\\"设置GitHub信息\\\"节点中配置您的账户信息。  \\n3. 在\\\"创建新树\\\"节点中更新文件名及内容。可根据需要添加任意数量的树条目（文件）。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d282fec1-0fd9-4956-95b4-0437ed67ff03\",\n      \"name\": \"File 1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        60,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"0ddbab7f-7073-4568-9ca5-2b3799d4a87e\",\n              \"name\": \"content\",\n              \"type\": \"string\",\n              \"value\": \"This is the content of your file #1.\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"426b3d80-c5af-4029-a4e7-b56b0af7601a\",\n      \"name\": \"File 2\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        240,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"0ddbab7f-7073-4568-9ca5-2b3799d4a87e\",\n              \"name\": \"content\",\n              \"type\": \"string\",\n              \"value\": \"This is the content of your file #2.\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"2920d785-d42a-4901-b5d9-6929ac62c132\",\n  \"connections\": {\n    \"File 1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"File 2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"File 2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get latest commit SHA\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create commit\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update branch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create new tree\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create commit\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Github Info\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"File 1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get base tree SHA\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create new tree\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get latest commit SHA\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get base tree SHA\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Github Info\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}