{
  "url": "https://n8n.io/workflows/2292-talk-to-your-sqlite-database-with-a-langchain-ai-agent/",
  "title": "Talk to your SQLite database with a LangChain AI Agent 🧠💬",
  "author": "Yulia",
  "publish_date": "Last update a year ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"AQJ6QnF2yVdCWMnx\",\"meta\":{\"instanceId\":\"fb924c73af8f703905bc09c9ee8076f48c17b596ed05b18c0ff86915ef8a7c4a\",\"templateCredsSetupCompleted\":true},\"name\":\"SQL agent with memory\",\"tags\":[],\"nodes\":[{\"id\":\"3544950e-4d8e-46ca-8f56-61c152a5cae3\",\"name\":\"Window Buffer Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[1220,500],\"parameters\":{\"contextWindowLength\":10},\"typeVersion\":1.2},{\"id\":\"743cc4e7-5f24-4adc-b872-7241ee775bd0\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[1000,500],\"parameters\":{\"model\":\"gpt-4-turbo\",\"options\":{\"temperature\":0.3}},\"credentials\":{\"openAiApi\":{\"id\":\"rveqdSfp7pCRON1T\",\"name\":\"Ted's Tech Talks OpenAi\"}},\"typeVersion\":1},{\"id\":\"cc30066c-ad2c-4729-82c1-a6b0f4214dee\",\"name\":\"When clicking \\\"Test workflow\\\"\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[500,-80],\"parameters\":{},\"typeVersion\":1},{\"id\":\"0deacd0d-45cb-4738-8da0-9d1251858867\",\"name\":\"Get chinook.zip example\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[700,-80],\"parameters\":{\"url\":\"https://www.sqlitetutorial.net/wp-content/uploads/2018/03/chinook.zip\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"61f34708-f8ed-44a9-8522-6042d28511ae\",\"name\":\"Extract zip file\",\"type\":\"n8n-nodes-base.compression\",\"position\":[900,-80],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"6a12d9ac-f1b7-4267-8b34-58cdb9d347bb\",\"name\":\"Save chinook.db locally\",\"type\":\"n8n-nodes-base.readWriteFile\",\"position\":[1100,-80],\"parameters\":{\"options\":{},\"fileName\":\"./chinook.db\",\"operation\":\"write\",\"dataPropertyName\":\"file_0\"},\"typeVersion\":1},{\"id\":\"701d1325-4186-4185-886a-3738163db603\",\"name\":\"Load local chinook.db\",\"type\":\"n8n-nodes-base.readWriteFile\",\"position\":[620,360],\"parameters\":{\"options\":{},\"fileSelector\":\"./chinook.db\"},\"typeVersion\":1},{\"id\":\"d7b3813d-8180-4ff1-87a4-bd54a03043af\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[440,-280.9454545454546],\"parameters\":{\"width\":834.3272727272731,\"height\":372.9454545454546,\"content\":\"## Run this part only once\\nThis section:\\n* downloads the example zip file from https://www.sqlitetutorial.net/sqlite-sample-database/\\n* extracts the archive (it contains only a single file)\\n* saves the extracted `chinook.db` SQLite database locally\\n\\nNow you can use chat to \\\"talk\\\" to your data!\"},\"typeVersion\":1},{\"id\":\"6bd25563-2c59-44c2-acf9-407bd28a15cf\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[400,240],\"parameters\":{\"width\":558.5454545454544,\"height\":297.89090909090913,\"content\":\"## On every chat message:\\n* the local SQLite database is loaded\\n* JSON from Chat Trigger is combined with SQLite binary data\"},\"typeVersion\":1},{\"id\":\"2be63956-236e-46f7-b8e4-0f55e2e25a5c\",\"name\":\"Combine chat input with the binary\",\"type\":\"n8n-nodes-base.set\",\"position\":[820,360],\"parameters\":{\"mode\":\"raw\",\"options\":{\"includeBinary\":true},\"jsonOutput\":\"={{ $('Chat Trigger').item.json }}\\n\"},\"typeVersion\":3.3},{\"id\":\"7f4c9adb-eab4-40d7-ad2e-44f2c0e3e30a\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[980,120],\"parameters\":{\"width\":471.99692219161466,\"height\":511.16641410437836,\"content\":\"### LangChain SQL Agent can make several queries before producing the final answer.\\nTry these examples:\\n1. \\\"Please describe the database\\\". This input usually requires just 1 query + an extra observation to produce a final answer.\\n2. \\\"What are the revenues by genre?\\\". This input will launch a series of Agent actions, because it needs to make several queries.\\n\\nThe final answer is stored in the memory and will be recalled on the next input from the user.\"},\"typeVersion\":1},{\"id\":\"ac819eb5-13b2-4280-b9d6-06ec1209700e\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[1020,360],\"parameters\":{\"agent\":\"sqlAgent\",\"options\":{},\"dataSource\":\"sqlite\"},\"typeVersion\":1.6},{\"id\":\"5ecaa3eb-e93e-4e41-bbc0-98a8c2b2d463\",\"name\":\"Chat Trigger\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[420,360],\"webhookId\":\"fb565f08-a459-4ff9-8249-1ede58599660\",\"parameters\":{},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"fbc06ddd-dbd8-49ee-bbee-2f495d5651a2\",\"connections\":{\"Chat Trigger\":{\"main\":[[{\"node\":\"Load local chinook.db\",\"type\":\"main\",\"index\":0}]]},\"Extract zip file\":{\"main\":[[{\"node\":\"Save chinook.db locally\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Window Buffer Memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Load local chinook.db\":{\"main\":[[{\"node\":\"Combine chat input with the binary\",\"type\":\"main\",\"index\":0}]]},\"Get chinook.zip example\":{\"main\":[[{\"node\":\"Extract zip file\",\"type\":\"main\",\"index\":0}]]},\"When clicking \\\"Test workflow\\\"\":{\"main\":[[{\"node\":\"Get chinook.zip example\",\"type\":\"main\",\"index\":0}]]},\"Combine chat input with the binary\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This n8n workflow demonstrates how to create an agent using LangChain and SQLite. The agent can understand natural language queries and interact with a SQLite database to provide accurate answers. 💪\n\n## 🚀 Setup\n\nRun the top part of the workflow once.  \nIt downloads the example SQLite database, extracts from a ZIP file and saves locally (`chinook.db`).\n\n## 🗣️ Chatting with Your Data\n\n  1. Send a message in a chat window.\n  2. Locally saved SQLite database loads automatically.\n  3. User's chat input is combined with the binary data.\n  4. The LangChain Agend node gets both data and begins to work.\n\n\n\nThe AI Agent will process the user's message, perform necessary SQL queries, and generate a response based on the database information. 🗄️\n\n## 🌟 Example Queries\n\nTry these sample queries to see the AI Agent in action:\n\n  1. \"Please describe the database\" - Get a high-level overview of the database structure, only one or two queries are needed.\n  2. \"What are the revenues by genre?\" - Retrieve revenue information grouped by genre, LangChain agent iterates several time before producing the answer.\n\n\n\nThe AI Agent will store the final answer in its memory, allowing for context-aware conversations. 💬\n\nRead the full article: 👉 <https://blog.n8n.io/ai-agents/>\n",
  "crawled_at": "2025-05-25T22:02:42.348211",
  "readme_zh": "这个n8n工作流展示了如何利用LangChain与SQLite创建智能代理。该代理能理解自然语言查询，并与SQLite数据库交互以提供精准答案。💪  \n\n## 🚀 初始化设置  \n只需运行工作流顶部模块一次：  \n- 下载示例SQLite数据库  \n- 从ZIP文件解压并本地保存为`chinook.db`  \n\n## 🗣️ 数据对话功能  \n1. 在聊天窗口发送消息  \n2. 本地SQLite数据库自动加载  \n3. 用户输入与数据库二进制数据结合  \n4. LangChain代理节点获取双重数据开始运作  \n\nAI代理将处理用户消息，执行必要SQL查询，并基于数据库信息生成响应。🗄️  \n\n## 🌟 示例查询  \n尝试以下问题体验AI代理能力：  \n1. \"请描述这个数据库\" - 获取数据库结构概览（仅需1-2次查询）  \n2. \"按音乐流派统计的收入是多少？\" - LangChain代理会多次迭代后返回分组收入数据  \n\nAI代理会将最终答案存入记忆模块，实现上下文感知对话。💬  \n\n完整文章阅读：👉 <https://blog.n8n.io/ai-agents/>",
  "title_zh": "用LangChain AI代理与你的SQLite数据库对话 🧠💬",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\"id\":\"AQJ6QnF2yVdCWMnx\",\"meta\":{\"instanceId\":\"fb924c73af8f703905bc09c9ee8076f48c17b596ed05b18c0ff86915ef8a7c4a\",\"templateCredsSetupCompleted\":true},\"name\":\"SQL agent with memory\",\"tags\":[],\"nodes\":[{\"id\":\"3544950e-4d8e-46ca-8f56-61c152a5cae3\",\"name\":\"Window Buffer Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[1220,500],\"parameters\":{\"contextWindowLength\":10},\"typeVersion\":1.2},{\"id\":\"743cc4e7-5f24-4adc-b872-7241ee775bd0\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[1000,500],\"parameters\":{\"model\":\"gpt-4-turbo\",\"options\":{\"temperature\":0.3}},\"credentials\":{\"openAiApi\":{\"id\":\"rveqdSfp7pCRON1T\",\"name\":\"Ted's Tech Talks OpenAi\"}},\"typeVersion\":1},{\"id\":\"cc30066c-ad2c-4729-82c1-a6b0f4214dee\",\"name\":\"When clicking \\\"Test workflow\\\"\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[500,-80],\"parameters\":{},\"typeVersion\":1},{\"id\":\"0deacd0d-45cb-4738-8da0-9d1251858867\",\"name\":\"Get chinook.zip example\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[700,-80],\"parameters\":{\"url\":\"https://www.sqlitetutorial.net/wp-content/uploads/2018/03/chinook.zip\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"61f34708-f8ed-44a9-8522-6042d28511ae\",\"name\":\"Extract zip file\",\"type\":\"n8n-nodes-base.compression\",\"position\":[900,-80],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"6a12d9ac-f1b7-4267-8b34-58cdb9d347bb\",\"name\":\"Save chinook.db locally\",\"type\":\"n8n-nodes-base.readWriteFile\",\"position\":[1100,-80],\"parameters\":{\"options\":{},\"fileName\":\"./chinook.db\",\"operation\":\"write\",\"dataPropertyName\":\"file_0\"},\"typeVersion\":1},{\"id\":\"701d1325-4186-4185-886a-3738163db603\",\"name\":\"Load local chinook.db\",\"type\":\"n8n-nodes-base.readWriteFile\",\"position\":[620,360],\"parameters\":{\"options\":{},\"fileSelector\":\"./chinook.db\"},\"typeVersion\":1},{\"id\":\"d7b3813d-8180-4ff1-87a4-bd54a03043af\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[440,-280.9454545454546],\"parameters\":{\"width\":834.3272727272731,\"height\":372.9454545454546,\"content\":\"## 仅运行此部分一次  \\n此部分将：  \\n* 从 https://www.sqlitetutorial.net/sqlite-sample-database/ 下载示例压缩文件  \\n* 解压该压缩包（内仅含单个文件）  \\n* 将解压得到的 `chinook.db` SQLite 数据库保存至本地  \\n\\n现在您可以通过对话方式\\\"查询\\\"您的数据了！\"},\"typeVersion\":1},{\"id\":\"6bd25563-2c59-44c2-acf9-407bd28a15cf\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[400,240],\"parameters\":{\"width\":558.5454545454544,\"height\":297.89090909090913,\"content\":\"## 每条聊天消息时：\\n* 加载本地SQLite数据库\\n* 将Chat Trigger的JSON数据与SQLite二进制数据合并\"},\"typeVersion\":1},{\"id\":\"2be63956-236e-46f7-b8e4-0f55e2e25a5c\",\"name\":\"Combine chat input with the binary\",\"type\":\"n8n-nodes-base.set\",\"position\":[820,360],\"parameters\":{\"mode\":\"raw\",\"options\":{\"includeBinary\":true},\"jsonOutput\":\"={{ $('Chat Trigger').item.json }}\\n\"},\"typeVersion\":3.3},{\"id\":\"7f4c9adb-eab4-40d7-ad2e-44f2c0e3e30a\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[980,120],\"parameters\":{\"width\":471.99692219161466,\"height\":511.16641410437836,\"content\":\"### LangChain SQL代理在生成最终答案前可能会进行多次查询。\\n尝试以下示例：\\n1. \\\"请描述这个数据库\\\"。这类输入通常只需1次查询+额外观察即可得出最终答案。\\n2. \\\"按流派分类的收入是多少？\\\"。这类输入将触发一系列代理操作，因为需要进行多次查询。\\n\\n最终答案会被存储在内存中，当用户下次输入时将可被调用。\"},\"typeVersion\":1},{\"id\":\"ac819eb5-13b2-4280-b9d6-06ec1209700e\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[1020,360],\"parameters\":{\"agent\":\"sqlAgent\",\"options\":{},\"dataSource\":\"sqlite\"},\"typeVersion\":1.6},{\"id\":\"5ecaa3eb-e93e-4e41-bbc0-98a8c2b2d463\",\"name\":\"Chat Trigger\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[420,360],\"webhookId\":\"fb565f08-a459-4ff9-8249-1ede58599660\",\"parameters\":{},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"fbc06ddd-dbd8-49ee-bbee-2f495d5651a2\",\"connections\":{\"Chat Trigger\":{\"main\":[[{\"node\":\"Load local chinook.db\",\"type\":\"main\",\"index\":0}]]},\"Extract zip file\":{\"main\":[[{\"node\":\"Save chinook.db locally\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Window Buffer Memory\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Load local chinook.db\":{\"main\":[[{\"node\":\"Combine chat input with the binary\",\"type\":\"main\",\"index\":0}]]},\"Get chinook.zip example\":{\"main\":[[{\"node\":\"Extract zip file\",\"type\":\"main\",\"index\":0}]]},\"When clicking \\\"Test workflow\\\"\":{\"main\":[[{\"node\":\"Get chinook.zip example\",\"type\":\"main\",\"index\":0}]]},\"Combine chat input with the binary\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]}}}"
}