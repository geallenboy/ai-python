{
  "url": "https://n8n.io/workflows/3456-automated-discord-chatbot-for-chat-interaction-in-channel-using-gemini-20-flash/",
  "title": "Automated Discord Chatbot for chat Interaction in channel using Gemini 2.0 Flash",
  "author": "JPres",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "Building Blocks"
    },
    {
      "name": "AI"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"id\":\"OqfQNcgTqUK7UvZG\",\"meta\":{\"instanceId\":\"5ce52989094be90be3b3bdd9ed9cee1d7ce1fcecaa598afaec4a50646d32e291\",\"templateCredsSetupCompleted\":true},\"name\":\"Youtube Discord Bot\",\"tags\":[{\"id\":\"5eZb3e5PJspoJjVN\",\"name\":\"Discord\",\"createdAt\":\"2025-02-22T09:31:58.972Z\",\"updatedAt\":\"2025-02-22T09:31:58.972Z\"}],\"nodes\":[{\"id\":\"39832819-a14b-445c-bf5c-0bd93613b1ca\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[80,440],\"webhookId\":\"b0631bec-9ccc-4eb8-b143-d73609b213c7\",\"parameters\":{\"path\":\"b0631bec-9ccc-4eb8-b143-d73609b213c7\",\"options\":{},\"httpMethod\":\"POST\",\"responseMode\":\"responseNode\"},\"typeVersion\":2},{\"id\":\"5e70b649-5678-4718-98a7-302a4c784155\",\"name\":\"Simple Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[460,680],\"parameters\":{\"sessionKey\":\"={{ $json.body.userId }}\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":50},\"typeVersion\":1.3},{\"id\":\"7cc849c3-3ed8-4fe2-a378-a213736a9aef\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[180,700],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-2.0-flash\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"clmB8ZYJMHaHmnsu\",\"name\":\"Stardawn#1\"}},\"typeVersion\":1},{\"id\":\"4b664f21-6f1c-4894-9196-beecbd865d3e\",\"name\":\"Respond to Webhook\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[880,440],\"parameters\":{\"options\":{},\"respondWith\":\"allIncomingItems\"},\"typeVersion\":1.1},{\"id\":\"c7c779d3-e324-4a3f-a5a1-5218ec61d856\",\"name\":\"correctNaming\",\"type\":\"n8n-nodes-base.code\",\"position\":[680,440],\"parameters\":{\"jsCode\":\"// Hole alle Items\\nconst items = $input.all();\\n\\n// Nehme das erste Item (falls mehrere vorhanden sind)\\nconst item = items[0];\\n\\n// Extrahiere den output\\nconst antwort = item.json.output;\\n\\n// Formatiere die Antwort im richtigen Format für den Discord-Bot\\nreturn {\\n  json: {\\n    answer: antwort\\n  }\\n};\"},\"typeVersion\":2},{\"id\":\"9ff7ad77-88ce-467e-91b1-4fc2d13636fd\",\"name\":\"Discord AI Response Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[300,440],\"parameters\":{\"text\":\"=Username: {{ $json.body.userName }}\\n\\nQuestion/Prompt: {{ $json.body.question }}\",\"options\":{\"systemMessage\":\"You are a helpful assistant. You answer in the language you receive the question in. Interactions might be all over the place. If there is any questions regarding the Youtube Videos of the channel: Presting Podcasts, you have the transcript of the podcast videos as additional knowledge.\\nAlways begin your answer with a @insertusername to mark the guy who asked the question.  \"},\"promptType\":\"define\"},\"typeVersion\":1.8}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"429e2ccd-5a58-4287-9ad8-314efbbecb8f\",\"connections\":{\"Webhook\":{\"main\":[[{\"node\":\"Discord AI Response Agent\",\"type\":\"main\",\"index\":0}]]},\"Simple Memory\":{\"ai_memory\":[[{\"node\":\"Discord AI Response Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"correctNaming\":{\"main\":[[{\"node\":\"Respond to Webhook\",\"type\":\"main\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Discord AI Response Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Discord AI Response Agent\":{\"main\":[[{\"node\":\"correctNaming\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "A Discord bot that responds to mentions by sending messages to n8n workflows and returning the responses. Connects Discord conversations with custom automations, APIs, and AI services through n8n.\n\nFull guide on: <https://github.com/JimPresting/AI-Discord-Bot/blob/main/README.md>\n\n# Discord Bot Summary\n\n## Overview\n\nThe Discord bot listens for mentions, forwards questions to an n8n workflow, processes responses, and replies in Discord.  \nThis workflow is intended for all Discord users who want to offer AI interactions with their respective channels.\n\n## What do you need?\n\n  * You need a Discord account as well as a Google Cloud Project\n\n\n\n## Key Features\n\n### 1\\. Listens for Mentions\n\n  * The bot monitors Discord channels for messages that mention it.\n  * **Optional Configuration** : Can be set to respond only in a specific channel.\n\n\n\n### 2\\. Forwards Questions to n8n\n\n  * When a user mentions the bot and asks a question: \n    * The bot extracts the question.\n    * Sends the question, along with channel and user information, to an n8n webhook URL.\n\n\n\n### 3\\. Processes Data in n8n\n\n  * The n8n workflow receives the question and can: \n    * Interact with AI services (e.g., generating responses).\n    * Access databases or external APIs.\n    * Perform custom logic.\n  * n8n formats the response and sends it back to the bot.\n\n\n\n### 4\\. Replies to Discord with n8n's Response\n\n  * The bot receives the response from n8n.\n  * It replies to the user's message in the Discord channel with the answer.\n  * **Long Responses** : Handles responses exceeding Discord's 2000-character limit by chunking them into multiple messages.\n\n\n\n### 5\\. Error Handling\n\n  * Includes error handling for: \n    * Issues with n8n communication.\n    * Response formatting problems.\n  * Manages cases where: \n    * No question is asked.\n    * An invalid response is received from n8n.\n\n\n\n### 6\\. Typing Indicator\n\n  * While waiting for n8n's response, the bot sends a \"typing...\" indicator to the Discord channel.\n\n\n\n### 7\\. Status Update\n\n  * For lengthy n8n processes, the bot sends a message to the Discord channel to inform the user that it is still processing their request.\n\n\n\n## Step-by-Step Setup Guide as per Github Instructions\n\n**Key Takeaways**\n\n  * You’ll configure an n8n webhook to receive Discord messages, process them with your workflow, and respond.\n  * You’ll set up a Discord application and bot, grant the right permissions/intents, and invite it to your server.\n  * You’ll prepare your server environment (Node.js), scaffold the project, and wire up environment variables.\n  * You’ll implement message‐chunking, “typing…” indicators, and robust error handling in your bot code.\n  * You’ll deploy with PM2 for persistence and know how to test and troubleshoot common issues.\n\n\n\n* * *\n\n## 1\\. n8n: Create & Expose Your Webhook\n\n  1. **New Workflow**\n\n     * Log into your n8n instance.\n     * Click **Create Workflow** (➕), name it e.g. `Discord Bot Handler`.\n  2. **Webhook Trigger**\n\n     * Add a node (➕) → search **Webhook**.\n     * Set: \n       * **Authentication** : None (or your choice)\n       * **HTTP Method** : `POST`\n       * **Path** : e.g. `/discord-bot`\n     * Click **Execute Node** to activate.\n  3. **Copy Webhook URL**\n\n     * After execution, copy the **Production Webhook URL**.\n     * You’ll paste this into your bot’s `.env`.\n  4. **Build Your Logic**\n\n     * Chain additional nodes (AI, database lookups, etc.) as required.\n  5. **Format the JSON Response**\n\n     * Insert a **Function** node before the end:\n           \n           return {\n             json: { answer: \"Your processed reply\" }\n           };\n           \n\n  6. **Respond to Webhook**\n\n     * Add **Respond to Webhook** as the final node.\n     * Point it at your Function node’s output (with the `answer` field).\n  7. **Activate**\n\n     * Toggle **Active** in the top‐right and **Save**.\n\n\n\n* * *\n\n## 2\\. Discord Developer Portal: App & Bot\n\n  1. **New Application**\n\n     * Visit the [Discord Developer Portal](https://discord.com/developers/applications).\n     * Click **New Application** , name it.\n     * Go to **Bot** → **Add Bot**.\n  2. **Enable Intents & Permissions**\n\n     * Under **Privileged Gateway Intents** , toggle **Message Content Intent**.\n     * Under **Bot Permissions** , check: \n       * Read Messages/View Channels\n       * Send Messages\n       * Read Message History\n  3. **Grab Your Token**\n\n     * In **Bot** → click **Copy** (or **Reset Token**).\n     * Store it securely.\n  4. **Invite Link (OAuth2 URL)**\n\n     * Go to **OAuth2** → **URL Generator**.\n     * Select scopes: `bot`, `applications.commands`.\n     * Under Bot Permissions, select the same permissions as above.\n     * Copy the generated URL, open it in your browser, and invite your bot.\n\n\n\n* * *\n\n## 3\\. Server Prep: Node.js & Project Setup\n\n  1. **Install Node.js v20.x**\n         \n         sudo apt purge nodejs npm\n         sudo apt autoremove\n         curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -\n         sudo apt install -y nodejs\n         node -v    # Expect v20.x.x\n         npm -v     # Expect 10.x.x\n         \n\n  2. **Project Folder**\n         \n         mkdir discord-bot\n         cd discord-bot\n         \n\n  3. **Initialize & Dependencies**\n         \n         npm init -y\n         npm install discord.js axios dotenv\n         \n\n\n\n\n* * *\n\n## 4\\. Bot Code & Configuration\n\n  1. **Environment Variables**\n\n     * Create `.env`:\n           \n           nano .env\n           \n\n     * Populate:\n           \n           DISCORD_BOT_TOKEN=your_bot_token\n           N8N_WEBHOOK_URL=https://your-n8n-instance.com/webhook/discord-bot\n           # Optional: restrict to one channel\n           # TARGET_CHANNEL_ID=123456789012345678\n           \n\n  2. **Bot Script**\n\n     * Create `index.js`:\n           \n           nano index.js\n           \n\n     * Implement: \n       * Import `dotenv`, `discord.js`, `axios`.\n       * Set up client with `MessageContent` intent.\n       * On `messageCreate`: \n         1. Ignore bots or non‐mentions.\n         2. (Optional) Filter by channel ID.\n         3. Extract and validate the user’s question.\n         4. Send “typing…” every 5 s; after 20 s send a status update if still processing.\n         5. POST to your n8n webhook with `question`, `channelId`, `userId`, `userName`.\n         6. Parse various response shapes to find `answer`.\n         7. If `answer.length ≤ 2000`, `message.reply(answer)`.\n         8. Else, split into ~1900‑char chunks at sentence/paragraph breaks and send sequentially.\n         9. On errors, clear intervals, log details, and reply with an error message.\n  3. **Login**\n         \n         client.login(process.env.DISCORD_BOT_TOKEN);\n         \n\n\n\n\n* * *\n\n## 5\\. Deployment: Keep It Alive with PM2\n\n  1. **Install PM2**\n         \n         npm install -g pm2\n         \n\n  2. **Start & Monitor**\n         \n         pm2 start index.js --name discord-bot\n         pm2 status\n         pm2 logs discord-bot\n         \n\n  3. **Auto‐Start on Boot**\n         \n         pm2 startup\n         # Follow the printed command (e.g. sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u your_user --hp /home/your_user)\n         pm2 save\n         \n\n\n\n\n* * *\n\n## 6\\. Test & Troubleshoot\n\n  1. **Functional Test**\n\n     * In your Discord server:\n           \n           @YourBot What’s the weather like?\n           \n\n     * Expect a reply from your n8n workflow.\n  2. **Common Pitfalls**\n\n     * **No reply** → check `pm2 logs discord-bot`.\n     * **Intent Errors** → verify **Message Content Intent** in Portal.\n     * **Webhook failures** → ensure workflow is active and URL is correct.\n     * **Formatting issues** → confirm your Function node returns `json.answer`.\n  3. **Inspect Raw Data**\n\n     * Search your logs for **Complete response from n8n:** to debug payload shapes.\n\n\n\n* * *\n\n",
  "crawled_at": "2025-05-26T04:33:16.565192",
  "readme_zh": "一个Discord机器人，在被@提及时会向n8n工作流发送消息并返回响应。通过n8n将Discord对话与自定义自动化、API和AI服务连接起来。\n\n完整指南请见：<https://github.com/JimPresting/AI-Discord-Bot/blob/main/README.md>\n\n# Discord机器人摘要\n\n## 概述\n\n该Discord机器人监听提及消息，将问题转发至n8n工作流处理，并在Discord中回复。  \n此工作流适用于所有希望通过Discord频道提供AI交互的用户。\n\n## 你需要什么？\n\n* 需要一个Discord账户和一个Google云项目\n\n## 主要功能\n\n### 1. 监听提及消息\n\n* 机器人监控Discord频道中被@提及的消息。\n* **可选配置**：可设置为仅在特定频道响应。\n\n### 2. 转发问题至n8n\n\n* 当用户@提及机器人并提问时：\n  * 机器人提取问题。\n  * 将问题及频道、用户信息发送至n8n的Webhook URL。\n\n### 3. 在n8n中处理数据\n\n* n8n工作流接收问题后可：\n  * 与AI服务交互（如生成回复）。\n  * 访问数据库或外部API。\n  * 执行自定义逻辑。\n* n8n格式化响应并返回给机器人。\n\n### 4. 用n8n的响应回复Discord\n\n* 机器人接收n8n的响应。\n* 在Discord频道中回复用户消息。\n* **长回复处理**：若超过Discord的2000字符限制，将分多条消息发送。\n\n### 5. 错误处理\n\n* 包含以下错误处理：\n  * n8n通信问题。\n  * 响应格式问题。\n* 处理以下情况：\n  * 未提问。\n  * 从n8n收到无效响应。\n\n### 6. 输入指示器\n\n* 等待n8n响应时，机器人发送\"正在输入…\"提示。\n\n### 7. 状态更新\n\n* 对于耗时的n8n处理，机器人会发送消息告知用户请求仍在处理中。\n\n## 分步设置指南（根据Github说明）\n\n**关键步骤**\n\n* 配置n8n Webhook接收Discord消息，通过工作流处理并响应。\n* 创建Discord应用和机器人，授予正确权限/意图，邀请至服务器。\n* 准备服务器环境（Node.js），搭建项目并配置环境变量。\n* 在机器人代码中实现消息分块、\"正在输入…\"提示及健壮的错误处理。\n* 使用PM2部署以保持持久运行，并了解如何测试和排查常见问题。\n\n---\n\n## 1. n8n：创建并暴露Webhook\n\n1. **新建工作流**\n   * 登录n8n实例。\n   * 点击**创建工作流**（➕），命名如`Discord机器人处理器`。\n2. **Webhook触发器**\n   * 添加节点（➕）→搜索**Webhook**。\n   * 设置：\n     * **认证**：无（或自选）\n     * **HTTP方法**：`POST`\n     * **路径**：如`/discord-bot`\n   * 点击**执行节点**激活。\n3. **复制Webhook URL**\n   * 执行后复制**生产Webhook URL**。\n   * 将其粘贴至机器人的`.env`文件。\n4. **构建逻辑**\n   * 按需链式添加其他节点（AI、数据库查询等）。\n5. **格式化JSON响应**\n   * 在末尾前插入**Function**节点：\n     ```javascript\n     return {\n       json: { answer: \"你的处理回复\" }\n     };\n     ```\n6. **响应Webhook**\n   * 添加**响应Webhook**作为最终节点。\n   * 指向Function节点的输出（含`answer`字段）。\n7. **激活**\n   * 右上角切换**活跃**并**保存**。\n\n---\n\n## 2. Discord开发者门户：应用与机器人\n\n1. **新建应用**\n   * 访问[Discord开发者门户](https://discord.com/developers/applications)。\n   * 点击**新建应用**，命名。\n   * 进入**机器人**→**添加机器人**。\n2. **启用意图与权限**\n   * 在**特权网关意图**下，开启**消息内容意图**。\n   * 在**机器人权限**中勾选：\n     * 查看消息/频道\n     * 发送消息\n     * 查看消息历史\n3. **获取令牌**\n   * 在**机器人**→点击**复制**（或**重置令牌**）。\n   * 安全存储。\n4. **邀请链接（OAuth2 URL）**\n   * 进入**OAuth2**→**URL生成器**。\n   * 选择范围：`bot`、`applications.commands`。\n   * 在机器人权限中选择同上权限。\n   * 复制生成的URL，在浏览器中打开并邀请机器人。\n\n---\n\n## 3. 服务器准备：Node.js与项目设置\n\n1. **安装Node.js v20.x**\n   ```bash\n   sudo apt purge nodejs npm\n   sudo apt autoremove\n   curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -\n   sudo apt install -y nodejs\n   node -v    # 应为v20.x.x\n   npm -v     # 应为10.x.x\n   ```\n2. **项目文件夹**\n   ```bash\n   mkdir discord-bot\n   cd discord-bot\n   ```\n3. **初始化与依赖**\n   ```bash\n   npm init -y\n   npm install discord.js axios dotenv\n   ```\n\n---\n\n## 4. 机器人代码与配置\n\n1. **环境变量**\n   * 创建`.env`：\n     ```bash\n     nano .env\n     ```\n   * 填写：\n     ```\n     DISCORD_BOT_TOKEN=你的机器人令牌\n     N8N_WEBHOOK_URL=https://你的n8n实例.com/webhook/discord-bot\n     # 可选：限制至单一频道\n     # TARGET_CHANNEL_ID=123456789012345678\n     ```\n2. **机器人脚本**\n   * 创建`index.js`：\n     ```bash\n     nano index.js\n     ```\n   * 实现：\n     * 导入`dotenv`、`discord.js`、`axios`。\n     * 使用`MessageContent`意图设置客户端。\n     * 在`messageCreate`事件中：\n       1. 忽略机器人或非提及消息。\n       2. （可选）按频道ID过滤。\n       3. 提取并验证用户问题。\n       4. 每5秒发送\"正在输入…\"；20秒后若仍在处理则发送状态更新。\n       5. 向n8n Webhook发送`question`、`channelId`、`userId`、`userName`。\n       6. 解析不同响应格式以获取`answer`。\n       7. 若`answer.length ≤ 2000`，则`message.reply(answer)`。\n       8. 否则按句子/段落分割为约1900字符的块并依次发送。\n       9. 出错时清除间隔，记录详情并回复错误消息。\n3. **登录**\n   ```javascript\n   client.login(process.env.DISCORD_BOT_TOKEN);\n   ```\n\n---\n\n## 5. 部署：使用PM2保持运行\n\n1. **安装PM2**\n   ```bash\n   npm install -g pm2\n   ```\n2. **启动与监控**\n   ```bash\n   pm2 start index.js --name discord-bot\n   pm2 status\n   pm2 logs discord-bot\n   ```\n3. **开机自启**\n   ```bash\n   pm2 startup\n   # 执行打印的命令（如 sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u 你的用户 --hp /home/你的用户）\n   pm2 save\n   ```\n\n---\n\n## 6. 测试与故障排除\n\n1. **功能测试**\n   * 在Discord服务器中：\n     ```\n     @你的机器人 天气怎么样？\n     ```\n   * 预期收到n8n工作流的回复。\n2. **常见问题**\n   * **无回复**→检查`pm2 logs discord-bot`。\n   * **意图错误**→在门户中确认**消息内容意图**已开启。\n   * **Webhook失败**→确保工作流活跃且URL正确。\n   * **格式问题**→确认Function节点返回`json.answer`。\n3. **检查原始数据**\n   * 在日志中搜索**Complete response from n8n:**以调试负载格式。\n\n---",
  "title_zh": "基于Gemini 2.0 Flash的Discord频道自动聊天机器人",
  "publish_date_zh": "上次更新于10天前",
  "workflow_json_zh": "{\n  \"id\": \"OqfQNcgTqUK7UvZG\",\n  \"meta\": {\n    \"instanceId\": \"5ce52989094be90be3b3bdd9ed9cee1d7ce1fcecaa598afaec4a50646d32e291\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Youtube Discord Bot\",\n  \"tags\": [\n    {\n      \"id\": \"5eZb3e5PJspoJjVN\",\n      \"name\": \"Discord\",\n      \"createdAt\": \"2025-02-22T09:31:58.972Z\",\n      \"updatedAt\": \"2025-02-22T09:31:58.972Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"39832819-a14b-445c-bf5c-0bd93613b1ca\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        80,\n        440\n      ],\n      \"webhookId\": \"b0631bec-9ccc-4eb8-b143-d73609b213c7\",\n      \"parameters\": {\n        \"path\": \"b0631bec-9ccc-4eb8-b143-d73609b213c7\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"5e70b649-5678-4718-98a7-302a4c784155\",\n      \"name\": \"Simple Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        460,\n        680\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"={{ $json.body.userId }}\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 50\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"7cc849c3-3ed8-4fe2-a378-a213736a9aef\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        180,\n        700\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"clmB8ZYJMHaHmnsu\",\n          \"name\": \"Stardawn#1\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4b664f21-6f1c-4894-9196-beecbd865d3e\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        880,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"allIncomingItems\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"c7c779d3-e324-4a3f-a5a1-5218ec61d856\",\n      \"name\": \"correctNaming\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        680,\n        440\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Hole alle Items\\nconst items = $input.all();\\n\\n// Nehme das erste Item (falls mehrere vorhanden sind)\\nconst item = items[0];\\n\\n// Extrahiere den output\\nconst antwort = item.json.output;\\n\\n// Formatiere die Antwort im richtigen Format für den Discord-Bot\\nreturn {\\n  json: {\\n    answer: antwort\\n  }\\n};\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9ff7ad77-88ce-467e-91b1-4fc2d13636fd\",\n      \"name\": \"Discord AI Response Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        300,\n        440\n      ],\n      \"parameters\": {\n        \"text\": \"=Username: {{ $json.body.userName }}\\n\\nQuestion/Prompt: {{ $json.body.question }}\",\n        \"options\": {\n          \"systemMessage\": \"You are a helpful assistant. You answer in the language you receive the question in. Interactions might be all over the place. If there is any questions regarding the Youtube Videos of the channel: Presting Podcasts, you have the transcript of the podcast videos as additional knowledge.\\nAlways begin your answer with a @insertusername to mark the guy who asked the question.  \"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"429e2ccd-5a58-4287-9ad8-314efbbecb8f\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Discord AI Response Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simple Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Discord AI Response Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"correctNaming\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Discord AI Response Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Discord AI Response Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"correctNaming\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}