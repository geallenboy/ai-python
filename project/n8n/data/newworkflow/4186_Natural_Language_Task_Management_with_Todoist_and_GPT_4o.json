{
  "url": "https://n8n.io/workflows/4186-natural-language-task-management-with-todoist-and-gpt-4o/",
  "title": "Natural Language Task Management with Todoist and GPT-4o",
  "author": "max e",
  "publish_date": "Last update 6 days ago",
  "publish_date_absolute": "2025-05-20",
  "categories": [
    {
      "name": "AI"
    },
    {
      "name": "IT Ops"
    }
  ],
  "workflow_json": "{\"id\":\"3o3yvFscE37KIUjy\",\"meta\":{\"instanceId\":\"40e4963c8701163532bbdaa80978bdaa5ae5840b83393765993bd01a3a393f55\",\"templateCredsSetupCompleted\":true},\"name\":\"ULTIMATE Personal Todoist Agent\",\"tags\":[],\"nodes\":[{\"id\":\"e83836e8-890e-4c64-bec7-6030e118c8f3\",\"name\":\"Todoist Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[260,0],\"parameters\":{\"options\":{\"maxIterations\":100,\"systemMessage\":\"=You are TodoistAssistant, a friendly AI who can read and write the user’s Todoist data. When given a natural-language request:\\n\\n• Determine the single best action to take (e.g. create a task, list overdue tasks, update a project, add a comment).\\n• If one action isn’t enough, you may perform up to two steps in sequence (for example, look up the Inbox project ID, then create a task).\\n• Fill in only the parameters the user has specified; leave out any field that’s not mentioned.\\n• Provide a link to a task or project if user asks for it.\\n• Always reply with a brief, user-facing confirmation or error message.\\n• Never expose internal IDs, OAuth tokens, raw JSON responses, your own planning steps or raw tools instructions.\\n• Answer in the same language the user used.\",\"returnIntermediateSteps\":false}},\"typeVersion\":1.7},{\"id\":\"36b24a37-4b11-4f5c-b3dd-a954f6043924\",\"name\":\"When Executed by Another Workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[0,0],\"parameters\":{\"workflowInputs\":{\"values\":[{\"name\":\"sessionID\"},{\"name\":\"chatInput\"}]}},\"typeVersion\":1.1},{\"id\":\"f9f428fb-774b-4290-9d9a-cccedf0a3874\",\"name\":\"Orchestrator\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[260,-400],\"parameters\":{\"options\":{}},\"typeVersion\":1.9},{\"id\":\"b3ac4991-69da-42c9-bae4-26de2269fb44\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[0,-400],\"webhookId\":\"b49ff613-dd53-47fd-b105-51601deec528\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"6a798f48-c82f-47ea-bf95-9bffa2db62ec\",\"name\":\"Call Todoist Agent\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[500,-180],\"parameters\":{\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"description\":\"Call this tool to get info about user's tasks and manage them.\",\"workflowInputs\":{\"value\":{\"chatInput\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('chatInput', ``, 'string') }}\",\"sessionID\":\"={{ $input.item.json.sessionId }}\"},\"schema\":[{\"id\":\"sessionID\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"sessionID\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"chatInput\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"chatInput\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.2},{\"id\":\"80dad4ec-d119-4658-805a-26bf750c4def\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[80,220],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"chatgpt-4o-latest\",\"cachedResultName\":\"chatgpt-4o-latest\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"xdzCvPFDKyDuS8xX\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"5fe3733a-212a-470a-8aa7-93faa04f5d68\",\"name\":\"Simple Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[340,-180],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"165ee878-007e-4fff-9d06-0c1b718b7fdb\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[160,-180],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"chatgpt-4o-latest\",\"cachedResultName\":\"chatgpt-4o-latest\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"xdzCvPFDKyDuS8xX\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"555662ec-c297-41ea-bd1c-8314fc9d7267\",\"name\":\"Get All Tasks\",\"type\":\"n8n-nodes-base.todoistTool\",\"position\":[280,220],\"parameters\":{\"filters\":{\"filter\":\"={{ $fromAI(\\\"filter\\\", \\\"\\\", \\\"string\\\") }}\"},\"operation\":\"getAll\",\"returnAll\":true,\"authentication\":\"oAuth2\",\"descriptionType\":\"manual\",\"toolDescription\":\"=List tasks via the Todoist “advanced filter” syntax.\\n\\nParameters  \\n• filter (string) – main query. Build it from the user’s words using Todoist’s grammar:  \\n  › Relative dates: today, tomorrow, next 7 days, overdue  \\n  › Absolute dates: 20 May, 2025-06-01  \\n  › Priority: p1 … p4  (p1 is normal, p4 is extremely high)\\n  › Labels: @reading, @звонок (label names are case-insensitive) — call label_get_all to see acceptable ones  \\n  › Projects / Sections: ##Project Name / ##Project::Section — call project_get_all to see acceptable ones\\n  › No date: no date  \\n  › Boolean operators: & (AND), | (OR), ! (NOT)  \\n  › Parentheses allowed.\\n\\nIt's more reliable to use IDs instead of names in query.\\n\\nNever populate ids, projectId, sectionId, or labelId unless the user provided the exact numeric value (> 0), and in that case omit filter.\\n\\nCombine multiple clauses with **&** unless the user explicitly says “или” / “or”.\\n\\nIf the filter includes @label, assume the label exists; the agent must have already called \\\"Get All Labels\\\".\\n\\nIf the user asks about available filters, mind calling \\\"Get All Labels\\\" to provide correct labels.\\n\\nIf the user asks about available filters, mind calling \\\"Get All Projects\\\" to provide correct projects.\\n\\n• lang – (string) user language code; pass “ru” if the request was in Russian, otherwise omit.\\n\\nNever pass ids, projectId, sectionId, or labelId unless the user gave the exact numeric value (>0).\\n\\nOutput only a concise list (e.g. “X overdue tasks: …”) and hide raw IDs.\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":2},{\"id\":\"13b0cc4d-e965-40ec-87a1-71cf09d2e1b7\",\"name\":\"Get a Task\",\"type\":\"n8n-nodes-base.todoistTool\",\"position\":[440,220],\"parameters\":{\"taskId\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\"operation\":\"get\",\"authentication\":\"oAuth2\",\"descriptionType\":\"manual\",\"toolDescription\":\"Fetch a single task by task_id and show user-readable fields (content, due date, status). Required: Task_ID. Do not expose internal IDs.\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":2.1},{\"id\":\"0e1ab623-99b2-444c-bfa1-5b9175b48cd7\",\"name\":\"Create a Task\",\"type\":\"n8n-nodes-base.todoistTool\",\"position\":[600,220],\"parameters\":{\"labels\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}\",\"content\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Content', ``, 'string') }}\",\"options\":{\"dueLang\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_String_Locale', ``, 'string') }}\",\"section\":\"={{ $fromAI('Section_ID', ``, 'number') }}\",\"parentId\":\"={{ $fromAI('Parent_ID', ``, \\\"number\\\") }}\",\"priority\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Priority', ``, 'number') }}\",\"dueString\":\"={{ $fromAI('Due_String', ``, 'string') }}\",\"description\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}\",\"dueDateTime\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_Date_Time', ``, 'string') }}\"},\"project\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $fromAI('Project_ID','','string') || undefined }}\"},\"authentication\":\"oAuth2\",\"descriptionType\":\"manual\",\"toolDescription\":\"Create a new task.\\nRequired: content.\\nOptional: project_id, section_id, labels, due_date_time, priority, description.\\n\\nIf the user does NOT mention a project, find a suitable one calling project_get_all. If nothing is suitable, call this task **without** a project_id (Todoist will put it in Inbox automatically).\\nReturn a short confirmation, no raw IDs.\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":2.1},{\"id\":\"96fcd691-7931-4567-8827-deab0a982f78\",\"name\":\"Update a Task\",\"type\":\"n8n-nodes-base.todoistTool\",\"position\":[760,220],\"parameters\":{\"taskId\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\"operation\":\"update\",\"updateFields\":{\"labels\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}\",\"content\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Content', ``, 'string') }}\",\"dueLang\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_String_Locale', ``, 'string') }}\",\"priority\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Priority', ``, 'number') }}\",\"dueString\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_String', ``, 'string') }}\",\"description\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}\",\"dueDateTime\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_Date_Time', ``, 'string') }}\"},\"authentication\":\"oAuth2\",\"descriptionType\":\"manual\",\"toolDescription\":\"Update an existing task’s properties (content, description, due date, labels, priority). Required: task_id.\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":2.1},{\"id\":\"6cc4b5f1-db09-4abd-a7fc-96cfa7abc39a\",\"name\":\"Mark Task as Done\",\"type\":\"n8n-nodes-base.todoistTool\",\"position\":[920,220],\"parameters\":{\"taskId\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\"operation\":\"close\",\"authentication\":\"oAuth2\",\"descriptionType\":\"manual\",\"toolDescription\":\"Mark the given task as completed. Required: Task_ID.\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":2.1},{\"id\":\"20471ae9-8cc5-4996-8880-51a2db040be5\",\"name\":\"Reopen a Task\",\"type\":\"n8n-nodes-base.todoistTool\",\"position\":[1080,220],\"parameters\":{\"taskId\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\"operation\":\"reopen\",\"authentication\":\"oAuth2\",\"descriptionType\":\"manual\",\"toolDescription\":\"Reopen a previously completed task. Required: Task_ID.\\n\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":2.1},{\"id\":\"6c7ab7dc-075e-49c9-a339-a89a52ce6d6a\",\"name\":\"Move a Task\",\"type\":\"n8n-nodes-base.todoistTool\",\"position\":[1260,220],\"parameters\":{\"taskId\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\"options\":{\"parent\":\"={{ $fromAI('Parent_ID', ``, 'number') }}\",\"section\":\"={{ $fromAI('Section_ID', ``, 'number') }}\"},\"project\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Project_Name_or_ID', ``, 'string') }}\"},\"operation\":\"move\",\"authentication\":\"oAuth2\",\"descriptionType\":\"manual\",\"toolDescription\":\"Move a task to another project / section or make it a sub-task. Required: Task_ID; provide project_id/section_id/parent_id as needed.\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":2.1},{\"id\":\"d37afed5-4089-44c4-bd90-deb05e65af2a\",\"name\":\"Get All Projects\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[280,400],\"parameters\":{\"url\":\"https://api.todoist.com/rest/v2/projects\",\"options\":{\"pagination\":{\"pagination\":{\"parameters\":{\"parameters\":[{\"name\":\"cursor\",\"value\":\"={{ $response.next_cursor }}\"}]},\"requestInterval\":10}}},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Return the user’s full project list. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"c22513f5-71e9-48ce-bce3-a26681e95fae\",\"name\":\"Get a Project\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[440,400],\"parameters\":{\"url\":\"={{ `https://api.todoist.com/rest/v2/projects/${$fromAI('Project_ID','','string')}` }}\",\"options\":{\"pagination\":{\"pagination\":{\"parameters\":{\"parameters\":[{\"name\":\"cursor\",\"value\":\"={{ $response.next_cursor }}\"}]},\"requestInterval\":10}}},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Fetch one project by project_id. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"e22a8f09-ab4d-4db5-875f-b47e66139460\",\"name\":\"Create a Project\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[600,400],\"parameters\":{\"url\":\"https://api.todoist.com/rest/v2/projects\",\"body\":\"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"project_name\\\", \\\"The name of the project\\\", \\\"string\\\", \\\"New project\\\") }}\\\",\\n  \\\"description\\\": \\\"{{ $fromAI(\\\"project_description\\\", \\\"Project description\\\", \\\"string\\\") }}\\\",\\n  \\\"parent_id\\\": \\\"{{ $fromAI(\\\"parent_project_id\\\", \\\"ID of parent project, if needed\\\", \\\"string\\\", \\\"\\\") }}\\\",\\n  \\\"color\\\":  \\\"{{ $fromAI(\\\"color\\\", \\\"Color from available range\\\", \\\"string\\\", \\\"charcoal\\\") }}\\\",\\n  \\\"is_favorite\\\": {{ $fromAI(\\\"is_favourite\\\", \\\"\\\", \\\"boolean\\\") }}\\n}\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"contentType\":\"raw\",\"authentication\":\"predefinedCredentialType\",\"rawContentType\":\"application/json\",\"toolDescription\":\"Create a new project. Required: name. Optional: description, color, parent_id, is_favorite. If the user did not mention it, just skip it and leave this values empty.\\n\\n**Available colors**: berry_red, red, orange, yellow, olive_green, lime_green, green, mint_green, teal, sky_blue, light_blue, blue, grape, violet, lavender, magenta, salmon, charcoal, grey, taup. If user asks for any other, choose the one that suits best or leave empty.\\n\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"4002115e-f01e-4f9a-826a-4284bb33e88e\",\"name\":\"Update a Project\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[760,400],\"parameters\":{\"url\":\"={{ `https://api.todoist.com/rest/v2/projects/${$fromAI('Project_ID','','string')}` }}\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"project_name\\\", \\\"The name of the project\\\", \\\"string\\\", \\\"New project\\\") }}\\\",\\n  \\\"description\\\": \\\"{{ $fromAI(\\\"project_description\\\", \\\"Project description\\\", \\\"string\\\") }}\\\",\\n  \\\"parent_id\\\": \\\"{{ $fromAI(\\\"parent_project_id\\\", \\\"ID of parent project, if needed\\\", \\\"string\\\", \\\"\\\") }}\\\",\\n  \\\"color\\\":  \\\"{{ $fromAI(\\\"color\\\", \\\"Color from available range\\\", \\\"string\\\", \\\"charcoal\\\") }}\\\",\\n  \\\"is_favorite\\\": {{ $fromAI(\\\"is_favourite\\\", \\\"\\\", \\\"boolean\\\") }}\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Update a project. Required: Project_ID. Optional: name, description, color, parent_id, is_favorite. If the user did not mention it, just skip it and leave this values empty.\\n\\n**Available colors**: berry_red, red, orange, yellow, olive_green, lime_green, green, mint_green, teal, sky_blue, light_blue, blue, grape, violet, lavender, magenta, salmon, charcoal, grey, taup. If user asks for any other, choose the one that suits best or leave empty.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"82f5b3d9-1444-47a9-b034-0cc296206ec2\",\"name\":\"Archive a Project\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[920,400],\"parameters\":{\"url\":\"={{ `https://api.todoist.com/rest/v2/projects/${$fromAI('Project_ID','','string')}/archive` }}\",\"method\":\"POST\",\"options\":{},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Marks a project as archived. For personal projects, this will archive it just for the initiating user (leaving it visible to any other collaborators). For workspace projects, this will archive it for all workspace users, removing it from view. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"43a92f6c-f55c-4cad-bb00-090310e4d4d0\",\"name\":\"Get Archived Projects\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[1080,400],\"parameters\":{\"url\":\"https://api.todoist.com/api/v1/projects/archived\",\"options\":{\"pagination\":{\"pagination\":{\"parameters\":{\"parameters\":[{\"name\":\"cursor\",\"value\":\"={{ $response.next_cursor }}\"}]},\"requestInterval\":10}}},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Return the user’s archived project list. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"71114ba0-5f5b-4033-884a-8f38f8f5d6b1\",\"name\":\"Unarchive a Project\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[1260,400],\"parameters\":{\"url\":\"={{ `https://api.todoist.com/rest/v2/projects/${$fromAI('Project_ID','','string')}/unarchive` }}\",\"method\":\"POST\",\"options\":{},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Marks a previously archived project as active again. For personal projects, this will make the project visible again for the initiating user. For workspace projects, this will make the project visible again for all applicable workspace users. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"7092954e-93e1-440f-aa64-60b708ed7443\",\"name\":\"Get All Sections\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[280,580],\"parameters\":{\"url\":\"https://api.todoist.com/rest/v2/sections\",\"options\":{\"pagination\":{\"pagination\":{\"parameters\":{\"parameters\":[{\"name\":\"cursor\",\"value\":\"={{ $response.next_cursor }}\"}]},\"requestInterval\":10}}},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Return the user’s full sections list. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"2a0a5f63-7c3c-40c0-9d86-c7f3f8b2fd15\",\"name\":\"Get a Section\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[440,580],\"parameters\":{\"url\":\"=https://api.todoist.com/rest/v2/sections/{{ $fromAI(\\\"Section_ID\\\", \\\"\\\", \\\"number\\\") }}\",\"options\":{},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Fetch one section by section_id. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"196aa7d8-5830-48fe-bf8b-e6e0ce093417\",\"name\":\"Create a Section\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[600,580],\"parameters\":{\"url\":\"https://api.todoist.com/rest/v2/sections\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"section_name\\\", \\\"\\\", \\\"string\\\") }}\\\",\\n  \\\"project_id\\\": {{ $fromAI (\\\"Project_ID\\\", \\\"\\\", \\\"number\\\") }}\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Create a new project. Required: name, project_id. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"fb63f214-410a-42a8-b0b5-98492f57868f\",\"name\":\"Update a Section\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[760,580],\"parameters\":{\"url\":\"={{ `https://api.todoist.com/rest/v2/sections/${$fromAI('Section_ID','','string')}` }}\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"section_name\\\", \\\"\\\", \\\"string\\\") }}\\\"\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Update a section name. Required: Section_ID, name. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"60b3dc22-bf0a-40c5-b373-62163cbe25ec\",\"name\":\"Delete a Section\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[900,580],\"parameters\":{\"url\":\"=https://api.todoist.com/rest/v2/sections/{{ $fromAI(\\\"Section_ID\\\", \\\"\\\", \\\"number\\\") }}\",\"method\":\"DELETE\",\"options\":{},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Delete a section. Required: Section_ID. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"29aaeb54-4350-4fc6-b8e1-3f7eaed20dba\",\"name\":\"Get All Labels\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[280,760],\"parameters\":{\"url\":\"https://api.todoist.com/rest/v2/labels\",\"options\":{},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Return the user’s full labels list. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"c868ad86-38c6-4061-aff4-abfa4b665e3e\",\"name\":\"Get a Label\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[440,760],\"parameters\":{\"url\":\"=https://api.todoist.com/rest/v2/labels/{{ $fromAI(\\\"Label_ID\\\", \\\"\\\", \\\"number\\\") }}\",\"options\":{},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Fetch one label by Label_ID. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"5c3e5bc5-711e-408f-86cd-472f357b2e51\",\"name\":\"Create a Label\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[600,760],\"parameters\":{\"url\":\"https://api.todoist.com/rest/v2/labels\",\"method\":\"POST\",\"options\":{\"pagination\":{\"pagination\":{\"parameters\":{\"parameters\":[{\"name\":\"cursor\",\"value\":\"={{ $response.next_cursor }}\"}]},\"requestInterval\":10}}},\"jsonBody\":\"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"name\\\") }}\\\",\\n  \\\"color\\\": \\\"{{ $fromAI(\\\"color\\\", \\\"\\\", \\\"string\\\", \\\"charcoal\\\") }}\\\",\\n  \\\"is_favorite\\\": {{ $fromAI(\\\"is_favourite\\\", \\\"\\\", \\\"boolean\\\", \\\"false\\\")}}\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Create a new label. Required: name. Optional: color, is_favorite. If the user did not mention it, just skip it leaving the values empty.\\n\\n**Available colors**: berry_red, red, orange, yellow, olive_green, lime_green, green, mint_green, teal, sky_blue, light_blue, blue, grape, violet, lavender, magenta, salmon, charcoal, grey, taup. If user asks for any other, choose the one that suits best or leave empty.\\n\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"4c853013-c820-42c8-a78b-809d86f32ffd\",\"name\":\"Update a Label\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[760,760],\"parameters\":{\"url\":\"={{ `https://api.todoist.com/rest/v2/labels/${$fromAI('Label_ID','','string')}` }}\",\"method\":\"POST\",\"options\":{\"pagination\":{\"pagination\":{\"parameters\":{\"parameters\":[{\"name\":\"cursor\",\"value\":\"={{ $response.next_cursor }}\"}]},\"requestInterval\":10}}},\"jsonBody\":\"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"name\\\"), \\\"\\\", \\\"\\\"}}\\\",\\n  \\\"color\\\": \\\"{{ $fromAI(\\\"color\\\", \\\"\\\", \\\"string\\\", \\\"charcoal\\\") }}\\\",\\n  \\\"is_favorite\\\": {{ $fromAI(\\\"is_favourite\\\", \\\"\\\", \\\"boolean\\\", \\\"false\\\")}}\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Update a section name. Required: Label_ID. Optional: name, color, is_favorite. If the user did not mention it, just skip it leaving the values empty. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"9a737bf5-df4d-4790-868c-df0839ea048e\",\"name\":\"Delete a Label\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[900,760],\"parameters\":{\"url\":\"={{ `https://api.todoist.com/rest/v2/labels/${$fromAI('Label_ID','','string')}` }}\",\"method\":\"DELETE\",\"options\":{},\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Delete a label. Required: Label_ID. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"de99b281-e3b4-4e6f-b7c1-f715c9ffac49\",\"name\":\"Add a Comment\",\"type\":\"n8n-nodes-base.httpRequestTool\",\"position\":[280,940],\"parameters\":{\"url\":\"https://api.todoist.com/rest/v2/comments\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"content\\\": \\\"{{ $fromAI(\\\"comment\\\") }}\\\",\\n  \\\"task_id\\\": {{ $fromAI(\\\"Task_ID\\\", \\\"\\\", \\\"number\\\") }}\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"toolDescription\":\"Create a comment for a task. Only text comments, files are not supported at the time. Required: comment, Task_ID. Do not expose internal IDs.\",\"nodeCredentialType\":\"todoistOAuth2Api\"},\"credentials\":{\"todoistOAuth2Api\":{\"id\":\"OHdgpeDzwODbpE2p\",\"name\":\"Todoist maxemelyanenko@gmail.com\"}},\"typeVersion\":4.2},{\"id\":\"1b0d6203-775e-4bba-a880-ebc6acfa5e3d\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-920,-460],\"parameters\":{\"width\":760,\"height\":1360,\"content\":\"# 🪄 Ultimate Personal **Todoist Agent**\\n\\nTurn natural-language requests into perfectly-organized Todoist tasks—all on autopilot inside **n8n**.\\n\\n&gt; “Add *Finish quarterly report by Friday afternoon*” → the agent creates the task, sets the due date & priority, and even drops it into the right project. ✨\\n\\n---\\n\\n\\n## 🛠️ What you’ll need\\n\\n| Credential         | Where it’s used                        | How to set it up                                                                              |\\n| ------------------ | -------------------------------------- | --------------------------------------------------------------------------------------------- |\\n| **OpenAI API**     | Orchestrator & LLM nodes               | Paste your OpenAI secret key into an **OpenAI** credential in n8n.                            |\\n| **Todoist OAuth2** | Todoist node **and** HTTP Request node | Log in **Todoist** from your browser to set up credential in n8n. |\\n\\n&gt; That’s it—no webhooks, no extra secrets.\\n&gt; *Tested with **gpt‑4o‑latest** – the fastest & most accurate model in our trials.*\\n\\n---\\n\\n\\n## ⚡ Quick‑start (5 minutes)\\n\\n1. **Import** the JSON template (hit **▶️ Try it out** on the n8n template page or drag‑drop the file into your canvas).\\n2. **Select your credentials** in the two credential dropdowns.\\n3. Click **Test workflow**. In the sample Function node, tweak the `message` field (e.g. *“Tomorrow at 9 am: write blog post”*). Run → watch your new Todoist task appear.\\n4. (Optional) Swap the Function node for your favourite chat trigger (Telegram, Slack, WhatsApp, Discord, you name it).\\n\\nBoom—your personal Todoist genie is alive! 🧞‍♂️\\n\\n---\\n\\n\\n## 🎛️ Customising & extending\\n\\n| Idea                      | How to do it                                                                             |\\n| ------------------------- | ---------------------------------------------------------------------------------------- |\\n| **Notion / Sheets sync**  | After the Todoist Agent node, add a Notion or Google Sheets node to log completed items. |\\n| **Voice commands**        | Swap the chat trigger for a Speech‑to‑Text node (e.g. Whisper).                          |\\n\\n---\\n\\n\\n## 🤝 Need custom automations?\\n\\nWant me to build or tweak something for you?\\n→ Email **[maxemelyanenko@gmail.com](mailto:maxemelyanenko@gmail.com)** and let’s make it happen!\\n\\n---\\n\\n\\n## ⚠️ What’s *not* included (yet)\\n\\n* Shared projects & other Todoist **Pro/Business** endpoints.\\n* File attachments in the comments.\\n* Editing comments.\\n\\nPull requests welcome! 🙌\\n\"},\"typeVersion\":1},{\"id\":\"cdaf3b99-5b31-4893-b63a-02382e0d88d1\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-60,-460],\"parameters\":{\"color\":2,\"width\":740,\"height\":420,\"content\":\"*The Orchestrator is an example.* In production you can drop it and simply expose the **Todoist Agent**\\nas a tool for any other agent workflow.\"},\"typeVersion\":1}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"e0e6901b-0581-404d-9970-86b07a56cf92\",\"connections\":{\"Get a Task\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get a Label\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Move a Task\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Add a Comment\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Create a Task\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get All Tasks\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get a Project\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get a Section\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Reopen a Task\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Simple Memory\":{\"ai_memory\":[[{\"node\":\"Orchestrator\",\"type\":\"ai_memory\",\"index\":0}]]},\"Update a Task\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Create a Label\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Delete a Label\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get All Labels\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Update a Label\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Create a Project\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Create a Section\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Delete a Section\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get All Projects\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get All Sections\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Update a Project\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Update a Section\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Archive a Project\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Mark Task as Done\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Call Todoist Agent\":{\"ai_tool\":[[{\"node\":\"Orchestrator\",\"type\":\"ai_tool\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"Orchestrator\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Unarchive a Project\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get Archived Projects\":{\"ai_tool\":[[{\"node\":\"Todoist Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"Orchestrator\",\"type\":\"main\",\"index\":0}]]},\"When Executed by Another Workflow\":{\"main\":[[{\"node\":\"Todoist Agent\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "Turn plain-language chat like “Tomorrow 9 AM: write blog post” into neatly organised Todoist tasks with GPT-4o and n8n—zero code.\n\n![ultimate_todoist_agent.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/ultimate_todoist_agent_b61542406a.png)\n\n# 🪄 Ultimate Personal **Todoist Agent**\n\nTurn natural-language requests into perfectly-organized Todoist tasks—all on autopilot inside **n8n**.\n\n> “Add _Finish quarterly report by Friday afternoon_ ” → the agent creates the task, sets the due date & priority, and even drops it into the right project. ✨\n\n* * *\n\n## 🌟 Why this workflow rocks\n\n  * **All-in-one Todoist super‑powers** – create, update, complete, move, archive… every major Todoist endpoint is wired up (tasks, projects, sections, labels, comments).\n  * **LLM‑powered intent detection** – an OpenAI model interprets plain-English (or emoji‑filled!) messages so you don’t have to remember slash‑commands.\n  * **Minimal setup** – just two credentials and you’re live.\n  * **Battle‑tested building block** – use it as‑is, or plug the Todoist Agent node into your own agents & chatbots.\n\n\n\n* * *\n\n## 🛠️ What you’ll need\n\nCredential | Where it’s used | How to set it up  \n---|---|---  \n**OpenAI API** | Orchestrator & LLM nodes | Paste your OpenAI secret key into an **OpenAI** credential in n8n.  \n**Todoist OAuth2** | Todoist node **and** HTTP Request node | Log in **Todoist** from your browser to set up credential in n8n.  \n  \n> That’s it—no webhooks, no extra secrets.  \n>  _Tested with**gpt‑4o‑latest** – the fastest & most accurate model in our trials._\n\n* * *\n\n## ⚡ Quick‑start (5 minutes)\n\n  1. **Import** the JSON template (hit **▶️ Try it out** on the n8n template page or drag‑drop the file into your canvas).\n  2. **Select your credentials** in the two credential dropdowns.\n  3. Click **Test workflow**. In the sample Function node, tweak the `message` field (e.g. _“Tomorrow at 9 am: write blog post”_). Run → watch your new Todoist task appear.\n  4. (Optional) Swap the Function node for your favourite chat trigger (Telegram, Slack, WhatsApp, Discord, you name it).\n\n\n\nBoom—your personal Todoist genie is alive! 🧞‍♂️\n\n* * *\n\n## 🧩 How it works (under the hood)\n    \n    \n    [Trigger / Chat message]\n            │\n            ▼\n    [🗂️ Orchestrator Agent]  ← OpenAI Chat Model + Short‑term Memory\n            │                 ↳ Parses intent & entities\n            │\n            ▼\n    [🤖 Todoist Agent]       ← 15+ Todoist endpoints\n            │                 ↳ Executes the right call (create, update, complete, etc.)\n            ▼\n    [Done ✅  ]\n    \n\n_The Orchestrator is an example._ In production you can drop it and simply expose the **Todoist Agent** as a tool for any other agent workflow.\n\n* * *\n\n## 🎛️ Customising & extending\n\nIdea | How to do it  \n---|---  \n**Notion / Sheets sync** | After the Todoist Agent node, add a Notion or Google Sheets node to log completed items.  \n**Voice commands** | Swap the chat trigger for a Speech‑to‑Text node (e.g. Whisper).  \n  \n* * *\n\n## 🤝 Need custom automations?\n\nWant me to build or tweak something for you?  \n→ Email **[maxemelyanenko@gmail.com](mailto:maxemelyanenko@gmail.com)** and let’s make it happen!\n\n* * *\n\n## ⚠️ What’s _not_ included (yet)\n\n  * Shared projects & other Todoist **Pro/Business** endpoints.\n  * File attachments in the comments.\n  * Editing comments.\n\n\n\nPull requests welcome! 🙌\n",
  "crawled_at": "2025-05-26T06:47:54.618274",
  "readme_zh": "将“明天上午9点：写博客文章”这样的日常聊天语言，通过GPT-4o和n8n（无需编写代码）转化为整齐有序的Todoist任务。\n\n![终极待办事项助手.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/ultimate_todoist_agent_b61542406a.png)\n\n# 🪄 终极个人**Todoist助手**\n\n将自然语言请求转化为完美组织的Todoist任务——这一切都在**n8n**中自动完成。\n\n> “添加_周五下午完成季度报告_” → 助手会创建任务、设置截止日期和优先级，甚至将其放入正确的项目中。✨\n\n* * *\n\n## 🌟 为何此工作流如此出色\n\n  * **Todoist全能功能** – 创建、更新、完成、移动、归档……每个主要的Todoist端点都已连接（任务、项目、部分、标签、评论）。\n  * **LLM驱动的意图识别** – OpenAI模型解析纯英文（或充满表情符号的！）消息，因此您无需记住斜杠命令。\n  * **极简设置** – 只需两个凭证即可启动。\n  * **经过实战检验的构建模块** – 直接使用，或将Todoist助手节点插入您自己的助手和聊天机器人中。\n\n* * *\n\n## 🛠️ 所需准备\n\n凭证 | 使用位置 | 设置方法  \n---|---|---  \n**OpenAI API** | 协调器和LLM节点 | 在n8n的**OpenAI**凭证中粘贴您的OpenAI密钥。  \n**Todoist OAuth2** | Todoist节点**和**HTTP请求节点 | 通过浏览器登录**Todoist**，在n8n中设置凭证。  \n\n> 仅此而已——无需Webhooks，无需额外密钥。  \n>  _测试使用**gpt‑4o‑latest**——我们试验中最快且最准确的模型。_\n\n* * *\n\n## ⚡ 快速启动（5分钟）\n\n  1. **导入**JSON模板（在n8n模板页面点击**▶️ 试用**或将文件拖放到画布中）。\n  2. **选择凭证**在两个凭证下拉菜单中。\n  3. 点击**测试工作流**。在示例函数节点中，调整`message`字段（例如_“明天上午9点：写博客文章”_）。运行→观察新Todoist任务出现。\n  4. （可选）将函数节点替换为您喜欢的聊天触发器（Telegram、Slack、WhatsApp、Discord等）。\n\n搞定——您的个人Todoist精灵已激活！🧞‍♂️\n\n* * *\n\n## 🧩 工作原理（幕后）\n    \n    \n    [触发器 / 聊天消息]\n            │\n            ▼\n    [🗂️ 协调器助手]  ← OpenAI聊天模型 + 短期记忆\n            │                 ↳ 解析意图和实体\n            │\n            ▼\n    [🤖 Todoist助手]       ← 15+ Todoist端点\n            │                 ↳ 执行正确的调用（创建、更新、完成等）\n            ▼\n    [完成 ✅  ]\n    \n\n_协调器是一个示例。_ 在生产环境中，您可以删除它，仅将**Todoist助手**作为工具暴露给其他助手工作流。\n\n* * *\n\n## 🎛️ 自定义与扩展\n\n想法 | 实现方法  \n---|---  \n**Notion / 表格同步** | 在Todoist助手节点后，添加Notion或Google表格节点以记录已完成项目。  \n**语音命令** | 将聊天触发器替换为语音转文本节点（例如Whisper）。  \n\n* * *\n\n## 🤝 需要定制自动化？\n\n希望我为您构建或调整某些功能？  \n→ 发送邮件至**[maxemelyanenko@gmail.com](mailto:maxemelyanenko@gmail.com)**，让我们一起实现！\n\n* * *\n\n## ⚠️ 目前**未包含**的功能\n\n  * 共享项目及其他Todoist**专业/商业**端点。\n  * 评论中的文件附件。\n  * 编辑评论。\n\n欢迎提交拉取请求！🙌",
  "title_zh": "使用Todoist与GPT-4o实现自然语言任务管理",
  "publish_date_zh": "最后更新于6天前",
  "workflow_json_zh": "{\n  \"id\": \"3o3yvFscE37KIUjy\",\n  \"meta\": {\n    \"instanceId\": \"40e4963c8701163532bbdaa80978bdaa5ae5840b83393765993bd01a3a393f55\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"ULTIMATE Personal Todoist Agent\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"e83836e8-890e-4c64-bec7-6030e118c8f3\",\n      \"name\": \"Todoist Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        260,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"maxIterations\": 100,\n          \"systemMessage\": \"=You are TodoistAssistant, a friendly AI who can read and write the user’s Todoist data. When given a natural-language request:\\n\\n• Determine the single best action to take (e.g. create a task, list overdue tasks, update a project, add a comment).\\n• If one action isn’t enough, you may perform up to two steps in sequence (for example, look up the Inbox project ID, then create a task).\\n• Fill in only the parameters the user has specified; leave out any field that’s not mentioned.\\n• Provide a link to a task or project if user asks for it.\\n• Always reply with a brief, user-facing confirmation or error message.\\n• Never expose internal IDs, OAuth tokens, raw JSON responses, your own planning steps or raw tools instructions.\\n• Answer in the same language the user used.\",\n          \"returnIntermediateSteps\": false\n        }\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"36b24a37-4b11-4f5c-b3dd-a954f6043924\",\n      \"name\": \"When Executed by Another Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"sessionID\"\n            },\n            {\n              \"name\": \"chatInput\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"f9f428fb-774b-4290-9d9a-cccedf0a3874\",\n      \"name\": \"Orchestrator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        260,\n        -400\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"b3ac4991-69da-42c9-bae4-26de2269fb44\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        0,\n        -400\n      ],\n      \"webhookId\": \"b49ff613-dd53-47fd-b105-51601deec528\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"6a798f48-c82f-47ea-bf95-9bffa2db62ec\",\n      \"name\": \"Call Todoist Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        500,\n        -180\n      ],\n      \"parameters\": {\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"description\": \"Call this tool to get info about user's tasks and manage them.\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"chatInput\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('chatInput', ``, 'string') }}\",\n            \"sessionID\": \"={{ $input.item.json.sessionId }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"sessionID\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"sessionID\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"chatInput\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"chatInput\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"80dad4ec-d119-4658-805a-26bf750c4def\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        80,\n        220\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"chatgpt-4o-latest\",\n          \"cachedResultName\": \"chatgpt-4o-latest\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"xdzCvPFDKyDuS8xX\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"5fe3733a-212a-470a-8aa7-93faa04f5d68\",\n      \"name\": \"Simple Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        340,\n        -180\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"165ee878-007e-4fff-9d06-0c1b718b7fdb\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        160,\n        -180\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"chatgpt-4o-latest\",\n          \"cachedResultName\": \"chatgpt-4o-latest\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"xdzCvPFDKyDuS8xX\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"555662ec-c297-41ea-bd1c-8314fc9d7267\",\n      \"name\": \"Get All Tasks\",\n      \"type\": \"n8n-nodes-base.todoistTool\",\n      \"position\": [\n        280,\n        220\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"filter\": \"={{ $fromAI(\\\"filter\\\", \\\"\\\", \\\"string\\\") }}\"\n        },\n        \"operation\": \"getAll\",\n        \"returnAll\": true,\n        \"authentication\": \"oAuth2\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"=List tasks via the Todoist “advanced filter” syntax.\\n\\nParameters  \\n• filter (string) – main query. Build it from the user’s words using Todoist’s grammar:  \\n  › Relative dates: today, tomorrow, next 7 days, overdue  \\n  › Absolute dates: 20 May, 2025-06-01  \\n  › Priority: p1 … p4  (p1 is normal, p4 is extremely high)\\n  › Labels: @reading, @звонок (label names are case-insensitive) — call label_get_all to see acceptable ones  \\n  › Projects / Sections: ##Project Name / ##Project::Section — call project_get_all to see acceptable ones\\n  › No date: no date  \\n  › Boolean operators: & (AND), | (OR), ! (NOT)  \\n  › Parentheses allowed.\\n\\nIt's more reliable to use IDs instead of names in query.\\n\\nNever populate ids, projectId, sectionId, or labelId unless the user provided the exact numeric value (> 0), and in that case omit filter.\\n\\nCombine multiple clauses with **&** unless the user explicitly says “или” / “or”.\\n\\nIf the filter includes @label, assume the label exists; the agent must have already called \\\"Get All Labels\\\".\\n\\nIf the user asks about available filters, mind calling \\\"Get All Labels\\\" to provide correct labels.\\n\\nIf the user asks about available filters, mind calling \\\"Get All Projects\\\" to provide correct projects.\\n\\n• lang – (string) user language code; pass “ru” if the request was in Russian, otherwise omit.\\n\\nNever pass ids, projectId, sectionId, or labelId unless the user gave the exact numeric value (>0).\\n\\nOutput only a concise list (e.g. “X overdue tasks: …”) and hide raw IDs.\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"13b0cc4d-e965-40ec-87a1-71cf09d2e1b7\",\n      \"name\": \"Get a Task\",\n      \"type\": \"n8n-nodes-base.todoistTool\",\n      \"position\": [\n        440,\n        220\n      ],\n      \"parameters\": {\n        \"taskId\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\n        \"operation\": \"get\",\n        \"authentication\": \"oAuth2\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Fetch a single task by task_id and show user-readable fields (content, due date, status). Required: Task_ID. Do not expose internal IDs.\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"0e1ab623-99b2-444c-bfa1-5b9175b48cd7\",\n      \"name\": \"Create a Task\",\n      \"type\": \"n8n-nodes-base.todoistTool\",\n      \"position\": [\n        600,\n        220\n      ],\n      \"parameters\": {\n        \"labels\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}\",\n        \"content\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Content', ``, 'string') }}\",\n        \"options\": {\n          \"dueLang\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_String_Locale', ``, 'string') }}\",\n          \"section\": \"={{ $fromAI('Section_ID', ``, 'number') }}\",\n          \"parentId\": \"={{ $fromAI('Parent_ID', ``, \\\"number\\\") }}\",\n          \"priority\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Priority', ``, 'number') }}\",\n          \"dueString\": \"={{ $fromAI('Due_String', ``, 'string') }}\",\n          \"description\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}\",\n          \"dueDateTime\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_Date_Time', ``, 'string') }}\"\n        },\n        \"project\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $fromAI('Project_ID','','string') || undefined }}\"\n        },\n        \"authentication\": \"oAuth2\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Create a new task.\\nRequired: content.\\nOptional: project_id, section_id, labels, due_date_time, priority, description.\\n\\nIf the user does NOT mention a project, find a suitable one calling project_get_all. If nothing is suitable, call this task **without** a project_id (Todoist will put it in Inbox automatically).\\nReturn a short confirmation, no raw IDs.\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"96fcd691-7931-4567-8827-deab0a982f78\",\n      \"name\": \"Update a Task\",\n      \"type\": \"n8n-nodes-base.todoistTool\",\n      \"position\": [\n        760,\n        220\n      ],\n      \"parameters\": {\n        \"taskId\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\n        \"operation\": \"update\",\n        \"updateFields\": {\n          \"labels\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Label_Names_or_IDs', ``, 'string') }}\",\n          \"content\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Content', ``, 'string') }}\",\n          \"dueLang\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_String_Locale', ``, 'string') }}\",\n          \"priority\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Priority', ``, 'number') }}\",\n          \"dueString\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_String', ``, 'string') }}\",\n          \"description\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}\",\n          \"dueDateTime\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Due_Date_Time', ``, 'string') }}\"\n        },\n        \"authentication\": \"oAuth2\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Update an existing task’s properties (content, description, due date, labels, priority). Required: task_id.\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"6cc4b5f1-db09-4abd-a7fc-96cfa7abc39a\",\n      \"name\": \"Mark Task as Done\",\n      \"type\": \"n8n-nodes-base.todoistTool\",\n      \"position\": [\n        920,\n        220\n      ],\n      \"parameters\": {\n        \"taskId\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\n        \"operation\": \"close\",\n        \"authentication\": \"oAuth2\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Mark the given task as completed. Required: Task_ID.\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"20471ae9-8cc5-4996-8880-51a2db040be5\",\n      \"name\": \"Reopen a Task\",\n      \"type\": \"n8n-nodes-base.todoistTool\",\n      \"position\": [\n        1080,\n        220\n      ],\n      \"parameters\": {\n        \"taskId\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\n        \"operation\": \"reopen\",\n        \"authentication\": \"oAuth2\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Reopen a previously completed task. Required: Task_ID.\\n\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"6c7ab7dc-075e-49c9-a339-a89a52ce6d6a\",\n      \"name\": \"Move a Task\",\n      \"type\": \"n8n-nodes-base.todoistTool\",\n      \"position\": [\n        1260,\n        220\n      ],\n      \"parameters\": {\n        \"taskId\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Task_ID', ``, 'string') }}\",\n        \"options\": {\n          \"parent\": \"={{ $fromAI('Parent_ID', ``, 'number') }}\",\n          \"section\": \"={{ $fromAI('Section_ID', ``, 'number') }}\"\n        },\n        \"project\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Project_Name_or_ID', ``, 'string') }}\"\n        },\n        \"operation\": \"move\",\n        \"authentication\": \"oAuth2\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Move a task to another project / section or make it a sub-task. Required: Task_ID; provide project_id/section_id/parent_id as needed.\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"d37afed5-4089-44c4-bd90-deb05e65af2a\",\n      \"name\": \"Get All Projects\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        280,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/rest/v2/projects\",\n        \"options\": {\n          \"pagination\": {\n            \"pagination\": {\n              \"parameters\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"cursor\",\n                    \"value\": \"={{ $response.next_cursor }}\"\n                  }\n                ]\n              },\n              \"requestInterval\": 10\n            }\n          }\n        },\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Return the user’s full project list. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"c22513f5-71e9-48ce-bce3-a26681e95fae\",\n      \"name\": \"Get a Project\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        440,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"={{ `https://api.todoist.com/rest/v2/projects/${$fromAI('Project_ID','','string')}` }}\",\n        \"options\": {\n          \"pagination\": {\n            \"pagination\": {\n              \"parameters\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"cursor\",\n                    \"value\": \"={{ $response.next_cursor }}\"\n                  }\n                ]\n              },\n              \"requestInterval\": 10\n            }\n          }\n        },\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Fetch one project by project_id. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e22a8f09-ab4d-4db5-875f-b47e66139460\",\n      \"name\": \"Create a Project\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        600,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/rest/v2/projects\",\n        \"body\": \"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"project_name\\\", \\\"The name of the project\\\", \\\"string\\\", \\\"New project\\\") }}\\\",\\n  \\\"description\\\": \\\"{{ $fromAI(\\\"project_description\\\", \\\"Project description\\\", \\\"string\\\") }}\\\",\\n  \\\"parent_id\\\": \\\"{{ $fromAI(\\\"parent_project_id\\\", \\\"ID of parent project, if needed\\\", \\\"string\\\", \\\"\\\") }}\\\",\\n  \\\"color\\\":  \\\"{{ $fromAI(\\\"color\\\", \\\"Color from available range\\\", \\\"string\\\", \\\"charcoal\\\") }}\\\",\\n  \\\"is_favorite\\\": {{ $fromAI(\\\"is_favourite\\\", \\\"\\\", \\\"boolean\\\") }}\\n}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"raw\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"rawContentType\": \"application/json\",\n        \"toolDescription\": \"Create a new project. Required: name. Optional: description, color, parent_id, is_favorite. If the user did not mention it, just skip it and leave this values empty.\\n\\n**Available colors**: berry_red, red, orange, yellow, olive_green, lime_green, green, mint_green, teal, sky_blue, light_blue, blue, grape, violet, lavender, magenta, salmon, charcoal, grey, taup. If user asks for any other, choose the one that suits best or leave empty.\\n\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"4002115e-f01e-4f9a-826a-4284bb33e88e\",\n      \"name\": \"Update a Project\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        760,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"={{ `https://api.todoist.com/rest/v2/projects/${$fromAI('Project_ID','','string')}` }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"project_name\\\", \\\"The name of the project\\\", \\\"string\\\", \\\"New project\\\") }}\\\",\\n  \\\"description\\\": \\\"{{ $fromAI(\\\"project_description\\\", \\\"Project description\\\", \\\"string\\\") }}\\\",\\n  \\\"parent_id\\\": \\\"{{ $fromAI(\\\"parent_project_id\\\", \\\"ID of parent project, if needed\\\", \\\"string\\\", \\\"\\\") }}\\\",\\n  \\\"color\\\":  \\\"{{ $fromAI(\\\"color\\\", \\\"Color from available range\\\", \\\"string\\\", \\\"charcoal\\\") }}\\\",\\n  \\\"is_favorite\\\": {{ $fromAI(\\\"is_favourite\\\", \\\"\\\", \\\"boolean\\\") }}\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Update a project. Required: Project_ID. Optional: name, description, color, parent_id, is_favorite. If the user did not mention it, just skip it and leave this values empty.\\n\\n**Available colors**: berry_red, red, orange, yellow, olive_green, lime_green, green, mint_green, teal, sky_blue, light_blue, blue, grape, violet, lavender, magenta, salmon, charcoal, grey, taup. If user asks for any other, choose the one that suits best or leave empty.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"82f5b3d9-1444-47a9-b034-0cc296206ec2\",\n      \"name\": \"Archive a Project\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        920,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"={{ `https://api.todoist.com/rest/v2/projects/${$fromAI('Project_ID','','string')}/archive` }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Marks a project as archived. For personal projects, this will archive it just for the initiating user (leaving it visible to any other collaborators). For workspace projects, this will archive it for all workspace users, removing it from view. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"43a92f6c-f55c-4cad-bb00-090310e4d4d0\",\n      \"name\": \"Get Archived Projects\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        1080,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/api/v1/projects/archived\",\n        \"options\": {\n          \"pagination\": {\n            \"pagination\": {\n              \"parameters\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"cursor\",\n                    \"value\": \"={{ $response.next_cursor }}\"\n                  }\n                ]\n              },\n              \"requestInterval\": 10\n            }\n          }\n        },\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Return the user’s archived project list. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"71114ba0-5f5b-4033-884a-8f38f8f5d6b1\",\n      \"name\": \"Unarchive a Project\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        1260,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"={{ `https://api.todoist.com/rest/v2/projects/${$fromAI('Project_ID','','string')}/unarchive` }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Marks a previously archived project as active again. For personal projects, this will make the project visible again for the initiating user. For workspace projects, this will make the project visible again for all applicable workspace users. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"7092954e-93e1-440f-aa64-60b708ed7443\",\n      \"name\": \"Get All Sections\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        280,\n        580\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/rest/v2/sections\",\n        \"options\": {\n          \"pagination\": {\n            \"pagination\": {\n              \"parameters\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"cursor\",\n                    \"value\": \"={{ $response.next_cursor }}\"\n                  }\n                ]\n              },\n              \"requestInterval\": 10\n            }\n          }\n        },\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Return the user’s full sections list. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"2a0a5f63-7c3c-40c0-9d86-c7f3f8b2fd15\",\n      \"name\": \"Get a Section\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        440,\n        580\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.todoist.com/rest/v2/sections/{{ $fromAI(\\\"Section_ID\\\", \\\"\\\", \\\"number\\\") }}\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Fetch one section by section_id. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"196aa7d8-5830-48fe-bf8b-e6e0ce093417\",\n      \"name\": \"Create a Section\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        600,\n        580\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/rest/v2/sections\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"section_name\\\", \\\"\\\", \\\"string\\\") }}\\\",\\n  \\\"project_id\\\": {{ $fromAI (\\\"Project_ID\\\", \\\"\\\", \\\"number\\\") }}\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Create a new project. Required: name, project_id. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"fb63f214-410a-42a8-b0b5-98492f57868f\",\n      \"name\": \"Update a Section\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        760,\n        580\n      ],\n      \"parameters\": {\n        \"url\": \"={{ `https://api.todoist.com/rest/v2/sections/${$fromAI('Section_ID','','string')}` }}\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"section_name\\\", \\\"\\\", \\\"string\\\") }}\\\"\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Update a section name. Required: Section_ID, name. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"60b3dc22-bf0a-40c5-b373-62163cbe25ec\",\n      \"name\": \"Delete a Section\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        900,\n        580\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.todoist.com/rest/v2/sections/{{ $fromAI(\\\"Section_ID\\\", \\\"\\\", \\\"number\\\") }}\",\n        \"method\": \"DELETE\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Delete a section. Required: Section_ID. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"29aaeb54-4350-4fc6-b8e1-3f7eaed20dba\",\n      \"name\": \"Get All Labels\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        280,\n        760\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/rest/v2/labels\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Return the user’s full labels list. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"c868ad86-38c6-4061-aff4-abfa4b665e3e\",\n      \"name\": \"Get a Label\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        440,\n        760\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.todoist.com/rest/v2/labels/{{ $fromAI(\\\"Label_ID\\\", \\\"\\\", \\\"number\\\") }}\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Fetch one label by Label_ID. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"5c3e5bc5-711e-408f-86cd-472f357b2e51\",\n      \"name\": \"Create a Label\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        600,\n        760\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/rest/v2/labels\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"pagination\": {\n            \"pagination\": {\n              \"parameters\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"cursor\",\n                    \"value\": \"={{ $response.next_cursor }}\"\n                  }\n                ]\n              },\n              \"requestInterval\": 10\n            }\n          }\n        },\n        \"jsonBody\": \"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"name\\\") }}\\\",\\n  \\\"color\\\": \\\"{{ $fromAI(\\\"color\\\", \\\"\\\", \\\"string\\\", \\\"charcoal\\\") }}\\\",\\n  \\\"is_favorite\\\": {{ $fromAI(\\\"is_favourite\\\", \\\"\\\", \\\"boolean\\\", \\\"false\\\")}}\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Create a new label. Required: name. Optional: color, is_favorite. If the user did not mention it, just skip it leaving the values empty.\\n\\n**Available colors**: berry_red, red, orange, yellow, olive_green, lime_green, green, mint_green, teal, sky_blue, light_blue, blue, grape, violet, lavender, magenta, salmon, charcoal, grey, taup. If user asks for any other, choose the one that suits best or leave empty.\\n\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"4c853013-c820-42c8-a78b-809d86f32ffd\",\n      \"name\": \"Update a Label\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        760,\n        760\n      ],\n      \"parameters\": {\n        \"url\": \"={{ `https://api.todoist.com/rest/v2/labels/${$fromAI('Label_ID','','string')}` }}\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"pagination\": {\n            \"pagination\": {\n              \"parameters\": {\n                \"parameters\": [\n                  {\n                    \"name\": \"cursor\",\n                    \"value\": \"={{ $response.next_cursor }}\"\n                  }\n                ]\n              },\n              \"requestInterval\": 10\n            }\n          }\n        },\n        \"jsonBody\": \"={\\n  \\\"name\\\": \\\"{{ $fromAI(\\\"name\\\"), \\\"\\\", \\\"\\\"}}\\\",\\n  \\\"color\\\": \\\"{{ $fromAI(\\\"color\\\", \\\"\\\", \\\"string\\\", \\\"charcoal\\\") }}\\\",\\n  \\\"is_favorite\\\": {{ $fromAI(\\\"is_favourite\\\", \\\"\\\", \\\"boolean\\\", \\\"false\\\")}}\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Update a section name. Required: Label_ID. Optional: name, color, is_favorite. If the user did not mention it, just skip it leaving the values empty. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"9a737bf5-df4d-4790-868c-df0839ea048e\",\n      \"name\": \"Delete a Label\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        900,\n        760\n      ],\n      \"parameters\": {\n        \"url\": \"={{ `https://api.todoist.com/rest/v2/labels/${$fromAI('Label_ID','','string')}` }}\",\n        \"method\": \"DELETE\",\n        \"options\": {},\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Delete a label. Required: Label_ID. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"de99b281-e3b4-4e6f-b7c1-f715c9ffac49\",\n      \"name\": \"Add a Comment\",\n      \"type\": \"n8n-nodes-base.httpRequestTool\",\n      \"position\": [\n        280,\n        940\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.todoist.com/rest/v2/comments\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"content\\\": \\\"{{ $fromAI(\\\"comment\\\") }}\\\",\\n  \\\"task_id\\\": {{ $fromAI(\\\"Task_ID\\\", \\\"\\\", \\\"number\\\") }}\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"toolDescription\": \"Create a comment for a task. Only text comments, files are not supported at the time. Required: comment, Task_ID. Do not expose internal IDs.\",\n        \"nodeCredentialType\": \"todoistOAuth2Api\"\n      },\n      \"credentials\": {\n        \"todoistOAuth2Api\": {\n          \"id\": \"OHdgpeDzwODbpE2p\",\n          \"name\": \"Todoist maxemelyanenko@gmail.com\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"1b0d6203-775e-4bba-a880-ebc6acfa5e3d\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -920,\n        -460\n      ],\n      \"parameters\": {\n        \"width\": 760,\n        \"height\": 1360,\n        \"content\": \"# 🪄 终极个人 **Todoist智能助手**\\n\\n将自然语言请求自动转化为完美组织的Todoist任务——全部在**n8n**中自动运行。\\n\\n&gt; 输入\\\"周五下午前完成季度报告\\\" → 助手自动创建任务、设置截止日期和优先级，甚至归入正确项目 ✨\\n\\n---\\n\\n## 🛠️ 所需准备\\n\\n| 凭证            | 使用场景                     | 设置方法                                                                              |\\n|----------------|----------------------------|-------------------------------------------------------------------------------------|\\n| **OpenAI API** | 流程编排和LLM节点            | 在n8n的**OpenAI**凭证中粘贴您的API密钥                                                 |\\n| **Todoist OAuth2** | Todoist节点和HTTP请求节点 | 通过浏览器登录**Todoist**后在n8n中配置凭证                                              |\\n\\n&gt; 仅此而已——无需webhook或额外密钥。\\n&gt; *经测试**gpt‑4o‑latest**模型表现最佳——速度最快且最精准。*\\n\\n---\\n\\n## ⚡ 快速开始（5分钟）\\n\\n1. **导入**JSON模板（在n8n模板页面点击**▶️ 立即试用**或拖拽文件到画布）\\n2. **选择凭证**（在两个凭证下拉菜单中）\\n3. 点击**测试工作流**。在示例函数节点中修改`message`字段（如\\\"明早9点：写博客文章\\\"）。运行→观察新任务出现在Todoist\\n4. （可选）将函数节点替换为您喜欢的聊天触发器（Telegram/Slack/WhatsApp/Discord等）\\n\\n叮——您的Todoist精灵已上线！🧞‍♂️\\n\\n---\\n\\n## 🎛️ 定制与扩展\\n\\n| 创意                     | 实现方法                                                                             |\\n|-------------------------|------------------------------------------------------------------------------------|\\n| **Notion/表格同步**      | 在Todoist节点后添加Notion或Google Sheets节点记录已完成事项                           |\\n| **语音指令**             | 将聊天触发器替换为语音转文字节点（如Whisper）                                         |\\n\\n---\\n\\n## 🤝 需要定制自动化方案？\\n\\n想要我们为您构建或调整功能？\\n→ 发送邮件至 **[maxemelyanenko@gmail.com](mailto:maxemelyanenko@gmail.com)** 让我们实现它！\\n\\n---\\n\\n## ⚠️ 暂未支持功能\\n\\n* 共享项目等Todoist**专业版/企业版**功能\\n* 评论中的文件附件\\n* 评论编辑\\n\\n欢迎提交Pull Request！🙌\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cdaf3b99-5b31-4893-b63a-02382e0d88d1\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -60,\n        -460\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 740,\n        \"height\": 420,\n        \"content\": \"*编排器（Orchestrator）即为一例。* 实际部署时可将其移除，直接将**Todoist智能体**作为工具接入其他智能体工作流。  \\n\\n（注：根据技术文档语境进行以下处理：\\n1. \\\"Orchestrator\\\"译为行业通用术语\\\"编排器\\\"，首字母大写保持一致性\\n2. \\\"production\\\"译为\\\"实际部署\\\"而非字面\\\"生产环境\\\"，更符合中文技术文档表述习惯\\n3. \\\"expose as a tool\\\"译为\\\"作为工具接入\\\"，准确传达API/服务暴露的技术概念\\n4. 保留\\\"Todoist Agent\\\"专有名词不翻译，维持产品名称一致性\\n5. 使用\\\"智能体\\\"而非\\\"代理\\\"翻译\\\"agent\\\"，符合当前AI领域术语规范）\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e0e6901b-0581-404d-9970-86b07a56cf92\",\n  \"connections\": {\n    \"Get a Task\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a Label\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Move a Task\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Add a Comment\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create a Task\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Tasks\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a Project\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get a Section\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Reopen a Task\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Simple Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Orchestrator\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update a Task\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create a Label\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Delete a Label\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Labels\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update a Label\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create a Project\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create a Section\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Delete a Section\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Projects\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Sections\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update a Project\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update a Section\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Archive a Project\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Mark Task as Done\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Call Todoist Agent\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Orchestrator\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Orchestrator\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Unarchive a Project\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Archived Projects\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Orchestrator\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When Executed by Another Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Todoist Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}