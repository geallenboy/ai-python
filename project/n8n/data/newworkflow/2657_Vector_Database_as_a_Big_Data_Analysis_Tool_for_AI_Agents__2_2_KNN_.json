{
  "url": "https://n8n.io/workflows/2657-vector-database-as-a-big-data-analysis-tool-for-ai-agents-22-knn/",
  "title": "Vector Database as a Big Data Analysis Tool for AI Agents [2/2 KNN]",
  "author": "Jenny",
  "publish_date": "Last update 5 months ago",
  "publish_date_absolute": "2024-12-26",
  "categories": [
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"itzURpN5wbUNOXOw\",\"meta\":{\"instanceId\":\"205b3bc06c96f2dc835b4f00e1cbf9a937a74eeb3b47c99d0c30b0586dbf85aa\"},\"name\":\"[2/2] KNN classifier (lands dataset)\",\"tags\":[{\"id\":\"QN7etptCmdcGIpkS\",\"name\":\"classifier\",\"createdAt\":\"2024-12-08T22:08:15.968Z\",\"updatedAt\":\"2024-12-09T19:25:04.113Z\"}],\"nodes\":[{\"id\":\"33373ccb-164e-431c-8a9a-d68668fc70be\",\"name\":\"Embed image\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-140,-240],\"parameters\":{\"url\":\"https://api.voyageai.com/v1/multimodalembeddings\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={{\\n{\\n  \\\"inputs\\\": [\\n    {\\n      \\\"content\\\": [\\n        {\\n          \\\"type\\\": \\\"image_url\\\",\\n          \\\"image_url\\\": $json.imageURL\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"model\\\": \\\"voyage-multimodal-3\\\",\\n  \\\"input_type\\\": \\\"document\\\"\\n}\\n}}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"Vb0RNVDnIHmgnZOP\",\"name\":\"Voyage API\"}},\"typeVersion\":4.2},{\"id\":\"58adecfa-45c7-4928-b850-053ea6f3b1c5\",\"name\":\"Query Qdrant\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[440,-240],\"parameters\":{\"url\":\"={{ $json.qdrantCloudURL }}/collections/{{ $json.collectionName }}/points/query\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={{\\n{\\n  \\\"query\\\": $json.ImageEmbedding,\\n  \\\"using\\\": \\\"voyage\\\",\\n  \\\"limit\\\": $json.limitKNN,\\n  \\\"with_payload\\\": true\\n}\\n}}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"qdrantApi\"},\"credentials\":{\"qdrantApi\":{\"id\":\"it3j3hP9FICqhgX6\",\"name\":\"QdrantApi account\"}},\"typeVersion\":4.2},{\"id\":\"258026b7-2dda-4165-bfe1-c4163b9caf78\",\"name\":\"Majority Vote\",\"type\":\"n8n-nodes-base.code\",\"position\":[840,-240],\"parameters\":{\"language\":\"python\",\"pythonCode\":\"from collections import Counter\\n\\ninput_json = _input.all()[0]\\npoints = input_json['json']['result']['points']\\nmajority_vote_two_most_common = Counter([point[\\\"payload\\\"][\\\"landscape_name\\\"] for point in points]).most_common(2)\\n\\nreturn [{\\n    \\\"json\\\": {\\n        \\\"result\\\": majority_vote_two_most_common    \\n    }\\n}]\\n\"},\"typeVersion\":2},{\"id\":\"e83e7a0c-cb36-46d0-8908-86ee1bddf638\",\"name\":\"Increase limitKNN\",\"type\":\"n8n-nodes-base.set\",\"position\":[1240,-240],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"0b5d257b-1b27-48bc-bec2-78649bc844cc\",\"name\":\"limitKNN\",\"type\":\"number\",\"value\":\"={{ $('Propagate loop variables').item.json.limitKNN + 5}}\"},{\"id\":\"afee4bb3-f78b-4355-945d-3776e33337a4\",\"name\":\"ImageEmbedding\",\"type\":\"array\",\"value\":\"={{ $('Qdrant variables + embedding + KNN neigbours').first().json.ImageEmbedding }}\"},{\"id\":\"701ed7ba-d112-4699-a611-c0c134757a6c\",\"name\":\"qdrantCloudURL\",\"type\":\"string\",\"value\":\"={{ $('Qdrant variables + embedding + KNN neigbours').first().json.qdrantCloudURL }}\"},{\"id\":\"f5612f78-e7d8-4124-9c3a-27bd5870c9bf\",\"name\":\"collectionName\",\"type\":\"string\",\"value\":\"={{ $('Qdrant variables + embedding + KNN neigbours').first().json.collectionName }}\"}]}},\"typeVersion\":3.4},{\"id\":\"8edbff53-cba6-4491-9d5e-bac7ad6db418\",\"name\":\"Propagate loop variables\",\"type\":\"n8n-nodes-base.set\",\"position\":[640,-240],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"880838bf-2be2-4f5f-9417-974b3cbee163\",\"name\":\"=limitKNN\",\"type\":\"number\",\"value\":\"={{ $json.result.points.length}}\"},{\"id\":\"5fff2bea-f644-4fd9-ad04-afbecd19a5bc\",\"name\":\"result\",\"type\":\"object\",\"value\":\"={{ $json.result }}\"}]}},\"typeVersion\":3.4},{\"id\":\"6fad4cc0-f02c-429d-aa4e-0d69ebab9d65\",\"name\":\"Image Test URL\",\"type\":\"n8n-nodes-base.set\",\"position\":[-320,-240],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"46ceba40-fb25-450c-8550-d43d8b8aa94c\",\"name\":\"imageURL\",\"type\":\"string\",\"value\":\"={{ $json.query.imageURL }}\"}]}},\"typeVersion\":3.4},{\"id\":\"f02e79e2-32c8-4af0-8bf9-281119b23cc0\",\"name\":\"Return class\",\"type\":\"n8n-nodes-base.set\",\"position\":[1240,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"bd8ca541-8758-4551-b667-1de373231364\",\"name\":\"class\",\"type\":\"string\",\"value\":\"={{ $json.result[0][0] }}\"}]}},\"typeVersion\":3.4},{\"id\":\"83ca90fb-d5d5-45f4-8957-4363a4baf8ed\",\"name\":\"Check tie\",\"type\":\"n8n-nodes-base.if\",\"position\":[1040,-240],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"980663f6-9d7d-4e88-87b9-02030882472c\",\"operator\":{\"type\":\"number\",\"operation\":\"gt\"},\"leftValue\":\"={{ $json.result.length }}\",\"rightValue\":1},{\"id\":\"9f46fdeb-0f89-4010-99af-624c1c429d6a\",\"operator\":{\"type\":\"number\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.result[0][1] }}\",\"rightValue\":\"={{ $json.result[1][1] }}\"},{\"id\":\"c59bc4fe-6821-4639-8595-fdaf4194c1e1\",\"operator\":{\"type\":\"number\",\"operation\":\"lte\"},\"leftValue\":\"={{ $('Propagate loop variables').item.json.limitKNN }}\",\"rightValue\":100}]}},\"typeVersion\":2.2},{\"id\":\"847ced21-4cfd-45d8-98fa-b578adc054d6\",\"name\":\"Qdrant variables + embedding + KNN neigbours\",\"type\":\"n8n-nodes-base.set\",\"position\":[120,-240],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"de66070d-5e74-414e-8af7-d094cbc26f62\",\"name\":\"ImageEmbedding\",\"type\":\"array\",\"value\":\"={{ $json.data[0].embedding }}\"},{\"id\":\"58b7384d-fd0c-44aa-9f8e-0306a99be431\",\"name\":\"qdrantCloudURL\",\"type\":\"string\",\"value\":\"=https://152bc6e2-832a-415c-a1aa-fb529f8baf8d.eu-central-1-0.aws.cloud.qdrant.io\"},{\"id\":\"e34c4d88-b102-43cc-a09e-e0553f2da23a\",\"name\":\"collectionName\",\"type\":\"string\",\"value\":\"=land-use\"},{\"id\":\"db37e18d-340b-4624-84f6-df993af866d6\",\"name\":\"limitKNN\",\"type\":\"number\",\"value\":\"=10\"}]}},\"typeVersion\":3.4},{\"id\":\"d1bc4edc-37d2-43ac-8d8b-560453e68d1f\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-940,-120],\"parameters\":{\"color\":6,\"width\":320,\"height\":540,\"content\":\"Here we're classifying existing types of satellite imagery of land types:\\n- 'agricultural',\\n- 'airplane',\\n- 'baseballdiamond',\\n- 'beach',\\n- 'buildings',\\n- 'chaparral',\\n- 'denseresidential',\\n- 'forest',\\n- 'freeway',\\n- 'golfcourse',\\n- 'harbor',\\n- 'intersection',\\n- 'mediumresidential',\\n- 'mobilehomepark',\\n- 'overpass',\\n- 'parkinglot',\\n- 'river',\\n- 'runway',\\n- 'sparseresidential',\\n- 'storagetanks',\\n- 'tenniscourt'\\n\"},\"typeVersion\":1},{\"id\":\"13560a31-3c72-43b8-9635-3f9ca11f23c9\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-520,-460],\"parameters\":{\"color\":6,\"content\":\"I tested this KNN classifier on a whole `test` set of a dataset (it's not a part of the collection, only `validation` + `train` parts). Accuracy of classification on `test` is **93.24%**, no fine-tuning, no metric learning.\"},\"typeVersion\":1},{\"id\":\"8c9dcbcb-a1ad-430f-b7dd-e19b5645b0f6\",\"name\":\"Execute Workflow Trigger\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[-520,-240],\"parameters\":{},\"typeVersion\":1},{\"id\":\"b36fb270-2101-45e9-bb5c-06c4e07b769c\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1080,-520],\"parameters\":{\"width\":460,\"height\":380,\"content\":\"## KNN classification workflow-tool\\n### This n8n template takes an image URL (as anomaly detection tool does), and as output, it returns a class of the object on the image (out of land types list)\\n\\n* An image URL is received via the Execute Workflow Trigger, which is then sent to the Voyage.ai Multimodal Embeddings API to fetch its embedding.\\n* The image's embedding vector is then used to query Qdrant, returning a set of X similar images with pre-labeled classes.\\n* Majority voting is done for classes of neighbouring images.\\n* A loop is used to resolve scenarios where there is a tie in Majority Voting (for example, we have 5 \\\"forest\\\" and 5 \\\"beach\\\"), and we increase the number of neighbours to retrieve.\\n* When the loop finally resolves, the identified class is returned to the calling workflow.\"},\"typeVersion\":1},{\"id\":\"51ece7fc-fd85-4d20-ae26-4df2d3893251\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[120,-40],\"parameters\":{\"height\":200,\"content\":\"Variables define another Qdrant's collection with landscapes (uploaded similarly as the crops collection, don't forget to switch it with your data) + amount of neighbours **limitKNN** in the database we'll use for an input image classification.\"},\"typeVersion\":1},{\"id\":\"7aad5904-eb0b-4389-9d47-cc91780737ba\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-180,-60],\"parameters\":{\"height\":80,\"content\":\"Similarly to anomaly detection tool, we're embedding input image with the Voyage model\"},\"typeVersion\":1},{\"id\":\"d3702707-ee4a-481f-82ca-d9386f5b7c8a\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[440,-500],\"parameters\":{\"width\":740,\"height\":200,\"content\":\"## Tie loop\\nHere we're [querying](https://api.qdrant.tech/api-reference/search/query-points) Qdrant, getting  **limitKNN** nearest neighbours to our image <*Query Qdrant node*>, parsing their classes from payloads (images were pre-labeled & uploaded with their labels to Qdrant) & calculating the most frequent class name <*Majority Vote node*>. If there is a tie <*check tie node*> in 2 most common classes, for example, we have 5 \\\"forest\\\" and 5 \\\"harbor\\\", we repeat the procedure with the number of neighbours increased by 5 <*propagate loop variables node* and *increase limitKNN node*>.\\nIf there is no tie, or we have already checked 100 neighbours, we exit the loop <*check tie node*> and return the class-answer.\"},\"typeVersion\":1},{\"id\":\"d26911bb-0442-4adc-8511-7cec2d232393\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1240,160],\"parameters\":{\"height\":80,\"content\":\"Here, we extract the name of the input image class decided by the Majority Vote\\n\"},\"typeVersion\":1},{\"id\":\"84ffc859-1d5c-4063-9051-3587f30a0017\",\"name\":\"Sticky Note10\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-520,80],\"parameters\":{\"color\":4,\"width\":540,\"height\":260,\"content\":\"### KNN (k nearest neighbours) classification\\n1. The first pipeline is uploading (lands) dataset to Qdrant's collection.\\n2. **This is the KNN classifier tool, which takes any image as input and classifies it based on queries to the Qdrant (lands) collection.**\\n\\n### To recreate it\\nYou'll have to upload [lands](https://www.kaggle.com/datasets/apollo2506/landuse-scene-classification) dataset from Kaggle to your own Google Storage bucket, and re-create APIs/connections to [Qdrant Cloud](https://qdrant.tech/documentation/quickstart-cloud/) (you can use **Free Tier** cluster), Voyage AI API & Google Cloud Storage\\n\\n**In general, pipelines are adaptable to any dataset of images**\\n\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{\"Execute Workflow Trigger\":[{\"json\":{\"query\":{\"imageURL\":\"https://storage.googleapis.com/n8n-qdrant-demo/land-use/images_train_test_val/test/buildings/buildings_000323.png\"}}}]},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"c8cfe732-fd78-4985-9540-ed8cb2de7ef3\",\"connections\":{\"Check tie\":{\"main\":[[{\"node\":\"Increase limitKNN\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Return class\",\"type\":\"main\",\"index\":0}]]},\"Embed image\":{\"main\":[[{\"node\":\"Qdrant variables + embedding + KNN neigbours\",\"type\":\"main\",\"index\":0}]]},\"Query Qdrant\":{\"main\":[[{\"node\":\"Propagate loop variables\",\"type\":\"main\",\"index\":0}]]},\"Majority Vote\":{\"main\":[[{\"node\":\"Check tie\",\"type\":\"main\",\"index\":0}]]},\"Image Test URL\":{\"main\":[[{\"node\":\"Embed image\",\"type\":\"main\",\"index\":0}]]},\"Increase limitKNN\":{\"main\":[[{\"node\":\"Query Qdrant\",\"type\":\"main\",\"index\":0}]]},\"Execute Workflow Trigger\":{\"main\":[[{\"node\":\"Image Test URL\",\"type\":\"main\",\"index\":0}]]},\"Propagate loop variables\":{\"main\":[[{\"node\":\"Majority Vote\",\"type\":\"main\",\"index\":0}]]},\"Qdrant variables + embedding + KNN neigbours\":{\"main\":[[{\"node\":\"Query Qdrant\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# Vector Database as a Big Data Analysis Tool for AI Agents\n\nWorkflows from the webinar [\"Build production-ready AI Agents with Qdrant and n8n\"](https://www.youtube.com/watch?v=_BQTnXpuH-E).\n\nThis series of workflows shows how to build big data analysis tools for production-ready AI agents with the help of vector databases. These pipelines are adaptable to any dataset of images, hence, many production use cases.\n\n  1. [Uploading (image) datasets to Qdrant](https://n8n.io/workflows/2654-uploading-image-datasets-to-qdrant-13-anomaly12-knn/)\n  2. [Set up meta-variables for anomaly detection in Qdrant](https://n8n.io/workflows/2655-set-up-cluster-centresandthresholds-for-anomaly-detection-23-anomaly/)\n  3. [Anomaly detection tool](https://n8n.io/workflows/2656-anomaly-images-detection-tool-33-anomaly/)\n  4. **[KNN classifier tool](https://n8n.io/workflows/2657-knn-images-classifier-tool-22-knn/)**\n\n\n\n### For anomaly detection\n\n  1. The first pipeline to upload an image dataset to Qdrant.\n  2. The second pipeline is to set up cluster (class) centres & cluster (class) threshold scores needed for anomaly detection.\n  3. The third is the anomaly detection tool, which takes any image as input and uses all preparatory work done with Qdrant to detect if it's an anomaly to the uploaded dataset.\n\n\n\n### For KNN (k nearest neighbours) classification\n\n  1. The first pipeline to upload an image dataset to Qdrant.\n  2. **This pipeline is the KNN classifier tool, which takes any image as input and classifies it on the uploaded to Qdrant dataset.**\n\n\n\n### To recreate both\n\nYou'll have to upload [crops](https://www.kaggle.com/datasets/mdwaquarazam/agricultural-crops-image-classification) and [lands](https://www.kaggle.com/datasets/apollo2506/landuse-scene-classification) datasets from Kaggle to your own Google Storage bucket, and re-create APIs/connections to [Qdrant Cloud](https://qdrant.tech/documentation/quickstart-cloud/) (you can use [Free Tier](https://cloud.qdrant.io/login) cluster), [Voyage AI API](https://www.voyageai.com/) & Google Cloud Storage.\n\n## [This workflow] KNN classification tool\n\nThis tool takes any image URL, and as output, it returns a class of the object on the image based on the image uploaded to the Qdrant dataset (lands).\n\n  * An image URL is received via the _Execute Workflow Trigger_ , which is then sent to the Voyage AI Multimodal Embeddings API to fetch its embedding.\n  * The image's embedding vector is then used to query Qdrant, returning a set of X similar images with pre-labeled classes.\n  * Majority voting is done for classes of neighbouring images.\n  * A loop is used to resolve scenarios where there is a tie in Majority Voting, and we increase the number of neighbours to retrieve.\n  * When the loop finally resolves, the identified class is returned to the calling workflow.\n\n\n",
  "crawled_at": "2025-05-26T01:37:27.820265",
  "readme_zh": "# 向量数据库作为AI代理的大数据分析工具\n\n来自网络研讨会[\"使用Qdrant和n8n构建生产级AI代理\"](https://www.youtube.com/watch?v=_BQTnXpuH-E)的工作流程。\n\n本系列工作流程展示了如何借助向量数据库为生产级AI代理构建大数据分析工具。这些管道可适配任何图像数据集，因此适用于众多生产用例。\n\n  1. [将(图像)数据集上传至Qdrant](https://n8n.io/workflows/2654-uploading-image-datasets-to-qdrant-13-anomaly12-knn/)\n  2. [在Qdrant中设置异常检测的元变量](https://n8n.io/workflows/2655-set-up-cluster-centresandthresholds-for-anomaly-detection-23-anomaly/)\n  3. [异常检测工具](https://n8n.io/workflows/2656-anomaly-images-detection-tool-33-anomaly/)\n  4. **[KNN分类器工具](https://n8n.io/workflows/2657-knn-images-classifier-tool-22-knn/)**",
  "title_zh": "向量数据库作为AI代理的大数据分析工具 [2/2 KNN]",
  "publish_date_zh": "最后更新于4个月前",
  "workflow_json_zh": "{\n  \"id\": \"itzURpN5wbUNOXOw\",\n  \"meta\": {\n    \"instanceId\": \"205b3bc06c96f2dc835b4f00e1cbf9a937a74eeb3b47c99d0c30b0586dbf85aa\"\n  },\n  \"name\": \"[2/2] KNN classifier (lands dataset)\",\n  \"tags\": [\n    {\n      \"id\": \"QN7etptCmdcGIpkS\",\n      \"name\": \"classifier\",\n      \"createdAt\": \"2024-12-08T22:08:15.968Z\",\n      \"updatedAt\": \"2024-12-09T19:25:04.113Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"33373ccb-164e-431c-8a9a-d68668fc70be\",\n      \"name\": \"Embed image\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -140,\n        -240\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.voyageai.com/v1/multimodalembeddings\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n{\\n  \\\"inputs\\\": [\\n    {\\n      \\\"content\\\": [\\n        {\\n          \\\"type\\\": \\\"image_url\\\",\\n          \\\"image_url\\\": $json.imageURL\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"model\\\": \\\"voyage-multimodal-3\\\",\\n  \\\"input_type\\\": \\\"document\\\"\\n}\\n}}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"Vb0RNVDnIHmgnZOP\",\n          \"name\": \"Voyage API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"58adecfa-45c7-4928-b850-053ea6f3b1c5\",\n      \"name\": \"Query Qdrant\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        440,\n        -240\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.qdrantCloudURL }}/collections/{{ $json.collectionName }}/points/query\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n{\\n  \\\"query\\\": $json.ImageEmbedding,\\n  \\\"using\\\": \\\"voyage\\\",\\n  \\\"limit\\\": $json.limitKNN,\\n  \\\"with_payload\\\": true\\n}\\n}}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"qdrantApi\"\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"it3j3hP9FICqhgX6\",\n          \"name\": \"QdrantApi account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"258026b7-2dda-4165-bfe1-c4163b9caf78\",\n      \"name\": \"Majority Vote\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        840,\n        -240\n      ],\n      \"parameters\": {\n        \"language\": \"python\",\n        \"pythonCode\": \"from collections import Counter\\n\\ninput_json = _input.all()[0]\\npoints = input_json['json']['result']['points']\\nmajority_vote_two_most_common = Counter([point[\\\"payload\\\"][\\\"landscape_name\\\"] for point in points]).most_common(2)\\n\\nreturn [{\\n    \\\"json\\\": {\\n        \\\"result\\\": majority_vote_two_most_common    \\n    }\\n}]\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e83e7a0c-cb36-46d0-8908-86ee1bddf638\",\n      \"name\": \"Increase limitKNN\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1240,\n        -240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"0b5d257b-1b27-48bc-bec2-78649bc844cc\",\n              \"name\": \"limitKNN\",\n              \"type\": \"number\",\n              \"value\": \"={{ $('Propagate loop variables').item.json.limitKNN + 5}}\"\n            },\n            {\n              \"id\": \"afee4bb3-f78b-4355-945d-3776e33337a4\",\n              \"name\": \"ImageEmbedding\",\n              \"type\": \"array\",\n              \"value\": \"={{ $('Qdrant variables + embedding + KNN neigbours').first().json.ImageEmbedding }}\"\n            },\n            {\n              \"id\": \"701ed7ba-d112-4699-a611-c0c134757a6c\",\n              \"name\": \"qdrantCloudURL\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Qdrant variables + embedding + KNN neigbours').first().json.qdrantCloudURL }}\"\n            },\n            {\n              \"id\": \"f5612f78-e7d8-4124-9c3a-27bd5870c9bf\",\n              \"name\": \"collectionName\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Qdrant variables + embedding + KNN neigbours').first().json.collectionName }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"8edbff53-cba6-4491-9d5e-bac7ad6db418\",\n      \"name\": \"Propagate loop variables\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        640,\n        -240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"880838bf-2be2-4f5f-9417-974b3cbee163\",\n              \"name\": \"=limitKNN\",\n              \"type\": \"number\",\n              \"value\": \"={{ $json.result.points.length}}\"\n            },\n            {\n              \"id\": \"5fff2bea-f644-4fd9-ad04-afbecd19a5bc\",\n              \"name\": \"result\",\n              \"type\": \"object\",\n              \"value\": \"={{ $json.result }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"6fad4cc0-f02c-429d-aa4e-0d69ebab9d65\",\n      \"name\": \"Image Test URL\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -320,\n        -240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"46ceba40-fb25-450c-8550-d43d8b8aa94c\",\n              \"name\": \"imageURL\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.query.imageURL }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"f02e79e2-32c8-4af0-8bf9-281119b23cc0\",\n      \"name\": \"Return class\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1240,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"bd8ca541-8758-4551-b667-1de373231364\",\n              \"name\": \"class\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.result[0][0] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"83ca90fb-d5d5-45f4-8957-4363a4baf8ed\",\n      \"name\": \"Check tie\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1040,\n        -240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"980663f6-9d7d-4e88-87b9-02030882472c\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gt\"\n              },\n              \"leftValue\": \"={{ $json.result.length }}\",\n              \"rightValue\": 1\n            },\n            {\n              \"id\": \"9f46fdeb-0f89-4010-99af-624c1c429d6a\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.result[0][1] }}\",\n              \"rightValue\": \"={{ $json.result[1][1] }}\"\n            },\n            {\n              \"id\": \"c59bc4fe-6821-4639-8595-fdaf4194c1e1\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"lte\"\n              },\n              \"leftValue\": \"={{ $('Propagate loop variables').item.json.limitKNN }}\",\n              \"rightValue\": 100\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"847ced21-4cfd-45d8-98fa-b578adc054d6\",\n      \"name\": \"Qdrant variables + embedding + KNN neigbours\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        120,\n        -240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"de66070d-5e74-414e-8af7-d094cbc26f62\",\n              \"name\": \"ImageEmbedding\",\n              \"type\": \"array\",\n              \"value\": \"={{ $json.data[0].embedding }}\"\n            },\n            {\n              \"id\": \"58b7384d-fd0c-44aa-9f8e-0306a99be431\",\n              \"name\": \"qdrantCloudURL\",\n              \"type\": \"string\",\n              \"value\": \"=https://152bc6e2-832a-415c-a1aa-fb529f8baf8d.eu-central-1-0.aws.cloud.qdrant.io\"\n            },\n            {\n              \"id\": \"e34c4d88-b102-43cc-a09e-e0553f2da23a\",\n              \"name\": \"collectionName\",\n              \"type\": \"string\",\n              \"value\": \"=land-use\"\n            },\n            {\n              \"id\": \"db37e18d-340b-4624-84f6-df993af866d6\",\n              \"name\": \"limitKNN\",\n              \"type\": \"number\",\n              \"value\": \"=10\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d1bc4edc-37d2-43ac-8d8b-560453e68d1f\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -940,\n        -120\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 320,\n        \"height\": 540,\n        \"content\": \"以下是对现有土地类型卫星影像的分类：\\n- '农业用地',\\n- '飞机',\\n- '棒球场',\\n- '海滩',\\n- '建筑群',\\n- '灌木丛',\\n- '高密度住宅区',\\n- '森林',\\n- '高速公路',\\n- '高尔夫球场',\\n- '港口',\\n- '交叉路口',\\n- '中密度住宅区',\\n- '移动房屋公园',\\n- '立交桥',\\n- '停车场',\\n- '河流',\\n- '跑道',\\n- '低密度住宅区',\\n- '储油罐',\\n- '网球场'\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"13560a31-3c72-43b8-9635-3f9ca11f23c9\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -520,\n        -460\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"content\": \"我在一个完整的数据集`test`集上测试了这个KNN分类器（它不属于集合的一部分，仅包含`validation`和`train`部分）。在`test`集上的分类准确率为**93.24%**，未进行微调，也未采用度量学习。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8c9dcbcb-a1ad-430f-b7dd-e19b5645b0f6\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -520,\n        -240\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b36fb270-2101-45e9-bb5c-06c4e07b769c\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1080,\n        -520\n      ],\n      \"parameters\": {\n        \"width\": 460,\n        \"height\": 380,\n        \"content\": \"## KNN分类工作流工具  \\n### 此n8n模板接收图像URL（与异常检测工具类似），并返回图像中物体的分类（从土地类型列表中选出）\\n\\n* 通过\\\"执行工作流触发器\\\"接收图像URL，随后发送至Voyage.ai多模态嵌入API获取其嵌入向量  \\n* 使用该图像的嵌入向量查询Qdrant数据库，返回一组X个具有预标注类别的相似图像  \\n* 对邻近图像的类别进行多数表决  \\n* 采用循环机制解决多数表决平局场景（例如出现5票\\\"森林\\\"和5票\\\"海滩\\\"时），通过增加检索的邻近样本数量来打破僵局  \\n* 当循环最终得出结果时，将识别出的类别返回至调用工作流\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"51ece7fc-fd85-4d20-ae26-4df2d3893251\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        120,\n        -40\n      ],\n      \"parameters\": {\n        \"height\": 200,\n        \"content\": \"变量定义了另一个Qdrant集合，其中包含风景图片（上传方式与作物集合类似，别忘了替换成你的数据）以及用于输入图像分类的数据库中邻居数量**limitKNN**。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7aad5904-eb0b-4389-9d47-cc91780737ba\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -180,\n        -60\n      ],\n      \"parameters\": {\n        \"height\": 80,\n        \"content\": \"类似于异常检测工具，我们正在使用Voyage模型对输入图像进行嵌入处理。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d3702707-ee4a-481f-82ca-d9386f5b7c8a\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        440,\n        -500\n      ],\n      \"parameters\": {\n        \"width\": 740,\n        \"height\": 200,\n        \"content\": \"## 循环判定环节\\n此处我们通过[查询](https://api.qdrant.tech/api-reference/search/query-points) Qdrant获取与当前图像最接近的**limitKNN**个近邻<*查询Qdrant节点*>，从这些近邻的元数据中解析出预标注的类别（图像在上传至Qdrant时已预先标记类别）并统计出现频率最高的类别<*多数表决节点*>。若出现两个最高频类别票数相同的情况<*检查平局节点*>，例如5票\\\"森林\\\"和5票\\\"港口\\\"，则将邻近样本数量增加5个后重新执行上述流程<*传递循环变量节点*>与<*增加limitKNN节点*>。\\n当不存在平局状态，或已检查满100个邻近样本时，则退出循环<*检查平局节点*>并返回最终确定的类别答案。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d26911bb-0442-4adc-8511-7cec2d232393\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1240,\n        160\n      ],\n      \"parameters\": {\n        \"height\": 80,\n        \"content\": \"在此，我们提取由多数表决决定的输入图像类别名称\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"84ffc859-1d5c-4063-9051-3587f30a0017\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -520,\n        80\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 540,\n        \"height\": 260,\n        \"content\": \"### KNN（k近邻）分类\\n1. 第一步流程是将（lands）数据集上传至Qdrant集合。\\n2. **这是KNN分类器工具，它能接收任意图像作为输入，并通过查询Qdrant（lands）集合进行分类。**\\n\\n### 复现步骤\\n你需要将Kaggle上的[lands](https://www.kaggle.com/datasets/apollo2506/landuse-scene-classification)数据集上传至自己的Google存储桶，并重新建立与[Qdrant云服务](https://qdrant.tech/documentation/quickstart-cloud/)的API/连接（可使用**免费版**集群）、Voyage AI API及Google云存储的连接。\\n\\n**总体而言，这些流程可适配任何图像数据集**\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"Execute Workflow Trigger\": [\n      {\n        \"json\": {\n          \"query\": {\n            \"imageURL\": \"https://storage.googleapis.com/n8n-qdrant-demo/land-use/images_train_test_val/test/buildings/buildings_000323.png\"\n          }\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"c8cfe732-fd78-4985-9540-ed8cb2de7ef3\",\n  \"connections\": {\n    \"Check tie\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Increase limitKNN\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Return class\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embed image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Qdrant variables + embedding + KNN neigbours\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Query Qdrant\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Propagate loop variables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Majority Vote\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check tie\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Image Test URL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Embed image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Increase limitKNN\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Query Qdrant\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Image Test URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Propagate loop variables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Majority Vote\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Qdrant variables + embedding + KNN neigbours\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Query Qdrant\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}