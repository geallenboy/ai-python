{
  "url": "https://n8n.io/workflows/3694-multi-agent-ai-clinic-management-with-whatsapp-telegram-and-google-calendar/",
  "title": "Multi-Agent AI Clinic Management with WhatsApp, Telegram, and Google Calendar",
  "author": "Luciano Gutierrez",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "Support"
    },
    {
      "name": "AI"
    },
    {
      "name": "IT Ops"
    }
  ],
  "workflow_json": "{\"id\":\"6LeAm5UyENgTdwkv\",\"meta\":{\"instanceId\":\"6d46e25379ef430a7067964d1096b885c773564549240cb3ad4c087f6cf94bd3\",\"templateCredsSetupCompleted\":true},\"name\":\"agente\",\"tags\":[],\"nodes\":[{\"id\":\"84ce6905-4416-4721-8627-f8c303730a4f\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[8260,2260],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4.1-nano-2025-04-14\",\"cachedResultName\":\"gpt-4.1-nano-2025-04-14\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"zUnIUrOWA279vAoC\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"a6e9358a-a873-49f3-af38-21ca545b2bfc\",\"name\":\"Assistente clinica interno\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[8380,2020],\"parameters\":{\"text\":\"={{ $json.message.text }}\",\"options\":{\"systemMessage\":\"=Hoje é {{$now}}\\nPAPEL:  \\nVocê é um assistente interno de reagendamento na clínica, acionado diretamente por um profissional via Telegram para gerenciar situações de remarcação de consultas ou incluir lembretes na lista de compras.\\n\\nOBJETIVO GERAL:  \\n1. Reagendar consultas a pedido do profissional.  \\n2. Adicionar lembretes na lista de compras quando solicitado.  \\n\\nRESUMO DE RESPONSABILIDADES:  \\n1. Reagendamento de pacientes  \\n   - Acesse o Google Calendar por meio da ferramenta \\\"MCP Google Calendar\\\" para identificar as consultas afetadas.  \\n   - Extraia o número de telefone na descrição do evento.  \\n   - Use a ferramenta \\\"Reagendar no WhatsApp\\\" para enviar mensagens de reagendamento aos pacientes.  \\n   - Lembre-se de que você apenas envia a mensagem; a resposta do paciente é tratada por outro agente.  \\n\\n2. Lista de compras da clínica  \\n   - Se o profissional solicitar pelo Telegram a inclusão de um item na lista de compras, utilize a ferramenta \\\"Google Tasks\\\" para adicionar o lembrete.  \\n\\nORIENTAÇÕES DE LINGUAGEM E PROCEDIMENTO:  \\n- Use uma abordagem empática, profissional e acolhedora.  \\n- Nunca envie mensagens para pacientes sem autorização explícita do profissional.  \\n- Quando listar eventos ou tarefas, seja objetivo e organizado.  \\n- Mantenha clareza e concisão em todas as interações.  \\n\\nFERRAMENTAS DISPONÍVEIS:  \\n- Reagendar no WhatsApp  \\n- Google Tasks  \\n- MCP Google Calendar  \\n\\nINSTRUÇÕES FINAIS:  \\n- Atenda exclusivamente às solicitações de reagendamento e inclusão de lembretes.  \\n- A remarcação de consultas ocorre somente quando o profissional pede, utilizando o MCP Google Calendar para identificar os pacientes e o \\\"Reagendar no WhatsApp\\\" para enviar a mensagem.  \\n- Para a lista de compras, sempre registre no \\\"Google Tasks\\\".  \\n\"},\"promptType\":\"define\"},\"typeVersion\":1.8},{\"id\":\"d674fb31-cf45-47ac-b33b-4abe1920e352\",\"name\":\"Google Tasks\",\"type\":\"n8n-nodes-base.googleTasksTool\",\"position\":[8720,2320],\"parameters\":{\"task\":\"bDQ5ZlNVV2lPQ3pYT3NsNA\",\"title\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}\",\"additionalFields\":{\"notes\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notes', ``, 'string') }}\",\"status\":\"needsAction\"}},\"credentials\":{\"googleTasksOAuth2Api\":{\"id\":\"3SQEwHb0AR81JO8y\",\"name\":\"Google Tasks account\"}},\"typeVersion\":1},{\"id\":\"dff00a3c-6496-4104-afc4-a0556f3cabfa\",\"name\":\"MCP Google Calendar\",\"type\":\"@n8n/n8n-nodes-langchain.mcpClientTool\",\"position\":[8560,2320],\"parameters\":{\"sseEndpoint\":\"https://engaging-seahorse-19.rshare.io/mcp/ceb17fa5-1937-405f-8000-ea3be7d2b032/mcp/:tool/calendar/sse\"},\"typeVersion\":1},{\"id\":\"10a0bda3-94b3-487a-98a1-1e7badcc8775\",\"name\":\"Receber Mensagem Telegram\",\"type\":\"n8n-nodes-base.telegramTrigger\",\"position\":[8100,2020],\"webhookId\":\"f2b29356-d5d3-4f5d-9ef1-273001c0a820\",\"parameters\":{\"updates\":[\"message\"],\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"TAVUHrFXuDIMInWe\",\"name\":\"Telegram account\"}},\"typeVersion\":1.2},{\"id\":\"46cfa6be-f896-4e33-be3d-b4ef676c043b\",\"name\":\"Postgres Chat Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\"position\":[8420,2300],\"parameters\":{\"sessionKey\":\"100\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":10},\"credentials\":{\"postgres\":{\"id\":\"t8gw5Kie6Oxy5TcK\",\"name\":\"Postgres account\"}},\"typeVersion\":1.3},{\"id\":\"c79c44f6-94fa-4e56-9d94-49185f83bfb4\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[5860,3980],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4.1-mini-2025-04-14\",\"cachedResultName\":\"gpt-4.1-mini-2025-04-14\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"zUnIUrOWA279vAoC\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"5e7ac239-6ba1-414c-b11d-d637361e8f77\",\"name\":\"Assistente Clínica\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[5960,3760],\"parameters\":{\"text\":\"={{ $json.text }}{{ $json.output}}\",\"options\":{\"systemMessage\":\"=HOJE É: {{ $now }}\\nCONTATO DA CLÍNICA: \\n{ coloque o seu contato aqui }\\n\\nINSTRUÇÃO IMPORTANTE:\\n\\nAo criar ou editar qualquer evento via MCP_CALENDAR, inclua na descrição do agendamento:\\n\\nTelefone do paciente\\n\\nNome completo\\n\\nData de nascimento\\n\\nInformações adicionais (convênio, condição de saúde etc.)\\n\\nPAPEL:\\nVocê é uma atendente do WhatsApp da Clínica Moreira, especializada em atendimento humanizado. Sua missão:\\n\\nAtender pacientes de forma ágil e eficiente\\n\\nResponder dúvidas sobre clínica e serviços\\n\\nAgendar, remarcar e cancelar consultas pelo MCP_CALENDAR\\n\\nPERSONALIDADE E TOM DE VOZ:\\n\\nSimpática, acolhedora e respeitosa\\n\\nFormal, sem emojis ou gírias\\n\\nFERRAMENTAS DISPONÍVEIS:\\n\\nMCP_CALENDAR (trigger /mcp/:tool/calendar)\\n\\nAVALIABILITY_CALENDAR: verifica horários livres entre Start_Time e End_Time\\n\\nGET_ALL_CALENDAR: lista todos os eventos entre After e Before\\n\\nCREATE_CALENDAR: cria novo evento com start, end e Description (inclua sempre telefone, nome e data de nascimento)\\n\\nUPDATE_CALENDAR: atualiza campos de um evento existente (Event_ID)\\n\\nDELETE_CALENDAR: remove evento (Event_ID)\\n\\nGET_CALENDAR: obtém detalhes de um evento específico (Event_ID)\\n\\nCallToHuman (workflow id A95kslcW4H82nJuR)\\n\\nEncaminha atendimento humano via EvolutionAPI em n8n\\n\\nDisparar IMEDIATAMENTE quando:\\n\\nUrgência ou mal-estar grave\\n\\nPedido de diagnóstico/opinião médica\\n\\nInsatisfação expressa do paciente\\n\\nAssuntos fora do escopo da clínica\\n\\nExemplo de chamada:\\n\\n{\\n  \\\"tool\\\": \\\"CallToHuman\\\",\\n  \\\"telefone\\\": \\\"<telefone>\\\",\\n  \\\"nome\\\": \\\"<nome completo>\\\",\\n  \\\"ultima_mensagem\\\": \\\"<texto da última mensagem>\\\"\\n}\\n\\nEnviar telegram cancelamento\\n\\nApós DELETE_CALENDAR, envie ao gestor via Telegram: nome, data, hora\\n\\nSOP (Fluxo de Atendimento):\\n\\nInício e coleta de dados\\n\\nCumprimente e informe o link da agenda: https://calendar.google.com/calendar/embed?src=a57a3781407f42b1ad7fe24ce76f558dc6c86fea5f349b7fd39747a2294c1654%40group.calendar.google.com&ctz=America%2FArgentina%2FBuenos_Aires\\n\\nPeça: nome completo, data de nascimento e confirme o telefone\\n number: {{ $('Webhook1').item.json.body.data.key.remoteJid.replaceAll(\\\"@s.whatsapp.net\\\",\\\"\\\") }}\\n\\nVerificação de disponibilidade\\n\\nPergunte data e turno preferidos\\n\\nChame AVALIABILITY_CALENDAR com Start_Time 08:00 e End_Time 19:00 (ou turno)\\n\\nInforme horários livres\\n\\nAgendamento\\n\\nApós escolha do paciente, use CREATE_CALENDAR com start, end e Description\\n\\nAguarde retorno para confirmar criação antes de responder\\n\\nRemarcação\\n\\nSolicite dados e nova preferência de data/turno\\n\\nLocalize evento antigo via GET_ALL_CALENDAR\\n\\nUse DELETE_CALENDAR no Event_ID antigo\\n\\nCrie novo com CREATE_CALENDAR\\n\\nConfirme após sucesso\\n\\nCancelamento\\n\\nSolicite dados do paciente\\n\\nIdentifique Event_ID via GET_ALL_CALENDAR ou GET_CALENDAR\\n\\nExecute DELETE_CALENDAR\\n\\nUse Enviar telegram cancelamento\\n\\nConfirme cancelamento ao paciente\\n\\nConfirmação de consulta (follow-up)\\n\\nSe paciente responder “Confirmar, ID”: use UPDATE_CALENDAR para prefixar título com [Confirmado]\\n\\nSe “Reagendar, ID”: DELETE_CALENDAR e oriente para usar link da agenda\\n\\nREGRAS DE ESCALONAMENTO:\\n\\nUse CallToHuman IMEDIATAMENTE em situações de:\\n\\nUrgência/mal-estar\\n\\nPedidos de diagnóstico/opinião médica\\n\\nInsatisfação ou reclamações\\n\\nAssuntos fora do escopo\\n\\nMANTENHA SEMPRE:\\n\\nTom profissional e respeitoso\\n\\nLinguagem clara e objetiva\\n\\nAgendamentos apenas em datas futuras\\n\\nNunca confirmar sem retorno do MCP_CALENDAR\\n\\nHORÁRIOS DE FUNCIONAMENTO:\\n\\nSeg–Sáb: 08h–19h | Dom e feriados: fechado\\n\\nLOCALIZAÇÃO:\\nRua Rio Casca, 417 – Belo Horizonte, MG\\n\\nLINK DA AGENDA:\\nhttps://calendar.google.com/calendar/embed?src=a57a3781407f42b1ad7fe24ce76f558dc6c86fea5f349b7fd39747a2294c1654%40group.calendar.google.com&ctz=America%2FArgentina%2FBuenos_Aires\\n\\n\"},\"promptType\":\"define\"},\"retryOnFail\":true,\"typeVersion\":1.8,\"waitBetweenTries\":1000},{\"id\":\"2f0a6ea1-7654-4ae7-884e-d5b8ff47d4f9\",\"name\":\"Enviar alerta de cancelamento\",\"type\":\"n8n-nodes-base.telegramTool\",\"position\":[6400,3980],\"webhookId\":\"d045a8c1-ec1b-4d20-8226-457aa18934af\",\"parameters\":{\"text\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}\",\"chatId\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Chat_ID', ``, 'string') }}\",\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"TAVUHrFXuDIMInWe\",\"name\":\"Telegram account\"}},\"typeVersion\":1.2},{\"id\":\"8ddaa14f-7d2f-4364-8ff7-f87e0a428e37\",\"name\":\"Gatilho diário\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[8060,2780],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"cronExpression\",\"expression\":\"0 8 * * 1-5\"}]}},\"typeVersion\":1.2},{\"id\":\"0784753d-123d-4259-abcc-8abf39e7fc07\",\"name\":\"Assistente de confirmação\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[8280,2680],\"parameters\":{\"text\":\"=Hoje é {{ $now }}. Você é um agente especializado em **confirmação de consultas** para a clínica. Sua função principal é:\\n\\n1. **Listar os eventos** agendados para o próximo dia no MCP Calendar.\\n2. **Obter o numero** na descrição de cada evento.\\n3. **Enviar uma mensagem de confirmação** usando a ferramenta “relembraAGENDAMENTO”, perguntando se o paciente confirma a consulta ou prefere reagendar.\\n\\nImportante:\\n- Você **não recebe respostas** diretamente; o retorno do paciente é tratado por outro agente.\\n\\n\",\"options\":{\"systemMessage\":\"\"},\"promptType\":\"define\"},\"typeVersion\":1.8},{\"id\":\"afa90e86-0f44-4069-976b-ca302b0d828a\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[5840,4460],\"parameters\":{\"text\":\"={{ $json.output }}\",\"options\":{\"systemMessage\":\"=Você é especialista em formatação de mensagem para whataspp, trabalhando somente na formatação e não alterando o conteúdo da menssagem.\\n\\n- Substitua ** por *\\n- Remova #\"},\"promptType\":\"define\"},\"typeVersion\":1.8},{\"id\":\"13179a70-85b6-4e18-8736-eb2cdd252591\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[6960,2580],\"parameters\":{\"color\":5,\"width\":1940,\"height\":600,\"content\":\"# \\\"Appointment Confirmation Assistant\\\"\\nDescription:\\n\\nPurpose:\\nThis section contains the configuration for the Appointment Confirmation Assistant, an agent specialized in confirming scheduled appointments with patients.\\n\\nInstructions for Use:\\n\\nIt is triggered automatically every weekday (Monday to Friday) at 08:00 AM via the Daily Trigger (Gatilho diário).\\n\\nThe agent retrieves all appointments scheduled for the next day using MCP Google Calendar.\\n\\nIt extracts each patient's phone number from the event description field.\\n\\nA confirmation message is sent to each patient using the relembraAGENDAMENTO tool, asking for confirmation or rescheduling.\\n\\nImportant: This agent does not handle responses from patients; another agent or workflow is responsible for follow-ups.\\n\\nMake sure event descriptions in Google Calendar are correctly filled to avoid errors.\\n\\n\"},\"typeVersion\":1},{\"id\":\"4111432b-2ddc-4e96-ba6d-d25e003e2688\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[4760,3620],\"parameters\":{\"color\":3,\"width\":1780,\"height\":640,\"content\":\"# \\\"Agent Core Components (Tools, MCP, Memory, LLM Model)\\\"\\nDescription:\\n\\nPurpose:\\n\\nThis sticky note represents the essential structure of any intelligent agent: it includes access to external tools,\\n persistent memory, the MCP system for calendar management, and a Language Model (LLM) to process natural language tasks.\\n\\nInstructions for Use:\\n\\nLanguage Model nodes (OpenAI, OpenRouter) are responsible for natural language understanding and generation.\\n\\nMemory nodes (Postgres Chat Memory) maintain conversation context over multiple interactions.\\n\\nMCP Tools interact with Google Calendar and other services to perform real-world actions.\\n\\nAlways ensure memory synchronization between the agent's context and actions performed.\\n\\nIf new tools are added, they must be connected both to the agent and properly described in the system message.\\n\\n\"},\"typeVersion\":1},{\"id\":\"4b59f903-07c2-4e66-9ea1-0727beb0d85c\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[4640,4300],\"parameters\":{\"color\":4,\"width\":1800,\"height\":640,\"content\":\"# \\\"Processing and Sending WhatsApp Responses\\\"\\nDescription:\\n\\nPurpose:\\nThis section is responsible for processing, formatting, and sending outbound WhatsApp messages to patients through the Evolution API.\\n\\nInstructions for Use:\\n\\nMessages received from the assistant agent are first reformatted by the AI Agent node to comply with WhatsApp markdown syntax (e.g., replacing **bold** with *bold*).\\n\\nOnce formatted, the messages are forwarded to WhatsApp using the Evolution API2 node.\\n\\nEnsure proper formatting before sending to maintain a professional communication tone and avoid delivery errors.\\n\\nAny future text-processing improvements should be implemented here.\"},\"typeVersion\":1},{\"id\":\"274f7f66-7613-4e9e-868d-a5705156dde6\",\"name\":\"Postgres Chat Memory1\",\"type\":\"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\"position\":[6000,3980],\"parameters\":{\"sessionKey\":\"= {{ $('Webhook1').item.json.body.data.key.id }}\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":50},\"credentials\":{\"postgres\":{\"id\":\"t8gw5Kie6Oxy5TcK\",\"name\":\"Postgres account\"}},\"typeVersion\":1.3},{\"id\":\"654ed617-df1a-48db-b9bc-833b2c1ecb80\",\"name\":\"MCP Google Calendar2\",\"type\":\"@n8n/n8n-nodes-langchain.mcpClientTool\",\"position\":[6120,3980],\"parameters\":{\"sseEndpoint\":\"https://engaging-seahorse-19.rshare.io/mcp/ceb17fa5-1937-405f-8000-ea3be7d2b032/mcp/:tool/calendar/sse\"},\"typeVersion\":1},{\"id\":\"b11aeec6-b446-4c02-a0b0-7f9239628df3\",\"name\":\"MCP GMAIL\",\"type\":\"@n8n/n8n-nodes-langchain.mcpClientTool\",\"position\":[8540,3000],\"parameters\":{\"sseEndpoint\":\"https://engaging-seahorse-19.rshare.io/mcp/82a7a338-618c-44f5-a1c3-f2e32b6b4833/mcp/:tool/gmail/sse\"},\"typeVersion\":1},{\"id\":\"f5a38b34-499e-4bbc-9282-ce5f4a3b85a3\",\"name\":\"MCP CALENDAR\",\"type\":\"@n8n/n8n-nodes-langchain.mcpClientTool\",\"position\":[8380,3000],\"parameters\":{\"sseEndpoint\":\"https://engaging-seahorse-19.rshare.io/mcp/ceb17fa5-1937-405f-8000-ea3be7d2b032/mcp/:tool/calendar/sse\"},\"typeVersion\":1},{\"id\":\"cd6a6147-fd18-4cd4-8aab-fcb454ab76b7\",\"name\":\"Telegram\",\"type\":\"n8n-nodes-base.telegram\",\"position\":[8740,2020],\"webhookId\":\"5bba05fc-2859-4225-aa85-7c4bc5ff532d\",\"parameters\":{\"text\":\"={{ $json.output }}\",\"chatId\":\"={{ $('Receber Mensagem Telegram').item.json.message.chat.id }}\",\"additionalFields\":{}},\"credentials\":{\"telegramApi\":{\"id\":\"TAVUHrFXuDIMInWe\",\"name\":\"Telegram account\"}},\"typeVersion\":1.2},{\"id\":\"900b8c1a-f987-4898-9fc1-bfc673773e06\",\"name\":\"OpenRouter Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\"position\":[5760,4680],\"parameters\":{\"model\":\"google/gemini-2.0-flash-exp:free\",\"options\":{}},\"credentials\":{\"openRouterApi\":{\"id\":\"eGPA8rbskZCfFPBn\",\"name\":\"OpenRouter account\"}},\"typeVersion\":1},{\"id\":\"1584b448-d8f5-4bab-ad9a-9b07edb8e102\",\"name\":\"Webhook1\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[5760,2100],\"webhookId\":\"405dab7c-a0ea-4f5b-a6cc-ede9d5ba78a0\",\"parameters\":{\"path\":\"evolutionAPIKORE\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":2},{\"id\":\"74b5179f-502c-45d6-88e9-2c2d492603cd\",\"name\":\"Edit Fields1\",\"type\":\"n8n-nodes-base.set\",\"position\":[6000,2100],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"3e6335ae-74c3-4655-b68f-cdf0c68b864f\",\"name\":\"number\",\"type\":\"string\",\"value\":\"={{ $json.body.data.key.remoteJid }}\"},{\"id\":\"15f399cf-a98e-45e7-91ce-61b4fad340fd\",\"name\":\"name\",\"type\":\"string\",\"value\":\"={{ $json.body.data.pushName }}\"},{\"id\":\"b1943003-1f47-40e1-b418-6a52557ec44e\",\"name\":\"key_id\",\"type\":\"string\",\"value\":\"={{ $json.body.data.key.id }}\"},{\"id\":\"ed23194b-22ca-455b-a085-7dae706d0569\",\"name\":\"text\",\"type\":\"string\",\"value\":\"={{ $json.body.data.message.conversation }}\"},{\"id\":\"b35f8b61-da15-42e3-a078-4cd901e1f273\",\"name\":\"type\",\"type\":\"string\",\"value\":\"={{ $json.body.data.message.imageMessage.mimetype }}\"},{\"id\":\"a62bf96a-51aa-44c3-9e5d-f592e32a31d6\",\"name\":\"image.url\",\"type\":\"string\",\"value\":\"={{ $json.body.data.message.imageMessage.url }}\"},{\"id\":\"b004987d-3527-4040-a5e6-5fe06b25c9b9\",\"name\":\"audio.url\",\"type\":\"string\",\"value\":\"={{ $json.body.data.message.audioMessage.url }}\"},{\"id\":\"4c2cc03a-c104-4a87-9d31-6a7c256890ad\",\"name\":\"document.url\",\"type\":\"string\",\"value\":\"={{ $json.body.data.message.documentMessage.url }}\"}]}},\"typeVersion\":3.4},{\"id\":\"ce22f5bc-f0e1-463d-9b9a-5112f8d91f00\",\"name\":\"Switch\",\"type\":\"n8n-nodes-base.switch\",\"position\":[6240,2080],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"text\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2f9854ac-26b3-446c-9d0d-ae25157c61bb\",\"operator\":{\"type\":\"string\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json.text }}\",\"rightValue\":\"=\"}]},\"renameOutput\":true},{\"outputKey\":\"image\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"73b7d93a-928e-42ec-9c8e-ae8e9b97a867\",\"operator\":{\"type\":\"string\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json.image.url }}\",\"rightValue\":\"=\"}]},\"renameOutput\":true},{\"outputKey\":\"audio\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"2f9915b9-e2b4-4528-ad36-515a848ab1be\",\"operator\":{\"type\":\"string\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json.audio.url }}\",\"rightValue\":\"[null]\"}]},\"renameOutput\":true},{\"outputKey\":\"document\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"9fcbe89a-c9d7-4dc6-bb6f-27c1cacbfddc\",\"operator\":{\"type\":\"string\",\"operation\":\"notEmpty\",\"singleValue\":true},\"leftValue\":\"={{ $json.document.url }}\",\"rightValue\":\"[null]\"}]},\"renameOutput\":true}]},\"options\":{}},\"typeVersion\":3.2},{\"id\":\"c78ee758-fb71-4a4f-9450-0ffcd67a2af2\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[4960,1840],\"parameters\":{\"color\":6,\"width\":1580,\"height\":640,\"content\":\"# Incoming WhatsApp Webhook and Message Type Handling\\\"\\nDescription:\\n\\nPurpose:\\nManages the initial reception and classification of incoming WhatsApp messages from patients via the webhook system.\\n\\nInstructions for Use:\\n\\nThe Webhook1 node captures incoming messages.\\n\\nEdit Fields1 extracts structured fields such as text, image URL, audio URL, and document URL.\\n\\nSwitch node analyzes which type of content was received and directs the flow accordingly:\\n\\nText → Forwarded to the assistant for handling.\\n\\nImage → Sent for OCR analysis.\\n\\nAudio → Sent for transcription.\\n\\nDocument → (Currently unused, but ready for future workflows).\\n\\nKeep webhook credentials updated to ensure system reliability.\\n\\n\"},\"typeVersion\":1},{\"id\":\"83abbf61-91e2-4d1c-a42a-4f05b18583e7\",\"name\":\"OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[6380,3260],\"parameters\":{\"options\":{},\"resource\":\"audio\",\"operation\":\"transcribe\",\"binaryPropertyName\":\"=data\"},\"credentials\":{\"openAiApi\":{\"id\":\"zUnIUrOWA279vAoC\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.8},{\"id\":\"4c2dcefc-fb65-42ca-8c63-8636f2906654\",\"name\":\"Evolution API\",\"type\":\"n8n-nodes-evolution-api.evolutionApi\",\"position\":[5860,3260],\"parameters\":{\"resource\":\"chat-api\",\"messageId\":\"={{ $json.key_id }}\",\"operation\":\"get-media-base64\",\"convertToMp4\":true,\"instanceName\":\"={{ $('Webhook1').item.json.body.instance }}\"},\"credentials\":{\"evolutionApi\":{\"id\":\"fPKdX0EITLV8HI89\",\"name\":\"Evolution account\"}},\"typeVersion\":1},{\"id\":\"85909834-7564-478b-bce8-0c3fe7bf4159\",\"name\":\"Convert to File\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[6100,3260],\"parameters\":{\"options\":{},\"operation\":\"toBinary\",\"sourceProperty\":\"data.base64\"},\"typeVersion\":1.1},{\"id\":\"3e200157-fbcc-4225-b982-2dfaea54cc23\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[4980,3100],\"parameters\":{\"width\":1760,\"height\":480,\"content\":\"## \\\"Download Audio and Convert to MP4\\\"\\nDescription:\\n\\nPurpose:\\nHandles retrieval, conversion, and transcription of audio files sent by patients via WhatsApp.\\n\\nInstructions for Use:\\n\\nEvolution API downloads the audio in base64 format.\\n\\nConvert to File transforms base64 into a binary file compatible with transcription engines.\\n\\nOpenAI Whisper API (via OpenAI node) transcribes the audio into text, preparing it for natural language processing.\\n\\nEnsure audio formats are correctly handled (e.g., MP4/MP3) to avoid conversion or transcription failures.\\n\\nMonitor for potential heavy file size issues (>25MB) which may impact performance.\"},\"typeVersion\":1},{\"id\":\"5862d5f1-2df4-40ee-881f-a6d6e302602f\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[4920,2540],\"parameters\":{\"width\":1820,\"height\":480,\"content\":\"# \\\"Extract Text from Images\\\"\\nDescription:\\n\\nPurpose:\\nProcesses images received via WhatsApp to extract text (OCR) and describe their visual content for further contextual analysis.\\n\\nInstructions for Use:\\n\\nThe OpenAI1 node uses a Vision model to transcribe and describe any text or scene from incoming images.\\n\\nThe resulting data is interpreted by the AI Agent2, which prepares insights and recommends appropriate responses.\\n\\nImage-to-text extraction is especially useful for handling prescriptions, notes, or medical documents sent by patients.\\n\\nMaintain quality standards: images must be clear and high-resolution for best transcription results.\"},\"typeVersion\":1},{\"id\":\"8dbd4e6d-8b38-44d8-ba45-5cac2713f6ca\",\"name\":\"OpenAI1\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[5980,2620],\"parameters\":{\"text\":\"TRANSCRIBE OS TEXTOS e describe a imagem\",\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"chatgpt-4o-latest\",\"cachedResultName\":\"CHATGPT-4O-LATEST\"},\"options\":{},\"resource\":\"image\",\"imageUrls\":\"={{ $json.image }}\",\"operation\":\"analyze\"},\"credentials\":{\"openAiApi\":{\"id\":\"zUnIUrOWA279vAoC\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.8},{\"id\":\"19e8d50d-4f87-408e-96f0-236932c1d120\",\"name\":\"AI Agent2\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[6200,2620],\"parameters\":{\"text\":\"={{$json.output}}\",\"options\":{\"systemMessage\":\"voce e encarregado de analizar o texto proveniente do analisis de uma iamgem ela pode conter texto, a ideia e que voce explique ao proximo agente como debe responder as mensagens\"},\"promptType\":\"define\"},\"typeVersion\":1.9},{\"id\":\"0d2f9842-b011-49f5-9594-24a917dee60e\",\"name\":\"OpenRouter Chat Model2\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\"position\":[6100,2860],\"parameters\":{\"model\":\"google/gemini-2.5-pro-exp-03-25:free\",\"options\":{}},\"credentials\":{\"openRouterApi\":{\"id\":\"eGPA8rbskZCfFPBn\",\"name\":\"OpenRouter account\"}},\"typeVersion\":1},{\"id\":\"58f7f9c7-6f86-40ff-bfad-5467e5b3a9e4\",\"name\":\"Evolution API2\",\"type\":\"n8n-nodes-evolution-api.evolutionApi\",\"position\":[6200,4460],\"parameters\":{\"resource\":\"messages-api\",\"remoteJid\":\"={{ $('Webhook1').item.json.body.data.key.remoteJid }}\",\"messageText\":\"={{$json.output}}\",\"instanceName\":\"={{ $('Webhook1').item.json.body.instance }}\",\"options_message\":{}},\"credentials\":{\"evolutionApi\":{\"id\":\"fPKdX0EITLV8HI89\",\"name\":\"Evolution account\"}},\"typeVersion\":1},{\"id\":\"2b529ab1-2a7e-44e0-b7c8-ed05e07c6def\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[6960,1840],\"parameters\":{\"width\":1960,\"height\":680,\"content\":\"## \\\"Internal Clinic Assistant\\\"\\nDescription:\\n\\nPurpose:\\nRepresents the Internal Assistant for the clinic, used exclusively by the internal team via Telegram to manage patient rescheduling and manage a purchasing reminder list.\\n\\nInstructions for Use:\\n\\nTriggered by staff messages sent via Telegram.\\n\\nRescheduling tasks:\\n\\nAccess the MCP Google Calendar to locate and manage appointments.\\n\\nExtract patient contact from the event description.\\n\\nSend rescheduling messages through WhatsApp using the dedicated tool.\\n\\nShopping list tasks:\\n\\nInsert shopping list reminders into Google Tasks based on the staff's instructions.\\n\\nAlways maintain professional and empathetic tone when interacting with patients, even if the communication is indirect.\\n\\nAvoid unauthorized direct patient contact without staff permission.\"},\"typeVersion\":1},{\"id\":\"a4a51bd1-48a6-4e32-b696-0ae77a0e05fe\",\"name\":\"CallToHuman\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[6240,4000],\"parameters\":{\"name\":\"escalar_humano\",\"workflowId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"A95kslcW4H82nJuR\",\"cachedResultName\":\"callToHuman\"},\"description\":\"=Use essa ferramenta ao perceber que o paciente fala de:\\n- Situações urgentes (sentindo-se mal, etc.)\\n- Assuntos não relacionados à clínica\\n- Insatisfação extrema ou pedidos de falar com um humano\\n\",\"workflowInputs\":{\"value\":{\"nome\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nome', ``, 'string') }}\",\"telefone\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('telefone', ``, 'string') }}\",\"ultima_mensagem\":\"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ultima_mensagem', ``, 'string') }}\"},\"schema\":[{\"id\":\"telefone\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"telefone\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"nome\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"nome\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"ultima_mensagem\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"ultima_mensagem\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2.1},{\"id\":\"674c5c75-a954-4306-8a02-71bdda89293c\",\"name\":\"OpenAI Chat Model2\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[8260,2840],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4.1-mini\",\"cachedResultName\":\"gpt-4.1-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"zUnIUrOWA279vAoC\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"b398627e-2fbe-44e4-ac2f-523b03871eda\",\"name\":\"REMINDER\",\"type\":\"n8n-nodes-evolution-api.evolutionApi\",\"position\":[8640,2700],\"parameters\":{\"resource\":\"messages-api\",\"remoteJid\":\"5511111111111@s.whatsapp.net\",\"messageText\":\"={{$fromAI(\\\"reminder\\\")}}\",\"instanceName\":\"instance name\",\"options_message\":{}},\"credentials\":{\"evolutionApi\":{\"id\":\"fPKdX0EITLV8HI89\",\"name\":\"Evolution account\"}},\"typeVersion\":1}],\"active\":false,\"pinData\":{\"Webhook1\":[{\"json\":{\"body\":{\"data\":{\"key\":{\"id\":\"05D218BDE5BFC8378B5AA50BA87FDAFE\",\"fromMe\":false,\"remoteJid\":\"5491169701682@s.whatsapp.net\"},\"source\":\"android\",\"status\":\"DELIVERY_ACK\",\"message\":{\"conversation\":\"Sim\",\"messageContextInfo\":{\"messageSecret\":\"RdahuRio1gbaHLsCeV24k8yFFyJWGpAJ5zHYRc2QysU=\",\"deviceListMetadata\":{\"recipientKeyHash\":\"KgcEIs2I9kXQgQ==\",\"recipientTimestamp\":\"1745501413\"},\"deviceListMetadataVersion\":2}},\"pushName\":\"Luciano\",\"instanceId\":\"317a031e-567d-4c2e-9bc4-146616fe4db7\",\"messageType\":\"conversation\",\"messageTimestamp\":1745501855},\"event\":\"messages.upsert\",\"apikey\":\"59BA76B6BD78-403B-A0CC-8735B6A7ED3A\",\"sender\":\"553191282843@s.whatsapp.net\",\"instance\":\"kore\",\"date_time\":\"2025-04-24T10:37:35.514Z\",\"server_url\":\"http://localhost:8080\",\"destination\":\"https://engaging-seahorse-19.rshare.io/webhook/evolutionAPIKORE\"},\"query\":{},\"params\":{},\"headers\":{\"host\":\"host.docker.internal:5678\",\"x-scheme\":\"https\",\"forwarded\":\"by=_exposr;for=179.0.72.34;host=engaging-seahorse-19.rshare.io;proto=https\",\"x-real-ip\":\"179.0.72.34\",\"connection\":\"keep-alive\",\"exposr-via\":\"b9e7ef031eb8fe005896193e59b1d6f6d8743b1e\",\"user-agent\":\"axios/1.7.9\",\"content-type\":\"application/json\",\"x-request-id\":\"91360975101096aa10d12cb5b8925b55\",\"content-length\":\"821\",\"accept-encoding\":\"gzip, compress, deflate, br\",\"x-forwarded-for\":\"179.0.72.34\",\"x-forwarded-host\":\"engaging-seahorse-19.rshare.io\",\"x-forwarded-port\":\"443\",\"x-forwarded-proto\":\"https\",\"x-forwarded-scheme\":\"https\"},\"webhookUrl\":\"https://engaging-seahorse-19.rshare.io/webhook/evolutionAPIKORE\",\"executionMode\":\"production\"}}],\"Gatilho diário\":[{\"json\":{\"Hour\":\"10\",\"Year\":\"2025\",\"Month\":\"April\",\"Minute\":\"13\",\"Second\":\"11\",\"Timezone\":\"America/New_York (UTC-04:00)\",\"timestamp\":\"2025-04-24T10:13:11.035-04:00\",\"Day of week\":\"Thursday\",\"Day of month\":\"24\",\"Readable date\":\"April 24th 2025, 10:13:11 am\",\"Readable time\":\"10:13:11 am\"}}]},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"3044ad5c-d14e-4562-a454-0ad87f26dc68\",\"connections\":{\"OpenAI\":{\"main\":[[{\"node\":\"Assistente Clínica\",\"type\":\"main\",\"index\":0}]]},\"Switch\":{\"main\":[[{\"node\":\"Assistente Clínica\",\"type\":\"main\",\"index\":0}],[{\"node\":\"OpenAI1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Evolution API\",\"type\":\"main\",\"index\":0}],[]]},\"OpenAI1\":{\"main\":[[{\"node\":\"AI Agent2\",\"type\":\"main\",\"index\":0}]]},\"AI Agent\":{\"main\":[[{\"node\":\"Evolution API2\",\"type\":\"main\",\"index\":0}]]},\"Webhook1\":{\"main\":[[{\"node\":\"Edit Fields1\",\"type\":\"main\",\"index\":0}]]},\"AI Agent2\":{\"main\":[[{\"node\":\"Assistente Clínica\",\"type\":\"main\",\"index\":0}]]},\"MCP GMAIL\":{\"ai_tool\":[[{\"node\":\"Assistente de confirmação\",\"type\":\"ai_tool\",\"index\":0}]]},\"CallToHuman\":{\"ai_tool\":[[{\"node\":\"Assistente Clínica\",\"type\":\"ai_tool\",\"index\":0}]]},\"Edit Fields1\":{\"main\":[[{\"node\":\"Switch\",\"type\":\"main\",\"index\":0}]]},\"Google Tasks\":{\"ai_tool\":[[{\"node\":\"Assistente clinica interno\",\"type\":\"ai_tool\",\"index\":0}]]},\"MCP CALENDAR\":{\"ai_tool\":[[{\"node\":\"Assistente de confirmação\",\"type\":\"ai_tool\",\"index\":0}]]},\"Evolution API\":{\"main\":[[{\"node\":\"Convert to File\",\"type\":\"main\",\"index\":0}]]},\"Convert to File\":{\"main\":[[{\"node\":\"OpenAI\",\"type\":\"main\",\"index\":0}]]},\"Gatilho diário\":{\"main\":[[{\"node\":\"Assistente de confirmação\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Assistente Clínica\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"Assistente clinica interno\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"OpenAI Chat Model2\":{\"ai_languageModel\":[[{\"node\":\"Assistente de confirmação\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Assistente Clínica\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"MCP Google Calendar\":{\"ai_tool\":[[{\"node\":\"Assistente clinica interno\",\"type\":\"ai_tool\",\"index\":0}]]},\"MCP Google Calendar2\":{\"ai_tool\":[[{\"node\":\"Assistente Clínica\",\"type\":\"ai_tool\",\"index\":0}]]},\"Postgres Chat Memory\":{\"ai_memory\":[[{\"node\":\"Assistente clinica interno\",\"type\":\"ai_memory\",\"index\":0}]]},\"Postgres Chat Memory1\":{\"ai_memory\":[[{\"node\":\"Assistente Clínica\",\"type\":\"ai_memory\",\"index\":0}]]},\"OpenRouter Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"OpenRouter Chat Model2\":{\"ai_languageModel\":[[{\"node\":\"AI Agent2\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Receber Mensagem Telegram\":{\"main\":[[{\"node\":\"Assistente clinica interno\",\"type\":\"main\",\"index\":0}]]},\"Assistente clinica interno\":{\"main\":[[{\"node\":\"Telegram\",\"type\":\"main\",\"index\":0}]]},\"Assistente de confirmação\":{\"main\":[[{\"node\":\"REMINDER\",\"type\":\"main\",\"index\":0}]]},\"Enviar alerta de cancelamento\":{\"ai_tool\":[[{\"node\":\"Assistente Clínica\",\"type\":\"ai_tool\",\"index\":0}]]}}}",
  "readme": "# Healthcare Clinic Assistant with WhatsApp and Telegram Integration\n\n**Version:** 1.1.0  \n**n8n Version:** 1.88.0+  \n**License:** MIT\n\n* * *\n\n## 📋 Description\n\nA **comprehensive and modular automation workflow** designed for healthcare clinics.  \nIt manages patient communication, appointment scheduling, confirmations, rescheduling, internal tasks, and media processing by integrating **WhatsApp** , **Telegram** , **Google Calendar** , and **Google Tasks** , combined with **AI-powered agents** for maximum efficiency.\n\nThis system guarantees proactive communication with patients, streamlined internal clinic management, and consistent data synchronization across platforms.\n\n* * *\n\n## 🌟 Key Features\n\n  * 🤖 **AI-Powered Specialized Agents** :  \nDistinct agents handle WhatsApp patient support, appointment confirmations, and internal rescheduling tasks.\n\n  * 📱 **Omnichannel Communication** :  \nHandles patient interactions via WhatsApp and staff commands via Telegram.\n\n  * 📅 **Google Calendar Appointment Management** :  \nFull synchronization for creating, updating, canceling, and confirming appointments.\n\n  * 📋 **Task Management with Google Tasks** :  \nManages shopping lists and administrative tasks efficiently through staff Telegram requests.\n\n  * 🔔 **Automated Appointment Reminders** :  \nDaily-triggered system proactively sends WhatsApp confirmations to patients for next-day appointments.\n\n  * 🖼️ **Intelligent Media Processing** :  \nTranscribes audios, extracts text from images, and processes documents using OpenAI and OpenRouter AI models.\n\n  * 🛡️ **Escalation to Human Support** :  \nAutomatically detects sensitive or urgent cases and escalates them to a human agent when needed.\n\n\n\n\n* * *\n\n## 🏥 Use Cases\n\n  * **Patient Communication:**  \nRespond to inquiries, schedule, reschedule, and confirm appointments seamlessly via WhatsApp.\n\n  * **Internal Clinic Operations:**  \nAllow staff to modify appointments or add shopping list reminders directly from Telegram.\n\n  * **Appointment Confirmation System:**  \nAutomatically contacts patients one day prior to appointments for confirmation or rescheduling.\n\n  * **Task and Reminder Management:**  \nKeeps clinic operations organized through automatic task management with Google Tasks.\n\n\n\n\n* * *\n\n## 🛠️ Technical Implementation\n\n### WhatsApp Patient Interaction Flow\n\n  * **Webhook Reception:** Incoming WhatsApp messages captured via Evolution API webhook.\n  * **Message Classification:** Intelligent routing of messages based on content type (text, image, audio, document).\n  * **Media Content Processing:**\n    * **Audios:** Download, convert, and transcribe via OpenAI Whisper.\n    * **Images:** Analyze and extract text/descriptions with OpenAI Vision model.\n  * **Patient Request Handling:** Specialized WhatsApp assistant responds appropriately using AI prompts.\n  * **Outbound Message Formatting:** Ensures messages comply with WhatsApp format standards.\n  * **Message Delivery:** Sends responses back via Evolution API.\n\n\n\n### Telegram Staff Management Flow\n\n  * **Telegram Webhook Reception:** Captures messages from authorized staff accounts.\n  * **Internal Assistant Processing:**\n    * **Appointment Rescheduling:** Identifies and updates appointments through MCP Google Calendar.\n    * **Task Creation:** Adds new entries to the clinic's shopping list using Google Tasks.\n  * **Notifications and Confirmations:** Sends confirmations back to staff through Telegram.\n\n\n\n### Appointment Reminder System\n\n  * **Daily Trigger Activation:** Fires every weekday at 08:00 AM.\n  * **Calendar Scraping:** Lists next day's appointments from Google Calendar.\n  * **Patient Contact:** Sends WhatsApp confirmation messages for each appointment.\n  * **Response Management:** Redirects confirmation or rescheduling replies to appropriate agents.\n\n\n\n* * *\n\n## ⚙️ Setup Instructions\n\n  1. **Import the Workflow**  \nn8n → Workflows → Import from File → Upload this JSON file.\n\n  2. **Configure Credentials**\n\n     * Evolution API (WhatsApp Communication)\n     * Telegram Bot API (Staff Communication)\n     * Google Calendar OAuth2 (Appointment Management)\n     * Google Tasks OAuth2 (Task Management)\n     * OpenAI and OpenRouter APIs (AI Agents)\n     * PostgreSQL Database (Chat Memory)\n  3. **Set Sensitive Variables**\n\n     * Replace placeholder values: \n       * `{sua instância aqui}` → Evolution API instance name\n       * `{número_whatsapp}` → WhatsApp numbers\n       * `{url_do_servidor}` → Server URLs\n       * `{a sua apikey aqui}` → API keys\n       * `{seu_calendario}` → Google Calendar ID\n  4. **Customize AI Prompts**\n\n     * Adjust system prompts to fit your clinic’s tone, service style, and patient communication guidelines.\n     * Set clinic operating hours, escalation rules, and cancellation procedures in AI prompts.\n  5. **Activate and Test**\n\n     * Simulate patient messages via WhatsApp.\n     * Test Telegram commands from staff members.\n     * Validate daily appointment reminders using the scheduled trigger.\n\n\n\n* * *\n\n## 🏷️ Tags\n\n`Healthcare` `Clinic Management` `WhatsApp Integration` `Telegram Bot` `Appointment Scheduling` `Google Calendar` `Google Tasks` `AI Agents` `n8n Automation`\n\n* * *\n\n## 📚 Technical Notes\n\n  * PostgreSQL is used for persistent chat memory across sessions.\n  * Multiple AI Models Used: \n    * **OpenAI GPT-4.1-nano**\n    * **OpenAI GPT-4.1-mini**\n    * **Google Gemini 2.0 and 2.5**\n  * Full media content processing supported (audio, image, text).\n  * Compliant escalation workflows ensure patient safety and proper handoff to human staff when necessary.\n  * All sensitive patient data are securely stored inside calendar event descriptions for easy retrieval by agents.\n\n\n\n* * *\n\n## 📜 License\n\nThis workflow is provided under the **MIT License**.  \nFeel free to adapt and customize it for your clinic’s specific needs.\n",
  "crawled_at": "2025-05-26T05:18:45.190247",
  "readme_zh": "# 医疗诊所助手（集成WhatsApp与Telegram）\n\n**版本**：1.0.0 **n8n版本**：1.88.0+ **许可协议**：MIT\n\n## 功能概述\n\n一套完整的自动化工作流系统，为医疗机构提供患者沟通与内部管理解决方案。通过WhatsApp实现预约安排、确认及提醒功能，同时借助Telegram为工作人员提供任务管理和改期工具。\n\n## 核心功能\n\n* 🤖 **智能AI助手**：多个专业AI代理处理诊所沟通的不同环节\n* 📱 **全渠道沟通**：WhatsApp对接患者服务，Telegram支持内部运营\n* 📅 **谷歌日历整合**：管理包含完整患者信息的预约日程\n* 📋 **任务管理**：通过Google Tasks维护诊所采购清单和提醒事项\n* 🔔 **自动预约提醒**：在就诊前向患者发送确认请求\n* 📷 **多媒体处理**：支持AI分析患者提交的图片、音频及文档\n\n## 应用场景\n\n1. **患者沟通**：通过WhatsApp响应咨询、安排预约及发送提醒\n2. **诊所内部管理**：工作人员可通过Telegram改约及添加采购清单\n3. **预约确认**：系统自动在就诊前联系患者确认出席情况\n4. **任务管理**：维护更新采购清单等行政事务\n\n## 技术实现\n\n### WhatsApp患者交互流程\n\n1. **消息接收**：通过Evolution API webhook捕获患者消息\n2. **消息分类**：识别文本/图片/音频/文档类型\n3. **内容处理**：必要时进行音频转写或图片文字提取\n4. **AI处理**：使用特定提示词生成恰当回复\n5. **响应发送**：通过WhatsApp返回格式化回复\n\n### Telegram员工管理流程\n\n1. **指令接收**：工作人员向Telegram机器人发送请求\n2. **AI处理**：内部助手解析改约或任务添加指令\n3. **日历同步**：更新Google Calendar预约变更\n4. **任务管理**：向Google Tasks添加采购项\n5. **确认反馈**：向工作人员发送操作确认\n\n### 预约提醒系统\n\n1. **每日触发**：工作日早晨自动启动\n2. **日历查询**：检索次日预约信息\n3. **患者通知**：通过WhatsApp发送确认请求\n4. **响应处理**：由专属AI代理处理确认/改期请求\n\n## 部署指南\n\n### 1. 导入模板\n\n* 进入 **n8n > 工作流 > 从文件导入** 上传本JSON工作流\n\n### 2. 配置凭证\n\n* 设置 **Telegram API** 凭证用于员工沟通\n* 配置 **Evolution API** 凭证实现WhatsApp对接\n* 添加 **Google Calendar OAuth2** 凭证管理预约\n* 设置 **Google Tasks OAuth2** 凭证处理任务\n* 配置 **OpenAI API** 和 **OpenRouter API** 实现AI功能\n* 建立 **PostgreSQL** 凭证存储对话记忆\n\n### 3. 配置敏感参数\n\n替换工作流中的以下敏感值：\n\n* Evolution API实例名称（webhook参数中的`{sua instância aqui}`）\n* WhatsApp号码（消息端点中的`{número_whatsapp}`）\n* 服务器URL（API连接中的`{url_do_servidor}`）\n* API密钥（认证字段中的`{a sua apikey aqui}`）\n* 谷歌日历链接（系统消息中的`{seu_calendario}`）\n\n### 4. 自定义AI提示\n\n* 修改AI助手的系统消息以符合诊所风格\n* 调整预约参数匹配诊所营业时间\n* 定制患者沟通的回复模板\n\n### 5. 激活测试\n\n* 通过webhook触发器测试WhatsApp交互\n* 直接消息测试Telegram管理工具\n* 使用定时触发器验证预约提醒系统\n\n## 标签\n\n`医疗健康` `诊所管理` `WhatsApp` `Telegram` `预约系统` `AI助手` `谷歌日历` `任务管理`\n\n## 技术说明\n\n* 使用PostgreSQL维持对话上下文\n* 采用多AI模型处理不同任务（GPT-4.1-nano/GPT-4.1-mini/Gemini）\n* 多媒体处理支持图片分析、音频转写及文档解析\n* 系统遵循特定预约协议处理确认与改期\n* 所有敏感信息均安全存储于预约描述字段\n\n## 许可声明\n\n本模板采用MIT开源协议授权。",
  "title_zh": "基于WhatsApp、Telegram和Google日历的多智能体AI诊所管理系统",
  "publish_date_zh": "最近更新于一天前",
  "workflow_json_zh": "{\n  \"id\": \"6LeAm5UyENgTdwkv\",\n  \"meta\": {\n    \"instanceId\": \"6d46e25379ef430a7067964d1096b885c773564549240cb3ad4c087f6cf94bd3\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"agente\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"84ce6905-4416-4721-8627-f8c303730a4f\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        8260,\n        2260\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-nano-2025-04-14\",\n          \"cachedResultName\": \"gpt-4.1-nano-2025-04-14\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"zUnIUrOWA279vAoC\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"a6e9358a-a873-49f3-af38-21ca545b2bfc\",\n      \"name\": \"Assistente clinica interno\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        8380,\n        2020\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.message.text }}\",\n        \"options\": {\n          \"systemMessage\": \"=Hoje é {{$now}}\\nPAPEL:  \\nVocê é um assistente interno de reagendamento na clínica, acionado diretamente por um profissional via Telegram para gerenciar situações de remarcação de consultas ou incluir lembretes na lista de compras.\\n\\nOBJETIVO GERAL:  \\n1. Reagendar consultas a pedido do profissional.  \\n2. Adicionar lembretes na lista de compras quando solicitado.  \\n\\nRESUMO DE RESPONSABILIDADES:  \\n1. Reagendamento de pacientes  \\n   - Acesse o Google Calendar por meio da ferramenta \\\"MCP Google Calendar\\\" para identificar as consultas afetadas.  \\n   - Extraia o número de telefone na descrição do evento.  \\n   - Use a ferramenta \\\"Reagendar no WhatsApp\\\" para enviar mensagens de reagendamento aos pacientes.  \\n   - Lembre-se de que você apenas envia a mensagem; a resposta do paciente é tratada por outro agente.  \\n\\n2. Lista de compras da clínica  \\n   - Se o profissional solicitar pelo Telegram a inclusão de um item na lista de compras, utilize a ferramenta \\\"Google Tasks\\\" para adicionar o lembrete.  \\n\\nORIENTAÇÕES DE LINGUAGEM E PROCEDIMENTO:  \\n- Use uma abordagem empática, profissional e acolhedora.  \\n- Nunca envie mensagens para pacientes sem autorização explícita do profissional.  \\n- Quando listar eventos ou tarefas, seja objetivo e organizado.  \\n- Mantenha clareza e concisão em todas as interações.  \\n\\nFERRAMENTAS DISPONÍVEIS:  \\n- Reagendar no WhatsApp  \\n- Google Tasks  \\n- MCP Google Calendar  \\n\\nINSTRUÇÕES FINAIS:  \\n- Atenda exclusivamente às solicitações de reagendamento e inclusão de lembretes.  \\n- A remarcação de consultas ocorre somente quando o profissional pede, utilizando o MCP Google Calendar para identificar os pacientes e o \\\"Reagendar no WhatsApp\\\" para enviar a mensagem.  \\n- Para a lista de compras, sempre registre no \\\"Google Tasks\\\".  \\n\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"d674fb31-cf45-47ac-b33b-4abe1920e352\",\n      \"name\": \"Google Tasks\",\n      \"type\": \"n8n-nodes-base.googleTasksTool\",\n      \"position\": [\n        8720,\n        2320\n      ],\n      \"parameters\": {\n        \"task\": \"bDQ5ZlNVV2lPQ3pYT3NsNA\",\n        \"title\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}\",\n        \"additionalFields\": {\n          \"notes\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Notes', ``, 'string') }}\",\n          \"status\": \"needsAction\"\n        }\n      },\n      \"credentials\": {\n        \"googleTasksOAuth2Api\": {\n          \"id\": \"3SQEwHb0AR81JO8y\",\n          \"name\": \"Google Tasks account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dff00a3c-6496-4104-afc4-a0556f3cabfa\",\n      \"name\": \"MCP Google Calendar\",\n      \"type\": \"@n8n/n8n-nodes-langchain.mcpClientTool\",\n      \"position\": [\n        8560,\n        2320\n      ],\n      \"parameters\": {\n        \"sseEndpoint\": \"https://engaging-seahorse-19.rshare.io/mcp/ceb17fa5-1937-405f-8000-ea3be7d2b032/mcp/:tool/calendar/sse\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"10a0bda3-94b3-487a-98a1-1e7badcc8775\",\n      \"name\": \"Receber Mensagem Telegram\",\n      \"type\": \"n8n-nodes-base.telegramTrigger\",\n      \"position\": [\n        8100,\n        2020\n      ],\n      \"webhookId\": \"f2b29356-d5d3-4f5d-9ef1-273001c0a820\",\n      \"parameters\": {\n        \"updates\": [\n          \"message\"\n        ],\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"TAVUHrFXuDIMInWe\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"46cfa6be-f896-4e33-be3d-b4ef676c043b\",\n      \"name\": \"Postgres Chat Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\n      \"position\": [\n        8420,\n        2300\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"100\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 10\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"t8gw5Kie6Oxy5TcK\",\n          \"name\": \"Postgres account\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"c79c44f6-94fa-4e56-9d94-49185f83bfb4\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        5860,\n        3980\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-mini-2025-04-14\",\n          \"cachedResultName\": \"gpt-4.1-mini-2025-04-14\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"zUnIUrOWA279vAoC\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"5e7ac239-6ba1-414c-b11d-d637361e8f77\",\n      \"name\": \"Assistente Clínica\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        5960,\n        3760\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.text }}{{ $json.output}}\",\n        \"options\": {\n          \"systemMessage\": \"=HOJE É: {{ $now }}\\nCONTATO DA CLÍNICA: \\n{ coloque o seu contato aqui }\\n\\nINSTRUÇÃO IMPORTANTE:\\n\\nAo criar ou editar qualquer evento via MCP_CALENDAR, inclua na descrição do agendamento:\\n\\nTelefone do paciente\\n\\nNome completo\\n\\nData de nascimento\\n\\nInformações adicionais (convênio, condição de saúde etc.)\\n\\nPAPEL:\\nVocê é uma atendente do WhatsApp da Clínica Moreira, especializada em atendimento humanizado. Sua missão:\\n\\nAtender pacientes de forma ágil e eficiente\\n\\nResponder dúvidas sobre clínica e serviços\\n\\nAgendar, remarcar e cancelar consultas pelo MCP_CALENDAR\\n\\nPERSONALIDADE E TOM DE VOZ:\\n\\nSimpática, acolhedora e respeitosa\\n\\nFormal, sem emojis ou gírias\\n\\nFERRAMENTAS DISPONÍVEIS:\\n\\nMCP_CALENDAR (trigger /mcp/:tool/calendar)\\n\\nAVALIABILITY_CALENDAR: verifica horários livres entre Start_Time e End_Time\\n\\nGET_ALL_CALENDAR: lista todos os eventos entre After e Before\\n\\nCREATE_CALENDAR: cria novo evento com start, end e Description (inclua sempre telefone, nome e data de nascimento)\\n\\nUPDATE_CALENDAR: atualiza campos de um evento existente (Event_ID)\\n\\nDELETE_CALENDAR: remove evento (Event_ID)\\n\\nGET_CALENDAR: obtém detalhes de um evento específico (Event_ID)\\n\\nCallToHuman (workflow id A95kslcW4H82nJuR)\\n\\nEncaminha atendimento humano via EvolutionAPI em n8n\\n\\nDisparar IMEDIATAMENTE quando:\\n\\nUrgência ou mal-estar grave\\n\\nPedido de diagnóstico/opinião médica\\n\\nInsatisfação expressa do paciente\\n\\nAssuntos fora do escopo da clínica\\n\\nExemplo de chamada:\\n\\n{\\n  \\\"tool\\\": \\\"CallToHuman\\\",\\n  \\\"telefone\\\": \\\"<telefone>\\\",\\n  \\\"nome\\\": \\\"<nome completo>\\\",\\n  \\\"ultima_mensagem\\\": \\\"<texto da última mensagem>\\\"\\n}\\n\\nEnviar telegram cancelamento\\n\\nApós DELETE_CALENDAR, envie ao gestor via Telegram: nome, data, hora\\n\\nSOP (Fluxo de Atendimento):\\n\\nInício e coleta de dados\\n\\nCumprimente e informe o link da agenda: https://calendar.google.com/calendar/embed?src=a57a3781407f42b1ad7fe24ce76f558dc6c86fea5f349b7fd39747a2294c1654%40group.calendar.google.com&ctz=America%2FArgentina%2FBuenos_Aires\\n\\nPeça: nome completo, data de nascimento e confirme o telefone\\n number: {{ $('Webhook1').item.json.body.data.key.remoteJid.replaceAll(\\\"@s.whatsapp.net\\\",\\\"\\\") }}\\n\\nVerificação de disponibilidade\\n\\nPergunte data e turno preferidos\\n\\nChame AVALIABILITY_CALENDAR com Start_Time 08:00 e End_Time 19:00 (ou turno)\\n\\nInforme horários livres\\n\\nAgendamento\\n\\nApós escolha do paciente, use CREATE_CALENDAR com start, end e Description\\n\\nAguarde retorno para confirmar criação antes de responder\\n\\nRemarcação\\n\\nSolicite dados e nova preferência de data/turno\\n\\nLocalize evento antigo via GET_ALL_CALENDAR\\n\\nUse DELETE_CALENDAR no Event_ID antigo\\n\\nCrie novo com CREATE_CALENDAR\\n\\nConfirme após sucesso\\n\\nCancelamento\\n\\nSolicite dados do paciente\\n\\nIdentifique Event_ID via GET_ALL_CALENDAR ou GET_CALENDAR\\n\\nExecute DELETE_CALENDAR\\n\\nUse Enviar telegram cancelamento\\n\\nConfirme cancelamento ao paciente\\n\\nConfirmação de consulta (follow-up)\\n\\nSe paciente responder “Confirmar, ID”: use UPDATE_CALENDAR para prefixar título com [Confirmado]\\n\\nSe “Reagendar, ID”: DELETE_CALENDAR e oriente para usar link da agenda\\n\\nREGRAS DE ESCALONAMENTO:\\n\\nUse CallToHuman IMEDIATAMENTE em situações de:\\n\\nUrgência/mal-estar\\n\\nPedidos de diagnóstico/opinião médica\\n\\nInsatisfação ou reclamações\\n\\nAssuntos fora do escopo\\n\\nMANTENHA SEMPRE:\\n\\nTom profissional e respeitoso\\n\\nLinguagem clara e objetiva\\n\\nAgendamentos apenas em datas futuras\\n\\nNunca confirmar sem retorno do MCP_CALENDAR\\n\\nHORÁRIOS DE FUNCIONAMENTO:\\n\\nSeg–Sáb: 08h–19h | Dom e feriados: fechado\\n\\nLOCALIZAÇÃO:\\nRua Rio Casca, 417 – Belo Horizonte, MG\\n\\nLINK DA AGENDA:\\nhttps://calendar.google.com/calendar/embed?src=a57a3781407f42b1ad7fe24ce76f558dc6c86fea5f349b7fd39747a2294c1654%40group.calendar.google.com&ctz=America%2FArgentina%2FBuenos_Aires\\n\\n\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"retryOnFail\": true,\n      \"typeVersion\": 1.8,\n      \"waitBetweenTries\": 1000\n    },\n    {\n      \"id\": \"2f0a6ea1-7654-4ae7-884e-d5b8ff47d4f9\",\n      \"name\": \"Enviar alerta de cancelamento\",\n      \"type\": \"n8n-nodes-base.telegramTool\",\n      \"position\": [\n        6400,\n        3980\n      ],\n      \"webhookId\": \"d045a8c1-ec1b-4d20-8226-457aa18934af\",\n      \"parameters\": {\n        \"text\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}\",\n        \"chatId\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Chat_ID', ``, 'string') }}\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"TAVUHrFXuDIMInWe\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"8ddaa14f-7d2f-4364-8ff7-f87e0a428e37\",\n      \"name\": \"Gatilho diário\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        8060,\n        2780\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"cronExpression\",\n              \"expression\": \"0 8 * * 1-5\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"0784753d-123d-4259-abcc-8abf39e7fc07\",\n      \"name\": \"Assistente de confirmação\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        8280,\n        2680\n      ],\n      \"parameters\": {\n        \"text\": \"=Hoje é {{ $now }}. Você é um agente especializado em **confirmação de consultas** para a clínica. Sua função principal é:\\n\\n1. **Listar os eventos** agendados para o próximo dia no MCP Calendar.\\n2. **Obter o numero** na descrição de cada evento.\\n3. **Enviar uma mensagem de confirmação** usando a ferramenta “relembraAGENDAMENTO”, perguntando se o paciente confirma a consulta ou prefere reagendar.\\n\\nImportante:\\n- Você **não recebe respostas** diretamente; o retorno do paciente é tratado por outro agente.\\n\\n\",\n        \"options\": {\n          \"systemMessage\": \"\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"afa90e86-0f44-4069-976b-ca302b0d828a\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        5840,\n        4460\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.output }}\",\n        \"options\": {\n          \"systemMessage\": \"=Você é especialista em formatação de mensagem para whataspp, trabalhando somente na formatação e não alterando o conteúdo da menssagem.\\n\\n- Substitua ** por *\\n- Remova #\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"13179a70-85b6-4e18-8736-eb2cdd252591\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        6960,\n        2580\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 1940,\n        \"height\": 600,\n        \"content\": \"# \\\"预约确认助手\\\"\\n描述：\\n\\n功能用途：\\n本模块包含预约确认助手的配置，该智能体专门用于与患者确认已安排的预约事项。\\n\\n使用说明：\\n\\n每日触发器会在工作日（周一至周五）上午08:00自动激活该功能\\n\\n智能体通过MCP谷歌日历获取次日所有预约记录\\n\\n从事件描述字段中提取每位患者的联系电话号码\\n\\n使用relembraAGENDAMENTO工具向患者发送确认信息，请求确认或改约\\n\\n重要提示：本智能体不处理患者回复，后续跟进由其他智能体或工作流负责\\n\\n请确保谷歌日历中的事件描述字段填写完整，以避免出现错误\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4111432b-2ddc-4e96-ba6d-d25e003e2688\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4760,\n        3620\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 1780,\n        \"height\": 640,\n        \"content\": \"# \\\"智能体核心组件（工具、MCP、记忆、LLM模型）\\\"\\n描述：\\n\\n用途：\\n\\n这张便利贴代表任何智能体的基本结构：包括外部工具访问、持久记忆、用于日历管理的MCP系统，以及处理自然语言任务的语言模型（LLM）。\\n\\n使用说明：\\n\\n语言模型节点（OpenAI、OpenRouter）负责自然语言的理解与生成。\\n\\n记忆节点（Postgres聊天记忆）维护跨多次交互的对话上下文。\\n\\nMCP工具与谷歌日历等服务交互以执行现实世界操作。\\n\\n始终确保智能体上下文与执行操作之间的记忆同步。\\n\\n若添加新工具，必须同时连接至智能体并在系统消息中妥善描述。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4b59f903-07c2-4e66-9ea1-0727beb0d85c\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4640,\n        4300\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 1800,\n        \"height\": 640,\n        \"content\": \"# \\\"处理并发送WhatsApp回复\\\"\\n功能描述：\\n\\n用途：\\n本模块负责通过Evolution API对患者外发的WhatsApp消息进行处理、格式调整及发送。\\n\\n使用说明：\\n\\n1. 从助理接收到的消息首先由AI代理节点进行重构，以符合WhatsApp标记语法规范（例如将**加粗**转换为*加粗*）\\n\\n2. 格式调整完成后，消息将通过Evolution API2节点转发至WhatsApp平台\\n\\n注意事项：\\n- 发送前需确保格式规范，以维持专业沟通语气并避免投递错误\\n- 后续所有文本处理优化都应在此模块实施\\n\\n（注：根据技术文档特性，采用分项式翻译策略，将原文操作指南转换为更符合中文技术文档的条目式说明。保留\\\"node\\\"专业术语不译，维持API/WhatsApp等专有名词原貌，使用\\\"模块\\\"对应\\\"section\\\"体现中文技术文档惯用表述。）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"274f7f66-7613-4e9e-868d-a5705156dde6\",\n      \"name\": \"Postgres Chat Memory1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryPostgresChat\",\n      \"position\": [\n        6000,\n        3980\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"= {{ $('Webhook1').item.json.body.data.key.id }}\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 50\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"t8gw5Kie6Oxy5TcK\",\n          \"name\": \"Postgres account\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"654ed617-df1a-48db-b9bc-833b2c1ecb80\",\n      \"name\": \"MCP Google Calendar2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.mcpClientTool\",\n      \"position\": [\n        6120,\n        3980\n      ],\n      \"parameters\": {\n        \"sseEndpoint\": \"https://engaging-seahorse-19.rshare.io/mcp/ceb17fa5-1937-405f-8000-ea3be7d2b032/mcp/:tool/calendar/sse\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b11aeec6-b446-4c02-a0b0-7f9239628df3\",\n      \"name\": \"MCP GMAIL\",\n      \"type\": \"@n8n/n8n-nodes-langchain.mcpClientTool\",\n      \"position\": [\n        8540,\n        3000\n      ],\n      \"parameters\": {\n        \"sseEndpoint\": \"https://engaging-seahorse-19.rshare.io/mcp/82a7a338-618c-44f5-a1c3-f2e32b6b4833/mcp/:tool/gmail/sse\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f5a38b34-499e-4bbc-9282-ce5f4a3b85a3\",\n      \"name\": \"MCP CALENDAR\",\n      \"type\": \"@n8n/n8n-nodes-langchain.mcpClientTool\",\n      \"position\": [\n        8380,\n        3000\n      ],\n      \"parameters\": {\n        \"sseEndpoint\": \"https://engaging-seahorse-19.rshare.io/mcp/ceb17fa5-1937-405f-8000-ea3be7d2b032/mcp/:tool/calendar/sse\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cd6a6147-fd18-4cd4-8aab-fcb454ab76b7\",\n      \"name\": \"Telegram\",\n      \"type\": \"n8n-nodes-base.telegram\",\n      \"position\": [\n        8740,\n        2020\n      ],\n      \"webhookId\": \"5bba05fc-2859-4225-aa85-7c4bc5ff532d\",\n      \"parameters\": {\n        \"text\": \"={{ $json.output }}\",\n        \"chatId\": \"={{ $('Receber Mensagem Telegram').item.json.message.chat.id }}\",\n        \"additionalFields\": {}\n      },\n      \"credentials\": {\n        \"telegramApi\": {\n          \"id\": \"TAVUHrFXuDIMInWe\",\n          \"name\": \"Telegram account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"900b8c1a-f987-4898-9fc1-bfc673773e06\",\n      \"name\": \"OpenRouter Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\n      \"position\": [\n        5760,\n        4680\n      ],\n      \"parameters\": {\n        \"model\": \"google/gemini-2.0-flash-exp:free\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openRouterApi\": {\n          \"id\": \"eGPA8rbskZCfFPBn\",\n          \"name\": \"OpenRouter account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1584b448-d8f5-4bab-ad9a-9b07edb8e102\",\n      \"name\": \"Webhook1\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        5760,\n        2100\n      ],\n      \"webhookId\": \"405dab7c-a0ea-4f5b-a6cc-ede9d5ba78a0\",\n      \"parameters\": {\n        \"path\": \"evolutionAPIKORE\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"74b5179f-502c-45d6-88e9-2c2d492603cd\",\n      \"name\": \"Edit Fields1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        6000,\n        2100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"3e6335ae-74c3-4655-b68f-cdf0c68b864f\",\n              \"name\": \"number\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.data.key.remoteJid }}\"\n            },\n            {\n              \"id\": \"15f399cf-a98e-45e7-91ce-61b4fad340fd\",\n              \"name\": \"name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.data.pushName }}\"\n            },\n            {\n              \"id\": \"b1943003-1f47-40e1-b418-6a52557ec44e\",\n              \"name\": \"key_id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.data.key.id }}\"\n            },\n            {\n              \"id\": \"ed23194b-22ca-455b-a085-7dae706d0569\",\n              \"name\": \"text\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.data.message.conversation }}\"\n            },\n            {\n              \"id\": \"b35f8b61-da15-42e3-a078-4cd901e1f273\",\n              \"name\": \"type\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.data.message.imageMessage.mimetype }}\"\n            },\n            {\n              \"id\": \"a62bf96a-51aa-44c3-9e5d-f592e32a31d6\",\n              \"name\": \"image.url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.data.message.imageMessage.url }}\"\n            },\n            {\n              \"id\": \"b004987d-3527-4040-a5e6-5fe06b25c9b9\",\n              \"name\": \"audio.url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.data.message.audioMessage.url }}\"\n            },\n            {\n              \"id\": \"4c2cc03a-c104-4a87-9d31-6a7c256890ad\",\n              \"name\": \"document.url\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.body.data.message.documentMessage.url }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"ce22f5bc-f0e1-463d-9b9a-5112f8d91f00\",\n      \"name\": \"Switch\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        6240,\n        2080\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"text\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2f9854ac-26b3-446c-9d0d-ae25157c61bb\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"notEmpty\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.text }}\",\n                    \"rightValue\": \"=\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"image\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"73b7d93a-928e-42ec-9c8e-ae8e9b97a867\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"notEmpty\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.image.url }}\",\n                    \"rightValue\": \"=\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"audio\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"2f9915b9-e2b4-4528-ad36-515a848ab1be\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"notEmpty\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.audio.url }}\",\n                    \"rightValue\": \"[null]\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"document\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"9fcbe89a-c9d7-4dc6-bb6f-27c1cacbfddc\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"notEmpty\",\n                      \"singleValue\": true\n                    },\n                    \"leftValue\": \"={{ $json.document.url }}\",\n                    \"rightValue\": \"[null]\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"c78ee758-fb71-4a4f-9450-0ffcd67a2af2\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4960,\n        1840\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 1580,\n        \"height\": 640,\n        \"content\": \"# WhatsApp 网络钩子接收与消息类型处理\\\"\\n功能描述：\\n\\n用途：\\n管理通过网络钩子系统接收患者WhatsApp消息的初始分类处理流程。\\n\\n使用说明：\\n\\n1. Webhook1节点负责捕获所有传入消息\\n2. Edit Fields1节点提取结构化字段（包括文本/图片URL/音频URL/文档URL）\\n3. Switch节点自动识别内容类型并分流处理：\\n   - 文本消息 → 转交助手处理\\n   - 图片 → 发送至OCR分析模块\\n   - 音频 → 发送至转录服务\\n   - 文档 → (预留未来工作流接口)\\n\\n注意事项：\\n需定期更新网络钩子凭证以确保系统可靠性\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"83abbf61-91e2-4d1c-a42a-4f05b18583e7\",\n      \"name\": \"OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        6380,\n        3260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"resource\": \"audio\",\n        \"operation\": \"transcribe\",\n        \"binaryPropertyName\": \"=data\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"zUnIUrOWA279vAoC\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"4c2dcefc-fb65-42ca-8c63-8636f2906654\",\n      \"name\": \"Evolution API\",\n      \"type\": \"n8n-nodes-evolution-api.evolutionApi\",\n      \"position\": [\n        5860,\n        3260\n      ],\n      \"parameters\": {\n        \"resource\": \"chat-api\",\n        \"messageId\": \"={{ $json.key_id }}\",\n        \"operation\": \"get-media-base64\",\n        \"convertToMp4\": true,\n        \"instanceName\": \"={{ $('Webhook1').item.json.body.instance }}\"\n      },\n      \"credentials\": {\n        \"evolutionApi\": {\n          \"id\": \"fPKdX0EITLV8HI89\",\n          \"name\": \"Evolution account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"85909834-7564-478b-bce8-0c3fe7bf4159\",\n      \"name\": \"Convert to File\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        6100,\n        3260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"toBinary\",\n        \"sourceProperty\": \"data.base64\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"3e200157-fbcc-4225-b982-2dfaea54cc23\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4980,\n        3100\n      ],\n      \"parameters\": {\n        \"width\": 1760,\n        \"height\": 480,\n        \"content\": \"## \\\"下载音频并转换为MP4\\\"\\n功能说明：\\n\\n用途：\\n处理患者通过WhatsApp发送的音频文件的获取、转换及文字转录。\\n\\n使用指南：\\n\\n1. Evolution API以base64格式下载音频文件\\n2. 通过\\\"转换为文件\\\"功能将base64数据转码为转录引擎兼容的二进制文件\\n3. OpenAI Whisper API（经由OpenAI节点）将音频转录为文本，为自然语言处理做准备\\n\\n注意事项：\\n• 确保正确处理音频格式（如MP4/MP3）以避免转码或转录失败\\n• 需监控大文件（>25MB）可能导致的性能问题\\n\\n（注：根据中文技术文档惯例，将\\\"Instructions for Use\\\"译为分步骤的\\\"使用指南\\\"，\\\"Monitor\\\"译为主动语态的\\\"需监控\\\"，并添加项目符号提高可读性。保留API名称及专业术语的英文大写形式，符合技术文档翻译规范。）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5862d5f1-2df4-40ee-881f-a6d6e302602f\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4920,\n        2540\n      ],\n      \"parameters\": {\n        \"width\": 1820,\n        \"height\": 480,\n        \"content\": \"# \\\"从图像中提取文本\\\"\\n功能说明：\\n\\n用途：\\n处理通过WhatsApp接收的图片，提取其中文字（OCR）并描述视觉内容，以便进行后续情境分析。\\n\\n使用指南：\\n\\n1. OpenAI1节点采用视觉模型，可转录并描述输入图像中的任何文字或场景内容\\n\\n2. AI Agent2会解析生成的数据，准备分析见解并推荐合适的响应方案\\n\\n3. 该图像转文本功能特别适用于处理患者发送的处方、便条或医疗文件\\n\\n质量要求：\\n为保证最佳转录效果，所有图像必须清晰且为高分辨率。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8dbd4e6d-8b38-44d8-ba45-5cac2713f6ca\",\n      \"name\": \"OpenAI1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        5980,\n        2620\n      ],\n      \"parameters\": {\n        \"text\": \"TRANSCRIBE OS TEXTOS e describe a imagem\",\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"chatgpt-4o-latest\",\n          \"cachedResultName\": \"CHATGPT-4O-LATEST\"\n        },\n        \"options\": {},\n        \"resource\": \"image\",\n        \"imageUrls\": \"={{ $json.image }}\",\n        \"operation\": \"analyze\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"zUnIUrOWA279vAoC\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"19e8d50d-4f87-408e-96f0-236932c1d120\",\n      \"name\": \"AI Agent2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        6200,\n        2620\n      ],\n      \"parameters\": {\n        \"text\": \"={{$json.output}}\",\n        \"options\": {\n          \"systemMessage\": \"voce e encarregado de analizar o texto proveniente do analisis de uma iamgem ela pode conter texto, a ideia e que voce explique ao proximo agente como debe responder as mensagens\"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"0d2f9842-b011-49f5-9594-24a917dee60e\",\n      \"name\": \"OpenRouter Chat Model2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\n      \"position\": [\n        6100,\n        2860\n      ],\n      \"parameters\": {\n        \"model\": \"google/gemini-2.5-pro-exp-03-25:free\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openRouterApi\": {\n          \"id\": \"eGPA8rbskZCfFPBn\",\n          \"name\": \"OpenRouter account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"58f7f9c7-6f86-40ff-bfad-5467e5b3a9e4\",\n      \"name\": \"Evolution API2\",\n      \"type\": \"n8n-nodes-evolution-api.evolutionApi\",\n      \"position\": [\n        6200,\n        4460\n      ],\n      \"parameters\": {\n        \"resource\": \"messages-api\",\n        \"remoteJid\": \"={{ $('Webhook1').item.json.body.data.key.remoteJid }}\",\n        \"messageText\": \"={{$json.output}}\",\n        \"instanceName\": \"={{ $('Webhook1').item.json.body.instance }}\",\n        \"options_message\": {}\n      },\n      \"credentials\": {\n        \"evolutionApi\": {\n          \"id\": \"fPKdX0EITLV8HI89\",\n          \"name\": \"Evolution account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2b529ab1-2a7e-44e0-b7c8-ed05e07c6def\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        6960,\n        1840\n      ],\n      \"parameters\": {\n        \"width\": 1960,\n        \"height\": 680,\n        \"content\": \"## \\\"内部诊所助理\\\"\\n描述：\\n\\n用途：\\n代表诊所内部助理，仅供内部团队通过Telegram使用，用于管理患者改期事宜和维护采购提醒清单。\\n\\n使用说明：\\n\\n由员工通过Telegram发送的消息触发。\\n\\n改期任务：\\n- 访问MCP谷歌日历以查找和管理预约\\n- 从活动描述中提取患者联系方式\\n- 通过专用工具在WhatsApp上发送改期消息\\n\\n采购清单任务：\\n- 根据员工指示将采购提醒添加至谷歌任务\\n\\n注意事项：\\n- 与患者互动时（即使是间接沟通）始终保持专业且富有同理心的语气\\n- 未经员工授权不得直接联系患者\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4a51bd1-48a6-4e32-b696-0ae77a0e05fe\",\n      \"name\": \"CallToHuman\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        6240,\n        4000\n      ],\n      \"parameters\": {\n        \"name\": \"escalar_humano\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"A95kslcW4H82nJuR\",\n          \"cachedResultName\": \"callToHuman\"\n        },\n        \"description\": \"=Use essa ferramenta ao perceber que o paciente fala de:\\n- Situações urgentes (sentindo-se mal, etc.)\\n- Assuntos não relacionados à clínica\\n- Insatisfação extrema ou pedidos de falar com um humano\\n\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"nome\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nome', ``, 'string') }}\",\n            \"telefone\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('telefone', ``, 'string') }}\",\n            \"ultima_mensagem\": \"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('ultima_mensagem', ``, 'string') }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"telefone\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"telefone\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"nome\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"nome\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"ultima_mensagem\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"ultima_mensagem\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"674c5c75-a954-4306-8a02-71bdda89293c\",\n      \"name\": \"OpenAI Chat Model2\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        8260,\n        2840\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-mini\",\n          \"cachedResultName\": \"gpt-4.1-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"zUnIUrOWA279vAoC\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"b398627e-2fbe-44e4-ac2f-523b03871eda\",\n      \"name\": \"REMINDER\",\n      \"type\": \"n8n-nodes-evolution-api.evolutionApi\",\n      \"position\": [\n        8640,\n        2700\n      ],\n      \"parameters\": {\n        \"resource\": \"messages-api\",\n        \"remoteJid\": \"5511111111111@s.whatsapp.net\",\n        \"messageText\": \"={{$fromAI(\\\"reminder\\\")}}\",\n        \"instanceName\": \"instance name\",\n        \"options_message\": {}\n      },\n      \"credentials\": {\n        \"evolutionApi\": {\n          \"id\": \"fPKdX0EITLV8HI89\",\n          \"name\": \"Evolution account\"\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"Webhook1\": [\n      {\n        \"json\": {\n          \"body\": {\n            \"data\": {\n              \"key\": {\n                \"id\": \"05D218BDE5BFC8378B5AA50BA87FDAFE\",\n                \"fromMe\": false,\n                \"remoteJid\": \"5491169701682@s.whatsapp.net\"\n              },\n              \"source\": \"android\",\n              \"status\": \"DELIVERY_ACK\",\n              \"message\": {\n                \"conversation\": \"Sim\",\n                \"messageContextInfo\": {\n                  \"messageSecret\": \"RdahuRio1gbaHLsCeV24k8yFFyJWGpAJ5zHYRc2QysU=\",\n                  \"deviceListMetadata\": {\n                    \"recipientKeyHash\": \"KgcEIs2I9kXQgQ==\",\n                    \"recipientTimestamp\": \"1745501413\"\n                  },\n                  \"deviceListMetadataVersion\": 2\n                }\n              },\n              \"pushName\": \"Luciano\",\n              \"instanceId\": \"317a031e-567d-4c2e-9bc4-146616fe4db7\",\n              \"messageType\": \"conversation\",\n              \"messageTimestamp\": 1745501855\n            },\n            \"event\": \"messages.upsert\",\n            \"apikey\": \"59BA76B6BD78-403B-A0CC-8735B6A7ED3A\",\n            \"sender\": \"553191282843@s.whatsapp.net\",\n            \"instance\": \"kore\",\n            \"date_time\": \"2025-04-24T10:37:35.514Z\",\n            \"server_url\": \"http://localhost:8080\",\n            \"destination\": \"https://engaging-seahorse-19.rshare.io/webhook/evolutionAPIKORE\"\n          },\n          \"query\": {},\n          \"params\": {},\n          \"headers\": {\n            \"host\": \"host.docker.internal:5678\",\n            \"x-scheme\": \"https\",\n            \"forwarded\": \"by=_exposr;for=179.0.72.34;host=engaging-seahorse-19.rshare.io;proto=https\",\n            \"x-real-ip\": \"179.0.72.34\",\n            \"connection\": \"keep-alive\",\n            \"exposr-via\": \"b9e7ef031eb8fe005896193e59b1d6f6d8743b1e\",\n            \"user-agent\": \"axios/1.7.9\",\n            \"content-type\": \"application/json\",\n            \"x-request-id\": \"91360975101096aa10d12cb5b8925b55\",\n            \"content-length\": \"821\",\n            \"accept-encoding\": \"gzip, compress, deflate, br\",\n            \"x-forwarded-for\": \"179.0.72.34\",\n            \"x-forwarded-host\": \"engaging-seahorse-19.rshare.io\",\n            \"x-forwarded-port\": \"443\",\n            \"x-forwarded-proto\": \"https\",\n            \"x-forwarded-scheme\": \"https\"\n          },\n          \"webhookUrl\": \"https://engaging-seahorse-19.rshare.io/webhook/evolutionAPIKORE\",\n          \"executionMode\": \"production\"\n        }\n      }\n    ],\n    \"Gatilho diário\": [\n      {\n        \"json\": {\n          \"Hour\": \"10\",\n          \"Year\": \"2025\",\n          \"Month\": \"April\",\n          \"Minute\": \"13\",\n          \"Second\": \"11\",\n          \"Timezone\": \"America/New_York (UTC-04:00)\",\n          \"timestamp\": \"2025-04-24T10:13:11.035-04:00\",\n          \"Day of week\": \"Thursday\",\n          \"Day of month\": \"24\",\n          \"Readable date\": \"April 24th 2025, 10:13:11 am\",\n          \"Readable time\": \"10:13:11 am\"\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"3044ad5c-d14e-4562-a454-0ad87f26dc68\",\n  \"connections\": {\n    \"OpenAI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Assistente Clínica\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Switch\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Assistente Clínica\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"OpenAI1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Evolution API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        []\n      ]\n    },\n    \"OpenAI1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Evolution API2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI Agent2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Assistente Clínica\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MCP GMAIL\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Assistente de confirmação\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"CallToHuman\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Assistente Clínica\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Switch\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Tasks\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Assistente clinica interno\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MCP CALENDAR\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Assistente de confirmação\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Evolution API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert to File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Gatilho diário\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Assistente de confirmação\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Assistente Clínica\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Assistente clinica interno\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model2\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Assistente de confirmação\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Assistente Clínica\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MCP Google Calendar\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Assistente clinica interno\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MCP Google Calendar2\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Assistente Clínica\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Postgres Chat Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Assistente clinica interno\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Postgres Chat Memory1\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Assistente Clínica\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenRouter Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenRouter Chat Model2\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent2\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receber Mensagem Telegram\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Assistente clinica interno\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Assistente clinica interno\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Telegram\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Assistente de confirmação\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"REMINDER\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Enviar alerta de cancelamento\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Assistente Clínica\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}