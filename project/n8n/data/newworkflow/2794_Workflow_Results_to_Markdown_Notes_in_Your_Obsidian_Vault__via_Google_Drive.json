{
  "url": "https://n8n.io/workflows/2794-workflow-results-to-markdown-notes-in-your-obsidian-vault-via-google-drive/",
  "title": "Workflow Results to Markdown Notes in Your Obsidian Vault, via Google Drive",
  "author": "Obsidi8n",
  "publish_date": "Last update 4 months ago",
  "publish_date_absolute": "2025-01-26",
  "categories": [
    {
      "name": "Other"
    }
  ],
  "workflow_json": "{\"id\":\"3wbxkdT6hilhq0Na\",\"meta\":{\"instanceId\":\"d47f3738b860eed937a1b18d7345fa2c65cf4b4957554e29477cb064a7039870\"},\"name\":\"Workflow Results to Markdown Notes in Your Obsidian Vault, via Google Drive\",\"tags\":[],\"nodes\":[{\"id\":\"be787ece-4118-4063-98b0-41672dd570c0\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,-480],\"parameters\":{\"width\":440,\"height\":680,\"content\":\"## Connect folder to Obsidian Vault \\n**Setup Instructions:**\\n- Create a folder in your Google Drive that syncs with your desktop.\\n- Configure the Google Drive node as follows:\\n   - Assign the newly created folder as the parent-folder.\\n   - Specify the filename, appending .md (e.g., `{{ $json.title }}.md`).\\n   - Add Markdown content, including optional YAML Frontmatter, in the File Content field.\\n- Establish a Symlink between the Google Drive folder and a new folder in your Obsidian Vault.\"},\"typeVersion\":1},{\"id\":\"a30f3fdc-95a1-44ff-844a-58353dc7e177\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-800,-480],\"parameters\":{\"width\":440,\"height\":680,\"content\":\"## Workflow results to Obsidian Vault \\nThis template automatically creates and updates notes in your Obsidian Vault in real-time from n8n workflow results. Markdown files and attachments saved in Google Drive instantly appear in your Obsidian Vault.\\n\\n**Send the output of any workflow to the Execute Workflow Trigger beow**\"},\"typeVersion\":1},{\"id\":\"d9527913-dad1-4abc-8c86-8c76f53dd513\",\"name\":\"Save Markdown file\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[740,0],\"parameters\":{\"name\":\"={{ $json.title }}.md\",\"content\":\"=---\\n{{ $json.frontmatter }}\\n---\\n{{ $json.content }}\",\"driveId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"My Drive\",\"cachedResultUrl\":\"https://drive.google.com/drive/my-drive\",\"cachedResultName\":\"My Drive\"},\"options\":{},\"folderId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"15dvUtfSjaCCXmnOVeIUfeyRd_raI3PnQ\",\"cachedResultUrl\":\"https://drive.google.com/drive/folders/15dvUtfSjaCCXmnOVeIUfeyRd_raI3PnQ\",\"cachedResultName\":\"clippings-attachments\"},\"operation\":\"createFromText\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"Vpmg4nRArCy8DHiE\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"6484937e-17fd-444c-916b-1527382927d4\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1020,-380],\"parameters\":{\"color\":3,\"width\":460,\"height\":540,\"content\":\"## Create Symlink\\nCreate a symlink to integrate your Google Drive Desktop folder with your Obsidian Vault, ensuring that workflow-generated notes stored in Google Drive instantly appear and update in Obsidian.\\n\\n- **Open an Administrator Command Prompt:**\\nPress `Win + S`, type `cmd`, right-click on Command Prompt, and select `Run as Administrator`.\\n\\n- **Get Folder Paths:**\\nIdentify the source path: This is the existing Google Drive folder you want to link to.\\nDecide on the target path: This is the folder in your Obsidian Vault where the symlink will be created.\\nEnsure the Target Path Does Not Already Exist\\n\\n- **Run the mklink Command:**\\nUse the following syntax to create a directory symbolic link:\\n`mklink /D \\\"Target Path\\\" \\\"Source Path\\\"`\\nThe target path is the location in your Vault where the symlink will be created. The source path is the Google Drive folder.\\n\\n- **Example Command:**\\n`mklink /D \\\"C:\\\\Users\\\\YourName\\\\Vault\\\\OtherFolder\\\" \\\"C:\\\\Users\\\\YourName\\\\Google Drive\\\\MyFolder\\\"`\"},\"typeVersion\":1},{\"id\":\"fe21a7c2-e8db-46be-87e7-63888bf6e9e7\",\"name\":\"Receive results from any workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[-660,0],\"parameters\":{},\"typeVersion\":1},{\"id\":\"8f2399ba-0bda-4a2e-b773-7e28df16e7c2\",\"name\":\"If the input has binary attachment\",\"type\":\"n8n-nodes-base.if\",\"position\":[20,-160],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"9f56b367-2313-4a92-9572-b2d2687aba71\",\"operator\":{\"type\":\"string\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{$json[\\\"binary\\\"]}}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"d7cae1d6-5bfe-4e69-8257-0f7947b51c96\",\"name\":\"Write Zettlekasten note from input1\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[-280,240],\"parameters\":{\"text\":\"={{ JSON.stringify($json) }}\",\"options\":{\"systemMessage\":\"You are an expert knowledge management assistant creating a Zettlekasten note from raw input data. Follow these precise steps:\\n\\n1. Extract key insights and meaningful connections from the provided JSON input.\\n\\n2. Structure the note using these Zettlekasten principles:\\n- Create a clear, atomic central idea\\n- Use precise, concise language\\n- Link potential connections to other knowledge domains\\n- Ensure the note can stand alone as a meaningful knowledge unit\\n\\n3. Note format:\\n- Unique ID: Generate a unique identifier \\n- Title: Concise, descriptive headline capturing core insight\\n- Content: Synthesized information with clear reasoning\\n- Tags: Relevant conceptual tags for future retrieval\\n- References: Source of original data (optional)\\n\\n4. Prioritize intellectual clarity, semantic depth, and potential for future knowledge expansion.\\n\\nRespond ONLY with the completed Zettlekasten note in JSON format. Do not include any additional commentary or explanation.\"},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.7},{\"id\":\"303d6633-8e98-4fbc-8ee1-9f1075bcaa3e\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[-100,420],\"parameters\":{\"schemaType\":\"manual\",\"inputSchema\":\"{\\n  \\\"title\\\": \\\"Concise, Descriptive Title\\\",\\n  \\\"content\\\": \\\"Synthesized insights and key information\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"62800f09-8659-47b8-9a85-7d3d2c07ec1a\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-300,420],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"q8L9oWVM7QyzYEE5\",\"name\":\"OpenAi account\"}},\"typeVersion\":1},{\"id\":\"df11dfcb-fb38-4796-9b28-eb1876f68261\",\"name\":\"Restructure JSON\",\"type\":\"n8n-nodes-base.set\",\"position\":[400,240],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"c9061623-d0d0-4b63-a166-4766d88992aa\",\"name\":\"title\",\"type\":\"string\",\"value\":\"={{ $('Write Zettlekasten note from input1').item.json.output.title }}\"},{\"id\":\"9f870307-3cbf-41b3-ba69-309610b2d020\",\"name\":\"content\",\"type\":\"string\",\"value\":\"={{ $('Write Zettlekasten note from input1').item.json.output.content }}\"},{\"id\":\"1f40b120-00e4-479f-85b0-3fd903e629cb\",\"name\":\"frontmatter\",\"type\":\"string\",\"value\":\"={{ $json.output.frontmatter }}\"},{\"id\":\"5b845683-5a25-486b-92b0-98990fcbf7af\",\"name\":\"references\",\"type\":\"string\",\"value\":\"={{ $('Write Zettlekasten note from input1').item.json.output.references }}\"}]}},\"typeVersion\":3.4},{\"id\":\"2a701cf8-e59d-47ae-83c6-9ac7148bd2c8\",\"name\":\"Structured Output Parser1\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[240,420],\"parameters\":{\"jsonSchemaExample\":\"{\\n\\t\\\"frontmatter\\\": \\\"frontmatter here\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"1e4da42e-e945-4be8-88ac-2579857ff3fa\",\"name\":\"OpenAI Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[60,420],\"parameters\":{\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"q8L9oWVM7QyzYEE5\",\"name\":\"OpenAi account\"}},\"typeVersion\":1},{\"id\":\"af5494d8-a53f-48b1-b939-210c882485be\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-340,100],\"parameters\":{\"color\":4,\"width\":880,\"height\":460,\"content\":\"## Optional - Use AI Agents for Note Composition\\nInstead of directly using JSON parameters for the note's title, YAML frontmatter, and content, you can utilize AI agents to compose these elements. This approach involves inserting the AI-assisted workflow between the webhook and the Google Drive note, instead of the direct connection.\\n\"},\"typeVersion\":1},{\"id\":\"5d184ea4-88d0-4658-ab94-55246f3507fc\",\"name\":\"Write YAML Frontmatter\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[60,240],\"parameters\":{\"text\":\"={{ $json.output.content }}\",\"options\":{\"systemMessage\":\"=Generate comprehensive YAML frontmatter for an Obsidian note, focusing on metadata extraction and organization.\\n\\nOutput Format:\\n```yaml\\ntitle: \\\"{Extract a clear, concise title from input data}\\\"\\ndate: {{ $now.toFormat('yyyy-MM-dd') }}\\n\\ntags:\\n - {Derive 3-4 most relevant conceptual tags}\\naliases:\\n - {Alternative titles or key phrases}\\nstatus: \\\"draft\\\"\\nsource: \\\"{Infer original data source if possible}\\\"\"},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.7},{\"id\":\"d2b291be-97af-4bcb-8cc6-b21439bdcfb9\",\"name\":\"Save attachment\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[740,-180],\"parameters\":{\"name\":\"=\",\"driveId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"My Drive\",\"cachedResultUrl\":\"https://drive.google.com/drive/my-drive\",\"cachedResultName\":\"My Drive\"},\"options\":{},\"folderId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"15dvUtfSjaCCXmnOVeIUfeyRd_raI3PnQ\",\"cachedResultUrl\":\"https://drive.google.com/drive/folders/15dvUtfSjaCCXmnOVeIUfeyRd_raI3PnQ\",\"cachedResultName\":\"clippings-attachments\"},\"inputDataFieldName\":\"=data\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"Vpmg4nRArCy8DHiE\",\"name\":\"Google Drive account\"}},\"typeVersion\":3}],\"active\":false,\"pinData\":{\"Write Zettlekasten note from input1\":[{\"json\":{\"output\":{\"id\":\"note-0235\",\"tags\":[\"Freelance\",\"Employment Trends\",\"Media Industry\",\"Permanent Contracts\"],\"title\":\"Shift from Freelancers to Permanent Contracts in Media\",\"content\":\"Recent developments in the media sector indicate a notable trend where freelancers are increasingly being offered permanent contracts, reflecting a shift in employment practices within the industry. This transition aligns with new leadership changes at prominent companies such as WPG Uitgevers and Mybusinessmedia, which may further influence operational dynamics. Additionally, the appointment of Marc Veeningen as the new editor-in-chief of Talpa Networks signifies fresh perspectives in media management, potentially impacting staffing strategies. This trend not only addresses the job security concerns of freelancers but also suggests a recalibration of talent acquisition by media organizations. Such evolutions warrant closer examination of the balance between flexibility and stability in the workforce.\",\"references\":\"Source: https://www.villamedia.nl/artikel/transfer-thursday-freelancers-naar-vast-contract-een-mooie-klus-bij-de-volkskrant-en-een-nieuwe-directeur-bij-wpg\"}}}]},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"c87bbecc-453d-4b8c-8b86-dcf7e1d6907b\",\"connections\":{\"Restructure JSON\":{\"main\":[[]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Write Zettlekasten note from input1\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"OpenAI Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"Write YAML Frontmatter\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Save Markdown file\":{\"main\":[[]]},\"Write YAML Frontmatter\":{\"main\":[[{\"node\":\"Restructure JSON\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Write Zettlekasten note from input1\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Structured Output Parser1\":{\"ai_outputParser\":[[{\"node\":\"Write YAML Frontmatter\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Receive results from any workflow\":{\"main\":[[{\"node\":\"If the input has binary attachment\",\"type\":\"main\",\"index\":0},{\"node\":\"Save Markdown file\",\"type\":\"main\",\"index\":0}]]},\"If the input has binary attachment\":{\"main\":[[{\"node\":\"Save attachment\",\"type\":\"main\",\"index\":0}]]},\"Write Zettlekasten note from input1\":{\"main\":[[{\"node\":\"Write YAML Frontmatter\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow converts any n8n workflow outputs into Markdown notes that are accessible in your Obsidian Vault through Google Drive synchronization.\n\n**Setup Requirements**\n\n  1. Create a designated folder in Google Drive (Desktop).\n  2. Create a symbolic link between this folder and a new target folder in your Obsidian Vault.\n  3. Configure Google Drive n8n node settings.\n  4. Send the output of any workflow to the trigger, and the notes will appear in your Vault folder.\n\n\n\n**Optional Features**  \nYou can use AI agents to:\n\n  * Write notes in your preferred format (e.g., Zettelkasten).\n  * Compose YAML front matter.\n  * Suggest tags.\n\n\n\n**Use Cases**\n\n  * Convert RSS feed items to notes.\n  * Create notes from YouTube video transcripts.\n  * Transform tasks in Slack messages into Obsidian tasks.  \n(Requires setting up a corresponding workflow, e.g., RSS trigger, YouTube transcriber, or Slack bot.)\n\n\n",
  "crawled_at": "2025-05-26T02:01:07.206758",
  "readme_zh": "该工作流可将任意n8n工作流输出转换为Markdown笔记，通过Google Drive同步在Obsidian库中访问。\n\n**配置要求**\n\n1. 在Google Drive（桌面版）创建指定文件夹  \n2. 将该文件夹与Obsidian库中的目标文件夹建立符号链接  \n3. 配置Google Drive的n8n节点设置  \n4. 将任意工作流输出发送至触发器，笔记即会出现在库文件夹中  \n\n**可选功能**  \n通过AI代理可实现：  \n• 按偏好格式撰写笔记（如卡片盒笔记法）  \n• 编写YAML前置元数据  \n• 智能推荐标签  \n\n**应用场景**  \n• 将RSS订阅内容转为笔记  \n• 基于YouTube视频字幕生成笔记  \n• 将Slack消息中的任务转换为Obsidian任务  \n（需配置对应工作流，如RSS触发器、YouTube转录器或Slack机器人）",
  "title_zh": "将工作流结果通过Google Drive转换为Markdown笔记存入您的Obsidian知识库",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"3wbxkdT6hilhq0Na\",\n  \"meta\": {\n    \"instanceId\": \"d47f3738b860eed937a1b18d7345fa2c65cf4b4957554e29477cb064a7039870\"\n  },\n  \"name\": \"Workflow Results to Markdown Notes in Your Obsidian Vault, via Google Drive\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"be787ece-4118-4063-98b0-41672dd570c0\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        560,\n        -480\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 680,\n        \"content\": \"## 将文件夹连接至Obsidian知识库  \\n**设置步骤：**  \\n- 在Google Drive中创建一个能与桌面同步的文件夹。  \\n- 按如下方式配置Google Drive节点：  \\n   - 将新建的文件夹设为父级目录。  \\n   - 指定文件名并添加.md后缀（例如`{{ $json.title }}.md`）。  \\n   - 在\\\"文件内容\\\"字段中添加Markdown格式内容（可包含YAML Frontmatter元数据）。  \\n- 在Obsidian知识库中新建文件夹，并与Google Drive文件夹建立符号链接。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a30f3fdc-95a1-44ff-844a-58353dc7e177\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -800,\n        -480\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 680,\n        \"content\": \"## 工作流结果同步至Obsidian知识库  \\n此模板可将n8n工作流运行结果实时自动创建并更新至您的Obsidian知识库。保存在Google Drive中的Markdown文件及附件将即时出现在您的Obsidian知识库中。  \\n\\n**将任意工作流输出发送至下方的\\\"执行工作流触发器\\\"**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d9527913-dad1-4abc-8c86-8c76f53dd513\",\n      \"name\": \"Save Markdown file\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        740,\n        0\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $json.title }}.md\",\n        \"content\": \"=---\\n{{ $json.frontmatter }}\\n---\\n{{ $json.content }}\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/my-drive\",\n          \"cachedResultName\": \"My Drive\"\n        },\n        \"options\": {},\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"15dvUtfSjaCCXmnOVeIUfeyRd_raI3PnQ\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/folders/15dvUtfSjaCCXmnOVeIUfeyRd_raI3PnQ\",\n          \"cachedResultName\": \"clippings-attachments\"\n        },\n        \"operation\": \"createFromText\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"Vpmg4nRArCy8DHiE\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"6484937e-17fd-444c-916b-1527382927d4\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1020,\n        -380\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 460,\n        \"height\": 540,\n        \"content\": \"## 创建符号链接\\n通过创建符号链接将Google Drive桌面文件夹与Obsidian库集成，确保存储在Google Drive中的工作流生成笔记能即时显示并在Obsidian中同步更新。\\n\\n- **以管理员身份打开命令提示符：**\\n按下`Win + S`，输入`cmd`，右键点击命令提示符，选择`以管理员身份运行`。\\n\\n- **获取文件夹路径：**\\n确定源路径：即您希望链接的现有Google Drive文件夹位置。\\n指定目标路径：即Obsidian库中待创建符号链接的文件夹位置。\\n请确保目标路径尚未存在\\n\\n- **执行mklink命令：**\\n使用以下语法创建目录符号链接：\\n`mklink /D \\\"目标路径\\\" \\\"源路径\\\"`\\n目标路径是库中创建符号链接的位置，源路径为Google Drive文件夹\\n\\n- **示例命令：**\\n`mklink /D \\\"C:\\\\Users\\\\您的用户名\\\\Vault\\\\OtherFolder\\\" \\\"C:\\\\Users\\\\您的用户名\\\\Google Drive\\\\MyFolder\\\"`\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fe21a7c2-e8db-46be-87e7-63888bf6e9e7\",\n      \"name\": \"Receive results from any workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        -660,\n        0\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8f2399ba-0bda-4a2e-b773-7e28df16e7c2\",\n      \"name\": \"If the input has binary attachment\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        20,\n        -160\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"9f56b367-2313-4a92-9572-b2d2687aba71\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{$json[\\\"binary\\\"]}}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"d7cae1d6-5bfe-4e69-8257-0f7947b51c96\",\n      \"name\": \"Write Zettlekasten note from input1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        -280,\n        240\n      ],\n      \"parameters\": {\n        \"text\": \"={{ JSON.stringify($json) }}\",\n        \"options\": {\n          \"systemMessage\": \"You are an expert knowledge management assistant creating a Zettlekasten note from raw input data. Follow these precise steps:\\n\\n1. Extract key insights and meaningful connections from the provided JSON input.\\n\\n2. Structure the note using these Zettlekasten principles:\\n- Create a clear, atomic central idea\\n- Use precise, concise language\\n- Link potential connections to other knowledge domains\\n- Ensure the note can stand alone as a meaningful knowledge unit\\n\\n3. Note format:\\n- Unique ID: Generate a unique identifier \\n- Title: Concise, descriptive headline capturing core insight\\n- Content: Synthesized information with clear reasoning\\n- Tags: Relevant conceptual tags for future retrieval\\n- References: Source of original data (optional)\\n\\n4. Prioritize intellectual clarity, semantic depth, and potential for future knowledge expansion.\\n\\nRespond ONLY with the completed Zettlekasten note in JSON format. Do not include any additional commentary or explanation.\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"303d6633-8e98-4fbc-8ee1-9f1075bcaa3e\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        -100,\n        420\n      ],\n      \"parameters\": {\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n  \\\"title\\\": \\\"Concise, Descriptive Title\\\",\\n  \\\"content\\\": \\\"Synthesized insights and key information\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"62800f09-8659-47b8-9a85-7d3d2c07ec1a\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -300,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"q8L9oWVM7QyzYEE5\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"df11dfcb-fb38-4796-9b28-eb1876f68261\",\n      \"name\": \"Restructure JSON\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        400,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c9061623-d0d0-4b63-a166-4766d88992aa\",\n              \"name\": \"title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Write Zettlekasten note from input1').item.json.output.title }}\"\n            },\n            {\n              \"id\": \"9f870307-3cbf-41b3-ba69-309610b2d020\",\n              \"name\": \"content\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Write Zettlekasten note from input1').item.json.output.content }}\"\n            },\n            {\n              \"id\": \"1f40b120-00e4-479f-85b0-3fd903e629cb\",\n              \"name\": \"frontmatter\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.frontmatter }}\"\n            },\n            {\n              \"id\": \"5b845683-5a25-486b-92b0-98990fcbf7af\",\n              \"name\": \"references\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Write Zettlekasten note from input1').item.json.output.references }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"2a701cf8-e59d-47ae-83c6-9ac7148bd2c8\",\n      \"name\": \"Structured Output Parser1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        240,\n        420\n      ],\n      \"parameters\": {\n        \"jsonSchemaExample\": \"{\\n\\t\\\"frontmatter\\\": \\\"frontmatter here\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"1e4da42e-e945-4be8-88ac-2579857ff3fa\",\n      \"name\": \"OpenAI Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        60,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"q8L9oWVM7QyzYEE5\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"af5494d8-a53f-48b1-b939-210c882485be\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -340,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 880,\n        \"height\": 460,\n        \"content\": \"## 可选方案 - 使用AI智能体撰写笔记\\n您无需直接使用JSON参数来定义笔记标题、YAML前置元数据和内容，而是可以通过AI智能体来构建这些元素。这种方法需要在Webhook和Google Drive笔记之间插入AI辅助工作流，而非直接建立连接。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5d184ea4-88d0-4658-ab94-55246f3507fc\",\n      \"name\": \"Write YAML Frontmatter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        60,\n        240\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.output.content }}\",\n        \"options\": {\n          \"systemMessage\": \"=Generate comprehensive YAML frontmatter for an Obsidian note, focusing on metadata extraction and organization.\\n\\nOutput Format:\\n```yaml\\ntitle: \\\"{Extract a clear, concise title from input data}\\\"\\ndate: {{ $now.toFormat('yyyy-MM-dd') }}\\n\\ntags:\\n - {Derive 3-4 most relevant conceptual tags}\\naliases:\\n - {Alternative titles or key phrases}\\nstatus: \\\"draft\\\"\\nsource: \\\"{Infer original data source if possible}\\\"\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"d2b291be-97af-4bcb-8cc6-b21439bdcfb9\",\n      \"name\": \"Save attachment\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        740,\n        -180\n      ],\n      \"parameters\": {\n        \"name\": \"=\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/my-drive\",\n          \"cachedResultName\": \"My Drive\"\n        },\n        \"options\": {},\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"15dvUtfSjaCCXmnOVeIUfeyRd_raI3PnQ\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/folders/15dvUtfSjaCCXmnOVeIUfeyRd_raI3PnQ\",\n          \"cachedResultName\": \"clippings-attachments\"\n        },\n        \"inputDataFieldName\": \"=data\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"Vpmg4nRArCy8DHiE\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {\n    \"Write Zettlekasten note from input1\": [\n      {\n        \"json\": {\n          \"output\": {\n            \"id\": \"note-0235\",\n            \"tags\": [\n              \"Freelance\",\n              \"Employment Trends\",\n              \"Media Industry\",\n              \"Permanent Contracts\"\n            ],\n            \"title\": \"Shift from Freelancers to Permanent Contracts in Media\",\n            \"content\": \"Recent developments in the media sector indicate a notable trend where freelancers are increasingly being offered permanent contracts, reflecting a shift in employment practices within the industry. This transition aligns with new leadership changes at prominent companies such as WPG Uitgevers and Mybusinessmedia, which may further influence operational dynamics. Additionally, the appointment of Marc Veeningen as the new editor-in-chief of Talpa Networks signifies fresh perspectives in media management, potentially impacting staffing strategies. This trend not only addresses the job security concerns of freelancers but also suggests a recalibration of talent acquisition by media organizations. Such evolutions warrant closer examination of the balance between flexibility and stability in the workforce.\",\n            \"references\": \"Source: https://www.villamedia.nl/artikel/transfer-thursday-freelancers-naar-vast-contract-een-mooie-klus-bij-de-volkskrant-en-een-nieuwe-directeur-bij-wpg\"\n          }\n        }\n      }\n    ]\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"c87bbecc-453d-4b8c-8b86-dcf7e1d6907b\",\n  \"connections\": {\n    \"Restructure JSON\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Write Zettlekasten note from input1\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Write YAML Frontmatter\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Save Markdown file\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Write YAML Frontmatter\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Restructure JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Write Zettlekasten note from input1\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser1\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Write YAML Frontmatter\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receive results from any workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If the input has binary attachment\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Save Markdown file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If the input has binary attachment\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save attachment\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Write Zettlekasten note from input1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Write YAML Frontmatter\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}