{
  "url": "https://n8n.io/workflows/2009-slack-webhook-verify-signature/",
  "title": "Slack Webhook - Verify Signature",
  "author": "Henri",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "SecOps"
    }
  ],
  "workflow_json": "{\"id\":\"84dT8cFL0FV8ZGPx\",\"meta\":{\"instanceId\":\"85d2d2ffc8886227640b031e8f18fdfe6c91f530d34ec1a8b1f13727419ae956\"},\"name\":\"Slack Webhook - Verify Signature\",\"tags\":[],\"nodes\":[{\"id\":\"b12fe8e7-45c4-4021-826e-3ae430e34001\",\"name\":\"Make Slack Verif Token\",\"type\":\"n8n-nodes-base.code\",\"position\":[900,400],\"parameters\":{\"jsCode\":\"function encodeFormData(data) {\\n  const encodedData = Object.keys(data)\\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\\n    .join('&')\\n    .replaceAll(\\\"%20\\\", \\\"+\\\") // Slack does not encode \\\"+\\\" signs\\n    .replaceAll(\\\"*\\\", \\\"%2A\\\") // Slack encodes \\\"*\\\" signs\\n    .replaceAll(\\\"~\\\", \\\"%7E\\\"); // Slack encodes \\\"~\\\" signs\\n    \\n  return encodedData;\\n}\\n\\nfunction buildSigBaseString(requestJson) {\\n  const version = \\\"v0\\\"; // Slack Webhook version (Always v0 for the moment)\\n  \\n  const timestamp = requestJson.headers[\\\"x-slack-request-timestamp\\\"];\\n  \\n  const body = requestJson.body;\\n  const encodedBody = encodeFormData(body);\\n  \\n  const sigBaseString = `${version}:${timestamp}:${encodedBody}`;\\n\\n  return sigBaseString;\\n}\\n\\nconst requestJson = $input.first().json;\\n\\nconst sigBaseString = buildSigBaseString(requestJson);\\n\\nconst requestSignature = requestJson.headers[\\\"x-slack-signature\\\"];\\n\\nconsole.log({\\n    sigBaseString,\\n    requestSignature\\n  });\\nreturn {\\n  json: {\\n    sigBaseString,\\n    requestSignature\\n  },\\n  pairedItem: 0\\n}\\n\\n\\n\"},\"typeVersion\":2},{\"id\":\"a91e2d8f-e907-439c-9fd3-cb75e957b059\",\"name\":\"Encode Secret String\",\"type\":\"n8n-nodes-base.crypto\",\"position\":[1120,400],\"parameters\":{\"type\":\"SHA256\",\"value\":\"={{ $json.sigBaseString }}\",\"action\":\"hmac\",\"dataPropertyName\":\"candidateSignature\"},\"typeVersion\":1},{\"id\":\"d79ccfe1-61cd-4da4-bfff-1e504627bb3d\",\"name\":\"IF\",\"type\":\"n8n-nodes-base.if\",\"position\":[1360,400],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $json.requestSignature }}\",\"value2\":\"=v0={{ $json.candidateSignature }}\"}]}},\"typeVersion\":1},{\"id\":\"cb2b9908-c226-438b-adb2-7c1ec852e007\",\"name\":\"Stop and Error\",\"type\":\"n8n-nodes-base.stopAndError\",\"position\":[1580,580],\"parameters\":{\"errorMessage\":\"Could not verify Slack Webhook signature\"},\"typeVersion\":1},{\"id\":\"5ef4c06a-717b-4f90-83a7-06eda780a892\",\"name\":\"Execute Workflow Trigger\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[680,400],\"parameters\":{},\"typeVersion\":1},{\"id\":\"86b022fb-63fd-4ccf-952e-19ed0da54a5c\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[880,-420],\"parameters\":{\"color\":4,\"width\":554.4117841902089,\"height\":278.2403290971726,\"content\":\"## Slack Webhook - Verify Signature \\nWhen receiving a message from a Slack Webhook, it is much more secure to verify that the message comes from Slack and not from bots or unknown services.\\n\\nThis small template is designed to validate the received signature (See [this URL](https://api.slack.com/authentication/verifying-requests-from-slack)).\\n\\n### Colors\\n- **Blue** areas are **areas to edit**\\n- **Yellow** areas are **explanations**\"},\"typeVersion\":1},{\"id\":\"f5af4f44-1ea5-419b-a58b-f8f6839b6b05\",\"name\":\"Set Verified to True\",\"type\":\"n8n-nodes-base.set\",\"position\":[1580,220],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"signature_verified\",\"type\":\"booleanValue\"}]},\"include\":\"none\",\"options\":{}},\"typeVersion\":3.2},{\"id\":\"8a76dec8-7a2d-4cc9-82c9-002141e205ec\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1920,40],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combinationMode\":\"mergeByPosition\"},\"typeVersion\":2.1},{\"id\":\"0c8506bc-b114-4d25-8586-80549ae0026d\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1000,40],\"parameters\":{\"color\":6,\"width\":359.58396920054975,\"height\":548.3119898759418,\"content\":\"## TO EDIT \\nSet your Slack Signing Secret.\\nYou can obtain it by visiting your Slack App dashboard in the general tab: https://api.slack.com/apps/[SLACK_APP_ID]/general\\n\"},\"typeVersion\":1},{\"id\":\"20cca69c-9d00-4471-8845-2cb91458c23e\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1560,399],\"parameters\":{\"width\":300.4638046519632,\"height\":360.20237540316725,\"content\":\"## Error Output\\nIf the signature cannot be verified, an error will be raised. You can manage this scenario in your main workflow by either using an Error Workflow or by modifying your node settings and selecting appropriate actions in the event of an error.\\n\"},\"typeVersion\":1},{\"id\":\"55ede23b-acb4-43ea-ac32-c678dd48e056\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1880,-220],\"parameters\":{\"width\":300.4638046519632,\"height\":427.3843805720155,\"content\":\"## Success Output\\nIf the signature is successfully verified, we return a key `verified_signature` set to `true` along with the data from the Slack request itself.\\n\"},\"typeVersion\":1},{\"id\":\"22d44888-5af4-43b9-b514-ebfc9c61b07c\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,160],\"parameters\":{\"width\":300.4638046519632,\"height\":427.3843805720155,\"content\":\"## Input\\nThe input should be the received Slack request. Place this workflow directly after the Slack Webhook.\\n\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"f9e78d89-0da8-465e-aa47-5396d9ac4d48\",\"connections\":{\"IF\":{\"main\":[[{\"node\":\"Set Verified to True\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Stop and Error\",\"type\":\"main\",\"index\":0}]]},\"Encode Secret String\":{\"main\":[[{\"node\":\"IF\",\"type\":\"main\",\"index\":0}]]},\"Set Verified to True\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]},\"Make Slack Verif Token\":{\"main\":[[{\"node\":\"Encode Secret String\",\"type\":\"main\",\"index\":0}]]},\"Execute Workflow Trigger\":{\"main\":[[{\"node\":\"Make Slack Verif Token\",\"type\":\"main\",\"index\":0},{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Description\n\nThis template will help you verify that incoming calls from a Slack webhook actually come from Slack and not some unknown third-party services.  \nIt is mainly used to prevent attacks from malicious bots or individuals. This is a Sub-Workflow, so it should be used inside the main workflow that contains the webhook listening for Slack requests.\n\n## How to Use\n\n### What to Edit\n\nYou should set the Slack Signing Secret that you can find on your Slack App dashboard in the general tab. It should be located under the following URL:\n\n**[https://api.slack.com/apps/[SLACK_APP_ID]/general](https://api.slack.com/apps/%5BSLACK_APP_ID%5D/general)**\n\n### Input\n\nThe input should be the received Slack request. This workflow should then be placed directly after the Slack Webhook.\n\n### Outputs\n\n#### Success Output\n\nIf the signature was verified successfully, we return a key `verified_signature` set to `true` along with data from the Slack request itself.\n\n#### Error Output\n\nWhen the signature could not be verified, we raise an error. You can handle this case in your main workflow by using an Error Workflow or by changing your node settings and choosing some actions in case of an error.\n\n## Changelog\n\n### Version 1.0.1 (2023-12-11)\n\n  * Changed `replace` by `replaceAll` in JS code in case of several arguments.\n  * Added some custom replacements that `encodeURIComponent` does not take into account\n\n\n",
  "crawled_at": "2025-05-25T20:34:31.778495",
  "readme_zh": "## 描述\n\n此模板用于验证来自Slack webhook的来电是否确实源自Slack平台，而非未知第三方服务。  \n其主要功能是防范恶意机器人或个人的攻击行为。作为子工作流模板，需嵌入至包含监听Slack请求的webhook主工作流中使用。\n\n## 使用说明\n\n### 需修改内容\n\n您需要在Slack应用仪表板的\"General\"标签页中设置签名密钥，该密钥位于以下网址：\n\n**[https://api.slack.com/apps/[SLACK_APP_ID]/general](https://api.slack.com/apps/%5BSLACK_APP_ID%5D/general)**\n\n### 输入参数\n\n输入应为接收到的Slack请求数据。本工作流应直接配置在Slack Webhook触发节点之后。\n\n### 输出结果\n\n#### 成功输出\n\n当签名验证通过时，将返回包含`verified_signature: true`的键值对及Slack请求原始数据。\n\n#### 错误输出\n\n若签名验证失败，工作流将抛出错误。您可在主工作流中通过错误处理工作流进行捕获，或修改节点设置配置错误处理方案。\n\n## 更新日志\n\n### 版本1.0.1 (2023-12-11)\n\n  * JS代码中将`replace`方法替换为`replaceAll`以处理多参数场景\n  * 新增了`encodeURIComponent`未涵盖的特殊字符替换规则",
  "title_zh": "Slack Webhook - 验证签名",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"id\": \"84dT8cFL0FV8ZGPx\",\n  \"meta\": {\n    \"instanceId\": \"85d2d2ffc8886227640b031e8f18fdfe6c91f530d34ec1a8b1f13727419ae956\"\n  },\n  \"name\": \"Slack Webhook - Verify Signature\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b12fe8e7-45c4-4021-826e-3ae430e34001\",\n      \"name\": \"Make Slack Verif Token\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        900,\n        400\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function encodeFormData(data) {\\n  const encodedData = Object.keys(data)\\n    .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\\n    .join('&')\\n    .replaceAll(\\\"%20\\\", \\\"+\\\") // Slack does not encode \\\"+\\\" signs\\n    .replaceAll(\\\"*\\\", \\\"%2A\\\") // Slack encodes \\\"*\\\" signs\\n    .replaceAll(\\\"~\\\", \\\"%7E\\\"); // Slack encodes \\\"~\\\" signs\\n    \\n  return encodedData;\\n}\\n\\nfunction buildSigBaseString(requestJson) {\\n  const version = \\\"v0\\\"; // Slack Webhook version (Always v0 for the moment)\\n  \\n  const timestamp = requestJson.headers[\\\"x-slack-request-timestamp\\\"];\\n  \\n  const body = requestJson.body;\\n  const encodedBody = encodeFormData(body);\\n  \\n  const sigBaseString = `${version}:${timestamp}:${encodedBody}`;\\n\\n  return sigBaseString;\\n}\\n\\nconst requestJson = $input.first().json;\\n\\nconst sigBaseString = buildSigBaseString(requestJson);\\n\\nconst requestSignature = requestJson.headers[\\\"x-slack-signature\\\"];\\n\\nconsole.log({\\n    sigBaseString,\\n    requestSignature\\n  });\\nreturn {\\n  json: {\\n    sigBaseString,\\n    requestSignature\\n  },\\n  pairedItem: 0\\n}\\n\\n\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"a91e2d8f-e907-439c-9fd3-cb75e957b059\",\n      \"name\": \"Encode Secret String\",\n      \"type\": \"n8n-nodes-base.crypto\",\n      \"position\": [\n        1120,\n        400\n      ],\n      \"parameters\": {\n        \"type\": \"SHA256\",\n        \"value\": \"={{ $json.sigBaseString }}\",\n        \"action\": \"hmac\",\n        \"dataPropertyName\": \"candidateSignature\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d79ccfe1-61cd-4da4-bfff-1e504627bb3d\",\n      \"name\": \"IF\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1360,\n        400\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.requestSignature }}\",\n              \"value2\": \"=v0={{ $json.candidateSignature }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cb2b9908-c226-438b-adb2-7c1ec852e007\",\n      \"name\": \"Stop and Error\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        1580,\n        580\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"Could not verify Slack Webhook signature\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5ef4c06a-717b-4f90-83a7-06eda780a892\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        680,\n        400\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"86b022fb-63fd-4ccf-952e-19ed0da54a5c\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        880,\n        -420\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 554.4117841902089,\n        \"height\": 278.2403290971726,\n        \"content\": \"## Slack Webhook - 验证签名  \\n当接收到来自Slack Webhook的消息时，验证该消息确实来自Slack而非机器人或未知服务，能大幅提升安全性。  \\n\\n此小型模板专用于验证接收到的签名（参见[此链接](https://api.slack.com/authentication/verifying-requests-from-slack)）。  \\n\\n### 颜色标注说明  \\n- **蓝色**区域为**需编辑内容**  \\n- **黄色**区域为**解释说明**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f5af4f44-1ea5-419b-a58b-f8f6839b6b05\",\n      \"name\": \"Set Verified to True\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1580,\n        220\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"signature_verified\",\n              \"type\": \"booleanValue\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"8a76dec8-7a2d-4cc9-82c9-002141e205ec\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1920,\n        40\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"mergeByPosition\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"0c8506bc-b114-4d25-8586-80549ae0026d\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1000,\n        40\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 359.58396920054975,\n        \"height\": 548.3119898759418,\n        \"content\": \"## 待编辑  \\n设置您的 Slack 签名密钥。  \\n您可以通过访问 Slack 应用仪表板的“常规”选项卡获取该密钥：https://api.slack.com/apps/[SLACK_APP_ID]/general\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"20cca69c-9d00-4471-8845-2cb91458c23e\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1560,\n        399\n      ],\n      \"parameters\": {\n        \"width\": 300.4638046519632,\n        \"height\": 360.20237540316725,\n        \"content\": \"## 错误输出\\n若签名验证失败，系统将抛出错误。您可通过两种方式在主工作流中处理此情况：使用错误处理工作流，或修改节点设置并在错误发生时选择相应操作。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"55ede23b-acb4-43ea-ac32-c678dd48e056\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1880,\n        -220\n      ],\n      \"parameters\": {\n        \"width\": 300.4638046519632,\n        \"height\": 427.3843805720155,\n        \"content\": \"## 成功输出\\n若签名验证成功，我们将返回一个键为`verified_signature`且值为`true`的标识，同时附上Slack请求本身的原始数据。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"22d44888-5af4-43b9-b514-ebfc9c61b07c\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        560,\n        160\n      ],\n      \"parameters\": {\n        \"width\": 300.4638046519632,\n        \"height\": 427.3843805720155,\n        \"content\": \"## 输入\\n输入应为接收到的Slack请求。将此工作流直接放置在Slack Webhook之后。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"f9e78d89-0da8-465e-aa47-5396d9ac4d48\",\n  \"connections\": {\n    \"IF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Verified to True\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Stop and Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Encode Secret String\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Verified to True\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Make Slack Verif Token\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Encode Secret String\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Make Slack Verif Token\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}