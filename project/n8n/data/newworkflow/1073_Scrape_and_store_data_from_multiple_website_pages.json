{
  "url": "https://n8n.io/workflows/1073-scrape-and-store-data-from-multiple-website-pages/",
  "title": "Scrape and store data from multiple website pages",
  "author": "Miquel Colomer",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "Engineering"
    },
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "{\"id\":\"14\",\"name\":\"extract_swifts\",\"nodes\":[{\"name\":\"On clicking 'execute'\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-140,820],\"parameters\":{},\"typeVersion\":1},{\"name\":\"HTTP Request\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[320,820],\"parameters\":{\"url\":\"https://www.theswiftcodes.com/browse-by-country/\",\"options\":{},\"responseFormat\":\"string\"},\"typeVersion\":1},{\"name\":\"HTML Extract\",\"type\":\"n8n-nodes-base.htmlExtract\",\"position\":[510,820],\"parameters\":{\"options\":{},\"extractionValues\":{\"values\":[{\"key\":\"countries\",\"attribute\":\"href\",\"cssSelector\":\"ol > li > a\",\"returnArray\":true,\"returnValue\":\"attribute\"}]}},\"typeVersion\":1},{\"name\":\"SplitInBatches\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[910,820],\"parameters\":{\"options\":{\"reset\":false},\"batchSize\":1},\"typeVersion\":1},{\"name\":\"HTTP Request1\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2250,740],\"parameters\":{\"url\":\"={{$node[\\\"Set\\\"].json[\\\"url\\\"]}}\",\"options\":{},\"responseFormat\":\"file\"},\"typeVersion\":1},{\"name\":\"HTML Extract1\",\"type\":\"n8n-nodes-base.htmlExtract\",\"position\":[2750,590],\"parameters\":{\"options\":{},\"sourceData\":\"binary\",\"extractionValues\":{\"values\":[{\"key\":\"next_button\",\"attribute\":\"href\",\"cssSelector\":\"span.next > a\",\"returnValue\":\"attribute\"},{\"key\":\"names\",\"cssSelector\":\"td.table-name\",\"returnArray\":true},{\"key\":\"swifts\",\"cssSelector\":\"td.table-swift\",\"returnArray\":true},{\"key\":\"cities\",\"cssSelector\":\"td.table-city\",\"returnArray\":true},{\"key\":\"branches\",\"cssSelector\":\"td.table-branch\",\"returnArray\":true}]}},\"typeVersion\":1},{\"name\":\"MongoDB1\",\"type\":\"n8n-nodes-base.mongoDb\",\"position\":[3280,590],\"parameters\":{\"fields\":\"iso_code,country,page,name,branch,city,swift_code,createdAt,updatedAt\",\"options\":{\"dateFields\":\"createdAt,updatedAt\"},\"operation\":\"insert\",\"collection\":\"swifts.meetup\"},\"credentials\":{\"mongoDb\":\"db-mongo\"},\"typeVersion\":1},{\"name\":\"uProc\",\"type\":\"n8n-nodes-base.uproc\",\"position\":[1100,820],\"parameters\":{\"tool\":\"getCountryNormalized\",\"group\":\"geographic\",\"country\":\"={{$node[\\\"SplitInBatches\\\"].json[\\\"country\\\"].replace(/[\\\\/0-9]/g, \\\"\\\")}}\",\"additionalOptions\":{}},\"credentials\":{\"uprocApi\":\"uproc-miquel\"},\"typeVersion\":1},{\"name\":\"Prepare Documents\",\"type\":\"n8n-nodes-base.function\",\"position\":[2930,590],\"parameters\":{\"functionCode\":\"var newItems = [];\\n\\nfor (i = 0; i < items[0].json.swifts.length; i++) {\\n  var item = {\\n    iso_code: $node['uProc'].json.message.code,\\n    country: $node['SplitInBatches'].json.country.replace(/[-\\\\/0-9]/g, \\\"\\\"),\\n    page: $node['Set Page to Scrape'].json.page,\\n    name: items[0].json.names[i],\\n    city: items[0].json.cities[i],\\n    branch: items[0].json.branches[i],\\n    swift_code: items[0].json.swifts[i],\\n    createdAt: new Date(),\\n    updatedAt: new Date()\\n  }\\n  newItems.push({json: item});\\n}\\n\\nreturn newItems;\\n\\n\"},\"typeVersion\":1},{\"name\":\"More Countries\",\"type\":\"n8n-nodes-base.if\",\"position\":[2810,1100],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{$node[\\\"SplitInBatches\\\"].context[\\\"noItemsLeft\\\"] + \\\"\\\"}}\",\"value2\":\"true\"}]}},\"typeVersion\":1},{\"name\":\"Set Page to Scrape\",\"type\":\"n8n-nodes-base.functionItem\",\"position\":[1290,680],\"parameters\":{\"functionCode\":\"const staticData = getWorkflowStaticData('global');\\n\\nitem.page = \\\"\\\";\\nif (staticData.page && staticData.page.length) {\\n  item.page = staticData.page;\\n} else {\\n  item.page = $node['SplitInBatches'].json.country;\\n}\\nreturn item;\\n\"},\"typeVersion\":1},{\"name\":\"More Pages\",\"type\":\"n8n-nodes-base.if\",\"position\":[3070,1020],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{$json[\\\"more_pages\\\"] + \\\"\\\"}}\",\"value2\":\"true\"}]}},\"typeVersion\":1},{\"name\":\"Set More Pages\",\"type\":\"n8n-nodes-base.function\",\"position\":[3470,590],\"parameters\":{\"functionCode\":\"var next_page = $node['HTML Extract1'].json.next_button && $node['HTML Extract1'].json.next_button.length ? $node['HTML Extract1'].json.next_button : \\\"\\\";\\nvar more_pages = next_page.length > 0;\\nconst staticData = getWorkflowStaticData('global');\\n\\n//all current items are after date: needs pagination\\nif (more_pages) {\\n  staticData.page = next_page;\\n} else {\\n  //don't check more items in previous pages;\\n  delete staticData.page;\\n}\\n\\nreturn [\\n  {\\n    json: {\\n      more_pages: more_pages\\n    }\\n  }\\n];\\n\"},\"typeVersion\":1},{\"name\":\"Set\",\"type\":\"n8n-nodes-base.set\",\"position\":[1440,680],\"parameters\":{\"values\":{\"string\":[{\"name\":\"url\",\"value\":\"=https://www.theswiftcodes.com{{$node[\\\"Set Page to Scrape\\\"].json[\\\"page\\\"]}}\"}]},\"options\":{}},\"typeVersion\":1},{\"name\":\"Generate filename\",\"type\":\"n8n-nodes-base.functionItem\",\"position\":[1600,610],\"parameters\":{\"functionCode\":\"var generateNameFromUrl = function(url){\\n    return url.replace(/[^a-z0-9]/gi, \\\"_\\\");\\n}\\n\\nitem.file = generateNameFromUrl(item.url) + \\\".html\\\"\\nreturn item;\"},\"typeVersion\":1},{\"name\":\"Read Binary File\",\"type\":\"n8n-nodes-base.readBinaryFile\",\"position\":[1770,610],\"parameters\":{\"filePath\":\"=/home/node/.cache/scrapper/{{$json[\\\"file\\\"]}}\"},\"typeVersion\":1,\"continueOnFail\":true,\"alwaysOutputData\":true},{\"name\":\"File exists?\",\"type\":\"n8n-nodes-base.if\",\"position\":[1950,610],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{$node[\\\"Read Binary File\\\"].binary.data.mimeType}}\",\"value2\":\"text/html\"}]}},\"typeVersion\":1},{\"name\":\"Write Binary File\",\"type\":\"n8n-nodes-base.writeBinaryFile\",\"position\":[2400,740],\"parameters\":{\"fileName\":\"=/home/node/.cache/scrapper/{{$node[\\\"Generate filename\\\"].json[\\\"file\\\"]}}\",\"dataPropertyName\":\"=data\"},\"typeVersion\":1},{\"name\":\"Read Binary File1\",\"type\":\"n8n-nodes-base.readBinaryFile\",\"position\":[2570,590],\"parameters\":{\"filePath\":\"=/home/node/.cache/scrapper/{{$json[\\\"file\\\"]}}\"},\"typeVersion\":1,\"continueOnFail\":true,\"alwaysOutputData\":true},{\"name\":\"Wait\",\"type\":\"n8n-nodes-base.function\",\"position\":[2090,740],\"parameters\":{\"functionCode\":\"const waitTimeSeconds = 1;\\n\\nreturn new Promise((resolve) => {\\n  setTimeout(() => {\\n    resolve([]);\\n  }, waitTimeSeconds * 1000);\\n});\\n\"},\"typeVersion\":1,\"continueOnFail\":true,\"alwaysOutputData\":true},{\"name\":\"Prepare countries\",\"type\":\"n8n-nodes-base.function\",\"position\":[700,820],\"parameters\":{\"functionCode\":\"return items[0].json.countries.map(function(country) {\\n  return {\\n  json: {country: country}\\n  }\\n});\"},\"typeVersion\":1},{\"name\":\"Create Directory\",\"type\":\"n8n-nodes-base.executeCommand\",\"position\":[70,820],\"parameters\":{\"command\":\"mkdir -p  /home/node/.cache/scrapper/\"},\"typeVersion\":1,\"continueOnFail\":true},{\"name\":\"MongoDB\",\"type\":\"n8n-nodes-base.mongoDb\",\"disabled\":true,\"position\":[3100,520],\"parameters\":{\"query\":\"={\\\"swift_code\\\": \\\"{{$json[\\\"swift_code\\\"]}}\\\"}\",\"options\":{},\"collection\":\"swifts.meetup\"},\"credentials\":{\"mongoDb\":\"db-mongo\"},\"executeOnce\":false,\"typeVersion\":1,\"alwaysOutputData\":true}],\"active\":false,\"settings\":{},\"connections\":{\"Set\":{\"main\":[[{\"node\":\"Generate filename\",\"type\":\"main\",\"index\":0}]]},\"Wait\":{\"main\":[[{\"node\":\"HTTP Request1\",\"type\":\"main\",\"index\":0}]]},\"uProc\":{\"main\":[[{\"node\":\"Set Page to Scrape\",\"type\":\"main\",\"index\":0}]]},\"MongoDB\":{\"main\":[[]]},\"MongoDB1\":{\"main\":[[{\"node\":\"Set More Pages\",\"type\":\"main\",\"index\":0}]]},\"More Pages\":{\"main\":[[{\"node\":\"Set Page to Scrape\",\"type\":\"main\",\"index\":0}],[{\"node\":\"More Countries\",\"type\":\"main\",\"index\":0}]]},\"File exists?\":{\"main\":[[{\"node\":\"Read Binary File1\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Wait\",\"type\":\"main\",\"index\":0}]]},\"HTML Extract\":{\"main\":[[{\"node\":\"Prepare countries\",\"type\":\"main\",\"index\":0}]]},\"HTTP Request\":{\"main\":[[{\"node\":\"HTML Extract\",\"type\":\"main\",\"index\":0}]]},\"HTML Extract1\":{\"main\":[[{\"node\":\"Prepare Documents\",\"type\":\"main\",\"index\":0}]]},\"HTTP Request1\":{\"main\":[[{\"node\":\"Write Binary File\",\"type\":\"main\",\"index\":0}]]},\"More Countries\":{\"main\":[[],[{\"node\":\"SplitInBatches\",\"type\":\"main\",\"index\":0}]]},\"Set More Pages\":{\"main\":[[{\"node\":\"More Pages\",\"type\":\"main\",\"index\":0}]]},\"SplitInBatches\":{\"main\":[[{\"node\":\"uProc\",\"type\":\"main\",\"index\":0}]]},\"Create Directory\":{\"main\":[[{\"node\":\"HTTP Request\",\"type\":\"main\",\"index\":0}]]},\"Read Binary File\":{\"main\":[[{\"node\":\"File exists?\",\"type\":\"main\",\"index\":0}]]},\"Generate filename\":{\"main\":[[{\"node\":\"Read Binary File\",\"type\":\"main\",\"index\":0}]]},\"Prepare Documents\":{\"main\":[[{\"node\":\"MongoDB1\",\"type\":\"main\",\"index\":0}]]},\"Prepare countries\":{\"main\":[[{\"node\":\"SplitInBatches\",\"type\":\"main\",\"index\":0}]]},\"Read Binary File1\":{\"main\":[[{\"node\":\"HTML Extract1\",\"type\":\"main\",\"index\":0}]]},\"Write Binary File\":{\"main\":[[{\"node\":\"Read Binary File1\",\"type\":\"main\",\"index\":0}]]},\"Set Page to Scrape\":{\"main\":[[{\"node\":\"Set\",\"type\":\"main\",\"index\":0}]]},\"On clicking 'execute'\":{\"main\":[[{\"node\":\"Create Directory\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow allows extracting data from multiple pages website.\n\nThe workflow:\n\n  1. Starts in a country list at <https://www.theswiftcodes.com/browse-by-country/>.\n  2. Loads every country page (<https://www.theswiftcodes.com/albania/>)\n  3. Paginates every page in the country page.\n  4. Extracts data from the country page.\n  5. Saves data to MongoDB.\n  6. Paginates through all pages in all countries.\n\n\n\nIt uses getWorkflowStaticData('global') method to recover the next page (saved from the previous page), and it goes ahead with all the pages.\n\nThere is a first section where the countries list is recovered and extracted.\n\nLater, I try to read if a local cache page is available and I recover the cached page from the disk.\n\nFinally, I save data to MongoDB, and we paginate all the pages in the country and for all the countries.\n\nI have applied a cache system to save a visited page to n8n local disk. If I relaunch workflow, we check if a cache file exists to discard non-required requests to the webpage.\n\nIf the data present in the website changes, you can apply a Cron node to check the website once per week.\n\nFinally, before inserting data in MongoDB, the best way to avoid duplicates is to check that swift_code (the primary value of the collection) doesn't exist.\n\nI recommend using a proxy for all requests to avoid IP blocks. A good solution for proxy plus IP rotation is [scrapoxy.io](http://scrapoxy.io).\n\nThis workflow is perfect for small data requirements. If you need to scrape dynamic data, you can use a Headless browser or any other service.\n\nIf you want to scrape huge lists of URIs, I recommend using Scrapy + Scrapoxy.\n",
  "crawled_at": "2025-05-25T19:19:19.150943",
  "readme_zh": "该工作流程支持从多页面网站中提取数据，具体步骤如下：\n\n1. 起始于国家列表页<https://www.theswiftcodes.com/browse-by-country/>\n2. 加载每个国家页面（如<https://www.theswiftcodes.com/albania/>）\n3. 对国家页面进行分页处理\n4. 从国家页面提取数据\n5. 将数据保存至MongoDB\n6. 遍历所有国家的全部页面\n\n流程通过getWorkflowStaticData('global')方法获取下一页链接（由前页保存），继而处理所有后续页面。首阶段先获取并解析国家列表，随后尝试读取本地缓存页面（若存在则从磁盘恢复）。数据存入MongoDB前会检查swift_code（集合主键）避免重复。\n\n为优化效率，采用缓存系统将已访问页面保存至n8n本地磁盘。重启工作流时会检查缓存文件，避免重复请求。建议每周通过Cron节点检查网站数据更新。\n\n所有请求推荐使用代理服务（如[scrapoxy.io](http://scrapoxy.io)支持IP轮换）防止IP封锁。本方案适合小规模数据抓取，动态数据建议采用无头浏览器方案。如需抓取海量URL列表，推荐使用Scrapy+Scrapoxy组合方案。",
  "title_zh": "从多个网站页面抓取并存储数据",
  "publish_date_zh": "最后更新于9个月前",
  "workflow_json_zh": "{\n  \"id\": \"14\",\n  \"name\": \"extract_swifts\",\n  \"nodes\": [\n    {\n      \"name\": \"On clicking 'execute'\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -140,\n        820\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"HTTP Request\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        320,\n        820\n      ],\n      \"parameters\": {\n        \"url\": \"https://www.theswiftcodes.com/browse-by-country/\",\n        \"options\": {},\n        \"responseFormat\": \"string\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"HTML Extract\",\n      \"type\": \"n8n-nodes-base.htmlExtract\",\n      \"position\": [\n        510,\n        820\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"extractionValues\": {\n          \"values\": [\n            {\n              \"key\": \"countries\",\n              \"attribute\": \"href\",\n              \"cssSelector\": \"ol > li > a\",\n              \"returnArray\": true,\n              \"returnValue\": \"attribute\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"SplitInBatches\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        910,\n        820\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"reset\": false\n        },\n        \"batchSize\": 1\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"HTTP Request1\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2250,\n        740\n      ],\n      \"parameters\": {\n        \"url\": \"={{$node[\\\"Set\\\"].json[\\\"url\\\"]}}\",\n        \"options\": {},\n        \"responseFormat\": \"file\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"HTML Extract1\",\n      \"type\": \"n8n-nodes-base.htmlExtract\",\n      \"position\": [\n        2750,\n        590\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sourceData\": \"binary\",\n        \"extractionValues\": {\n          \"values\": [\n            {\n              \"key\": \"next_button\",\n              \"attribute\": \"href\",\n              \"cssSelector\": \"span.next > a\",\n              \"returnValue\": \"attribute\"\n            },\n            {\n              \"key\": \"names\",\n              \"cssSelector\": \"td.table-name\",\n              \"returnArray\": true\n            },\n            {\n              \"key\": \"swifts\",\n              \"cssSelector\": \"td.table-swift\",\n              \"returnArray\": true\n            },\n            {\n              \"key\": \"cities\",\n              \"cssSelector\": \"td.table-city\",\n              \"returnArray\": true\n            },\n            {\n              \"key\": \"branches\",\n              \"cssSelector\": \"td.table-branch\",\n              \"returnArray\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"MongoDB1\",\n      \"type\": \"n8n-nodes-base.mongoDb\",\n      \"position\": [\n        3280,\n        590\n      ],\n      \"parameters\": {\n        \"fields\": \"iso_code,country,page,name,branch,city,swift_code,createdAt,updatedAt\",\n        \"options\": {\n          \"dateFields\": \"createdAt,updatedAt\"\n        },\n        \"operation\": \"insert\",\n        \"collection\": \"swifts.meetup\"\n      },\n      \"credentials\": {\n        \"mongoDb\": \"db-mongo\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"uProc\",\n      \"type\": \"n8n-nodes-base.uproc\",\n      \"position\": [\n        1100,\n        820\n      ],\n      \"parameters\": {\n        \"tool\": \"getCountryNormalized\",\n        \"group\": \"geographic\",\n        \"country\": \"={{$node[\\\"SplitInBatches\\\"].json[\\\"country\\\"].replace(/[\\\\/0-9]/g, \\\"\\\")}}\",\n        \"additionalOptions\": {}\n      },\n      \"credentials\": {\n        \"uprocApi\": \"uproc-miquel\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Prepare Documents\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        2930,\n        590\n      ],\n      \"parameters\": {\n        \"functionCode\": \"var newItems = [];\\n\\nfor (i = 0; i < items[0].json.swifts.length; i++) {\\n  var item = {\\n    iso_code: $node['uProc'].json.message.code,\\n    country: $node['SplitInBatches'].json.country.replace(/[-\\\\/0-9]/g, \\\"\\\"),\\n    page: $node['Set Page to Scrape'].json.page,\\n    name: items[0].json.names[i],\\n    city: items[0].json.cities[i],\\n    branch: items[0].json.branches[i],\\n    swift_code: items[0].json.swifts[i],\\n    createdAt: new Date(),\\n    updatedAt: new Date()\\n  }\\n  newItems.push({json: item});\\n}\\n\\nreturn newItems;\\n\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"More Countries\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2810,\n        1100\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$node[\\\"SplitInBatches\\\"].context[\\\"noItemsLeft\\\"] + \\\"\\\"}}\",\n              \"value2\": \"true\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Set Page to Scrape\",\n      \"type\": \"n8n-nodes-base.functionItem\",\n      \"position\": [\n        1290,\n        680\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const staticData = getWorkflowStaticData('global');\\n\\nitem.page = \\\"\\\";\\nif (staticData.page && staticData.page.length) {\\n  item.page = staticData.page;\\n} else {\\n  item.page = $node['SplitInBatches'].json.country;\\n}\\nreturn item;\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"More Pages\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        3070,\n        1020\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$json[\\\"more_pages\\\"] + \\\"\\\"}}\",\n              \"value2\": \"true\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Set More Pages\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        3470,\n        590\n      ],\n      \"parameters\": {\n        \"functionCode\": \"var next_page = $node['HTML Extract1'].json.next_button && $node['HTML Extract1'].json.next_button.length ? $node['HTML Extract1'].json.next_button : \\\"\\\";\\nvar more_pages = next_page.length > 0;\\nconst staticData = getWorkflowStaticData('global');\\n\\n//all current items are after date: needs pagination\\nif (more_pages) {\\n  staticData.page = next_page;\\n} else {\\n  //don't check more items in previous pages;\\n  delete staticData.page;\\n}\\n\\nreturn [\\n  {\\n    json: {\\n      more_pages: more_pages\\n    }\\n  }\\n];\\n\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Set\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1440,\n        680\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"=https://www.theswiftcodes.com{{$node[\\\"Set Page to Scrape\\\"].json[\\\"page\\\"]}}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Generate filename\",\n      \"type\": \"n8n-nodes-base.functionItem\",\n      \"position\": [\n        1600,\n        610\n      ],\n      \"parameters\": {\n        \"functionCode\": \"var generateNameFromUrl = function(url){\\n    return url.replace(/[^a-z0-9]/gi, \\\"_\\\");\\n}\\n\\nitem.file = generateNameFromUrl(item.url) + \\\".html\\\"\\nreturn item;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Read Binary File\",\n      \"type\": \"n8n-nodes-base.readBinaryFile\",\n      \"position\": [\n        1770,\n        610\n      ],\n      \"parameters\": {\n        \"filePath\": \"=/home/node/.cache/scrapper/{{$json[\\\"file\\\"]}}\"\n      },\n      \"typeVersion\": 1,\n      \"continueOnFail\": true,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"File exists?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1950,\n        610\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{$node[\\\"Read Binary File\\\"].binary.data.mimeType}}\",\n              \"value2\": \"text/html\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Write Binary File\",\n      \"type\": \"n8n-nodes-base.writeBinaryFile\",\n      \"position\": [\n        2400,\n        740\n      ],\n      \"parameters\": {\n        \"fileName\": \"=/home/node/.cache/scrapper/{{$node[\\\"Generate filename\\\"].json[\\\"file\\\"]}}\",\n        \"dataPropertyName\": \"=data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Read Binary File1\",\n      \"type\": \"n8n-nodes-base.readBinaryFile\",\n      \"position\": [\n        2570,\n        590\n      ],\n      \"parameters\": {\n        \"filePath\": \"=/home/node/.cache/scrapper/{{$json[\\\"file\\\"]}}\"\n      },\n      \"typeVersion\": 1,\n      \"continueOnFail\": true,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"Wait\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        2090,\n        740\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const waitTimeSeconds = 1;\\n\\nreturn new Promise((resolve) => {\\n  setTimeout(() => {\\n    resolve([]);\\n  }, waitTimeSeconds * 1000);\\n});\\n\"\n      },\n      \"typeVersion\": 1,\n      \"continueOnFail\": true,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"Prepare countries\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        700,\n        820\n      ],\n      \"parameters\": {\n        \"functionCode\": \"return items[0].json.countries.map(function(country) {\\n  return {\\n  json: {country: country}\\n  }\\n});\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Create Directory\",\n      \"type\": \"n8n-nodes-base.executeCommand\",\n      \"position\": [\n        70,\n        820\n      ],\n      \"parameters\": {\n        \"command\": \"mkdir -p  /home/node/.cache/scrapper/\"\n      },\n      \"typeVersion\": 1,\n      \"continueOnFail\": true\n    },\n    {\n      \"name\": \"MongoDB\",\n      \"type\": \"n8n-nodes-base.mongoDb\",\n      \"disabled\": true,\n      \"position\": [\n        3100,\n        520\n      ],\n      \"parameters\": {\n        \"query\": \"={\\\"swift_code\\\": \\\"{{$json[\\\"swift_code\\\"]}}\\\"}\",\n        \"options\": {},\n        \"collection\": \"swifts.meetup\"\n      },\n      \"credentials\": {\n        \"mongoDb\": \"db-mongo\"\n      },\n      \"executeOnce\": false,\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    }\n  ],\n  \"active\": false,\n  \"settings\": {},\n  \"connections\": {\n    \"Set\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate filename\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"uProc\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Page to Scrape\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"MongoDB\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"MongoDB1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set More Pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"More Pages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Page to Scrape\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"More Countries\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"File exists?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Read Binary File1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTML Extract\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare countries\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTML Extract\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTML Extract1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prepare Documents\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Write Binary File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"More Countries\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"SplitInBatches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set More Pages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"More Pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"SplitInBatches\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"uProc\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create Directory\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Read Binary File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"File exists?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate filename\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Read Binary File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare Documents\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"MongoDB1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prepare countries\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SplitInBatches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Read Binary File1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTML Extract1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Write Binary File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Read Binary File1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Page to Scrape\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On clicking 'execute'\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Directory\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}