{
  "url": "https://n8n.io/workflows/2374-community-insights-using-qdrant-python-and-information-extractor/",
  "title": "Community Insights using Qdrant, Python and Information Extractor",
  "author": "Jimleuk",
  "publish_date": "Last update 9 months ago",
  "publish_date_absolute": "2024-08-25",
  "categories": [
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"},\"nodes\":[{\"id\":\"5961a808-a873-497e-bc42-5b760ded1571\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[380,360],\"parameters\":{},\"typeVersion\":1},{\"id\":\"7fa03eaa-7865-46ce-9f58-7e19fc0ec89b\",\"name\":\"Hacker News\",\"type\":\"n8n-nodes-base.hackerNews\",\"position\":[1200,400],\"parameters\":{\"articleId\":\"={{ $('Set Variables').item.json.story_id }}\",\"additionalFields\":{\"includeComments\":true}},\"typeVersion\":1},{\"id\":\"82675738-9df7-47a3-8363-264bb09255f4\",\"name\":\"Split Out\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1560,400],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"data\"},\"typeVersion\":1},{\"id\":\"6800be57-40da-4d80-ac35-304403423263\",\"name\":\"Get Comments\",\"type\":\"n8n-nodes-base.set\",\"position\":[1380,400],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"91110cf7-1932-43ca-b24e-9d4ed40447e6\",\"name\":\"data\",\"type\":\"array\",\"value\":\"={{\\n$json.children.flatMap(item => {\\n  return [\\n    { id: item.id, story_id: item.story_id, story_title: $json.title, author: item.author, text: item.text },\\n    ...item.children.flatMap(item1 => {\\n         return [\\n           { id: item1.id, story_id: item1.story_id, story_title: $json.title, author: item1.author, text: item1.text },\\n           ...item1.children.flatMap(item2 => {\\n               return [\\n                 { id: item2.id, story_id: item2.story_id, story_title: $json.title, author: item2.author, text: item2.text },\\n                 ...item2.children.flatMap(item3 => {\\n                     return [\\n                       { id: item3.id, story_id: item3.story_id, story_title: $json.title, author: item3.author, text: item3.text },\\n                       ...item3.children.flatMap(item4 => {\\n                          return { id: item4.id, story_id: item4.story_id, story_title: $json.title, author: item4.author, text: item4.text }\\n                       })\\n                     ]\\n                 })\\n               ]\\n           })\\n        ]\\n    })\\n  ]\\n})\\n}}\"}]}},\"typeVersion\":3.4},{\"id\":\"18e1b980-1d98-4a89-8cc6-f4793c004d9f\",\"name\":\"Qdrant Vector Store\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\"position\":[1960,320],\"parameters\":{\"mode\":\"insert\",\"options\":{},\"qdrantCollection\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"hn_comments\",\"cachedResultName\":\"hn_comments\"}},\"credentials\":{\"qdrantApi\":{\"id\":\"NyinAS3Pgfik66w5\",\"name\":\"QdrantApi account\"}},\"typeVersion\":1},{\"id\":\"c4ce1342-1460-4650-8338-055979339f46\",\"name\":\"Embeddings OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[1960,480],\"parameters\":{\"model\":\"text-embedding-3-small\",\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1},{\"id\":\"00301fd6-8766-40f7-99eb-7f8af9a51b29\",\"name\":\"Default Data Loader\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[2080,480],\"parameters\":{\"options\":{\"metadata\":{\"metadataValues\":[{\"name\":\"item_id\",\"value\":\"={{ $json.id }}\"},{\"name\":\"item_author\",\"value\":\"={{ $json.author }}\"},{\"name\":\"story_id\",\"value\":\"={{ $json.story_id }}\"},{\"name\":\"story_title\",\"value\":\"={{ $json.story_title }}\"}]}},\"jsonData\":\"={{ $json.text }}\",\"jsonMode\":\"expressionData\"},\"typeVersion\":1},{\"id\":\"c76d3aea-0906-4ed4-a828-47ad5775364c\",\"name\":\"Recursive Character Text Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\"position\":[2080,620],\"parameters\":{\"options\":{},\"chunkSize\":4000},\"typeVersion\":1},{\"id\":\"50735ca9-90eb-408a-9bca-97eea1a310d1\",\"name\":\"Set Variables\",\"type\":\"n8n-nodes-base.set\",\"position\":[620,360],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"5b77516d-acb5-41af-9346-a67acecd0419\",\"name\":\"story_id\",\"type\":\"string\",\"value\":\"41123155\"}]}},\"typeVersion\":3.4},{\"id\":\"376a1a66-1d22-4969-af11-d1a9d474b67b\",\"name\":\"Clear Existing Comments\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[860,360],\"parameters\":{\"url\":\"http://qdrant:6333/collections/hn_comments/points/delete\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n    \\\"filter\\\": {\\n        \\\"must\\\": [\\n            {\\n                \\\"key\\\": \\\"metadata.story_id\\\",\\n                \\\"match\\\": {\\n                    \\\"value\\\": \\\"{{ $('Set Variables').item.json.story_id }}\\\"\\n                }\\n            }\\n        ]\\n    }\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"qdrantApi\"},\"credentials\":{\"qdrantApi\":{\"id\":\"NyinAS3Pgfik66w5\",\"name\":\"QdrantApi account\"}},\"typeVersion\":4.2},{\"id\":\"e8bcf7d8-aa25-499e-a64f-4d20caf1d6d4\",\"name\":\"Get Payload of Points\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1822,1100],\"parameters\":{\"url\":\"=http://qdrant:6333/collections/hn_comments/points\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={{\\n  {\\n    \\\"ids\\\": $json.points,\\n    \\\"with_payload\\\": true\\n  }\\n}}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"qdrantApi\"},\"credentials\":{\"qdrantApi\":{\"id\":\"NyinAS3Pgfik66w5\",\"name\":\"QdrantApi account\"}},\"typeVersion\":4.2},{\"id\":\"57cbc8e5-dd89-4c2a-9906-2bd0c2bbdede\",\"name\":\"Clusters To List\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1602,1100],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"output\"},\"typeVersion\":1},{\"id\":\"20b76291-f8fa-4aa7-8f1a-ff423ac3cb7f\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[2242,1320],\"parameters\":{\"model\":\"gpt-4o-mini\",\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1},{\"id\":\"07fc19b3-33b4-42be-bda9-f1436d4e9e6f\",\"name\":\"Only Clusters With 3+ points\",\"type\":\"n8n-nodes-base.filter\",\"position\":[1602,1260],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"328f806c-0792-4d90-9bee-a1e10049e78f\",\"operator\":{\"type\":\"array\",\"operation\":\"lengthGt\",\"rightType\":\"number\"},\"leftValue\":\"={{ $json.points }}\",\"rightValue\":2}]}},\"typeVersion\":2},{\"id\":\"80583492-c454-4b9d-8df9-ded7d50930f2\",\"name\":\"Set Variables1\",\"type\":\"n8n-nodes-base.set\",\"position\":[582,1200],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"2e58a9fa-a14d-4a6c-8cc8-8ec947c791fb\",\"name\":\"story_id\",\"type\":\"string\",\"value\":\"={{ $json.story_id || 41123155 }}\"}]}},\"typeVersion\":3.4},{\"id\":\"2cfb3a7a-01d2-4eee-b9f8-d19e81829882\",\"name\":\"Prep Output For Export\",\"type\":\"n8n-nodes-base.set\",\"position\":[2842,1200],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={{ {\\n  ...$json.output,\\n  \\\"Story ID\\\": $('Set Variables1').item.json.story_id,\\n  \\\"Story Title\\\": $('Get Payload of Points').item.json.result[0].payload.metadata.story_title,\\n  \\\"Number of Responses\\\": $('Get Payload of Points').item.json.result.length,\\n  \\\"Raw Responses\\\": $('Get Payload of Points').item.json.result.map(item =>\\n    [\\n      item.payload.metadata.item_id,\\n      item.payload.metadata.story_id,\\n      item.payload.metadata.story_title,\\n      item.payload.metadata.item_author,\\n      item.payload.content.replaceAll('\\\"', '\\\\\\\"').replaceAll('\\\\n', ' ').substring(0, 500)\\n    ]\\n   ).join('\\\\n')\\n} }}\\n\"},\"typeVersion\":3.4},{\"id\":\"ade302fd-93ad-4d96-9852-e4108ba435af\",\"name\":\"Export To Sheets\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[3062,1200],\"parameters\":{\"columns\":{\"value\":{},\"schema\":[{\"id\":\"Story ID\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Story ID\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Insight\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Insight\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Sentiment\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Sentiment\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Number of Responses\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Number of Responses\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Raw Responses\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Raw Responses\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"autoMapInputData\",\"matchingColumns\":[]},\"options\":{\"useAppend\":true},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"=1CPA_SNpWr2OjZ2KMi49fZ6MA9yC9uik8PMOILan7qYE\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"XHvC7jIRR8A2TlUl\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.4},{\"id\":\"22d54081-7a52-40f2-837c-0c8df05e1fe4\",\"name\":\"Execute Workflow Trigger\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[382,1200],\"parameters\":{},\"typeVersion\":1},{\"id\":\"b1e6eb2b-4627-4c69-a2ce-6bb8451d6359\",\"name\":\"Trigger Insights\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[2780,360],\"parameters\":{\"options\":{},\"workflowId\":\"={{ $workflow.id }}\"},\"typeVersion\":1},{\"id\":\"f25e8b2a-5ce4-4e02-8e08-e3dd98072d0e\",\"name\":\"Prep Values For Trigger\",\"type\":\"n8n-nodes-base.set\",\"position\":[2580,360],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"24dd90ad-390f-444e-ba6c-8c06a41e836e\",\"name\":\"story_id\",\"type\":\"string\",\"value\":\"={{ $('Set Variables').item.json.story_id }}\"}]}},\"executeOnce\":true,\"typeVersion\":3.4},{\"id\":\"d0270fa8-5ebc-4573-b070-05d19dd3302a\",\"name\":\"Find Comments\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[982,1160],\"parameters\":{\"url\":\"=http://qdrant:6333/collections/hn_comments/points/scroll\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"limit\\\": 500,\\n  \\\"filter\\\":{\\n    \\\"must\\\": [\\n      {\\n        \\\"key\\\": \\\"metadata.story_id\\\",\\n        \\\"match\\\": { \\\"value\\\": {{ $('Set Variables1').item.json.story_id }} }\\n      }\\n    ]\\n  },\\n  \\\"with_vector\\\":true\\n}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"nodeCredentialType\":\"qdrantApi\"},\"credentials\":{\"qdrantApi\":{\"id\":\"NyinAS3Pgfik66w5\",\"name\":\"QdrantApi account\"}},\"typeVersion\":4.2},{\"id\":\"ca3c040e-bfe1-4f4d-9c4e-154c2010f89b\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2440,160],\"parameters\":{\"color\":7,\"width\":595.5213902293318,\"height\":429.11782776909047,\"content\":\"## Step 4. Trigger Insights SubWorkflow\\n[Learn more about Workflow Triggers](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow)\\n\\nA subworkflow is used to trigger the analysis for the survey. This separation is optional but used here to better demonstrate the two part process.\"},\"typeVersion\":1},{\"id\":\"cdf04343-abfa-4705-9828-e246c96ffa2a\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1780,60],\"parameters\":{\"color\":7,\"width\":638.5221986278162,\"height\":741.0186923170972,\"content\":\"## Step 3. Store Comments in Qdrant\\n[Learn more about the Qdrant Vector Store](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreqdrant/)\\n\\nVector databases are a great way to store data if you're interested in perform similiarity searches which applies here as we want to group similar comments to find patterns. Qdrant is a powerful vector database and tool of choice because of its robust API implementation and advanced filtering capabilities.\"},\"typeVersion\":1},{\"id\":\"14f6872b-1c51-4359-a39f-cc6ba2ff29fb\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1100,200],\"parameters\":{\"color\":7,\"width\":656.0317138444963,\"height\":441.0753369736108,\"content\":\"## Step 2. Using HN API to get Comments\\n[Read more about HTTP Request Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.hackernews)\\n\\nWe'll scrape all the comments for the HN story using the HN API node. We go an extra step and flatten the comment tree so replies are also considered as top level comments.\"},\"typeVersion\":1},{\"id\":\"62935316-310a-4ce9-ac5f-8820666e2290\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[280,180],\"parameters\":{\"color\":7,\"width\":787.3314861380661,\"height\":465.52420584035275,\"content\":\"## Step 1. Starting Fresh\\nFor this demo, we'll clear any existing records in our Qdrant vector store for the selected HN story. We do this using the Qdrant's delete points API.\"},\"typeVersion\":1},{\"id\":\"a5e93a02-555c-48a3-afae-344a4884908b\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[269,1005],\"parameters\":{\"color\":7,\"width\":551.2710561574413,\"height\":407.9295477646979,\"content\":\"## Step 5. The Insight Subworkflow\\n[Learn more about Workflow Triggers](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflowtrigger)\\n\\nThis subworkflow takes the Story ID to find the relevant comment records in our Qdrant vector store. Our goal is to find insights on what's the community consensus on a particular HN story.\"},\"typeVersion\":1},{\"id\":\"37217a2d-aca4-499b-9d6b-a1d4c6684194\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[840,920],\"parameters\":{\"color\":7,\"width\":600.1809497875241,\"height\":482.99934349707576,\"content\":\"## Step 6. Apply Clustering Algorithm to Comments\\n[Read more about using Python in n8n](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code)\\n\\nWe'll retrieve our vectors embeddings for the desired HN story comments and perform an advanced clustering algorithm on them. This powerful echnique allows us to quickly group similar embeddings into clusters which we can then use to discover popular feedback, opinions and pain-points!\\n\\nWe're able to do this thanks to te Python Code Node.\"},\"typeVersion\":1},{\"id\":\"fcccc9a8-ee9f-41b7-b7d6-e8fbbe19dfa3\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1466,880],\"parameters\":{\"color\":7,\"width\":598.5585287222906,\"height\":605.9905193915599,\"content\":\"## Step 7. Fetch Comment Contents By Cluster\\n[Learn more about using the Code Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/)\\n\\nWith the Qdrant point IDs grouped and returned by our code node, all that's left is to fetch the payload of each. Note that the clustering algorithm isn't perfect and may require some tweaking depending on your data.\"},\"typeVersion\":1},{\"id\":\"78e9cd03-dea4-4b11-947f-a00d7bb5f8cf\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2086,929],\"parameters\":{\"color\":7,\"width\":587.6069484146701,\"height\":583.305275883189,\"content\":\"## Step 8. Getting Insights from Grouped Comments\\n[Read more about using the Information Extractor Node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\nNext, we'll use our state-of-the-art LLM to generate insights on our comment groups. Doing it this way, we'll able to pull more granular results addressing many key topics discussed for the HN story.\"},\"typeVersion\":1},{\"id\":\"d5427741-6015-4af5-8e45-f6fc6f5c4133\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2706,940],\"parameters\":{\"color\":7,\"width\":572.5638733479158,\"height\":464.4019616956416,\"content\":\"## Step 9. Write To Insights Sheet\\nFinally, our completed insights to appended to the Insights Sheet we created earlier in the workflow.\\n\\nYou can find a sample sheet here: https://docs.google.com/spreadsheets/d/e/2PACX-1vQXaQU9XxsxnUIIeqmmf1PuYRuYtwviVXTv6Mz9Vo6_a4ty-XaJHSeZsptjWXS3wGGDG8Z4u16rvE7l/pubhtml\"},\"typeVersion\":1},{\"id\":\"a66b7e6d-0602-4f6b-a9f6-76a63d590956\",\"name\":\"Sticky Note9\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,313.32160655630304],\"parameters\":{\"width\":226.36363118160727,\"height\":296.5755172289686,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### 🚨 Set Story ID here!\\nMust be a valid HN story ID\"},\"typeVersion\":1},{\"id\":\"42f93189-4bd8-4487-975a-f1c8f8365242\",\"name\":\"Apply K-means Clustering Algorithm\",\"type\":\"n8n-nodes-base.code\",\"position\":[1202,1160],\"parameters\":{\"language\":\"python\",\"pythonCode\":\"import numpy as np\\nfrom sklearn.cluster import KMeans\\n\\n# get vectors for all answers\\npoint_ids = [item.id for item in _input.first().json.result.points]\\nvectors = [item.vector.to_py() for item in _input.first().json.result.points]\\nvectors_array = np.array(vectors)\\n\\n# apply k-means clustering where n_clusters = 5\\n# this is a max and we'll discard some of these clusters later\\nkmeans = KMeans(n_clusters=min(len(vectors), 5), random_state=42).fit(vectors_array)\\nlabels = kmeans.labels_\\nunique_labels = set(labels)\\n\\n# Extract and print points in each cluster\\nclusters = {}\\nfor label in set(labels):\\n    clusters[label] = vectors_array[labels == label]\\n\\n# return Qdrant point ids for each cluster\\n# we'll use these ids to fetch the payloads from the vector store.\\noutput = []\\nfor cluster_id, cluster_points in clusters.items():\\n    points = [point_ids[i] for i in range(len(labels)) if labels[i] == cluster_id]\\n    output.append({\\n        \\\"id\\\": f\\\"Cluster {cluster_id}\\\",\\n        \\\"total\\\": len(cluster_points),\\n        \\\"points\\\": points\\n    })\\n\\nreturn {\\\"json\\\": {\\\"output\\\": output } }\"},\"typeVersion\":2},{\"id\":\"4ddeab09-e401-41ad-861f-560b9e92bf89\",\"name\":\"Sticky Note10\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-180,40],\"parameters\":{\"width\":400.381109509268,\"height\":612.855812336249,\"content\":\"## Try It Out!\\n\\n### This workflow generates highly-detailed community insights from HN Story comments. Works best when dealing with a large number of comments.\\n\\n* Import HN Story comments and vectorise in Qdrant vectorstore.\\n* Identify clusters of popular topics in discussion using K-means clustering algorithm. \\n* Each valid cluster is analysed and summarised by LLM.\\n* Export LLM response and cluster results back into sheet.\\n\\nCheck out the reference google sheet here: https://docs.google.com/spreadsheets/d/e/2PACX-1vQXaQU9XxsxnUIIeqmmf1PuYRuYtwviVXTv6Mz9Vo6_a4ty-XaJHSeZsptjWXS3wGGDG8Z4u16rvE7l/pubhtml\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Hacking!\"},\"typeVersion\":1},{\"id\":\"eea1b301-f030-48a9-bcfc-63fe3e1aac0d\",\"name\":\"Information Extractor\",\"type\":\"@n8n/n8n-nodes-langchain.informationExtractor\",\"position\":[2260,1140],\"parameters\":{\"text\":\"=The {{ $json.result.length }} comments were:\\n{{\\n$json.result.map(item =>\\n`* Commenter \\\"${item.payload.metadata.item_author}\\\" says the following: \\\"${item.payload.content.replaceAll('\\\"', '\\\\\\\"').replaceAll('\\\\n', ' ')}\\\"`\\n).join('\\\\n')\\n}}\",\"options\":{\"systemPromptTemplate\":\"=You help summarise a selection of forum comments for an article called \\\"{{ $json.result[0].payload.metadata.story_title }}\\\".\\nThe {{ $json.result.length }} comments were selected because their contents were similar in context.\\n\\nYour task is to: \\n* summarise the given comments into a short paragraph. Provide an insight from this summary and what we could learn from the comments.\\n* determine if the overall sentiment of all the listed responses to be either strongly negative, negative, neutral, positive or strongly positive.\"},\"schemaType\":\"fromJson\",\"jsonSchemaExample\":\"{\\n\\t\\\"Insight\\\": \\\"\\\",\\n    \\\"Sentiment\\\": \\\"\\\",\\n    \\\"Suggested Improvements\\\": \\\"\\\"\\n}\"},\"typeVersion\":1},{\"id\":\"bee4dd57-c907-418f-ad87-21c6ce4e6698\",\"name\":\"Sticky Note12\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[280,660],\"parameters\":{\"color\":5,\"width\":323.2987132716669,\"height\":80,\"content\":\"### Run this once! \\nIf for any reason you need to run more than once, be sure to clear the existing data first.\"},\"typeVersion\":1},{\"id\":\"429e080d-5a94-442c-a2b0-6a12f03a8a98\",\"name\":\"Sticky Note11\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[840,1440],\"parameters\":{\"color\":5,\"width\":323.2987132716669,\"height\":110.05160146874424,\"content\":\"### First Time Running?\\nThere is a slight delay on first run because the code node has to download the required packages.\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Split Out\":{\"main\":[[{\"node\":\"Qdrant Vector Store\",\"type\":\"main\",\"index\":0}]]},\"Hacker News\":{\"main\":[[{\"node\":\"Get Comments\",\"type\":\"main\",\"index\":0}]]},\"Get Comments\":{\"main\":[[{\"node\":\"Split Out\",\"type\":\"main\",\"index\":0}]]},\"Find Comments\":{\"main\":[[{\"node\":\"Apply K-means Clustering Algorithm\",\"type\":\"main\",\"index\":0}]]},\"Set Variables\":{\"main\":[[{\"node\":\"Clear Existing Comments\",\"type\":\"main\",\"index\":0}]]},\"Set Variables1\":{\"main\":[[{\"node\":\"Find Comments\",\"type\":\"main\",\"index\":0}]]},\"Clusters To List\":{\"main\":[[{\"node\":\"Only Clusters With 3+ points\",\"type\":\"main\",\"index\":0}]]},\"Embeddings OpenAI\":{\"ai_embedding\":[[{\"node\":\"Qdrant Vector Store\",\"type\":\"ai_embedding\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Information Extractor\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Default Data Loader\":{\"ai_document\":[[{\"node\":\"Qdrant Vector Store\",\"type\":\"ai_document\",\"index\":0}]]},\"Qdrant Vector Store\":{\"main\":[[{\"node\":\"Prep Values For Trigger\",\"type\":\"main\",\"index\":0}]]},\"Get Payload of Points\":{\"main\":[[{\"node\":\"Information Extractor\",\"type\":\"main\",\"index\":0}]]},\"Information Extractor\":{\"main\":[[{\"node\":\"Prep Output For Export\",\"type\":\"main\",\"index\":0}]]},\"Prep Output For Export\":{\"main\":[[{\"node\":\"Export To Sheets\",\"type\":\"main\",\"index\":0}]]},\"Clear Existing Comments\":{\"main\":[[{\"node\":\"Hacker News\",\"type\":\"main\",\"index\":0}]]},\"Prep Values For Trigger\":{\"main\":[[{\"node\":\"Trigger Insights\",\"type\":\"main\",\"index\":0}]]},\"Execute Workflow Trigger\":{\"main\":[[{\"node\":\"Set Variables1\",\"type\":\"main\",\"index\":0}]]},\"Only Clusters With 3+ points\":{\"main\":[[{\"node\":\"Get Payload of Points\",\"type\":\"main\",\"index\":0}]]},\"Recursive Character Text Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Default Data Loader\",\"type\":\"ai_textSplitter\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Set Variables\",\"type\":\"main\",\"index\":0}]]},\"Apply K-means Clustering Algorithm\":{\"main\":[[{\"node\":\"Clusters To List\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This n8n template is one of a 3-part series exploring use-cases for clustering vector embeddings:\n\n  * Survey Insights\n  * Customer Insights\n  * Community Insights\n\n\n\nThis template demonstrates the Community Insights scenario where HN commments can be quickly grouped by similarity and an AI agent can generate insights on those groupings.\n\nWith this workflow, Researchers or HN users can quickly breakdown community consensus on a particular topic and identify frequently mentioned positives and negatives.\n\nSample Output: <https://docs.google.com/spreadsheets/d/e/2PACX-1vQXaQU9XxsxnUIIeqmmf1PuYRuYtwviVXTv6Mz9Vo6_a4ty-XaJHSeZsptjWXS3wGGDG8Z4u16rvE7l/pubhtml>\n\n### How it works\n\n  * HN comments are imported via the Hacknews API node.\n  * Comments are then inserted into a Qdrant collection carefully tagged with the Hackernews API metadata.\n  * Comments are then fetched and are put through a clustering algorithm using the Python Code node. The Qdrant points are returned in clustered groups.\n  * Each group is looped to fetch the payloads of the points and feed them to the AI agent to summarise and generate insights for.\n  * The resulting insights and raw responses are then saved to the Google Spreadsheet for further analysis by the researcher or the HN user.\n\n\n\n### Requirements\n\n  * Works best with lots of comments!\n  * Qdrant Vectorstore for storing embeddings.\n  * OpenAI account for embeddings and LLM.\n\n\n\n### Customising the Template\n\n  * Adjust clustering parameters which make sense for your data.\n  * Adjust sentimentality setting if comments are overwhelmingly negative at times.\n\n\n",
  "crawled_at": "2025-05-25T23:38:27.077592",
  "readme_zh": "此n8n模板是一个探索向量嵌入聚类应用场景的三部曲系列之一：\n\n* 调查洞察\n* 客户洞察\n* 社区洞察\n\n本模板展示\"社区洞察\"场景，可快速按相似性对HN评论进行分组，并由AI智能体生成分组洞见。通过该工作流，研究人员或HN用户能快速解析社区对特定话题的共识，识别高频提及的正面与负面评价。\n\n示例输出：<https://docs.google.com/spreadsheets/d/e/2PACX-1vQXaQU9XxsxnUIIeqmmf1PuYRuYtwviVXTv6Mz9Vo6_a4ty-XaJHSeZsptjWXS3wGGDG8Z4u16rvE7l/pubhtml>\n\n### 运作原理\n\n* 通过Hacknews API节点导入HN评论\n* 将评论存入Qdrant集合，并精准标记Hackernews API元数据\n* 获取评论后通过Python代码节点进行聚类算法处理，返回分组后的Qdrant数据点\n* 循环每个分组获取数据点有效载荷，输入AI智能体进行摘要和洞见生成\n* 最终将分析结果和原始响应存入Google电子表格，供研究人员或HN用户深入分析\n\n### 使用要求\n\n* 需大量评论数据效果更佳\n* 需Qdrant向量数据库存储嵌入\n* 需OpenAI账号处理嵌入和大语言模型\n\n### 模板定制\n\n* 根据数据特性调整聚类参数\n* 当评论倾向负面时，可调整情感分析设置",
  "title_zh": "使用Qdrant、Python和信息提取器获取社区洞察",
  "publish_date_zh": "最后更新于8个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"5961a808-a873-497e-bc42-5b760ded1571\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        380,\n        360\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7fa03eaa-7865-46ce-9f58-7e19fc0ec89b\",\n      \"name\": \"Hacker News\",\n      \"type\": \"n8n-nodes-base.hackerNews\",\n      \"position\": [\n        1200,\n        400\n      ],\n      \"parameters\": {\n        \"articleId\": \"={{ $('Set Variables').item.json.story_id }}\",\n        \"additionalFields\": {\n          \"includeComments\": true\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82675738-9df7-47a3-8363-264bb09255f4\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1560,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6800be57-40da-4d80-ac35-304403423263\",\n      \"name\": \"Get Comments\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1380,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"91110cf7-1932-43ca-b24e-9d4ed40447e6\",\n              \"name\": \"data\",\n              \"type\": \"array\",\n              \"value\": \"={{\\n$json.children.flatMap(item => {\\n  return [\\n    { id: item.id, story_id: item.story_id, story_title: $json.title, author: item.author, text: item.text },\\n    ...item.children.flatMap(item1 => {\\n         return [\\n           { id: item1.id, story_id: item1.story_id, story_title: $json.title, author: item1.author, text: item1.text },\\n           ...item1.children.flatMap(item2 => {\\n               return [\\n                 { id: item2.id, story_id: item2.story_id, story_title: $json.title, author: item2.author, text: item2.text },\\n                 ...item2.children.flatMap(item3 => {\\n                     return [\\n                       { id: item3.id, story_id: item3.story_id, story_title: $json.title, author: item3.author, text: item3.text },\\n                       ...item3.children.flatMap(item4 => {\\n                          return { id: item4.id, story_id: item4.story_id, story_title: $json.title, author: item4.author, text: item4.text }\\n                       })\\n                     ]\\n                 })\\n               ]\\n           })\\n        ]\\n    })\\n  ]\\n})\\n}}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"18e1b980-1d98-4a89-8cc6-f4793c004d9f\",\n      \"name\": \"Qdrant Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreQdrant\",\n      \"position\": [\n        1960,\n        320\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"qdrantCollection\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"hn_comments\",\n          \"cachedResultName\": \"hn_comments\"\n        }\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"NyinAS3Pgfik66w5\",\n          \"name\": \"QdrantApi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c4ce1342-1460-4650-8338-055979339f46\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        1960,\n        480\n      ],\n      \"parameters\": {\n        \"model\": \"text-embedding-3-small\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"00301fd6-8766-40f7-99eb-7f8af9a51b29\",\n      \"name\": \"Default Data Loader\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        2080,\n        480\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"metadata\": {\n            \"metadataValues\": [\n              {\n                \"name\": \"item_id\",\n                \"value\": \"={{ $json.id }}\"\n              },\n              {\n                \"name\": \"item_author\",\n                \"value\": \"={{ $json.author }}\"\n              },\n              {\n                \"name\": \"story_id\",\n                \"value\": \"={{ $json.story_id }}\"\n              },\n              {\n                \"name\": \"story_title\",\n                \"value\": \"={{ $json.story_title }}\"\n              }\n            ]\n          }\n        },\n        \"jsonData\": \"={{ $json.text }}\",\n        \"jsonMode\": \"expressionData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c76d3aea-0906-4ed4-a828-47ad5775364c\",\n      \"name\": \"Recursive Character Text Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter\",\n      \"position\": [\n        2080,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"chunkSize\": 4000\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"50735ca9-90eb-408a-9bca-97eea1a310d1\",\n      \"name\": \"Set Variables\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        620,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"5b77516d-acb5-41af-9346-a67acecd0419\",\n              \"name\": \"story_id\",\n              \"type\": \"string\",\n              \"value\": \"41123155\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"376a1a66-1d22-4969-af11-d1a9d474b67b\",\n      \"name\": \"Clear Existing Comments\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        860,\n        360\n      ],\n      \"parameters\": {\n        \"url\": \"http://qdrant:6333/collections/hn_comments/points/delete\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n    \\\"filter\\\": {\\n        \\\"must\\\": [\\n            {\\n                \\\"key\\\": \\\"metadata.story_id\\\",\\n                \\\"match\\\": {\\n                    \\\"value\\\": \\\"{{ $('Set Variables').item.json.story_id }}\\\"\\n                }\\n            }\\n        ]\\n    }\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"qdrantApi\"\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"NyinAS3Pgfik66w5\",\n          \"name\": \"QdrantApi account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e8bcf7d8-aa25-499e-a64f-4d20caf1d6d4\",\n      \"name\": \"Get Payload of Points\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1822,\n        1100\n      ],\n      \"parameters\": {\n        \"url\": \"=http://qdrant:6333/collections/hn_comments/points\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n  {\\n    \\\"ids\\\": $json.points,\\n    \\\"with_payload\\\": true\\n  }\\n}}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"qdrantApi\"\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"NyinAS3Pgfik66w5\",\n          \"name\": \"QdrantApi account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"57cbc8e5-dd89-4c2a-9906-2bd0c2bbdede\",\n      \"name\": \"Clusters To List\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1602,\n        1100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"output\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"20b76291-f8fa-4aa7-8f1a-ff423ac3cb7f\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        2242,\n        1320\n      ],\n      \"parameters\": {\n        \"model\": \"gpt-4o-mini\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"07fc19b3-33b4-42be-bda9-f1436d4e9e6f\",\n      \"name\": \"Only Clusters With 3+ points\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1602,\n        1260\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"328f806c-0792-4d90-9bee-a1e10049e78f\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"lengthGt\",\n                \"rightType\": \"number\"\n              },\n              \"leftValue\": \"={{ $json.points }}\",\n              \"rightValue\": 2\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"80583492-c454-4b9d-8df9-ded7d50930f2\",\n      \"name\": \"Set Variables1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        582,\n        1200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"2e58a9fa-a14d-4a6c-8cc8-8ec947c791fb\",\n              \"name\": \"story_id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.story_id || 41123155 }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"2cfb3a7a-01d2-4eee-b9f8-d19e81829882\",\n      \"name\": \"Prep Output For Export\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2842,\n        1200\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={{ {\\n  ...$json.output,\\n  \\\"Story ID\\\": $('Set Variables1').item.json.story_id,\\n  \\\"Story Title\\\": $('Get Payload of Points').item.json.result[0].payload.metadata.story_title,\\n  \\\"Number of Responses\\\": $('Get Payload of Points').item.json.result.length,\\n  \\\"Raw Responses\\\": $('Get Payload of Points').item.json.result.map(item =>\\n    [\\n      item.payload.metadata.item_id,\\n      item.payload.metadata.story_id,\\n      item.payload.metadata.story_title,\\n      item.payload.metadata.item_author,\\n      item.payload.content.replaceAll('\\\"', '\\\\\\\"').replaceAll('\\\\n', ' ').substring(0, 500)\\n    ]\\n   ).join('\\\\n')\\n} }}\\n\"\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"ade302fd-93ad-4d96-9852-e4108ba435af\",\n      \"name\": \"Export To Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        3062,\n        1200\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {},\n          \"schema\": [\n            {\n              \"id\": \"Story ID\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Story ID\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Insight\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Insight\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Sentiment\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Sentiment\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Number of Responses\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Number of Responses\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Raw Responses\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Raw Responses\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"autoMapInputData\",\n          \"matchingColumns\": []\n        },\n        \"options\": {\n          \"useAppend\": true\n        },\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"=1CPA_SNpWr2OjZ2KMi49fZ6MA9yC9uik8PMOILan7qYE\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.4\n    },\n    {\n      \"id\": \"22d54081-7a52-40f2-837c-0c8df05e1fe4\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        382,\n        1200\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b1e6eb2b-4627-4c69-a2ce-6bb8451d6359\",\n      \"name\": \"Trigger Insights\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        2780,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"workflowId\": \"={{ $workflow.id }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f25e8b2a-5ce4-4e02-8e08-e3dd98072d0e\",\n      \"name\": \"Prep Values For Trigger\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2580,\n        360\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"24dd90ad-390f-444e-ba6c-8c06a41e836e\",\n              \"name\": \"story_id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Set Variables').item.json.story_id }}\"\n            }\n          ]\n        }\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d0270fa8-5ebc-4573-b070-05d19dd3302a\",\n      \"name\": \"Find Comments\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        982,\n        1160\n      ],\n      \"parameters\": {\n        \"url\": \"=http://qdrant:6333/collections/hn_comments/points/scroll\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"limit\\\": 500,\\n  \\\"filter\\\":{\\n    \\\"must\\\": [\\n      {\\n        \\\"key\\\": \\\"metadata.story_id\\\",\\n        \\\"match\\\": { \\\"value\\\": {{ $('Set Variables1').item.json.story_id }} }\\n      }\\n    ]\\n  },\\n  \\\"with_vector\\\":true\\n}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"nodeCredentialType\": \"qdrantApi\"\n      },\n      \"credentials\": {\n        \"qdrantApi\": {\n          \"id\": \"NyinAS3Pgfik66w5\",\n          \"name\": \"QdrantApi account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"ca3c040e-bfe1-4f4d-9c4e-154c2010f89b\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2440,\n        160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 595.5213902293318,\n        \"height\": 429.11782776909047,\n        \"content\": \"## 步骤4. 触发洞察分析子工作流\\n[了解更多关于工作流触发器的信息](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflow)\\n\\n此处使用子工作流来触发问卷分析。这种分离是可选的，但在此用于更好地演示这个分为两部分的过程。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cdf04343-abfa-4705-9828-e246c96ffa2a\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1780,\n        60\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 638.5221986278162,\n        \"height\": 741.0186923170972,\n        \"content\": \"## 第三步：将评论存储至Qdrant\\n[深入了解Qdrant向量数据库](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreqdrant/)\\n\\n若需进行相似性搜索（例如本例中归类相似评论以发现规律），向量数据库是理想的存储方案。Qdrant凭借其稳健的API实现和高级过滤功能，成为我们选择的强大向量数据库工具。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"14f6872b-1c51-4359-a39f-cc6ba2ff29fb\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1100,\n        200\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 656.0317138444963,\n        \"height\": 441.0753369736108,\n        \"content\": \"## 第二步：通过HN API获取评论  \\n[详细了解HTTP请求节点](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.hackernews)  \\n\\n我们将使用HN API节点抓取该HN故事下的所有评论。额外执行一步操作：展平评论树结构，使回复内容也能被视为顶级评论处理。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"62935316-310a-4ce9-ac5f-8820666e2290\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        180\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 787.3314861380661,\n        \"height\": 465.52420584035275,\n        \"content\": \"## 第一步：全新开始\\n在本演示中，我们将清除所选HN故事在Qdrant向量库中的所有现有记录。这一操作通过调用Qdrant的删除点API实现。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a5e93a02-555c-48a3-afae-344a4884908b\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        269,\n        1005\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 551.2710561574413,\n        \"height\": 407.9295477646979,\n        \"content\": \"## 第五步：洞察子流程  \\n[详细了解工作流触发器](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executeworkflowtrigger)  \\n\\n该子流程通过故事ID从Qdrant向量数据库中检索相关评论记录，旨在分析社区对特定HN故事的共识观点，从而提炼关键洞察。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"37217a2d-aca4-499b-9d6b-a1d4c6684194\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        840,\n        920\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 600.1809497875241,\n        \"height\": 482.99934349707576,\n        \"content\": \"## 第六步：对评论应用聚类算法\\n[详细了解如何在n8n中使用Python](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code)\\n\\n我们将获取目标HN故事评论的向量嵌入数据，并对其执行高级聚类算法。这项强大技术能快速将相似嵌入分组聚类，从而帮助我们识别热门反馈、观点与痛点！\\n\\n这一切都得益于Python代码节点的强大功能。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fcccc9a8-ee9f-41b7-b7d6-e8fbbe19dfa3\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1466,\n        880\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 598.5585287222906,\n        \"height\": 605.9905193915599,\n        \"content\": \"## 步骤七：按聚类获取评论内容\\n[详细了解如何使用代码节点](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/)\\n\\n通过代码节点对Qdrant点ID进行分组并返回后，剩下的就是获取每个点的有效载荷。请注意，聚类算法并非完美，可能需要根据您的数据情况进行一些调整。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"78e9cd03-dea4-4b11-947f-a00d7bb5f8cf\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2086,\n        929\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 587.6069484146701,\n        \"height\": 583.305275883189,\n        \"content\": \"## 步骤八：从分组评论中获取洞见\\n[详细了解如何使用信息提取节点](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\n接下来，我们将运用尖端的大型语言模型（LLM）来生成针对评论分组的深度分析。通过这种方式，我们能够提取更精细的结果，涵盖HN故事讨论中的多个关键议题。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d5427741-6015-4af5-8e45-f6fc6f5c4133\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2706,\n        940\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 572.5638733479158,\n        \"height\": 464.4019616956416,\n        \"content\": \"## 步骤9. 写入洞察报告表  \\n最后，我们将已完成的洞察内容追加至工作流前期创建的洞察报告表中。  \\n\\n示例表格查阅地址：https://docs.google.com/spreadsheets/d/e/2PACX-1vQXaQU9XxsxnUIIeqmmf1PuYRuYtwviVXTv6Mz9Vo6_a4ty-XaJHSeZsptjWXS3wGGDG8Z4u16rvE7l/pubhtml  \\n\\n（注：根据中文阅读习惯调整了被动语态为主动表述，将\\\"appended\\\"译为\\\"追加至\\\"更符合表格操作场景；长链接保留原貌确保可访问性；\\\"sample sheet\\\"采用\\\"示例表格\\\"的译法既保持专业度又便于理解）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a66b7e6d-0602-4f6b-a9f6-76a63d590956\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        560,\n        313.32160655630304\n      ],\n      \"parameters\": {\n        \"width\": 226.36363118160727,\n        \"height\": 296.5755172289686,\n        \"content\": \"### 🚨 在此设置故事ID！\\n必须为有效的HN故事ID\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"42f93189-4bd8-4487-975a-f1c8f8365242\",\n      \"name\": \"Apply K-means Clustering Algorithm\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1202,\n        1160\n      ],\n      \"parameters\": {\n        \"language\": \"python\",\n        \"pythonCode\": \"import numpy as np\\nfrom sklearn.cluster import KMeans\\n\\n# get vectors for all answers\\npoint_ids = [item.id for item in _input.first().json.result.points]\\nvectors = [item.vector.to_py() for item in _input.first().json.result.points]\\nvectors_array = np.array(vectors)\\n\\n# apply k-means clustering where n_clusters = 5\\n# this is a max and we'll discard some of these clusters later\\nkmeans = KMeans(n_clusters=min(len(vectors), 5), random_state=42).fit(vectors_array)\\nlabels = kmeans.labels_\\nunique_labels = set(labels)\\n\\n# Extract and print points in each cluster\\nclusters = {}\\nfor label in set(labels):\\n    clusters[label] = vectors_array[labels == label]\\n\\n# return Qdrant point ids for each cluster\\n# we'll use these ids to fetch the payloads from the vector store.\\noutput = []\\nfor cluster_id, cluster_points in clusters.items():\\n    points = [point_ids[i] for i in range(len(labels)) if labels[i] == cluster_id]\\n    output.append({\\n        \\\"id\\\": f\\\"Cluster {cluster_id}\\\",\\n        \\\"total\\\": len(cluster_points),\\n        \\\"points\\\": points\\n    })\\n\\nreturn {\\\"json\\\": {\\\"output\\\": output } }\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"4ddeab09-e401-41ad-861f-560b9e92bf89\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -180,\n        40\n      ],\n      \"parameters\": {\n        \"width\": 400.381109509268,\n        \"height\": 612.855812336249,\n        \"content\": \"## 试试看吧！\\n\\n### 该工作流能从HN故事评论区提取高颗粒度的社群洞见，特别适合处理海量评论场景。\\n\\n* 导入HN故事评论并向量化存储至Qdrant向量数据库\\n* 通过K-means聚类算法识别热门话题群落\\n* 每个有效聚类群组经由LLM智能分析与摘要生成\\n* 最终将LLM分析结果与聚类数据回传至电子表格\\n\\n参考谷歌表格示例请见：https://docs.google.com/spreadsheets/d/e/2PACX-1vQXaQU9XxsxnUIIeqmmf1PuYRuYtwviVXTv6Mz9Vo6_a4ty-XaJHSeZsptjWXS3wGGDG8Z4u16rvE7l/pubhtml\\n\\n### 需要帮助？\\n加入[Discord讨论群](https://discord.com/invite/XPKeKXeB7d)或访问[官方论坛](https://community.n8n.io/)提问！\\n\\n祝您探索愉快！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eea1b301-f030-48a9-bcfc-63fe3e1aac0d\",\n      \"name\": \"Information Extractor\",\n      \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\",\n      \"position\": [\n        2260,\n        1140\n      ],\n      \"parameters\": {\n        \"text\": \"=The {{ $json.result.length }} comments were:\\n{{\\n$json.result.map(item =>\\n`* Commenter \\\"${item.payload.metadata.item_author}\\\" says the following: \\\"${item.payload.content.replaceAll('\\\"', '\\\\\\\"').replaceAll('\\\\n', ' ')}\\\"`\\n).join('\\\\n')\\n}}\",\n        \"options\": {\n          \"systemPromptTemplate\": \"=You help summarise a selection of forum comments for an article called \\\"{{ $json.result[0].payload.metadata.story_title }}\\\".\\nThe {{ $json.result.length }} comments were selected because their contents were similar in context.\\n\\nYour task is to: \\n* summarise the given comments into a short paragraph. Provide an insight from this summary and what we could learn from the comments.\\n* determine if the overall sentiment of all the listed responses to be either strongly negative, negative, neutral, positive or strongly positive.\"\n        },\n        \"schemaType\": \"fromJson\",\n        \"jsonSchemaExample\": \"{\\n\\t\\\"Insight\\\": \\\"\\\",\\n    \\\"Sentiment\\\": \\\"\\\",\\n    \\\"Suggested Improvements\\\": \\\"\\\"\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bee4dd57-c907-418f-ad87-21c6ce4e6698\",\n      \"name\": \"Sticky Note12\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        280,\n        660\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 323.2987132716669,\n        \"height\": 80,\n        \"content\": \"### 仅需运行一次！\\n如果因任何原因需要多次运行，请务必先清除现有数据。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"429e080d-5a94-442c-a2b0-6a12f03a8a98\",\n      \"name\": \"Sticky Note11\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        840,\n        1440\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 323.2987132716669,\n        \"height\": 110.05160146874424,\n        \"content\": \"### 首次运行？\\n首次运行时会有短暂延迟，因为代码节点需要下载必要的依赖包。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Hacker News\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Comments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Comments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Find Comments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Apply K-means Clustering Algorithm\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Variables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clear Existing Comments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Variables1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Find Comments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Clusters To List\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Only Clusters With 3+ points\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Information Extractor\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Default Data Loader\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Qdrant Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Qdrant Vector Store\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prep Values For Trigger\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Payload of Points\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Information Extractor\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Information Extractor\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Prep Output For Export\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prep Output For Export\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Export To Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Clear Existing Comments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Hacker News\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Prep Values For Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Trigger Insights\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Variables1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Only Clusters With 3+ points\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Payload of Points\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Recursive Character Text Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Default Data Loader\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Variables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Apply K-means Clustering Algorithm\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clusters To List\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}