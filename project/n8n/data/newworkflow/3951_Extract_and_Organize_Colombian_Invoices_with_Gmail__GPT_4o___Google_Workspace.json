{
  "url": "https://n8n.io/workflows/3951-extract-and-organize-colombian-invoices-with-gmail-gpt-4o-and-google-workspace/",
  "title": "Extract and Organize Colombian Invoices with Gmail, GPT-4o & Google Workspace",
  "author": "Juan Sanchez",
  "publish_date": "Last update 16 days ago",
  "publish_date_absolute": "2025-05-10",
  "categories": [
    {
      "name": "Finance"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"Xs7x61YMFsbpB4vg\",\"meta\":{\"instanceId\":\"51270372ea87f40bc06437a6d111ae29e684e524a2e6c52d7a6f84dde18d4a17\",\"templateCredsSetupCompleted\":true},\"name\":\"Colombian Invoices Processing\",\"tags\":[],\"nodes\":[{\"id\":\"3bcb9b75-a697-4948-974a-f4ea29947bfa\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[880,445],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"03076b82-d824-4fe1-b659-7fbfa2f3fd87\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[2420,790],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"BfhecJBx32L0a2gT\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.2},{\"id\":\"201ae476-d189-4ba7-9a96-6f272b95795d\",\"name\":\"Calculator\",\"type\":\"@n8n/n8n-nodes-langchain.toolCalculator\",\"position\":[2540,790],\"parameters\":{},\"typeVersion\":1},{\"id\":\"9aca7e2d-af43-4de6-aa07-2e880d660d20\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[2660,790],\"parameters\":{\"jsonSchemaExample\":\"{\\n  \\\"Tipo\\\": \\\"Factura\\\",\\n  \\\"Numero_Factura\\\": \\\"FAC-2025-00123\\\",\\n  \\\"Fecha_Emision\\\": \\\"2025-05-07\\\",\\n  \\\"CUFE\\\": \\\"f4a6c8b03e1e4e8b90f9e3e2945d8b23c5b4e2fa\\\",\\n  \\\"NIT_Emisor\\\": \\\"900123456\\\",\\n  \\\"Razon_Social_Emisor\\\": \\\"Comercializadora XYZ S.A.S.\\\",\\n  \\\"NIT_Receptor\\\": \\\"1012345678\\\",\\n  \\\"Valor_Antes_Impuesto\\\": 1000000,\\n  \\\"Impuesto\\\": 190000,\\n  \\\"Total\\\": 1190000,\\n  \\\"Resumen_Compra\\\": \\\"Compra de equipos de oficina incluyendo escritorios y sillas ejecutivas\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"7793086c-b1f7-49f7-b67a-77721087fea5\",\"name\":\"On Email receipt\",\"type\":\"n8n-nodes-base.gmailTrigger\",\"notes\":\"Executed every 30 minutes as it's for personal invoices, one can wait\",\"position\":[0,445],\"parameters\":{\"simple\":false,\"filters\":{\"q\":\"has:attachment filename:zip\"},\"options\":{\"downloadAttachments\":true},\"pollTimes\":{\"item\":[{\"mode\":\"everyX\",\"unit\":\"minutes\",\"value\":30}]}},\"credentials\":{\"gmailOAuth2\":{\"id\":\"DIVionghQwRFOcIe\",\"name\":\"Gmail account\"}},\"notesInFlow\":false,\"typeVersion\":1.2},{\"id\":\"97460873-8220-476b-97e7-cf433be3f9cd\",\"name\":\"Get Filename and mimeType\",\"type\":\"n8n-nodes-base.code\",\"position\":[220,445],\"parameters\":{\"jsCode\":\"let results = [];\\n\\nfor (item of items) {\\n    for (key of Object.keys(item.binary)) {\\n        results.push({\\n            json: {\\n                fileName: item.binary[key].fileName,\\n                mimeType: item.binary[key].mimeType,\\n            },\\n            binary: {\\n                data: item.binary[key],\\n            }\\n        });\\n    }\\n}\\n\\nreturn results;\"},\"typeVersion\":2},{\"id\":\"e01cdfc7-c343-444e-a6ca-57b2139c3b6e\",\"name\":\"Filter ZIP files only\",\"type\":\"n8n-nodes-base.filter\",\"position\":[440,445],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"ccb7942e-8cef-480c-98a4-b5b68d98a235\",\"operator\":{\"type\":\"string\",\"operation\":\"endsWith\"},\"leftValue\":\"={{ $json.mimeType }}\",\"rightValue\":\"zip\"}]}},\"typeVersion\":2.2},{\"id\":\"855b3a55-5d2e-4da1-aef7-76bf559da876\",\"name\":\"Unzip Invoice\",\"type\":\"n8n-nodes-base.compression\",\"position\":[660,445],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"c48abfc9-dff9-49ef-bb59-212f2f1eb472\",\"name\":\"Just for style\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[1100,270],\"parameters\":{},\"typeVersion\":1},{\"id\":\"b84984d5-f736-40be-b0b5-2d0a245c79a6\",\"name\":\"Get filename and mimeType on extracted docs\",\"type\":\"n8n-nodes-base.code\",\"position\":[1100,470],\"parameters\":{\"jsCode\":\"let results = [];\\n\\nfor (item of items) {\\n    for (key of Object.keys(item.binary)) {\\n        results.push({\\n            json: {\\n                fileName: item.binary[key].fileName,\\n                mimeType: item.binary[key].mimeType,\\n            },\\n            binary: {\\n                data: item.binary[key],\\n            }\\n        });\\n    }\\n}\\n\\nreturn results;\"},\"typeVersion\":2},{\"id\":\"9ff8e500-8135-4960-81f5-fbc0945d45db\",\"name\":\"Split XML and PDF\",\"type\":\"n8n-nodes-base.switch\",\"position\":[1320,470],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"pdf\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"69784ebe-7edd-4e50-89c3-8440a662f25a\",\"operator\":{\"type\":\"string\",\"operation\":\"contains\"},\"leftValue\":\"={{ $json.mimeType }}\",\"rightValue\":\"pdf\"}]},\"renameOutput\":true},{\"outputKey\":\"xml\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"90f50e8d-bd72-4fdf-b854-e473b117377a\",\"operator\":{\"type\":\"string\",\"operation\":\"contains\"},\"leftValue\":\"={{ $json.mimeType }}\",\"rightValue\":\"xml\"}]},\"renameOutput\":true}]},\"options\":{\"fallbackOutput\":\"none\"}},\"typeVersion\":3.2},{\"id\":\"1132645b-9270-4581-9707-59bec4ee2417\",\"name\":\"Extract PDF Data\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[1760,445],\"parameters\":{\"options\":{\"joinPages\":true},\"operation\":\"pdf\"},\"typeVersion\":1},{\"id\":\"215b29f9-0e0a-4989-a6d3-65faa5941729\",\"name\":\"Extract XML Data\",\"type\":\"n8n-nodes-base.extractFromFile\",\"position\":[1540,645],\"parameters\":{\"options\":{},\"operation\":\"xml\"},\"typeVersion\":1},{\"id\":\"7fa1555e-11ae-4fca-b526-52d2b4a1773e\",\"name\":\"Convert to JSON\",\"type\":\"n8n-nodes-base.xml\",\"position\":[1760,645],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"cb581772-cb26-4d36-b1b9-c290f5a0a4ea\",\"name\":\"Append both Docs\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1980,570],\"parameters\":{},\"typeVersion\":3.1},{\"id\":\"225b6fd6-4cfd-43d7-9c3e-fe20d97831d7\",\"name\":\"Aggregate all Data into 1 list\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[2200,580],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\"},\"typeVersion\":1},{\"id\":\"947001a4-bcdc-4421-bdce-07d41fc85c88\",\"name\":\"Extract Data from PDF and XML\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[2452,570],\"parameters\":{\"text\":\"=PDF:\\n{{ $json.data[0].text }}\\n\\nXML: \\n{{ $json.data[1].AttachedDocument['cac:Attachment']['cac:ExternalReference']['cbc:Description'] }}\",\"options\":{\"systemMessage\":\"=Extrae del PDF y el XML proporcionados la siguiente información:\\n\\t•\\tTipo: Factura o Nota Crédito\\n\\t•\\tNúmero de factura\\n\\t•\\tFecha de emisión (formato: YYYY-MM-DD)\\n\\t•\\tNIT del emisor (sin dígito de verificación, solo los números antes del guion)\\n\\t•\\tNIT del receptor (sin dígito de verificación)\\n\\t•\\tRazón social del emisor\\n\\t•\\tValor antes de IVA\\n\\t•\\tValor del IVA\\n\\t•\\tValor total de la factura\\n\\t•\\tCUFE\\n\\t•\\tResumen de la compra (máximo 20 palabras, describiendo en términos generales qué se compró, usando solo mayúsculas donde corresponda gramaticalmente. Ejemplo: “CONSULTA DE PRIMERA VEZ POR OPTOMETRIA” → “Consulta de primera vez por optometría”)\\n\\nVerifica que:\\nValor total = Valor antes de IVA + Valor del IVA, usando la herramienta Calculator.\"},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.9},{\"id\":\"3eb86ff2-7a4b-4e17-af92-057b715fd69d\",\"name\":\"Create initial PDF\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[2530,220],\"parameters\":{\"name\":\"={{ $json.fileName }}\",\"driveId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"My Drive\"},\"options\":{},\"folderId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1v0sqvMCFAN02WzXdTuoYF8KGw7Y0Tmf1\",\"cachedResultUrl\":\"https://drive.google.com/drive/folders/xxxxxxx\",\"cachedResultName\":\"Facturas\"}},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"UeBZlmzBxNp4aScN\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"cbe7bcf2-972b-4110-8d1c-075fcc34497a\",\"name\":\"Merge both flows\",\"type\":\"n8n-nodes-base.merge\",\"position\":[2860,495],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineAll\"},\"typeVersion\":3.1},{\"id\":\"14243355-766d-425d-90d1-6f114903636a\",\"name\":\"Update PDF with actual name\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[3080,495],\"parameters\":{\"fileId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $json.id }}\"},\"options\":{},\"operation\":\"update\",\"changeFileContent\":\"\",\"newUpdatedFileName\":\"={{ $json.output.Fecha_Emision }}-{{ $json.output.Numero_Factura }}.pdf\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"UeBZlmzBxNp4aScN\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"aa623454-553a-4b95-b320-964c68dd7555\",\"name\":\"Get Current Date\",\"type\":\"n8n-nodes-base.code\",\"notes\":\"Not in use actually...\",\"position\":[3300,495],\"parameters\":{\"jsCode\":\"const now = new Date();\\n\\n// Get Colombia time values\\nconst options = { timeZone: 'America/Bogota', year: 'numeric', month: '2-digit', day: '2-digit' };\\nconst formatter = new Intl.DateTimeFormat('en-CA', options); // en-CA gives YYYY-MM-DD format\\nconst [year, month, day] = formatter.format(now).split('-');\\n\\nreturn [\\n  {\\n    json: {\\n      year,\\n      month,\\n      day\\n    }\\n  }\\n];\"},\"typeVersion\":2},{\"id\":\"466a2885-adba-41ce-8a51-8c36db58a113\",\"name\":\"Create or update row\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[3520,620],\"parameters\":{\"columns\":{\"value\":{\"Key\":\"={{ $('Merge both flows').item.json.output.NIT_Emisor }}-{{ $('Merge both flows').item.json.output.Numero_Factura }}\",\"CUFE\":\"={{ $('Merge both flows').item.json.output.CUFE }}\",\"Tipo\":\"={{ $('Merge both flows').item.json.output.Tipo }}\",\"Fecha\":\"={{ $('Merge both flows').item.json.output.Fecha_Emision }}\",\"Total\":\"={{ $('Merge both flows').item.json.output.Total }}\",\"Factura\":\"={{ $('Extract Data from PDF and XML').item.json.output.Numero_Factura }}\",\"Impuesto\":\"={{ $('Merge both flows').item.json.output.Impuesto }}\",\"Subtotal\":\"={{ $('Merge both flows').item.json.output.Valor_Antes_Impuesto }}\",\"NIT Emisor\":\"={{ $('Merge both flows').item.json.output.NIT_Emisor }}\",\"NIT Receptor\":\"={{ $('Merge both flows').item.json.output.NIT_Receptor }}\",\"Razón Social\":\"={{ $('Merge both flows').item.json.output.Razon_Social_Emisor }}\",\"Resumen Compra\":\"={{ $('Merge both flows').item.json.output.Resumen_Compra }}\"},\"schema\":[{\"id\":\"Factura\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Factura\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Tipo\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Tipo\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Key\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Key\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Fecha\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Fecha\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Razón Social\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Razón Social\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"NIT Emisor\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"NIT Emisor\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"NIT Receptor\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"NIT Receptor\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Subtotal\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Subtotal\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Impuesto\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Impuesto\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Total\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Total\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"CUFE\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"CUFE\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Resumen Compra\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Resumen Compra\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[\"Key\"],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"appendOrUpdate\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/xxxxx/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1HmtB_MXS7oOJn86V3dcBjLdvnw3aWLkD36avc147zuI\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/xxxxx/edit?usp=drivesdk\",\"cachedResultName\":\"Facturas\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"phQyVnZ7ZojxewDR\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"e7076c9e-1998-4aab-bb43-9d9f89a3377f\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-60,-480],\"parameters\":{\"width\":960,\"height\":880,\"content\":\"# 🧾 Colombian electronic invoices processing\\n\\nThis N8N workflow automates the extraction and organization of **personal electronic invoices** in Colombia received via **Gmail**. It includes the following key steps:\\n\\n## 🔁 Flow Summary\\n\\n1. **Email Trigger**\\n   - Polls Gmail every **30 minutes** for emails with `.zip` attachments (assumed to contain invoices).\\n   - Following DIAN requirements in Colombia\\n\\n2. **ZIP File Handling**\\n   - Extracts all files.\\n   - Filters only **PDF** and **XML** files for processing.\\n\\n3. **Data Extraction & Processing**\\n   - Uses **LangChain Agent + OpenAI (GPT-4o-mini)** to extract:\\n     - Tipo de documento (Factura / Nota Crédito)\\n     - Número de factura\\n     - Fecha de emisión (YYYY-MM-DD)\\n     - NIT emisor y receptor (sin dígito de verificación)\\n     - Razón social del emisor\\n     - Subtotal, IVA, Total\\n     - CUFE\\n     - Resumen de compra (max 20 words, formatted sentence)\\n\\n4. **Validation**\\n   - Ensures **Total = Subtotal + IVA** using a calculator node.\\n\\n5. **Storage**\\n   - Uploads the original PDF to **Google Drive**.\\n   - Renames the file to: `YYYY-MM-DD-NUMERO_FACTURA.pdf`.\\n   - Inserts or updates invoice details in **Google Sheets** using a unique `Key` (`NIT_Emisor + Numero_Factura`) to prevent duplication.\\n\\n---\\n\\n> ⚙️ Designed for personal use with minimal latency tolerance and high automation reliability.\"},\"typeVersion\":1}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"fefb527f-7457-46bc-a80c-ca290b163bce\",\"connections\":{\"Calculator\":{\"ai_tool\":[[{\"node\":\"Extract Data from PDF and XML\",\"type\":\"ai_tool\",\"index\":0}]]},\"Unzip Invoice\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Convert to JSON\":{\"main\":[[{\"node\":\"Append both Docs\",\"type\":\"main\",\"index\":1}]]},\"Loop Over Items\":{\"main\":[[{\"node\":\"Just for style\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get filename and mimeType on extracted docs\",\"type\":\"main\",\"index\":0}]]},\"Append both Docs\":{\"main\":[[{\"node\":\"Aggregate all Data into 1 list\",\"type\":\"main\",\"index\":0}]]},\"Extract PDF Data\":{\"main\":[[{\"node\":\"Append both Docs\",\"type\":\"main\",\"index\":0}]]},\"Extract XML Data\":{\"main\":[[{\"node\":\"Convert to JSON\",\"type\":\"main\",\"index\":0}]]},\"Get Current Date\":{\"main\":[[{\"node\":\"Create or update row\",\"type\":\"main\",\"index\":0}]]},\"Merge both flows\":{\"main\":[[{\"node\":\"Update PDF with actual name\",\"type\":\"main\",\"index\":0}]]},\"On Email receipt\":{\"main\":[[{\"node\":\"Get Filename and mimeType\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Extract Data from PDF and XML\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Split XML and PDF\":{\"main\":[[{\"node\":\"Create initial PDF\",\"type\":\"main\",\"index\":0},{\"node\":\"Extract PDF Data\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Extract XML Data\",\"type\":\"main\",\"index\":0}]]},\"Create initial PDF\":{\"main\":[[{\"node\":\"Merge both flows\",\"type\":\"main\",\"index\":0}]]},\"Create or update row\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Filter ZIP files only\":{\"main\":[[{\"node\":\"Unzip Invoice\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Extract Data from PDF and XML\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Get Filename and mimeType\":{\"main\":[[{\"node\":\"Filter ZIP files only\",\"type\":\"main\",\"index\":0}]]},\"Update PDF with actual name\":{\"main\":[[{\"node\":\"Get Current Date\",\"type\":\"main\",\"index\":0}]]},\"Extract Data from PDF and XML\":{\"main\":[[{\"node\":\"Merge both flows\",\"type\":\"main\",\"index\":1}]]},\"Aggregate all Data into 1 list\":{\"main\":[[{\"node\":\"Extract Data from PDF and XML\",\"type\":\"main\",\"index\":0}]]},\"Get filename and mimeType on extracted docs\":{\"main\":[[{\"node\":\"Split XML and PDF\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# 🧾 Personal Invoice Processor\n\nThis N8N workflow automates the extraction and organization of **personal invoices in Colombia** received via **Gmail**. It includes the following key steps:\n\n## 🔁 Flow Summary\n\n  1. **Email Trigger**\n\n     * Polls Gmail every **30 minutes** for emails with `.zip` attachments (assumed to contain invoices).\n     * Expects ZIP file following DIAN standards.\n  2. **ZIP File Handling**\n\n     * Extracts all files.\n     * Filters only **PDF** and **XML** files for processing.\n  3. **Data Extraction & Processing**\n\n     * Uses **LangChain Agent + OpenAI (GPT-4o-mini)** to extract: \n       * Tipo de documento (Factura / Nota Crédito)\n       * Número de factura\n       * Fecha de emisión (YYYY-MM-DD)\n       * NIT emisor y receptor (sin dígito de verificación)\n       * Razón social del emisor\n       * Subtotal, IVA, Total\n       * CUFE\n       * Resumen de compra (max 20 words, formatted sentence)\n  4. **Validation**\n\n     * Ensures **Total = Subtotal + IVA** using a calculator node.\n  5. **Storage**\n\n     * Uploads the original PDF to **Google Drive**.\n     * Renames the file to: `YYYY-MM-DD-NUMERO_FACTURA.pdf`.\n     * Inserts or updates invoice details in **Google Sheets** using a unique `Key` (`NIT_Emisor + Numero_Factura`) to prevent duplication.\n\n\n\n* * *\n\n> ⚙️ Designed for personal use with minimal latency tolerance and high automation reliability.\n",
  "crawled_at": "2025-05-26T06:05:50.717542",
  "readme_zh": "# 🧾 个人发票处理系统\n\n该N8N工作流可自动提取并整理通过**Gmail**接收的**哥伦比亚个人发票**，主要包含以下步骤：\n\n## 🔁 流程概览\n\n  1. **邮件触发**\n\n    * 每**30分钟**扫描Gmail中带有`.zip`附件的邮件（假设内含发票）\n    * 要求ZIP文件符合DIAN标准\n  2. **压缩包处理**\n\n    * 解压所有文件\n    * 仅筛选**PDF**和**XML**文件进行后续处理\n  3. **数据提取**\n\n    * 使用**LangChain智能体+OpenAI(GPT-4o-mini)**提取：\n      * 单据类型（发票/贷记通知单）\n      * 发票编号\n      * 签发日期（YYYY-MM-DD格式）\n      * 发/收件方税号（不含校验位）\n      * 开票方公司名称\n      * 小计金额、增值税、总金额\n      * 电子发票唯一码(CUFE)\n      * 消费摘要（20词以内，完整句式）\n  4. **数据校验**\n\n    * 通过计算节点验证**总金额=小计+增值税**\n  5. **存储归档**\n\n    * 将原始PDF上传至**Google云端硬盘**\n    * 按`YYYY-MM-DD-发票编号.pdf`格式重命名文件\n    * 使用唯一键`Key`（开票方税号+发票编号）在**Google表格**中插入或更新记录，避免重复",
  "title_zh": "使用Gmail、GPT-4o和Google Workspace提取并整理哥伦比亚发票",
  "publish_date_zh": "上次更新于4天前",
  "workflow_json_zh": "{\n  \"id\": \"Xs7x61YMFsbpB4vg\",\n  \"meta\": {\n    \"instanceId\": \"51270372ea87f40bc06437a6d111ae29e684e524a2e6c52d7a6f84dde18d4a17\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Colombian Invoices Processing\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"3bcb9b75-a697-4948-974a-f4ea29947bfa\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        880,\n        445\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"03076b82-d824-4fe1-b659-7fbfa2f3fd87\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        2420,\n        790\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"BfhecJBx32L0a2gT\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"201ae476-d189-4ba7-9a96-6f272b95795d\",\n      \"name\": \"Calculator\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolCalculator\",\n      \"position\": [\n        2540,\n        790\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9aca7e2d-af43-4de6-aa07-2e880d660d20\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        2660,\n        790\n      ],\n      \"parameters\": {\n        \"jsonSchemaExample\": \"{\\n  \\\"Tipo\\\": \\\"Factura\\\",\\n  \\\"Numero_Factura\\\": \\\"FAC-2025-00123\\\",\\n  \\\"Fecha_Emision\\\": \\\"2025-05-07\\\",\\n  \\\"CUFE\\\": \\\"f4a6c8b03e1e4e8b90f9e3e2945d8b23c5b4e2fa\\\",\\n  \\\"NIT_Emisor\\\": \\\"900123456\\\",\\n  \\\"Razon_Social_Emisor\\\": \\\"Comercializadora XYZ S.A.S.\\\",\\n  \\\"NIT_Receptor\\\": \\\"1012345678\\\",\\n  \\\"Valor_Antes_Impuesto\\\": 1000000,\\n  \\\"Impuesto\\\": 190000,\\n  \\\"Total\\\": 1190000,\\n  \\\"Resumen_Compra\\\": \\\"Compra de equipos de oficina incluyendo escritorios y sillas ejecutivas\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"7793086c-b1f7-49f7-b67a-77721087fea5\",\n      \"name\": \"On Email receipt\",\n      \"type\": \"n8n-nodes-base.gmailTrigger\",\n      \"notes\": \"Executed every 30 minutes as it's for personal invoices, one can wait\",\n      \"position\": [\n        0,\n        445\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"filters\": {\n          \"q\": \"has:attachment filename:zip\"\n        },\n        \"options\": {\n          \"downloadAttachments\": true\n        },\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyX\",\n              \"unit\": \"minutes\",\n              \"value\": 30\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"DIVionghQwRFOcIe\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"notesInFlow\": false,\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"97460873-8220-476b-97e7-cf433be3f9cd\",\n      \"name\": \"Get Filename and mimeType\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        220,\n        445\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let results = [];\\n\\nfor (item of items) {\\n    for (key of Object.keys(item.binary)) {\\n        results.push({\\n            json: {\\n                fileName: item.binary[key].fileName,\\n                mimeType: item.binary[key].mimeType,\\n            },\\n            binary: {\\n                data: item.binary[key],\\n            }\\n        });\\n    }\\n}\\n\\nreturn results;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"e01cdfc7-c343-444e-a6ca-57b2139c3b6e\",\n      \"name\": \"Filter ZIP files only\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        440,\n        445\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"ccb7942e-8cef-480c-98a4-b5b68d98a235\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"endsWith\"\n              },\n              \"leftValue\": \"={{ $json.mimeType }}\",\n              \"rightValue\": \"zip\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"855b3a55-5d2e-4da1-aef7-76bf559da876\",\n      \"name\": \"Unzip Invoice\",\n      \"type\": \"n8n-nodes-base.compression\",\n      \"position\": [\n        660,\n        445\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"c48abfc9-dff9-49ef-bb59-212f2f1eb472\",\n      \"name\": \"Just for style\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        1100,\n        270\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b84984d5-f736-40be-b0b5-2d0a245c79a6\",\n      \"name\": \"Get filename and mimeType on extracted docs\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1100,\n        470\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let results = [];\\n\\nfor (item of items) {\\n    for (key of Object.keys(item.binary)) {\\n        results.push({\\n            json: {\\n                fileName: item.binary[key].fileName,\\n                mimeType: item.binary[key].mimeType,\\n            },\\n            binary: {\\n                data: item.binary[key],\\n            }\\n        });\\n    }\\n}\\n\\nreturn results;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"9ff8e500-8135-4960-81f5-fbc0945d45db\",\n      \"name\": \"Split XML and PDF\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1320,\n        470\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"pdf\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"69784ebe-7edd-4e50-89c3-8440a662f25a\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    },\n                    \"leftValue\": \"={{ $json.mimeType }}\",\n                    \"rightValue\": \"pdf\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"xml\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"90f50e8d-bd72-4fdf-b854-e473b117377a\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    },\n                    \"leftValue\": \"={{ $json.mimeType }}\",\n                    \"rightValue\": \"xml\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"none\"\n        }\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"1132645b-9270-4581-9707-59bec4ee2417\",\n      \"name\": \"Extract PDF Data\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        1760,\n        445\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"joinPages\": true\n        },\n        \"operation\": \"pdf\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"215b29f9-0e0a-4989-a6d3-65faa5941729\",\n      \"name\": \"Extract XML Data\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"position\": [\n        1540,\n        645\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"xml\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7fa1555e-11ae-4fca-b526-52d2b4a1773e\",\n      \"name\": \"Convert to JSON\",\n      \"type\": \"n8n-nodes-base.xml\",\n      \"position\": [\n        1760,\n        645\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cb581772-cb26-4d36-b1b9-c290f5a0a4ea\",\n      \"name\": \"Append both Docs\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1980,\n        570\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 3.1\n    },\n    {\n      \"id\": \"225b6fd6-4cfd-43d7-9c3e-fe20d97831d7\",\n      \"name\": \"Aggregate all Data into 1 list\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        2200,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"947001a4-bcdc-4421-bdce-07d41fc85c88\",\n      \"name\": \"Extract Data from PDF and XML\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        2452,\n        570\n      ],\n      \"parameters\": {\n        \"text\": \"=PDF:\\n{{ $json.data[0].text }}\\n\\nXML: \\n{{ $json.data[1].AttachedDocument['cac:Attachment']['cac:ExternalReference']['cbc:Description'] }}\",\n        \"options\": {\n          \"systemMessage\": \"=Extrae del PDF y el XML proporcionados la siguiente información:\\n\\t•\\tTipo: Factura o Nota Crédito\\n\\t•\\tNúmero de factura\\n\\t•\\tFecha de emisión (formato: YYYY-MM-DD)\\n\\t•\\tNIT del emisor (sin dígito de verificación, solo los números antes del guion)\\n\\t•\\tNIT del receptor (sin dígito de verificación)\\n\\t•\\tRazón social del emisor\\n\\t•\\tValor antes de IVA\\n\\t•\\tValor del IVA\\n\\t•\\tValor total de la factura\\n\\t•\\tCUFE\\n\\t•\\tResumen de la compra (máximo 20 palabras, describiendo en términos generales qué se compró, usando solo mayúsculas donde corresponda gramaticalmente. Ejemplo: “CONSULTA DE PRIMERA VEZ POR OPTOMETRIA” → “Consulta de primera vez por optometría”)\\n\\nVerifica que:\\nValor total = Valor antes de IVA + Valor del IVA, usando la herramienta Calculator.\"\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"3eb86ff2-7a4b-4e17-af92-057b715fd69d\",\n      \"name\": \"Create initial PDF\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        2530,\n        220\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $json.fileName }}\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\"\n        },\n        \"options\": {},\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1v0sqvMCFAN02WzXdTuoYF8KGw7Y0Tmf1\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/folders/xxxxxxx\",\n          \"cachedResultName\": \"Facturas\"\n        }\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"UeBZlmzBxNp4aScN\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"cbe7bcf2-972b-4110-8d1c-075fcc34497a\",\n      \"name\": \"Merge both flows\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2860,\n        495\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineAll\"\n      },\n      \"typeVersion\": 3.1\n    },\n    {\n      \"id\": \"14243355-766d-425d-90d1-6f114903636a\",\n      \"name\": \"Update PDF with actual name\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        3080,\n        495\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.id }}\"\n        },\n        \"options\": {},\n        \"operation\": \"update\",\n        \"changeFileContent\": \"\",\n        \"newUpdatedFileName\": \"={{ $json.output.Fecha_Emision }}-{{ $json.output.Numero_Factura }}.pdf\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"UeBZlmzBxNp4aScN\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"aa623454-553a-4b95-b320-964c68dd7555\",\n      \"name\": \"Get Current Date\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"notes\": \"Not in use actually...\",\n      \"position\": [\n        3300,\n        495\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const now = new Date();\\n\\n// Get Colombia time values\\nconst options = { timeZone: 'America/Bogota', year: 'numeric', month: '2-digit', day: '2-digit' };\\nconst formatter = new Intl.DateTimeFormat('en-CA', options); // en-CA gives YYYY-MM-DD format\\nconst [year, month, day] = formatter.format(now).split('-');\\n\\nreturn [\\n  {\\n    json: {\\n      year,\\n      month,\\n      day\\n    }\\n  }\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"466a2885-adba-41ce-8a51-8c36db58a113\",\n      \"name\": \"Create or update row\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        3520,\n        620\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"Key\": \"={{ $('Merge both flows').item.json.output.NIT_Emisor }}-{{ $('Merge both flows').item.json.output.Numero_Factura }}\",\n            \"CUFE\": \"={{ $('Merge both flows').item.json.output.CUFE }}\",\n            \"Tipo\": \"={{ $('Merge both flows').item.json.output.Tipo }}\",\n            \"Fecha\": \"={{ $('Merge both flows').item.json.output.Fecha_Emision }}\",\n            \"Total\": \"={{ $('Merge both flows').item.json.output.Total }}\",\n            \"Factura\": \"={{ $('Extract Data from PDF and XML').item.json.output.Numero_Factura }}\",\n            \"Impuesto\": \"={{ $('Merge both flows').item.json.output.Impuesto }}\",\n            \"Subtotal\": \"={{ $('Merge both flows').item.json.output.Valor_Antes_Impuesto }}\",\n            \"NIT Emisor\": \"={{ $('Merge both flows').item.json.output.NIT_Emisor }}\",\n            \"NIT Receptor\": \"={{ $('Merge both flows').item.json.output.NIT_Receptor }}\",\n            \"Razón Social\": \"={{ $('Merge both flows').item.json.output.Razon_Social_Emisor }}\",\n            \"Resumen Compra\": \"={{ $('Merge both flows').item.json.output.Resumen_Compra }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"Factura\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Factura\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Tipo\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Tipo\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Key\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Key\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Fecha\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Fecha\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Razón Social\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Razón Social\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"NIT Emisor\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"NIT Emisor\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"NIT Receptor\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"NIT Receptor\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Subtotal\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Subtotal\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Impuesto\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Impuesto\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Total\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Total\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"CUFE\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"CUFE\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Resumen Compra\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Resumen Compra\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"Key\"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"appendOrUpdate\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/xxxxx/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1HmtB_MXS7oOJn86V3dcBjLdvnw3aWLkD36avc147zuI\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/xxxxx/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Facturas\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"phQyVnZ7ZojxewDR\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"e7076c9e-1998-4aab-bb43-9d9f89a3377f\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -60,\n        -480\n      ],\n      \"parameters\": {\n        \"width\": 960,\n        \"height\": 880,\n        \"content\": \"# 🧾 哥伦比亚电子发票处理流程\\n\\n该N8N工作流可自动提取并整理通过**Gmail**接收的哥伦比亚**个人电子发票**，包含以下关键步骤：\\n\\n## 🔁 流程概览\\n\\n1. **邮件触发**\\n   - 每**30分钟**扫描Gmail中带`.zip`附件的邮件（假设内含发票）\\n   - 遵循哥伦比亚税务机构DIAN的规范要求\\n\\n2. **压缩文件处理**\\n   - 解压所有文件\\n   - 仅筛选**PDF**和**XML**文件进行后续处理\\n\\n3. **数据提取与处理**\\n   - 使用**LangChain智能体+OpenAI(GPT-4o-mini)**提取：\\n     - 单据类型（发票/贷记凭证）\\n     - 发票编号\\n     - 签发日期（YYYY-MM-DD格式）\\n     - 收/发方税号（不含校验位）\\n     - 开票方公司名称\\n     - 小计金额、增值税、总金额\\n     - 电子发票唯一码(CUFE)\\n     - 消费摘要（20词以内，完整句式）\\n\\n4. **数据验证**\\n   - 通过计算节点确保**总金额=小计+增值税**\\n\\n5. **存储归档**\\n   - 将原始PDF上传至**Google云端硬盘**\\n   - 按`YYYY-MM-DD-发票编号.pdf`格式重命名文件\\n   - 使用唯一键`开票方税号+发票编号`在**Google表格**中插入或更新记录，避免重复\\n\\n---\\n\\n> ⚙️ 专为个人使用设计，具有低延迟容忍度与高自动化可靠性特点\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"fefb527f-7457-46bc-a80c-ca290b163bce\",\n  \"connections\": {\n    \"Calculator\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Extract Data from PDF and XML\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Unzip Invoice\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to JSON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Append both Docs\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Just for style\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get filename and mimeType on extracted docs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Append both Docs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate all Data into 1 list\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract PDF Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Append both Docs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract XML Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert to JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Current Date\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create or update row\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge both flows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update PDF with actual name\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On Email receipt\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Filename and mimeType\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Extract Data from PDF and XML\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split XML and PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create initial PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Extract PDF Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Extract XML Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create initial PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge both flows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create or update row\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter ZIP files only\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Unzip Invoice\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Extract Data from PDF and XML\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Filename and mimeType\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter ZIP files only\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update PDF with actual name\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Current Date\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Data from PDF and XML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge both flows\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Aggregate all Data into 1 list\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Data from PDF and XML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get filename and mimeType on extracted docs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split XML and PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}