{
  "url": "https://n8n.io/workflows/2787-backup-n8n-workflows-to-bitbucket/",
  "title": "Backup n8n Workflows to Bitbucket",
  "author": "Gareth B. Davies",
  "publish_date": "Last update 4 months ago",
  "publish_date_absolute": "2025-01-26",
  "categories": [
    {
      "name": "Other"
    }
  ],
  "workflow_json": "{\"id\":\"23GPrqZjHnIVvTEa\",\"meta\":{\"instanceId\":\"[instance id auto generated]\",\"templateCredsSetupCompleted\":true},\"name\":\"Backup n8n Workflows to Bitbucket\",\"tags\":[],\"nodes\":[{\"id\":\"b3363b9d-ea6e-47b7-99f9-f48a21805886\",\"name\":\"Calculate Wait Time\",\"type\":\"n8n-nodes-base.code\",\"position\":[1400,-260],\"parameters\":{\"jsCode\":\"// Get all input items and ensure we have data\\nif ($input.all().length === 0 || !$input.all()[0].headers) {\\n  // If no headers available, return default wait time\\n  return { waitTime: 1 };\\n}\\n\\n// Check rate limit headers from previous request\\nconst headers = $input.all()[0].headers;\\nlet waitTime = 1; // Default 1 second\\n\\n// Check if we have rate limit information (safely)\\nconst remaining = parseInt(headers['x-ratelimit-remaining']) || null;\\nconst reset = parseInt(headers['x-ratelimit-reset']) || null;\\n\\n// Only adjust wait time if we have valid rate limit info\\nif (remaining !== null && reset !== null) {\\n  // If we're running low on requests, calculate a longer wait time\\n  if (remaining < 100) {\\n    // Calculate seconds until reset\\n    const now = Math.floor(Date.now() / 1000);\\n    const timeUntilReset = reset - now;\\n    \\n    // Spread remaining requests over time until reset\\n    // Add 10% buffer to be safe\\n    waitTime = Math.ceil((timeUntilReset / remaining) * 1.1);\\n  } else if (remaining < 500) {\\n    // Start slowing down earlier\\n    waitTime = 2;\\n  }\\n}\\n\\n// Cap maximum wait time at 30 seconds\\nwaitTime = Math.min(waitTime, 30);\\n\\nreturn { waitTime };\"},\"typeVersion\":2},{\"id\":\"3cbc2287-b36f-4839-87b7-be4a7eadcf79\",\"name\":\"Run Daily at 2 AM\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-120,-20],\"parameters\":{\"rule\":{\"interval\":[{\"triggerAtHour\":2}]}},\"typeVersion\":1.2},{\"id\":\"09b396aa-61e8-4631-8aae-7126fbd609e6\",\"name\":\"Get All Workflows\",\"type\":\"n8n-nodes-base.n8n\",\"position\":[320,-20],\"parameters\":{\"filters\":{},\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"[n8n-api-credential-id]\",\"name\":\"n8n Development Environment\"}},\"typeVersion\":1},{\"id\":\"c46b50cd-432f-4714-ac68-b6f92663b592\",\"name\":\"Loop Workflows\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[540,-20],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"2a27e85d-51c0-4f45-a7d6-6422fc8a439b\",\"name\":\"Get Existing Worfklow from Bitbucket\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueRegularOutput\",\"position\":[780,-20],\"parameters\":{\"url\":\"=https://api.bitbucket.org/2.0/repositories/{{ $('Set Bitbucket Workspace & Repository').item.json.WorkspaceSlug }}/{{ $('Set Bitbucket Workspace & Repository').item.json.RepositorySlug }}/src/main/{{ $json.name.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase() }}\",\"options\":{\"response\":{\"response\":{\"fullResponse\":true}},\"allowUnauthorizedCerts\":true},\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpBasicAuth\"},\"credentials\":{\"httpBasicAuth\":{\"id\":\"[bitbucket-credential-id]\",\"name\":\"Bitbucket\"}},\"retryOnFail\":false,\"typeVersion\":4.2,\"alwaysOutputData\":false},{\"id\":\"eeb52f03-dd60-46ae-ad86-1cabf7f6c20f\",\"name\":\"New or Changed?\",\"type\":\"n8n-nodes-base.if\",\"position\":[980,-20],\"parameters\":{\"options\":{\"ignoreCase\":true},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":false,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"2d5da90e-0f1d-436b-84d4-d82deaaa4b58\",\"operator\":{\"type\":\"number\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.error.status }}\",\"rightValue\":404},{\"id\":\"b7b9a48d-8954-4cc4-bf7a-ab30439ad930\",\"operator\":{\"type\":\"string\",\"operation\":\"notEquals\"},\"leftValue\":\"={{ $('Get Existing Worfklow from Bitbucket').item.json.data }}\",\"rightValue\":\"={{ JSON.stringify($('Loop Workflows').item.json, null, 2) }}\"}]}},\"typeVersion\":2.2},{\"id\":\"04400827-d331-4ee2-8a67-1238ea2dc969\",\"name\":\"Upload Workflow to Bitbucket\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1200,-260],\"parameters\":{\"url\":\"=https://api.bitbucket.org/2.0/repositories/{{ $('Set Bitbucket Workspace & Repository').item.json.WorkspaceSlug }}/{{ $('Set Bitbucket Workspace & Repository').item.json.RepositorySlug }}/src\",\"method\":\"POST\",\"options\":{\"redirect\":{\"redirect\":{\"maxRedirects\":5}},\"response\":{\"response\":{\"fullResponse\":true}}},\"sendBody\":true,\"sendHeaders\":true,\"authentication\":\"genericCredentialType\",\"bodyParameters\":{\"parameters\":[{\"name\":\"message\",\"value\":\"={{ $('Loop Workflows').item.json.name + ' [' + $now.format('yyyy-MM-dd HH:mm:ss') +']' }}\"},{\"name\":\"={{ $('Loop Workflows').item.json.name.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase() }}\",\"value\":\"={{ JSON.stringify($('Loop Workflows').item.json, null, 2) }}\"}]},\"genericAuthType\":\"httpBasicAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"Content-Type\",\"value\":\"application/x-www-form-urlencoded\"}]}},\"credentials\":{\"httpBasicAuth\":{\"id\":\"[bitbucket-credential-id]\",\"name\":\"Bitbucket\"}},\"typeVersion\":4.2},{\"id\":\"5f198366-3bcf-4a96-ae60-da7cc9403a6f\",\"name\":\"Wait to Avoid Rate Limiting\",\"type\":\"n8n-nodes-base.wait\",\"position\":[1620,-20],\"webhookId\":\"793d7525-d166-4487-a71f-d48da7c66662\",\"parameters\":{\"amount\":\"={{ $json.waitTime || 1 }}\"},\"typeVersion\":1.1},{\"id\":\"adc37b33-c5af-4a44-ba87-9806efe25603\",\"name\":\"Set Bitbucket Workspace & Repository\",\"type\":\"n8n-nodes-base.set\",\"position\":[100,-20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"37f2ddba-188d-4bc1-98b3-5c5fa31d2d62\",\"name\":\"WorkspaceSlug\",\"type\":\"string\",\"value\":\"[workspace-slug]\"},{\"id\":\"303f25f0-bba8-4977-8f4f-33961e2e7e8c\",\"name\":\"RepositorySlug\",\"type\":\"string\",\"value\":\"[repository-slug]\"}]}},\"typeVersion\":3.4}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"f21887f2-e885-42c6-a934-4f7617e267dd\",\"connections\":{\"Loop Workflows\":{\"main\":[[],[{\"node\":\"Get Existing Worfklow from Bitbucket\",\"type\":\"main\",\"index\":0}]]},\"New or Changed?\":{\"main\":[[{\"node\":\"Upload Workflow to Bitbucket\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Wait to Avoid Rate Limiting\",\"type\":\"main\",\"index\":0}]]},\"Get All Workflows\":{\"main\":[[{\"node\":\"Loop Workflows\",\"type\":\"main\",\"index\":0}]]},\"Run Daily at 2 AM\":{\"main\":[[{\"node\":\"Set Bitbucket Workspace & Repository\",\"type\":\"main\",\"index\":0}]]},\"Calculate Wait Time\":{\"main\":[[{\"node\":\"Wait to Avoid Rate Limiting\",\"type\":\"main\",\"index\":0}]]},\"Wait to Avoid Rate Limiting\":{\"main\":[[{\"node\":\"Loop Workflows\",\"type\":\"main\",\"index\":0}]]},\"Upload Workflow to Bitbucket\":{\"main\":[[{\"node\":\"Calculate Wait Time\",\"type\":\"main\",\"index\":0}]]},\"Get Existing Worfklow from Bitbucket\":{\"main\":[[{\"node\":\"New or Changed?\",\"type\":\"main\",\"index\":0}]]},\"Set Bitbucket Workspace & Repository\":{\"main\":[[{\"node\":\"Get All Workflows\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "An automated backup solution designed for self-hosted n8n users to automatically backup their workflows to Bitbucket, leveraging Bitbucket's free private repository offering.\n\nPerfect for maintaining version control of your n8n workflows without additional costs.\n\n## How it works:\n\n  * Runs on a regular schedule to check all workflows in your n8n instance\n  * Compares each workflow with its version in Bitbucket\n  * Only uploads workflows that are new or have changed\n  * Uses basic rate limiting to stay within Bitbucket's API limits\n  * Formats filenames for easy tracking and includes timestamps in commit messages\n  * Handles errors gracefully with automatic retries\n\n\n\n## Set up steps (10-15 minutes):\n\n  1. Create a free Bitbucket account and private repository\n  2. Create a Bitbucket App Password with repository write access\n  3. Add Bitbucket credentials to n8n (using your username and app password)\n  4. Set up n8n API access (generate API key in your n8n instance)\n  5. Configure your Bitbucket workspace and repository names in the Set node\n  6. Optional: Adjust the backup schedule (default: 2 AM daily)\n\n\n\n### Perfect for n8n self-hosters who want:\n\n  * Version control for their workflows\n  * Automated daily backups\n  * Free private repository storage\n  * Easy workflow recovery\n  * Change tracking over time\n\n\n\nThe workflow includes basic error handling and rate limiting to ensure reliable backups even with larger numbers of workflows. Adjust your timing based on <https://support.atlassian.com/bitbucket-cloud/docs/api-request-limits/>.\n",
  "crawled_at": "2025-05-26T02:00:09.172086",
  "readme_zh": "一款专为自托管n8n用户设计的自动化备份方案，可自动将工作流备份至Bitbucket，充分利用Bitbucket提供的免费私有代码库服务。\n\n无需额外成本，即可完美实现n8n工作流的版本控制。\n\n## 运作原理：\n\n  * 定期扫描n8n实例中的所有工作流\n  * 与Bitbucket中的版本进行逐项比对\n  * 仅上传新增或变更的工作流\n  * 内置基础速率限制，确保符合Bitbucket API调用限制\n  * 规范化文件名便于追踪，提交信息包含时间戳\n  * 具备错误自动重试机制\n\n## 配置步骤（10-15分钟）：\n\n  1. 注册Bitbucket免费账户并创建私有代码库\n  2. 生成具有仓库写入权限的Bitbucket应用密码\n  3. 在n8n中添加Bitbucket凭证（使用用户名+应用密码）\n  4. 配置n8n API访问权限（在实例中生成API密钥）\n  5. 在Set节点设置Bitbucket工作区及仓库名称\n  6. 可选：调整备份计划（默认每日凌晨2点执行）\n\n### 特别适合需要以下功能的n8n自托管用户：\n\n  * 工作流版本管理\n  * 每日自动备份\n  * 免费私有存储库\n  * 便捷的工作流恢复\n  * 变更历史追踪\n\n本方案包含基础错误处理和速率限制机制，即使处理大量工作流也能确保备份可靠性。具体时间设置请参考<https://support.atlassian.com/bitbucket-cloud/docs/api-request-limits/>。",
  "title_zh": "将n8n工作流备份至Bitbucket",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"23GPrqZjHnIVvTEa\",\n  \"meta\": {\n    \"instanceId\": \"[instance id auto generated]\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Backup n8n Workflows to Bitbucket\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b3363b9d-ea6e-47b7-99f9-f48a21805886\",\n      \"name\": \"Calculate Wait Time\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1400,\n        -260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Get all input items and ensure we have data\\nif ($input.all().length === 0 || !$input.all()[0].headers) {\\n  // If no headers available, return default wait time\\n  return { waitTime: 1 };\\n}\\n\\n// Check rate limit headers from previous request\\nconst headers = $input.all()[0].headers;\\nlet waitTime = 1; // Default 1 second\\n\\n// Check if we have rate limit information (safely)\\nconst remaining = parseInt(headers['x-ratelimit-remaining']) || null;\\nconst reset = parseInt(headers['x-ratelimit-reset']) || null;\\n\\n// Only adjust wait time if we have valid rate limit info\\nif (remaining !== null && reset !== null) {\\n  // If we're running low on requests, calculate a longer wait time\\n  if (remaining < 100) {\\n    // Calculate seconds until reset\\n    const now = Math.floor(Date.now() / 1000);\\n    const timeUntilReset = reset - now;\\n    \\n    // Spread remaining requests over time until reset\\n    // Add 10% buffer to be safe\\n    waitTime = Math.ceil((timeUntilReset / remaining) * 1.1);\\n  } else if (remaining < 500) {\\n    // Start slowing down earlier\\n    waitTime = 2;\\n  }\\n}\\n\\n// Cap maximum wait time at 30 seconds\\nwaitTime = Math.min(waitTime, 30);\\n\\nreturn { waitTime };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"3cbc2287-b36f-4839-87b7-be4a7eadcf79\",\n      \"name\": \"Run Daily at 2 AM\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -120,\n        -20\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 2\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"09b396aa-61e8-4631-8aae-7126fbd609e6\",\n      \"name\": \"Get All Workflows\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        320,\n        -20\n      ],\n      \"parameters\": {\n        \"filters\": {},\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"[n8n-api-credential-id]\",\n          \"name\": \"n8n Development Environment\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c46b50cd-432f-4714-ac68-b6f92663b592\",\n      \"name\": \"Loop Workflows\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        540,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"2a27e85d-51c0-4f45-a7d6-6422fc8a439b\",\n      \"name\": \"Get Existing Worfklow from Bitbucket\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        780,\n        -20\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.bitbucket.org/2.0/repositories/{{ $('Set Bitbucket Workspace & Repository').item.json.WorkspaceSlug }}/{{ $('Set Bitbucket Workspace & Repository').item.json.RepositorySlug }}/src/main/{{ $json.name.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase() }}\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpBasicAuth\"\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"[bitbucket-credential-id]\",\n          \"name\": \"Bitbucket\"\n        }\n      },\n      \"retryOnFail\": false,\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"eeb52f03-dd60-46ae-ad86-1cabf7f6c20f\",\n      \"name\": \"New or Changed?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        980,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"ignoreCase\": true\n        },\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": false,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"2d5da90e-0f1d-436b-84d4-d82deaaa4b58\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.error.status }}\",\n              \"rightValue\": 404\n            },\n            {\n              \"id\": \"b7b9a48d-8954-4cc4-bf7a-ab30439ad930\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEquals\"\n              },\n              \"leftValue\": \"={{ $('Get Existing Worfklow from Bitbucket').item.json.data }}\",\n              \"rightValue\": \"={{ JSON.stringify($('Loop Workflows').item.json, null, 2) }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"04400827-d331-4ee2-8a67-1238ea2dc969\",\n      \"name\": \"Upload Workflow to Bitbucket\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1200,\n        -260\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.bitbucket.org/2.0/repositories/{{ $('Set Bitbucket Workspace & Repository').item.json.WorkspaceSlug }}/{{ $('Set Bitbucket Workspace & Repository').item.json.RepositorySlug }}/src\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {\n              \"maxRedirects\": 5\n            }\n          },\n          \"response\": {\n            \"response\": {\n              \"fullResponse\": true\n            }\n          }\n        },\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"message\",\n              \"value\": \"={{ $('Loop Workflows').item.json.name + ' [' + $now.format('yyyy-MM-dd HH:mm:ss') +']' }}\"\n            },\n            {\n              \"name\": \"={{ $('Loop Workflows').item.json.name.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase() }}\",\n              \"value\": \"={{ JSON.stringify($('Loop Workflows').item.json, null, 2) }}\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpBasicAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/x-www-form-urlencoded\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpBasicAuth\": {\n          \"id\": \"[bitbucket-credential-id]\",\n          \"name\": \"Bitbucket\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"5f198366-3bcf-4a96-ae60-da7cc9403a6f\",\n      \"name\": \"Wait to Avoid Rate Limiting\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        1620,\n        -20\n      ],\n      \"webhookId\": \"793d7525-d166-4487-a71f-d48da7c66662\",\n      \"parameters\": {\n        \"amount\": \"={{ $json.waitTime || 1 }}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"adc37b33-c5af-4a44-ba87-9806efe25603\",\n      \"name\": \"Set Bitbucket Workspace & Repository\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        100,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"37f2ddba-188d-4bc1-98b3-5c5fa31d2d62\",\n              \"name\": \"WorkspaceSlug\",\n              \"type\": \"string\",\n              \"value\": \"[workspace-slug]\"\n            },\n            {\n              \"id\": \"303f25f0-bba8-4977-8f4f-33961e2e7e8c\",\n              \"name\": \"RepositorySlug\",\n              \"type\": \"string\",\n              \"value\": \"[repository-slug]\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"f21887f2-e885-42c6-a934-4f7617e267dd\",\n  \"connections\": {\n    \"Loop Workflows\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Get Existing Worfklow from Bitbucket\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"New or Changed?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload Workflow to Bitbucket\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Wait to Avoid Rate Limiting\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get All Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Run Daily at 2 AM\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Bitbucket Workspace & Repository\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Calculate Wait Time\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait to Avoid Rate Limiting\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait to Avoid Rate Limiting\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Upload Workflow to Bitbucket\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Calculate Wait Time\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Existing Worfklow from Bitbucket\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"New or Changed?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Bitbucket Workspace & Repository\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get All Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}