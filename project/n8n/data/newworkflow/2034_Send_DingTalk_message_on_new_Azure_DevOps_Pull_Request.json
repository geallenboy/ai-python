{
  "url": "https://n8n.io/workflows/2034-send-dingtalk-message-on-new-azure-devops-pull-request/",
  "title": "Send DingTalk message on new Azure DevOps Pull Request",
  "author": "PretenderX",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "Engineering"
    },
    {
      "name": "IT Ops"
    }
  ],
  "workflow_json": "",
  "readme": "This template automates sending a DingTalk message on new Azure Dev Ops Pull Request Created Events. It uses a MySQL database to store mappings between Azure users and DingTalk users; so the right users get notified.\n\n### Set up instructions\n\n  1. Define the path value of ReceiveTfsPullRequestCreatedMessage Webhook node of your own, copy the webhook url to create a Azure DevOps ServiceHook that call webhook with Pull Request Created event.\n  2. In order to configure the LoadDingTalkAccountMap node, you need to create a MySQL table as below:  \n|Name|Type|Length|Key|  \n|-|-|-|-|  \n|TfsAccount|varchar|255|  \n|UserName|varchar|255|  \n|DingTalkMobile|varchar|255|\n  3. You can customize the Ding Talk message content by editing the BuildDingTalkWebHookData node.\n  4. Define the URL of SendDingTalkMessageViaWebHook Http Request node as your Ding Talk group chat robot webhook URL.\n  5. Send test of production message from Azure DevOps to test.\n\n\n",
  "crawled_at": "2025-05-25T20:39:06.009377",
  "readme_zh": "此模板用于在Azure DevOps创建新的拉取请求（Pull Request）事件时，自动发送钉钉消息通知。它通过MySQL数据库存储Azure用户与钉钉用户的映射关系，确保通知能精准送达对应人员。\n\n### 配置说明\n\n1. **配置Webhook接收地址**  \n   在`ReceiveTfsPullRequestCreatedMessage`节点中定义专属路径值，复制生成的Webhook URL，用于在Azure DevOps创建服务钩子（ServiceHook），使其在拉取请求创建事件时触发该Webhook。\n\n2. **配置用户映射表**  \n   需提前创建MySQL表以支持`LoadDingTalkAccountMap`节点运行，表结构如下：  \n|字段名|类型|长度|键类型|  \n|-|-|-|-|  \n|TfsAccount|varchar|255| |  \n|UserName|varchar|255| |  \n|DingTalkMobile|varchar|255| |  \n\n3. **自定义消息内容**  \n   通过编辑`BuildDingTalkWebHookData`节点，可自由定制钉钉消息的推送内容。\n\n4. **设置机器人Webhook**  \n   在`SendDingTalkMessageViaWebHook`节点的HTTP请求中配置钉钉群聊机器人的Webhook URL。\n\n5. **测试验证**  \n   从Azure DevOps发送测试消息或生产消息，验证整套流程是否正常运行。",
  "title_zh": "在新Azure DevOps拉取请求时发送钉钉消息",
  "publish_date_zh": "最后更新于9个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"dbd43d88d26a9e30d8aadc002c9e77f1400c683dd34efe3778d43d27250dde50\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"44eb446d-3775-4fe0-8f76-67f46913531e\",\n      \"name\": \"LoadDingTalkAccountMap\",\n      \"type\": \"n8n-nodes-base.mySql\",\n      \"position\": [\n        -600,\n        720\n      ],\n      \"parameters\": {\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"tfs_dingtalk_account_map\",\n          \"cachedResultName\": \"tfs_dingtalk_account_map\"\n        },\n        \"options\": {},\n        \"operation\": \"select\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"mySql\": {\n          \"id\": \"235\",\n          \"name\": \"MySQL account\"\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"25d2a3aa-af18-4ff2-af6c-c2bf6618a511\",\n      \"name\": \"ReceiveTfsPullRequestCreatedMessage\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -860,\n        720\n      ],\n      \"webhookId\": \"05a0f565-7a1e-44f2-956d-1c68982ce314\",\n      \"parameters\": {\n        \"path\": \"pr-notify-template\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"70d69753-9408-4a99-85a4-9dc4486fc460\",\n      \"name\": \"BuildDingTalkWebHookData\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -340,\n        720\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Code here will run only once, no matter how many input items there are.\\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\\n\\nconsole.log(\\\"items:\\\");\\nconsole.log(items);\\n\\nvar mapUserMobile = function (tfsAccount) {\\n  for(var i = 0; i < items.length; i++) {\\n    var map = items[i].json;\\n    if(tfsAccount.lastIndexOf(map.TfsAccount) != -1) {\\n      return map.DingTalkMobile;\\n    }\\n  }\\n\\n  return null;\\n}\\nvar mapUserName = function (tfsAccount) {\\n  for(var i = 0; i < items.length; i++) {\\n    var map = items[i].json;\\n    if(tfsAccount.lastIndexOf(map.TfsAccount) != -1) {\\n      return map.UserName;\\n    }\\n  }\\n\\n  return null;\\n}\\n\\nvar tfsMessage = $node[\\\"ReceiveTfsPullRequestCreatedMessage\\\"].json.body;\\nconsole.log(\\\"TFS Message:\\\");\\nconsole.log(tfsMessage);\\n\\nvar output = {};\\nvar atMobiles = [];\\nvar isAtAll = false;\\nvar atUsers = [];\\nvar messageText = tfsMessage.message.markdown;\\nvar prCreatorTfsDomainName = tfsMessage.resource.createdBy.uniqueName;\\nvar prCreatorTfsDisplayName = tfsMessage.resource.createdBy.displayName;\\nvar prCreatorDingTalkName = mapUserName(prCreatorTfsDomainName);\\n\\nif (prCreatorDingTalkName !== null) {\\n  messageText = messageText.replace(prCreatorTfsDisplayName, prCreatorDingTalkName);\\n}\\n\\nfor (reviewer of tfsMessage.resource.reviewers) {\\n  console.log(reviewer.uniqueName);\\n  if(reviewer.uniqueName.lastIndexOf(\\\"团队\\\") != -1) {\\n    //当@所有人时，消息内容中的手机号就不会被转义成用户名了，暂时不启用该功能\\n    isAtAll = true;\\n    continue;\\n  }\\n\\n  var mobile = mapUserMobile(reviewer.uniqueName);\\n\\n  if(mobile !== null) {\\n    atMobiles.push(mobile);\\n  }\\n\\n  var userName = mapUserName(reviewer.uniqueName);\\n\\n  if(userName !== null) {\\n    atUsers.push(userName);\\n  }\\n}\\n\\nif(isAtAll) {\\n  atUsers.unshift(\\\"所有人\\\");\\n  atMobiles = [];\\n} else {\\n  atUsers = atMobiles;\\n}\\n\\nif (atUsers.length > 0) {\\n  messageText = messageText + \\\"<br />请 @\\\" + atUsers.join(\\\" @\\\") + \\\" 评审\\\";\\n}\\n\\noutput.isAtAll = isAtAll;\\noutput.text = messageText;\\noutput.atMobiles = atMobiles.join(\\\", \\\");\\n\\nconsole.log('Done:');\\nconsole.log(output);\\n\\nreturn [{json: output}];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"dc6c235b-c1ac-4195-a404-e79c8ad1c8ef\",\n      \"name\": \"SendDingTalkMessageViaWebHook\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -80,\n        720\n      ],\n      \"parameters\": {\n        \"url\": \"https://oapi.dingtalk.com/robot/send?access_token=4d684f0389cd4c24997c815344890faafeb9d300c25edf5e31151662a87e77c7\",\n        \"options\": {},\n        \"requestMethod\": \"POST\",\n        \"jsonParameters\": true,\n        \"bodyParametersJson\": \"={\\n\\t\\\"at\\\":\\n\\t{\\n\\t\\t\\\"atMobiles\\\": [{{$json[\\\"atMobiles\\\"]}}],\\n\\t\\t\\\"isAtAll\\\": \\\"{{$json[\\\"isAtAll\\\"]}}\\\"\\n\\t},\\n\\t\\\"msgtype\\\": \\\"markdown\\\",\\n\\t\\\"markdown\\\":\\n\\t{\\n\\t\\t\\\"title\\\": \\\"New PR Notify\\\",\\n\\t\\t\\\"text\\\": \\\"{{$json[\\\"text\\\"]}}\\\"\\n\\t}\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3476a787-387b-43e2-8646-6a682656f231\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1449,\n        560\n      ],\n      \"parameters\": {\n        \"width\": 484,\n        \"height\": 540,\n        \"content\": \"## 在Azure DevOps新建拉取请求时发送钉钉消息  \\n该模板可自动在Azure DevOps创建拉取请求事件时发送钉钉消息。通过MySQL数据库存储Azure用户与钉钉用户的映射关系，确保通知精准触达对应人员。\\n\\n### 配置说明  \\n1. 自定义`ReceiveTfsPullRequestCreatedMessage`节点的Webhook路径值，复制该URL在Azure DevOps创建服务钩子，配置触发条件为\\\"拉取请求创建事件\\\"  \\n2. 配置`LoadDingTalkAccountMap`节点前需创建MySQL表，结构如下：  \\n|字段名|类型|长度|键|  \\n|-|-|-|-|  \\n|TfsAccount|varchar|255|  \\n|UserName|varchar|255|  \\n|DingTalkMobile|varchar|255|  \\n3. 通过编辑`BuildDingTalkWebHookData`节点可自定义钉钉消息内容  \\n4. 将`SendDingTalkMessageViaWebHook`节点的HTTP请求URL设置为钉钉群机器人Webhook地址  \\n5. 通过Azure DevOps发送测试/生产消息进行验证  \\n\\n（注：保留\\\"DingTalk\\\"、\\\"Webhook\\\"等技术专有名词不翻译，采用\\\"钉钉\\\"音译+英文原名并用的常见处理方式；\\\"Key\\\"在数据库语境下译为\\\"键\\\"；\\\"ServiceHook\\\"译为\\\"服务钩子\\\"符合技术文档惯例；句式结构根据中文表达习惯进行了重组，如将被动语态转换为主动表述）\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"LoadDingTalkAccountMap\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"BuildDingTalkWebHookData\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"BuildDingTalkWebHookData\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"SendDingTalkMessageViaWebHook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"ReceiveTfsPullRequestCreatedMessage\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"LoadDingTalkAccountMap\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}