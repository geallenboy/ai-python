{
  "url": "https://n8n.io/workflows/2859-chat-with-postgresql-database/",
  "title": "Chat with Postgresql Database",
  "author": "KumoHQ",
  "publish_date": "Last update 4 months ago",
  "publish_date_absolute": "2025-01-26",
  "categories": [
    {
      "name": "Engineering"
    },
    {
      "name": "Product"
    },
    {
      "name": "AI"
    },
    {
      "name": "IT Ops"
    }
  ],
  "workflow_json": "{\"id\":\"eOUewYsEzJmQixI6\",\"meta\":{\"instanceId\":\"77c4feba8f41570ef06dc76ece9a6ded0f0d44f7f1477a64c2d71a8508c11faa\",\"templateCredsSetupCompleted\":true},\"name\":\"Chat with Postgresql Database\",\"tags\":[],\"nodes\":[{\"id\":\"6501a54f-a68c-452d-b353-d7e871ca3780\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-300,-80],\"webhookId\":\"cf1de04f-3e38-426c-89f0-3bdb110a5dcf\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"cd32221b-2a36-408d-b57e-8115fcd810c9\",\"name\":\"AI Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[0,-80],\"parameters\":{\"agent\":\"openAiFunctionsAgent\",\"options\":{\"systemMessage\":\"You are DB assistant. You need to run queries in DB aligned with user requests.\\n\\nRun custom SQL query to aggregate data and response to user. Make sure every table has schema prefix to it in sql query which you can get from `Get DB Schema and Tables List` tool.\\n\\nFetch all data to analyse it for response if needed.\\n\\n## Tools\\n\\n- Execute SQL query - Executes any sql query generated by AI\\n- Get DB Schema and Tables List - Lists all the tables in database with its schema name\\n- Get Table Definition - Gets the table definition from db using table name and schema name\"}},\"typeVersion\":1.7},{\"id\":\"8accbeeb-7eaf-4e9e-aabc-de8ab3a0459b\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[-60,160],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"48uG61Ilo8jndw3r\",\"name\":\"Your OpenAI Account Credentials\"}},\"typeVersion\":1.2},{\"id\":\"11f2013f-a080-4c9e-8773-c90492e2c628\",\"name\":\"Get Table Definition\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[780,140],\"parameters\":{\"query\":\"select\\n  c.column_name,\\n  c.data_type,\\n  c.is_nullable,\\n  c.column_default,\\n  tc.constraint_type,\\n  ccu.table_name AS referenced_table,\\n  ccu.column_name AS referenced_column\\nfrom\\n  information_schema.columns c\\nLEFT join\\n  information_schema.key_column_usage kcu\\n  ON c.table_name = kcu.table_name\\n  AND c.column_name = kcu.column_name\\nLEFT join\\n  information_schema.table_constraints tc\\n  ON kcu.constraint_name = tc.constraint_name\\n  AND tc.constraint_type = 'FOREIGN KEY'\\nLEFT join\\n  information_schema.constraint_column_usage ccu\\n  ON tc.constraint_name = ccu.constraint_name\\nwhere\\n  c.table_name = '{{ $fromAI(\\\"table_name\\\") }}'\\n  AND c.table_schema = '{{ $fromAI(\\\"schema_name\\\") }}'\\norder by\\n  c.ordinal_position\",\"options\":{},\"operation\":\"executeQuery\",\"descriptionType\":\"manual\",\"toolDescription\":\"Get table definition to find all columns and types\"},\"credentials\":{\"postgres\":{\"id\":\"nGI61D0TEEZz18rr\",\"name\":\"Your Postgresql Database Credentials\"}},\"typeVersion\":2.5},{\"id\":\"760bc9bc-0057-4088-b3f0-3ee37b3519df\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-300,-240],\"parameters\":{\"color\":5,\"width\":560,\"height\":120,\"content\":\"### 👨‍🎤 Setup\\n1. Add your **postgresql** and **OpenAI** credentials.\\n2. Click **Chat** button and start asking questions to your database.\\n3. Activate the workflow and you can make the chat publicly available.\"},\"typeVersion\":1},{\"id\":\"0df33341-c859-4a54-b6d9-a99670e8d76d\",\"name\":\"Chat History\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[120,160],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"4938b22e-f187-4ca0-b9f1-60835e823799\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[360,300],\"parameters\":{\"color\":7,\"width\":562,\"height\":156,\"content\":\"🛠️ Tools Used:\\n1. Execute SQL Query: Used to execute any query generated by the agent.\\n2. Get DB Schema and Tables List: It returns the list of all the tables with its schema name.\\n3. Get Table Definition: It returns table details like column names, foreign keys and more of a particular table in a schema.\"},\"typeVersion\":1},{\"id\":\"39780c78-4fbc-403e-a220-aa6a4b06df8c\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-100,300],\"parameters\":{\"color\":7,\"width\":162,\"height\":99,\"content\":\"👆 You can exchange this with any other chat model of your choice.\"},\"typeVersion\":1},{\"id\":\"28a5692c-5003-46cb-9a09-b7867734f446\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[100,300],\"parameters\":{\"color\":7,\"width\":162,\"height\":159,\"content\":\"👆 You can change how many number of messages to keep using `Context Window Length` option. It's 5 by default.\"},\"typeVersion\":1},{\"id\":\"c18ced71-6330-4ba0-9c52-1bb5852b3039\",\"name\":\"Execute SQL Query\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[380,140],\"parameters\":{\"query\":\"{{ $fromAI(\\\"sql_query\\\", \\\"SQL Query\\\") }}\",\"options\":{},\"operation\":\"executeQuery\",\"descriptionType\":\"manual\",\"toolDescription\":\"Get all the data from Postgres, make sure you append the tables with correct schema. Every table is associated with some schema in the database.\"},\"credentials\":{\"postgres\":{\"id\":\"nGI61D0TEEZz18rr\",\"name\":\"Your Postgresql Database Credentials\"}},\"typeVersion\":2.5},{\"id\":\"557623c6-e499-48a6-a066-744f64f8b6f3\",\"name\":\"Get DB Schema and Tables List\",\"type\":\"n8n-nodes-base.postgresTool\",\"position\":[580,140],\"parameters\":{\"query\":\"SELECT \\n    table_schema,\\n    table_name\\nFROM information_schema.tables\\nWHERE table_type = 'BASE TABLE'\\n    AND table_schema NOT IN ('pg_catalog', 'information_schema')\\nORDER BY table_schema, table_name;\",\"options\":{},\"operation\":\"executeQuery\",\"descriptionType\":\"manual\",\"toolDescription\":\"Get list of all tables with their schema in the database\"},\"credentials\":{\"postgres\":{\"id\":\"nGI61D0TEEZz18rr\",\"name\":\"Your Postgresql Database Credentials\"}},\"typeVersion\":2.5}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"10c7c74e-b383-4ac7-8cb2-c9a15a2818fe\",\"connections\":{\"Chat History\":{\"ai_memory\":[[{\"node\":\"AI Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Execute SQL Query\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Get Table Definition\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"AI Agent\",\"type\":\"main\",\"index\":0}]]},\"Get DB Schema and Tables List\":{\"ai_tool\":[[{\"node\":\"AI Agent\",\"type\":\"ai_tool\",\"index\":0}]]}}}",
  "readme": "## Who is this template for?\n\nThis workflow template is designed for any professionals seeking relevent data from database using natural language.\n\n## How it works\n\n  * Each time user ask's question using the n8n chat interface, the workflow runs.\n  * Then the message is processed by AI Agent using relevent tools - `Execute SQL Query`, `Get DB Schema and Tables List` and `Get Table Definition`, if required. Agent uses these tool to form and run sql query which are necessary to answer the questions.\n  * Once AI Agent has the data, it uses it to form answer and returns it to the user.\n\n\n\n## Set up instructions\n\nComplete the Set up credentials step when you first open the workflow. You'll need a Postgresql Credentials, and OpenAI api key.\n\nTemplate was created in n8n `v1.77.0`\n",
  "crawled_at": "2025-05-26T02:12:49.508404",
  "readme_zh": "## 此模板适用于谁？\n\n本工作流模板专为需要通过自然语言从数据库获取相关数据的专业人士设计。\n\n## 工作原理\n\n* 每当用户通过n8n聊天界面提问时，工作流即会启动运行。\n* 随后AI代理将根据需要使用相关工具处理消息——包括`执行SQL查询`、`获取数据库架构及表清单`和`获取表定义`（如需要）。代理通过这些工具构建并运行必要的SQL查询以回答问题。\n* 当AI代理获得数据后，会据此组织答案并返回给用户。\n\n## 设置指南\n\n首次打开工作流时，请完成\"设置凭证\"步骤。您需要准备PostgreSQL数据库凭证和OpenAI API密钥。\n\n本模板创建于n8n `v1.77.0`版本",
  "title_zh": "与PostgreSQL数据库聊天",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"eOUewYsEzJmQixI6\",\n  \"meta\": {\n    \"instanceId\": \"77c4feba8f41570ef06dc76ece9a6ded0f0d44f7f1477a64c2d71a8508c11faa\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Chat with Postgresql Database\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"6501a54f-a68c-452d-b353-d7e871ca3780\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -300,\n        -80\n      ],\n      \"webhookId\": \"cf1de04f-3e38-426c-89f0-3bdb110a5dcf\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"cd32221b-2a36-408d-b57e-8115fcd810c9\",\n      \"name\": \"AI Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        0,\n        -80\n      ],\n      \"parameters\": {\n        \"agent\": \"openAiFunctionsAgent\",\n        \"options\": {\n          \"systemMessage\": \"You are DB assistant. You need to run queries in DB aligned with user requests.\\n\\nRun custom SQL query to aggregate data and response to user. Make sure every table has schema prefix to it in sql query which you can get from `Get DB Schema and Tables List` tool.\\n\\nFetch all data to analyse it for response if needed.\\n\\n## Tools\\n\\n- Execute SQL query - Executes any sql query generated by AI\\n- Get DB Schema and Tables List - Lists all the tables in database with its schema name\\n- Get Table Definition - Gets the table definition from db using table name and schema name\"\n        }\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"8accbeeb-7eaf-4e9e-aabc-de8ab3a0459b\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        -60,\n        160\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"48uG61Ilo8jndw3r\",\n          \"name\": \"Your OpenAI Account Credentials\"\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"11f2013f-a080-4c9e-8773-c90492e2c628\",\n      \"name\": \"Get Table Definition\",\n      \"type\": \"n8n-nodes-base.postgresTool\",\n      \"position\": [\n        780,\n        140\n      ],\n      \"parameters\": {\n        \"query\": \"select\\n  c.column_name,\\n  c.data_type,\\n  c.is_nullable,\\n  c.column_default,\\n  tc.constraint_type,\\n  ccu.table_name AS referenced_table,\\n  ccu.column_name AS referenced_column\\nfrom\\n  information_schema.columns c\\nLEFT join\\n  information_schema.key_column_usage kcu\\n  ON c.table_name = kcu.table_name\\n  AND c.column_name = kcu.column_name\\nLEFT join\\n  information_schema.table_constraints tc\\n  ON kcu.constraint_name = tc.constraint_name\\n  AND tc.constraint_type = 'FOREIGN KEY'\\nLEFT join\\n  information_schema.constraint_column_usage ccu\\n  ON tc.constraint_name = ccu.constraint_name\\nwhere\\n  c.table_name = '{{ $fromAI(\\\"table_name\\\") }}'\\n  AND c.table_schema = '{{ $fromAI(\\\"schema_name\\\") }}'\\norder by\\n  c.ordinal_position\",\n        \"options\": {},\n        \"operation\": \"executeQuery\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Get table definition to find all columns and types\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"nGI61D0TEEZz18rr\",\n          \"name\": \"Your Postgresql Database Credentials\"\n        }\n      },\n      \"typeVersion\": 2.5\n    },\n    {\n      \"id\": \"760bc9bc-0057-4088-b3f0-3ee37b3519df\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -300,\n        -240\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 560,\n        \"height\": 120,\n        \"content\": \"### 👨‍🎤 设置步骤\\n1. 添加您的 **PostgreSQL** 和 **OpenAI** 凭据。\\n2. 点击 **聊天** 按钮，开始向您的数据库提问。\\n3. 激活工作流后，您可以将聊天功能公开使用。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0df33341-c859-4a54-b6d9-a99670e8d76d\",\n      \"name\": \"Chat History\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        120,\n        160\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"4938b22e-f187-4ca0-b9f1-60835e823799\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        360,\n        300\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 562,\n        \"height\": 156,\n        \"content\": \"🛠️ 使用工具：\\n1. 执行SQL查询：用于执行由代理生成的任何查询。\\n2. 获取数据库架构及表列表：返回所有表及其所属架构名称的列表。\\n3. 获取表定义：返回特定架构中某张表的详细信息，包括列名、外键等。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"39780c78-4fbc-403e-a220-aa6a4b06df8c\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -100,\n        300\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 162,\n        \"height\": 99,\n        \"content\": \"👆 你可以将其替换为你选择的任何其他聊天模型。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"28a5692c-5003-46cb-9a09-b7867734f446\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        100,\n        300\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 162,\n        \"height\": 159,\n        \"content\": \"👆 您可以通过调整`上下文窗口长度`选项来更改保留的消息数量，默认设置为5条。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c18ced71-6330-4ba0-9c52-1bb5852b3039\",\n      \"name\": \"Execute SQL Query\",\n      \"type\": \"n8n-nodes-base.postgresTool\",\n      \"position\": [\n        380,\n        140\n      ],\n      \"parameters\": {\n        \"query\": \"{{ $fromAI(\\\"sql_query\\\", \\\"SQL Query\\\") }}\",\n        \"options\": {},\n        \"operation\": \"executeQuery\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Get all the data from Postgres, make sure you append the tables with correct schema. Every table is associated with some schema in the database.\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"nGI61D0TEEZz18rr\",\n          \"name\": \"Your Postgresql Database Credentials\"\n        }\n      },\n      \"typeVersion\": 2.5\n    },\n    {\n      \"id\": \"557623c6-e499-48a6-a066-744f64f8b6f3\",\n      \"name\": \"Get DB Schema and Tables List\",\n      \"type\": \"n8n-nodes-base.postgresTool\",\n      \"position\": [\n        580,\n        140\n      ],\n      \"parameters\": {\n        \"query\": \"SELECT \\n    table_schema,\\n    table_name\\nFROM information_schema.tables\\nWHERE table_type = 'BASE TABLE'\\n    AND table_schema NOT IN ('pg_catalog', 'information_schema')\\nORDER BY table_schema, table_name;\",\n        \"options\": {},\n        \"operation\": \"executeQuery\",\n        \"descriptionType\": \"manual\",\n        \"toolDescription\": \"Get list of all tables with their schema in the database\"\n      },\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"nGI61D0TEEZz18rr\",\n          \"name\": \"Your Postgresql Database Credentials\"\n        }\n      },\n      \"typeVersion\": 2.5\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"10c7c74e-b383-4ac7-8cb2-c9a15a2818fe\",\n  \"connections\": {\n    \"Chat History\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute SQL Query\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Table Definition\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get DB Schema and Tables List\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}