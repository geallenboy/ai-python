{
  "url": "https://n8n.io/workflows/4166-n8n-workflow-manager-api/",
  "title": "n8n Workflow Manager API",
  "author": "Jan Willem Altink",
  "publish_date": "Last update 6 days ago",
  "publish_date_absolute": "2025-05-20",
  "categories": [
    {
      "name": "Engineering"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"1eec3d74182f3fda9f29f20c85422320a70882840e1b07acd098d5b4a836392a\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"ab47d0ba-0544-4540-a462-70a2ce87143f\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-1120,-440],\"webhookId\":\"26f7b45b-d6c6-4d26-a72b-28fe0d59c9f3\",\"parameters\":{\"path\":\"workflow-manager\",\"options\":{},\"responseMode\":\"responseNode\",\"authentication\":\"headerAuth\",\"multipleMethods\":true},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"N5JJ2pCqy9s6SMWZ\",\"name\":\"Header Auth account\"}},\"typeVersion\":2},{\"id\":\"479e7d11-4d29-43d7-9b51-4f15e760a117\",\"name\":\"Map webhook request to fields\",\"type\":\"n8n-nodes-base.set\",\"notes\":\"dont forget to add logic to triggered workflow if you use custom data.\",\"onError\":\"continueErrorOutput\",\"position\":[-820,-340],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"c66c5a75-22a3-4b56-b40c-8403ed2dfbd4\",\"name\":\"targetWorkflowId\",\"type\":\"string\",\"value\":\"={{ $json.query.workflowId }}\"},{\"id\":\"88ec0d2f-4d99-4307-ae5e-c5d3c1b75b98\",\"name\":\"workflowInputData\",\"type\":\"object\",\"value\":\"={{ $json.body }}\"}]}},\"typeVersion\":3.4,\"alwaysOutputData\":false},{\"id\":\"6a685048-6a64-4888-b66b-a3ecb6319ac7\",\"name\":\"Execute Workflow\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"onError\":\"continueErrorOutput\",\"position\":[-440,-360],\"parameters\":{\"options\":{\"waitForSubWorkflow\":true},\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $('Map webhook request to fields').item.json.targetWorkflowId }}\"},\"workflowInputs\":{\"value\":{},\"schema\":[],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":true}},\"typeVersion\":1.2},{\"id\":\"db3a0115-179b-4a70-8c27-aa126bfa43a0\",\"name\":\"return succes message\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[20,-460],\"parameters\":{\"options\":{},\"respondWith\":\"allIncomingItems\"},\"typeVersion\":1.2},{\"id\":\"327b7437-e4fa-4b82-97d2-4adf077df5d8\",\"name\":\"return problem executing workflow\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[20,-280],\"parameters\":{\"options\":{},\"respondWith\":\"json\",\"responseBody\":\"{\\n  \\\"status\\\": \\\"problem_executing_workflow\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"331ce2d8-016f-40ed-8b74-8e75be54fac6\",\"name\":\"Return problem handling request\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[20,-80],\"parameters\":{\"options\":{},\"respondWith\":\"json\",\"responseBody\":\"{\\n  \\\"status\\\": \\\"problem_handling_request\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"eff4c9d9-5031-4d25-87c7-2fcd5a28ada5\",\"name\":\"Map key workflow info\",\"type\":\"n8n-nodes-base.set\",\"position\":[1060,-1140],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"87d4b5e7-540e-441c-9598-921d6d223e20\",\"name\":\"name\",\"type\":\"string\",\"value\":\"={{ $json.name }}\"},{\"id\":\"b3749a8f-0418-4409-8c0f-e8ca2bec9414\",\"name\":\"id\",\"type\":\"string\",\"value\":\"={{ $json.id }}\"},{\"id\":\"1db3eaca-95d2-4b5b-9fca-e6ca44eb4bc0\",\"name\":\"createdAt\",\"type\":\"string\",\"value\":\"={{ $json.createdAt }}\"},{\"id\":\"a42273df-e9c7-40a3-9f02-63792c0f6da5\",\"name\":\"updatedAt\",\"type\":\"string\",\"value\":\"={{ $json.updatedAt }}\"},{\"id\":\"7799575a-df04-4c29-8ee7-b8a6dc9d98d6\",\"name\":\"active\",\"type\":\"boolean\",\"value\":\"={{ $json.active }}\"}]}},\"typeVersion\":3.4},{\"id\":\"fb406e55-9df4-43ac-b8b7-040e1438b925\",\"name\":\"map parameters\",\"type\":\"n8n-nodes-base.set\",\"notes\":\"dont forget to add logic to triggered workflow if you use custom data.\",\"onError\":\"continueErrorOutput\",\"position\":[-820,-600],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"c66c5a75-22a3-4b56-b40c-8403ed2dfbd4\",\"name\":\"mode\",\"type\":\"string\",\"value\":\"={{ $json.query.mode }}\"},{\"id\":\"88ec0d2f-4d99-4307-ae5e-c5d3c1b75b98\",\"name\":\"workflowId\",\"type\":\"string\",\"value\":\"={{ $json.query.workflowId }}\"},{\"id\":\"219d8188-71da-41a7-b849-a3f45877a94b\",\"name\":\"includedWorkflows\",\"type\":\"string\",\"value\":\"={{ $json.query.includedWorkflows }}\"}]}},\"typeVersion\":3.4,\"alwaysOutputData\":false},{\"id\":\"84934ca3-eb86-4bda-b16c-1bdbf7b7073e\",\"name\":\"Return problem handling get request\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[1340,-680],\"parameters\":{\"options\":{},\"respondWith\":\"json\",\"responseBody\":\"{\\n  \\\"status\\\": \\\"problem_handling_request\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"bfd7b91d-4972-48be-8f6d-887995f3e62d\",\"name\":\"return all workflow info\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[1320,-1300],\"parameters\":{\"options\":{\"responseCode\":200},\"respondWith\":\"allIncomingItems\"},\"typeVersion\":1.2},{\"id\":\"6f481e40-a8c1-40bc-a410-8e3606ac419b\",\"name\":\"return summarized workflow info\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[1320,-1140],\"parameters\":{\"options\":{\"responseCode\":200},\"respondWith\":\"allIncomingItems\"},\"typeVersion\":1.2},{\"id\":\"4d4bc237-c0e4-456f-acdf-fdaeec203693\",\"name\":\"Get specific workflowid\",\"type\":\"n8n-nodes-base.n8n\",\"onError\":\"continueErrorOutput\",\"position\":[400,-1240],\"parameters\":{\"operation\":\"get\",\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $json.workflowId }}\"},\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"3N1mURaRanSDYYnV\",\"name\":\"n8n account\"}},\"typeVersion\":1},{\"id\":\"559e5e24-200f-44d1-a8e4-b5605afe81b3\",\"name\":\"Included Workflows\",\"type\":\"n8n-nodes-base.switch\",\"position\":[0,-940],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"inactive\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"6daea568-2be3-45ca-be56-ae0207a4f86d\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.includedWorkflows }}\",\"rightValue\":\"inactive\"}]},\"renameOutput\":true},{\"outputKey\":\"active\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"5a4debdd-03ac-4c1d-b2b5-ea8192d61717\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.includedWorkflows }}\",\"rightValue\":\"active\"}]},\"renameOutput\":true},{\"outputKey\":\"all\",\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"98ec6e1b-e5b5-4a9c-b505-23f237cabf9f\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.includedWorkflows }}\",\"rightValue\":\"all\"}]},\"renameOutput\":true}]},\"options\":{\"fallbackOutput\":\"extra\",\"renameFallbackOutput\":\"Fallback\"}},\"typeVersion\":3.2},{\"id\":\"259f7da5-cd06-44a3-805c-bf5e29b6924c\",\"name\":\"get all inactive workflows\",\"type\":\"n8n-nodes-base.n8n\",\"onError\":\"continueErrorOutput\",\"position\":[400,-1100],\"parameters\":{\"filters\":{\"activeWorkflows\":\"={{ false }}\"},\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"3N1mURaRanSDYYnV\",\"name\":\"n8n account\"}},\"typeVersion\":1},{\"id\":\"30102b45-b578-437a-a6b3-49b39c18d7fa\",\"name\":\"get all active workflows\",\"type\":\"n8n-nodes-base.n8n\",\"onError\":\"continueErrorOutput\",\"position\":[400,-940],\"parameters\":{\"filters\":{\"activeWorkflows\":true},\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"3N1mURaRanSDYYnV\",\"name\":\"n8n account\"}},\"typeVersion\":1},{\"id\":\"7eba5bb1-c863-4d0b-b157-5d5844860134\",\"name\":\"get all workflows\",\"type\":\"n8n-nodes-base.n8n\",\"onError\":\"continueErrorOutput\",\"position\":[400,-780],\"parameters\":{\"filters\":{},\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"3N1mURaRanSDYYnV\",\"name\":\"n8n account\"}},\"typeVersion\":1},{\"id\":\"cd37d7c6-0a39-4d0d-81d0-29b530834429\",\"name\":\"full mode\",\"type\":\"n8n-nodes-base.if\",\"position\":[820,-1240],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"44f3564e-83bf-46fc-9de7-1c9179029967\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('map parameters').item.json.mode }}\",\"rightValue\":\"full\"}]}},\"typeVersion\":2.2},{\"id\":\"47260845-2b55-47f2-a8ad-e4dc1d18a087\",\"name\":\"return problem getting workflow error\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[1320,-900],\"parameters\":{\"options\":{\"responseCode\":404},\"respondWith\":\"json\",\"responseBody\":\"{\\n  \\\"status\\\": \\\"problem_getting_workflows\\\"\\n}\"},\"typeVersion\":1.2},{\"id\":\"5e8a5ddc-ce4c-4a4a-99ab-ade961a18158\",\"name\":\"Does workflowId Exist\",\"type\":\"n8n-nodes-base.if\",\"position\":[-420,-960],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"53bb0221-a526-477f-bf31-7e26ad825f2b\",\"operator\":{\"type\":\"string\",\"operation\":\"exists\",\"singleValue\":true},\"leftValue\":\"={{ $json.workflowId }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"323d3126-fc6f-476f-978c-00f3c01f9e03\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1780,-620],\"parameters\":{\"color\":5,\"width\":580,\"height\":480,\"content\":\"## 🚀 Workflow Trigger: Webhook\\n\\nThis workflow starts with a **Webhook node** that can be triggered by both `GET` and `POST` HTTP requests.\\n\\n**Authentication:**\\n* Uses **Header Authentication**.\\n* To set this up in n8n:\\n    1.  Go to Credentials > New.\\n    2.  Select \\\"Header Auth\\\".\\n    3.  For the \\\"Name\\\" field (Header Name for Authentication), use `Authorization`.\\n    4.  For the \\\"Value\\\" field (Header Value for Authentication), use `Bearer YOUR_STRONG_SECRET_KEY`. Replace `YOUR_STRONG_SECRET_KEY` with a secure key.\\n* The webhook will respond using a dedicated **Respond to Webhook** node further down the flow, depending on the request type and outcome.\\n\\n**Path:** `workflow-manager`\\n*(Remember to adjust the path in the Webhook node if needed for your setup.)*\"},\"typeVersion\":1},{\"id\":\"941bf6d3-b6b3-4e1f-8c1e-4e52fd809881\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-820,-160],\"parameters\":{\"color\":6,\"width\":740,\"height\":460,\"content\":\"## ▶️ POST Route: Execute a Target Workflow\\n\\nThis branch handles `POST` requests to dynamically execute another n8n workflow.\\n\\n### 1. Map Webhook Request to Fields:\\n* Extracts `workflowId` from the incoming request's query parameters (e.g., `?workflowId=YOUR_TARGET_WORKFLOW_ID`).\\n* Extracts the entire `body` of the POST request to be passed as `workflowInputData` to the target workflow.\\n    * **Note:** If you send custom data in the body, ensure the triggered workflow is designed to receive and process it (e.g., via a \\\"Workflow data\\\" trigger node or by accessing `$json.workflowInputData` in its initial nodes).\\n\\n### 2. Execute Workflow:\\n* The `workflowId` to execute is dynamically set using the value from the previous step:\\n    `{{ $('Map webhook request to fields').item.json.targetWorkflowId }}`\\n* **Wait for Completion:** This node is configured to wait until the sub-workflow (the one being executed) finishes before continuing.\\n* Handles success and error responses separately.\"},\"typeVersion\":1},{\"id\":\"d65a14e3-151e-4328-90a4-73cf4e845c52\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-380,-1480],\"parameters\":{\"color\":4,\"width\":720,\"height\":480,\"content\":\"## 📄 GET Route: Fetch Workflow Info\\n\\nRetrieves n8n workflow details via `GET`. Uses n8n API (requires \\\"n8n API\\\" credentials).\\n\\n**Query Parameters:**\\n\\n* `workflowId=<ID>`: Fetches a single workflow by its ID.\\n* `includedWorkflows=<active|inactive|all>`: If `workflowId` is absent, filters workflows by status. Defaults to `all`.\\n* `mode=<full|summary>`:\\n    * `full`: Returns complete workflow JSON.\\n    * **Default (`summary` or other):** Returns key info (name, id, created/updated dates, active status).\\n\\n**Key Logic:**\\n\\n* The flow prioritizes `workflowId` if provided.\\n* The `mode` parameter dictates the output verbosity.\\n\\nFor n8n API details: [https://docs.n8n.io/integrations/apis/n8n-api/](https://docs.n8n.io/integrations/apis/n8n-api/)\"},\"typeVersion\":1},{\"id\":\"f914af41-3f8f-4b0c-af7d-bad82aad6a29\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1780,-120],\"parameters\":{\"width\":580,\"height\":240,\"content\":\"## 💡 Usage Example\\n\\nI used this workflow as the backend for a small Raycast extension. This extension lets me search and execute n8n workflows directly from Raycast.\\n\\nYou can check out the Raycast extension's code here:\\n[n8n Manager for Raycast GitHub Repository](https://github.com/jwa91/n8n-manager-raycast/)\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Webhook\":{\"main\":[[{\"node\":\"map parameters\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Map webhook request to fields\",\"type\":\"main\",\"index\":0}]]},\"full mode\":{\"main\":[[{\"node\":\"return all workflow info\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Map key workflow info\",\"type\":\"main\",\"index\":0}]]},\"map parameters\":{\"main\":[[{\"node\":\"Does workflowId Exist\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Return problem handling get request\",\"type\":\"main\",\"index\":0}]]},\"Execute Workflow\":{\"main\":[[{\"node\":\"return succes message\",\"type\":\"main\",\"index\":0}],[{\"node\":\"return problem executing workflow\",\"type\":\"main\",\"index\":0}]]},\"get all workflows\":{\"main\":[[{\"node\":\"full mode\",\"type\":\"main\",\"index\":0}],[{\"node\":\"return problem getting workflow error\",\"type\":\"main\",\"index\":0}]]},\"Included Workflows\":{\"main\":[[{\"node\":\"get all inactive workflows\",\"type\":\"main\",\"index\":0}],[{\"node\":\"get all active workflows\",\"type\":\"main\",\"index\":0}],[{\"node\":\"get all workflows\",\"type\":\"main\",\"index\":0}],[{\"node\":\"get all active workflows\",\"type\":\"main\",\"index\":0}]]},\"Does workflowId Exist\":{\"main\":[[{\"node\":\"Get specific workflowid\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Included Workflows\",\"type\":\"main\",\"index\":0}]]},\"Map key workflow info\":{\"main\":[[{\"node\":\"return summarized workflow info\",\"type\":\"main\",\"index\":0}]]},\"Get specific workflowid\":{\"main\":[[{\"node\":\"full mode\",\"type\":\"main\",\"index\":0}],[{\"node\":\"return problem getting workflow error\",\"type\":\"main\",\"index\":0}]]},\"get all active workflows\":{\"main\":[[{\"node\":\"full mode\",\"type\":\"main\",\"index\":0}],[{\"node\":\"return problem getting workflow error\",\"type\":\"main\",\"index\":0}]]},\"get all inactive workflows\":{\"main\":[[{\"node\":\"full mode\",\"type\":\"main\",\"index\":0}],[{\"node\":\"return problem getting workflow error\",\"type\":\"main\",\"index\":0}]]},\"Map webhook request to fields\":{\"main\":[[{\"node\":\"Execute Workflow\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Return problem handling request\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow provides a secure API endpoint to remotely trigger other n8n workflows with custom data and to retrieve information about your existing workflows. It's perfect for users who want to integrate n8n into external systems or programmatically manage their automations.\n\n_example usage: I use this workflow in a Raycast extension i have build, to execute n8n workflows from within Raycast:[see Github](https://github.com/jwa91/n8n-manager-raycast)_\n\n++**How it works** ++\n\n  1. **Receives API Calls:** A webhook listens for incoming HTTP requests (e.g., POST to trigger, GET to retrieve info).\n  2. **Triggers Workflows:** If the request is to trigger a workflow, it dynamically identifies the target workflow ID (from query parameters) and any input data (from the request body), then executes that workflow. This means you can control any of your workflows without modifying this manager template.\n  3. **Retrieves Workflow Info:** Similarly, if the request is to get information, it dynamically uses query parameters (`workflowId`, `mode`, `includedWorkflows`) to fetch details about one or more n8n workflows (e.g., specific, all, active, inactive; full or summarized data).\n  4. **Responds:** Sends back a JSON response indicating success/failure or the requested workflow data.\n\n\n\n++**Set it up** ++\n\n  1. **Configure Webhook Security:** Set up \"Header Auth\" credentials for the main Webhook node. This is the API key your external services will use.\n  2. **Add n8n API Credentials:** For the nodes that fetch workflow information (like \"Get specific workflowid\", \"get all active workflows\", etc.), connect your n8n API credentials. This allows the workflow to query your n8n instance.\n  3. **Note Your Webhook URL:** Once active, n8n provides a production URL for the webhook (path: `workflow-manager`). Use this URL to make API calls.\n  4. **Understand API Parameters:**\n     * To trigger: Use `?workflowId=[ID_OF_WORKFLOW_TO_RUN]` and send JSON data in the request body.\n     * To get info: Use parameters like `?workflowId=[ID]`, `?includedWorkflows=[all/active/inactive]`, and `?mode=[full/summary]`.\n\n\n",
  "crawled_at": "2025-05-26T06:47:39.658831",
  "readme_zh": "该工作流提供了一个安全的API端点，用于远程触发其他n8n工作流（支持自定义数据输入）并获取现有工作流信息。特别适合需要将n8n集成到外部系统或以编程方式管理自动化流程的用户。\n\n_使用示例：我已将该工作流应用于自建的Raycast扩展插件，实现从Raycast内部直接执行n8n工作流：[查看GitHub](https://github.com/jwa91/n8n-manager-raycast)_\n\n++**运作原理** ++\n\n  1. **接收API请求**：通过Webhook监听HTTP请求（如POST触发工作流，GET获取信息）\n  2. **触发工作流**：若为触发请求，则动态识别目标工作流ID（来自查询参数）和输入数据（来自请求体）并执行对应工作流。这意味着您无需修改本管理模板即可控制任意工作流\n  3. **获取工作流信息**：对于信息查询请求，动态使用查询参数（`workflowId`、`mode`、`includedWorkflows`）获取一个或多个n8n工作流详情（如特定/全部/活跃/非活跃工作流，完整或摘要数据）\n  4. **返回响应**：发送包含成功/失败状态或请求数据的JSON响应\n\n++**配置步骤** ++\n\n  1. **设置Webhook安全认证**：为主Webhook节点配置\"Header Auth\"凭证，作为外部系统调用的API密钥\n  2. **添加n8n API凭证**：为获取工作流信息的节点（如\"获取特定工作流ID\"、\"获取所有活跃工作流\"等）配置n8n API凭证，使工作流能查询您的n8n实例\n  3. **记录Webhook地址**：激活后n8n会生成生产环境URL（路径为`workflow-manager`），调用API时需使用该地址\n  4. **了解API参数**：\n     * 触发工作流：使用`?workflowId=[目标工作流ID]`并在请求体中发送JSON数据\n     * 获取信息：使用`?workflowId=[ID]`、`?includedWorkflows=[all/active/inactive]`、`?mode=[full/summary]`等参数",
  "title_zh": "n8n工作流管理器API",
  "publish_date_zh": "最后更新于6天前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"1eec3d74182f3fda9f29f20c85422320a70882840e1b07acd098d5b4a836392a\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"ab47d0ba-0544-4540-a462-70a2ce87143f\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1120,\n        -440\n      ],\n      \"webhookId\": \"26f7b45b-d6c6-4d26-a72b-28fe0d59c9f3\",\n      \"parameters\": {\n        \"path\": \"workflow-manager\",\n        \"options\": {},\n        \"responseMode\": \"responseNode\",\n        \"authentication\": \"headerAuth\",\n        \"multipleMethods\": true\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"N5JJ2pCqy9s6SMWZ\",\n          \"name\": \"Header Auth account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"479e7d11-4d29-43d7-9b51-4f15e760a117\",\n      \"name\": \"Map webhook request to fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"notes\": \"dont forget to add logic to triggered workflow if you use custom data.\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        -820,\n        -340\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c66c5a75-22a3-4b56-b40c-8403ed2dfbd4\",\n              \"name\": \"targetWorkflowId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.query.workflowId }}\"\n            },\n            {\n              \"id\": \"88ec0d2f-4d99-4307-ae5e-c5d3c1b75b98\",\n              \"name\": \"workflowInputData\",\n              \"type\": \"object\",\n              \"value\": \"={{ $json.body }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"6a685048-6a64-4888-b66b-a3ecb6319ac7\",\n      \"name\": \"Execute Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        -440,\n        -360\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"waitForSubWorkflow\": true\n        },\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $('Map webhook request to fields').item.json.targetWorkflowId }}\"\n        },\n        \"workflowInputs\": {\n          \"value\": {},\n          \"schema\": [],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": true\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"db3a0115-179b-4a70-8c27-aa126bfa43a0\",\n      \"name\": \"return succes message\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        20,\n        -460\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"allIncomingItems\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"327b7437-e4fa-4b82-97d2-4adf077df5d8\",\n      \"name\": \"return problem executing workflow\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        20,\n        -280\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"status\\\": \\\"problem_executing_workflow\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"331ce2d8-016f-40ed-8b74-8e75be54fac6\",\n      \"name\": \"Return problem handling request\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        20,\n        -80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"status\\\": \\\"problem_handling_request\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"eff4c9d9-5031-4d25-87c7-2fcd5a28ada5\",\n      \"name\": \"Map key workflow info\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1060,\n        -1140\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"87d4b5e7-540e-441c-9598-921d6d223e20\",\n              \"name\": \"name\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.name }}\"\n            },\n            {\n              \"id\": \"b3749a8f-0418-4409-8c0f-e8ca2bec9414\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"1db3eaca-95d2-4b5b-9fca-e6ca44eb4bc0\",\n              \"name\": \"createdAt\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.createdAt }}\"\n            },\n            {\n              \"id\": \"a42273df-e9c7-40a3-9f02-63792c0f6da5\",\n              \"name\": \"updatedAt\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.updatedAt }}\"\n            },\n            {\n              \"id\": \"7799575a-df04-4c29-8ee7-b8a6dc9d98d6\",\n              \"name\": \"active\",\n              \"type\": \"boolean\",\n              \"value\": \"={{ $json.active }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"fb406e55-9df4-43ac-b8b7-040e1438b925\",\n      \"name\": \"map parameters\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"notes\": \"dont forget to add logic to triggered workflow if you use custom data.\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        -820,\n        -600\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c66c5a75-22a3-4b56-b40c-8403ed2dfbd4\",\n              \"name\": \"mode\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.query.mode }}\"\n            },\n            {\n              \"id\": \"88ec0d2f-4d99-4307-ae5e-c5d3c1b75b98\",\n              \"name\": \"workflowId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.query.workflowId }}\"\n            },\n            {\n              \"id\": \"219d8188-71da-41a7-b849-a3f45877a94b\",\n              \"name\": \"includedWorkflows\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.query.includedWorkflows }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"84934ca3-eb86-4bda-b16c-1bdbf7b7073e\",\n      \"name\": \"Return problem handling get request\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1340,\n        -680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"status\\\": \\\"problem_handling_request\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"bfd7b91d-4972-48be-8f6d-887995f3e62d\",\n      \"name\": \"return all workflow info\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1320,\n        -1300\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"allIncomingItems\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"6f481e40-a8c1-40bc-a410-8e3606ac419b\",\n      \"name\": \"return summarized workflow info\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1320,\n        -1140\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 200\n        },\n        \"respondWith\": \"allIncomingItems\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"4d4bc237-c0e4-456f-acdf-fdaeec203693\",\n      \"name\": \"Get specific workflowid\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        400,\n        -1240\n      ],\n      \"parameters\": {\n        \"operation\": \"get\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.workflowId }}\"\n        },\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"3N1mURaRanSDYYnV\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"559e5e24-200f-44d1-a8e4-b5605afe81b3\",\n      \"name\": \"Included Workflows\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        0,\n        -940\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"inactive\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"6daea568-2be3-45ca-be56-ae0207a4f86d\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.includedWorkflows }}\",\n                    \"rightValue\": \"inactive\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"active\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"5a4debdd-03ac-4c1d-b2b5-ea8192d61717\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.includedWorkflows }}\",\n                    \"rightValue\": \"active\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"all\",\n              \"conditions\": {\n                \"options\": {\n                  \"version\": 2,\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"98ec6e1b-e5b5-4a9c-b505-23f237cabf9f\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.includedWorkflows }}\",\n                    \"rightValue\": \"all\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"fallbackOutput\": \"extra\",\n          \"renameFallbackOutput\": \"Fallback\"\n        }\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"id\": \"259f7da5-cd06-44a3-805c-bf5e29b6924c\",\n      \"name\": \"get all inactive workflows\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        400,\n        -1100\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"activeWorkflows\": \"={{ false }}\"\n        },\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"3N1mURaRanSDYYnV\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"30102b45-b578-437a-a6b3-49b39c18d7fa\",\n      \"name\": \"get all active workflows\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        400,\n        -940\n      ],\n      \"parameters\": {\n        \"filters\": {\n          \"activeWorkflows\": true\n        },\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"3N1mURaRanSDYYnV\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7eba5bb1-c863-4d0b-b157-5d5844860134\",\n      \"name\": \"get all workflows\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        400,\n        -780\n      ],\n      \"parameters\": {\n        \"filters\": {},\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"3N1mURaRanSDYYnV\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cd37d7c6-0a39-4d0d-81d0-29b530834429\",\n      \"name\": \"full mode\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        820,\n        -1240\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"44f3564e-83bf-46fc-9de7-1c9179029967\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $('map parameters').item.json.mode }}\",\n              \"rightValue\": \"full\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"47260845-2b55-47f2-a8ad-e4dc1d18a087\",\n      \"name\": \"return problem getting workflow error\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        1320,\n        -900\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 404\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"{\\n  \\\"status\\\": \\\"problem_getting_workflows\\\"\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"5e8a5ddc-ce4c-4a4a-99ab-ade961a18158\",\n      \"name\": \"Does workflowId Exist\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -420,\n        -960\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"53bb0221-a526-477f-bf31-7e26ad825f2b\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"exists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.workflowId }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"323d3126-fc6f-476f-978c-00f3c01f9e03\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1780,\n        -620\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 580,\n        \"height\": 480,\n        \"content\": \"## 🚀 工作流触发方式：Webhook\\n\\n本工作流起始于一个可通过`GET`和`POST`HTTP请求触发的**Webhook节点**。\\n\\n**认证方式：**\\n* 采用**请求头认证**\\n* n8n平台配置步骤：\\n    1. 进入「凭证管理」>「新建凭证」\\n    2. 选择\\\"Header Auth\\\"类型\\n    3. 在「名称」字段（认证头名称）填写`Authorization`\\n    4. 在「值」字段（认证头值）填写`Bearer 您的强密码密钥`（请将`您的强密码密钥`替换为安全密钥）\\n* 该Webhook将根据请求类型和执行结果，通过流程后置的专用**响应Webhook节点**进行应答\\n\\n**路径参数：** `workflow-manager`\\n（请根据实际部署需求调整Webhook节点中的路径设置）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"941bf6d3-b6b3-4e1f-8c1e-4e52fd809881\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -820,\n        -160\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 740,\n        \"height\": 460,\n        \"content\": \"## ▶️ POST路由：执行目标工作流\\n\\n此分支处理动态执行另一个n8n工作流的`POST`请求。\\n\\n### 1. 将Webhook请求映射到字段：\\n* 从请求的查询参数中提取`workflowId`（例如`?workflowId=目标工作流ID`）\\n* 提取POST请求的完整`body`作为`workflowInputData`传递给目标工作流\\n    * **注意：** 若在请求体中发送自定义数据，需确保被触发的工作流已设计为可接收处理该数据（例如通过\\\"工作流数据\\\"触发节点，或在初始节点中访问`$json.workflowInputData`）\\n\\n### 2. 执行工作流：\\n* 使用上一步骤的值动态设置待执行工作流的`workflowId`：\\n    `{{ $('将Webhook请求映射到字段').item.json.targetWorkflowId }}`\\n* **等待完成：** 该节点配置为等待子工作流（被执行的工作流）结束后才继续执行\\n* 分别处理成功和错误响应\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d65a14e3-151e-4328-90a4-73cf4e845c52\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -380,\n        -1480\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 720,\n        \"height\": 480,\n        \"content\": \"## 📄 GET 路由：获取工作流信息\\n\\n通过 `GET` 方法检索 n8n 工作流详情。需调用 n8n API（要求具备 \\\"n8n API\\\" 凭证）。\\n\\n**查询参数：**\\n\\n* `workflowId=<ID>`：根据 ID 获取单个工作流\\n* `includedWorkflows=<active|inactive|all>`：当未提供 `workflowId` 时，按状态筛选工作流。默认为 `all`\\n* `mode=<full|summary>`：\\n    * `full`：返回完整工作流 JSON\\n    * **默认值（`summary` 或其他值）：** 返回关键信息（名称、ID、创建/更新时间、激活状态）\\n\\n**核心逻辑：**\\n\\n* 若提供 `workflowId` 参数，流程将优先处理该参数\\n* `mode` 参数控制输出内容的详细程度\\n\\nn8n API 文档详见：[https://docs.n8n.io/integrations/apis/n8n-api/](https://docs.n8n.io/integrations/apis/n8n-api/)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f914af41-3f8f-4b0c-af7d-bad82aad6a29\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1780,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 580,\n        \"height\": 240,\n        \"content\": \"## 💡 使用示例\\n\\n我将此工作流作为一个小型Raycast扩展的后端使用。该扩展让我能够直接从Raycast中搜索并执行n8n工作流。\\n\\n您可以在以下位置查看Raycast扩展的代码：\\n[n8n Manager for Raycast GitHub仓库](https://github.com/jwa91/n8n-manager-raycast/)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"map parameters\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Map webhook request to fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"full mode\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"return all workflow info\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Map key workflow info\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"map parameters\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Does workflowId Exist\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Return problem handling get request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"return succes message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"return problem executing workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get all workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"full mode\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"return problem getting workflow error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Included Workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"get all inactive workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"get all active workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"get all workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"get all active workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Does workflowId Exist\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get specific workflowid\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Included Workflows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Map key workflow info\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"return summarized workflow info\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get specific workflowid\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"full mode\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"return problem getting workflow error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get all active workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"full mode\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"return problem getting workflow error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get all inactive workflows\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"full mode\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"return problem getting workflow error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Map webhook request to fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Execute Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Return problem handling request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}