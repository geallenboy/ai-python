{
  "url": "https://n8n.io/workflows/2419-visual-regression-testing-with-apify-and-ai-vision-model/",
  "title": "Visual Regression Testing with Apify and AI Vision Model",
  "author": "Jimleuk",
  "publish_date": "Last update 8 months ago",
  "publish_date_absolute": "2024-09-25",
  "categories": [
    {
      "name": "Engineering"
    },
    {
      "name": "AI"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"},\"nodes\":[{\"id\":\"cb62c9a5-2f43-4328-af94-84c2cb731d9c\",\"name\":\"Base Image\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[260,660],\"parameters\":{\"fileId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $json.base }}\"},\"options\":{\"binaryPropertyName\":\"data_1\"},\"operation\":\"download\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"yOwz41gMQclOadgu\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"b1c304cc-9949-441a-ac2a-275c8d4c51fc\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[1120,900],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-1.5-pro-latest\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"dSxo6ns5wn658r8N\",\"name\":\"Google Gemini(PaLM) Api account\"}},\"typeVersion\":1},{\"id\":\"964d94bf-be2a-424e-ab0e-c1c1fe260ebd\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[1320,900],\"parameters\":{\"schemaType\":\"manual\",\"inputSchema\":\"{\\n  \\\"type\\\": \\\"array\\\",\\n  \\\"items\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n\\t\\t\\\"type\\\": {\\n    \\t\\t\\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"type of regression. One of text, number, image, color or position.\\\"\\n  \\t\\t},\\n\\t\\t\\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"previous_state\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"current_state\\\": { \\\"type\\\": \\\"string\\\" }\\n\\t}\\n  }\\n}\"},\"typeVersion\":1.2},{\"id\":\"67195eb2-1729-42b0-8275-bdd6128b81aa\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2340,20],\"parameters\":{\"color\":4,\"width\":405.95003875719203,\"height\":180.74812634463558,\"content\":\"### Part A. Generate Base Images\\nBefore we can run our visual regression tests, we must generate a series of base screenshots to compare against. This part of the workflow uses an external website screenshotting service, [Apify.com](https://www.apify.com?fpr=414q6), to achieve this. This part of the workflow should only be run when we want to update our base screenshots.\"},\"typeVersion\":1},{\"id\":\"85f9b371-1710-4c9c-a0ed-210d9c0e5d64\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[162.7495769165307,500],\"parameters\":{\"color\":7,\"width\":702.1744987652204,\"height\":548.4621171664835,\"content\":\"## 5. Download Base and Generate new Webpage Screenshot\\n[Learn more about Apify.com](https://www.apify.com?fpr=414q6)\\n\\nLooping for each webpage, we'll do 2 tasks (1) download the base screenshot for the url and (2) and use our [Apify.com](https://www.apify.com?fpr=414q6) webpage screenshot actor again to generate a fresh screenshot.\"},\"typeVersion\":1},{\"id\":\"8bff4efc-d9f9-485c-b51d-a8edc29d1105\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[900,500],\"parameters\":{\"color\":7,\"width\":759.5372282495247,\"height\":548.702446115556,\"content\":\"## 6. Compare Screenshots using Vision Model\\n[Read more about the basic LLM chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\\n\\nTo carry out our visual regression test, we need to send both screenshots simultaneously to our Vision model. This is easily achieved using n8n's built-in basic LLM chain where we can define two user messages of the binary type. For our vision model, we'll use Google's Gemini but any capable vision model will also do the job. A Structured Output Parser is used here to return the AI's response in JSON format, this is for easier formatting purposes which we'll get to in the next step.\"},\"typeVersion\":1},{\"id\":\"a92d11e5-0985-4a8f-bc43-8bc0ca48e744\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[397.518987341772,93.8157360237642],\"parameters\":{\"color\":7,\"width\":885.2402868841493,\"height\":388.92815062755926,\"content\":\"## 7. Create Report In Linear\\n[Learn more about integrating with Linear.app](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.linear)\\n\\nFor the final step, we'll generate a simple report which will capture any changes detected in our webpages list. Let's do this by first combining our webpages with their test results and filter out any in the page where no changes were detected. Next, we'll aggregate all changes into the Linear.app node which will be formatted into a markdown snippet and used to create a new issue in Linear. If you don't use Linear, feel free to swap this out for JIRA or even Slack.\"},\"typeVersion\":1},{\"id\":\"3f52c006-6c0a-456d-ab3c-ee5a16726299\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[-1680,580],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"478ee25d-3f0f-4f6c-bf34-add1dc14c3cb\",\"name\":\"Wait\",\"type\":\"n8n-nodes-base.wait\",\"position\":[-1240,820],\"webhookId\":\"f06eab66-30a7-48ad-90ee-cb3394eb2edb\",\"parameters\":{\"amount\":2},\"typeVersion\":1.1},{\"id\":\"64b5f755-a85e-4ae5-ad81-113c1ef9b64c\",\"name\":\"Download Screenshot\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-1260,360],\"parameters\":{\"url\":\"={{ $json.screenshotUrl }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"8f99ef1f-1cdc-4d80-b858-e9960a805dd4\",\"name\":\"Upload to Drive\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[-1080,360],\"parameters\":{\"name\":\"={{ $('Merge').item.json.url.urlEncode() }}\",\"driveId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"My Drive\"},\"options\":{\"simplifyOutput\":true},\"folderId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1lAFxJPWcA_sOcjr3UUKKfFfoTwd4Stkh\",\"cachedResultUrl\":\"https://drive.google.com/drive/folders/1lAFxJPWcA_sOcjr3UUKKfFfoTwd4Stkh\",\"cachedResultName\":\"base_images\"}},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"yOwz41gMQclOadgu\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"5e253123-89ba-42d5-b743-60bfd1ebae5b\",\"name\":\"Update Base Image\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[-900,360],\"parameters\":{\"columns\":{\"value\":{\"url\":\"={{ $('Merge').item.json.url }}\",\"base\":\"={{ $json.id }}\"},\"schema\":[{\"id\":\"service\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"service\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"url\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"url\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"base\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"base\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[\"url\"]},\"options\":{},\"operation\":\"appendOrUpdate\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\"cachedResultName\":\"Visual Regression List\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"XHvC7jIRR8A2TlUl\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"fa7339b7-b7dd-4ecd-8dc2-f42f6549adb6\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[-1440,360],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineByPosition\"},\"typeVersion\":3},{\"id\":\"47845df9-a50e-429e-b81e-5eefd996d5c7\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-560,380],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"weeks\",\"triggerAtDay\":[1],\"triggerAtHour\":6}]}},\"typeVersion\":1.2},{\"id\":\"63492aa4-3535-4832-a9d0-0a949e46ec81\",\"name\":\"Get URLs with Missing Base Images\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[-1980,480],\"parameters\":{\"options\":{},\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\"cachedResultName\":\"Visual Regression List\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"XHvC7jIRR8A2TlUl\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"8907f3b9-0613-4057-8adb-fd5c4e25cf72\",\"name\":\"Run Webpage Screenshot\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-1420,820],\"parameters\":{\"url\":\"https://api.apify.com/v2/acts/apify~screenshot-url/run-sync-get-dataset-items\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={{\\n{\\n    \\\"delay\\\": 0,\\n    \\\"format\\\": \\\"png\\\",\\n    \\\"proxy\\\": {\\n        \\\"useApifyProxy\\\": true\\n    },\\n    \\\"scrollToBottom\\\": false,\\n    \\\"urls\\\": [\\n        {\\n            \\\"url\\\": $json.url\\n        }\\n    ],\\n    \\\"viewportWidth\\\": 1280,\\n    \\\"waitUntil\\\": \\\"domcontentloaded\\\",\\n    \\\"waitUntilNetworkIdleAfterScroll\\\": false\\n}\\n}}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpQueryAuth\"},\"credentials\":{\"httpQueryAuth\":{\"id\":\"cO2w8RDNOZg8DRa8\",\"name\":\"Apify API\"}},\"typeVersion\":4.2},{\"id\":\"3dc45b2d-4c4a-44d5-9b45-3e2144479603\",\"name\":\"Run Webpage Screenshot1\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[273,833],\"parameters\":{\"url\":\"https://api.apify.com/v2/acts/apify~screenshot-url/run-sync-get-dataset-items\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={{\\n{\\n    \\\"delay\\\": 0,\\n    \\\"format\\\": \\\"png\\\",\\n    \\\"proxy\\\": {\\n        \\\"useApifyProxy\\\": true\\n    },\\n    \\\"scrollToBottom\\\": false,\\n    \\\"urls\\\": [\\n        {\\n            \\\"url\\\": $json.url\\n        }\\n    ],\\n    \\\"viewportWidth\\\": 1280,\\n    \\\"waitUntil\\\": \\\"domcontentloaded\\\",\\n    \\\"waitUntilNetworkIdleAfterScroll\\\": false\\n}\\n}}\",\"sendBody\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpQueryAuth\"},\"credentials\":{\"httpQueryAuth\":{\"id\":\"cO2w8RDNOZg8DRa8\",\"name\":\"Apify API\"}},\"typeVersion\":4.2},{\"id\":\"672d64fb-7782-427e-8779-953e51118fbc\",\"name\":\"Has Changes\",\"type\":\"n8n-nodes-base.filter\",\"position\":[680,300],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"20b18a7e-bf98-4f39-baa9-4d965097526a\",\"operator\":{\"type\":\"array\",\"operation\":\"lengthGt\",\"rightType\":\"number\"},\"leftValue\":\"={{ $json.output }}\",\"rightValue\":0}]}},\"typeVersion\":2.2},{\"id\":\"efa168ec-ff05-471b-869f-cee5a222594a\",\"name\":\"Combine Row and Result\",\"type\":\"n8n-nodes-base.set\",\"position\":[500,300],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={{\\n{\\n  ...$('Get Webpages List').item.json,\\n  output: $json.output\\n}\\n}}\\n\"},\"typeVersion\":3.4},{\"id\":\"1fe901dc-f460-41b8-8042-0fcb0474092f\",\"name\":\"Wait1\",\"type\":\"n8n-nodes-base.wait\",\"position\":[1580,900],\"webhookId\":\"6bbf2e65-bed1-4efc-bb31-09d12c644dc5\",\"parameters\":{\"amount\":1},\"typeVersion\":1.1},{\"id\":\"7891f052-4073-4746-a04b-27c7c4fa1e63\",\"name\":\"Aggregate\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[860,300],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\"},\"typeVersion\":1},{\"id\":\"ef2b2ddb-51f9-4576-bd99-9efa39be5163\",\"name\":\"Create Report\",\"type\":\"n8n-nodes-base.linear\",\"position\":[1040,300],\"parameters\":{\"title\":\"=Visual Regression Report {{ $now.format('yyyy-MM-dd') }}\",\"teamId\":\"1c721608-321d-4132-ac32-6e92d04bb487\",\"additionalFields\":{\"description\":\"=Visual Regression Workflow picked up the following changes:\\n\\n{{\\n$json.data.map(row =>\\n`### ${row.url}\\n${row.output.map(issue =>\\n`* **${issue.description}** - expected \\\"${issue.previous_state}\\\" but got \\\"${issue.current_state}\\\"`\\n).join('\\\\n')}`\\n).join('\\\\n');\\n}}\"}},\"credentials\":{\"linearApi\":{\"id\":\"Nn0F7T9FtvRUtEbe\",\"name\":\"Linear account\"}},\"typeVersion\":1},{\"id\":\"477b89f7-00ca-4001-a246-0887bcb553eb\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-2180,480],\"parameters\":{},\"typeVersion\":1},{\"id\":\"eb7f6310-5465-4638-b702-5ecbd98a0199\",\"name\":\"Get Webpages List\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[-360,380],\"parameters\":{\"options\":{},\"filtersUI\":{\"values\":[{\"lookupValue\":\"2\",\"lookupColumn\":\"=row_number\"}]},\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\"cachedResultName\":\"Sheet1\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\"cachedResultName\":\"Visual Regression List\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"XHvC7jIRR8A2TlUl\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"6c0f7341-14c9-48c2-9447-edab0ad18df7\",\"name\":\"For Each Webpage...\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[-40,440],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"62e13166-458d-4c63-8911-740f9ceaeb54\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-660,160],\"parameters\":{\"color\":7,\"width\":561.2038065501644,\"height\":408.0284015307624,\"content\":\"## 4. Trigger Visual Regression Test Run\\n[Read more about the Schedule Trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/)\\n\\nOnce we've generated our base images to compare with in Part A, we can now run our Visual Regression Tests. These tests are intended to check for unexpected changes to a webpage by using some form of image detection. To trigger Part B, we'll start with a schedule trigger and pull a list of webpages to test from Google Sheets.\"},\"typeVersion\":1},{\"id\":\"8d958f44-fd2c-49b4-adbd-d8a99b2614c8\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2340,218.0216140230686],\"parameters\":{\"color\":7,\"width\":626.9985071319608,\"height\":487.40071048786325,\"content\":\"## 1. Get List of Webpages to Generate Base Images\\n[Learn more about using Google Sheets](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets/)\\n\\nThis workflow is split into 2 parts: Part A will generate the \\\"base\\\" screenshots to compare new screenshots against. To capture these base screenshots, we'll use Google Sheets to hold our list of webpages and their screenshot references (we'll come on to that later).\\n\\nExample Sheet: https://docs.google.com/spreadsheets/d/e/2PACX-1vTXRZRi55dUbLAsWZboJqH5U-EK0ZRSse8pkqANAV4Ss70otpQ97zgT8YBd3dL4d2u2UC1TTx_o1o1R/pubhtml\"},\"typeVersion\":1},{\"id\":\"ee776b4d-4532-4c08-ac38-35d40afbd8ad\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1480,580],\"parameters\":{\"color\":7,\"width\":653.369086691465,\"height\":443.1120543367141,\"content\":\"## 2. Generate Webpage Screenshot via Apify\\n[Learn more about Apify.com](https://www.apify.com?fpr=414q6)\\n\\nTo generate a screenshot of the webpage, we'll need a third party service since this functionality is outside the scope of n8n. Feel free to pick whichever internal or external service works for you but I've had great experience using [Apify.com](https://www.apify.com?fpr=414q6) - a popular webscraping SaaS who offer a generous free plan and require very little configuration to get started.\\n\\nThe Apify \\\"actor\\\" (ie. a type of scraper) we'll be using is specifically designed to take webpage screenshots.\"},\"typeVersion\":1},{\"id\":\"3d90e103-2829-4075-b3d4-5ba848af4843\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1520,160],\"parameters\":{\"color\":7,\"width\":808.188722669735,\"height\":397.73072497123115,\"content\":\"## 3. Upload Screenshot to Google Drive\\n[Read more about using the Google Drive node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/)\\n\\nOnce we have our screenshots, we'll download them from Apify and upload them to our Google Drive for safe keeping. After uploading, we'll capture the new Google Drive IDs for the images into our Google Sheet, this will allow us to reference them again when we perform the visual regression testing.\"},\"typeVersion\":1},{\"id\":\"e47d14ec-ad78-42c8-a294-301dcd581a67\",\"name\":\"Download New Screenshot\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[453,833],\"parameters\":{\"url\":\"={{ $json.screenshotUrl }}\",\"options\":{\"response\":{\"response\":{\"responseFormat\":\"file\",\"outputPropertyName\":\"data_2\"}}}},\"typeVersion\":4.2},{\"id\":\"8ca118bc-3d19-48ac-9d9c-0892993da736\",\"name\":\"Combine Screenshots\",\"type\":\"n8n-nodes-base.merge\",\"position\":[660,660],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combineBy\":\"combineByPosition\"},\"typeVersion\":3},{\"id\":\"03359cbb-d7af-4118-a32a-3fe24062dc9f\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-660,20],\"parameters\":{\"color\":4,\"width\":394.03359370567625,\"height\":111.52173490405977,\"content\":\"### Part B. Run Visual Regression Test\\nIn this part of the workflow, we'll retrieve our list of webpages to test with our AI vision model. This part can be run as many times as required.\"},\"typeVersion\":1},{\"id\":\"a78c0f92-aa61-483b-95bf-dd60958f182d\",\"name\":\"Sticky Note9\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2920,220],\"parameters\":{\"width\":553.2963720930223,\"height\":473.4987906976746,\"content\":\"## Try It Out!\\n\\n### This workflow implements an approach to Visual Regression Testing - a means to test websites for defects - using AI Vision Models.\\n\\nThis workflow uses a Google Sheet to track a list of webpages to test and is split into 2 parts; Part A generates the base screenshots of the list and Part B runs the visual regression testing.\\n\\nThe example spreadsheet can be found here: https://docs.google.com/spreadsheets/d/e/2PACX-1vTXRZRi55dUbLAsWZboJqH5U-EK0ZRSse8pkqANAV4Ss70otpQ97zgT8YBd3dL4d2u2UC1TTx_o1o1R/pubhtml\\n\\n**[Apify.com](https://www.apify.com?fpr=414q6)** is the screenshot generator of choice and a free account with $5 in credit is available via this [link](https://www.apify.com?fpr=414q6).\\n\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\"},\"typeVersion\":1},{\"id\":\"a0b257e5-99f8-409a-bc67-2468db377d6c\",\"name\":\"Visual Regression Agent\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[1120,740],\"parameters\":{\"text\":\"Identify changes between the base image and test image.\",\"messages\":{\"messageValues\":[{\"message\":\"=You help with visual regression testing for websites. Identify changes to text content, images, colors, position and layouts of the elements in the screenshots. Ignore text styling or casing changes.\\nThe first image will be the base image and the second image will be the test. Note all changes to the test image which differ from the base. If there are no changes, it is okay to return an empty array.\"},{\"type\":\"HumanMessagePromptTemplate\",\"messageType\":\"imageBinary\",\"binaryImageDataKey\":\"data_1\"},{\"type\":\"HumanMessagePromptTemplate\",\"messageType\":\"imageBinary\",\"binaryImageDataKey\":\"data_2\"}]},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.4}],\"pinData\":{},\"connections\":{\"Wait\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Merge\":{\"main\":[[{\"node\":\"Download Screenshot\",\"type\":\"main\",\"index\":0}]]},\"Wait1\":{\"main\":[[{\"node\":\"For Each Webpage...\",\"type\":\"main\",\"index\":0}]]},\"Aggregate\":{\"main\":[[{\"node\":\"Create Report\",\"type\":\"main\",\"index\":0}]]},\"Base Image\":{\"main\":[[{\"node\":\"Combine Screenshots\",\"type\":\"main\",\"index\":0}]]},\"Has Changes\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}],[{\"node\":\"Run Webpage Screenshot\",\"type\":\"main\",\"index\":0}]]},\"Upload to Drive\":{\"main\":[[{\"node\":\"Update Base Image\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Get Webpages List\",\"type\":\"main\",\"index\":0}]]},\"Get Webpages List\":{\"main\":[[{\"node\":\"For Each Webpage...\",\"type\":\"main\",\"index\":0}]]},\"Combine Screenshots\":{\"main\":[[{\"node\":\"Visual Regression Agent\",\"type\":\"main\",\"index\":0}]]},\"Download Screenshot\":{\"main\":[[{\"node\":\"Upload to Drive\",\"type\":\"main\",\"index\":0}]]},\"For Each Webpage...\":{\"main\":[[{\"node\":\"Combine Row and Result\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Base Image\",\"type\":\"main\",\"index\":0},{\"node\":\"Run Webpage Screenshot1\",\"type\":\"main\",\"index\":0}]]},\"Combine Row and Result\":{\"main\":[[{\"node\":\"Has Changes\",\"type\":\"main\",\"index\":0}]]},\"Run Webpage Screenshot\":{\"main\":[[{\"node\":\"Wait\",\"type\":\"main\",\"index\":0}]]},\"Download New Screenshot\":{\"main\":[[{\"node\":\"Combine Screenshots\",\"type\":\"main\",\"index\":1}]]},\"Run Webpage Screenshot1\":{\"main\":[[{\"node\":\"Download New Screenshot\",\"type\":\"main\",\"index\":0}]]},\"Visual Regression Agent\":{\"main\":[[{\"node\":\"Wait1\",\"type\":\"main\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Visual Regression Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Visual Regression Agent\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Get URLs with Missing Base Images\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0},{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Get URLs with Missing Base Images\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This n8n workflow is a proof-of-concept template exploring how we might work with multimodal LLMs and their multi-image analysis capabilities. In this demo, we compare 2 screenshots of a webpage taken at different timestamps and pass both to our multimodal LLM for a visual comparison of differences. Handling multiple binary inputs (ie. images) in an AI request is supported by n8n's basic LLM node.\n\n## How it works\n\nThis template is intended to run as 2 parts: first to generate the base screenshots and next to run the visual regression test which captures fresh screenshots.\n\n  * Starting with a list of webpages captured in a Google sheet, base screenshots are captured for each using a external web scraping service called [Apify.com](https://www.apify.com?fpr=414q6) (I prefer Apify but feel free to use whichever web scraping service available to you)\n  * These base screenshots are uploaded to Google Drive and will be referenced later when we run our testing.\n  * Phase 2 of the workflow, we'll use a scheduled trigger to fire sometime in the future which will reuse our web scraping service to generate fresh screenshots of our desired webpages.\n  * Next, re-download our base screenshots in parallel and with both old and new captures, we'll pass these to our LLM node. In the LLM node's options, we'll define 2 \"user message\" inputs with the type of binary (data) for our images.\n  * Finally, we'll prompt our LLM with our testing criteria and capture the regressions detected. Note, results will vary depending on which LLM you use.\n  * A final report can be generated using the LLM's output and is uploaded to Linear.\n\n\n\n## Requirements\n\n  * [Apify.com](https://www.apify.com?fpr=414q6) API key for web screenshotting service\n  * Google Drive and Sheets access to store list of webpages and captures\n\n\n\n## Customising this workflow\n\n  * Have your own preferred web screenshotting service? Feel free to swap out Apify with your service of choice.\n\n  * If the web screenshot is too large, it may prove difficult for the LLM to spot differences with precision. Try splitting up captures into smaller images instead.\n\n\n\n",
  "crawled_at": "2025-05-25T23:48:19.841867",
  "readme_zh": "该n8n工作流是一个概念验证模板，旨在探索如何利用多模态大语言模型（LLM）及其多图像分析能力。本演示通过对比同一网页在不同时间戳下的两张截图，将其输入多模态LLM进行视觉差异分析。n8n的基础LLM节点支持在AI请求中处理多个二进制输入（如图像）。\n\n## 工作原理\n\n该模板分两个阶段运行：首先生成基准截图，随后执行视觉回归测试并获取新截图。\n\n* 从Google表格记录的网页列表开始，使用外部网页抓取服务[Apify.com](https://www.apify.com?fpr=414q6)（推荐Apify但可替换为其他服务）为每个网页生成基准截图\n* 基准截图将上传至Google Drive，供后续测试阶段调用\n* 工作流第二阶段通过计划触发器在未来某个时间点启动，复用网页抓取服务生成目标网页的最新截图\n* 同步重新下载基准截图后，将新旧截图共同传入LLM节点。在LLM节点设置中，需定义两个\"用户消息\"输入框，并将图像设为二进制数据类型\n* 最后向LLM提交测试标准并记录检测到的差异。注意：结果因所选LLM不同可能存在差异\n* 根据LLM输出生成最终报告并上传至Linear\n\n## 环境要求\n\n* [Apify.com](https://www.apify.com?pr=414q6) API密钥（用于网页截图服务）\n* Google Drive及Sheets访问权限（存储网页列表与截图）\n\n## 自定义调整\n\n* 可自由替换Apify为您偏好的网页截图服务\n* 若网页截图尺寸过大，可能影响LLM的差异识别精度。建议将截图分割为更小尺寸的图像进行处理",
  "title_zh": "利用Apify与AI视觉模型进行视觉回归测试",
  "publish_date_zh": "最后更新于7个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"cb62c9a5-2f43-4328-af94-84c2cb731d9c\",\n      \"name\": \"Base Image\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        260,\n        660\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.base }}\"\n        },\n        \"options\": {\n          \"binaryPropertyName\": \"data_1\"\n        },\n        \"operation\": \"download\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"yOwz41gMQclOadgu\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"b1c304cc-9949-441a-ac2a-275c8d4c51fc\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        1120,\n        900\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-1.5-pro-latest\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"dSxo6ns5wn658r8N\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"964d94bf-be2a-424e-ab0e-c1c1fe260ebd\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1320,\n        900\n      ],\n      \"parameters\": {\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n  \\\"type\\\": \\\"array\\\",\\n  \\\"items\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n\\t\\t\\\"type\\\": {\\n    \\t\\t\\\"type\\\": \\\"string\\\",\\n            \\\"description\\\": \\\"type of regression. One of text, number, image, color or position.\\\"\\n  \\t\\t},\\n\\t\\t\\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"previous_state\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"current_state\\\": { \\\"type\\\": \\\"string\\\" }\\n\\t}\\n  }\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"67195eb2-1729-42b0-8275-bdd6128b81aa\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2340,\n        20\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 405.95003875719203,\n        \"height\": 180.74812634463558,\n        \"content\": \"### 第一部分：生成基准图像  \\n在执行视觉回归测试前，需先生成一系列基准截图作为比对依据。本环节通过外部网站截图服务[Apify.com](https://www.apify.com?fpr=414q6)实现，仅当需要更新基准截图时才运行此流程。  \\n\\n（注：根据技术文档翻译规范，对原文进行了以下处理：  \\n1. 将\\\"Part A\\\"转化为中文分级标题格式  \\n2. \\\"base screenshots\\\"译为\\\"基准截图\\\"符合测试领域术语  \\n3. 长句拆分为符合中文阅读习惯的短句结构  \\n4. 保留专业服务名称Apify.com及原始链接  \\n5. 添加\\\"本环节\\\"作为流程指代，使上下文更连贯  \\n6. 使用\\\"比对依据\\\"替代直译\\\"compare against\\\"更符合中文技术文档表达）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"85f9b371-1710-4c9c-a0ed-210d9c0e5d64\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        162.7495769165307,\n        500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 702.1744987652204,\n        \"height\": 548.4621171664835,\n        \"content\": \"## 5. 下载基准并生成新的网页截图  \\n[了解更多关于Apify.com的信息](https://www.apify.com?fpr=414q6)  \\n\\n针对每个网页循环执行两项任务：(1) 下载该网址的基准截图，(2) 再次使用我们的[Apify.com](https://www.apify.com?fpr=414q6)网页截图工具生成最新截图。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8bff4efc-d9f9-485c-b51d-a8edc29d1105\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        900,\n        500\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 759.5372282495247,\n        \"height\": 548.702446115556,\n        \"content\": \"## 6. 使用视觉模型对比截图\\n[了解更多基础LLM链信息](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\\n\\n要实现视觉回归测试，我们需要将两张截图同时发送给视觉模型。通过n8n内置的基础LLM链可以轻松实现——只需定义两条二进制类型的用户消息即可。我们将选用谷歌Gemini作为视觉模型，当然任何具备该能力的视觉模型都能胜任此任务。此处采用结构化输出解析器，以JSON格式返回AI响应，此举旨在简化后续步骤中的格式处理工作。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a92d11e5-0985-4a8f-bc43-8bc0ca48e744\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        397.518987341772,\n        93.8157360237642\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 885.2402868841493,\n        \"height\": 388.92815062755926,\n        \"content\": \"## 7. 在Linear中创建报告\\n[了解更多关于与Linear.app集成的信息](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.linear)\\n\\n最后一步，我们将生成一个简单的报告，记录网页列表中检测到的所有变更。首先，我们将网页与其测试结果合并，并筛选出未检测到变更的页面。接着，将所有变更汇总至Linear.app节点，这些变更将被格式化为Markdown片段，并用于在Linear中创建新问题。如果您不使用Linear，可以将其替换为JIRA或Slack等其他工具。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3f52c006-6c0a-456d-ab3c-ee5a16726299\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1680,\n        580\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"478ee25d-3f0f-4f6c-bf34-add1dc14c3cb\",\n      \"name\": \"Wait\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        -1240,\n        820\n      ],\n      \"webhookId\": \"f06eab66-30a7-48ad-90ee-cb3394eb2edb\",\n      \"parameters\": {\n        \"amount\": 2\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"64b5f755-a85e-4ae5-ad81-113c1ef9b64c\",\n      \"name\": \"Download Screenshot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1260,\n        360\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.screenshotUrl }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8f99ef1f-1cdc-4d80-b858-e9960a805dd4\",\n      \"name\": \"Upload to Drive\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -1080,\n        360\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $('Merge').item.json.url.urlEncode() }}\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\"\n        },\n        \"options\": {\n          \"simplifyOutput\": true\n        },\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1lAFxJPWcA_sOcjr3UUKKfFfoTwd4Stkh\",\n          \"cachedResultUrl\": \"https://drive.google.com/drive/folders/1lAFxJPWcA_sOcjr3UUKKfFfoTwd4Stkh\",\n          \"cachedResultName\": \"base_images\"\n        }\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"yOwz41gMQclOadgu\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"5e253123-89ba-42d5-b743-60bfd1ebae5b\",\n      \"name\": \"Update Base Image\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -900,\n        360\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"url\": \"={{ $('Merge').item.json.url }}\",\n            \"base\": \"={{ $json.id }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"service\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"service\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"url\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"url\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"base\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"base\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"url\"\n          ]\n        },\n        \"options\": {},\n        \"operation\": \"appendOrUpdate\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Visual Regression List\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"fa7339b7-b7dd-4ecd-8dc2-f42f6549adb6\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        -1440,\n        360\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"47845df9-a50e-429e-b81e-5eefd996d5c7\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -560,\n        380\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"weeks\",\n              \"triggerAtDay\": [\n                1\n              ],\n              \"triggerAtHour\": 6\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"63492aa4-3535-4832-a9d0-0a949e46ec81\",\n      \"name\": \"Get URLs with Missing Base Images\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -1980,\n        480\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Visual Regression List\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"8907f3b9-0613-4057-8adb-fd5c4e25cf72\",\n      \"name\": \"Run Webpage Screenshot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1420,\n        820\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.apify.com/v2/acts/apify~screenshot-url/run-sync-get-dataset-items\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n{\\n    \\\"delay\\\": 0,\\n    \\\"format\\\": \\\"png\\\",\\n    \\\"proxy\\\": {\\n        \\\"useApifyProxy\\\": true\\n    },\\n    \\\"scrollToBottom\\\": false,\\n    \\\"urls\\\": [\\n        {\\n            \\\"url\\\": $json.url\\n        }\\n    ],\\n    \\\"viewportWidth\\\": 1280,\\n    \\\"waitUntil\\\": \\\"domcontentloaded\\\",\\n    \\\"waitUntilNetworkIdleAfterScroll\\\": false\\n}\\n}}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\"\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"cO2w8RDNOZg8DRa8\",\n          \"name\": \"Apify API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"3dc45b2d-4c4a-44d5-9b45-3e2144479603\",\n      \"name\": \"Run Webpage Screenshot1\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        273,\n        833\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.apify.com/v2/acts/apify~screenshot-url/run-sync-get-dataset-items\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={{\\n{\\n    \\\"delay\\\": 0,\\n    \\\"format\\\": \\\"png\\\",\\n    \\\"proxy\\\": {\\n        \\\"useApifyProxy\\\": true\\n    },\\n    \\\"scrollToBottom\\\": false,\\n    \\\"urls\\\": [\\n        {\\n            \\\"url\\\": $json.url\\n        }\\n    ],\\n    \\\"viewportWidth\\\": 1280,\\n    \\\"waitUntil\\\": \\\"domcontentloaded\\\",\\n    \\\"waitUntilNetworkIdleAfterScroll\\\": false\\n}\\n}}\",\n        \"sendBody\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpQueryAuth\"\n      },\n      \"credentials\": {\n        \"httpQueryAuth\": {\n          \"id\": \"cO2w8RDNOZg8DRa8\",\n          \"name\": \"Apify API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"672d64fb-7782-427e-8779-953e51118fbc\",\n      \"name\": \"Has Changes\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        680,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"20b18a7e-bf98-4f39-baa9-4d965097526a\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"lengthGt\",\n                \"rightType\": \"number\"\n              },\n              \"leftValue\": \"={{ $json.output }}\",\n              \"rightValue\": 0\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"efa168ec-ff05-471b-869f-cee5a222594a\",\n      \"name\": \"Combine Row and Result\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        500,\n        300\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={{\\n{\\n  ...$('Get Webpages List').item.json,\\n  output: $json.output\\n}\\n}}\\n\"\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"1fe901dc-f460-41b8-8042-0fcb0474092f\",\n      \"name\": \"Wait1\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        1580,\n        900\n      ],\n      \"webhookId\": \"6bbf2e65-bed1-4efc-bb31-09d12c644dc5\",\n      \"parameters\": {\n        \"amount\": 1\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"7891f052-4073-4746-a04b-27c7c4fa1e63\",\n      \"name\": \"Aggregate\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        860,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ef2b2ddb-51f9-4576-bd99-9efa39be5163\",\n      \"name\": \"Create Report\",\n      \"type\": \"n8n-nodes-base.linear\",\n      \"position\": [\n        1040,\n        300\n      ],\n      \"parameters\": {\n        \"title\": \"=Visual Regression Report {{ $now.format('yyyy-MM-dd') }}\",\n        \"teamId\": \"1c721608-321d-4132-ac32-6e92d04bb487\",\n        \"additionalFields\": {\n          \"description\": \"=Visual Regression Workflow picked up the following changes:\\n\\n{{\\n$json.data.map(row =>\\n`### ${row.url}\\n${row.output.map(issue =>\\n`* **${issue.description}** - expected \\\"${issue.previous_state}\\\" but got \\\"${issue.current_state}\\\"`\\n).join('\\\\n')}`\\n).join('\\\\n');\\n}}\"\n        }\n      },\n      \"credentials\": {\n        \"linearApi\": {\n          \"id\": \"Nn0F7T9FtvRUtEbe\",\n          \"name\": \"Linear account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"477b89f7-00ca-4001-a246-0887bcb553eb\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -2180,\n        480\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"eb7f6310-5465-4638-b702-5ecbd98a0199\",\n      \"name\": \"Get Webpages List\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -360,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"filtersUI\": {\n          \"values\": [\n            {\n              \"lookupValue\": \"2\",\n              \"lookupColumn\": \"=row_number\"\n            }\n          ]\n        },\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit#gid=0\",\n          \"cachedResultName\": \"Sheet1\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1RbobwHCJiYKnic6T-VA3kPr-Grd4Y_ZSQXqy2st_T84/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Visual Regression List\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"6c0f7341-14c9-48c2-9447-edab0ad18df7\",\n      \"name\": \"For Each Webpage...\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -40,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"62e13166-458d-4c63-8911-740f9ceaeb54\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -660,\n        160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 561.2038065501644,\n        \"height\": 408.0284015307624,\n        \"content\": \"## 4. 触发视觉回归测试运行\\n[详细了解计划触发器](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.scheduletrigger/)\\n\\n在完成A部分生成基准对比图像后，我们现在可以运行视觉回归测试了。这些测试旨在通过图像检测技术，检查网页是否存在意外变更。要启动B部分流程，我们将首先配置计划触发器，并从Google表格中获取待测试的网页列表。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d958f44-fd2c-49b4-adbd-d8a99b2614c8\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2340,\n        218.0216140230686\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 626.9985071319608,\n        \"height\": 487.40071048786325,\n        \"content\": \"## 1. 获取待生成基准图像的网页列表  \\n[详细了解如何使用Google表格](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlesheets/)  \\n\\n该工作流分为两部分：A部分将生成用于比对新截图的\\\"基准\\\"截图。我们将使用Google表格来存储目标网页列表及其截图引用（后续会详细说明），以捕获这些基准截图。  \\n\\n示例表格：https://docs.google.com/spreadsheets/d/e/2PACX-1vTXRZRi55dUbLAsWZboJqH5U-EK0ZRSse8pkqANAV4Ss70otpQ97zgT8YBd3dL4d2u2UC1TTx_o1o1R/pubhtml\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ee776b4d-4532-4c08-ac38-35d40afbd8ad\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1480,\n        580\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 653.369086691465,\n        \"height\": 443.1120543367141,\n        \"content\": \"## 2. 通过Apify生成网页截图  \\n[了解更多关于Apify.com的信息](https://www.apify.com?fpr=414q6)  \\n\\n由于该功能超出了n8n的范围，我们需要借助第三方服务来生成网页截图。您可以选择任何适合的内部或外部服务，但我个人推荐使用[Apify.com](https://www.apify.com?fpr=414q6)——这是一家流行的网页抓取SaaS平台，提供丰富的免费计划且配置简单易上手。  \\n\\n我们将使用的Apify“actor”（即一种爬虫工具）是专门为网页截图设计的。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3d90e103-2829-4075-b3d4-5ba848af4843\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1520,\n        160\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 808.188722669735,\n        \"height\": 397.73072497123115,\n        \"content\": \"## 3. 将截图上传至Google Drive\\n[详细了解如何使用Google Drive节点](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googledrive/)\\n\\n获取截图后，我们将从Apify下载这些图片并上传至Google Drive进行安全存储。上传完成后，我们会将图片在Google Drive中的新ID记录到Google表格中，这样在进行视觉回归测试时就能再次引用这些文件。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e47d14ec-ad78-42c8-a294-301dcd581a67\",\n      \"name\": \"Download New Screenshot\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        453,\n        833\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.screenshotUrl }}\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"file\",\n              \"outputPropertyName\": \"data_2\"\n            }\n          }\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"8ca118bc-3d19-48ac-9d9c-0892993da736\",\n      \"name\": \"Combine Screenshots\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        660,\n        660\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combineBy\": \"combineByPosition\"\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"03359cbb-d7af-4118-a32a-3fe24062dc9f\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -660,\n        20\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 394.03359370567625,\n        \"height\": 111.52173490405977,\n        \"content\": \"### 第二部分：执行视觉回归测试  \\n在此工作流程环节中，我们将获取待测试的网页列表，并使用AI视觉模型进行检测。该环节可根据需要多次运行。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a78c0f92-aa61-483b-95bf-dd60958f182d\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2920,\n        220\n      ],\n      \"parameters\": {\n        \"width\": 553.2963720930223,\n        \"height\": 473.4987906976746,\n        \"content\": \"## 动手试试吧！\\n\\n### 本工作流采用AI视觉模型实现可视化回归测试——一种检测网站缺陷的测试方法。\\n\\n该工作流使用Google表格记录待测试网页列表，分为两部分：A部分生成网页基准截图，B部分执行可视化回归测试。\\n\\n示例电子表格可在此处查看：https://docs.google.com/spreadsheets/d/e/2PACX-1vTXRZRi55dUbLAsWZboJqH5U-EK0ZRSse8pkqANAV4Ss70otpQ97zgT8YBd3dL4d2u2UC1TTx_o1o1R/pubhtml\\n\\n我们选用**[Apify.com](https://www.apify.com?fpr=414q6)**作为截图生成工具，通过此[链接](https://www.apify.com?fpr=414q6)可注册含5美元赠金的免费账户。\\n\\n### 需要帮助？\\n加入[Discord讨论群](https://discord.com/invite/XPKeKXeB7d)或在[论坛提问](https://community.n8n.io/)！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a0b257e5-99f8-409a-bc67-2468db377d6c\",\n      \"name\": \"Visual Regression Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        1120,\n        740\n      ],\n      \"parameters\": {\n        \"text\": \"Identify changes between the base image and test image.\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"=You help with visual regression testing for websites. Identify changes to text content, images, colors, position and layouts of the elements in the screenshots. Ignore text styling or casing changes.\\nThe first image will be the base image and the second image will be the test. Note all changes to the test image which differ from the base. If there are no changes, it is okay to return an empty array.\"\n            },\n            {\n              \"type\": \"HumanMessagePromptTemplate\",\n              \"messageType\": \"imageBinary\",\n              \"binaryImageDataKey\": \"data_1\"\n            },\n            {\n              \"type\": \"HumanMessagePromptTemplate\",\n              \"messageType\": \"imageBinary\",\n              \"binaryImageDataKey\": \"data_2\"\n            }\n          ]\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.4\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Wait\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download Screenshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"For Each Webpage...\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Report\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Base Image\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Screenshots\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Has Changes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ],\n        [\n          {\n            \"node\": \"Run Webpage Screenshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Upload to Drive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Base Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Webpages List\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Webpages List\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"For Each Webpage...\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Screenshots\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Visual Regression Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download Screenshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload to Drive\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"For Each Webpage...\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Row and Result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Base Image\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Run Webpage Screenshot1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Row and Result\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Has Changes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Run Webpage Screenshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download New Screenshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Screenshots\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Run Webpage Screenshot1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download New Screenshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Visual Regression Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Wait1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Visual Regression Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Visual Regression Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get URLs with Missing Base Images\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get URLs with Missing Base Images\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}