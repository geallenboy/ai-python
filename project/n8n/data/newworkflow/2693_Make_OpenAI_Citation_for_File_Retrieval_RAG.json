{
  "url": "https://n8n.io/workflows/2693-make-openai-citation-for-file-retrieval-rag/",
  "title": "Make OpenAI Citation for File Retrieval RAG",
  "author": "Davi Saranszky Mesquita",
  "publish_date": "Last update 4 months ago",
  "publish_date_absolute": "2025-01-26",
  "categories": [
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"5NAbfX550LJsfz6f\",\"meta\":{\"instanceId\":\"00493e38fecfc163cb182114bc2fab90114038eb9aad665a7a752d076920d3d5\",\"templateCredsSetupCompleted\":true},\"name\":\"Make OpenAI Citation for File Retrieval RAG\",\"tags\":[{\"id\":\"urxRtGxxLObZWPvX\",\"name\":\"sample\",\"createdAt\":\"2024-09-13T02:43:13.014Z\",\"updatedAt\":\"2024-09-13T02:43:13.014Z\"},{\"id\":\"nMXS3c9l1WqDwWF5\",\"name\":\"assist\",\"createdAt\":\"2024-12-23T16:09:38.737Z\",\"updatedAt\":\"2024-12-23T16:09:38.737Z\"}],\"nodes\":[{\"id\":\"b9033511-3421-467a-9bfa-73af01b99c4f\",\"name\":\"Aggregate\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[740,120],\"parameters\":{\"options\":{},\"aggregate\":\"aggregateAllItemData\"},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"a61dd9d3-4faa-4878-a6f3-ba8277279002\",\"name\":\"Window Buffer Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[980,-320],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"2daabca5-37ec-4cad-9157-29926367e1a7\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[220,320],\"parameters\":{\"color\":3,\"width\":840,\"height\":80,\"content\":\"## Within N8N, there will be a chat button to test\"},\"typeVersion\":1},{\"id\":\"bf4485b1-cd94-41c8-a183-bf1b785f2761\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-440,-520],\"parameters\":{\"color\":5,\"width\":500,\"height\":720,\"content\":\"## Make OpenAI Citation for File Retrieval RAG\\n\\n## Use case\\n\\nIn this example, we will ensure that all texts from the OpenAI assistant search for citations and sources in the vector store files. We can also format the output for Markdown or HTML tags.\\n\\nThis is necessary because the assistant sometimes generates strange characters, and we can also use dynamic references such as citations 1, 2, 3, for example.\\n\\n## What this workflow does\\n\\nIn this workflow, we will use an OpenAI assistant created within their interface, equipped with a vector store containing some files for file retrieval.\\n\\nThe assistant will perform the file search within the OpenAI infrastructure and will return the content with citations.\\n\\n- We will make an HTTP request to retrieve all the details we need to format the text output.\\n\\n## Setup\\n\\nInsert an OpenAI Key\\n\\n## How to adjust it to your needs\\n\\nAt the end of the workflow, we have a block of code that will format the output, and there we can add Markdown tags to create links. Optionally, we can transform the Markdown formatting into HTML.\\n\\n\\nby Davi Saranszky Mesquita\\nhttps://www.linkedin.com/in/mesquitadavi/\"},\"typeVersion\":1},{\"id\":\"539a4e40-9745-4a26-aba8-2cc2b0dd6364\",\"name\":\"Create a simple Trigger to have the Chat button within N8N\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"notes\":\"https://www.npmjs.com/package/@n8n/chat\",\"position\":[260,-520],\"webhookId\":\"8ccaa299-6f99-427b-9356-e783893a3d0c\",\"parameters\":{\"options\":{}},\"notesInFlow\":true,\"typeVersion\":1.1},{\"id\":\"aa5b2951-df32-43ac-9939-83b02d818e73\",\"name\":\"OpenAI Assistant with Vector Store\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[580,-520],\"parameters\":{\"options\":{\"preserveOriginalTools\":false},\"resource\":\"assistant\",\"assistantId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"asst_QAfdobVCVCMJz8LmaEC7nlId\",\"cachedResultName\":\"Teste\"}},\"credentials\":{\"openAiApi\":{\"id\":\"UfNrqPCRlD8FD9mk\",\"name\":\"OpenAi Lourival\"}},\"typeVersion\":1.7},{\"id\":\"1817b673-6cb3-49aa-9f38-a5876eb0e6fa\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,-680],\"parameters\":{\"width\":300,\"content\":\"## Setup\\n\\n- Configure OpenAI Key\\n\\n### In this step, we will use an assistant created within the OpenAI platform that contains a vector store a.k.a file retrieval\"},\"typeVersion\":1},{\"id\":\"16429226-e850-4698-b419-fd9805a03fb7\",\"name\":\"Get ALL Thread Content\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1260,-520],\"parameters\":{\"url\":\"=https://api.openai.com/v1/threads/{{ $json.threadId }}/messages\",\"options\":{},\"sendHeaders\":true,\"authentication\":\"predefinedCredentialType\",\"headerParameters\":{\"parameters\":[{\"name\":\"OpenAI-Beta\",\"value\":\"assistants=v2\"}]},\"nodeCredentialType\":\"openAiApi\"},\"credentials\":{\"openAiApi\":{\"id\":\"UfNrqPCRlD8FD9mk\",\"name\":\"OpenAi Lourival\"}},\"typeVersion\":4.2,\"alwaysOutputData\":true},{\"id\":\"e8c88b08-5be2-4f7e-8b17-8cf804b3fe9f\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1160,-620],\"parameters\":{\"content\":\"### Retrieving all thread content is necessary because the OpenAI tool does not retrieve all citations upon request.\"},\"typeVersion\":1},{\"id\":\"0f51e09f-2782-4e2d-b797-d4d58fcabdaf\",\"name\":\"Split all message iterations from a thread\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[220,-300],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"data\"},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"4d569993-1ce3-4b32-beaf-382feac25da9\",\"name\":\"Split all content from a single message\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[460,-300],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"content\"},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"999e1c2b-1927-4483-aac1-6e8903f7ed25\",\"name\":\"Split all citations from a single message\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[700,-300],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"text.annotations\"},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"98af62f5-adb0-4e07-a146-fc2f13b851ce\",\"name\":\"Retrieve file name from a file ID\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueRegularOutput\",\"position\":[220,120],\"parameters\":{\"url\":\"=https://api.openai.com/v1/files/{{ $json.file_citation.file_id }}\",\"options\":{},\"sendQuery\":true,\"authentication\":\"predefinedCredentialType\",\"queryParameters\":{\"parameters\":[{\"name\":\"limit\",\"value\":\"1\"}]},\"nodeCredentialType\":\"openAiApi\"},\"credentials\":{\"openAiApi\":{\"id\":\"UfNrqPCRlD8FD9mk\",\"name\":\"OpenAi Lourival\"}},\"typeVersion\":4.2,\"alwaysOutputData\":true},{\"id\":\"b11f0d3d-bdc4-4845-b14b-d0b0de214f01\",\"name\":\"Regularize output\",\"type\":\"n8n-nodes-base.set\",\"position\":[480,120],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"2dcaafee-5037-4a97-942a-bcdd02bc2ad9\",\"name\":\"id\",\"type\":\"string\",\"value\":\"={{ $json.id }}\"},{\"id\":\"b63f967d-ceea-4aa8-98b9-91f5ab21bfe8\",\"name\":\"filename\",\"type\":\"string\",\"value\":\"={{ $json.filename }}\"},{\"id\":\"f611e749-054a-441d-8610-df8ba42de2e1\",\"name\":\"text\",\"type\":\"string\",\"value\":\"={{ $('Split all citations from a single message').item.json.text }}\"}]}},\"typeVersion\":3.4,\"alwaysOutputData\":true},{\"id\":\"0e999a0e-76ed-4897-989b-228f075e9bfb\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[440,-60],\"parameters\":{\"width\":200,\"height\":220,\"content\":\"### A file retrieval request contains a lot of information, and we want only the text that will be substituted and the file name.\\n\\n- id\\n- filename\\n- text\\n\"},\"typeVersion\":1},{\"id\":\"53c79a6c-7543-435f-b40e-966dff0904d4\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[700,-60],\"parameters\":{\"width\":200,\"height\":220,\"content\":\"### With the last three splits, we may have many citations and texts to substitute. By doing an aggregation, it will be possible to handle everything as a single request.\"},\"typeVersion\":1},{\"id\":\"381fb6d6-64fc-4668-9d3c-98aaa43a45ca\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[960,-60],\"parameters\":{\"height\":220,\"content\":\"### This simple code will take all the previous files and citations and alter the original text, formatting the output. In this way, we can use Markdown tags to create links, or if you prefer, we can add an HTML transformation node.\"},\"typeVersion\":1},{\"id\":\"d0cbb943-57ab-4850-8370-1625610a852a\",\"name\":\"Optional Markdown to HTML\",\"type\":\"n8n-nodes-base.markdown\",\"disabled\":true,\"position\":[1220,120],\"parameters\":{\"html\":\"={{ $json.output }}\",\"options\":{},\"destinationKey\":\"output\"},\"typeVersion\":1},{\"id\":\"589e2418-5dec-47d0-ba08-420d84f09da7\",\"name\":\"Finnaly format the output\",\"type\":\"n8n-nodes-base.code\",\"position\":[980,120],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"let saida = $('OpenAI Assistant with Vector Store').item.json.output;\\n\\nfor (let i of $input.item.json.data) {\\n  saida = saida.replaceAll(i.text, \\\"  _(\\\"+ i.filename+\\\")_  \\\");\\n}\\n\\n$input.item.json.output = saida;\\nreturn $input.item;\"},\"typeVersion\":2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"0e621a5a-d99d-4db3-9ae4-ea98c31467e9\",\"connections\":{\"Aggregate\":{\"main\":[[{\"node\":\"Finnaly format the output\",\"type\":\"main\",\"index\":0}]]},\"Regularize output\":{\"main\":[[{\"node\":\"Aggregate\",\"type\":\"main\",\"index\":0}]]},\"Window Buffer Memory\":{\"ai_memory\":[[{\"node\":\"OpenAI Assistant with Vector Store\",\"type\":\"ai_memory\",\"index\":0}]]},\"Get ALL Thread Content\":{\"main\":[[{\"node\":\"Split all message iterations from a thread\",\"type\":\"main\",\"index\":0}]]},\"Finnaly format the output\":{\"main\":[[{\"node\":\"Optional Markdown to HTML\",\"type\":\"main\",\"index\":0}]]},\"Retrieve file name from a file ID\":{\"main\":[[{\"node\":\"Regularize output\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Assistant with Vector Store\":{\"main\":[[{\"node\":\"Get ALL Thread Content\",\"type\":\"main\",\"index\":0}]]},\"Split all content from a single message\":{\"main\":[[{\"node\":\"Split all citations from a single message\",\"type\":\"main\",\"index\":0}]]},\"Split all citations from a single message\":{\"main\":[[{\"node\":\"Retrieve file name from a file ID\",\"type\":\"main\",\"index\":0}]]},\"Split all message iterations from a thread\":{\"main\":[[{\"node\":\"Split all content from a single message\",\"type\":\"main\",\"index\":0}]]},\"Create a simple Trigger to have the Chat button within N8N\":{\"main\":[[{\"node\":\"OpenAI Assistant with Vector Store\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Make OpenAI Citation for File Retrieval RAG\n\n## Use case\n\nIn this example, we will ensure that all texts from the OpenAI assistant search for citations and sources in the vector store files. We can also format the output for Markdown or HTML tags.\n\nThis is necessary because the assistant sometimes generates strange characters, and we can also use dynamic references such as citations 1, 2, 3, for example.\n\n## What this workflow does\n\nIn this workflow, we will use an OpenAI assistant created within their interface, equipped with a vector store containing some files for file retrieval.\n\nThe assistant will perform the file search within the OpenAI infrastructure and will return the content with citations.\n\n  * We will make an HTTP request to retrieve all the details we need to format the text output.\n\n\n\n## Setup\n\nInsert an OpenAI Key\n\n## How to adjust it to your needs\n\nAt the end of the workflow, we have a block of code that will format the output, and there we can add Markdown tags to create links. Optionally, we can transform the Markdown formatting into HTML.\n",
  "crawled_at": "2025-05-26T01:43:12.918466",
  "readme_zh": "## 为文件检索RAG创建OpenAI引用标注\n\n## 使用场景\n\n本示例将确保OpenAI助手从向量存储文件中检索的所有文本都附带引用标注和来源说明。我们还可以为输出内容添加Markdown或HTML标签格式。\n\n这项功能十分必要，因为助手有时会产生异常字符，同时我们也能使用动态引用（例如标注[1][2][3]等形式）。\n\n## 工作流功能\n\n本工作流将调用OpenAI平台创建的助手（该助手已配备包含检索文件的向量存储库），通过OpenAI基础设施执行文件检索，并返回带有引用标注的内容。\n\n  * 我们将发起HTTP请求来获取所有必要信息，以便格式化文本输出\n\n## 配置步骤\n\n请插入您的OpenAI密钥\n\n## 自定义调整\n\n在工作流末端，我们提供了用于格式化输出的代码块，您可以在此处添加Markdown标签创建超链接。也可选择将Markdown格式转换为HTML格式。",
  "title_zh": "为文件检索RAG创建OpenAI引用",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"5NAbfX550LJsfz6f\",\n  \"meta\": {\n    \"instanceId\": \"00493e38fecfc163cb182114bc2fab90114038eb9aad665a7a752d076920d3d5\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Make OpenAI Citation for File Retrieval RAG\",\n  \"tags\": [\n    {\n      \"id\": \"urxRtGxxLObZWPvX\",\n      \"name\": \"sample\",\n      \"createdAt\": \"2024-09-13T02:43:13.014Z\",\n      \"updatedAt\": \"2024-09-13T02:43:13.014Z\"\n    },\n    {\n      \"id\": \"nMXS3c9l1WqDwWF5\",\n      \"name\": \"assist\",\n      \"createdAt\": \"2024-12-23T16:09:38.737Z\",\n      \"updatedAt\": \"2024-12-23T16:09:38.737Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"b9033511-3421-467a-9bfa-73af01b99c4f\",\n      \"name\": \"Aggregate\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        740,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"a61dd9d3-4faa-4878-a6f3-ba8277279002\",\n      \"name\": \"Window Buffer Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        980,\n        -320\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"2daabca5-37ec-4cad-9157-29926367e1a7\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        220,\n        320\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 840,\n        \"height\": 80,\n        \"content\": \"## 在N8N内部，会有一个聊天按钮用于测试\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bf4485b1-cd94-41c8-a183-bf1b785f2761\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -440,\n        -520\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 500,\n        \"height\": 720,\n        \"content\": \"## 为文件检索RAG创建OpenAI引用标注\\n\\n## 应用场景\\n\\n本示例将确保OpenAI助手从向量存储文件中检索的所有文本都附带引用来源标注。我们还可以为输出内容添加Markdown或HTML标签格式。\\n\\n这个功能非常必要，因为助手有时会产生异常字符，同时我们也能使用动态引用（例如标注[1][2][3]）。\\n\\n## 工作流功能\\n\\n本工作流将使用OpenAI界面创建的助手，该助手配备了包含检索文件的向量存储库。\\n\\n助手将在OpenAI基础设施内执行文件检索，并返回带有引用标注的内容：\\n- 我们将发起HTTP请求以获取所有必要信息，用于格式化文本输出\\n\\n## 设置步骤\\n\\n插入OpenAI密钥\\n\\n## 自定义调整\\n\\n在工作流末端，我们提供了用于格式化输出的代码块，可以在此添加Markdown标签创建超链接。也可选择将Markdown格式转换为HTML格式。\\n\\n\\n作者：Davi Saranszky Mesquita\\n个人主页：https://www.linkedin.com/in/mesquitadavi/\\n\\n\\n（注：根据技术文档翻译规范，对\\\"vector store\\\"保留专业术语\\\"向量存储\\\"的译法；\\\"RAG\\\"作为专有名词保留不译；动态引用部分采用中文惯用的方括号标注格式；作者信息按中文习惯调整了排版格式）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"539a4e40-9745-4a26-aba8-2cc2b0dd6364\",\n      \"name\": \"Create a simple Trigger to have the Chat button within N8N\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"notes\": \"https://www.npmjs.com/package/@n8n/chat\",\n      \"position\": [\n        260,\n        -520\n      ],\n      \"webhookId\": \"8ccaa299-6f99-427b-9356-e783893a3d0c\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"aa5b2951-df32-43ac-9939-83b02d818e73\",\n      \"name\": \"OpenAI Assistant with Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        580,\n        -520\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"preserveOriginalTools\": false\n        },\n        \"resource\": \"assistant\",\n        \"assistantId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"asst_QAfdobVCVCMJz8LmaEC7nlId\",\n          \"cachedResultName\": \"Teste\"\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"UfNrqPCRlD8FD9mk\",\n          \"name\": \"OpenAi Lourival\"\n        }\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"1817b673-6cb3-49aa-9f38-a5876eb0e6fa\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        560,\n        -680\n      ],\n      \"parameters\": {\n        \"width\": 300,\n        \"content\": \"## 设置\\n\\n- 配置OpenAI密钥\\n\\n### 在这一步中，我们将使用OpenAI平台内创建的助手，该助手包含一个向量存储（即文件检索功能）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"16429226-e850-4698-b419-fd9805a03fb7\",\n      \"name\": \"Get ALL Thread Content\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1260,\n        -520\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.openai.com/v1/threads/{{ $json.threadId }}/messages\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"OpenAI-Beta\",\n              \"value\": \"assistants=v2\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"UfNrqPCRlD8FD9mk\",\n          \"name\": \"OpenAi Lourival\"\n        }\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"e8c88b08-5be2-4f7e-8b17-8cf804b3fe9f\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1160,\n        -620\n      ],\n      \"parameters\": {\n        \"content\": \"### 检索所有线程内容是必要的，因为OpenAI工具在请求时无法获取全部引用内容。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0f51e09f-2782-4e2d-b797-d4d58fcabdaf\",\n      \"name\": \"Split all message iterations from a thread\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        220,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"data\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"4d569993-1ce3-4b32-beaf-382feac25da9\",\n      \"name\": \"Split all content from a single message\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        460,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"content\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"999e1c2b-1927-4483-aac1-6e8903f7ed25\",\n      \"name\": \"Split all citations from a single message\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        700,\n        -300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"text.annotations\"\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"98af62f5-adb0-4e07-a146-fc2f13b851ce\",\n      \"name\": \"Retrieve file name from a file ID\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueRegularOutput\",\n      \"position\": [\n        220,\n        120\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.openai.com/v1/files/{{ $json.file_citation.file_id }}\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"authentication\": \"predefinedCredentialType\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"limit\",\n              \"value\": \"1\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"UfNrqPCRlD8FD9mk\",\n          \"name\": \"OpenAi Lourival\"\n        }\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"b11f0d3d-bdc4-4845-b14b-d0b0de214f01\",\n      \"name\": \"Regularize output\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        480,\n        120\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"2dcaafee-5037-4a97-942a-bcdd02bc2ad9\",\n              \"name\": \"id\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id }}\"\n            },\n            {\n              \"id\": \"b63f967d-ceea-4aa8-98b9-91f5ab21bfe8\",\n              \"name\": \"filename\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.filename }}\"\n            },\n            {\n              \"id\": \"f611e749-054a-441d-8610-df8ba42de2e1\",\n              \"name\": \"text\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Split all citations from a single message').item.json.text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"0e999a0e-76ed-4897-989b-228f075e9bfb\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        440,\n        -60\n      ],\n      \"parameters\": {\n        \"width\": 200,\n        \"height\": 220,\n        \"content\": \"### 文件检索请求包含大量信息，而我们只需要待替换的文本和文件名。\\n\\n- 标识符\\n- 文件名\\n- 文本内容\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"53c79a6c-7543-435f-b40e-966dff0904d4\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        700,\n        -60\n      ],\n      \"parameters\": {\n        \"width\": 200,\n        \"height\": 220,\n        \"content\": \"### 对于最后三个分割部分，我们可能需要替换许多引用和文本。通过进行聚合处理，可以将所有内容作为单一请求来处理。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"381fb6d6-64fc-4668-9d3c-98aaa43a45ca\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        960,\n        -60\n      ],\n      \"parameters\": {\n        \"height\": 220,\n        \"content\": \"这段简单的代码将整合所有先前的文件与引用内容，并对原文进行修改以格式化输出。如此一来，我们就能利用Markdown标签创建链接；若您倾向于此，亦可添加HTML转换节点。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d0cbb943-57ab-4850-8370-1625610a852a\",\n      \"name\": \"Optional Markdown to HTML\",\n      \"type\": \"n8n-nodes-base.markdown\",\n      \"disabled\": true,\n      \"position\": [\n        1220,\n        120\n      ],\n      \"parameters\": {\n        \"html\": \"={{ $json.output }}\",\n        \"options\": {},\n        \"destinationKey\": \"output\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"589e2418-5dec-47d0-ba08-420d84f09da7\",\n      \"name\": \"Finnaly format the output\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        980,\n        120\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"let saida = $('OpenAI Assistant with Vector Store').item.json.output;\\n\\nfor (let i of $input.item.json.data) {\\n  saida = saida.replaceAll(i.text, \\\"  _(\\\"+ i.filename+\\\")_  \\\");\\n}\\n\\n$input.item.json.output = saida;\\nreturn $input.item;\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"0e621a5a-d99d-4db3-9ae4-ea98c31467e9\",\n  \"connections\": {\n    \"Aggregate\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Finnaly format the output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Regularize output\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Window Buffer Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"OpenAI Assistant with Vector Store\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get ALL Thread Content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split all message iterations from a thread\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Finnaly format the output\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Optional Markdown to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Retrieve file name from a file ID\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Regularize output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Assistant with Vector Store\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get ALL Thread Content\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split all content from a single message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split all citations from a single message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split all citations from a single message\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Retrieve file name from a file ID\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split all message iterations from a thread\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split all content from a single message\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create a simple Trigger to have the Chat button within N8N\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI Assistant with Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}