{
  "url": "https://n8n.io/workflows/3333-generate-pdf-invoices-with-customjs-api/",
  "title": "Generate PDF Invoices with CustomJS API",
  "author": "CustomJS",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-26",
  "categories": [
    {
      "name": "Finance"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"fcf18fc485cc336a31bc65574fd28e124660f468281b7aad773616b17903afe6\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"de602925-4d9d-4045-9d9d-ed37dfb65490\",\"name\":\"HTML to PDF\",\"type\":\"@custom-js/n8n-nodes-pdf-toolkit.html2Pdf\",\"position\":[460,-20],\"parameters\":{\"htmlInput\":\"=<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Invoice</title>\\n    <style>\\n        /* Global Reset */\\n        * {\\n            margin: 0;\\n            padding: 0;\\n            box-sizing: border-box;\\n        }\\n\\n        /* Body and Container */\\n        body {\\n            font-family: 'Roboto', sans-serif;\\n            background: #f4f7fc;\\n            display: flex;\\n            justify-content: center;\\n            padding: 30px;\\n        }\\n\\n        .invoice-wrapper {\\n            width: 100%;\\n            max-width: 900px;\\n            background: linear-gradient(145deg, #ffffff, #e6f7ff);\\n            border-radius: 10px;\\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\\n            padding: 40px;\\n            margin-top: 50px;\\n        }\\n\\n        /* Header */\\n        .header {\\n            background: linear-gradient(145deg, #3f51b5, #2196f3);\\n            text-align: center;\\n            color: #fff;\\n            padding: 30px;\\n            border-radius: 8px;\\n        }\\n\\n        .header h1 {\\n            font-size: 40px;\\n            margin-bottom: 10px;\\n        }\\n\\n        .header p {\\n            font-size: 18px;\\n            font-weight: 400;\\n        }\\n\\n        /* Invoice Details Section */\\n        .invoice-details {\\n            display: flex;\\n            justify-content: space-between;\\n            margin-top: 30px;\\n            border-top: 2px solid #eee;\\n            padding-top: 30px;\\n        }\\n\\n        .invoice-details div {\\n            width: 48%;\\n        }\\n\\n        .invoice-details h3 {\\n            color: #3f51b5;\\n            font-size: 20px;\\n            margin-bottom: 15px;\\n        }\\n\\n        .invoice-details p {\\n            font-size: 15px;\\n            color: #555;\\n            line-height: 1.6;\\n        }\\n\\n        /* Table Styling */\\n        .table {\\n            width: 100%;\\n            border-collapse: collapse;\\n            margin-top: 30px;\\n        }\\n\\n        .table th,\\n        .table td {\\n            padding: 16px;\\n            text-align: left;\\n            font-size: 15px;\\n            color: #555;\\n        }\\n\\n        .table th {\\n            background-color: #f1f5fc;\\n            color: #3f51b5;\\n            font-weight: 500;\\n        }\\n\\n        .table td {\\n            background-color: #fff;\\n            border-bottom: 1px solid #e6e9f1;\\n        }\\n\\n        .table tr:last-child td {\\n            border-bottom: none;\\n        }\\n\\n        .table .total {\\n            font-weight: 600;\\n            font-size: 18px;\\n            color: #333;\\n            background-color: #f1f5fc;\\n        }\\n\\n        .table .total td {\\n            text-align: right;\\n        }\\n\\n        .table tr:nth-child(even) {\\n            background-color: #f9f9f9;\\n        }\\n\\n        /* Footer */\\n        .footer {\\n            text-align: center;\\n            margin-top: 30px;\\n            font-size: 15px;\\n            color: #777;\\n        }\\n\\n        .footer a {\\n            color: #2196f3;\\n            text-decoration: none;\\n            font-weight: 500;\\n        }\\n\\n        .footer a:hover {\\n            text-decoration: underline;\\n        }\\n\\n        /* Button */\\n        .btn {\\n            display: inline-block;\\n            background-color: #2196f3;\\n            color: white !important;\\n            font-size: 16px;\\n            font-weight: 600;\\n            padding: 12px 25px;\\n            margin-top: 25px;\\n            text-decoration: none;\\n            border-radius: 5px;\\n            transition: background-color 0.3s ease;\\n            box-shadow: 0 6px 15px rgba(33, 150, 243, 0.2);\\n        }\\n\\n        .btn:hover {\\n            background-color: #1976d2;\\n        }\\n\\n        .btn:active {\\n            background-color: #1565c0;\\n        }\\n    </style>\\n</head>\\n<body>\\n\\n<div class=\\\"invoice-wrapper\\\">\\n    <div class=\\\"header\\\">\\n        <h1>Invoice</h1>\\n        <p>Invoice #{{ $('Set data').item.json['Invoice No'] }}</p>\\n    </div>\\n\\n    <div class=\\\"invoice-details\\\">\\n        <div>\\n            <h3>Billed To:</h3>\\n            {{ $json.bill_to }}\\n        </div>\\n        <div>\\n            <h3>From:</h3>\\n            {{ $json.from }}\\n            <p>Email: {{ $('Set data').item.json.Email }}</p>\\n        </div>\\n    </div>\\n\\n    <table class=\\\"table\\\">\\n        <thead>\\n            <tr>\\n                <th>Description</th>\\n                <th>Unit Price</th>\\n                <th>Quantity</th>\\n                <th>Total</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            {{ $json.details }}\\n            <tr class=\\\"total\\\">\\n                <td colspan=\\\"3\\\">Total Amount</td>\\n                <td>${{ $json.total }}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <div class=\\\"footer\\\">\\n        <p>Thank you for doing business with us!</p>\\n        <p>If you have any questions regarding this invoice, please contact us at <a href=\\\"mailto:contact@abccorp.com\\\">{{ $('Set data').item.json.Email }}</a>.</p>\\n        <a href=\\\"mailto:{{ $('Set data').item.json.Email }}\\\" class=\\\"btn\\\">Contact Us</a>\\n    </div>\\n</div>\\n\\n</body>\\n</html>\"},\"credentials\":{\"customJsApi\":{\"id\":\"SZkqeEHVYyWhaGem\",\"name\":\"CustomJS account\"}},\"typeVersion\":1},{\"id\":\"5a8efc8a-c60b-4616-a17a-6275cc326978\",\"name\":\"Preprocess\",\"type\":\"n8n-nodes-base.code\",\"position\":[240,-20],\"parameters\":{\"mode\":\"runOnceForEachItem\",\"jsCode\":\"const input = $input.item.json\\nconst bill_to = input['Bill To'].split('\\\\n').map(item => '<p>' + item + '</p>')\\nconst from = input['From'].split('\\\\n').map(item => '<p>' + item + '</p>')\\nconst details = input['Details'].map(item => {\\n  const price = item.price*item.qty\\n  return `\\n  <tr>\\n    <td>${item.description}</td>\\n    <td>$${item.price}</td>\\n    <td>${item.qty}</td>\\n    <td>$${price}</td>\\n  </tr>\\n  `\\n})\\nconst total = input['Details'].reduce((val, next) => {\\n\\treturn val+next.price*next.qty\\n}, 0)\\nreturn {\\n  bill_to: bill_to.join('\\\\n'),\\n  from: from.join('\\\\n'),\\n  details: details.join('\\\\n'),\\n  total\\n}\"},\"typeVersion\":2},{\"id\":\"7da4fb46-1f74-44d8-8392-16fc90f23928\",\"name\":\"Set data\",\"type\":\"n8n-nodes-base.set\",\"position\":[20,-20],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"5342001f-a513-46c3-b31f-4590e8514411\",\"name\":\"Invoice No\",\"type\":\"string\",\"value\":\"1\"},{\"id\":\"ec357d39-c697-4bb8-8d9d-1bc303352dd0\",\"name\":\"Bill To\",\"type\":\"string\",\"value\":\"John Doe\\n1234 Elm St, Apt 567\\nCity, Country, 12345\"},{\"id\":\"88d6b470-4075-43ec-a684-a4adfd889278\",\"name\":\"From\",\"type\":\"string\",\"value\":\"ABC Corporation\\n789 Business Ave\\nCity, Country, 67890\"},{\"id\":\"061a8020-644a-4cec-bade-3bcd7e15adee\",\"name\":\"Details\",\"type\":\"array\",\"value\":\"[     {         \\\"description\\\": \\\"Web Hosting\\\",         \\\"price\\\": 150,         \\\"qty\\\": 2     },     {         \\\"description\\\": \\\"Domain\\\",         \\\"price\\\": 15,         \\\"qty\\\": 5     } ]\"},{\"id\":\"1c2c6c4b-6aa5-4656-8cae-43ffac71d478\",\"name\":\"Email\",\"type\":\"string\",\"value\":\"support@mycompany.com\"}]}},\"typeVersion\":3.4},{\"id\":\"a6d39cc4-b9c2-4eed-b4a6-46d622a87c14\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-200,-20],\"webhookId\":\"526fd864-6f85-4cde-97aa-39b61a3e5b83\",\"parameters\":{\"path\":\"526fd864-6f85-4cde-97aa-39b61a3e5b83\",\"options\":{},\"responseMode\":\"responseNode\"},\"typeVersion\":2},{\"id\":\"c7d1cc1d-88e3-463a-886f-182a2ba72b11\",\"name\":\"Respond to Webhook\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[660,-20],\"parameters\":{\"options\":{},\"respondWith\":\"binary\"},\"typeVersion\":1.1}],\"pinData\":{},\"connections\":{\"Webhook\":{\"main\":[[{\"node\":\"Set data\",\"type\":\"main\",\"index\":0}]]},\"Set data\":{\"main\":[[{\"node\":\"Preprocess\",\"type\":\"main\",\"index\":0}]]},\"Preprocess\":{\"main\":[[{\"node\":\"HTML to PDF\",\"type\":\"main\",\"index\":0}]]},\"HTML to PDF\":{\"main\":[[{\"node\":\"Respond to Webhook\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "![workflow.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/workflow_2dec43c714.png)\n\n# n8n Workflow: Invoice PDF Generator\n\nThis n8n workflow captures invoice data and generates a PDF invoice, ready to be sent or saved. It uses a webhook to trigger the process, preprocesses the invoice data, and converts it to a PDF using HTML and custom styling.\n\n[@custom-js/n8n-nodes-pdf-toolkit](@custom-js/n8n-nodes-pdf-toolkit)\n\n## Features:\n\n  * **Webhook Trigger** : Receives incoming data, including invoice details.\n  * **Preprocessing** : Transforms the invoice data into HTML format.\n  * **HTML to PDF Conversion** : Converts the preprocessed HTML into a styled PDF document.\n  * **Response** : Sends the generated PDF back to the webhook response.\n\n\n\n# Notice\n\nCommunity nodes can only be installed on self-hosted instances of n8n.\n\n## Requirements\n\n  * **Self-hosted** n8n instance\n  * A **CustomJS API key** for website screenshots.\n  * **Invoice data** for PDF generation\n\n\n\n## Workflow Steps:\n\n  1. **Webhook Trigger** :\n\n     * Accepts incoming data (e.g., invoice number, recipient details, itemized list).\n     * This data is passed to the next node for processing.\n  2. **Set Data Node** :\n\n     * Configures initial values for the invoice, including the recipient, sender, invoice number, and the items on the invoice.\n     * The invoice details include information like description, unit price, and quantity.\n  3. **Preprocess Node** :\n\n     * Processes the raw data to format it correctly for HTML. This includes splitting addresses and converting the items into an HTML table format.\n  4. **HTML to PDF Conversion** :\n\n     * Converts the generated HTML into a PDF document. The HTML includes a header, a detailed invoice table, and a footer with contact information.\n  5. **Respond to Webhook** :\n\n     * Returns the generated PDF as a response to the initial webhook request.\n\n\n\n* * *\n\n## Setup Guide:\n\n### 1\\. Configure CustomJS API\n\n  * Sign up at [CustomJS](https://www.customjs.space).\n  * Retrieve your API key from the profile page.  \n![1.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/1_82d8a45380.png)\n  * Add your API key as n8n credentials.  \n![2.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/2_55598f2bd0.png)\n\n\n\n### 2\\. Design Workflow\n\n  1. **Create a Webhook** :\n\n     * Set up a webhook to trigger the workflow when invoice data is received.\n  2. **Prepare Data** :\n\n     * Ensure the incoming request contains fields like \"Invoice No\", \"Bill To\", \"From\", and \"Details\" (list of items with price and quantity).\n  3. **Customize the HTML** :\n\n     * The HTML template for the invoice includes custom styling to give the invoice a professional look.\n  4. **Convert to PDF** :\n\n     * The **HTML to PDF** node is configured with the data generated from the preprocessing step to convert the invoice HTML to a PDF format.\n\n\n\n* * *\n\n## Example Invoice Data:\n    \n    \n    {\n      \"Invoice No\": \"1\",\n      \"Bill To\": \"John Doe\\n1234 Elm St, Apt 567\\nCity, Country, 12345\",\n      \"From\": \"ABC Corporation\\n789 Business Ave\\nCity, Country, 67890\",\n      \"Details\": [\n        {\n          \"description\": \"Web Hosting\",\n          \"price\": 150,\n          \"qty\": 2\n        },\n        {\n          \"description\": \"Domain\",\n          \"price\": 15,\n          \"qty\": 5\n        }\n      ],\n      \"Email\": \"support@mycompany.com\"\n    }\n    \n\n## Result PDF File\n\n![3.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/3_e8a57ede02.png)\n",
  "crawled_at": "2025-05-26T04:15:34.775694",
  "readme_zh": "![workflow.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/workflow_2dec43c714.png)\n\n# n8n工作流：发票PDF生成器\n\n该n8n工作流可捕获发票数据并生成PDF格式发票，便于发送或保存。通过Webhook触发流程，预处理发票数据后，利用HTML和自定义样式将其转换为PDF文件。\n\n[@custom-js/n8n-nodes-pdf-toolkit](@custom-js/n8n-nodes-pdf-toolkit)\n\n## 功能特点：\n\n  * **Webhook触发器**：接收包含发票详情的传入数据\n  * **数据预处理**：将发票数据转换为HTML格式\n  * **HTML转PDF**：将预处理后的HTML转换为带样式的PDF文档\n  * **响应返回**：将生成的PDF通过Webhook响应返回",
  "title_zh": "使用CustomJS API生成PDF发票",
  "publish_date_zh": "最后更新于2个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"fcf18fc485cc336a31bc65574fd28e124660f468281b7aad773616b17903afe6\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"de602925-4d9d-4045-9d9d-ed37dfb65490\",\n      \"name\": \"HTML to PDF\",\n      \"type\": \"@custom-js/n8n-nodes-pdf-toolkit.html2Pdf\",\n      \"position\": [\n        460,\n        -20\n      ],\n      \"parameters\": {\n        \"htmlInput\": \"=<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Invoice</title>\\n    <style>\\n        /* Global Reset */\\n        * {\\n            margin: 0;\\n            padding: 0;\\n            box-sizing: border-box;\\n        }\\n\\n        /* Body and Container */\\n        body {\\n            font-family: 'Roboto', sans-serif;\\n            background: #f4f7fc;\\n            display: flex;\\n            justify-content: center;\\n            padding: 30px;\\n        }\\n\\n        .invoice-wrapper {\\n            width: 100%;\\n            max-width: 900px;\\n            background: linear-gradient(145deg, #ffffff, #e6f7ff);\\n            border-radius: 10px;\\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\\n            padding: 40px;\\n            margin-top: 50px;\\n        }\\n\\n        /* Header */\\n        .header {\\n            background: linear-gradient(145deg, #3f51b5, #2196f3);\\n            text-align: center;\\n            color: #fff;\\n            padding: 30px;\\n            border-radius: 8px;\\n        }\\n\\n        .header h1 {\\n            font-size: 40px;\\n            margin-bottom: 10px;\\n        }\\n\\n        .header p {\\n            font-size: 18px;\\n            font-weight: 400;\\n        }\\n\\n        /* Invoice Details Section */\\n        .invoice-details {\\n            display: flex;\\n            justify-content: space-between;\\n            margin-top: 30px;\\n            border-top: 2px solid #eee;\\n            padding-top: 30px;\\n        }\\n\\n        .invoice-details div {\\n            width: 48%;\\n        }\\n\\n        .invoice-details h3 {\\n            color: #3f51b5;\\n            font-size: 20px;\\n            margin-bottom: 15px;\\n        }\\n\\n        .invoice-details p {\\n            font-size: 15px;\\n            color: #555;\\n            line-height: 1.6;\\n        }\\n\\n        /* Table Styling */\\n        .table {\\n            width: 100%;\\n            border-collapse: collapse;\\n            margin-top: 30px;\\n        }\\n\\n        .table th,\\n        .table td {\\n            padding: 16px;\\n            text-align: left;\\n            font-size: 15px;\\n            color: #555;\\n        }\\n\\n        .table th {\\n            background-color: #f1f5fc;\\n            color: #3f51b5;\\n            font-weight: 500;\\n        }\\n\\n        .table td {\\n            background-color: #fff;\\n            border-bottom: 1px solid #e6e9f1;\\n        }\\n\\n        .table tr:last-child td {\\n            border-bottom: none;\\n        }\\n\\n        .table .total {\\n            font-weight: 600;\\n            font-size: 18px;\\n            color: #333;\\n            background-color: #f1f5fc;\\n        }\\n\\n        .table .total td {\\n            text-align: right;\\n        }\\n\\n        .table tr:nth-child(even) {\\n            background-color: #f9f9f9;\\n        }\\n\\n        /* Footer */\\n        .footer {\\n            text-align: center;\\n            margin-top: 30px;\\n            font-size: 15px;\\n            color: #777;\\n        }\\n\\n        .footer a {\\n            color: #2196f3;\\n            text-decoration: none;\\n            font-weight: 500;\\n        }\\n\\n        .footer a:hover {\\n            text-decoration: underline;\\n        }\\n\\n        /* Button */\\n        .btn {\\n            display: inline-block;\\n            background-color: #2196f3;\\n            color: white !important;\\n            font-size: 16px;\\n            font-weight: 600;\\n            padding: 12px 25px;\\n            margin-top: 25px;\\n            text-decoration: none;\\n            border-radius: 5px;\\n            transition: background-color 0.3s ease;\\n            box-shadow: 0 6px 15px rgba(33, 150, 243, 0.2);\\n        }\\n\\n        .btn:hover {\\n            background-color: #1976d2;\\n        }\\n\\n        .btn:active {\\n            background-color: #1565c0;\\n        }\\n    </style>\\n</head>\\n<body>\\n\\n<div class=\\\"invoice-wrapper\\\">\\n    <div class=\\\"header\\\">\\n        <h1>Invoice</h1>\\n        <p>Invoice #{{ $('Set data').item.json['Invoice No'] }}</p>\\n    </div>\\n\\n    <div class=\\\"invoice-details\\\">\\n        <div>\\n            <h3>Billed To:</h3>\\n            {{ $json.bill_to }}\\n        </div>\\n        <div>\\n            <h3>From:</h3>\\n            {{ $json.from }}\\n            <p>Email: {{ $('Set data').item.json.Email }}</p>\\n        </div>\\n    </div>\\n\\n    <table class=\\\"table\\\">\\n        <thead>\\n            <tr>\\n                <th>Description</th>\\n                <th>Unit Price</th>\\n                <th>Quantity</th>\\n                <th>Total</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            {{ $json.details }}\\n            <tr class=\\\"total\\\">\\n                <td colspan=\\\"3\\\">Total Amount</td>\\n                <td>${{ $json.total }}</td>\\n            </tr>\\n        </tbody>\\n    </table>\\n\\n    <div class=\\\"footer\\\">\\n        <p>Thank you for doing business with us!</p>\\n        <p>If you have any questions regarding this invoice, please contact us at <a href=\\\"mailto:contact@abccorp.com\\\">{{ $('Set data').item.json.Email }}</a>.</p>\\n        <a href=\\\"mailto:{{ $('Set data').item.json.Email }}\\\" class=\\\"btn\\\">Contact Us</a>\\n    </div>\\n</div>\\n\\n</body>\\n</html>\"\n      },\n      \"credentials\": {\n        \"customJsApi\": {\n          \"id\": \"SZkqeEHVYyWhaGem\",\n          \"name\": \"CustomJS account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5a8efc8a-c60b-4616-a17a-6275cc326978\",\n      \"name\": \"Preprocess\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        240,\n        -20\n      ],\n      \"parameters\": {\n        \"mode\": \"runOnceForEachItem\",\n        \"jsCode\": \"const input = $input.item.json\\nconst bill_to = input['Bill To'].split('\\\\n').map(item => '<p>' + item + '</p>')\\nconst from = input['From'].split('\\\\n').map(item => '<p>' + item + '</p>')\\nconst details = input['Details'].map(item => {\\n  const price = item.price*item.qty\\n  return `\\n  <tr>\\n    <td>${item.description}</td>\\n    <td>$${item.price}</td>\\n    <td>${item.qty}</td>\\n    <td>$${price}</td>\\n  </tr>\\n  `\\n})\\nconst total = input['Details'].reduce((val, next) => {\\n\\treturn val+next.price*next.qty\\n}, 0)\\nreturn {\\n  bill_to: bill_to.join('\\\\n'),\\n  from: from.join('\\\\n'),\\n  details: details.join('\\\\n'),\\n  total\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7da4fb46-1f74-44d8-8392-16fc90f23928\",\n      \"name\": \"Set data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        20,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"5342001f-a513-46c3-b31f-4590e8514411\",\n              \"name\": \"Invoice No\",\n              \"type\": \"string\",\n              \"value\": \"1\"\n            },\n            {\n              \"id\": \"ec357d39-c697-4bb8-8d9d-1bc303352dd0\",\n              \"name\": \"Bill To\",\n              \"type\": \"string\",\n              \"value\": \"John Doe\\n1234 Elm St, Apt 567\\nCity, Country, 12345\"\n            },\n            {\n              \"id\": \"88d6b470-4075-43ec-a684-a4adfd889278\",\n              \"name\": \"From\",\n              \"type\": \"string\",\n              \"value\": \"ABC Corporation\\n789 Business Ave\\nCity, Country, 67890\"\n            },\n            {\n              \"id\": \"061a8020-644a-4cec-bade-3bcd7e15adee\",\n              \"name\": \"Details\",\n              \"type\": \"array\",\n              \"value\": \"[     {         \\\"description\\\": \\\"Web Hosting\\\",         \\\"price\\\": 150,         \\\"qty\\\": 2     },     {         \\\"description\\\": \\\"Domain\\\",         \\\"price\\\": 15,         \\\"qty\\\": 5     } ]\"\n            },\n            {\n              \"id\": \"1c2c6c4b-6aa5-4656-8cae-43ffac71d478\",\n              \"name\": \"Email\",\n              \"type\": \"string\",\n              \"value\": \"support@mycompany.com\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a6d39cc4-b9c2-4eed-b4a6-46d622a87c14\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -200,\n        -20\n      ],\n      \"webhookId\": \"526fd864-6f85-4cde-97aa-39b61a3e5b83\",\n      \"parameters\": {\n        \"path\": \"526fd864-6f85-4cde-97aa-39b61a3e5b83\",\n        \"options\": {},\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"c7d1cc1d-88e3-463a-886f-182a2ba72b11\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        660,\n        -20\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"binary\"\n      },\n      \"typeVersion\": 1.1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Preprocess\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Preprocess\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTML to PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTML to PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}