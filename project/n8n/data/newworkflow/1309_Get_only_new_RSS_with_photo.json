{
  "url": "https://n8n.io/workflows/1309-get-only-new-rss-with-photo/",
  "title": "Get only new RSS with photo",
  "author": "Vlad Knyzhnyk",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "{\"id\":8,\"name\":\"Get only new RSS with Photo\",\"nodes\":[{\"name\":\"Cron\",\"type\":\"n8n-nodes-base.cron\",\"position\":[1050,920],\"parameters\":{\"triggerTimes\":{\"item\":[{\"mode\":\"everyX\",\"unit\":\"minutes\",\"value\":5}]}},\"typeVersion\":1},{\"name\":\"RSS Feed Read\",\"type\":\"n8n-nodes-base.rssFeedRead\",\"position\":[1220,920],\"parameters\":{\"url\":\"http://www.theverge.com/rss/full.xml\"},\"executeOnce\":true,\"typeVersion\":1},{\"name\":\"Extract Image1\",\"type\":\"n8n-nodes-base.htmlExtract\",\"position\":[1740,920],\"parameters\":{\"options\":{},\"dataPropertyName\":\"=content\",\"extractionValues\":{\"values\":[{\"key\":\"image\",\"attribute\":\"src\",\"cssSelector\":\"img\",\"returnValue\":\"attribute\"}]}},\"typeVersion\":1},{\"name\":\"Filter RSS Data\",\"type\":\"n8n-nodes-base.set\",\"position\":[1390,920],\"parameters\":{\"values\":{\"string\":[{\"name\":\"Title\",\"value\":\"={{$node[\\\"RSS Feed Read\\\"].json[\\\"title\\\"]}}\"},{\"name\":\"Subtitle\",\"value\":\"={{$json[\\\"contentSnippet\\\"]}}\"},{\"name\":\"Author\",\"value\":\"={{$json[\\\"creator\\\"]}}\"},{\"name\":\"URL\",\"value\":\"={{$node[\\\"RSS Feed Read\\\"].json[\\\"link\\\"]}}\"},{\"name\":\"Date\",\"value\":\"={{$node[\\\"RSS Feed Read\\\"].json[\\\"pubDate\\\"]}}\"},{\"name\":\"content\",\"value\":\"={{$json[\\\"content\\\"]}}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"name\":\"Only get new RSS1\",\"type\":\"n8n-nodes-base.function\",\"position\":[1560,920],\"parameters\":{\"functionCode\":\"const staticData = getWorkflowStaticData('global');\\nconst newRSSIds = items.map(item => item.json[\\\"Date\\\"]);\\nconst oldRSSIds = staticData.oldRSSIds; \\n\\nif (!oldRSSIds) {\\n  staticData.oldRSSIds = newRSSIds;\\n  return items;\\n}\\n\\n\\nconst actualNewRSSIds = newRSSIds.filter((id) => !oldRSSIds.includes(id));\\nconst actualNewRSS = items.filter((data) => actualNewRSSIds.includes(data.json['Date']));\\nstaticData.oldRSSIds = [...actualNewRSSIds, ...oldRSSIds];\\n\\nreturn actualNewRSS;\\n\"},\"typeVersion\":1}],\"active\":false,\"settings\":{},\"connections\":{\"Cron\":{\"main\":[[{\"node\":\"RSS Feed Read\",\"type\":\"main\",\"index\":0}]]},\"RSS Feed Read\":{\"main\":[[{\"node\":\"Filter RSS Data\",\"type\":\"main\",\"index\":0}]]},\"Extract Image1\":{\"main\":[[]]},\"Filter RSS Data\":{\"main\":[[{\"node\":\"Only get new RSS1\",\"type\":\"main\",\"index\":0}]]},\"Only get new RSS1\":{\"main\":[[{\"node\":\"Extract Image1\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "**At the end, add the service you need, for example[Telegram](Telegram)**\n\n++You can only see the result when you run workflow.++\n\n_Based on these answers:  \n[Latest RSS Feed -> Rocket.Chat](https://community.n8n.io/t/latest-rss-feed-rocket-chat/3770) for get only new post  \n[Rss to Twitter with Image](https://community.n8n.io/t/rss-to-twitter-with-image/4282) for get image_\n",
  "crawled_at": "2025-05-25T19:32:08.102439",
  "readme_zh": "**最后，添加你需要的服务，例如[Telegram](Telegram)**\n\n++只有运行工作流时才能看到结果。++  \n\n_基于以下回答：  \n[最新RSS订阅 -> Rocket.Chat](https://community.n8n.io/t/latest-rss-feed-rocket-chat/3770) 仅获取新帖子  \n[带图片的RSS推文](https://community.n8n.io/t/rss-to-twitter-with-image/4282) 用于获取图片_",
  "title_zh": "仅获取带照片的新RSS内容",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"id\": 8,\n  \"name\": \"Get only new RSS with Photo\",\n  \"nodes\": [\n    {\n      \"name\": \"Cron\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        1050,\n        920\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyX\",\n              \"unit\": \"minutes\",\n              \"value\": 5\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"RSS Feed Read\",\n      \"type\": \"n8n-nodes-base.rssFeedRead\",\n      \"position\": [\n        1220,\n        920\n      ],\n      \"parameters\": {\n        \"url\": \"http://www.theverge.com/rss/full.xml\"\n      },\n      \"executeOnce\": true,\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Extract Image1\",\n      \"type\": \"n8n-nodes-base.htmlExtract\",\n      \"position\": [\n        1740,\n        920\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"dataPropertyName\": \"=content\",\n        \"extractionValues\": {\n          \"values\": [\n            {\n              \"key\": \"image\",\n              \"attribute\": \"src\",\n              \"cssSelector\": \"img\",\n              \"returnValue\": \"attribute\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Filter RSS Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1390,\n        920\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"Title\",\n              \"value\": \"={{$node[\\\"RSS Feed Read\\\"].json[\\\"title\\\"]}}\"\n            },\n            {\n              \"name\": \"Subtitle\",\n              \"value\": \"={{$json[\\\"contentSnippet\\\"]}}\"\n            },\n            {\n              \"name\": \"Author\",\n              \"value\": \"={{$json[\\\"creator\\\"]}}\"\n            },\n            {\n              \"name\": \"URL\",\n              \"value\": \"={{$node[\\\"RSS Feed Read\\\"].json[\\\"link\\\"]}}\"\n            },\n            {\n              \"name\": \"Date\",\n              \"value\": \"={{$node[\\\"RSS Feed Read\\\"].json[\\\"pubDate\\\"]}}\"\n            },\n            {\n              \"name\": \"content\",\n              \"value\": \"={{$json[\\\"content\\\"]}}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Only get new RSS1\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"position\": [\n        1560,\n        920\n      ],\n      \"parameters\": {\n        \"functionCode\": \"const staticData = getWorkflowStaticData('global');\\nconst newRSSIds = items.map(item => item.json[\\\"Date\\\"]);\\nconst oldRSSIds = staticData.oldRSSIds; \\n\\nif (!oldRSSIds) {\\n  staticData.oldRSSIds = newRSSIds;\\n  return items;\\n}\\n\\n\\nconst actualNewRSSIds = newRSSIds.filter((id) => !oldRSSIds.includes(id));\\nconst actualNewRSS = items.filter((data) => actualNewRSSIds.includes(data.json['Date']));\\nstaticData.oldRSSIds = [...actualNewRSSIds, ...oldRSSIds];\\n\\nreturn actualNewRSS;\\n\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"settings\": {},\n  \"connections\": {\n    \"Cron\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"RSS Feed Read\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"RSS Feed Read\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter RSS Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Image1\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Filter RSS Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Only get new RSS1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Only get new RSS1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Image1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}