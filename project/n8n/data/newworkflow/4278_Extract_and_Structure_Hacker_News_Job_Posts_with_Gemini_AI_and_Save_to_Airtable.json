{
  "url": "https://n8n.io/workflows/4278-extract-and-structure-hacker-news-job-posts-with-gemini-ai-and-save-to-airtable/",
  "title": "Extract and Structure Hacker News Job Posts with Gemini AI and Save to Airtable",
  "author": "Puspak",
  "publish_date": "Last update 3 days ago",
  "publish_date_absolute": "2025-05-23",
  "categories": [
    {
      "name": "HR"
    }
  ],
  "workflow_json": "{\"id\":\"ExmRkYWlTAPhA2IQ\",\"meta\":{\"instanceId\":\"e19d1d1e8279ed4f1e9dcdd2328b7c5082def05206ccc115a1f38a5872651e05\",\"templateCredsSetupCompleted\":true},\"name\":\"HN Jobs update\",\"tags\":[],\"nodes\":[{\"id\":\"2e510877-4fd3-4e46-a1ad-b44187226b78\",\"name\":\"Split Out\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[340,400],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"hits\"},\"typeVersion\":1},{\"id\":\"b5a9c1f3-f167-4646-8f11-97f4be32ff93\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[2780,600],\"parameters\":{\"schemaType\":\"manual\",\"inputSchema\":\"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"company\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Name of the hiring company\\\"\\n },\\n \\\"title\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Job title/role being advertised\\\"\\n },\\n \\\"location\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Work location including remote/hybrid status\\\"\\n },\\n \\\"type\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"enum\\\": [\\n \\\"FULL_TIME\\\",\\n \\\"PART_TIME\\\",\\n \\\"CONTRACT\\\",\\n \\\"INTERNSHIP\\\",\\n \\\"FREELANCE\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Employment type (Full-time, Contract, etc)\\\"\\n },\\n \\\"work_location\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"enum\\\": [\\n \\\"REMOTE\\\",\\n \\\"HYBRID\\\",\\n \\\"ON_SITE\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Work arrangement type\\\"\\n },\\n \\\"salary\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Compensation details if provided\\\"\\n },\\n \\\"description\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Main job description text including requirements and team info\\\"\\n },\\n \\\"apply_url\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Direct application/job posting URL\\\"\\n },\\n \\\"company_url\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Company website or careers page\\\"\\n }\\n }\\n}\\n\"},\"typeVersion\":1.2},{\"id\":\"80012214-5045-4c54-a5e1-cf7b76a611c3\",\"name\":\"Search for Who is hiring posts\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[140,400],\"parameters\":{\"url\":\"https://uj5wyc0l7x-dsn.algolia.net/1/indexes/Item_dev_sort_date/query\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"{\\n \\\"query\\\": \\\"\\\\\\\"Ask HN: Who is hiring\\\\\\\"\\\",\\n \\\"analyticsTags\\\": [\\n \\\"web\\\"\\n ],\\n \\\"page\\\": 0,\\n \\\"hitsPerPage\\\": 30,\\n \\\"minWordSizefor1Typo\\\": 4,\\n \\\"minWordSizefor2Typos\\\": 8,\\n \\\"advancedSyntax\\\": true,\\n \\\"ignorePlurals\\\": false,\\n \\\"clickAnalytics\\\": true,\\n \\\"minProximity\\\": 7,\\n \\\"numericFilters\\\": [],\\n \\\"tagFilters\\\": [\\n [\\n \\\"story\\\"\\n ],\\n []\\n ],\\n \\\"typoTolerance\\\": \\\"min\\\",\\n \\\"queryType\\\": \\\"prefixNone\\\",\\n \\\"restrictSearchableAttributes\\\": [\\n \\\"title\\\",\\n \\\"comment_text\\\",\\n \\\"url\\\",\\n \\\"story_text\\\",\\n \\\"author\\\"\\n ],\\n \\\"getRankingInfo\\\": true\\n}\",\"sendBody\":true,\"sendQuery\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"queryParameters\":{\"parameters\":[{\"name\":\"x-algolia-agent\",\"value\":\"Algolia for JavaScript (4.13.1); Browser (lite)\"},{\"name\":\"x-algolia-application-id\",\"value\":\"UJ5WYC0L7X\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"Accept\",\"value\":\"*/*\"},{\"name\":\"Accept-Language\",\"value\":\"en-GB,en-US;q=0.9,en;q=0.8\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Origin\",\"value\":\"https://hn.algolia.com\"},{\"name\":\"Referer\",\"value\":\"https://hn.algolia.com/\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"empty\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"cors\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"cross-site\"},{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\"},{\"name\":\"sec-ch-ua\",\"value\":\"\\\"Chromium\\\";v=\\\"133\\\", \\\"Not(A:Brand\\\";v=\\\"99\\\"\"},{\"name\":\"sec-ch-ua-mobile\",\"value\":\"?0\"},{\"name\":\"sec-ch-ua-platform\",\"value\":\"\\\"macOS\\\"\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"sV79MeBXuKW0vlk4\",\"name\":\"Header Auth account\"}},\"typeVersion\":4.2},{\"id\":\"58a1f06b-0e41-4f73-9a47-5134806e4249\",\"name\":\"Get relevant data\",\"type\":\"n8n-nodes-base.set\",\"position\":[640,400],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"73dd2325-faa7-4650-bd78-5fc97cc202de\",\"name\":\"title\",\"type\":\"string\",\"value\":\"={{ $json.title }}\"},{\"id\":\"44918eac-4510-440e-9ac0-bf14d2b2f3af\",\"name\":\"createdAt\",\"type\":\"string\",\"value\":\"={{ $json.created_at }}\"},{\"id\":\"00eb6f09-2c22-411c-949c-886b2d95b6eb\",\"name\":\"updatedAt\",\"type\":\"string\",\"value\":\"={{ $json.updated_at }}\"},{\"id\":\"2b4f9da6-f60e-46e0-ba9d-3242fa955a55\",\"name\":\"storyId\",\"type\":\"string\",\"value\":\"={{ $json.story_id }}\"}]}},\"typeVersion\":3.4},{\"id\":\"d69eb7f3-383f-4e67-a0e7-b5930cfc8b26\",\"name\":\"Get latest post\",\"type\":\"n8n-nodes-base.filter\",\"position\":[920,400],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d7dd7175-2a50-45aa-bd3e-4c248c9193c4\",\"operator\":{\"type\":\"dateTime\",\"operation\":\"after\"},\"leftValue\":\"={{ $json.createdAt }}\",\"rightValue\":\"={{$now.minus({days: 30})}} \"}]}},\"typeVersion\":2.2},{\"id\":\"737cce8c-2ef0-4421-bccf-d9bdfa308385\",\"name\":\"Split out children (jobs)\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1400,400],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"kids\"},\"typeVersion\":1},{\"id\":\"13e36405-f049-4d3d-a17c-f14b42817ba1\",\"name\":\"Trun into structured data\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[2540,400],\"parameters\":{\"text\":\"={{ $json.cleaned_text }}\",\"messages\":{\"messageValues\":[{\"message\":\"Extract the JSON data\"}]},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.5},{\"id\":\"40d699ab-bf6d-402b-8192-c485a3525d27\",\"name\":\"Extract text\",\"type\":\"n8n-nodes-base.set\",\"position\":[1800,400],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"6affa370-56ce-4ad8-8534-8f753fdf07fc\",\"name\":\"text\",\"type\":\"string\",\"value\":\"={{ $json.text }}\"}]}},\"typeVersion\":3.4},{\"id\":\"a20afe14-6457-4aa3-9135-75733c704723\",\"name\":\"Clean text\",\"type\":\"n8n-nodes-base.code\",\"position\":[2000,400],\"parameters\":{\"jsCode\":\"// In a Function node in n8n\\nconst inputData = $input.all();\\n\\nfunction cleanAllPosts(data) {\\n return data.map(item => {\\n try {\\n // Check if item exists and has the expected structure\\n if (!item || typeof item !== 'object') {\\n return { cleaned_text: '', error: 'Invalid item structure' };\\n }\\n\\n // Get the text, with multiple fallbacks\\n let text = '';\\n if (typeof item === 'string') {\\n text = item;\\n } else if (item.json && item.json.text) {\\n text = item.json.text;\\n } else if (typeof item.json === 'string') {\\n text = item.json;\\n } else {\\n text = JSON.stringify(item);\\n }\\n\\n // Make sure text is a string\\n text = String(text);\\n \\n // Perform the cleaning operations\\n try {\\n text = text.replace(/&#x2F;/g, '/');\\n text = text.replace(/&#x27;/g, \\\"'\\\");\\n text = text.replace(/&\\\\w+;/g, ' ');\\n text = text.replace(/<[^>]*>/g, '');\\n text = text.replace(/\\\\|\\\\s*/g, '| ');\\n text = text.replace(/\\\\s+/g, ' ');\\n text = text.replace(/\\\\s*(https?:\\\\/\\\\/[^\\\\s]+)\\\\s*/g, '\\\\n$1\\\\n');\\n text = text.replace(/\\\\n{3,}/g, '\\\\n\\\\n');\\n text = text.trim();\\n } catch (cleaningError) {\\n console.log('Error during text cleaning:', cleaningError);\\n // Return original text if cleaning fails\\n return { cleaned_text: text, warning: 'Partial cleaning applied' };\\n }\\n\\n return { cleaned_text: text };\\n \\n } catch (error) {\\n console.log('Error processing item:', error);\\n return { \\n cleaned_text: '', \\n error: `Processing error: ${error.message}`,\\n original: item\\n };\\n }\\n }).filter(result => result.cleaned_text || result.error); \\n}\\n\\ntry {\\n return cleanAllPosts(inputData);\\n} catch (error) {\\n console.log('Fatal error:', error);\\n return [{ \\n cleaned_text: '', \\n error: `Fatal error: ${error.message}`,\\n input: inputData \\n }];\\n}\\n\"},\"typeVersion\":2},{\"id\":\"8ba5a5b4-0d03-46f8-90a1-7550913b77dd\",\"name\":\"Limit for testing (optional)\",\"type\":\"n8n-nodes-base.limit\",\"position\":[2220,400],\"parameters\":{\"maxItems\":5},\"typeVersion\":1},{\"id\":\"d5535a17-79f1-4dc2-941a-ea4dd6a109a8\",\"name\":\"Write results to airtable\",\"type\":\"n8n-nodes-base.airtable\",\"position\":[3200,400],\"parameters\":{\"base\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"app3Gb4cEMflRuqzy\",\"cachedResultUrl\":\"https://airtable.com/app3Gb4cEMflRuqzy\",\"cachedResultName\":\"HN Who is hiring?\"},\"table\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"tbl4JrmWPcxiUuCiX\",\"cachedResultUrl\":\"https://airtable.com/app3Gb4cEMflRuqzy/tbl4JrmWPcxiUuCiX\",\"cachedResultName\":\"Table 1\"},\"columns\":{\"value\":{\"Type\":\"={{ $json.output.type }}\",\"Title\":\"={{ $json.output.title }}\",\"Salary\":\"={{ $json.output.salary }}\",\"Company\":\"={{ $json.output.company }}\",\"Location\":\"={{ $json.output.location }}\",\"Apply_url\":\"={{ $json.output.apply_url }}\",\"Description\":\"={{ $json.output.description }}\",\"company_url\":\"={{ $json.output.company_url }}\",\"work_location\":\"={{ $json.output.work_location }}\"},\"schema\":[{\"id\":\"Title\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Title\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Company\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Company\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Location\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Location\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Type\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Type\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"work_location\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"work_location\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Description\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Description\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Salary\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Salary\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Apply_url\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"Apply_url\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"company_url\",\"type\":\"string\",\"display\":true,\"removed\":false,\"readOnly\":false,\"required\":false,\"displayName\":\"company_url\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"create\"},\"credentials\":{\"airtableTokenApi\":{\"id\":\"H0gK9cFHnootcYwf\",\"name\":\"Airtable Personal Access Token account\"}},\"typeVersion\":2.1},{\"id\":\"e51caae1-c8d1-4954-91a5-d0dfde442346\",\"name\":\"HI API: Get the individual job post\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1600,400],\"parameters\":{\"url\":\"=https://hacker-news.firebaseio.com/v0/item/{{ $json.kids }}.json?print=pretty\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"880d31e0-41fa-434d-a3d0-ac850ede0b59\",\"name\":\"HN API: Get Main Post\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1200,400],\"parameters\":{\"url\":\"=https://hacker-news.firebaseio.com/v0/item/{{ $json.storyId }}.json?print=pretty\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"e1bc30b5-b792-4f1e-8d38-ead61178c5fd\",\"name\":\"Code\",\"type\":\"n8n-nodes-base.code\",\"position\":[2900,400],\"parameters\":{\"jsCode\":\"function convertSalaryRangeToNumber(salaryStr) {\\n  if (!salaryStr) return null;\\n\\n  // Remove $ and spaces, convert to lowercase\\n  salaryStr = salaryStr.replace(/\\\\$/g, '').replace(/\\\\s/g, '').toLowerCase();\\n\\n  // Replace 'k' with '000'\\n  salaryStr = salaryStr.replace(/k/g, '000');\\n\\n  // Split by dash, en dash, em dash\\n  const parts = salaryStr.split(/[-–—]/);\\n\\n  // Extract numbers\\n  const numbers = parts.map(part => {\\n    // Remove non-digit/non-dot characters\\n    const cleaned = part.replace(/[^\\\\d.]/g, '');\\n    return cleaned ? parseFloat(cleaned) : NaN;\\n  }).filter(num => !isNaN(num));\\n\\n  if (numbers.length === 0) return null;\\n  if (numbers.length === 1) return numbers[0];\\n  if (numbers.length === 2) return (numbers[0] + numbers[1]) / 2;\\n\\n  // fallback if more than 2 numbers (rare)\\n  return numbers[0];\\n}\\n\\n// Example usage inside n8n Function node\\n// Assume input data is in items, and salary is in item.json.salary\\nfor (let item of items) {\\n  const salaryStr = item.json.salary;\\n  item.json.salary_numeric = convertSalaryRangeToNumber(salaryStr);\\n}\\n\\nreturn items;\\n\"},\"typeVersion\":2},{\"id\":\"294d6c73-8946-4ee7-8d60-11b72ecb3964\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[2600,620],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-2.0-flash\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"PyKkDHOogdm7OBzV\",\"name\":\"Google Gemini(PaLM) Api account\"}},\"typeVersion\":1},{\"id\":\"6a6c4536-a57a-4e58-a76f-81eef755fa19\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[-20,400],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"minutes\",\"minutesInterval\":2}]}},\"typeVersion\":1.2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"e5356e09-7a30-467a-a848-507087afb818\",\"connections\":{\"Code\":{\"main\":[[{\"node\":\"Write results to airtable\",\"type\":\"main\",\"index\":0}]]},\"Split Out\":{\"main\":[[{\"node\":\"Get relevant data\",\"type\":\"main\",\"index\":0}]]},\"Clean text\":{\"main\":[[{\"node\":\"Limit for testing (optional)\",\"type\":\"main\",\"index\":0}]]},\"Extract text\":{\"main\":[[{\"node\":\"Clean text\",\"type\":\"main\",\"index\":0}]]},\"Get latest post\":{\"main\":[[{\"node\":\"HN API: Get Main Post\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Search for Who is hiring posts\",\"type\":\"main\",\"index\":0}]]},\"Get relevant data\":{\"main\":[[{\"node\":\"Get latest post\",\"type\":\"main\",\"index\":0}]]},\"HN API: Get Main Post\":{\"main\":[[{\"node\":\"Split out children (jobs)\",\"type\":\"main\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Trun into structured data\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Trun into structured data\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Split out children (jobs)\":{\"main\":[[{\"node\":\"HI API: Get the individual job post\",\"type\":\"main\",\"index\":0}]]},\"Trun into structured data\":{\"main\":[[{\"node\":\"Code\",\"type\":\"main\",\"index\":0}]]},\"Limit for testing (optional)\":{\"main\":[[{\"node\":\"Trun into structured data\",\"type\":\"main\",\"index\":0}]]},\"Search for Who is hiring posts\":{\"main\":[[{\"node\":\"Split Out\",\"type\":\"main\",\"index\":0}]]},\"HI API: Get the individual job post\":{\"main\":[[{\"node\":\"Extract text\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Workflow Overview\n\nThis workflow automatically fetches the latest \"Ask HN: Who is hiring?\" posts from Hacker News, extracts individual job listings, cleans the raw text, converts them into structured job listings using Google Gemini AI, and saves them into Airtable.\n\n## Components\n\nIt’s a full end-to-end automation system combining:\n\n  * **Algolia API** for HN data\n  * **Text cleaning**\n  * **Gemini AI (via LangChain)** for parsing job descriptions\n  * **Structured JSON extraction**\n  * **Airtable integration** to store the final data\n\n\n\n## 🎯 Use Cases\n\n  * Automatically build a job board from HN posts\n  * Track startup hiring trends\n  * Feed remote job alerts into a CRM or Slack\n  * Enrich a hiring intelligence database\n\n\n\n## 🔧 Nodes & Services Used\n\n  * HTTP Request (Algolia + Firebase API)\n  * SplitOut, Set, Filter, Function, Limit\n  * Google Gemini (via LangChain integration)\n  * Output Parser Structured\n  * Airtable (API token required)\n\n\n\n## 📌 Credentials Required\n\n  * Google Gemini (PaLM/Gemini API)\n  * Airtable Personal Access Token\n  * Algolia Application ID & API Key (via Header Auth)\n\n\n\n## 📦 Tags\n\nhacker-news, jobs, airtable, ai, gemini, automation, hn, langchain, workflow\n\n## Screenshots\n\n![Screen Shot 20250521 at 5.56.21 PM.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screen_Shot_2025_05_21_at_5_56_21_PM_155683d9f5.png)\n",
  "crawled_at": "2025-05-26T07:33:39.807673",
  "readme_zh": "## 工作流概览\n\n该工作流自动抓取Hacker News上最新的\"Ask HN: Who is hiring?\"帖子，提取单个职位列表，清洗原始文本，通过Google Gemini AI将其转换为结构化职位列表，并存储至Airtable。\n\n## 核心组件\n\n这是一个结合以下技术的端到端自动化系统：\n  * **Algolia API** 用于获取HN数据\n  * **文本清洗** 处理原始内容\n  * **Gemini AI（通过LangChain集成）** 解析职位描述\n  * **结构化JSON提取** \n  * **Airtable集成** 存储最终数据\n\n## 🎯 应用场景\n  * 从HN帖子自动构建招聘看板\n  * 追踪初创企业招聘趋势\n  * 将远程职位提醒推送至CRM或Slack\n  * 丰富招聘情报数据库\n\n## 🔧 使用的节点与服务\n  * HTTP请求（Algolia + Firebase API）\n  * SplitOut、Set、Filter、Function、Limit节点\n  * Google Gemini（通过LangChain集成）\n  * 结构化输出解析器\n  * Airtable（需API令牌）\n\n## 📌 所需凭证\n  * Google Gemini（PaLM/Gemini API密钥）\n  * Airtable个人访问令牌\n  * Algolia应用ID及API密钥（通过Header Auth认证）\n\n## 📦 标签\n黑客新闻、招聘、airtable、人工智能、gemini、自动化、hn、langchain、工作流\n\n## 截图\n![2025年5月21日下午5.56.21截图.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screen_Shot_2025_05_21_at_5_56_21_PM_155683d9f5.png)",
  "title_zh": "使用Gemini AI提取并结构化Hacker News招聘帖子并保存至Airtable",
  "publish_date_zh": "最后更新于3天前",
  "workflow_json_zh": "{\n  \"id\": \"ExmRkYWlTAPhA2IQ\",\n  \"meta\": {\n    \"instanceId\": \"e19d1d1e8279ed4f1e9dcdd2328b7c5082def05206ccc115a1f38a5872651e05\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"HN Jobs update\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"2e510877-4fd3-4e46-a1ad-b44187226b78\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        340,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"hits\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b5a9c1f3-f167-4646-8f11-97f4be32ff93\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        2780,\n        600\n      ],\n      \"parameters\": {\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n \\\"type\\\": \\\"object\\\",\\n \\\"properties\\\": {\\n \\\"company\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Name of the hiring company\\\"\\n },\\n \\\"title\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Job title/role being advertised\\\"\\n },\\n \\\"location\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Work location including remote/hybrid status\\\"\\n },\\n \\\"type\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"enum\\\": [\\n \\\"FULL_TIME\\\",\\n \\\"PART_TIME\\\",\\n \\\"CONTRACT\\\",\\n \\\"INTERNSHIP\\\",\\n \\\"FREELANCE\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Employment type (Full-time, Contract, etc)\\\"\\n },\\n \\\"work_location\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"enum\\\": [\\n \\\"REMOTE\\\",\\n \\\"HYBRID\\\",\\n \\\"ON_SITE\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Work arrangement type\\\"\\n },\\n \\\"salary\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Compensation details if provided\\\"\\n },\\n \\\"description\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Main job description text including requirements and team info\\\"\\n },\\n \\\"apply_url\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Direct application/job posting URL\\\"\\n },\\n \\\"company_url\\\": {\\n \\\"type\\\": [\\n \\\"string\\\",\\n null\\n ],\\n \\\"description\\\": \\\"Company website or careers page\\\"\\n }\\n }\\n}\\n\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"80012214-5045-4c54-a5e1-cf7b76a611c3\",\n      \"name\": \"Search for Who is hiring posts\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        140,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"https://uj5wyc0l7x-dsn.algolia.net/1/indexes/Item_dev_sort_date/query\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"{\\n \\\"query\\\": \\\"\\\\\\\"Ask HN: Who is hiring\\\\\\\"\\\",\\n \\\"analyticsTags\\\": [\\n \\\"web\\\"\\n ],\\n \\\"page\\\": 0,\\n \\\"hitsPerPage\\\": 30,\\n \\\"minWordSizefor1Typo\\\": 4,\\n \\\"minWordSizefor2Typos\\\": 8,\\n \\\"advancedSyntax\\\": true,\\n \\\"ignorePlurals\\\": false,\\n \\\"clickAnalytics\\\": true,\\n \\\"minProximity\\\": 7,\\n \\\"numericFilters\\\": [],\\n \\\"tagFilters\\\": [\\n [\\n \\\"story\\\"\\n ],\\n []\\n ],\\n \\\"typoTolerance\\\": \\\"min\\\",\\n \\\"queryType\\\": \\\"prefixNone\\\",\\n \\\"restrictSearchableAttributes\\\": [\\n \\\"title\\\",\\n \\\"comment_text\\\",\\n \\\"url\\\",\\n \\\"story_text\\\",\\n \\\"author\\\"\\n ],\\n \\\"getRankingInfo\\\": true\\n}\",\n        \"sendBody\": true,\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-algolia-agent\",\n              \"value\": \"Algolia for JavaScript (4.13.1); Browser (lite)\"\n            },\n            {\n              \"name\": \"x-algolia-application-id\",\n              \"value\": \"UJ5WYC0L7X\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"*/*\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-GB,en-US;q=0.9,en;q=0.8\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Origin\",\n              \"value\": \"https://hn.algolia.com\"\n            },\n            {\n              \"name\": \"Referer\",\n              \"value\": \"https://hn.algolia.com/\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"cross-site\"\n            },\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\"\n            },\n            {\n              \"name\": \"sec-ch-ua\",\n              \"value\": \"\\\"Chromium\\\";v=\\\"133\\\", \\\"Not(A:Brand\\\";v=\\\"99\\\"\"\n            },\n            {\n              \"name\": \"sec-ch-ua-mobile\",\n              \"value\": \"?0\"\n            },\n            {\n              \"name\": \"sec-ch-ua-platform\",\n              \"value\": \"\\\"macOS\\\"\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"sV79MeBXuKW0vlk4\",\n          \"name\": \"Header Auth account\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"58a1f06b-0e41-4f73-9a47-5134806e4249\",\n      \"name\": \"Get relevant data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        640,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"73dd2325-faa7-4650-bd78-5fc97cc202de\",\n              \"name\": \"title\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.title }}\"\n            },\n            {\n              \"id\": \"44918eac-4510-440e-9ac0-bf14d2b2f3af\",\n              \"name\": \"createdAt\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.created_at }}\"\n            },\n            {\n              \"id\": \"00eb6f09-2c22-411c-949c-886b2d95b6eb\",\n              \"name\": \"updatedAt\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.updated_at }}\"\n            },\n            {\n              \"id\": \"2b4f9da6-f60e-46e0-ba9d-3242fa955a55\",\n              \"name\": \"storyId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.story_id }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"d69eb7f3-383f-4e67-a0e7-b5930cfc8b26\",\n      \"name\": \"Get latest post\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        920,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"d7dd7175-2a50-45aa-bd3e-4c248c9193c4\",\n              \"operator\": {\n                \"type\": \"dateTime\",\n                \"operation\": \"after\"\n              },\n              \"leftValue\": \"={{ $json.createdAt }}\",\n              \"rightValue\": \"={{$now.minus({days: 30})}} \"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"737cce8c-2ef0-4421-bccf-d9bdfa308385\",\n      \"name\": \"Split out children (jobs)\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1400,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"kids\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"13e36405-f049-4d3d-a17c-f14b42817ba1\",\n      \"name\": \"Trun into structured data\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        2540,\n        400\n      ],\n      \"parameters\": {\n        \"text\": \"={{ $json.cleaned_text }}\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"Extract the JSON data\"\n            }\n          ]\n        },\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"40d699ab-bf6d-402b-8192-c485a3525d27\",\n      \"name\": \"Extract text\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1800,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6affa370-56ce-4ad8-8534-8f753fdf07fc\",\n              \"name\": \"text\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.text }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"a20afe14-6457-4aa3-9135-75733c704723\",\n      \"name\": \"Clean text\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2000,\n        400\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// In a Function node in n8n\\nconst inputData = $input.all();\\n\\nfunction cleanAllPosts(data) {\\n return data.map(item => {\\n try {\\n // Check if item exists and has the expected structure\\n if (!item || typeof item !== 'object') {\\n return { cleaned_text: '', error: 'Invalid item structure' };\\n }\\n\\n // Get the text, with multiple fallbacks\\n let text = '';\\n if (typeof item === 'string') {\\n text = item;\\n } else if (item.json && item.json.text) {\\n text = item.json.text;\\n } else if (typeof item.json === 'string') {\\n text = item.json;\\n } else {\\n text = JSON.stringify(item);\\n }\\n\\n // Make sure text is a string\\n text = String(text);\\n \\n // Perform the cleaning operations\\n try {\\n text = text.replace(/&#x2F;/g, '/');\\n text = text.replace(/&#x27;/g, \\\"'\\\");\\n text = text.replace(/&\\\\w+;/g, ' ');\\n text = text.replace(/<[^>]*>/g, '');\\n text = text.replace(/\\\\|\\\\s*/g, '| ');\\n text = text.replace(/\\\\s+/g, ' ');\\n text = text.replace(/\\\\s*(https?:\\\\/\\\\/[^\\\\s]+)\\\\s*/g, '\\\\n$1\\\\n');\\n text = text.replace(/\\\\n{3,}/g, '\\\\n\\\\n');\\n text = text.trim();\\n } catch (cleaningError) {\\n console.log('Error during text cleaning:', cleaningError);\\n // Return original text if cleaning fails\\n return { cleaned_text: text, warning: 'Partial cleaning applied' };\\n }\\n\\n return { cleaned_text: text };\\n \\n } catch (error) {\\n console.log('Error processing item:', error);\\n return { \\n cleaned_text: '', \\n error: `Processing error: ${error.message}`,\\n original: item\\n };\\n }\\n }).filter(result => result.cleaned_text || result.error); \\n}\\n\\ntry {\\n return cleanAllPosts(inputData);\\n} catch (error) {\\n console.log('Fatal error:', error);\\n return [{ \\n cleaned_text: '', \\n error: `Fatal error: ${error.message}`,\\n input: inputData \\n }];\\n}\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8ba5a5b4-0d03-46f8-90a1-7550913b77dd\",\n      \"name\": \"Limit for testing (optional)\",\n      \"type\": \"n8n-nodes-base.limit\",\n      \"position\": [\n        2220,\n        400\n      ],\n      \"parameters\": {\n        \"maxItems\": 5\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d5535a17-79f1-4dc2-941a-ea4dd6a109a8\",\n      \"name\": \"Write results to airtable\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"position\": [\n        3200,\n        400\n      ],\n      \"parameters\": {\n        \"base\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"app3Gb4cEMflRuqzy\",\n          \"cachedResultUrl\": \"https://airtable.com/app3Gb4cEMflRuqzy\",\n          \"cachedResultName\": \"HN Who is hiring?\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"tbl4JrmWPcxiUuCiX\",\n          \"cachedResultUrl\": \"https://airtable.com/app3Gb4cEMflRuqzy/tbl4JrmWPcxiUuCiX\",\n          \"cachedResultName\": \"Table 1\"\n        },\n        \"columns\": {\n          \"value\": {\n            \"Type\": \"={{ $json.output.type }}\",\n            \"Title\": \"={{ $json.output.title }}\",\n            \"Salary\": \"={{ $json.output.salary }}\",\n            \"Company\": \"={{ $json.output.company }}\",\n            \"Location\": \"={{ $json.output.location }}\",\n            \"Apply_url\": \"={{ $json.output.apply_url }}\",\n            \"Description\": \"={{ $json.output.description }}\",\n            \"company_url\": \"={{ $json.output.company_url }}\",\n            \"work_location\": \"={{ $json.output.work_location }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"Title\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Title\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Company\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Company\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Location\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Location\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Type\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Type\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"work_location\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"work_location\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Description\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Description\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Salary\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Salary\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Apply_url\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"Apply_url\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"company_url\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"readOnly\": false,\n              \"required\": false,\n              \"displayName\": \"company_url\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"create\"\n      },\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"H0gK9cFHnootcYwf\",\n          \"name\": \"Airtable Personal Access Token account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"e51caae1-c8d1-4954-91a5-d0dfde442346\",\n      \"name\": \"HI API: Get the individual job post\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1600,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"=https://hacker-news.firebaseio.com/v0/item/{{ $json.kids }}.json?print=pretty\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"880d31e0-41fa-434d-a3d0-ac850ede0b59\",\n      \"name\": \"HN API: Get Main Post\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1200,\n        400\n      ],\n      \"parameters\": {\n        \"url\": \"=https://hacker-news.firebaseio.com/v0/item/{{ $json.storyId }}.json?print=pretty\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"e1bc30b5-b792-4f1e-8d38-ead61178c5fd\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2900,\n        400\n      ],\n      \"parameters\": {\n        \"jsCode\": \"function convertSalaryRangeToNumber(salaryStr) {\\n  if (!salaryStr) return null;\\n\\n  // Remove $ and spaces, convert to lowercase\\n  salaryStr = salaryStr.replace(/\\\\$/g, '').replace(/\\\\s/g, '').toLowerCase();\\n\\n  // Replace 'k' with '000'\\n  salaryStr = salaryStr.replace(/k/g, '000');\\n\\n  // Split by dash, en dash, em dash\\n  const parts = salaryStr.split(/[-–—]/);\\n\\n  // Extract numbers\\n  const numbers = parts.map(part => {\\n    // Remove non-digit/non-dot characters\\n    const cleaned = part.replace(/[^\\\\d.]/g, '');\\n    return cleaned ? parseFloat(cleaned) : NaN;\\n  }).filter(num => !isNaN(num));\\n\\n  if (numbers.length === 0) return null;\\n  if (numbers.length === 1) return numbers[0];\\n  if (numbers.length === 2) return (numbers[0] + numbers[1]) / 2;\\n\\n  // fallback if more than 2 numbers (rare)\\n  return numbers[0];\\n}\\n\\n// Example usage inside n8n Function node\\n// Assume input data is in items, and salary is in item.json.salary\\nfor (let item of items) {\\n  const salaryStr = item.json.salary;\\n  item.json.salary_numeric = convertSalaryRangeToNumber(salaryStr);\\n}\\n\\nreturn items;\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"294d6c73-8946-4ee7-8d60-11b72ecb3964\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        2600,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.0-flash\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"PyKkDHOogdm7OBzV\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6a6c4536-a57a-4e58-a76f-81eef755fa19\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        -20,\n        400\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"minutes\",\n              \"minutesInterval\": 2\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e5356e09-7a30-467a-a848-507087afb818\",\n  \"connections\": {\n    \"Code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Write results to airtable\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get relevant data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Clean text\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Limit for testing (optional)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract text\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clean text\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get latest post\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HN API: Get Main Post\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Search for Who is hiring posts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get relevant data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get latest post\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HN API: Get Main Post\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split out children (jobs)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Trun into structured data\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Trun into structured data\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split out children (jobs)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HI API: Get the individual job post\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Trun into structured data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Limit for testing (optional)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Trun into structured data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search for Who is hiring posts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HI API: Get the individual job post\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract text\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}