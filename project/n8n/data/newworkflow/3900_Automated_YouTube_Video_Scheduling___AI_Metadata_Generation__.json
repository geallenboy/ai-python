{
  "url": "https://n8n.io/workflows/3900-automated-youtube-video-scheduling-and-ai-metadata-generation/",
  "title": "Automated YouTube Video Scheduling & AI Metadata Generation üé¨",
  "author": "JPres",
  "publish_date": "Last update 19 days ago",
  "publish_date_absolute": "2025-05-07",
  "categories": [
    {
      "name": "AI"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"id\":\"wLbJ7rE6vQzizCp2\",\"meta\":{\"instanceId\":\"5ce52989094be90be3b3bdd9ed9cee1d7ce1fcecaa598afaec4a50646d32e291\",\"templateCredsSetupCompleted\":true},\"name\":\"Youtube_Automation\",\"tags\":[{\"id\":\"5eZb3e5PJspoJjVN\",\"name\":\"Privat\",\"createdAt\":\"2025-02-22T09:31:58.972Z\",\"updatedAt\":\"2025-02-22T09:31:58.972Z\"},{\"id\":\"fSDcaaN3w5sV5e3S\",\"name\":\"Templates\",\"createdAt\":\"2025-02-23T15:20:47.262Z\",\"updatedAt\":\"2025-02-23T15:20:47.262Z\"}],\"nodes\":[{\"id\":\"2001b9ca-f76b-437e-90a9-16c0d17accef\",\"name\":\"Fetch Latest Videos\",\"type\":\"n8n-nodes-base.youTube\",\"position\":[-60,40],\"parameters\":{\"limit\":1,\"filters\":{},\"options\":{\"order\":\"date\"},\"resource\":\"video\"},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"cpgVAMXp8iMLXwKW\",\"name\":\"Private Pres\"}},\"typeVersion\":1},{\"id\":\"e8857adf-63ec-4612-aa49-cd77130a6728\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[160,40],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"1a8cf640-caf4-4163-a658-400714702314\",\"name\":\"YT Title\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"disabled\":true,\"position\":[2220,120],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4.1-nano\",\"cachedResultName\":\"GPT-4.1-NANO\"},\"options\":{},\"messages\":{\"values\":[{\"role\":\"system\",\"content\":\"Du bist ein professioneller Texter f√ºr SEO-optimierte YouTube-Titel.\"},{\"content\":\"=Schreib mir einen passenden SEO Youtube Titel f√ºr das Transkript folgendes Videotranskriptes. Gib mir nur den Titel sonst nichts. Maximal 100 Character also halte dich kurz.\\n\\n{{ $('Adjust Transcript Format').item.json.transcript }}\"}]}},\"credentials\":{\"openAiApi\":{\"id\":\"ftBgqCi1fD1fFEZq\",\"name\":\"Midgard#1\"}},\"typeVersion\":1.7},{\"id\":\"ec6e5d83-d8c8-417e-8df0-86634feef3e6\",\"name\":\"Create Description\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[1920,80],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4.1-nano\",\"cachedResultName\":\"GPT-4.1-NANO\"},\"options\":{},\"messages\":{\"values\":[{\"role\":\"system\",\"content\":\"Du bist ein professioneller Texteschreiber.\\nDu erh√§ltst das Transkript eines wirtschaftsbezogenen Videos und erstellst eine ausf√ºhrlichere aber auch nicht zu lange  Zusammenfassung (mit Abs√§tzen) dar√ºber, worum es geht.\\n\\nSchreibe eine ausf√ºhrlichere Zusammenfassung (mit Abs√§tzen) √ºber den Inhalt des Podcasts. \\n\\nDein Output wird f√ºr die Youtube Video Beschreibung verwendet. Also starte mit sowas wie: \\\"In diesem Video...\\\" oder \\\"In dieser Folge...\\\". \\nSchreibe aus meiner Perspektive also Sachen wie \\\"meine Meinung\\\" oder \\\"meiner Ansicht nach\\\"...  aus der Ich- Perspektive aber niemals sowas wie \\\"In dieser Folge lerne ich...\\\" oder so √§hnlich, denn ich erkl√§re stets den Inhalt bzw. diskutiere dar√ºber. DU SCHREIBST NIEMALS SOWAS WIE \\\"DER SPRECHER SAGT\\\"!!! Immer aus meiner Position heraus.\\n\\nWichtig: Verwende klare und dominante Aussagen, wie sie im Transkript formuliert sind. Vermeide neutrale oder unsichere Formulierungen wie \\\"es k√∂nnte\\\", \\\"ich vermute, dass\\\", \\\"m√∂glicherweise\\\" oder √§hnliche Phrasen. Die Aussagen sollen selbstbewusst und eindeutig sein, um die Inhalte des Podcasts kraftvoll zu vermitteln.\\nF√ºge einige wenige (2-4) Emojis an wo es sich anbietet. \\n   \\nEnde den Post mit 2-5 passenden Hashtags. Die Hashtags sollten grob sein also sowas wie #wirtschaft #geld #gold oder so √§hnlich - je nachdem was passt.\\n\"},{\"content\":\"=Hier ist das Transkript: \\n\\n{{ $json.transcript }}\"}]}},\"credentials\":{\"openAiApi\":{\"id\":\"ftBgqCi1fD1fFEZq\",\"name\":\"Midgard#1\"}},\"typeVersion\":1.7},{\"id\":\"f59d950b-4e29-4a41-8756-85ea7814b3d3\",\"name\":\"When clicking ‚ÄòTest workflow‚Äô\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-2260,300],\"parameters\":{},\"typeVersion\":1},{\"id\":\"27ef7d44-7cca-417f-8177-b5b896a79aa0\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2660,-20],\"parameters\":{\"color\":3,\"width\":220,\"content\":\"### üé•Title is kept from the upload, alternatively you can just add the YT Title module in the mix \\n# üëáüèª\\n\"},\"typeVersion\":1},{\"id\":\"8d763312-35f0-4d53-a210-1e0e22a06323\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1920,-140],\"parameters\":{\"color\":3,\"height\":200,\"content\":\"# Adjust the Prompts üëâüèª\\n\\n# üëáüèª\"},\"typeVersion\":1},{\"id\":\"9e7f22d5-7776-4bc4-a274-963cb8c8810c\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-540,-560],\"parameters\":{\"color\":5,\"width\":620,\"height\":420,\"content\":\"# Youtube Video Description/Tags/etc. Automation\\n\\nüëâüèª **Repos**: [github.com/JimPresting](https://github.com/JimPresting) üõ†Ô∏è  \\nüëâüèª **YouTube**: [youtube.com/@StardawnAI](https://www.youtube.com/@StardawnAI) üé•  \\n\\nStay up to date for guides on Github repos and tutorials on YouTube! üöÄ\\n\\n\\n**Note:** By default, this takes only the latest video and adjusts the values. If you upload multiple videos within a day or even at once within one hour, you need to set that value higher, but bear in mind that if you set it to a high number, it will process older, already published videos. Using the *Publish After* option can't be recommended as it might lead to errors with scheduled videos.\\nYou can also detach the *Remove Duplicates* node from the ongoing nodes and set the limit of the *Get All Videos* node to *Return all*. This way, everything that has already been uploaded will not be returned in the future. To undo this, you can select *Clear Database* in the *Remove Duplicates* node.\\n\"},\"typeVersion\":1},{\"id\":\"4c5667cf-f8a9-45ab-876b-3a6b5730484c\",\"name\":\"2.5FlashPrev\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[2220,0],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-2.5-flash-preview-04-17\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"clmB8ZYJMHaHmnsu\",\"name\":\"Stardawn#1\"}},\"typeVersion\":1},{\"id\":\"7c73cc89-ea8e-42b3-a1c9-2dc493026216\",\"name\":\"YT Tags\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[2220,-120],\"parameters\":{\"text\":\"=Nun folgt das eigentliche Thema/Transkript. Gib mir die Youtube Tags daf√ºr:\\n\\n{{ $('Adjust Transcript Format').item.json.transcript }}\",\"options\":{\"systemMessage\":\"You will get the transcript of a Youtube video for which you should generate matching tags (YOU NEED TO separate it by comma).\\n\\nBased on the topic/transcript of the video generate YouTube tags. These tags should be very general about the topics. Give multiple matching YouTube Tags that improve SEO for the video. \\n\\nExample:\\nif the video is about why gold is a good investment you will for example not use gold investments as a tag but rather just gold     \\n\\nThe tags (if appropriate) should be in German as the channel content is in German.\\n\\nReturn just the tags one word by one separated via Comma. \\n\\n\\nDieses Video handelt vom zuk√ºnftigen Goldpreis und davon, wie er die Renditen von performanten Verm√∂genswerten wie Aktien und Anleihen in ihrer angepassten Rendite beeinflusst.\\n\\nErwartetet output:\\nGoldpreis, zuk√ºnftiger Goldpreis, Goldinvestitionen, Verm√∂gensrenditen, Aktien und Anleihen, Investitionsrenditen, angepasste Rendite, Goldmarkt, Finanzm√§rkte, Goldpreisprognose, Wirtschaftstrends, Investieren in Gold, Aktienmarktanalyse, Anleihenmarkt, Anlagestrategien, Inflation und Gold, Gold vs. Aktien, Finanzanalyse, Edelmetalle, Portfoliomanagement, Marktausblick, Investmenttipps\\n \"},\"promptType\":\"define\"},\"typeVersion\":1.9},{\"id\":\"e8782ac7-ca31-4a5f-a9f1-62548f56407d\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-2340,-140],\"parameters\":{\"color\":4,\"width\":2000,\"height\":660,\"content\":\"# üìÖScheduling Logic‚è∞\\n\\n\"},\"typeVersion\":1},{\"id\":\"33d289eb-c989-4c8d-b387-405f31ba11d6\",\"name\":\"3s\",\"type\":\"n8n-nodes-base.wait\",\"position\":[2920,140],\"webhookId\":\"1e75fe1f-e553-4530-a8bc-5e64208a1184\",\"parameters\":{\"amount\":3},\"typeVersion\":1.1},{\"id\":\"19337563-a349-485d-a064-32f58c8fde90\",\"name\":\"gettitle\",\"type\":\"n8n-nodes-base.youTube\",\"position\":[-780,200],\"parameters\":{\"options\":{},\"videoId\":\"={{ $json.videoId }}\",\"resource\":\"video\",\"operation\":\"get\"},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"cpgVAMXp8iMLXwKW\",\"name\":\"Private Pres\"}},\"typeVersion\":1},{\"id\":\"da93ff18-8d19-45ab-b268-dbbebcb86719\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1040,-140],\"parameters\":{\"color\":5,\"width\":180,\"content\":\"## Code only returns the videos that are not listed\"},\"typeVersion\":1},{\"id\":\"71e9606c-4b6e-4b49-b3ec-bd9bd261f7a9\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-600,-80],\"parameters\":{\"color\":3,\"width\":220,\"height\":260,\"content\":\"## Video needs to be set to private TOGETHER with the PublishAt parameter in order for it to work.\"},\"typeVersion\":1},{\"id\":\"c5a240aa-b705-4219-b293-da4ae0168350\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1320,-140],\"parameters\":{\"color\":3,\"width\":280,\"height\":240,\"content\":\"### Video needs to be Unlisted or Published in order for the scraper to be able to get the transcript\\n\\n### ADJUST YOUR APIFY API TOKEN HERE      \\n# üëáüèª\"},\"typeVersion\":1},{\"id\":\"5fb12ed7-8992-424d-86e0-7c8cd0f0b9d3\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-80,-140],\"parameters\":{\"color\":4,\"width\":3200,\"height\":660,\"content\":\"# Generate Description, Tags, etc. üñåÔ∏èüìù #Ô∏è‚É£\"},\"typeVersion\":1},{\"id\":\"33b865ef-ec2e-4349-bbba-d76d41345fe3\",\"name\":\"Set Publish Date\",\"type\":\"n8n-nodes-base.youTube\",\"position\":[-600,280],\"parameters\":{\"title\":\"={{ $json.snippet.title }}\",\"videoId\":\"={{ $json.id }}\",\"resource\":\"video\",\"operation\":\"update\",\"categoryId\":\"25\",\"regionCode\":\"DE\",\"updateFields\":{\"publishAt\":\"={{ $('Loop over All Videos not Published').item.json.publishAt }}\",\"privacyStatus\":\"private\"}},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"cpgVAMXp8iMLXwKW\",\"name\":\"Private Pres\"}},\"typeVersion\":1},{\"id\":\"9a228886-c91a-44f7-b894-e23095166efc\",\"name\":\"Every Day\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"disabled\":true,\"position\":[-2260,60],\"parameters\":{\"rule\":{\"interval\":[{\"triggerAtHour\":14,\"triggerAtMinute\":22}]}},\"typeVersion\":1.2},{\"id\":\"c0277051-f146-43f7-a2cd-36739d933209\",\"name\":\"Get Videos to reschedule\",\"type\":\"n8n-nodes-base.youTube\",\"position\":[-1880,40],\"parameters\":{\"limit\":2,\"filters\":{},\"options\":{\"order\":\"date\"},\"resource\":\"video\"},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"cpgVAMXp8iMLXwKW\",\"name\":\"Private Pres\"}},\"typeVersion\":1},{\"id\":\"5cf3813b-931b-4c0a-84fe-4edd3d55a99a\",\"name\":\"Get video Ids seperated\",\"type\":\"n8n-nodes-base.code\",\"position\":[-1660,40],\"parameters\":{\"jsCode\":\"// Extract video IDs from YouTube search results\\n// This function processes all input items and creates separate items for each videoId\\n\\n// Initialize empty array for our result items\\nconst resultItems = [];\\n\\n// Process each input item\\nfor (const item of items) {\\n  // Check if the item has a valid structure\\n  if (item.json && item.json.id && item.json.id.videoId) {\\n    // Create a new item for each videoId\\n    resultItems.push({\\n      json: {\\n        videoId: item.json.id.videoId\\n      }\\n    });\\n  }\\n}\\n\\n// Return each videoId as a separate item that can be processed individually\\nreturn resultItems;\"},\"typeVersion\":2},{\"id\":\"8131b388-b842-4c46-b82b-e53283d938ed\",\"name\":\"Loop over Video IDs\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[-1440,40],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"665cb406-f6b9-4ba4-82fa-daa1141eb0a3\",\"name\":\"Get Video Data\",\"type\":\"n8n-nodes-base.youTube\",\"position\":[-1220,60],\"parameters\":{\"options\":{},\"videoId\":\"={{ $json.videoId }}\",\"resource\":\"video\",\"operation\":\"get\"},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"cpgVAMXp8iMLXwKW\",\"name\":\"Private Pres\"}},\"typeVersion\":1},{\"id\":\"3d366fb3-f579-46f0-9254-8d4c1612038e\",\"name\":\"Return Private Videos\",\"type\":\"n8n-nodes-base.code\",\"position\":[-1220,-120],\"parameters\":{\"jsCode\":\"// Utility function to get next Friday at 17:00 UTC in YouTube ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ)\\nfunction getNextFridayUTC(startDate, weekOffset = 0) {\\n  const date = new Date(startDate); // Work with a copy\\n  \\n  const currentUTCDay = date.getUTCDay(); // 0 for Sunday, ..., 5 for Friday\\n  const daysUntilFriday = (5 - currentUTCDay + 7) % 7; // Calculate days to next Friday\\n  \\n  date.setUTCDate(date.getUTCDate() + daysUntilFriday + (weekOffset * 7));\\n  date.setUTCHours(17, 0, 0, 0); // Set time to 17:00:00.000 UTC\\n  \\n  // toISOString() returns \\\"YYYY-MM-DDTHH:mm:ss.sssZ\\\"\\n  // We split at '.' to remove milliseconds and add 'Z' back for \\\"YYYY-MM-DDTHH:mm:ssZ\\\"\\n  return date.toISOString().split('.')[0] + \\\"Z\\\";\\n}\\n\\n// INPUT `items` is an array from n8n.\\n// Each item.json is expected to be a YouTube video object from a previous node.\\nconst videosToSchedule = items.filter(item => \\n  item.json && \\n  item.json.status && \\n  (item.json.status.privacyStatus === \\\"unlisted\\\" || item.json.status.privacyStatus === \\\"private\\\")\\n  // Adjust this filter if you only want to process \\\"unlisted\\\" or only \\\"private\\\" videos\\n);\\n\\nif (videosToSchedule.length === 0) {\\n  // console.log(\\\"No videos found matching the filter criteria.\\\");\\n  return []; // Return empty array if no videos to schedule\\n}\\n\\n// Sort videos by their original published/uploaded date (snippet.publishedAt), earliest first.\\nvideosToSchedule.sort((a, b) => {\\n  const dateA = new Date(a.json?.snippet?.publishedAt || '1970-01-01T00:00:00Z');\\n  const dateB = new Date(b.json?.snippet?.publishedAt || '1970-01-01T00:00:00Z');\\n  return dateA - dateB;\\n});\\n\\nconst now = new Date(); // Current date to calculate future Fridays\\n\\n// Map the filtered and sorted videos to the desired output structure for the YouTube update node.\\nconst scheduledItems = videosToSchedule.map((item, index) => {\\n  const videoData = item.json; // The actual video data object\\n  const scheduleDate = getNextFridayUTC(now, index); // Calculate the publishAt date\\n  \\n  return {\\n    json: { // This is the structure the next n8n YouTube node will receive\\n      videoId: videoData.id,                             // ID of the video to update\\n      publishAt: scheduleDate,                           // The calculated schedule time: YYYY-MM-DDTHH:mm:ssZ\\n      title: videoData.snippet?.title || \\\"Untitled Video\\\", // Keep original title or use a default\\n      \\n      // --- CRITICAL PARAMETERS FOR THE YOUTUBE API ---\\n      privacy: \\\"private\\\", // **MUST BE 'private' FOR 'publishAt' TO WORK!**\\n                          // The API requires the video to be set to private when scheduling.\\n      \\n      // **VERY LIKELY REQUIRED: selfDeclaredMadeForKids**\\n      // You MUST tell YouTube if the video is made for kids or not.\\n      // Get it from existing data if available, otherwise set a default.\\n      selfDeclaredMadeForKids: videoData.status?.selfDeclaredMadeForKids === true ? true : false,\\n\\n      // **POSSIBLY REQUIRED: categoryId (if updating snippet like title)**\\n      // categoryId: videoData.snippet?.categoryId || \\\"YOUR_DEFAULT_CATEGORY_ID\\\", \\n      // e.g., \\\"10\\\" for Music, \\\"22\\\" for People & Blogs.\\n      // Check YouTube API docs for category IDs.\\n      \\n      // (Optional) You can include other fields like description if you want to update them\\n      // description: videoData.snippet?.description || \\\"\\\" \\n    }\\n  };\\n});\\n\\nreturn scheduledItems; // Return the array of video objects to be processed\"},\"typeVersion\":2,\"alwaysOutputData\":true},{\"id\":\"bb3e90ae-ff3f-4c22-b920-d1a99a1f99e8\",\"name\":\"4s\",\"type\":\"n8n-nodes-base.wait\",\"position\":[-260,240],\"webhookId\":\"7d5c70f8-a592-4634-8c5a-0fbd0cebf6a4\",\"parameters\":{\"amount\":4},\"typeVersion\":1.1},{\"id\":\"f67c7668-71eb-42e6-b385-f66f9e5e80eb\",\"name\":\"Loop over All Videos not Published\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[-1020,60],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"f98b1399-7970-4585-8f2a-be897562fa40\",\"name\":\"get video id\",\"type\":\"n8n-nodes-base.set\",\"position\":[380,80],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"c2e2eecd-ca73-40c9-a364-4713030ab451\",\"name\":\"id.videoId\",\"type\":\"string\",\"value\":\"={{ $json.id.videoId }}\"}]},\"includeOtherFields\":true},\"typeVersion\":3.4},{\"id\":\"6b907512-945b-4c1e-8a97-b14409ddfcaa\",\"name\":\"Remove Duplicates from previous Runs\",\"type\":\"n8n-nodes-base.removeDuplicates\",\"position\":[600,80],\"parameters\":{\"options\":{},\"operation\":\"removeItemsSeenInPreviousExecutions\",\"dedupeValue\":\"={{ $json.id.videoId }}\"},\"typeVersion\":2,\"alwaysOutputData\":false},{\"id\":\"d6c7152e-e508-43c3-8748-ba12652ac117\",\"name\":\"new video?\",\"type\":\"n8n-nodes-base.if\",\"position\":[820,80],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"adfea7c7-ed64-4e1e-a9c3-dc5e33aa1147\",\"operator\":{\"type\":\"array\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{$('Remove Duplicates from previous Runs').all() }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"d1c31718-4a26-4108-a618-f67cfb87053c\",\"name\":\"getLatestVideoID\",\"type\":\"n8n-nodes-base.youTube\",\"position\":[1000,160],\"parameters\":{\"options\":{},\"videoId\":\"={{ $('get video id').item.json.id.videoId }}\",\"resource\":\"video\",\"operation\":\"get\"},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"cpgVAMXp8iMLXwKW\",\"name\":\"Private Pres\"}},\"typeVersion\":1,\"alwaysOutputData\":true},{\"id\":\"66814975-e4a5-4c23-9bf2-c8d30d96c122\",\"name\":\"Get Transcript\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1320,120],\"parameters\":{\"url\":\"=https://api.apify.com/v2/acts/pintostudio~youtube-transcript-scraper/run-sync-get-dataset-items\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"videoUrl\\\": \\\"https://www.youtube.com/watch?v={{ $json.id }}\\\"\\n}\",\"sendBody\":true,\"sendQuery\":true,\"specifyBody\":\"json\",\"queryParameters\":{\"parameters\":[{\"name\":\"token\",\"value\":\"YOURAPITOKEN\"}]}},\"typeVersion\":4.2,\"alwaysOutputData\":false},{\"id\":\"fd355571-8c74-4d31-972e-13f737aaec05\",\"name\":\"Adjust Transcript Format\",\"type\":\"n8n-nodes-base.code\",\"position\":[1600,120],\"parameters\":{\"jsCode\":\"const items = $input.all();\\n\\nconst transcriptStrings = items.flatMap(item => {\\n  const dataArray = item.json.data;\\n\\n  if (!dataArray || !Array.isArray(dataArray)) {\\n    return [];\\n  }\\n\\n  const segmentTexts = dataArray.map(segment => {\\n      if (segment && typeof segment.text === 'string') {\\n          return segment.text;\\n      } else {\\n          return '';\\n      }\\n  });\\n\\n  return segmentTexts;\\n});\\n\\nconst transcript = transcriptStrings.join(' ');\\n\\nreturn [\\n  {\\n    json: {\\n      transcript: transcript,\\n    },\\n  },\\n];\"},\"typeVersion\":2},{\"id\":\"7b69339f-aa12-430e-ba21-b85a0db596b5\",\"name\":\"Update Video's Metadata\",\"type\":\"n8n-nodes-base.youTube\",\"position\":[2660,140],\"parameters\":{\"title\":\"={{ $('Fetch Latest Videos').first().json.snippet.title }}\",\"videoId\":\"={{ $('getLatestVideoID').first().json.id }}\",\"resource\":\"video\",\"operation\":\"update\",\"categoryId\":\"25\",\"regionCode\":\"DE\",\"updateFields\":{\"tags\":\"={{ $('YT Tags').first().json.message.content }}\",\"description\":\"={{ $('Create Description').first().json.message.content }}\\n\\nDiese textbasierte Zusammenfassung des Videos wurde automatisch mit dem KI-Modell gpt-4.1-nano erstellt.]\\n\"}},\"credentials\":{\"youTubeOAuth2Api\":{\"id\":\"cpgVAMXp8iMLXwKW\",\"name\":\"Private Pres\"}},\"typeVersion\":1}],\"active\":true,\"pinData\":{},\"settings\":{\"callerPolicy\":\"workflowsFromSameOwner\",\"errorWorkflow\":\"RhPW7iLQQJGJZqQQ\",\"executionOrder\":\"v1\"},\"versionId\":\"268a8dc5-0408-458c-9dff-d7c91b223b76\",\"connections\":{\"3s\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"4s\":{\"main\":[[{\"node\":\"Fetch Latest Videos\",\"type\":\"main\",\"index\":0}]]},\"YT Tags\":{\"main\":[[{\"node\":\"Update Video's Metadata\",\"type\":\"main\",\"index\":0}]]},\"YT Title\":{\"main\":[[]]},\"gettitle\":{\"main\":[[{\"node\":\"Set Publish Date\",\"type\":\"main\",\"index\":0}]]},\"Every Day\":{\"main\":[[{\"node\":\"Get Videos to reschedule\",\"type\":\"main\",\"index\":0}]]},\"new video?\":{\"main\":[[],[{\"node\":\"getLatestVideoID\",\"type\":\"main\",\"index\":0}]]},\"2.5FlashPrev\":{\"ai_languageModel\":[[{\"node\":\"YT Tags\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"get video id\":{\"main\":[[{\"node\":\"Remove Duplicates from previous Runs\",\"type\":\"main\",\"index\":0}]]},\"Get Transcript\":{\"main\":[[{\"node\":\"Adjust Transcript Format\",\"type\":\"main\",\"index\":0}]]},\"Get Video Data\":{\"main\":[[{\"node\":\"Loop over Video IDs\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items\":{\"main\":[[],[{\"node\":\"get video id\",\"type\":\"main\",\"index\":0}]]},\"Set Publish Date\":{\"main\":[[{\"node\":\"Loop over All Videos not Published\",\"type\":\"main\",\"index\":0}]]},\"getLatestVideoID\":{\"main\":[[{\"node\":\"Get Transcript\",\"type\":\"main\",\"index\":0}]]},\"Create Description\":{\"main\":[[{\"node\":\"YT Tags\",\"type\":\"main\",\"index\":0},{\"node\":\"YT Title\",\"type\":\"main\",\"index\":0}]]},\"Fetch Latest Videos\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Loop over Video IDs\":{\"main\":[[{\"node\":\"Return Private Videos\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get Video Data\",\"type\":\"main\",\"index\":0}]]},\"Return Private Videos\":{\"main\":[[{\"node\":\"Loop over All Videos not Published\",\"type\":\"main\",\"index\":0}]]},\"Get video Ids seperated\":{\"main\":[[{\"node\":\"Loop over Video IDs\",\"type\":\"main\",\"index\":0}]]},\"Update Video's Metadata\":{\"main\":[[{\"node\":\"3s\",\"type\":\"main\",\"index\":0}]]},\"Adjust Transcript Format\":{\"main\":[[{\"node\":\"Create Description\",\"type\":\"main\",\"index\":0}]]},\"Get Videos to reschedule\":{\"main\":[[{\"node\":\"Get video Ids seperated\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‚ÄòTest workflow‚Äô\":{\"main\":[[{\"node\":\"Get Videos to reschedule\",\"type\":\"main\",\"index\":0}]]},\"Loop over All Videos not Published\":{\"main\":[[{\"node\":\"4s\",\"type\":\"main\",\"index\":0}],[{\"node\":\"gettitle\",\"type\":\"main\",\"index\":0}]]},\"Remove Duplicates from previous Runs\":{\"main\":[[{\"node\":\"new video?\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## üë• Who Is This For?\n\nContent creators, marketing teams, and channel managers who need to streamline video publishing with optimized metadata and scheduled releases across multiple videos.\n\n## üõ† What Problem Does This Solve?\n\nManual YouTube video publishing is time-consuming and often results in inconsistent descriptions, tags, and scheduling. This workflow fully automates:\n\n  * Extracting video transcripts via Apify for metadata generation\n  * Creating SEO-optimized descriptions and tags for each video\n  * Setting videos to private during initial upload (critical for scheduling)\n  * Implementing scheduled publishing at strategic times\n  * Maintaining consistent branding and formatting across all content\n\n\n\n## üîÑ Node-by-Node Breakdown\n\nStep | Node Purpose  \n---|---  \n1 | Every Day (Scheduler)  \n2 | Get Videos to Harmonize  \n3 | Get Video IDs (Unpublished)  \n4 | Loop over Video IDs  \n5 | Get Video Data  \n6 | Loop over Videos with Parameter IS  \n7 | Set Videos to Private  \n8 | Apify: Get Transcript  \n9 | Fetch Latest Videos  \n10 | Loop Over Items  \n11 | Generate Description, Tags, etc.  \n12 | AP Clean ID  \n13 | Retrieve Generated Data  \n14 | Adjust Transcript Format  \n15 | Update Video's Metadata  \n  \n## ‚öôÔ∏è Pre-conditions / Requirements\n\n  * n8n with YouTube API credentials configured\n  * Apify account with API access for transcript extraction\n  * YouTube channel with upload permissions\n  * Master templates for description formatting\n  * Videos must be initially set to private for scheduling to work\n\n\n\n## ‚öôÔ∏è Setup Instructions\n\n  1. Import this workflow into your n8n instance.\n  2. Configure YouTube API credentials with proper channel access.\n  3. Set up Apify integration with appropriate actor for transcript extraction.\n  4. Define scheduling parameters in the Every Day node.\n  5. Configure description templates with placeholders for dynamic content.\n  6. Set default tags and customize tag generation rules.\n  7. Test with a single video before batch processing.\n\n\n\n## üé® How to Customize\n\n  * Adjust prompt templates for description generation to match your brand voice.\n  * Modify tag selection algorithms based on your channel's SEO strategy.\n  * Create multiple publishing schedules for different content categories.\n  * Integrate with analytics tools to optimize publishing times.\n  * Add notification nodes to alert when videos are successfully scheduled.\n\n\n\n## ‚ö†Ô∏è Important Notes\n\n  * Videos MUST be uploaded as private initially - the Publish At logic only works for private videos that haven't been published before.\n  * Publishing schedules require videos to remain private until their scheduled time.\n  * Transcript quality affects metadata generation results.\n  * Consider YouTube API quotas when scheduling large batches of videos.\n\n\n\n## üîê Security and Privacy\n\n  * API credentials are stored securely within n8n.\n  * Transcripts are processed temporarily and not stored permanently.\n  * Webhook URLs should be protected to prevent unauthorized triggering.\n  * Access to the workflow should be limited to authorized team members only.\n\n\n",
  "crawled_at": "2025-05-26T05:56:37.101435",
  "readme_zh": "## üë• ÈÄÇÁî®ÂØπË±°\n\nÂÜÖÂÆπÂàõ‰ΩúËÄÖ„ÄÅËê•ÈîÄÂõ¢ÈòüÂíåÈ¢ëÈÅìÁÆ°ÁêÜÂëòÔºåÈúÄË¶ÅÈÄöËøá‰ºòÂåñÂÖÉÊï∞ÊçÆÂíåË∑®ËßÜÈ¢ëÂÆöÊó∂ÂèëÂ∏ÉÊù•ÁÆÄÂåñËßÜÈ¢ëÂèëÂ∏ÉÊµÅÁ®ãÁöÑÁî®Êà∑„ÄÇ\n\n## üõ† Ëß£ÂÜ≥‰ªÄ‰πàÈóÆÈ¢òÔºü\n\nÊâãÂä®ÂèëÂ∏ÉYouTubeËßÜÈ¢ëËÄóÊó∂‰∏îÂÆπÊòìÂØºËá¥ÊèèËø∞„ÄÅÊ†áÁ≠æÂíåÊéíÊúü‰∏ç‰∏ÄËá¥„ÄÇÊ≠§Â∑•‰ΩúÊµÅÂèØÂÖ®Ëá™Âä®ÂÆåÊàê‰ª•‰∏ã‰ªªÂä°Ôºö\n\n  * ÈÄöËøáApifyÊèêÂèñËßÜÈ¢ëÂ≠óÂπïÁîüÊàêÂÖÉÊï∞ÊçÆ\n  * ‰∏∫ÊØè‰∏™ËßÜÈ¢ëÂàõÂª∫SEO‰ºòÂåñÁöÑÊèèËø∞ÂíåÊ†áÁ≠æ\n  * ÂàùÂßã‰∏ä‰º†Êó∂Â∞ÜËßÜÈ¢ëËÆæ‰∏∫ÁßÅÊúâÔºàÂÆöÊó∂ÂèëÂ∏ÉÁöÑÂÖ≥ÈîÆÔºâ\n  * Âú®Á≠ñÁï•ÊÄßÊó∂Èó¥ÁÇπÂÆûÁé∞ÂÆöÊó∂ÂèëÂ∏É\n  * ‰øùÊåÅÊâÄÊúâÂÜÖÂÆπÂìÅÁâåÈ£éÊ†º‰∏éÊ†ºÂºèÁöÑÁªü‰∏Ä\n\n## üîÑ ËäÇÁÇπËØ¶Ëß£\n\nÊ≠•È™§ | ËäÇÁÇπÂäüËÉΩ  \n---|---  \n1 | ÊØèÊó•Ëß¶ÂèëÂô®ÔºàË∞ÉÂ∫¶Âô®Ôºâ  \n2 | Ëé∑ÂèñÂæÖÂçèË∞ÉËßÜÈ¢ë  \n3 | Ëé∑ÂèñÊú™ÂèëÂ∏ÉËßÜÈ¢ëID  \n4 | ÈÅçÂéÜËßÜÈ¢ëID  \n5 | Ëé∑ÂèñËßÜÈ¢ëÊï∞ÊçÆ  \n6 | Â∏¶ÂèÇÊï∞ÈÅçÂéÜËßÜÈ¢ë  \n7 | Â∞ÜËßÜÈ¢ëËÆæ‰∏∫ÁßÅÊúâ  \n8 | ApifyËé∑ÂèñÂ≠óÂπï  \n9 | Ëé∑ÂèñÊúÄÊñ∞ËßÜÈ¢ë  \n10 | ÈÅçÂéÜÊù°ÁõÆ  \n11 | ÁîüÊàêÊèèËø∞„ÄÅÊ†áÁ≠æÁ≠â  \n12 | Ê∏ÖÁêÜIDÊï∞ÊçÆ  \n13 | Ê£ÄÁ¥¢ÁîüÊàêÊï∞ÊçÆ  \n14 | Ë∞ÉÊï¥Â≠óÂπïÊ†ºÂºè  \n15 | Êõ¥Êñ∞ËßÜÈ¢ëÂÖÉÊï∞ÊçÆ  \n\n## ‚öôÔ∏è ÂâçÊèêÊù°‰ª∂\n\n  * Â∑≤ÈÖçÁΩÆYouTube APIÂá≠ËØÅÁöÑn8nÂπ≥Âè∞\n  * ÊîØÊåÅÂ≠óÂπïÊèêÂèñÁöÑApifyË¥¶Êà∑ÂèäAPIÊùÉÈôê\n  * ÂÖ∑Â§á‰∏ä‰º†ÊùÉÈôêÁöÑYouTubeÈ¢ëÈÅì\n  * ÊèèËø∞Ê†ºÂºèÁöÑ‰∏ªÊ®°Êùø\n  * ËßÜÈ¢ëÂàùÂßãÂøÖÈ°ªËÆæ‰∏∫ÁßÅÊúâÊâçËÉΩÂêØÁî®ÂÆöÊó∂ÂèëÂ∏É\n\n## ‚öôÔ∏è ÈÖçÁΩÆÊåáÂçó\n\n  1. Â∞ÜÊ≠§Â∑•‰ΩúÊµÅÂØºÂÖ•n8nÂÆû‰æã\n  2. ÈÖçÁΩÆÂÖ∑ÊúâÈ¢ëÈÅìËÆøÈóÆÊùÉÈôêÁöÑYouTube APIÂá≠ËØÅ\n  3. ËÆæÁΩÆApifyÈõÜÊàêÂπ∂ÊåáÂÆöÂ≠óÂπïÊèêÂèñÊâßË°åÂô®\n  4. Âú®ÊØèÊó•Ëß¶ÂèëÂô®ËäÇÁÇπÂÆö‰πâË∞ÉÂ∫¶ÂèÇÊï∞\n  5. ÈÖçÁΩÆÂê´Âä®ÊÄÅÂÜÖÂÆπÂç†‰ΩçÁ¨¶ÁöÑÊèèËø∞Ê®°Êùø\n  6. ËÆæÁΩÆÈªòËÆ§Ê†áÁ≠æÂπ∂Ëá™ÂÆö‰πâÊ†áÁ≠æÁîüÊàêËßÑÂàô\n  7. ÊâπÈáèÂ§ÑÁêÜÂâçÂÖàËøõË°åÂçïËßÜÈ¢ëÊµãËØï\n\n## üé® ÂÆöÂà∂ÊñπÊ°à\n\n  * Ë∞ÉÊï¥ÊèèËø∞ÁîüÊàêÊ®°Êùø‰ª•Á¨¶ÂêàÂìÅÁâåË∞ÉÊÄß\n  * Ê†πÊçÆÈ¢ëÈÅìSEOÁ≠ñÁï•‰øÆÊîπÊ†áÁ≠æÈÄâÊã©ÁÆóÊ≥ï\n  * ‰∏∫‰∏çÂêåÂÜÖÂÆπÁ±ªÂà´ÂàõÂª∫Â§öÂ•óÂèëÂ∏ÉËÆ°Âàí\n  * ÈõÜÊàêÂàÜÊûêÂ∑•ÂÖ∑‰ºòÂåñÂèëÂ∏ÉÊó∂Èó¥\n  * Ê∑ªÂä†ÈÄöÁü•ËäÇÁÇπÊèêÈÜíÊàêÂäüÊéíÊúüËßÜÈ¢ë\n\n## ‚ö†Ô∏è ÈáçË¶ÅÊèêÁ§∫\n\n  * ËßÜÈ¢ëÂàùÂßãÂøÖÈ°ªËÆæ‰∏∫ÁßÅÊúâ‚Äî‚Äî\"ÂÆöÊó∂ÂèëÂ∏É\"ÈÄªËæë‰ªÖÈÄÇÁî®‰∫é‰ªéÊú™ÂèëÂ∏ÉËøáÁöÑÁßÅÊúâËßÜÈ¢ë\n  * ÊéíÊúüÂèëÂ∏ÉË¶ÅÊ±ÇËßÜÈ¢ëÂú®È¢ÑÂÆöÊó∂Èó¥Ââç‰øùÊåÅÁßÅÊúâÁä∂ÊÄÅ\n  * Â≠óÂπïË¥®ÈáèÂΩ±ÂìçÂÖÉÊï∞ÊçÆÁîüÊàêÊïàÊûú\n  * Â§ßÊâπÈáèËßÜÈ¢ëÊéíÊúüÊó∂Ê≥®ÊÑèYouTube APIÈÖçÈ¢ùÈôêÂà∂\n\n## üîê ÂÆâÂÖ®ÈöêÁßÅ\n\n  * APIÂá≠ËØÅÂÆâÂÖ®Â≠òÂÇ®‰∫én8nÁ≥ªÁªüÂÜÖ\n  * Â≠óÂπï‰ªÖ‰∏¥Êó∂Â§ÑÁêÜ‰∏çÊ∞∏‰πÖÂ≠òÂÇ®\n  * Â∫î‰øùÊä§WebhookÁΩëÂùÄÈò≤Ê≠¢Êú™ÊéàÊùÉËß¶Âèë\n  * Â∑•‰ΩúÊµÅËÆøÈóÆÊùÉÈôêÂ∫î‰ªÖÈôê‰∫éÊéàÊùÉÂõ¢ÈòüÊàêÂëò",
  "title_zh": "Ëá™Âä®ÂåñYouTubeËßÜÈ¢ëÊéíÁ®ã‰∏éAIÂÖÉÊï∞ÊçÆÁîüÊàê üé¨",
  "publish_date_zh": "‰∏äÊ¨°Êõ¥Êñ∞‰∫é8Â§©Ââç",
  "workflow_json_zh": "{\n  \"id\": \"wLbJ7rE6vQzizCp2\",\n  \"meta\": {\n    \"instanceId\": \"5ce52989094be90be3b3bdd9ed9cee1d7ce1fcecaa598afaec4a50646d32e291\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Youtube_Automation\",\n  \"tags\": [\n    {\n      \"id\": \"5eZb3e5PJspoJjVN\",\n      \"name\": \"Privat\",\n      \"createdAt\": \"2025-02-22T09:31:58.972Z\",\n      \"updatedAt\": \"2025-02-22T09:31:58.972Z\"\n    },\n    {\n      \"id\": \"fSDcaaN3w5sV5e3S\",\n      \"name\": \"Templates\",\n      \"createdAt\": \"2025-02-23T15:20:47.262Z\",\n      \"updatedAt\": \"2025-02-23T15:20:47.262Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"id\": \"2001b9ca-f76b-437e-90a9-16c0d17accef\",\n      \"name\": \"Fetch Latest Videos\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        -60,\n        40\n      ],\n      \"parameters\": {\n        \"limit\": 1,\n        \"filters\": {},\n        \"options\": {\n          \"order\": \"date\"\n        },\n        \"resource\": \"video\"\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"cpgVAMXp8iMLXwKW\",\n          \"name\": \"Private Pres\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e8857adf-63ec-4612-aa49-cd77130a6728\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        160,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1a8cf640-caf4-4163-a658-400714702314\",\n      \"name\": \"YT Title\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"disabled\": true,\n      \"position\": [\n        2220,\n        120\n      ],\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-nano\",\n          \"cachedResultName\": \"GPT-4.1-NANO\"\n        },\n        \"options\": {},\n        \"messages\": {\n          \"values\": [\n            {\n              \"role\": \"system\",\n              \"content\": \"Du bist ein professioneller Texter f√ºr SEO-optimierte YouTube-Titel.\"\n            },\n            {\n              \"content\": \"=Schreib mir einen passenden SEO Youtube Titel f√ºr das Transkript folgendes Videotranskriptes. Gib mir nur den Titel sonst nichts. Maximal 100 Character also halte dich kurz.\\n\\n{{ $('Adjust Transcript Format').item.json.transcript }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"ftBgqCi1fD1fFEZq\",\n          \"name\": \"Midgard#1\"\n        }\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"ec6e5d83-d8c8-417e-8df0-86634feef3e6\",\n      \"name\": \"Create Description\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        1920,\n        80\n      ],\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-nano\",\n          \"cachedResultName\": \"GPT-4.1-NANO\"\n        },\n        \"options\": {},\n        \"messages\": {\n          \"values\": [\n            {\n              \"role\": \"system\",\n              \"content\": \"Du bist ein professioneller Texteschreiber.\\nDu erh√§ltst das Transkript eines wirtschaftsbezogenen Videos und erstellst eine ausf√ºhrlichere aber auch nicht zu lange  Zusammenfassung (mit Abs√§tzen) dar√ºber, worum es geht.\\n\\nSchreibe eine ausf√ºhrlichere Zusammenfassung (mit Abs√§tzen) √ºber den Inhalt des Podcasts. \\n\\nDein Output wird f√ºr die Youtube Video Beschreibung verwendet. Also starte mit sowas wie: \\\"In diesem Video...\\\" oder \\\"In dieser Folge...\\\". \\nSchreibe aus meiner Perspektive also Sachen wie \\\"meine Meinung\\\" oder \\\"meiner Ansicht nach\\\"...  aus der Ich- Perspektive aber niemals sowas wie \\\"In dieser Folge lerne ich...\\\" oder so √§hnlich, denn ich erkl√§re stets den Inhalt bzw. diskutiere dar√ºber. DU SCHREIBST NIEMALS SOWAS WIE \\\"DER SPRECHER SAGT\\\"!!! Immer aus meiner Position heraus.\\n\\nWichtig: Verwende klare und dominante Aussagen, wie sie im Transkript formuliert sind. Vermeide neutrale oder unsichere Formulierungen wie \\\"es k√∂nnte\\\", \\\"ich vermute, dass\\\", \\\"m√∂glicherweise\\\" oder √§hnliche Phrasen. Die Aussagen sollen selbstbewusst und eindeutig sein, um die Inhalte des Podcasts kraftvoll zu vermitteln.\\nF√ºge einige wenige (2-4) Emojis an wo es sich anbietet. \\n   \\nEnde den Post mit 2-5 passenden Hashtags. Die Hashtags sollten grob sein also sowas wie #wirtschaft #geld #gold oder so √§hnlich - je nachdem was passt.\\n\"\n            },\n            {\n              \"content\": \"=Hier ist das Transkript: \\n\\n{{ $json.transcript }}\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"ftBgqCi1fD1fFEZq\",\n          \"name\": \"Midgard#1\"\n        }\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"f59d950b-4e29-4a41-8756-85ea7814b3d3\",\n      \"name\": \"When clicking ‚ÄòTest workflow‚Äô\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -2260,\n        300\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"27ef7d44-7cca-417f-8177-b5b896a79aa0\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2660,\n        -20\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 220,\n        \"content\": \"### üé•Ê†áÈ¢ò‰øùÁïô‰∏ä‰º†Êó∂ÁöÑÂéüÊ†∑ÔºåÊàñËÄÖ‰Ω†‰πüÂèØ‰ª•Âú®Ê∑∑Ââ™Êó∂Áõ¥Êé•Âä†ÂÖ•YTÊ†áÈ¢òÊ®°Âùó\\n# üëáüèª\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d763312-35f0-4d53-a210-1e0e22a06323\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1920,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"height\": 200,\n        \"content\": \"# Ë∞ÉÊï¥ÊèêÁ§∫ üëâüèª\\n\\n# üëáüèª\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9e7f22d5-7776-4bc4-a274-963cb8c8810c\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -540,\n        -560\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 620,\n        \"height\": 420,\n        \"content\": \"# YouTubeËßÜÈ¢ëÊèèËø∞/Ê†áÁ≠æÁ≠âËá™Âä®ÂåñÂ∑•ÂÖ∑  \\n\\nüëâüèª **‰ª£Á†Å‰ªìÂ∫ì**: [github.com/JimPresting](https://github.com/JimPresting) üõ†Ô∏è  \\nüëâüèª **YouTubeÈ¢ëÈÅì**: [youtube.com/@StardawnAI](https://www.youtube.com/@StardawnAI) üé•  \\n\\nÊåÅÁª≠ÂÖ≥Ê≥®Ëé∑ÂèñGithub‰ª£Á†ÅÂ∫ìÊåáÂçóÂíåYouTubeÊïôÁ®ãÊõ¥Êñ∞ÔºÅüöÄ  \\n\\n**Ê≥®ÊÑèÔºö** ÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºåËØ•Â∑•ÂÖ∑‰ªÖÂ§ÑÁêÜÊúÄÊñ∞ËßÜÈ¢ëÂπ∂Ë∞ÉÊï¥Êï∞ÂÄº„ÄÇËã•ÊÇ®Âú®‰∏ÄÂ§©ÂÜÖÁîöËá≥‰∏ÄÂ∞èÊó∂ÂÜÖÊâπÈáè‰∏ä‰º†Â§ö‰∏™ËßÜÈ¢ëÔºåÈúÄË∞ÉÈ´òËØ•Êï∞ÂÄºÔºå‰ΩÜËØ∑Ê≥®ÊÑèÔºöËÆæÁΩÆËøáÈ´ò‰ºöÂØºËá¥Â∑≤ÂèëÂ∏ÉÁöÑÊóßËßÜÈ¢ëË¢´ÈáçÂ§çÂ§ÑÁêÜ„ÄÇ‰∏çÂª∫ËÆÆ‰ΩøÁî®*Âª∂ËøüÂèëÂ∏É*ÂäüËÉΩÔºåÂèØËÉΩÂºïÂèëÂÆöÊó∂ËßÜÈ¢ëÁöÑÈÖçÁΩÆÈîôËØØ„ÄÇ  \\nÊÇ®ËøòÂèØ‰ª•Êñ≠ÂºÄ*ÂéªÈáçËäÇÁÇπ*‰∏éÂÖ∂‰ªñËäÇÁÇπÁöÑËøûÊé•ÔºåÂπ∂Â∞Ü*Ëé∑ÂèñÊâÄÊúâËßÜÈ¢ë*ËäÇÁÇπÁöÑÈôêÂà∂ËÆæ‰∏∫*ËøîÂõûÂÖ®ÈÉ®*„ÄÇËøôÊ†∑Â∑≤‰∏ä‰º†ÁöÑÂÜÖÂÆπÂ∞Ü‰∏çÂÜçË¢´ÈáçÂ§çÊäìÂèñ„ÄÇÂ¶ÇÈúÄÊí§ÈîÄÊ≠§Êìç‰ΩúÔºåÂèØÂú®*ÂéªÈáçËäÇÁÇπ*‰∏≠ÈÄâÊã©*Ê∏ÖÁ©∫Êï∞ÊçÆÂ∫ì*„ÄÇ  \\n\\nÔºàÊ≥®ÔºöËØëÊñáÂú®‰øùÊåÅÊäÄÊúØÂáÜÁ°ÆÊÄßÁöÑÂü∫Á°Ä‰∏äÔºåÈááÁî®‰∏≠ÊñáÊäÄÊúØÊñáÊ°£Â∏∏ËßÅÁöÑÂõõÂ≠óÊ†º\\\"Ë∞ÉÈ´òÊï∞ÂÄº/ÊâπÈáè‰∏ä‰º†/ÈáçÂ§çÊäìÂèñ\\\"Á≠âË°®ËææÔºåÂ∞ÜËã±ÊñáÈïøÂè•ÊãÜËß£‰∏∫Á¨¶Âêà‰∏≠ÊñáÈòÖËØª‰π†ÊÉØÁöÑÁü≠Âè•ÁªìÊûÑÔºåÂπ∂‰øùÁïôemojiÁ¨¶Âè∑‰ª•Áª¥ÊåÅÂéüÈ£éÊ†º„ÄÇÂÖ≥ÈîÆÊìç‰ΩúÂêçÁß∞Â¶Ç\\\"Clear Database\\\"ÈááÁî®ÂäüËÉΩÁõ¥ËØë+ÁïåÈù¢ÂåñË°®Ëø∞\\\"Ê∏ÖÁ©∫Êï∞ÊçÆÂ∫ì\\\"ÔºåÊó¢‰øùÁïôÊäÄÊúØÊúØËØ≠ÂèàÁ¨¶Âêà‰∏≠ÊñáËΩØ‰ª∂Êìç‰Ωú‰π†ÊÉØ„ÄÇÔºâ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4c5667cf-f8a9-45ab-876b-3a6b5730484c\",\n      \"name\": \"2.5FlashPrev\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        2220,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-2.5-flash-preview-04-17\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"clmB8ZYJMHaHmnsu\",\n          \"name\": \"Stardawn#1\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7c73cc89-ea8e-42b3-a1c9-2dc493026216\",\n      \"name\": \"YT Tags\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        2220,\n        -120\n      ],\n      \"parameters\": {\n        \"text\": \"=Nun folgt das eigentliche Thema/Transkript. Gib mir die Youtube Tags daf√ºr:\\n\\n{{ $('Adjust Transcript Format').item.json.transcript }}\",\n        \"options\": {\n          \"systemMessage\": \"You will get the transcript of a Youtube video for which you should generate matching tags (YOU NEED TO separate it by comma).\\n\\nBased on the topic/transcript of the video generate YouTube tags. These tags should be very general about the topics. Give multiple matching YouTube Tags that improve SEO for the video. \\n\\nExample:\\nif the video is about why gold is a good investment you will for example not use gold investments as a tag but rather just gold     \\n\\nThe tags (if appropriate) should be in German as the channel content is in German.\\n\\nReturn just the tags one word by one separated via Comma. \\n\\n\\nDieses Video handelt vom zuk√ºnftigen Goldpreis und davon, wie er die Renditen von performanten Verm√∂genswerten wie Aktien und Anleihen in ihrer angepassten Rendite beeinflusst.\\n\\nErwartetet output:\\nGoldpreis, zuk√ºnftiger Goldpreis, Goldinvestitionen, Verm√∂gensrenditen, Aktien und Anleihen, Investitionsrenditen, angepasste Rendite, Goldmarkt, Finanzm√§rkte, Goldpreisprognose, Wirtschaftstrends, Investieren in Gold, Aktienmarktanalyse, Anleihenmarkt, Anlagestrategien, Inflation und Gold, Gold vs. Aktien, Finanzanalyse, Edelmetalle, Portfoliomanagement, Marktausblick, Investmenttipps\\n \"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.9\n    },\n    {\n      \"id\": \"e8782ac7-ca31-4a5f-a9f1-62548f56407d\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -2340,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 2000,\n        \"height\": 660,\n        \"content\": \"# üìÖÊéíÁ®ãÈÄªËæë‚è∞\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"33d289eb-c989-4c8d-b387-405f31ba11d6\",\n      \"name\": \"3s\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        2920,\n        140\n      ],\n      \"webhookId\": \"1e75fe1f-e553-4530-a8bc-5e64208a1184\",\n      \"parameters\": {\n        \"amount\": 3\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"19337563-a349-485d-a064-32f58c8fde90\",\n      \"name\": \"gettitle\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        -780,\n        200\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"videoId\": \"={{ $json.videoId }}\",\n        \"resource\": \"video\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"cpgVAMXp8iMLXwKW\",\n          \"name\": \"Private Pres\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"da93ff18-8d19-45ab-b268-dbbebcb86719\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1040,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 180,\n        \"content\": \"## ‰ª£Á†Å‰ªÖËøîÂõûÊú™ÂàóÂá∫ÁöÑËßÜÈ¢ë\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"71e9606c-4b6e-4b49-b3ec-bd9bd261f7a9\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -600,\n        -80\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 220,\n        \"height\": 260,\n        \"content\": \"## ËßÜÈ¢ëÂøÖÈ°ª‰∏éPublishAtÂèÇÊï∞‰∏ÄËµ∑ËÆæÁΩÆ‰∏∫ÁßÅÊúâÊâçËÉΩÁîüÊïà„ÄÇ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c5a240aa-b705-4219-b293-da4ae0168350\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1320,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 280,\n        \"height\": 240,\n        \"content\": \"### ËßÜÈ¢ëÈúÄËÆæ‰∏∫Êú™ÂàóÂá∫ÊàñÂ∑≤ÂèëÂ∏ÉÁä∂ÊÄÅÔºåÁà¨Ëô´ÊâçËÉΩËé∑ÂèñÂ≠óÂπï\\n\\n### Âú®Ê≠§Â§ÑË∞ÉÊï¥ÊÇ®ÁöÑApify API‰ª§Áâå      \\n# üëáüèª\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5fb12ed7-8992-424d-86e0-7c8cd0f0b9d3\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -80,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 3200,\n        \"height\": 660,\n        \"content\": \"# ÁîüÊàêÊèèËø∞„ÄÅÊ†áÁ≠æÁ≠â üñåÔ∏èüìù #Ô∏è‚É£\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"33b865ef-ec2e-4349-bbba-d76d41345fe3\",\n      \"name\": \"Set Publish Date\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        -600,\n        280\n      ],\n      \"parameters\": {\n        \"title\": \"={{ $json.snippet.title }}\",\n        \"videoId\": \"={{ $json.id }}\",\n        \"resource\": \"video\",\n        \"operation\": \"update\",\n        \"categoryId\": \"25\",\n        \"regionCode\": \"DE\",\n        \"updateFields\": {\n          \"publishAt\": \"={{ $('Loop over All Videos not Published').item.json.publishAt }}\",\n          \"privacyStatus\": \"private\"\n        }\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"cpgVAMXp8iMLXwKW\",\n          \"name\": \"Private Pres\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"9a228886-c91a-44f7-b894-e23095166efc\",\n      \"name\": \"Every Day\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"disabled\": true,\n      \"position\": [\n        -2260,\n        60\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"triggerAtHour\": 14,\n              \"triggerAtMinute\": 22\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"c0277051-f146-43f7-a2cd-36739d933209\",\n      \"name\": \"Get Videos to reschedule\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        -1880,\n        40\n      ],\n      \"parameters\": {\n        \"limit\": 2,\n        \"filters\": {},\n        \"options\": {\n          \"order\": \"date\"\n        },\n        \"resource\": \"video\"\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"cpgVAMXp8iMLXwKW\",\n          \"name\": \"Private Pres\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5cf3813b-931b-4c0a-84fe-4edd3d55a99a\",\n      \"name\": \"Get video Ids seperated\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1660,\n        40\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Extract video IDs from YouTube search results\\n// This function processes all input items and creates separate items for each videoId\\n\\n// Initialize empty array for our result items\\nconst resultItems = [];\\n\\n// Process each input item\\nfor (const item of items) {\\n  // Check if the item has a valid structure\\n  if (item.json && item.json.id && item.json.id.videoId) {\\n    // Create a new item for each videoId\\n    resultItems.push({\\n      json: {\\n        videoId: item.json.id.videoId\\n      }\\n    });\\n  }\\n}\\n\\n// Return each videoId as a separate item that can be processed individually\\nreturn resultItems;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"8131b388-b842-4c46-b82b-e53283d938ed\",\n      \"name\": \"Loop over Video IDs\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1440,\n        40\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"665cb406-f6b9-4ba4-82fa-daa1141eb0a3\",\n      \"name\": \"Get Video Data\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        -1220,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"videoId\": \"={{ $json.videoId }}\",\n        \"resource\": \"video\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"cpgVAMXp8iMLXwKW\",\n          \"name\": \"Private Pres\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3d366fb3-f579-46f0-9254-8d4c1612038e\",\n      \"name\": \"Return Private Videos\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -1220,\n        -120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Utility function to get next Friday at 17:00 UTC in YouTube ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ)\\nfunction getNextFridayUTC(startDate, weekOffset = 0) {\\n  const date = new Date(startDate); // Work with a copy\\n  \\n  const currentUTCDay = date.getUTCDay(); // 0 for Sunday, ..., 5 for Friday\\n  const daysUntilFriday = (5 - currentUTCDay + 7) % 7; // Calculate days to next Friday\\n  \\n  date.setUTCDate(date.getUTCDate() + daysUntilFriday + (weekOffset * 7));\\n  date.setUTCHours(17, 0, 0, 0); // Set time to 17:00:00.000 UTC\\n  \\n  // toISOString() returns \\\"YYYY-MM-DDTHH:mm:ss.sssZ\\\"\\n  // We split at '.' to remove milliseconds and add 'Z' back for \\\"YYYY-MM-DDTHH:mm:ssZ\\\"\\n  return date.toISOString().split('.')[0] + \\\"Z\\\";\\n}\\n\\n// INPUT `items` is an array from n8n.\\n// Each item.json is expected to be a YouTube video object from a previous node.\\nconst videosToSchedule = items.filter(item => \\n  item.json && \\n  item.json.status && \\n  (item.json.status.privacyStatus === \\\"unlisted\\\" || item.json.status.privacyStatus === \\\"private\\\")\\n  // Adjust this filter if you only want to process \\\"unlisted\\\" or only \\\"private\\\" videos\\n);\\n\\nif (videosToSchedule.length === 0) {\\n  // console.log(\\\"No videos found matching the filter criteria.\\\");\\n  return []; // Return empty array if no videos to schedule\\n}\\n\\n// Sort videos by their original published/uploaded date (snippet.publishedAt), earliest first.\\nvideosToSchedule.sort((a, b) => {\\n  const dateA = new Date(a.json?.snippet?.publishedAt || '1970-01-01T00:00:00Z');\\n  const dateB = new Date(b.json?.snippet?.publishedAt || '1970-01-01T00:00:00Z');\\n  return dateA - dateB;\\n});\\n\\nconst now = new Date(); // Current date to calculate future Fridays\\n\\n// Map the filtered and sorted videos to the desired output structure for the YouTube update node.\\nconst scheduledItems = videosToSchedule.map((item, index) => {\\n  const videoData = item.json; // The actual video data object\\n  const scheduleDate = getNextFridayUTC(now, index); // Calculate the publishAt date\\n  \\n  return {\\n    json: { // This is the structure the next n8n YouTube node will receive\\n      videoId: videoData.id,                             // ID of the video to update\\n      publishAt: scheduleDate,                           // The calculated schedule time: YYYY-MM-DDTHH:mm:ssZ\\n      title: videoData.snippet?.title || \\\"Untitled Video\\\", // Keep original title or use a default\\n      \\n      // --- CRITICAL PARAMETERS FOR THE YOUTUBE API ---\\n      privacy: \\\"private\\\", // **MUST BE 'private' FOR 'publishAt' TO WORK!**\\n                          // The API requires the video to be set to private when scheduling.\\n      \\n      // **VERY LIKELY REQUIRED: selfDeclaredMadeForKids**\\n      // You MUST tell YouTube if the video is made for kids or not.\\n      // Get it from existing data if available, otherwise set a default.\\n      selfDeclaredMadeForKids: videoData.status?.selfDeclaredMadeForKids === true ? true : false,\\n\\n      // **POSSIBLY REQUIRED: categoryId (if updating snippet like title)**\\n      // categoryId: videoData.snippet?.categoryId || \\\"YOUR_DEFAULT_CATEGORY_ID\\\", \\n      // e.g., \\\"10\\\" for Music, \\\"22\\\" for People & Blogs.\\n      // Check YouTube API docs for category IDs.\\n      \\n      // (Optional) You can include other fields like description if you want to update them\\n      // description: videoData.snippet?.description || \\\"\\\" \\n    }\\n  };\\n});\\n\\nreturn scheduledItems; // Return the array of video objects to be processed\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"bb3e90ae-ff3f-4c22-b920-d1a99a1f99e8\",\n      \"name\": \"4s\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        -260,\n        240\n      ],\n      \"webhookId\": \"7d5c70f8-a592-4634-8c5a-0fbd0cebf6a4\",\n      \"parameters\": {\n        \"amount\": 4\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"f67c7668-71eb-42e6-b385-f66f9e5e80eb\",\n      \"name\": \"Loop over All Videos not Published\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        -1020,\n        60\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"f98b1399-7970-4585-8f2a-be897562fa40\",\n      \"name\": \"get video id\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        380,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c2e2eecd-ca73-40c9-a364-4713030ab451\",\n              \"name\": \"id.videoId\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.id.videoId }}\"\n            }\n          ]\n        },\n        \"includeOtherFields\": true\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"6b907512-945b-4c1e-8a97-b14409ddfcaa\",\n      \"name\": \"Remove Duplicates from previous Runs\",\n      \"type\": \"n8n-nodes-base.removeDuplicates\",\n      \"position\": [\n        600,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"removeItemsSeenInPreviousExecutions\",\n        \"dedupeValue\": \"={{ $json.id.videoId }}\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"d6c7152e-e508-43c3-8748-ba12652ac117\",\n      \"name\": \"new video?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        820,\n        80\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"adfea7c7-ed64-4e1e-a9c3-dc5e33aa1147\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{$('Remove Duplicates from previous Runs').all() }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"d1c31718-4a26-4108-a618-f67cfb87053c\",\n      \"name\": \"getLatestVideoID\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        1000,\n        160\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"videoId\": \"={{ $('get video id').item.json.id.videoId }}\",\n        \"resource\": \"video\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"cpgVAMXp8iMLXwKW\",\n          \"name\": \"Private Pres\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"66814975-e4a5-4c23-9bf2-c8d30d96c122\",\n      \"name\": \"Get Transcript\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1320,\n        120\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.apify.com/v2/acts/pintostudio~youtube-transcript-scraper/run-sync-get-dataset-items\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"videoUrl\\\": \\\"https://www.youtube.com/watch?v={{ $json.id }}\\\"\\n}\",\n        \"sendBody\": true,\n        \"sendQuery\": true,\n        \"specifyBody\": \"json\",\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"token\",\n              \"value\": \"YOURAPITOKEN\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"fd355571-8c74-4d31-972e-13f737aaec05\",\n      \"name\": \"Adjust Transcript Format\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1600,\n        120\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const items = $input.all();\\n\\nconst transcriptStrings = items.flatMap(item => {\\n  const dataArray = item.json.data;\\n\\n  if (!dataArray || !Array.isArray(dataArray)) {\\n    return [];\\n  }\\n\\n  const segmentTexts = dataArray.map(segment => {\\n      if (segment && typeof segment.text === 'string') {\\n          return segment.text;\\n      } else {\\n          return '';\\n      }\\n  });\\n\\n  return segmentTexts;\\n});\\n\\nconst transcript = transcriptStrings.join(' ');\\n\\nreturn [\\n  {\\n    json: {\\n      transcript: transcript,\\n    },\\n  },\\n];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7b69339f-aa12-430e-ba21-b85a0db596b5\",\n      \"name\": \"Update Video's Metadata\",\n      \"type\": \"n8n-nodes-base.youTube\",\n      \"position\": [\n        2660,\n        140\n      ],\n      \"parameters\": {\n        \"title\": \"={{ $('Fetch Latest Videos').first().json.snippet.title }}\",\n        \"videoId\": \"={{ $('getLatestVideoID').first().json.id }}\",\n        \"resource\": \"video\",\n        \"operation\": \"update\",\n        \"categoryId\": \"25\",\n        \"regionCode\": \"DE\",\n        \"updateFields\": {\n          \"tags\": \"={{ $('YT Tags').first().json.message.content }}\",\n          \"description\": \"={{ $('Create Description').first().json.message.content }}\\n\\nDiese textbasierte Zusammenfassung des Videos wurde automatisch mit dem KI-Modell gpt-4.1-nano erstellt.]\\n\"\n        }\n      },\n      \"credentials\": {\n        \"youTubeOAuth2Api\": {\n          \"id\": \"cpgVAMXp8iMLXwKW\",\n          \"name\": \"Private Pres\"\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"errorWorkflow\": \"RhPW7iLQQJGJZqQQ\",\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"268a8dc5-0408-458c-9dff-d7c91b223b76\",\n  \"connections\": {\n    \"3s\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"4s\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Fetch Latest Videos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"YT Tags\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Update Video's Metadata\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"YT Title\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"gettitle\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Publish Date\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Every Day\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Videos to reschedule\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"new video?\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"getLatestVideoID\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"2.5FlashPrev\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"YT Tags\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get video id\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Remove Duplicates from previous Runs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Transcript\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Adjust Transcript Format\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Video Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over Video IDs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"get video id\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Publish Date\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over All Videos not Published\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"getLatestVideoID\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Transcript\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create Description\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"YT Tags\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"YT Title\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Fetch Latest Videos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop over Video IDs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Return Private Videos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Video Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Return Private Videos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over All Videos not Published\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get video Ids seperated\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop over Video IDs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Update Video's Metadata\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"3s\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Adjust Transcript Format\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Description\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Videos to reschedule\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get video Ids seperated\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‚ÄòTest workflow‚Äô\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Videos to reschedule\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop over All Videos not Published\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"4s\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"gettitle\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Remove Duplicates from previous Runs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"new video?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}