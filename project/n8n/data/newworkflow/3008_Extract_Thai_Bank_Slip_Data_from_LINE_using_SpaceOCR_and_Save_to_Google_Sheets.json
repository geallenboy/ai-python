{
  "url": "https://n8n.io/workflows/3008-extract-thai-bank-slip-data-from-line-using-spaceocr-and-save-to-google-sheets/",
  "title": "Extract Thai Bank Slip Data from LINE using SpaceOCR and Save to Google Sheets",
  "author": "Jaruphat J.",
  "publish_date": "Last update 3 months ago",
  "publish_date_absolute": "2025-02-26",
  "categories": [
    {
      "name": "Finance"
    }
  ],
  "workflow_json": "{\"id\":\"QOePbDNCilLhfzbs\",\"meta\":{\"instanceId\":\"2c12b0b552404dc07af67cd5f092afd21d18c808d4fdabdb04cb4b064195b6fb\",\"templateCredsSetupCompleted\":true},\"name\":\"LINE BOT - Google Sheets Record Receipt\",\"tags\":[],\"nodes\":[{\"id\":\"c9a6882e-8971-4f8b-8dc4-730e217200f9\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1260,100],\"parameters\":{\"width\":400,\"height\":500,\"content\":\"## Prepare data\\n**- Get content image from Line** \\nhttps://api-data.line.me/v2/bot/message/xxx/content\\n\\n**- Get image URL to Binary**\"},\"typeVersion\":1},{\"id\":\"b766ad37-ec63-4006-80a7-048307afd23a\",\"name\":\"Image slip URL in Line\",\"type\":\"n8n-nodes-base.set\",\"position\":[-1200,300],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"f8b8ac7c-5c5f-452f-a84d-e068bb248eb5\",\"name\":\"file_url\",\"type\":\"string\",\"value\":\"=https://api-data.line.me/v2/bot/message/{{ $json.body.events[0].message.id }}/content\"}]}},\"typeVersion\":3.4},{\"id\":\"172ed09e-8caf-4bee-9f09-a9b8b00470f7\",\"name\":\"Get image to Binary\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-1000,300],\"parameters\":{\"url\":\"={{ $json.file_url }}\",\"options\":{},\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"byY3kI23lMe4ewnM\",\"name\":\"Header Auth account - Maid\"}},\"typeVersion\":4.2},{\"id\":\"79753b3d-d6a9-4047-af48-947e6221de48\",\"name\":\"Line Chat Bot\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-1440,300],\"webhookId\":\"23ba996d-3242-42a1-946c-f04a680b320a\",\"parameters\":{\"path\":\"23ba996d-3242-42a1-946c-f04a680b320a\",\"options\":{},\"httpMethod\":\"POST\"},\"typeVersion\":1},{\"id\":\"91837828-c24d-4999-a6db-9323394b8e77\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-840,100],\"parameters\":{\"color\":2,\"width\":220,\"height\":500,\"content\":\"## Upload image to Google Drive\\n\"},\"typeVersion\":1},{\"id\":\"94be83d7-5070-4f94-ae33-0a9695fc0b25\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-600,100],\"parameters\":{\"color\":3,\"width\":540,\"height\":500,\"content\":\"## OCR and get value\\n**- OCR API by SpaceOCR**\\nhttps://api.ocr.space/parse/imageurl?apikey=YOURAPI&language=tha&isOverlayRequired=false&OCREngine=2&filetype=JPG&url=xxx\\n\\n**- Parse Transaction Details**\"},\"typeVersion\":1},{\"id\":\"5e269f18-c666-4ba3-bb92-e60f5761cf0e\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-40,100],\"parameters\":{\"color\":5,\"width\":220,\"height\":500,\"content\":\"## Store Data in Google Sheets\"},\"typeVersion\":1},{\"id\":\"aa5312d8-304c-4d64-839b-a4464cb0d60e\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1500,100],\"parameters\":{\"color\":5,\"width\":220,\"height\":500,\"content\":\"## LINE Webhook Trigger \\n**(Receive Image)**\"},\"typeVersion\":1},{\"id\":\"802a7b11-38bf-4dd1-ae32-cd6b6071b9dd\",\"name\":\"Upload image to Google Drive\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[-780,300],\"parameters\":{\"name\":\"={{ $('Line Chat Bot').item.json.body.events[0].message.id }}.jpg\",\"driveId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"My Drive\"},\"options\":{},\"folderId\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"https://drive.google.com/drive/folders/1M-j_Gt6yKM1K8SISWknaGQyPQn52AaK1\"}},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"QVrgALkld7whKIgB\",\"name\":\"Google Drive account - Peakwave\"}},\"typeVersion\":3},{\"id\":\"b37b4b7a-1030-44d0-8f57-90acca085e5a\",\"name\":\"Record in Google Sheets\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[20,300],\"parameters\":{\"columns\":{\"value\":{\"Fee\":\"={{ $json.fee }}\",\"Amount\":\"={{ $json.amount }}\",\"Date & Time\":\"={{ $json.date_time }}\",\"Sender Name\":\"={{ $json.sender_name }}\",\"Receiver Bank\":\"={{ $json.receiver_bank }}\",\"Receiver Name\":\"={{ $json.receiver_name }}\",\"Sender Account\":\"={{ $json.sender_account }}\",\"Transaction ID\":\"={{ $json.transaction_id }}\",\"Receiver Account\":\"={{ $json.receiver_account }}\",\"Transaction Type\":\"={{ $json.transaction_type }}\"},\"schema\":[{\"id\":\"Transaction Type\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Transaction Type\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Date & Time\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Date & Time\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Bank\",\"type\":\"string\",\"display\":true,\"removed\":true,\"required\":false,\"displayName\":\"Bank\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Sender Name\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Sender Name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Sender Account\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Sender Account\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Receiver Name\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Receiver Name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Receiver Bank\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Receiver Bank\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Receiver Account\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Receiver Account\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Transaction ID\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Transaction ID\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Amount\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Amount\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Fee\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Fee\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit#gid=0\",\"cachedResultName\":\"data\"},\"documentId\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit?gid=0#gid=0\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"0RVWjnYzlWor2bMu\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.5},{\"id\":\"22fbba4f-ad1f-43a5-99de-db7084cd3fc5\",\"name\":\"Send Image URL to OCR Space for Text Extraction\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-520,300],\"parameters\":{\"url\":\"=https://api.ocr.space/parse/imageurl?apikey=K82173083188957&language=tha&isOverlayRequired=false&OCREngine=2&filetype=JPG&url={{ \\\"https://drive.google.com/uc?id=\\\" + $json[\\\"id\\\"] }}\\n\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"678993d0-8301-42d5-93cd-7839d42b71bc\",\"name\":\"Extract Transaction Details\",\"type\":\"n8n-nodes-base.code\",\"position\":[-260,300],\"parameters\":{\"jsCode\":\"const text = $json[\\\"ParsedResults\\\"][0][\\\"ParsedText\\\"];\\n\\n// Split text by line breaks and trim spaces\\nconst lines = text.split(\\\"\\\\n\\\").map(line => line.trim());\\n\\n// Debugging: Log extracted lines for verification\\nconsole.log(\\\"Extracted Lines:\\\", lines);\\n\\n// Helper function to find text after a keyword, with OCR variations\\nfunction getValueAfterKeyword(keywords, offset = 1) {\\n    let index = lines.findIndex(line => keywords.some(keyword => line.includes(keyword)));\\n    return index !== -1 && lines[index + offset] ? lines[index + offset] : null;\\n}\\n\\n// **Extracting Data for Both Standard & PromptPay Transactions**\\nconst transaction_type = lines[0] || null;  // First line\\nconst date_time = lines[1] || null;  // Second line\\n\\n// **Sender Details**\\nconst sender_name_index = lines.findIndex(line => line.startsWith(\\\"นาย\\\"));\\nconst sender_name = sender_name_index !== -1 ? lines[sender_name_index] : null;\\nconst sender_bank = sender_name_index !== -1 ? lines[sender_name_index + 1] : null;\\nconst sender_account = sender_name_index !== -1 ? lines[sender_name_index + 2] : null;\\n\\n// **Determine if it's a Standard Bank Transfer or PromptPay**\\nconst isPromptPay = lines.some(line => line.includes(\\\"Prompt\\\") || line.includes(\\\"รหัสพร้อมเพย์\\\"));\\nlet receiver_name = null;\\nlet receiver_bank = null;\\nlet receiver_account = null;\\n\\nif (isPromptPay) {\\n    // **Handling PromptPay Transactions**\\n    const receiver_index = lines.findIndex(line => line.includes(\\\"Prompt\\\"));\\n    receiver_bank = \\\"PromptPay\\\"; // Fixed for PromptPay transactions\\n    receiver_name = receiver_index !== -1 ? lines[receiver_index + 2] : null; // Receiver's actual name\\n\\n    // **Fix Receiver Account for PromptPay**\\n    const receiver_account_index = lines.findIndex(line => line.includes(\\\"รหัสพร้อมเพย์\\\"));\\n    receiver_account = receiver_account_index !== -1 ? lines[receiver_account_index + 1] : null; // The actual account number\\n\\n} else {\\n    // **Handling Standard Bank Transfers**\\n    const receiver_index = lines.findIndex(line => line.includes(\\\"นิติบุคคล\\\") || line.includes(\\\"บริษัท\\\") || line.includes(\\\"นาย\\\"));\\n    receiver_name = receiver_index !== -1 ? lines[receiver_index] : null;\\n    receiver_bank = receiver_index !== -1 ? lines[receiver_index + 2] : null;\\n    receiver_account = receiver_index !== -1 ? lines[receiver_index + 3] : null;\\n}\\n\\n// **Fix Transaction ID Extraction**\\nlet transaction_id = null;\\n\\n// **First, try \\\"เลขที่รายการ:\\\" for Standard Transactions**\\nconst transaction_index = lines.findIndex(line => line.includes(\\\"เลขที่รายการ:\\\"));\\nif (transaction_index !== -1) {\\n    if (/\\\\d{10,}/.test(lines[transaction_index])) {\\n        // If the same line contains the transaction ID, extract it\\n        transaction_id = lines[transaction_index].match(/\\\\d{10,}/)[0];\\n    } else if (transaction_index + 1 < lines.length && /\\\\d{10,}/.test(lines[transaction_index + 1])) {\\n        // If transaction ID is on the next line, extract it\\n        transaction_id = lines[transaction_index + 1];\\n    }\\n}\\n\\n// ✅ **If transaction_id is still missing, use \\\"จำนวน:\\\" or possible OCR errors (\\\"จำนวนะ\\\")**\\nif (!transaction_id) {\\n    let amount_index = lines.findIndex(line => line.includes(\\\"จำนวน\\\") || line.includes(\\\"จำนวนะ\\\"));\\n    if (amount_index !== -1) {\\n        for (let i = amount_index + 1; i < lines.length; i++) {\\n            if (/^[A-Za-z0-9]+$/.test(lines[i])) { // Ensure it's a valid ID\\n                transaction_id = lines[i];\\n                break; // **Break early for efficiency**\\n            }\\n        }\\n    }\\n}\\n\\n// **Extract Amount Correctly**\\nconst amount_index = lines.findIndex(line => line.includes(\\\"บาท\\\") && !line.includes(\\\"ค่าธรรมเนียม\\\"));\\nconst amount = amount_index !== -1 ? lines[amount_index].replace(\\\" บาท\\\", \\\"\\\").replace(/[^0-9.]/g, \\\"\\\") : null;\\n\\n// **Extract Fee Correctly**\\nconst fee_index = lines.findIndex(line => line.includes(\\\"ค่าธรรมเนียม\\\"));\\nconst fee = fee_index !== -1 && lines[fee_index + 1] ? lines[fee_index + 1].replace(\\\" บาท\\\", \\\"\\\").replace(/[^0-9.]/g, \\\"\\\") : null;\\n\\n// **Ensure Essential Details Exist**\\nif (transaction_type && date_time && sender_name && sender_bank && sender_account && receiver_name && receiver_bank && receiver_account && transaction_id && amount) {\\n    return [\\n        {\\n            json: {\\n                \\\"transaction_type\\\": transaction_type,\\n                \\\"date_time\\\": date_time,\\n                \\\"sender_name\\\": sender_name,\\n                \\\"sender_bank\\\": sender_bank,\\n                \\\"sender_account\\\": sender_account,\\n                \\\"receiver_name\\\": receiver_name,\\n                \\\"receiver_bank\\\": receiver_bank,\\n                \\\"receiver_account\\\": receiver_account,\\n                \\\"transaction_id\\\": transaction_id,\\n                \\\"amount\\\": amount,\\n                \\\"fee\\\": fee\\n            }\\n        }\\n    ];\\n} else {\\n    return [\\n        {\\n            json: {\\n                \\\"error\\\": \\\"Some values could not be extracted\\\",\\n                \\\"raw_text\\\": text\\n            }\\n        }\\n    ];\\n}\\n\"},\"typeVersion\":2}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"e1708774-49cf-4cbb-a4c4-9fefccd0fedb\",\"connections\":{\"Line Chat Bot\":{\"main\":[[{\"node\":\"Image slip URL in Line\",\"type\":\"main\",\"index\":0}]]},\"Get image to Binary\":{\"main\":[[{\"node\":\"Upload image to Google Drive\",\"type\":\"main\",\"index\":0}]]},\"Image slip URL in Line\":{\"main\":[[{\"node\":\"Get image to Binary\",\"type\":\"main\",\"index\":0}]]},\"Extract Transaction Details\":{\"main\":[[{\"node\":\"Record in Google Sheets\",\"type\":\"main\",\"index\":0}]]},\"Upload image to Google Drive\":{\"main\":[[{\"node\":\"Send Image URL to OCR Space for Text Extraction\",\"type\":\"main\",\"index\":0}]]},\"Send Image URL to OCR Space for Text Extraction\":{\"main\":[[{\"node\":\"Extract Transaction Details\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Who is this for?\n\nThis workflow is ideal for businesses, accountants, and finance teams who receive bank slip images via LINE and want to automate the extraction of transaction details. It eliminates manual data entry and speeds up financial tracking.\n\nWhat problem does this workflow solve?  \nMany businesses receive bank transfer slips via LINE from customers, but manually recording transaction details into spreadsheets is time-consuming and error-prone. This workflow automates the entire process, extracting structured data from the bank slips and storing it in Google Sheets for seamless record-keeping.\n\n## What this workflow does:\n\n  * Receives bank slip images from LINE BOT\n  * Extracts transaction details (sender, receiver, amount, transaction ID) using SpaceOCR\n  * Automatically logs extracted data into Google Sheets\n  * Works with Standard Bank Slips & PromptPay transactions\n  * Eliminates manual data entry and reduces errors\n\n\n\n## Setup Instructions:\n\n### 1\\. Prerequisites\n\n  * A **LINE BOT** with Messaging API enabled\n  * A **SpaceOCR API Key** (Get from <https://spaceocr.com/>)\n  * A **Google Sheets account** to store extracted data\n  * An **n8n instance** running (Cloud or Self-hosted)\n\n\n\n### 2\\. Setup Google Sheets\n\nCreate a Google Sheet with the following structure:\n\nA (Date) B (Time) C (Sender) D (Receiver) E (Bank Name) F (Amount) G (Transaction ID)\n\n  * Ensure your Google Sheets API is enabled and connected to n8n.\n\n\n\nFor an example of the required format, check this Google Sheets template: [Google Sheets Template](https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit?usp=sharing)\n\n### 3\\. Configure n8n Workflow\n\n#### 1\\. Webhook Node (Receives bank slip from LINE BOT)\n\n  * **Set method:** `POST`\n  * **Set Path:** `/line-webhook`\n\n\n\n#### 2\\. HTTP Request (Download Image from LINE Message)\n\n  * Retrieves image URL from the LINE message payload\n\n\n\n#### 3\\. SpaceOCR Node (Extract Text from Bank Slip)\n\n  * **Input:** `image URL` from LINE\n  * **API Key:** `Your SpaceOCR API Key`\n\n\n\n#### 4\\. Google Sheets Node (Save Transaction Data)\n\n  * Select your Google Sheet\n  * Map extracted data (sender, receiver, amount, etc.) to the respective columns\n\n\n\n### 4\\. Deploy & Test\n\nActivate the workflow in n8n  \nSet Webhook URL in LINE Developer Console  \nSend a test bank slip image to the LINE BOT  \nCheck Google Sheets for extracted transaction data\n",
  "crawled_at": "2025-05-26T03:28:37.373556",
  "readme_zh": "## 适用对象\n\n本工作流专为通过LINE接收银行转账凭证图片，并希望自动提取交易明细的企业、会计及财务团队设计。它能消除人工录入环节，加速财务追踪流程。\n\n## 解决痛点  \n企业常通过LINE接收客户转账凭证，但人工将交易明细记录到电子表格既耗时又易出错。该工作流可自动化完成整个流程：从凭证中提取结构化数据并存储至Google表格，实现无缝记录。\n\n## 核心功能：\n  * 通过LINE BOT接收转账凭证图片\n  * 使用SpaceOCR提取交易要素（汇款人/收款人/金额/交易ID）\n  * 自动将数据录入Google表格\n  * 支持标准银行转账凭证与PromptPay交易\n  * 杜绝人工录入错误\n\n## 配置指南：\n\n### 1. 准备工作\n  * 已启用Messaging API的**LINE BOT账号**\n  * **SpaceOCR API密钥**（从<https://spaceocr.com/>获取）\n  * 用于存储数据的**Google Sheets账户**\n  * 运行中的**n8n实例**（云端或本地部署）\n\n### 2. 设置Google表格\n创建包含以下结构的表格：\nA列(日期) B列(时间) C列(汇款人) D列(收款人) E列(银行名称) F列(金额) G列(交易ID)\n  * 确保已启用Google Sheets API并与n8n连接\n\n参考模板：[Google表格模板](https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit?usp=sharing)\n\n### 3. 配置n8n工作流\n#### 1. Webhook节点（接收LINE BOT凭证）\n  * **请求方式:** `POST`\n  * **路径设置:** `/line-webhook`\n\n#### 2. HTTP请求节点（下载LINE图片）\n  * 从LINE消息载荷获取图片URL\n\n#### 3. SpaceOCR节点（提取凭证文本）\n  * **输入:** LINE提供的`图片URL`\n  * **API密钥:** 您的SpaceOCR密钥\n\n#### 4. Google表格节点（存储数据）\n  * 选择目标表格\n  * 将提取数据映射至对应列\n\n### 4. 部署测试\n在n8n中激活工作流  \n于LINE开发者控制台设置Webhook URL  \n向LINE BOT发送测试凭证图片  \n在Google表格中验证提取结果",
  "title_zh": "使用SpaceOCR从LINE提取泰国银行单据数据并保存至Google表格",
  "publish_date_zh": "最后更新于3个月前",
  "workflow_json_zh": "{\n  \"id\": \"QOePbDNCilLhfzbs\",\n  \"meta\": {\n    \"instanceId\": \"2c12b0b552404dc07af67cd5f092afd21d18c808d4fdabdb04cb4b064195b6fb\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"LINE BOT - Google Sheets Record Receipt\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"c9a6882e-8971-4f8b-8dc4-730e217200f9\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1260,\n        100\n      ],\n      \"parameters\": {\n        \"width\": 400,\n        \"height\": 500,\n        \"content\": \"## 准备数据\\n**- 从Line获取内容图片**  \\nhttps://api-data.line.me/v2/bot/message/xxx/content  \\n\\n**- 将图片URL转换为二进制数据**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b766ad37-ec63-4006-80a7-048307afd23a\",\n      \"name\": \"Image slip URL in Line\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -1200,\n        300\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"f8b8ac7c-5c5f-452f-a84d-e068bb248eb5\",\n              \"name\": \"file_url\",\n              \"type\": \"string\",\n              \"value\": \"=https://api-data.line.me/v2/bot/message/{{ $json.body.events[0].message.id }}/content\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"172ed09e-8caf-4bee-9f09-a9b8b00470f7\",\n      \"name\": \"Get image to Binary\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -1000,\n        300\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.file_url }}\",\n        \"options\": {},\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"byY3kI23lMe4ewnM\",\n          \"name\": \"Header Auth account - Maid\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"79753b3d-d6a9-4047-af48-947e6221de48\",\n      \"name\": \"Line Chat Bot\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1440,\n        300\n      ],\n      \"webhookId\": \"23ba996d-3242-42a1-946c-f04a680b320a\",\n      \"parameters\": {\n        \"path\": \"23ba996d-3242-42a1-946c-f04a680b320a\",\n        \"options\": {},\n        \"httpMethod\": \"POST\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"91837828-c24d-4999-a6db-9323394b8e77\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -840,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 2,\n        \"width\": 220,\n        \"height\": 500,\n        \"content\": \"## 上传图片至Google云端硬盘\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"94be83d7-5070-4f94-ae33-0a9695fc0b25\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -600,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 540,\n        \"height\": 500,\n        \"content\": \"## OCR与获取数值\\n**- SpaceOCR提供的OCR API**\\nhttps://api.ocr.space/parse/imageurl?apikey=您的API密钥&language=泰语&isOverlayRequired=false&OCREngine=2&filetype=JPG&url=xxx\\n\\n**- 解析交易详情**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5e269f18-c666-4ba3-bb92-e60f5761cf0e\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -40,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 500,\n        \"content\": \"## 将数据存储到Google表格中\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aa5312d8-304c-4d64-839b-a4464cb0d60e\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1500,\n        100\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 220,\n        \"height\": 500,\n        \"content\": \"## LINE Webhook 触发器  \\n**(接收图片)**\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"802a7b11-38bf-4dd1-ae32-cd6b6071b9dd\",\n      \"name\": \"Upload image to Google Drive\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -780,\n        300\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $('Line Chat Bot').item.json.body.events[0].message.id }}.jpg\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\"\n        },\n        \"options\": {},\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"https://drive.google.com/drive/folders/1M-j_Gt6yKM1K8SISWknaGQyPQn52AaK1\"\n        }\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"QVrgALkld7whKIgB\",\n          \"name\": \"Google Drive account - Peakwave\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"b37b4b7a-1030-44d0-8f57-90acca085e5a\",\n      \"name\": \"Record in Google Sheets\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        20,\n        300\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"Fee\": \"={{ $json.fee }}\",\n            \"Amount\": \"={{ $json.amount }}\",\n            \"Date & Time\": \"={{ $json.date_time }}\",\n            \"Sender Name\": \"={{ $json.sender_name }}\",\n            \"Receiver Bank\": \"={{ $json.receiver_bank }}\",\n            \"Receiver Name\": \"={{ $json.receiver_name }}\",\n            \"Sender Account\": \"={{ $json.sender_account }}\",\n            \"Transaction ID\": \"={{ $json.transaction_id }}\",\n            \"Receiver Account\": \"={{ $json.receiver_account }}\",\n            \"Transaction Type\": \"={{ $json.transaction_type }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"Transaction Type\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Transaction Type\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Date & Time\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Date & Time\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Bank\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": true,\n              \"required\": false,\n              \"displayName\": \"Bank\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Sender Name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Sender Name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Sender Account\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Sender Account\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Receiver Name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Receiver Name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Receiver Bank\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Receiver Bank\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Receiver Account\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Receiver Account\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Transaction ID\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Transaction ID\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Amount\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Amount\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Fee\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Fee\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit#gid=0\",\n          \"cachedResultName\": \"data\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"https://docs.google.com/spreadsheets/d/1IpvzcnWmb-aLpSleTIF0xoF8xzbOOJQhuT6ITAeEQks/edit?gid=0#gid=0\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"0RVWjnYzlWor2bMu\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"22fbba4f-ad1f-43a5-99de-db7084cd3fc5\",\n      \"name\": \"Send Image URL to OCR Space for Text Extraction\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -520,\n        300\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.ocr.space/parse/imageurl?apikey=K82173083188957&language=tha&isOverlayRequired=false&OCREngine=2&filetype=JPG&url={{ \\\"https://drive.google.com/uc?id=\\\" + $json[\\\"id\\\"] }}\\n\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"678993d0-8301-42d5-93cd-7839d42b71bc\",\n      \"name\": \"Extract Transaction Details\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -260,\n        300\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const text = $json[\\\"ParsedResults\\\"][0][\\\"ParsedText\\\"];\\n\\n// Split text by line breaks and trim spaces\\nconst lines = text.split(\\\"\\\\n\\\").map(line => line.trim());\\n\\n// Debugging: Log extracted lines for verification\\nconsole.log(\\\"Extracted Lines:\\\", lines);\\n\\n// Helper function to find text after a keyword, with OCR variations\\nfunction getValueAfterKeyword(keywords, offset = 1) {\\n    let index = lines.findIndex(line => keywords.some(keyword => line.includes(keyword)));\\n    return index !== -1 && lines[index + offset] ? lines[index + offset] : null;\\n}\\n\\n// **Extracting Data for Both Standard & PromptPay Transactions**\\nconst transaction_type = lines[0] || null;  // First line\\nconst date_time = lines[1] || null;  // Second line\\n\\n// **Sender Details**\\nconst sender_name_index = lines.findIndex(line => line.startsWith(\\\"นาย\\\"));\\nconst sender_name = sender_name_index !== -1 ? lines[sender_name_index] : null;\\nconst sender_bank = sender_name_index !== -1 ? lines[sender_name_index + 1] : null;\\nconst sender_account = sender_name_index !== -1 ? lines[sender_name_index + 2] : null;\\n\\n// **Determine if it's a Standard Bank Transfer or PromptPay**\\nconst isPromptPay = lines.some(line => line.includes(\\\"Prompt\\\") || line.includes(\\\"รหัสพร้อมเพย์\\\"));\\nlet receiver_name = null;\\nlet receiver_bank = null;\\nlet receiver_account = null;\\n\\nif (isPromptPay) {\\n    // **Handling PromptPay Transactions**\\n    const receiver_index = lines.findIndex(line => line.includes(\\\"Prompt\\\"));\\n    receiver_bank = \\\"PromptPay\\\"; // Fixed for PromptPay transactions\\n    receiver_name = receiver_index !== -1 ? lines[receiver_index + 2] : null; // Receiver's actual name\\n\\n    // **Fix Receiver Account for PromptPay**\\n    const receiver_account_index = lines.findIndex(line => line.includes(\\\"รหัสพร้อมเพย์\\\"));\\n    receiver_account = receiver_account_index !== -1 ? lines[receiver_account_index + 1] : null; // The actual account number\\n\\n} else {\\n    // **Handling Standard Bank Transfers**\\n    const receiver_index = lines.findIndex(line => line.includes(\\\"นิติบุคคล\\\") || line.includes(\\\"บริษัท\\\") || line.includes(\\\"นาย\\\"));\\n    receiver_name = receiver_index !== -1 ? lines[receiver_index] : null;\\n    receiver_bank = receiver_index !== -1 ? lines[receiver_index + 2] : null;\\n    receiver_account = receiver_index !== -1 ? lines[receiver_index + 3] : null;\\n}\\n\\n// **Fix Transaction ID Extraction**\\nlet transaction_id = null;\\n\\n// **First, try \\\"เลขที่รายการ:\\\" for Standard Transactions**\\nconst transaction_index = lines.findIndex(line => line.includes(\\\"เลขที่รายการ:\\\"));\\nif (transaction_index !== -1) {\\n    if (/\\\\d{10,}/.test(lines[transaction_index])) {\\n        // If the same line contains the transaction ID, extract it\\n        transaction_id = lines[transaction_index].match(/\\\\d{10,}/)[0];\\n    } else if (transaction_index + 1 < lines.length && /\\\\d{10,}/.test(lines[transaction_index + 1])) {\\n        // If transaction ID is on the next line, extract it\\n        transaction_id = lines[transaction_index + 1];\\n    }\\n}\\n\\n// ✅ **If transaction_id is still missing, use \\\"จำนวน:\\\" or possible OCR errors (\\\"จำนวนะ\\\")**\\nif (!transaction_id) {\\n    let amount_index = lines.findIndex(line => line.includes(\\\"จำนวน\\\") || line.includes(\\\"จำนวนะ\\\"));\\n    if (amount_index !== -1) {\\n        for (let i = amount_index + 1; i < lines.length; i++) {\\n            if (/^[A-Za-z0-9]+$/.test(lines[i])) { // Ensure it's a valid ID\\n                transaction_id = lines[i];\\n                break; // **Break early for efficiency**\\n            }\\n        }\\n    }\\n}\\n\\n// **Extract Amount Correctly**\\nconst amount_index = lines.findIndex(line => line.includes(\\\"บาท\\\") && !line.includes(\\\"ค่าธรรมเนียม\\\"));\\nconst amount = amount_index !== -1 ? lines[amount_index].replace(\\\" บาท\\\", \\\"\\\").replace(/[^0-9.]/g, \\\"\\\") : null;\\n\\n// **Extract Fee Correctly**\\nconst fee_index = lines.findIndex(line => line.includes(\\\"ค่าธรรมเนียม\\\"));\\nconst fee = fee_index !== -1 && lines[fee_index + 1] ? lines[fee_index + 1].replace(\\\" บาท\\\", \\\"\\\").replace(/[^0-9.]/g, \\\"\\\") : null;\\n\\n// **Ensure Essential Details Exist**\\nif (transaction_type && date_time && sender_name && sender_bank && sender_account && receiver_name && receiver_bank && receiver_account && transaction_id && amount) {\\n    return [\\n        {\\n            json: {\\n                \\\"transaction_type\\\": transaction_type,\\n                \\\"date_time\\\": date_time,\\n                \\\"sender_name\\\": sender_name,\\n                \\\"sender_bank\\\": sender_bank,\\n                \\\"sender_account\\\": sender_account,\\n                \\\"receiver_name\\\": receiver_name,\\n                \\\"receiver_bank\\\": receiver_bank,\\n                \\\"receiver_account\\\": receiver_account,\\n                \\\"transaction_id\\\": transaction_id,\\n                \\\"amount\\\": amount,\\n                \\\"fee\\\": fee\\n            }\\n        }\\n    ];\\n} else {\\n    return [\\n        {\\n            json: {\\n                \\\"error\\\": \\\"Some values could not be extracted\\\",\\n                \\\"raw_text\\\": text\\n            }\\n        }\\n    ];\\n}\\n\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"e1708774-49cf-4cbb-a4c4-9fefccd0fedb\",\n  \"connections\": {\n    \"Line Chat Bot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Image slip URL in Line\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get image to Binary\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload image to Google Drive\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Image slip URL in Line\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get image to Binary\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Transaction Details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Record in Google Sheets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Upload image to Google Drive\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Image URL to OCR Space for Text Extraction\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Image URL to OCR Space for Text Extraction\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Transaction Details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}