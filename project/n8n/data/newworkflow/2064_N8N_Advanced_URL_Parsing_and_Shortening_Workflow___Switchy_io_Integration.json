{
  "url": "https://n8n.io/workflows/2064-n8n-advanced-url-parsing-and-shortening-workflow-switchyio-integration/",
  "title": "N8N Advanced URL Parsing and Shortening Workflow - Switchy.io Integration",
  "author": "Nskha",
  "publish_date": "Last update 6 months ago",
  "publish_date_absolute": "2024-11-25",
  "categories": [],
  "workflow_json": "{\"meta\":{},\"name\":\"[n8n] Advanced URL Parsing and Shortening Workflow - Switchy.io Integration\",\"tags\":[{\"id\":\"RHVi\",\"name\":\"Dub\",\"createdAt\":\"2024-04-09T17:46:08.436Z\",\"updatedAt\":\"2024-04-09T17:46:08.436Z\"},{\"id\":\"U3dpdGNoeQ\",\"name\":\"Switchy\",\"createdAt\":\"2024-04-09T17:46:08.436Z\",\"updatedAt\":\"2024-04-09T17:46:08.436Z\"},{\"id\":\"UHhs\",\"name\":\"Pxl\",\"createdAt\":\"2024-04-09T17:46:08.436Z\",\"updatedAt\":\"2024-04-09T17:46:08.436Z\"},{\"id\":\"Tm9ydG9u\",\"name\":\"Norton\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"Qml0ZGVmZW5kZXI\",\"name\":\"Bitdefender\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"U3BsaXRJbkJhdGNoZXM\",\"name\":\"SplitInBatches\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"SHR0cFJlcXVlc3Q\",\"name\":\"HttpRequest\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"SHRtbA\",\"name\":\"Html\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"Q29udmVydFRvRmlsZQ\",\"name\":\"ConvertToFile\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"QWdncmVnYXRl\",\"name\":\"Aggregate\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"R2l0aHVi\",\"name\":\"Github\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"R2l0aHViQXBp\",\"name\":\"GithubApi\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"U3RvcEFuZEVycm9y\",\"name\":\"StopAndError\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"Rm9ybVRyaWdnZXI\",\"name\":\"FormTrigger\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"UmVzcG9uZFRvV2ViaG9vaw\",\"name\":\"RespondToWebhook\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"},{\"id\":\"dGVtcGxhdGVz\",\"name\":\"templates\",\"createdAt\":\"2024-04-09T17:46:08.437Z\",\"updatedAt\":\"2024-04-09T17:46:08.437Z\"}],\"nodes\":[{\"name\":\"Split In Batches\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[3140,9383.397766717584],\"parameters\":{\"options\":{},\"batchSize\":1},\"typeVersion\":2},{\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[3080,9783.397766717584],\"parameters\":{\"width\":1249.1706015670397,\"height\":685.2594193361641,\"content\":\"## URL META TAGS DATA\\n**This part** is used to parse long link data like title, descraption, image all them served in header with tags called. [URL metadata](https://ogp.me/)\"},\"typeVersion\":1},{\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[5240,10223.397766717584],\"parameters\":{\"color\":4,\"width\":346.4519761795601,\"height\":241.68171599985524,\"content\":\"## Switchy API Limits:\\n- 10.000 links/day.\\n- 1.000 links/hour max.\\n- 16 links /minute max.\"},\"typeVersion\":1},{\"name\":\"Get Headers\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueErrorOutput\",\"position\":[3160,10123.397766717584],\"parameters\":{\"url\":\"={{ $('API Auth').item.json.LongURL }}\",\"options\":{\"redirect\":{\"redirect\":{}},\"response\":{\"response\":{\"neverError\":true,\"fullResponse\":true}},\"allowUnauthorizedCerts\":true}},\"typeVersion\":4.1},{\"name\":\"OpenGraph API\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueErrorOutput\",\"position\":[3160,9923.397766717584],\"parameters\":{\"url\":\"=https://www.opengraph.xyz/api/metadata/{{ $('API Auth').item.json.LongURL.urlEncode()}}\",\"options\":{\"redirect\":{\"redirect\":{}},\"response\":{\"response\":{\"neverError\":true,\"fullResponse\":true}},\"allowUnauthorizedCerts\":true},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0\"},{\"name\":\"Accept\",\"value\":\"*/*\"},{\"name\":\"Accept-Language\",\"value\":\"en-US,en;q=0.5\"},{\"name\":\"Accept-Encoding\",\"value\":\"gzip, deflate, br\"},{\"name\":\"Referer\",\"value\":\"=https://www.opengraph.xyz/url/{{ $('API Auth').item.json.LongURL.urlEncode()}}\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"empty\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"cors\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"same-origin\"},{\"name\":\"Sec-GPC\",\"value\":\"1\"},{\"name\":\"Pragma\",\"value\":\"no-cache\"},{\"name\":\"Cache-Control\",\"value\":\"no-cache\"},{\"name\":\"cookie\",\"value\":\"crisp-client%2Fsession%2Fbb1ac897-aa52-4f90-b0e1-e191cb403caf=session_a7a69e83-51f6-4a3b-a101-68fc6d33aca7;\"}]}},\"typeVersion\":4.1},{\"name\":\"Meta tags Scraper - dub.sh\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueErrorOutput\",\"position\":[3160,10303.397766717584],\"parameters\":{\"url\":\"https://app.dub.co/api/edge/metatags\",\"options\":{},\"sendQuery\":true,\"sendHeaders\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"url\",\"value\":\"={{ $item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"LongURL\\\"] }}\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"authority\",\"value\":\"app.dub.co\"},{\"name\":\"accept\",\"value\":\"*/*\"},{\"name\":\"accept-language\",\"value\":\"en-GB,en;q=0.9,en-US;q=0.8\"},{\"name\":\"cache-control\",\"value\":\"no-cache\"},{\"name\":\"dnt\",\"value\":\"1\"},{\"name\":\"pragma\",\"value\":\"no-cache\"},{\"name\":\"sec-ch-ua\",\"value\":\"\\\"Not_A Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"120\\\", \\\"Microsoft Edge\\\";v=\\\"120\\\"\"},{\"name\":\"sec-ch-ua-mobile\",\"value\":\"?0\"},{\"name\":\"sec-ch-ua-platform\",\"value\":\"\\\"Windows\\\"\"},{\"name\":\"sec-fetch-dest\",\"value\":\"empty\"},{\"name\":\"sec-fetch-mode\",\"value\":\"cors\"},{\"name\":\"sec-fetch-site\",\"value\":\"same-origin\"},{\"name\":\"user-agent\",\"value\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0\"}]}},\"notesInFlow\":true,\"typeVersion\":4.1},{\"name\":\"IF OpenGraph invaild\",\"type\":\"n8n-nodes-base.if\",\"position\":[3400,9903.397766717584],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"b9f7d88d-4626-4e2c-a04c-ae8f9d4aed93\",\"operator\":{\"type\":\"string\",\"operation\":\"notEquals\"},\"leftValue\":\"={{ $ifEmpty($json.data,'Unauthorized access') }}\",\"rightValue\":\"Unauthorized access\"},{\"id\":\"046b5c40-b6a4-434e-aa8e-d3b6c601f16d\",\"operator\":{\"type\":\"string\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.body.error }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"name\":\"Parse headers\",\"type\":\"n8n-nodes-base.html\",\"position\":[3360,10100],\"parameters\":{\"options\":{},\"operation\":\"extractHtmlContent\",\"extractionValues\":{\"values\":[{\"key\":\"ogTitle\",\"attribute\":\"content\",\"cssSelector\":\"meta[property^=\\\"og:title\\\"], meta[name=\\\"og:title\\\"], meta[property=\\\"twitter:title\\\"], meta[name=\\\"twitter:title\\\"]\",\"returnValue\":\"attribute\"},{\"key\":\"ogDescription\",\"attribute\":\"content\",\"cssSelector\":\"meta[name=\\\"description\\\"], meta[property=\\\"og:description\\\"], meta[property=\\\"twitter:description\\\"]\",\"returnValue\":\"attribute\"},{\"key\":\"ogImage\",\"attribute\":\"content\",\"cssSelector\":\"meta[property^=\\\"og:image\\\"], meta[name=\\\"og:image\\\"], meta[property=\\\"twitter:image\\\"], meta[name=\\\"twitter:image\\\"]\",\"returnValue\":\"attribute\"},{\"key\":\"favicon\",\"attribute\":\"href\",\"cssSelector\":\"link[rel=\\\"shortcut icon\\\"], link[rel=\\\"icon\\\"], link[rel=\\\"apple-touch-icon\\\"], link[rel=\\\"apple-touch-startup-image\\\"]\",\"returnValue\":\"attribute\"},{\"key\":\"Image\",\"attribute\":\"href\",\"cssSelector\":\"link[rel=\\\"preload\\\"][as=\\\"image\\\"],link[as=\\\"image\\\"]\",\"returnValue\":\"attribute\"},{\"key\":\"ogTitle\",\"cssSelector\":\"title\",\"returnValue\":\"html\"}]}},\"typeVersion\":1},{\"name\":\"If - Enable ScreenShots (yes to enable)\",\"type\":\"n8n-nodes-base.if\",\"position\":[4040,10080],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"cfcdcf45-822e-4e7a-bd7f-5fb321f96acd\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ ($if(\\n  $('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] = 'screenshot',\\n  \\\"screenshot\\\")) }}\",\"rightValue\":\"=screenshot\"}]}},\"typeVersion\":2},{\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[4340,9783.397766717584],\"parameters\":{\"color\":3,\"width\":885.4276629872791,\"height\":682.7545654243127,\"content\":\"# Screenshot stack\"},\"typeVersion\":1},{\"name\":\"API Auth\",\"type\":\"n8n-nodes-base.set\",\"position\":[3600,9160],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"OpenGraph Image Mode\",\"stringValue\":\"={{ $json['What\\\\'s OG Image method you like ?'].toLowerCase() }}\"},{\"name\":\"Dark Mode ?\",\"type\":\"booleanValue\",\"booleanValue\":\"={{ $json['With your brand, Do you Like dark mode ?'].replace('no','false').replace('yes','true') }}\"},{\"name\":\"Brand Name\",\"stringValue\":\"NodeMation\"},{\"name\":\"Switchy API Key\",\"stringValue\":\"={{ $json['What\\\\'s your Switchy API Key'] }}\"},{\"name\":\"LongURL\",\"stringValue\":\"={{ $json['What\\\\'s Your LongURL ?'].match(/\\\\b((?:https?|ftp):\\\\/\\\\/[^\\\\s/$.?#].[^\\\\s]*)/g)[0] }}\"},{\"name\":\"Scan LongURL\",\"stringValue\":\"={{ $json['scan Long URLs from virus/Phishing ? (Shorting a phishing URL will ban your domain from SEO)'] }}\"},{\"name\":\"Custom slug\",\"stringValue\":\"=<Optional: Slug is the path of shortened URL - default is random 5 chars> \"},{\"name\":\"tags\",\"stringValue\":\"=<Optional: Add tags if you need, each keyword seperated by \\\",\\\" for example: Marketing, Media, Shortened> \"},{\"name\":\"Switchy Folder ID\",\"stringValue\":\"<Optional: Enter Your Switchy Folder ID>\"},{\"name\":\"Custom Domain (CNAME)\",\"stringValue\":\"=<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>\"}]},\"include\":\"none\",\"options\":{}},\"typeVersion\":3.2},{\"name\":\"Method 1 - META\",\"type\":\"n8n-nodes-base.set\",\"position\":[3620,9923.397766717584],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"ogTitle\",\"stringValue\":\"={{\\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\\n      // The domain name (Host)\\n      // if the image url not found then use long URL host.\\n \\n($ifEmpty($json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogTitle\\\"], ($json[\\\"body\\\"][\\\"metadata\\\"][\\\"domain\\\"], $(\\\"API Auth\\\").item.json[\\\"LongURL\\\"])\\n        // This Regex to delete Any https:// or path from the url.\\n        .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n        .replace(/https?:\\\\/\\\\//, \\\"\\\")\\n      ))\\n }}\"},{\"name\":\"ogDescription\",\"stringValue\":\"=  {{\\n    // We used IFempty of descraption then use title, if the descraption giving no descraption output value then replace with title value, if no value for both then use empty value output.\\n    $ifEmpty(\\n      $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogDescription\\\"],\\n      $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogSiteName\\\"]\\n    ) || \\\"\\\"\\n  }}\"},{\"name\":\"ogImage\",\"stringValue\":\"={{\\n  // Constructing the base URL for the CDN\\n  \\\"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\\\" +\\n  // Adding the title, URL encoded\\n  ($ifEmpty($json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogTitle\\\"], $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogSiteName\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Adding the description, URL encoded\\n  ($ifEmpty($json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogDescription\\\"], $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogTitle\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Handling different OpenGraph Image Modes\\n  (\\n    $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'screenshot',\\n      \\\"<SCR>\\\",\\n      $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'brand',\\n        (\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\") +\\n          (\\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\\\"API Auth\\\").item.json[\\\"Brand Name\\\"].slice||\\n            $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogTitle\\\"].toUpperCase() ||\\n            $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogDescription\\\"].toUpperCase() ||\\n            \\\"Short Link\\\"\\n          ) + '.jpg'\\n        ).urlEncode(),\\n        $ifEmpty(\\n          $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogImage\\\"][\\\"url\\\"] || $json[\\\"body\\\"][\\\"metadata\\\"][\\\"image\\\"],\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n            ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n              .replace(\\\"false\\\", \\\"white/\\\")\\n              .replace(\\\"true\\\", \\\"dark/\\\") +\\n            \\\"Default.jpg\\\"\\n        ).urlEncode()\\n      )\\n    )\\n  ) +\\n  \\\"/og.png\\\"\\n}}\"},{\"name\":\"Favicon\",\"stringValue\":\"={{ $ifEmpty($json[\\\"body\\\"][\\\"metadata\\\"][\\\"favicon\\\"],\\n(\\n      // Get the Favicon url, if not available then generate api request to get it with:\\n      \\\"https://favicone.com/\\\" +\\n        // Get the image failed to export how from it if not found then use LongURL.\\n        $ifEmpty(\\n          $json[\\\"body\\\"][\\\"metadata\\\"][\\\"fullUrl\\\"],\\n          $('API Auth').item.json[\\\"LongURL\\\"]\\n        )\\n          // This Regex to delete Any https:// or path from the url.\\n          .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n          .replace(/https?:\\\\/\\\\//, \\\"\\\") +\\n        // This Parameter to resize the favicon into 32pixels.\\n        \\\"?s=32\\\"\\n)) }}\"}]},\"include\":\"none\",\"options\":{}},\"typeVersion\":3.2},{\"name\":\"Convert to File\",\"type\":\"n8n-nodes-base.convertToFile\",\"position\":[4440,10263.397766717584],\"parameters\":{\"options\":{\"dataIsBase64\":true},\"operation\":\"toBinary\",\"sourceProperty\":\"data\"},\"typeVersion\":1},{\"name\":\"Final Data\",\"type\":\"n8n-nodes-base.set\",\"position\":[4980,9883.397766717584],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"Title\",\"stringValue\":\"={{ $item(\\\"0\\\").$node[\\\"Final Meta\\\"].json[\\\"data\\\"][\\\"0\\\"][\\\"ogTitle\\\"] }}\"},{\"name\":\"Description\",\"stringValue\":\"={{ $item(\\\"0\\\").$node[\\\"Final Meta\\\"].json[\\\"data\\\"][\\\"0\\\"][\\\"ogDescription\\\"].replace(/\\\\s{2,}/g, ' ').replace(/^\\\\s+|\\\\s{3,}/g, '') }}\"},{\"name\":\"ogImage\",\"stringValue\":\"={{ ($('Host OGImage').item.json[\\\"content\\\"][\\\"download_url\\\"]||'').replace('https://raw.githubusercontent.com/','https://cdn.statically.io/gh/')}}\"},{\"name\":\"Favicon\",\"stringValue\":\"={{ ($item(\\\"0\\\").$node[\\\"Host Favicon\\\"].json[\\\"content\\\"][\\\"download_url\\\"]||'').replace('https://raw.githubusercontent.com/','https://cdn.statically.io/gh/')}}\"},{\"name\":\"=url\",\"stringValue\":\"={{ $('API Auth').item.json.LongURL }}\"},{\"name\":\"slug\",\"stringValue\":\"={{ $('API Auth').item.json[\\\"Custom slug\\\"] }}\"},{\"name\":\"tags\",\"stringValue\":\"={{ $('API Auth').item.json.tags }}\"},{\"name\":\"folderId\",\"stringValue\":\"={{ $('API Auth').item.json[\\\"Switchy Folder ID\\\"] }}\"},{\"name\":\"api\",\"stringValue\":\"={{ $('API Auth').item.json[\\\"Switchy API Key\\\"] }}\"},{\"name\":\"name\",\"stringValue\":\"={{ $('API Auth').item.json[\\\"Brand Name\\\"] }}\"},{\"name\":\"domain\",\"stringValue\":\"={{ $('API Auth').item.json['Custom Domain (CNAME)'] }}\"}]},\"include\":\"none\",\"options\":{\"dotNotation\":true,\"ignoreConversionErrors\":true}},\"typeVersion\":3.2},{\"name\":\"CREATE\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"Create Link\",\"position\":[5280,9883.397766717584],\"parameters\":{\"url\":\"https://api.switchy.io/v1/links/create\",\"method\":\"POST\",\"options\":{\"batching\":{\"batch\":{\"batchSize\":15,\"batchInterval\":60000}},\"redirect\":{\"redirect\":{}},\"response\":{\"response\":{\"neverError\":true,\"fullResponse\":true}},\"allowUnauthorizedCerts\":true},\"jsonBody\":\"={  \\\"link\\\": {\\n    \\\"url\\\": \\\"{{ $json[\\\"url\\\"] }}\\\",\\n\\n    {{($ifEmpty(('\\\"tags\\\": \\\"' + $json[\\\"tags\\\"]+'\\\",'),'')\\n// Replace Undefiend with default one, and default template texts with none.\\n.replace('\\\"tags\\\": \\\"undefined\\\",','')\\n.replace('\\\"tags\\\": \\\"<Optional: Add tags if you need, each keyword seperated by \\\",\\\" for example: Marketing, Media, Shortened> \\\",','')\\n) }}\\n\\n    {{($ifEmpty(('\\\"domain\\\": \\\"' + $json[\\\"domain\\\"]+'\\\",'),'')\\n// Replace Undefiend with default one, and default template texts with none.\\n.replace('\\\"undefined\\\",','\\\"swiy.co\\\",')\\n.replace('\\\"<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>\\\",','\\\"swiy.co\\\",')) }}\\n\\n    \\\"title\\\": \\\"{{$json[\\\"Title\\\"].slice(0,60)}}\\\",\\n\\n    {{($ifEmpty(('\\\"description\\\": \\\"' + $json[\\\"Description\\\"].slice(0,62)+'...\\\",'),'')\\n.replace('\\\"description\\\": \\\"undefined\\\",','')) }}\\n\\n    {{($ifEmpty(('\\\"image\\\": \\\"' + $json[\\\"ogImage\\\"]+'\\\",'),'')\\n.replace('\\\"image\\\": \\\"undefined\\\",','')) }}\\n\\n    \\\"id\\\": \\\"{{$ifEmpty($json[\\\"slug\\\"].replace('<Optional: Slug is the path of shortened URL - default is random 5 chars> ',''),Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}\\\",\\n\\n    {{($ifEmpty(('\\\"folderId\\\": \\\"' + $json[\\\"folderId\\\"]+'\\\",'),'')\\n.replace('\\\"folderId\\\": undefined,','')\\n.replace('\\\"folderId\\\": \\\"<Optional: Enter Your Switchy Folder ID>\\\",','')) }}\\n\\n    \\\"favicon\\\": \\\"{{$json[\\\"Favicon\\\"]}}\\\",\\n\\n    \\\"note\\\": \\\"{{ 'Created through N8N.io Workflow name: ' + $workflow.name }}\\\"  }}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"Api-Authorization\",\"value\":\"={{ $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"api\\\"] }}\"}]}},\"notesInFlow\":true,\"typeVersion\":4.1,\"alwaysOutputData\":true},{\"name\":\"UPDATE\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[5280,10043.397766717584],\"parameters\":{\"url\":\"=https://api.switchy.io/v1/links/by-domain/{{ $json.body.domain }}/{{ $json.body.id }}\",\"method\":\"PUT\",\"options\":{\"batching\":{\"batch\":{\"batchSize\":15,\"batchInterval\":60000}},\"redirect\":{\"redirect\":{}},\"response\":{\"response\":{\"neverError\":true,\"fullResponse\":true}},\"allowUnauthorizedCerts\":true},\"jsonBody\":\"={  \\\"link\\\": {\\n    \\\"url\\\": \\\"{{ $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"url\\\"] }}\\\",\\n\\n    {{($ifEmpty(('\\\"tags\\\": \\\"' + $json[\\\"tags\\\"]+'\\\",'),'')\\n// Replace Undefiend with default one, and default template texts with none.\\n.replace('\\\"tags\\\": \\\"undefined\\\",','')\\n.replace('\\\"tags\\\": \\\"<Optional: Add tags if you need, each keyword seperated by \\\",\\\" for example: Marketing, Media, Shortened> \\\",','')\\n) }}\\n\\n    {{($ifEmpty(('\\\"domain\\\": \\\"' + $json[\\\"domain\\\"]+'\\\",'),'')\\n// Replace Undefiend with default one, and default template texts with none.\\n.replace('\\\"undefined\\\",','\\\"swiy.co\\\",')\\n.replace('\\\"<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>\\\",','\\\"swiy.co\\\",')) }}\\n\\n    \\\"title\\\": \\\"{{ $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"Title\\\"].slice(0,60) }}\\\",\\n\\n    {{($ifEmpty(('\\\"description\\\": \\\"' + $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"Description\\\"].slice(0,62)+'...\\\",'),'')\\n.replace('\\\"description\\\": \\\"undefined\\\",','')) }}\\n\\n    {{($ifEmpty(('\\\"image\\\": \\\"' + $json[\\\"ogImage\\\"]+'\\\",'),'')\\n.replace('\\\"image\\\": \\\"undefined\\\",','')) }}\\n\\n    {{($ifEmpty(('\\\"folderId\\\": \\\"' + $json[\\\"folderId\\\"]+'\\\",'),'')\\n.replace('\\\"folderId\\\": undefined,','')\\n.replace('\\\"folderId\\\": \\\"<Optional: Enter Your Switchy Folder ID>\\\",','')) }}\\n\\n    \\\"favicon\\\": \\\"{{$item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"Favicon\\\"]}}\\\",\\n\\n    \\\"note\\\": \\\"{{ 'Created through N8N.io Workflow name: ' + $workflow.name }}\\\"  }}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"Api-Authorization\",\"value\":\"={{ $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"api\\\"] }}\"}]}},\"typeVersion\":4.1,\"alwaysOutputData\":true},{\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"disabled\":true,\"position\":[5240,9783.397766717584],\"parameters\":{\"color\":4,\"width\":344.6623616873581,\"height\":418.2992490141105,\"content\":\"## Switchy API\\n**Create or Update** Link. [Based on their API docs](https://google.com)\"},\"typeVersion\":1},{\"name\":\"IF Slug available\",\"type\":\"n8n-nodes-base.if\",\"position\":[5420,9883.397766717584],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $json.statusCode }}\",\"value2\":\"201\",\"operation\":\"regex\"}]}},\"typeVersion\":1},{\"name\":\"Final Meta\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[3880,10080],\"parameters\":{\"options\":{\"includeBinaries\":true},\"aggregate\":\"aggregateAllItemData\"},\"typeVersion\":1},{\"name\":\"Host Screenshot\",\"type\":\"n8n-nodes-base.github\",\"position\":[4820,9883.397766717584],\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"ARHAEEM\",\"cachedResultUrl\":\"https://github.com/ARHAEEM\",\"cachedResultName\":\"ARHAEEM\"},\"filePath\":\"=screenshots/{{$(\\\"API Auth\\\").item.json[\\\"LongURL\\\"].match(/https?:\\\\/\\\\/[^\\\\/]+/)[0].replace(/https?:\\\\/\\\\//, \\\"\\\")}}/scr/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png\",\"resource\":\"file\",\"binaryData\":true,\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"n8n-templates-demos\",\"cachedResultUrl\":\"https://github.com/ARHAEEM/n8n-templates-demos\",\"cachedResultName\":\"n8n-templates-demos\"},\"commitMessage\":\"={{ $('API Auth').item.json.LongURL }}\",\"binaryPropertyName\":\"=data\"},\"typeVersion\":1},{\"name\":\"Host OGImage\",\"type\":\"n8n-nodes-base.github\",\"position\":[4660,10223.397766717584],\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"ARHAEEM\",\"cachedResultUrl\":\"https://github.com/ARHAEEM\",\"cachedResultName\":\"ARHAEEM\"},\"filePath\":\"=screenshots/{{$(\\\"API Auth\\\").item.json[\\\"LongURL\\\"].match(/https?:\\\\/\\\\/[^\\\\/]+/)[0].replace(/https?:\\\\/\\\\//, \\\"\\\")}}/og/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png\",\"resource\":\"file\",\"binaryData\":true,\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"n8n-templates-demos\",\"cachedResultUrl\":\"https://github.com/ARHAEEM/n8n-templates-demos\",\"cachedResultName\":\"n8n-templates-demos\"},\"commitMessage\":\"={{ $('API Auth').item.json.LongURL }}\",\"binaryPropertyName\":\"=data\"},\"typeVersion\":1},{\"name\":\"Host Favicon\",\"type\":\"n8n-nodes-base.github\",\"position\":[4980,10223.397766717584],\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"ARHAEEM\",\"cachedResultUrl\":\"https://github.com/ARHAEEM\",\"cachedResultName\":\"ARHAEEM\"},\"filePath\":\"=screenshots/{{$(\\\"API Auth\\\").item.json[\\\"LongURL\\\"].match(/https?:\\\\/\\\\/[^\\\\/]+/)[0].replace(/https?:\\\\/\\\\//, \\\"\\\")}}/icon/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png\",\"resource\":\"file\",\"binaryData\":true,\"repository\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"n8n-templates-demos\",\"cachedResultUrl\":\"https://github.com/ARHAEEM/n8n-templates-demos\",\"cachedResultName\":\"n8n-templates-demos\"},\"commitMessage\":\"={{ $('API Auth').item.json.LongURL }}\",\"binaryPropertyName\":\"=data\"},\"typeVersion\":1},{\"name\":\"Edit Fields\",\"type\":\"n8n-nodes-base.set\",\"position\":[4820,10063.397766717584],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"download_url\",\"stringValue\":\"={{ $json.content.download_url }}\"}]},\"options\":{}},\"typeVersion\":3.2},{\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2380,9060],\"parameters\":{\"width\":682.2425599837106,\"height\":1405.2214458171302,\"content\":\"# README\\n## N8N META Config\\n### 1- **Opengraph Image mode**: `screenshot` or `source` or `brand`\\n### - **screenshot**: _take a screenshot for web page based on longurl._\\n[![Screenshort Mode Demo](https://live.staticflickr.com/65535/53485029368_917acda850_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/mefwo.png)\\n### - **source**: _scrape the source longurl og image and use it_\\n[![Source Mode Demo](https://live.staticflickr.com/65535/53485194899_d6141292eb_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/cowyl.png)\\n### -  **brand**: _Generate blank background, color based on `Dark Mode` option_\\n[![Brand Mode Demo Dark](https://live.staticflickr.com/65535/53484898721_94e15670b0_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/gvhok.png) [![Brand Mode Demo White](https://live.staticflickr.com/65535/53485202839_680a5e825b_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/yguse.png)\\n### 2- **Dark Mode**: `true` or `false` (_Working with `brand` OGI mode only._)\\n- **true**: generate **black** patteren as background og image for the texts.\\n- **false**: generate **white** patteren as background og image for the texts.\\n### 3- **Brand Name**: Used for `brand` ogi background. The limit of brand name is 18 characters total.\\n\\n\\n## Switchy API Workflow Configuration\\n### This is part of Switchy API config i covered in this workflow.\\n| Input Field           | Description                                      |\\n|-----------------------|--------------------------------------------------|\\n| **`Switchy API Key`**       | _API Key for Switchy integration._                 |\\n| **`LongURL`**               | _The long URL to be shortened._                    |\\n| **`Custom slug`**           | _Custom slug for the shortened URL._               |\\n| **`tags`**                  | _Tags associated with the link._                   |\\n| **`Switchy Folder ID`**     | _ID of the Switchy folder to use._                 |\\n| **`Custom Domain (CNAME)`** | _Custom domain linked to Switchy._                 |\\n\\n\\n### This is public APIs I've Used in Workflow\\n#### Meta Data Stack\\n- **Manual Get Headers**: Custom HTTP request to fetch headers.\\n- **Dub.sh**: Scraping meta tags from web pages.\\n- **OpenGraph API**: Using OpenGraph to retrieve meta information.\\n#### Screenshot Stack\\n- **Method 1 - SCR**: First method for taking screenshots (API name microlink).\\n- **Method 2 - SCR**: Second method for taking screenshots (API name pxl.to).\"},\"typeVersion\":1},{\"name\":\"Download final OG\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"Download Final OGI\",\"position\":[4980,10063.397766717584],\"parameters\":{\"url\":\"={{\\n  // The expression checks if $json.data[0].data[0].ogImage exists.\\n  // It then attempts to replace '<SCR>' with the encoded download URL.\\n  // If $json.data[0].content.download_url does not exist or is empty,\\n  // '<SCR>' is replaced with an empty string.\\n  ($item(\\\"0\\\").$node[\\\"Final Meta\\\"].json[\\\"data\\\"][\\\"0\\\"][\\\"ogImage\\\"]).replace('<SCR>', \\n    $ifEmpty(\\n       $json[\\\"download_url\\\"], \\n      (\\n        // If the image URL or its components don't exist, construct a default image URL based on other JSON values\\n        // Get the \\\"Dark Mode\\\" setting from the API Auth node\\n        \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\")+\\n          \\\".jpg\\\"\\n      )\\n    ).urlEncode()\\n  )\\n  }}\",\"options\":{\"redirect\":{\"redirect\":{}},\"allowUnauthorizedCerts\":true}},\"notesInFlow\":true,\"typeVersion\":4.1},{\"name\":\"Download Favicon\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[4820,10223.397766717584],\"parameters\":{\"url\":\"={{ $item(\\\"0\\\").$node[\\\"Final Meta\\\"].json[\\\"data\\\"][\\\"0\\\"][\\\"Favicon\\\"] }}\",\"options\":{\"redirect\":{\"redirect\":{}},\"allowUnauthorizedCerts\":true}},\"typeVersion\":4.1},{\"name\":\"Method 2 - META\",\"type\":\"n8n-nodes-base.set\",\"position\":[3500,10100],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"ogTitle\",\"stringValue\":\"={{\\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\\n      // The domain name (Host)\\n      // if the image url not found then use long URL host.\\n \\n($ifEmpty($json[\\\"ogTitle\\\"], ($(\\\"API Auth\\\").item.json[\\\"LongURL\\\"])\\n        // This Regex to delete Any https:// or path from the url.\\n        .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n        .replace(/https?:\\\\/\\\\//, \\\"\\\")\\n      ))\\n }}\"},{\"name\":\"ogDescription\",\"stringValue\":\"={{ (($ifEmpty($json.ogDescription , $json[\\\"ogTitle\\\"])) || 'Visit Now') }}\"},{\"name\":\"ogImage\",\"stringValue\":\"={{  // Constructing the base URL for the CDN\\n  \\\"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\\\" +\\n  // Adding the title, URL encoded\\n  ($ifEmpty($json[\\\"ogTitle\\\"], $('API Auth').item.json[\\\"Brand Name\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Adding the description, URL encoded\\n  ($ifEmpty($json[\\\"ogDescription\\\"], $json[\\\"ogTitle\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Handling different OpenGraph Image Modes\\n  (\\n    $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'screenshot',\\n      \\\"<SCR>\\\",\\n      $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'brand',\\n        (\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\") +\\n          (\\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\\\"API Auth\\\").item.json[\\\"Brand Name\\\"].slice(0,18) + '%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C') ||\\n            $json[\\\"ogTitle\\\"].toUpperCase() ||\\n            $json[\\\"ogDescription\\\"].toUpperCase() ||\\n            \\\"Short Link\\\"\\n          ) + '.jpg'\\n        ).urlEncode(),\\n        $ifEmpty(\\n          $json[\\\"ogImage\\\"] || $json[\\\"Image\\\"],\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n            ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n              .replace(\\\"false\\\", \\\"white/\\\")\\n              .replace(\\\"true\\\", \\\"dark/\\\") +\\n            \\\"Default.jpg\\\"\\n        ).urlEncode()\\n      )\\n    )\\n  ) +\\n  \\\"/og.png\\\"\\n}}\"},{\"name\":\"Favicon\",\"stringValue\":\"={{ $ifEmpty($json[\\\"favicon\\\"],\\n(\\n// Get the Favicon url, if not available then generate api request to get it with:\\n\\\"https://favicone.com/\\\" +\\n// Get the image failed to export how from it if not found then use LongURL.\\n$ifEmpty($('API Auth').item.json[\\\"LongURL\\\"],\\n''\\n)\\n// This Regex to delete Any https:// or path from the url.\\n.match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n.replace(/https?:\\\\/\\\\//, \\\"\\\") +\\n// This Parameter to resize the favicon into 32pixels.\\n\\\"?s=32\\\"\\n)) }}\"}]},\"include\":\"none\",\"options\":{}},\"typeVersion\":3.2},{\"name\":\"Stop and Error\",\"type\":\"n8n-nodes-base.stopAndError\",\"position\":[4040,10320],\"parameters\":{\"errorMessage\":\"META Stack need fix, report to creator through n8n community 'Ans'.\"},\"typeVersion\":1},{\"name\":\"Method 3 - META1\",\"type\":\"n8n-nodes-base.set\",\"position\":[3620,10283],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"ogTitle\",\"stringValue\":\"={{\\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\\n      // The domain name (Host)\\n      // if the image url not found then use long URL host.\\n \\n($ifEmpty($json[\\\"title\\\"], ($(\\\"API Auth\\\").item.json[\\\"LongURL\\\"])\\n        // This Regex to delete Any https:// or path from the url.\\n        .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n        .replace(/https?:\\\\/\\\\//, \\\"\\\")\\n      ))\\n }}\"},{\"name\":\"ogDescription\",\"stringValue\":\"={{ (($ifEmpty($json.description , $json[\\\"title\\\"])) || 'Visit Now') }}\"},{\"name\":\"ogImage\",\"stringValue\":\"={{  // Constructing the base URL for the CDN\\n  \\\"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\\\" +\\n  // Adding the title, URL encoded\\n  ($ifEmpty($json[\\\"title\\\"], $('API Auth').item.json[\\\"Brand Name\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Adding the description, URL encoded\\n  ($ifEmpty($json[\\\"description\\\"], $json[\\\"title\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Handling different OpenGraph Image Modes\\n  (\\n    $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'screenshot',\\n      \\\"<SCR>\\\",\\n      $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'brand',\\n        (\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\") +\\n          (\\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\\\"API Auth\\\").item.json[\\\"Brand Name\\\"].slice||\\n            $json[\\\"title\\\"].toUpperCase() ||\\n            $json[\\\"description\\\"].toUpperCase() ||\\n            \\\"Short Link\\\"\\n          ) + '.jpg'\\n        ).urlEncode(),\\n        $ifEmpty(\\n          $json[\\\"image\\\"],\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n            ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n              .replace(\\\"false\\\", \\\"white/\\\")\\n              .replace(\\\"true\\\", \\\"dark/\\\") +\\n            \\\"Default.jpg\\\"\\n        ).urlEncode()\\n      )\\n    )\\n  ) +\\n  \\\"/og.png\\\"\\n}}\"},{\"name\":\"Favicon\",\"stringValue\":\"={{ $ifEmpty($json[\\\"favicon\\\"],\\n(\\n// Get the Favicon url, if not available then generate api request to get it with:\\n\\\"https://favicone.com/\\\" +\\n// Get the image failed to export how from it if not found then use LongURL.\\n$ifEmpty($('API Auth').item.json[\\\"LongURL\\\"],\\n''\\n)\\n// This Regex to delete Any https:// or path from the url.\\n.match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n.replace(/https?:\\\\/\\\\//, \\\"\\\") +\\n// This Parameter to resize the favicon into 32pixels.\\n\\\"?s=32\\\"\\n)) }}\"}]},\"include\":\"none\",\"options\":{}},\"typeVersion\":3.2},{\"name\":\"Method 1 - SCR\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"SCR API\",\"onError\":\"continueErrorOutput\",\"position\":[4440,9863.397766717584],\"parameters\":{\"url\":\"https://api.switchy.io/v1/proxy/proxy\",\"options\":{},\"sendQuery\":true,\"sendHeaders\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"url\",\"value\":\"=https://api.microlink.io?url={{ $item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"LongURL\\\"].urlEncode() }}&screenshot=true&meta=true&embed=screenshot.url\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0\"},{\"name\":\"Accept\",\"value\":\"application/json, text/plain, */*\"},{\"name\":\"Accept-Language\",\"value\":\"en-US,en;q=0.5\"},{\"name\":\"Accept-Encoding\",\"value\":\"gzip, deflate, br\"},{\"name\":\"Origin\",\"value\":\"https://www.switchy.io\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"Referer\",\"value\":\"https://www.switchy.io/\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"empty\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"cors\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"same-site\"},{\"name\":\"Sec-GPC\",\"value\":\"1\"},{\"name\":\"Pragma\",\"value\":\"no-cache\"},{\"name\":\"Cache-Control\",\"value\":\"no-cache\"},{\"name\":\"TE\",\"value\":\"trailers\"}]}},\"notesInFlow\":true,\"typeVersion\":4.1},{\"name\":\"Method 2 - SCR\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"Optional \",\"onError\":\"continueErrorOutput\",\"position\":[4440,10083.397766717584],\"parameters\":{\"url\":\"https://app.pxl.to/api/public/tools/screenshot\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"sendHeaders\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"destination\",\"value\":\"={{ $item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"LongURL\\\"] }}\"},{\"name\":\"size\",\"value\":\"meta\"},{\"name\":\"width\",\"value\":1200},{\"name\":\"height\",\"value\":628},{\"name\":\"full\",\"value\":false}]},\"headerParameters\":{\"parameters\":[{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0\"},{\"name\":\"Accept\",\"value\":\"*/*\"},{\"name\":\"Accept-Language\",\"value\":\"en-US,en;q=0.5\"},{\"name\":\"Accept-Encoding\",\"value\":\"gzip, deflate, br\"},{\"name\":\"Origin\",\"value\":\"https://www.pxl.to\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"empty\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"cors\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"same-site\"},{\"name\":\"Sec-GPC\",\"value\":\"1\"},{\"name\":\"Pragma\",\"value\":\"no-cache\"},{\"name\":\"Cache-Control\",\"value\":\"no-cache\"},{\"name\":\"TE\",\"value\":\"trailers\"}]}},\"notesInFlow\":true,\"typeVersion\":4.1},{\"name\":\"Final SCR\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[4660,9883.397766717584],\"parameters\":{\"options\":{\"includeBinaries\":true},\"aggregate\":\"aggregateAllItemData\"},\"typeVersion\":1},{\"name\":\"Stop And Error\",\"type\":\"n8n-nodes-base.stopAndError\",\"position\":[4660,10063.397766717584],\"parameters\":{\"errorMessage\":\"SCR Stack need fix, report to creator through n8n community 'Ans'.\"},\"typeVersion\":1},{\"name\":\"Shortened URL\",\"type\":\"n8n-nodes-base.set\",\"position\":[5420,10043.397766717584],\"parameters\":{\"values\":{\"string\":[{\"name\":\"Shortened URL\",\"value\":\"=https://{{ $json.body.domain }}/{{ $json.body.id }}\"},{\"name\":\"OG Method\",\"value\":\"={{ $('API Auth').item.json['OpenGraph Image Mode'] }}\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":2},{\"name\":\"n8n Form Trigger\",\"type\":\"n8n-nodes-base.formTrigger\",\"position\":[3140,9183],\"webhookId\":\"4d7636c2-aa25-4a90-8f9c-e421166d21ab\",\"parameters\":{\"path\":\"switchy\",\"formTitle\":\"Switchy URL Shortener\",\"formFields\":{\"values\":[{\"fieldType\":\"textarea\",\"fieldLabel\":\"What's your Switchy API Key\",\"requiredField\":true},{\"fieldLabel\":\"What's Your LongURL ?\",\"requiredField\":true},{\"fieldType\":\"dropdown\",\"fieldLabel\":\"What's OG Image method you like ?\",\"fieldOptions\":{\"values\":[{\"option\":\"Screenshot\"},{\"option\":\"Source\"},{\"option\":\"brand\"}]},\"requiredField\":true},{\"fieldType\":\"dropdown\",\"fieldLabel\":\"With your brand, Do you Like dark mode ?\",\"fieldOptions\":{\"values\":[{\"option\":\"no\"},{\"option\":\"yes\"}]},\"requiredField\":true},{\"fieldType\":\"dropdown\",\"fieldLabel\":\"scan Long URLs from virus/Phishing ? (Shorting a phishing URL will ban your domain from SEO)\",\"fieldOptions\":{\"values\":[{\"option\":\"No, Skip Scan part.\"},{\"option\":\"Yes, Scan all Links.\"}]},\"requiredField\":true}]},\"responseMode\":\"responseNode\",\"formDescription\":\"This is demo simple of Switchy URL shortener.\"},\"typeVersion\":2},{\"name\":\"Respond to Webhook\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[3140,9603.397766717584],\"parameters\":{\"options\":{},\"respondWith\":\"text\",\"responseBody\":\"={{ $json['Shortened URL'] }}\"},\"typeVersion\":1},{\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[3080,9063.397766717584],\"parameters\":{\"width\":365.4663416508872,\"height\":698.8834639756606,\"content\":\"## URL Preparing And Scanning\\n\"},\"typeVersion\":1},{\"name\":\"Scan URL (Community)\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[3900,9163],\"parameters\":{\"url\":\"https://safeweb.norton.com/safeweb/sites/v1/details\",\"options\":{\"redirect\":{\"redirect\":{}},\"response\":{\"response\":{}},\"allowUnauthorizedCerts\":true},\"sendQuery\":true,\"sendHeaders\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"url\",\"value\":\"={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\\\/\\\\/)?(?:[^@\\\\n]+@)?(?:www\\\\.)?([^:\\\\/\\\\n?]+)/im)[1] }}\"},{\"name\":\"insert\",\"value\":\"0\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"Accept\",\"value\":\"application/json, text/plain, */*\"},{\"name\":\"Accept-Language\",\"value\":\"en-US,en;q=0.5\"},{\"name\":\"Accept-Encoding\",\"value\":\"gzip, deflate, br\"},{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"Referer\",\"value\":\"https://safeweb.norton.com/\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"empty\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"cors\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"same-origin\"},{\"name\":\"Sec-GPC\",\"value\":\"1\"},{\"name\":\"Pragma\",\"value\":\"no-cache\"},{\"name\":\"Cache-Control\",\"value\":\"no-cache\"},{\"name\":\"Cache-Control\",\"value\":\"no-cache\"},{\"name\":\"TE\",\"value\":\"trailers\"}]}},\"typeVersion\":4.1},{\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[3460,9063.397766717584],\"parameters\":{\"width\":1102.2526655123636,\"height\":698.8834639756606,\"content\":\"## URL Preparing\\nWe're using this side to control everything.\"},\"typeVersion\":1},{\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[3840,9063],\"parameters\":{\"color\":7,\"width\":732.5923943084913,\"height\":698.8834639756606,\"content\":\"‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌ ‌‌ ‌ ‌ ‌‌ ‌ ‌‌ ‌  ‌‌ ‌ ‌ ‌ ‌‌ ‌ ![Safe Web](https://static.nortoncdn.com/safeweb/prod/417315/assets/images/logo/norton_logo.svg)‌ ‌ ‌‌ ‌ ‌‌ ‌ ‌‌![Safe Web](https://static.nortoncdn.com/safeweb/prod/417315/assets/images/logo/safeweb_logo.svg) ‌ ‌‌ ‌ ‌‌ ‌ ‌‌![Safe Web](https://upload.wikimedia.org/wikipedia/commons/3/35/Bitdefender_logo.svg)\"},\"typeVersion\":1},{\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[4060,9160],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"4b55880c-53dc-47d3-acc5-ecf5166bcce5\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.rating }}\",\"rightValue\":\"g\"},{\"id\":\"c412970c-402b-4ae1-ad36-385ecc563d7a\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.rating }}\",\"rightValue\":\"r\"}]}},\"typeVersion\":2},{\"name\":\"If1\",\"type\":\"n8n-nodes-base.if\",\"position\":[3900,9340],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"4b55880c-53dc-47d3-acc5-ecf5166bcce5\",\"operator\":{\"type\":\"number\",\"operation\":\"gte\"},\"leftValue\":\"={{ $('Scan URL (Community)').item.json.reviewCount }}\",\"rightValue\":1}]}},\"typeVersion\":2},{\"name\":\"Check Reviews (Community)\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[3900,9520],\"parameters\":{\"url\":\"=https://safeweb.norton.com/safeweb/sites/v1/{{ $('Scan URL (Community)').item.json.id }}/reviews\",\"options\":{\"redirect\":{\"redirect\":{}},\"response\":{\"response\":{}},\"allowUnauthorizedCerts\":true},\"sendQuery\":true,\"sendHeaders\":true,\"queryParameters\":{\"parameters\":[{\"name\":\"sortType\",\"value\":\"1\"},{\"name\":\"pageNo\",\"value\":\"1\"},{\"name\":\"pageSize\",\"value\":\"2\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"Accept\",\"value\":\"application/json, text/plain, */*\"},{\"name\":\"Accept-Language\",\"value\":\"en-US,en;q=0.5\"},{\"name\":\"Accept-Encoding\",\"value\":\"gzip, deflate, br\"},{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"Referer\",\"value\":\"=https://safeweb.norton.com/report?url={{ $('Scan URL (Community)').item.json.url }}\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"empty\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"cors\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"same-origin\"},{\"name\":\"Sec-GPC\",\"value\":\"1\"},{\"name\":\"Pragma\",\"value\":\"no-cache\"},{\"name\":\"Cache-Control\",\"value\":\"no-cache\"},{\"name\":\"TE\",\"value\":\"trailers\"}]}},\"typeVersion\":4.1},{\"name\":\"Norton\",\"type\":\"n8n-nodes-base.set\",\"position\":[4060,9340],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"Risk Rate\",\"stringValue\":\"={{ $('Scan URL (Community)').item.json.rating }}\"},{\"name\":\"Community Rating\",\"stringValue\":\"={{ $('Scan URL (Community)').item.json.userRating+'\\\\/5' }}\"},{\"name\":\"Ban\",\"type\":\"booleanValue\",\"booleanValue\":\"={{ $('Scan URL (Community)').item.json.globalRestriction }}\"}]},\"options\":{}},\"typeVersion\":3.2},{\"name\":\"bitdefender\",\"type\":\"n8n-nodes-base.set\",\"position\":[4420,9343.397766717584],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"safe\",\"type\":\"booleanValue\",\"booleanValue\":\"={{ $json.safe.is }}\"},{\"name\":\"blocklist score\",\"stringValue\":\"={{ $item(\\\"0\\\").$node[\\\"HTML\\\"].json[\\\"result\\\"] }}\"}]},\"options\":{}},\"typeVersion\":3.2},{\"name\":\"HTML\",\"type\":\"n8n-nodes-base.html\",\"position\":[4260,9343.397766717584],\"parameters\":{\"options\":{},\"operation\":\"extractHtmlContent\",\"extractionValues\":{\"values\":[{\"key\":\"result\",\"cssSelector\":\".label\"}]}},\"typeVersion\":1},{\"name\":\"(Fraud Check)\",\"type\":\"n8n-nodes-base.httpRequest\",\"notes\":\"Bitdefender\",\"position\":[4260,9163.397766717584],\"parameters\":{\"url\":\"https://nimbus.bitdefender.net/url/fraud_info\",\"method\":\"POST\",\"options\":{\"redirect\":{\"redirect\":{}},\"response\":{\"response\":{}},\"allowUnauthorizedCerts\":true},\"sendBody\":true,\"sendHeaders\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"url\",\"value\":\"={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\\\/\\\\/)?(?:[^@\\\\n]+@)?(?:www\\\\.)?([^:\\\\/\\\\n?]+)/im)[1] }}\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"Accept\",\"value\":\"*/*\"},{\"name\":\"Accept-Language\",\"value\":\"en-US,en;q=0.5\"},{\"name\":\"Accept-Encoding\",\"value\":\"gzip, deflate, br\"},{\"name\":\"Referer\",\"value\":\"https://trafficlight.bitdefender.com/\"},{\"name\":\"Origin\",\"value\":\"https://trafficlight.bitdefender.com\"},{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"empty\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"cors\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"cross-site\"},{\"name\":\"Sec-GPC\",\"value\":\"1\"},{\"name\":\"Pragma\",\"value\":\"no-cache\"},{\"name\":\"Cache-Control\",\"value\":\"no-cache\"},{\"name\":\"TE\",\"value\":\"trailers\"}]}},\"notesInFlow\":true,\"typeVersion\":4.1},{\"name\":\"(Others)\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[4420,9163.397766717584],\"parameters\":{\"url\":\"=https://www.urlvoid.com/scan/{{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\\\/\\\\/)?(?:[^@\\\\n]+@)?(?:www\\\\.)?([^:\\\\/\\\\n?]+)/im)[1] }}\",\"options\":{\"redirect\":{\"redirect\":{}},\"response\":{\"response\":{}},\"allowUnauthorizedCerts\":true},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"Accept\",\"value\":\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\"},{\"name\":\"Accept-Language\",\"value\":\"en-US,en;q=0.5\"},{\"name\":\"Accept-Encoding\",\"value\":\"gzip, deflate, br\"},{\"name\":\"Referer\",\"value\":\"https://www.urlvoid.com/\"},{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\"},{\"name\":\"DNT\",\"value\":\"1\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"Upgrade-Insecure-Requests\",\"value\":\"1\"},{\"name\":\"Sec-Fetch-Dest\",\"value\":\"document\"},{\"name\":\"Sec-Fetch-Mode\",\"value\":\"navigate\"},{\"name\":\"Sec-Fetch-Site\",\"value\":\"same-origin\"},{\"name\":\"Sec-Fetch-User\",\"value\":\"?1\"},{\"name\":\"Sec-GPC\",\"value\":\"1\"},{\"name\":\"Pragma\",\"value\":\"no-cache\"},{\"name\":\"Cache-Control\",\"value\":\"no-cache\"},{\"name\":\"TE\",\"value\":\"trailers\"}]}},\"typeVersion\":4.1},{\"name\":\"If2\",\"type\":\"n8n-nodes-base.if\",\"position\":[4260,9520],\"parameters\":{\"options\":{\"looseTypeValidation\":true},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"loose\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"c409582d-b8b3-409f-a7af-7dcccb6f6beb\",\"operator\":{\"type\":\"number\",\"operation\":\"lte\"},\"leftValue\":\"={{ ($json.result.match(/.*\\\\//)[0].replace('/','')).toDecimalNumber() }}\",\"rightValue\":\"=5\"},{\"id\":\"f27aa777-2b4e-4bb9-8d0b-0de58283cc01\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('If').item.json.rating }}\",\"rightValue\":\"g\"},{\"id\":\"cbf7378d-c023-4de4-897d-e8c2e14bc08b\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('If').item.json.rating }}\",\"rightValue\":\"r\"},{\"id\":\"b240a351-6b68-4eac-a19e-383c44bbf721\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ $json.safe }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"name\":\"set unsafe\",\"type\":\"n8n-nodes-base.set\",\"position\":[4420,9540],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"Shortened URL\",\"stringValue\":\"=Unsafe / Skipped getting {{ $item(\\\"0\\\").$node[\\\"HTML\\\"].json[\\\"result\\\"] }}\"}]},\"options\":{}},\"typeVersion\":3.2},{\"name\":\"If3\",\"type\":\"n8n-nodes-base.if\",\"position\":[3600,9380],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"4b55880c-53dc-47d3-acc5-ecf5166bcce5\",\"operator\":{\"type\":\"string\",\"operation\":\"startsWith\"},\"leftValue\":\"={{ $json['Scan LongURL'] }}\",\"rightValue\":\"Yes,\"}]}},\"typeVersion\":2},{\"name\":\"PhishTank\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[4060,9520],\"parameters\":{\"url\":\"=https://checkurl.phishtank.com/checkurl/index.php?url={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\\\/\\\\/)?(?:[^@\\\\n]+@)?(?:www\\\\.)?([^:\\\\/\\\\n?]+)/im)[1] }}\",\"options\":{\"redirect\":{\"redirect\":{}},\"allowUnauthorizedCerts\":true},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"User-Agent\",\"value\":\"phishtank/anestooo\"}]}},\"typeVersion\":4.1},{\"name\":\"IF GH invaild\",\"type\":\"n8n-nodes-base.if\",\"position\":[3640,10100],\"parameters\":{\"options\":{\"ignoreCase\":true},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":false,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"3c8cc92c-7232-4e30-b06b-3d8a57d80303\",\"operator\":{\"type\":\"string\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.ogTitle }}\",\"rightValue\":\"\"},{\"id\":\"14329807-37fc-4265-beac-fff5bc4dda23\",\"operator\":{\"type\":\"string\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.ogDescription }}\",\"rightValue\":\"\"},{\"id\":\"355ab988-c784-4fc3-8991-f5b0ab4b732a\",\"operator\":{\"type\":\"string\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.ogImage }}\",\"rightValue\":\"\"},{\"id\":\"1f85c367-6270-42c2-b109-0a66ece133dc\",\"operator\":{\"type\":\"string\",\"operation\":\"contains\"},\"leftValue\":\"={{ $json.ogTitle + $json.ogDescription }}\",\"rightValue\":\"Error\"}]}},\"typeVersion\":2},{\"name\":\"Method 4 - META\",\"type\":\"n8n-nodes-base.set\",\"position\":[3840,10320],\"parameters\":{\"fields\":{\"values\":[{\"name\":\"ogTitle\",\"stringValue\":\"={{\\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\\n      // The domain name (Host)\\n      // if the image url not found then use long URL host.\\n \\n($ifEmpty($json[\\\"title\\\"].replace('Error',$('API Auth').item.json[\\\"Brand Name\\\"].replaceAll('  ','')), ($(\\\"API Auth\\\").item.json[\\\"LongURL\\\"])\\n        // This Regex to delete Any https:// or path from the url.\\n        .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n        .replace(/https?:\\\\/\\\\//, \\\"\\\")\\n      ))\\n }}\"},{\"name\":\"ogDescription\",\"stringValue\":\"={{ (($ifEmpty($json.description , $json[\\\"title\\\"])) || 'Visit Now') }}\"},{\"name\":\"ogImage\",\"stringValue\":\"={{  // Constructing the base URL for the CDN\\n  \\\"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\\\" +\\n  // Adding the title, URL encoded\\n  ($ifEmpty($json[\\\"title\\\"].replace('Error',''), $('API Auth').item.json[\\\"Brand Name\\\"].replaceAll('  ','')).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Adding the description, URL encoded\\n  ($ifEmpty($json[\\\"description\\\"].replace('No description',''), $json[\\\"title\\\"].replace('Error',$('API Auth').item.json[\\\"Brand Name\\\"].replaceAll('  ',''))).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Handling different OpenGraph Image Modes\\n  (\\n    $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'screenshot',\\n      \\\"<SCR>\\\",\\n      $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'brand',\\n        (\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\") +\\n          (\\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\\\"API Auth\\\").item.json[\\\"Brand Name\\\"].slice||\\n            $json[\\\"title\\\"].toUpperCase() ||\\n            $json[\\\"description\\\"].toUpperCase() ||\\n            \\\"Short Link\\\"\\n          ) + '.jpg'\\n        ).urlEncode(),\\n        $ifEmpty(\\n          $json[\\\"image\\\"],\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n            ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n              .replace(\\\"false\\\", \\\"white/\\\")\\n              .replace(\\\"true\\\", \\\"dark/\\\") +\\n            \\\"Default.jpg\\\"\\n        ).urlEncode()\\n      )\\n    )\\n  ) +\\n  \\\"/og.png\\\"\\n}}\"},{\"name\":\"Favicon\",\"stringValue\":\"={{ $ifEmpty($json[\\\"favicon\\\"],\\n(\\n// Get the Favicon url, if not available then generate api request to get it with:\\n\\\"https://favicone.com/\\\" +\\n// Get the image failed to export how from it if not found then use LongURL.\\n$ifEmpty($('API Auth').item.json[\\\"LongURL\\\"],\\n''\\n)\\n// This Regex to delete Any https:// or path from the url.\\n.match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n.replace(/https?:\\\\/\\\\//, \\\"\\\") +\\n// This Parameter to resize the favicon into 32pixels.\\n\\\"?s=32\\\"\\n)) }}\"}]},\"include\":\"none\",\"options\":{}},\"typeVersion\":3.2},{\"name\":\"IF dub invaild\",\"type\":\"n8n-nodes-base.if\",\"position\":[3380,10300],\"parameters\":{\"options\":{\"ignoreCase\":true},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":false,\"typeValidation\":\"strict\"},\"combinator\":\"or\",\"conditions\":[{\"id\":\"3c8cc92c-7232-4e30-b06b-3d8a57d80303\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.title }}\",\"rightValue\":\"No title\"},{\"id\":\"14329807-37fc-4265-beac-fff5bc4dda23\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.description }}\",\"rightValue\":\"No description\"},{\"id\":\"355ab988-c784-4fc3-8991-f5b0ab4b732a\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.image }}\",\"rightValue\":\"No image\"},{\"id\":\"1f85c367-6270-42c2-b109-0a66ece133dc\",\"operator\":{\"type\":\"string\",\"operation\":\"contains\"},\"leftValue\":\"={{ $json.title + $json.description }}\",\"rightValue\":\"Error\"}]}},\"typeVersion\":2},{\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[4580,9060],\"parameters\":{\"width\":1000.9922558475889,\"height\":700.251847890049,\"content\":\"\\n\\n\\n\\n‌\\n‌\\n‌\\n‌\\n‌\\n# 💡FYI:-\\n- ### **This workflow can be for any URL Shortener by just changing the API Services for the shortener SaaS.**\\n- ### **Do not use it for spam purposes as the used APIs is mostly workaround methods and not for \\\"Big Use Cases\\\".**\\n- ### **Breaking the APIs will force me to not share them free. and yes this workflow not for productions.**\\n- ### **Support 1:1 not included with this workflow. post anything you have** [here](https://community.n8n.io) and mention my account @Nskha.\\n- ### **Follow my new templates updates** [on telegram](https://nodemation.t.me).\\n\\n‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌ ‌[![N8N Creator Profile - Nskha](https://cdn.statically.io/gh/Automations-Project/n8n-templates/main/stats.min.svg)](https://n8n.io/creators/nskha)\"},\"typeVersion\":1}],\"active\":\"false\",\"pinData\":{},\"settings\":{\"timezone\":\"Europe/Istanbul\",\"callerPolicy\":\"workflowsFromSameOwner\",\"errorWorkflow\":\"\",\"executionOrder\":\"v1\",\"executionTimeout\":600,\"saveManualExecutions\":true,\"saveExecutionProgress\":true},\"staticData\":\"\",\"connections\":{\"If\":{\"main\":[[{\"node\":\"PhishTank\",\"type\":\"main\",\"index\":0}],[{\"node\":\"If1\",\"type\":\"main\",\"index\":0}]]},\"If1\":{\"main\":[[{\"node\":\"Check Reviews (Community)\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Norton\",\"type\":\"main\",\"index\":0}]]},\"If2\":{\"main\":[[{\"node\":\"OpenGraph API\",\"type\":\"main\",\"index\":0}],[{\"node\":\"set unsafe\",\"type\":\"main\",\"index\":0}]]},\"If3\":{\"main\":[[{\"node\":\"Scan URL (Community)\",\"type\":\"main\",\"index\":0}],[{\"node\":\"OpenGraph API\",\"type\":\"main\",\"index\":0}]]},\"HTML\":{\"main\":[[{\"node\":\"bitdefender\",\"type\":\"main\",\"index\":0}]]},\"CREATE\":{\"main\":[[{\"node\":\"IF Slug available\",\"type\":\"main\",\"index\":0}]]},\"Norton\":{\"main\":[[{\"node\":\"PhishTank\",\"type\":\"main\",\"index\":0}]]},\"UPDATE\":{\"main\":[[{\"node\":\"Shortened URL\",\"type\":\"main\",\"index\":0}]]},\"(Others)\":{\"main\":[[{\"node\":\"HTML\",\"type\":\"main\",\"index\":0}]]},\"API Auth\":{\"main\":[[{\"node\":\"If3\",\"type\":\"main\",\"index\":0}]]},\"Final SCR\":{\"main\":[[{\"node\":\"Host Screenshot\",\"type\":\"main\",\"index\":0}]]},\"PhishTank\":{\"main\":[[{\"node\":\"(Fraud Check)\",\"type\":\"main\",\"index\":0}]]},\"Final Data\":{\"main\":[[{\"node\":\"CREATE\",\"type\":\"main\",\"index\":0}]]},\"Final Meta\":{\"main\":[[{\"node\":\"If - Enable ScreenShots (yes to enable)\",\"type\":\"main\",\"index\":0}]]},\"set unsafe\":{\"main\":[[{\"node\":\"Split In Batches\",\"type\":\"main\",\"index\":0}]]},\"Edit Fields\":{\"main\":[[{\"node\":\"Download final OG\",\"type\":\"main\",\"index\":0}]]},\"Get Headers\":{\"main\":[[{\"node\":\"Parse headers\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Meta tags Scraper - dub.sh\",\"type\":\"main\",\"index\":0}]]},\"bitdefender\":{\"main\":[[{\"node\":\"If2\",\"type\":\"main\",\"index\":0}]]},\"Host Favicon\":{\"main\":[[{\"node\":\"Final Data\",\"type\":\"main\",\"index\":0}]]},\"Host OGImage\":{\"main\":[[{\"node\":\"Download Favicon\",\"type\":\"main\",\"index\":0}]]},\"(Fraud Check)\":{\"main\":[[{\"node\":\"(Others)\",\"type\":\"main\",\"index\":0}]]},\"IF GH invaild\":{\"main\":[[{\"node\":\"Meta tags Scraper - dub.sh\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Final Meta\",\"type\":\"main\",\"index\":0}]]},\"OpenGraph API\":{\"main\":[[{\"node\":\"IF OpenGraph invaild\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get Headers\",\"type\":\"main\",\"index\":0}]]},\"Parse headers\":{\"main\":[[{\"node\":\"Method 2 - META\",\"type\":\"main\",\"index\":0}]]},\"Shortened URL\":{\"main\":[[{\"node\":\"Split In Batches\",\"type\":\"main\",\"index\":0}]]},\"IF dub invaild\":{\"main\":[[{\"node\":\"Method 4 - META\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Method 3 - META1\",\"type\":\"main\",\"index\":0}]]},\"Method 1 - SCR\":{\"main\":[[{\"node\":\"Final SCR\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Method 2 - SCR\",\"type\":\"main\",\"index\":0}]]},\"Method 2 - SCR\":{\"main\":[[{\"node\":\"Convert to File\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Stop And Error\",\"type\":\"main\",\"index\":0}]]},\"Convert to File\":{\"main\":[[{\"node\":\"Final SCR\",\"type\":\"main\",\"index\":0}]]},\"Host Screenshot\":{\"main\":[[{\"node\":\"Edit Fields\",\"type\":\"main\",\"index\":0}]]},\"Method 1 - META\":{\"main\":[[{\"node\":\"Final Meta\",\"type\":\"main\",\"index\":0}]]},\"Method 2 - META\":{\"main\":[[{\"node\":\"IF GH invaild\",\"type\":\"main\",\"index\":0}]]},\"Method 4 - META\":{\"main\":[[{\"node\":\"Final Meta\",\"type\":\"main\",\"index\":0}]]},\"Download Favicon\":{\"main\":[[{\"node\":\"Host Favicon\",\"type\":\"main\",\"index\":0}]]},\"Method 3 - META1\":{\"main\":[[{\"node\":\"Final Meta\",\"type\":\"main\",\"index\":0}]]},\"Split In Batches\":{\"main\":[[{\"node\":\"API Auth\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Respond to Webhook\",\"type\":\"main\",\"index\":0}]]},\"n8n Form Trigger\":{\"main\":[[{\"node\":\"Split In Batches\",\"type\":\"main\",\"index\":0}]]},\"Download final OG\":{\"main\":[[{\"node\":\"Host OGImage\",\"type\":\"main\",\"index\":0}]]},\"IF Slug available\":{\"main\":[[{\"node\":\"Shortened URL\",\"type\":\"main\",\"index\":0}],[{\"node\":\"UPDATE\",\"type\":\"main\",\"index\":0}]]},\"IF OpenGraph invaild\":{\"main\":[[{\"node\":\"Method 1 - META\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get Headers\",\"type\":\"main\",\"index\":0}]]},\"Scan URL (Community)\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]},\"Check Reviews (Community)\":{\"main\":[[{\"node\":\"Norton\",\"type\":\"main\",\"index\":0}]]},\"Meta tags Scraper - dub.sh\":{\"main\":[[{\"node\":\"IF dub invaild\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Stop and Error\",\"type\":\"main\",\"index\":0}]]},\"If - Enable ScreenShots (yes to enable)\":{\"main\":[[{\"node\":\"Method 1 - SCR\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Edit Fields\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "[![Video Overview of template  Advanced URL Parsing and Shortening Workflow - Switchy.io Integration](https://img.youtube.com/vi/c7yCZhmMjtI/maxresdefault.jpg)](https://youtu.be/c7yCZhmMjtI)\n\n## Overview\n\nThis N8N workflow facilitates advanced URL parsing and shortening, incorporating metadata extraction, OpenGraph tag handling, and integration with Switchy API for link management. It employs various nodes for URL processing, metadata extraction, and creation or updating of shortened links with enriched metadata.\n\n![Screenshot of template  Advanced URL Parsing and Shortening Workflow - Switchy.io Integration](https://live.staticflickr.com/65535/53646661632_fe2acba561_o.png)\n\n## Features\n\n  * **URL Metadata Extraction:** Parses URLs to extract metadata such as titles, descriptions, images, and favicons.\n  * **OpenGraph API Integration:** Utilizes OpenGraph API for detailed metadata retrieval.\n  * **Switchy API Integration:** Manages shortened links via the Switchy API.\n  * **GitHub API Integration:** Uses GitHub for hosting images related to the URLs.\n  * **Screenshot Capabilities:** Captures screenshots of web pages as part of metadata.\n  * **API Authorization and Configuration:** Manages API keys and configurations for external service integration.\n\n\n\n## Workflow Structure\n\n  1. **Split In Batches:** Processes URLs in batches.\n  2. **API Auth:** Configures API authorization.\n  3. **URL Processing Nodes:** Extract metadata using various nodes like Get Headers, OpenGraph API, and Meta tags Scraper.\n  4. **Conditional Nodes:** Include IF OpenGraph Invalid and If - Enable ScreenShots for logic handling.\n  5. **Data Aggregation:** Uses nodes like Method 1 - META for final metadata aggregation.\n  6. **Switchy API:** Handles link creation and updating.\n  7. **GitHub Integration:** Hosts screenshots and images on a personal GitHub repository.\n  8. **Final Output:** Provides the shortened URL after processing.\n\n\n\n## API Stack\n\nAPI | Description  \n---|---  \n`switchy` | For creating and updating shortened links.  \n`opengraph` | To retrieve URL metadata using OpenGraph tags.  \n`dub.sh` | Used for scraping meta tags from web pages.  \n`microlink` | Captures screenshots of web pages.  \n`pxl.to` | Alternative service for capturing screenshots.  \n`favicone` | Retrieves favicons for given URLs.  \n`github` | Hosts images and screenshots on GitHub repo.  \n`statically` | Used for CDN services and image hosting.  \n_Other APIs_ | _Additional APIs used for various purposes._  \n  \n## GitHub Repository Setup\n\nTo use this workflow, ensure your GitHub API is linked for hosting images. Set up a repository where the workflow can upload screenshots and other related images. This repository will be referenced in the workflow nodes where images are handled.\n\n## Configuration\n\nBefore running the workflow, set up the necessary API keys and configurations in the **API Auth** node. Adjust batch size and other parameters as needed.\n\n## Error Handling\n\nThe workflow includes nodes like **Stop and Error** for robust error handling, post an issue and mention the creator using [N8N community](https://community.n8n.io).\n\n## Contributions\n\nThis workflow is open for community contributions. Enhancements and improvements are welcome.\n",
  "crawled_at": "2025-05-25T20:46:36.233691",
  "readme_zh": "[![模板视频概览：高级URL解析与短链生成工作流 - Switchy.io集成](https://img.youtube.com/vi/c7yCZhmMjtI/maxresdefault.jpg)](https://youtu.be/c7yCZhmMjtI)\n\n## 概述  \n该N8N工作流实现了高级URL解析与短链生成功能，包含元数据提取、OpenGraph标签处理及Switchy API集成。通过多个节点进行URL处理、元数据提取，并创建或更新带有丰富元数据的短链。\n\n![模板截图：高级URL解析与短链生成工作流 - Switchy.io集成](https://live.staticflickr.com/65535/53646661632_fe2acba561_o.png)\n\n## 功能特性  \n* **URL元数据提取**：解析URL获取标题、描述、图片和网站图标等元数据  \n* **OpenGraph API集成**：通过OpenGraph API获取详细元数据  \n* **Switchy API集成**：通过Switchy API管理短链  \n* **GitHub API集成**：利用GitHub托管URL相关图片  \n* **网页截图功能**：自动捕获网页截图作为元数据组成部分  \n* **API授权配置**：管理外部服务集成的API密钥与配置  \n\n## 工作流结构  \n1. **批量拆分**：分批处理URL  \n2. **API认证**：配置API授权  \n3. **URL处理节点**：通过获取头信息/OpenGraph API/元标签抓取器等节点提取元数据  \n4. **条件判断节点**：包含\"OpenGraph无效判断\"和\"启用截图判断\"等逻辑处理  \n5. **数据聚合**：使用\"方法1-META\"等节点进行最终元数据聚合  \n6. **Switchy API**：处理短链创建与更新  \n7. **GitHub集成**：将截图和图片托管至个人GitHub仓库  \n8. **最终输出**：返回处理完成的短链  \n\n## 技术栈  \nAPI | 描述  \n---|---  \n`switchy` | 短链创建与更新  \n`opengraph` | 通过OpenGraph标签获取URL元数据  \n`dub.sh` | 网页元标签抓取  \n`microlink` | 网页截图捕获  \n`pxl.to` | 备选截图服务  \n`favicone` | 获取网站图标  \n`github` | GitHub仓库图片托管  \n`statically` | CDN服务与图片托管  \n_其他API_ | _其他功能支持API_  \n\n## GitHub仓库配置  \n使用前需关联GitHub API用于图片托管，建立专门仓库存储工作流生成的截图及相关图片，相关节点将调用该仓库。\n\n## 配置说明  \n运行前需在**API认证**节点配置必要的API密钥，可根据需求调整批量处理规模等参数。\n\n## 错误处理  \n工作流包含**停止报错**等节点实现健壮的错误处理机制，遇到问题可通过[N8N社区](https://community.n8n.io)提交并@创作者。\n\n## 贡献说明  \n本工作流开放社区贡献，欢迎功能增强与改进建议。",
  "title_zh": "N8N高级URL解析与缩短工作流 - Switchy.io集成",
  "publish_date_zh": "最后更新于6个月前",
  "workflow_json_zh": "{\n  \"meta\": {},\n  \"name\": \"[n8n] Advanced URL Parsing and Shortening Workflow - Switchy.io Integration\",\n  \"tags\": [\n    {\n      \"id\": \"RHVi\",\n      \"name\": \"Dub\",\n      \"createdAt\": \"2024-04-09T17:46:08.436Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.436Z\"\n    },\n    {\n      \"id\": \"U3dpdGNoeQ\",\n      \"name\": \"Switchy\",\n      \"createdAt\": \"2024-04-09T17:46:08.436Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.436Z\"\n    },\n    {\n      \"id\": \"UHhs\",\n      \"name\": \"Pxl\",\n      \"createdAt\": \"2024-04-09T17:46:08.436Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.436Z\"\n    },\n    {\n      \"id\": \"Tm9ydG9u\",\n      \"name\": \"Norton\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"Qml0ZGVmZW5kZXI\",\n      \"name\": \"Bitdefender\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"U3BsaXRJbkJhdGNoZXM\",\n      \"name\": \"SplitInBatches\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"SHR0cFJlcXVlc3Q\",\n      \"name\": \"HttpRequest\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"SHRtbA\",\n      \"name\": \"Html\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"Q29udmVydFRvRmlsZQ\",\n      \"name\": \"ConvertToFile\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"QWdncmVnYXRl\",\n      \"name\": \"Aggregate\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"R2l0aHVi\",\n      \"name\": \"Github\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"R2l0aHViQXBp\",\n      \"name\": \"GithubApi\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"U3RvcEFuZEVycm9y\",\n      \"name\": \"StopAndError\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"Rm9ybVRyaWdnZXI\",\n      \"name\": \"FormTrigger\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"UmVzcG9uZFRvV2ViaG9vaw\",\n      \"name\": \"RespondToWebhook\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    },\n    {\n      \"id\": \"dGVtcGxhdGVz\",\n      \"name\": \"templates\",\n      \"createdAt\": \"2024-04-09T17:46:08.437Z\",\n      \"updatedAt\": \"2024-04-09T17:46:08.437Z\"\n    }\n  ],\n  \"nodes\": [\n    {\n      \"name\": \"Split In Batches\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        3140,\n        9383.397766717584\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"batchSize\": 1\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3080,\n        9783.397766717584\n      ],\n      \"parameters\": {\n        \"width\": 1249.1706015670397,\n        \"height\": 685.2594193361641,\n        \"content\": \"## URL元标签数据  \\n**此部分**用于解析长链接数据，如标题、描述、图片等，这些数据通过头部标签提供，称为[URL元数据](https://ogp.me/)。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        5240,\n        10223.397766717584\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 346.4519761795601,\n        \"height\": 241.68171599985524,\n        \"content\": \"## Switchy API 限制：\\n- 每日10,000条链接。\\n- 每小时最多1,000条链接。\\n- 每分钟最多16条链接。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Get Headers\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        3160,\n        10123.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $('API Auth').item.json.LongURL }}\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"response\": {\n            \"response\": {\n              \"neverError\": true,\n              \"fullResponse\": true\n            }\n          },\n          \"allowUnauthorizedCerts\": true\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"OpenGraph API\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        3160,\n        9923.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.opengraph.xyz/api/metadata/{{ $('API Auth').item.json.LongURL.urlEncode()}}\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"response\": {\n            \"response\": {\n              \"neverError\": true,\n              \"fullResponse\": true\n            }\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0\"\n            },\n            {\n              \"name\": \"Accept\",\n              \"value\": \"*/*\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-US,en;q=0.5\"\n            },\n            {\n              \"name\": \"Accept-Encoding\",\n              \"value\": \"gzip, deflate, br\"\n            },\n            {\n              \"name\": \"Referer\",\n              \"value\": \"=https://www.opengraph.xyz/url/{{ $('API Auth').item.json.LongURL.urlEncode()}}\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"same-origin\"\n            },\n            {\n              \"name\": \"Sec-GPC\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"Cache-Control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"cookie\",\n              \"value\": \"crisp-client%2Fsession%2Fbb1ac897-aa52-4f90-b0e1-e191cb403caf=session_a7a69e83-51f6-4a3b-a101-68fc6d33aca7;\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"Meta tags Scraper - dub.sh\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        3160,\n        10303.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"https://app.dub.co/api/edge/metatags\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"LongURL\\\"] }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"authority\",\n              \"value\": \"app.dub.co\"\n            },\n            {\n              \"name\": \"accept\",\n              \"value\": \"*/*\"\n            },\n            {\n              \"name\": \"accept-language\",\n              \"value\": \"en-GB,en;q=0.9,en-US;q=0.8\"\n            },\n            {\n              \"name\": \"cache-control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"dnt\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"sec-ch-ua\",\n              \"value\": \"\\\"Not_A Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"120\\\", \\\"Microsoft Edge\\\";v=\\\"120\\\"\"\n            },\n            {\n              \"name\": \"sec-ch-ua-mobile\",\n              \"value\": \"?0\"\n            },\n            {\n              \"name\": \"sec-ch-ua-platform\",\n              \"value\": \"\\\"Windows\\\"\"\n            },\n            {\n              \"name\": \"sec-fetch-dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"sec-fetch-mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"sec-fetch-site\",\n              \"value\": \"same-origin\"\n            },\n            {\n              \"name\": \"user-agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"IF OpenGraph invaild\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        3400,\n        9903.397766717584\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"b9f7d88d-4626-4e2c-a04c-ae8f9d4aed93\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEquals\"\n              },\n              \"leftValue\": \"={{ $ifEmpty($json.data,'Unauthorized access') }}\",\n              \"rightValue\": \"Unauthorized access\"\n            },\n            {\n              \"id\": \"046b5c40-b6a4-434e-aa8e-d3b6c601f16d\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.body.error }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Parse headers\",\n      \"type\": \"n8n-nodes-base.html\",\n      \"position\": [\n        3360,\n        10100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"extractHtmlContent\",\n        \"extractionValues\": {\n          \"values\": [\n            {\n              \"key\": \"ogTitle\",\n              \"attribute\": \"content\",\n              \"cssSelector\": \"meta[property^=\\\"og:title\\\"], meta[name=\\\"og:title\\\"], meta[property=\\\"twitter:title\\\"], meta[name=\\\"twitter:title\\\"]\",\n              \"returnValue\": \"attribute\"\n            },\n            {\n              \"key\": \"ogDescription\",\n              \"attribute\": \"content\",\n              \"cssSelector\": \"meta[name=\\\"description\\\"], meta[property=\\\"og:description\\\"], meta[property=\\\"twitter:description\\\"]\",\n              \"returnValue\": \"attribute\"\n            },\n            {\n              \"key\": \"ogImage\",\n              \"attribute\": \"content\",\n              \"cssSelector\": \"meta[property^=\\\"og:image\\\"], meta[name=\\\"og:image\\\"], meta[property=\\\"twitter:image\\\"], meta[name=\\\"twitter:image\\\"]\",\n              \"returnValue\": \"attribute\"\n            },\n            {\n              \"key\": \"favicon\",\n              \"attribute\": \"href\",\n              \"cssSelector\": \"link[rel=\\\"shortcut icon\\\"], link[rel=\\\"icon\\\"], link[rel=\\\"apple-touch-icon\\\"], link[rel=\\\"apple-touch-startup-image\\\"]\",\n              \"returnValue\": \"attribute\"\n            },\n            {\n              \"key\": \"Image\",\n              \"attribute\": \"href\",\n              \"cssSelector\": \"link[rel=\\\"preload\\\"][as=\\\"image\\\"],link[as=\\\"image\\\"]\",\n              \"returnValue\": \"attribute\"\n            },\n            {\n              \"key\": \"ogTitle\",\n              \"cssSelector\": \"title\",\n              \"returnValue\": \"html\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"If - Enable ScreenShots (yes to enable)\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        4040,\n        10080\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"cfcdcf45-822e-4e7a-bd7f-5fb321f96acd\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ ($if(\\n  $('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] = 'screenshot',\\n  \\\"screenshot\\\")) }}\",\n              \"rightValue\": \"=screenshot\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4340,\n        9783.397766717584\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 885.4276629872791,\n        \"height\": 682.7545654243127,\n        \"content\": \"# 截图堆栈\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"API Auth\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3600,\n        9160\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"OpenGraph Image Mode\",\n              \"stringValue\": \"={{ $json['What\\\\'s OG Image method you like ?'].toLowerCase() }}\"\n            },\n            {\n              \"name\": \"Dark Mode ?\",\n              \"type\": \"booleanValue\",\n              \"booleanValue\": \"={{ $json['With your brand, Do you Like dark mode ?'].replace('no','false').replace('yes','true') }}\"\n            },\n            {\n              \"name\": \"Brand Name\",\n              \"stringValue\": \"NodeMation\"\n            },\n            {\n              \"name\": \"Switchy API Key\",\n              \"stringValue\": \"={{ $json['What\\\\'s your Switchy API Key'] }}\"\n            },\n            {\n              \"name\": \"LongURL\",\n              \"stringValue\": \"={{ $json['What\\\\'s Your LongURL ?'].match(/\\\\b((?:https?|ftp):\\\\/\\\\/[^\\\\s/$.?#].[^\\\\s]*)/g)[0] }}\"\n            },\n            {\n              \"name\": \"Scan LongURL\",\n              \"stringValue\": \"={{ $json['scan Long URLs from virus/Phishing ? (Shorting a phishing URL will ban your domain from SEO)'] }}\"\n            },\n            {\n              \"name\": \"Custom slug\",\n              \"stringValue\": \"=<Optional: Slug is the path of shortened URL - default is random 5 chars> \"\n            },\n            {\n              \"name\": \"tags\",\n              \"stringValue\": \"=<Optional: Add tags if you need, each keyword seperated by \\\",\\\" for example: Marketing, Media, Shortened> \"\n            },\n            {\n              \"name\": \"Switchy Folder ID\",\n              \"stringValue\": \"<Optional: Enter Your Switchy Folder ID>\"\n            },\n            {\n              \"name\": \"Custom Domain (CNAME)\",\n              \"stringValue\": \"=<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"Method 1 - META\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3620,\n        9923.397766717584\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"ogTitle\",\n              \"stringValue\": \"={{\\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\\n      // The domain name (Host)\\n      // if the image url not found then use long URL host.\\n \\n($ifEmpty($json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogTitle\\\"], ($json[\\\"body\\\"][\\\"metadata\\\"][\\\"domain\\\"], $(\\\"API Auth\\\").item.json[\\\"LongURL\\\"])\\n        // This Regex to delete Any https:// or path from the url.\\n        .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n        .replace(/https?:\\\\/\\\\//, \\\"\\\")\\n      ))\\n }}\"\n            },\n            {\n              \"name\": \"ogDescription\",\n              \"stringValue\": \"=  {{\\n    // We used IFempty of descraption then use title, if the descraption giving no descraption output value then replace with title value, if no value for both then use empty value output.\\n    $ifEmpty(\\n      $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogDescription\\\"],\\n      $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogSiteName\\\"]\\n    ) || \\\"\\\"\\n  }}\"\n            },\n            {\n              \"name\": \"ogImage\",\n              \"stringValue\": \"={{\\n  // Constructing the base URL for the CDN\\n  \\\"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\\\" +\\n  // Adding the title, URL encoded\\n  ($ifEmpty($json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogTitle\\\"], $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogSiteName\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Adding the description, URL encoded\\n  ($ifEmpty($json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogDescription\\\"], $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogTitle\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Handling different OpenGraph Image Modes\\n  (\\n    $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'screenshot',\\n      \\\"<SCR>\\\",\\n      $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'brand',\\n        (\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\") +\\n          (\\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\\\"API Auth\\\").item.json[\\\"Brand Name\\\"].slice||\\n            $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogTitle\\\"].toUpperCase() ||\\n            $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogDescription\\\"].toUpperCase() ||\\n            \\\"Short Link\\\"\\n          ) + '.jpg'\\n        ).urlEncode(),\\n        $ifEmpty(\\n          $json[\\\"body\\\"][\\\"metadata\\\"][\\\"ogImage\\\"][\\\"url\\\"] || $json[\\\"body\\\"][\\\"metadata\\\"][\\\"image\\\"],\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n            ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n              .replace(\\\"false\\\", \\\"white/\\\")\\n              .replace(\\\"true\\\", \\\"dark/\\\") +\\n            \\\"Default.jpg\\\"\\n        ).urlEncode()\\n      )\\n    )\\n  ) +\\n  \\\"/og.png\\\"\\n}}\"\n            },\n            {\n              \"name\": \"Favicon\",\n              \"stringValue\": \"={{ $ifEmpty($json[\\\"body\\\"][\\\"metadata\\\"][\\\"favicon\\\"],\\n(\\n      // Get the Favicon url, if not available then generate api request to get it with:\\n      \\\"https://favicone.com/\\\" +\\n        // Get the image failed to export how from it if not found then use LongURL.\\n        $ifEmpty(\\n          $json[\\\"body\\\"][\\\"metadata\\\"][\\\"fullUrl\\\"],\\n          $('API Auth').item.json[\\\"LongURL\\\"]\\n        )\\n          // This Regex to delete Any https:// or path from the url.\\n          .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n          .replace(/https?:\\\\/\\\\//, \\\"\\\") +\\n        // This Parameter to resize the favicon into 32pixels.\\n        \\\"?s=32\\\"\\n)) }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"Convert to File\",\n      \"type\": \"n8n-nodes-base.convertToFile\",\n      \"position\": [\n        4440,\n        10263.397766717584\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"dataIsBase64\": true\n        },\n        \"operation\": \"toBinary\",\n        \"sourceProperty\": \"data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Final Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        4980,\n        9883.397766717584\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"Title\",\n              \"stringValue\": \"={{ $item(\\\"0\\\").$node[\\\"Final Meta\\\"].json[\\\"data\\\"][\\\"0\\\"][\\\"ogTitle\\\"] }}\"\n            },\n            {\n              \"name\": \"Description\",\n              \"stringValue\": \"={{ $item(\\\"0\\\").$node[\\\"Final Meta\\\"].json[\\\"data\\\"][\\\"0\\\"][\\\"ogDescription\\\"].replace(/\\\\s{2,}/g, ' ').replace(/^\\\\s+|\\\\s{3,}/g, '') }}\"\n            },\n            {\n              \"name\": \"ogImage\",\n              \"stringValue\": \"={{ ($('Host OGImage').item.json[\\\"content\\\"][\\\"download_url\\\"]||'').replace('https://raw.githubusercontent.com/','https://cdn.statically.io/gh/')}}\"\n            },\n            {\n              \"name\": \"Favicon\",\n              \"stringValue\": \"={{ ($item(\\\"0\\\").$node[\\\"Host Favicon\\\"].json[\\\"content\\\"][\\\"download_url\\\"]||'').replace('https://raw.githubusercontent.com/','https://cdn.statically.io/gh/')}}\"\n            },\n            {\n              \"name\": \"=url\",\n              \"stringValue\": \"={{ $('API Auth').item.json.LongURL }}\"\n            },\n            {\n              \"name\": \"slug\",\n              \"stringValue\": \"={{ $('API Auth').item.json[\\\"Custom slug\\\"] }}\"\n            },\n            {\n              \"name\": \"tags\",\n              \"stringValue\": \"={{ $('API Auth').item.json.tags }}\"\n            },\n            {\n              \"name\": \"folderId\",\n              \"stringValue\": \"={{ $('API Auth').item.json[\\\"Switchy Folder ID\\\"] }}\"\n            },\n            {\n              \"name\": \"api\",\n              \"stringValue\": \"={{ $('API Auth').item.json[\\\"Switchy API Key\\\"] }}\"\n            },\n            {\n              \"name\": \"name\",\n              \"stringValue\": \"={{ $('API Auth').item.json[\\\"Brand Name\\\"] }}\"\n            },\n            {\n              \"name\": \"domain\",\n              \"stringValue\": \"={{ $('API Auth').item.json['Custom Domain (CNAME)'] }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {\n          \"dotNotation\": true,\n          \"ignoreConversionErrors\": true\n        }\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"CREATE\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Create Link\",\n      \"position\": [\n        5280,\n        9883.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.switchy.io/v1/links/create\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 15,\n              \"batchInterval\": 60000\n            }\n          },\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"response\": {\n            \"response\": {\n              \"neverError\": true,\n              \"fullResponse\": true\n            }\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"jsonBody\": \"={  \\\"link\\\": {\\n    \\\"url\\\": \\\"{{ $json[\\\"url\\\"] }}\\\",\\n\\n    {{($ifEmpty(('\\\"tags\\\": \\\"' + $json[\\\"tags\\\"]+'\\\",'),'')\\n// Replace Undefiend with default one, and default template texts with none.\\n.replace('\\\"tags\\\": \\\"undefined\\\",','')\\n.replace('\\\"tags\\\": \\\"<Optional: Add tags if you need, each keyword seperated by \\\",\\\" for example: Marketing, Media, Shortened> \\\",','')\\n) }}\\n\\n    {{($ifEmpty(('\\\"domain\\\": \\\"' + $json[\\\"domain\\\"]+'\\\",'),'')\\n// Replace Undefiend with default one, and default template texts with none.\\n.replace('\\\"undefined\\\",','\\\"swiy.co\\\",')\\n.replace('\\\"<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>\\\",','\\\"swiy.co\\\",')) }}\\n\\n    \\\"title\\\": \\\"{{$json[\\\"Title\\\"].slice(0,60)}}\\\",\\n\\n    {{($ifEmpty(('\\\"description\\\": \\\"' + $json[\\\"Description\\\"].slice(0,62)+'...\\\",'),'')\\n.replace('\\\"description\\\": \\\"undefined\\\",','')) }}\\n\\n    {{($ifEmpty(('\\\"image\\\": \\\"' + $json[\\\"ogImage\\\"]+'\\\",'),'')\\n.replace('\\\"image\\\": \\\"undefined\\\",','')) }}\\n\\n    \\\"id\\\": \\\"{{$ifEmpty($json[\\\"slug\\\"].replace('<Optional: Slug is the path of shortened URL - default is random 5 chars> ',''),Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}\\\",\\n\\n    {{($ifEmpty(('\\\"folderId\\\": \\\"' + $json[\\\"folderId\\\"]+'\\\",'),'')\\n.replace('\\\"folderId\\\": undefined,','')\\n.replace('\\\"folderId\\\": \\\"<Optional: Enter Your Switchy Folder ID>\\\",','')) }}\\n\\n    \\\"favicon\\\": \\\"{{$json[\\\"Favicon\\\"]}}\\\",\\n\\n    \\\"note\\\": \\\"{{ 'Created through N8N.io Workflow name: ' + $workflow.name }}\\\"  }}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Api-Authorization\",\n              \"value\": \"={{ $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"api\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"UPDATE\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        5280,\n        10043.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.switchy.io/v1/links/by-domain/{{ $json.body.domain }}/{{ $json.body.id }}\",\n        \"method\": \"PUT\",\n        \"options\": {\n          \"batching\": {\n            \"batch\": {\n              \"batchSize\": 15,\n              \"batchInterval\": 60000\n            }\n          },\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"response\": {\n            \"response\": {\n              \"neverError\": true,\n              \"fullResponse\": true\n            }\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"jsonBody\": \"={  \\\"link\\\": {\\n    \\\"url\\\": \\\"{{ $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"url\\\"] }}\\\",\\n\\n    {{($ifEmpty(('\\\"tags\\\": \\\"' + $json[\\\"tags\\\"]+'\\\",'),'')\\n// Replace Undefiend with default one, and default template texts with none.\\n.replace('\\\"tags\\\": \\\"undefined\\\",','')\\n.replace('\\\"tags\\\": \\\"<Optional: Add tags if you need, each keyword seperated by \\\",\\\" for example: Marketing, Media, Shortened> \\\",','')\\n) }}\\n\\n    {{($ifEmpty(('\\\"domain\\\": \\\"' + $json[\\\"domain\\\"]+'\\\",'),'')\\n// Replace Undefiend with default one, and default template texts with none.\\n.replace('\\\"undefined\\\",','\\\"swiy.co\\\",')\\n.replace('\\\"<Optional: Use your custom domain linked to Switchy, otherwise keep it empty to use default domain swiy.co>\\\",','\\\"swiy.co\\\",')) }}\\n\\n    \\\"title\\\": \\\"{{ $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"Title\\\"].slice(0,60) }}\\\",\\n\\n    {{($ifEmpty(('\\\"description\\\": \\\"' + $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"Description\\\"].slice(0,62)+'...\\\",'),'')\\n.replace('\\\"description\\\": \\\"undefined\\\",','')) }}\\n\\n    {{($ifEmpty(('\\\"image\\\": \\\"' + $json[\\\"ogImage\\\"]+'\\\",'),'')\\n.replace('\\\"image\\\": \\\"undefined\\\",','')) }}\\n\\n    {{($ifEmpty(('\\\"folderId\\\": \\\"' + $json[\\\"folderId\\\"]+'\\\",'),'')\\n.replace('\\\"folderId\\\": undefined,','')\\n.replace('\\\"folderId\\\": \\\"<Optional: Enter Your Switchy Folder ID>\\\",','')) }}\\n\\n    \\\"favicon\\\": \\\"{{$item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"Favicon\\\"]}}\\\",\\n\\n    \\\"note\\\": \\\"{{ 'Created through N8N.io Workflow name: ' + $workflow.name }}\\\"  }}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Api-Authorization\",\n              \"value\": \"={{ $item(\\\"0\\\").$node[\\\"Final Data\\\"].json[\\\"api\\\"] }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"disabled\": true,\n      \"position\": [\n        5240,\n        9783.397766717584\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 344.6623616873581,\n        \"height\": 418.2992490141105,\n        \"content\": \"## Switchy API  \\n**创建或更新** 链接。[基于其API文档](https://google.com)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"IF Slug available\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        5420,\n        9883.397766717584\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.statusCode }}\",\n              \"value2\": \"201\",\n              \"operation\": \"regex\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Final Meta\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        3880,\n        10080\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"includeBinaries\": true\n        },\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Host Screenshot\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        4820,\n        9883.397766717584\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"ARHAEEM\",\n          \"cachedResultUrl\": \"https://github.com/ARHAEEM\",\n          \"cachedResultName\": \"ARHAEEM\"\n        },\n        \"filePath\": \"=screenshots/{{$(\\\"API Auth\\\").item.json[\\\"LongURL\\\"].match(/https?:\\\\/\\\\/[^\\\\/]+/)[0].replace(/https?:\\\\/\\\\//, \\\"\\\")}}/scr/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png\",\n        \"resource\": \"file\",\n        \"binaryData\": true,\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"n8n-templates-demos\",\n          \"cachedResultUrl\": \"https://github.com/ARHAEEM/n8n-templates-demos\",\n          \"cachedResultName\": \"n8n-templates-demos\"\n        },\n        \"commitMessage\": \"={{ $('API Auth').item.json.LongURL }}\",\n        \"binaryPropertyName\": \"=data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Host OGImage\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        4660,\n        10223.397766717584\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"ARHAEEM\",\n          \"cachedResultUrl\": \"https://github.com/ARHAEEM\",\n          \"cachedResultName\": \"ARHAEEM\"\n        },\n        \"filePath\": \"=screenshots/{{$(\\\"API Auth\\\").item.json[\\\"LongURL\\\"].match(/https?:\\\\/\\\\/[^\\\\/]+/)[0].replace(/https?:\\\\/\\\\//, \\\"\\\")}}/og/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png\",\n        \"resource\": \"file\",\n        \"binaryData\": true,\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"n8n-templates-demos\",\n          \"cachedResultUrl\": \"https://github.com/ARHAEEM/n8n-templates-demos\",\n          \"cachedResultName\": \"n8n-templates-demos\"\n        },\n        \"commitMessage\": \"={{ $('API Auth').item.json.LongURL }}\",\n        \"binaryPropertyName\": \"=data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Host Favicon\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        4980,\n        10223.397766717584\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"ARHAEEM\",\n          \"cachedResultUrl\": \"https://github.com/ARHAEEM\",\n          \"cachedResultName\": \"ARHAEEM\"\n        },\n        \"filePath\": \"=screenshots/{{$(\\\"API Auth\\\").item.json[\\\"LongURL\\\"].match(/https?:\\\\/\\\\/[^\\\\/]+/)[0].replace(/https?:\\\\/\\\\//, \\\"\\\")}}/icon/{{(Array.from({ length: 5 }, () => String.fromCharCode(Math.floor(Math.random() * 26) + 97)).join(''))}}.png\",\n        \"resource\": \"file\",\n        \"binaryData\": true,\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"n8n-templates-demos\",\n          \"cachedResultUrl\": \"https://github.com/ARHAEEM/n8n-templates-demos\",\n          \"cachedResultName\": \"n8n-templates-demos\"\n        },\n        \"commitMessage\": \"={{ $('API Auth').item.json.LongURL }}\",\n        \"binaryPropertyName\": \"=data\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        4820,\n        10063.397766717584\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"download_url\",\n              \"stringValue\": \"={{ $json.content.download_url }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2380,\n        9060\n      ],\n      \"parameters\": {\n        \"width\": 682.2425599837106,\n        \"height\": 1405.2214458171302,\n        \"content\": \"# 自述文件\\n## N8N META 配置\\n### 1- **Opengraph图像模式**: `screenshot`（截图）或 `source`（源图）或 `brand`（品牌）\\n### - **screenshot**: _基于长网址对网页进行截图_\\n[![截图模式演示](https://live.staticflickr.com/65535/53485029368_917acda850_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/mefwo.png)\\n### - **source**: _抓取长网址的原始og图像并使用_\\n[![源图模式演示](https://live.staticflickr.com/65535/53485194899_d6141292eb_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/cowyl.png)\\n### - **brand**: _生成纯色背景，颜色基于`暗黑模式`选项_\\n[![品牌模式暗色演示](https://live.staticflickr.com/65535/53484898721_94e15670b0_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/gvhok.png) [![品牌模式亮色演示](https://live.staticflickr.com/65535/53485202839_680a5e825b_o.png)](https://cdn.statically.io/gh/ARHAEEM/n8n-templates-demos/main/screenshots/n8n.io/og/yguse.png)\\n### 2- **暗黑模式**: `true`（开启）或 `false`（关闭）（仅适用于`brand` OGI模式）\\n- **true**: 为文字生成**黑色**背景的og图像\\n- **false**: 为文字生成**白色**背景的og图像\\n### 3- **品牌名称**: 用于`brand` ogi背景。品牌名称总字符数限制为18个\\n\\n\\n## Switchy API 工作流配置\\n### 这是本工作流中涵盖的Switchy API配置部分\\n| 输入字段               | 描述                                      |\\n|-----------------------|------------------------------------------|\\n| **`Switchy API密钥`**  | _用于Switchy集成的API密钥_                 |\\n| **`长网址`**           | _需要缩短的原始长网址_                     |\\n| **`自定义短链`**       | _为缩短网址设置的自定义后缀_               |\\n| **`标签`**            | _与链接关联的标签_                        |\\n| **`Switchy文件夹ID`**  | _使用的Switchy文件夹ID_                   |\\n| **`自定义域名(CNAME)`**| _绑定到Switchy的自定义域名_               |\\n\\n\\n### 本工作流使用的公开API\\n#### 元数据栈\\n- **手动获取头信息**: 自定义HTTP请求获取头信息\\n- **Dub.sh**: 从网页抓取meta标签\\n- **OpenGraph API**: 使用OpenGraph获取元信息\\n#### 截图栈\\n- **方法1 - SCR**: 第一种截图方法（API名称为microlink）\\n- **方法2 - SCR**: 第二种截图方法（API名称为pxl.to）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Download final OG\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Download Final OGI\",\n      \"position\": [\n        4980,\n        10063.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"={{\\n  // The expression checks if $json.data[0].data[0].ogImage exists.\\n  // It then attempts to replace '<SCR>' with the encoded download URL.\\n  // If $json.data[0].content.download_url does not exist or is empty,\\n  // '<SCR>' is replaced with an empty string.\\n  ($item(\\\"0\\\").$node[\\\"Final Meta\\\"].json[\\\"data\\\"][\\\"0\\\"][\\\"ogImage\\\"]).replace('<SCR>', \\n    $ifEmpty(\\n       $json[\\\"download_url\\\"], \\n      (\\n        // If the image URL or its components don't exist, construct a default image URL based on other JSON values\\n        // Get the \\\"Dark Mode\\\" setting from the API Auth node\\n        \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\")+\\n          \\\".jpg\\\"\\n      )\\n    ).urlEncode()\\n  )\\n  }}\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"allowUnauthorizedCerts\": true\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"Download Favicon\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        4820,\n        10223.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $item(\\\"0\\\").$node[\\\"Final Meta\\\"].json[\\\"data\\\"][\\\"0\\\"][\\\"Favicon\\\"] }}\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"allowUnauthorizedCerts\": true\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"Method 2 - META\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3500,\n        10100\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"ogTitle\",\n              \"stringValue\": \"={{\\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\\n      // The domain name (Host)\\n      // if the image url not found then use long URL host.\\n \\n($ifEmpty($json[\\\"ogTitle\\\"], ($(\\\"API Auth\\\").item.json[\\\"LongURL\\\"])\\n        // This Regex to delete Any https:// or path from the url.\\n        .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n        .replace(/https?:\\\\/\\\\//, \\\"\\\")\\n      ))\\n }}\"\n            },\n            {\n              \"name\": \"ogDescription\",\n              \"stringValue\": \"={{ (($ifEmpty($json.ogDescription , $json[\\\"ogTitle\\\"])) || 'Visit Now') }}\"\n            },\n            {\n              \"name\": \"ogImage\",\n              \"stringValue\": \"={{  // Constructing the base URL for the CDN\\n  \\\"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\\\" +\\n  // Adding the title, URL encoded\\n  ($ifEmpty($json[\\\"ogTitle\\\"], $('API Auth').item.json[\\\"Brand Name\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Adding the description, URL encoded\\n  ($ifEmpty($json[\\\"ogDescription\\\"], $json[\\\"ogTitle\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Handling different OpenGraph Image Modes\\n  (\\n    $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'screenshot',\\n      \\\"<SCR>\\\",\\n      $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'brand',\\n        (\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\") +\\n          (\\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\\\"API Auth\\\").item.json[\\\"Brand Name\\\"].slice||\\n            $json[\\\"ogTitle\\\"].toUpperCase() ||\\n            $json[\\\"ogDescription\\\"].toUpperCase() ||\\n            \\\"Short Link\\\"\\n          ) + '.jpg'\\n        ).urlEncode(),\\n        $ifEmpty(\\n          $json[\\\"ogImage\\\"] || $json[\\\"Image\\\"],\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n            ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n              .replace(\\\"false\\\", \\\"white/\\\")\\n              .replace(\\\"true\\\", \\\"dark/\\\") +\\n            \\\"Default.jpg\\\"\\n        ).urlEncode()\\n      )\\n    )\\n  ) +\\n  \\\"/og.png\\\"\\n}}\"\n            },\n            {\n              \"name\": \"Favicon\",\n              \"stringValue\": \"={{ $ifEmpty($json[\\\"favicon\\\"],\\n(\\n// Get the Favicon url, if not available then generate api request to get it with:\\n\\\"https://favicone.com/\\\" +\\n// Get the image failed to export how from it if not found then use LongURL.\\n$ifEmpty($('API Auth').item.json[\\\"LongURL\\\"],\\n''\\n)\\n// This Regex to delete Any https:// or path from the url.\\n.match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n.replace(/https?:\\\\/\\\\//, \\\"\\\") +\\n// This Parameter to resize the favicon into 32pixels.\\n\\\"?s=32\\\"\\n)) }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"Stop and Error\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        4040,\n        10320\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"META Stack need fix, report to creator through n8n community 'Ans'.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Method 3 - META1\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3620,\n        10283\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"ogTitle\",\n              \"stringValue\": \"={{\\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\\n      // The domain name (Host)\\n      // if the image url not found then use long URL host.\\n \\n($ifEmpty($json[\\\"title\\\"], ($(\\\"API Auth\\\").item.json[\\\"LongURL\\\"])\\n        // This Regex to delete Any https:// or path from the url.\\n        .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n        .replace(/https?:\\\\/\\\\//, \\\"\\\")\\n      ))\\n }}\"\n            },\n            {\n              \"name\": \"ogDescription\",\n              \"stringValue\": \"={{ (($ifEmpty($json.description , $json[\\\"title\\\"])) || 'Visit Now') }}\"\n            },\n            {\n              \"name\": \"ogImage\",\n              \"stringValue\": \"={{  // Constructing the base URL for the CDN\\n  \\\"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\\\" +\\n  // Adding the title, URL encoded\\n  ($ifEmpty($json[\\\"title\\\"], $('API Auth').item.json[\\\"Brand Name\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Adding the description, URL encoded\\n  ($ifEmpty($json[\\\"description\\\"], $json[\\\"title\\\"]).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Handling different OpenGraph Image Modes\\n  (\\n    $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'screenshot',\\n      \\\"<SCR>\\\",\\n      $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'brand',\\n        (\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\") +\\n          (\\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\\\"API Auth\\\").item.json[\\\"Brand Name\\\"].slice(0,18) + '%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C') ||\\n            $json[\\\"title\\\"].toUpperCase() ||\\n            $json[\\\"description\\\"].toUpperCase() ||\\n            \\\"Short Link\\\"\\n          ) + '.jpg'\\n        ).urlEncode(),\\n        $ifEmpty(\\n          $json[\\\"image\\\"],\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n            ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n              .replace(\\\"false\\\", \\\"white/\\\")\\n              .replace(\\\"true\\\", \\\"dark/\\\") +\\n            \\\"Default.jpg\\\"\\n        ).urlEncode()\\n      )\\n    )\\n  ) +\\n  \\\"/og.png\\\"\\n}}\"\n            },\n            {\n              \"name\": \"Favicon\",\n              \"stringValue\": \"={{ $ifEmpty($json[\\\"favicon\\\"],\\n(\\n// Get the Favicon url, if not available then generate api request to get it with:\\n\\\"https://favicone.com/\\\" +\\n// Get the image failed to export how from it if not found then use LongURL.\\n$ifEmpty($('API Auth').item.json[\\\"LongURL\\\"],\\n''\\n)\\n// This Regex to delete Any https:// or path from the url.\\n.match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n.replace(/https?:\\\\/\\\\//, \\\"\\\") +\\n// This Parameter to resize the favicon into 32pixels.\\n\\\"?s=32\\\"\\n)) }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"Method 1 - SCR\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"SCR API\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        4440,\n        9863.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.switchy.io/v1/proxy/proxy\",\n        \"options\": {},\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"=https://api.microlink.io?url={{ $item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"LongURL\\\"].urlEncode() }}&screenshot=true&meta=true&embed=screenshot.url\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0\"\n            },\n            {\n              \"name\": \"Accept\",\n              \"value\": \"application/json, text/plain, */*\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-US,en;q=0.5\"\n            },\n            {\n              \"name\": \"Accept-Encoding\",\n              \"value\": \"gzip, deflate, br\"\n            },\n            {\n              \"name\": \"Origin\",\n              \"value\": \"https://www.switchy.io\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"Referer\",\n              \"value\": \"https://www.switchy.io/\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"same-site\"\n            },\n            {\n              \"name\": \"Sec-GPC\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"Cache-Control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"TE\",\n              \"value\": \"trailers\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"Method 2 - SCR\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Optional \",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        4440,\n        10083.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"https://app.pxl.to/api/public/tools/screenshot\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"destination\",\n              \"value\": \"={{ $item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"LongURL\\\"] }}\"\n            },\n            {\n              \"name\": \"size\",\n              \"value\": \"meta\"\n            },\n            {\n              \"name\": \"width\",\n              \"value\": 1200\n            },\n            {\n              \"name\": \"height\",\n              \"value\": 628\n            },\n            {\n              \"name\": \"full\",\n              \"value\": false\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0\"\n            },\n            {\n              \"name\": \"Accept\",\n              \"value\": \"*/*\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-US,en;q=0.5\"\n            },\n            {\n              \"name\": \"Accept-Encoding\",\n              \"value\": \"gzip, deflate, br\"\n            },\n            {\n              \"name\": \"Origin\",\n              \"value\": \"https://www.pxl.to\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"same-site\"\n            },\n            {\n              \"name\": \"Sec-GPC\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"Cache-Control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"TE\",\n              \"value\": \"trailers\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"Final SCR\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        4660,\n        9883.397766717584\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"includeBinaries\": true\n        },\n        \"aggregate\": \"aggregateAllItemData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Stop And Error\",\n      \"type\": \"n8n-nodes-base.stopAndError\",\n      \"position\": [\n        4660,\n        10063.397766717584\n      ],\n      \"parameters\": {\n        \"errorMessage\": \"SCR Stack need fix, report to creator through n8n community 'Ans'.\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Shortened URL\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        5420,\n        10043.397766717584\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"Shortened URL\",\n              \"value\": \"=https://{{ $json.body.domain }}/{{ $json.body.id }}\"\n            },\n            {\n              \"name\": \"OG Method\",\n              \"value\": \"={{ $('API Auth').item.json['OpenGraph Image Mode'] }}\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"n8n Form Trigger\",\n      \"type\": \"n8n-nodes-base.formTrigger\",\n      \"position\": [\n        3140,\n        9183\n      ],\n      \"webhookId\": \"4d7636c2-aa25-4a90-8f9c-e421166d21ab\",\n      \"parameters\": {\n        \"path\": \"switchy\",\n        \"formTitle\": \"Switchy URL Shortener\",\n        \"formFields\": {\n          \"values\": [\n            {\n              \"fieldType\": \"textarea\",\n              \"fieldLabel\": \"What's your Switchy API Key\",\n              \"requiredField\": true\n            },\n            {\n              \"fieldLabel\": \"What's Your LongURL ?\",\n              \"requiredField\": true\n            },\n            {\n              \"fieldType\": \"dropdown\",\n              \"fieldLabel\": \"What's OG Image method you like ?\",\n              \"fieldOptions\": {\n                \"values\": [\n                  {\n                    \"option\": \"Screenshot\"\n                  },\n                  {\n                    \"option\": \"Source\"\n                  },\n                  {\n                    \"option\": \"brand\"\n                  }\n                ]\n              },\n              \"requiredField\": true\n            },\n            {\n              \"fieldType\": \"dropdown\",\n              \"fieldLabel\": \"With your brand, Do you Like dark mode ?\",\n              \"fieldOptions\": {\n                \"values\": [\n                  {\n                    \"option\": \"no\"\n                  },\n                  {\n                    \"option\": \"yes\"\n                  }\n                ]\n              },\n              \"requiredField\": true\n            },\n            {\n              \"fieldType\": \"dropdown\",\n              \"fieldLabel\": \"scan Long URLs from virus/Phishing ? (Shorting a phishing URL will ban your domain from SEO)\",\n              \"fieldOptions\": {\n                \"values\": [\n                  {\n                    \"option\": \"No, Skip Scan part.\"\n                  },\n                  {\n                    \"option\": \"Yes, Scan all Links.\"\n                  }\n                ]\n              },\n              \"requiredField\": true\n            }\n          ]\n        },\n        \"responseMode\": \"responseNode\",\n        \"formDescription\": \"This is demo simple of Switchy URL shortener.\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        3140,\n        9603.397766717584\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"respondWith\": \"text\",\n        \"responseBody\": \"={{ $json['Shortened URL'] }}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3080,\n        9063.397766717584\n      ],\n      \"parameters\": {\n        \"width\": 365.4663416508872,\n        \"height\": 698.8834639756606,\n        \"content\": \"## URL准备与扫描\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Scan URL (Community)\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        3900,\n        9163\n      ],\n      \"parameters\": {\n        \"url\": \"https://safeweb.norton.com/safeweb/sites/v1/details\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"response\": {\n            \"response\": {}\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\\\/\\\\/)?(?:[^@\\\\n]+@)?(?:www\\\\.)?([^:\\\\/\\\\n?]+)/im)[1] }}\"\n            },\n            {\n              \"name\": \"insert\",\n              \"value\": \"0\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"application/json, text/plain, */*\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-US,en;q=0.5\"\n            },\n            {\n              \"name\": \"Accept-Encoding\",\n              \"value\": \"gzip, deflate, br\"\n            },\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"Referer\",\n              \"value\": \"https://safeweb.norton.com/\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"same-origin\"\n            },\n            {\n              \"name\": \"Sec-GPC\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"Cache-Control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"Cache-Control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"TE\",\n              \"value\": \"trailers\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3460,\n        9063.397766717584\n      ],\n      \"parameters\": {\n        \"width\": 1102.2526655123636,\n        \"height\": 698.8834639756606,\n        \"content\": \"## URL准备\\n我们正在使用这个界面来控制一切。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3840,\n        9063\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 732.5923943084913,\n        \"height\": 698.8834639756606,\n        \"content\": \"![安全网络](https://static.nortoncdn.com/safeweb/prod/417315/assets/images/logo/norton_logo.svg)  \\n![安全网络](https://static.nortoncdn.com/safeweb/prod/417315/assets/images/logo/safeweb_logo.svg)  \\n![安全网络](https://upload.wikimedia.org/wikipedia/commons/3/35/Bitdefender_logo.svg)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        4060,\n        9160\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"4b55880c-53dc-47d3-acc5-ecf5166bcce5\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.rating }}\",\n              \"rightValue\": \"g\"\n            },\n            {\n              \"id\": \"c412970c-402b-4ae1-ad36-385ecc563d7a\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.rating }}\",\n              \"rightValue\": \"r\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"If1\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        3900,\n        9340\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"4b55880c-53dc-47d3-acc5-ecf5166bcce5\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gte\"\n              },\n              \"leftValue\": \"={{ $('Scan URL (Community)').item.json.reviewCount }}\",\n              \"rightValue\": 1\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Check Reviews (Community)\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        3900,\n        9520\n      ],\n      \"parameters\": {\n        \"url\": \"=https://safeweb.norton.com/safeweb/sites/v1/{{ $('Scan URL (Community)').item.json.id }}/reviews\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"response\": {\n            \"response\": {}\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"sendQuery\": true,\n        \"sendHeaders\": true,\n        \"queryParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"sortType\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"pageNo\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"pageSize\",\n              \"value\": \"2\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"application/json, text/plain, */*\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-US,en;q=0.5\"\n            },\n            {\n              \"name\": \"Accept-Encoding\",\n              \"value\": \"gzip, deflate, br\"\n            },\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"Referer\",\n              \"value\": \"=https://safeweb.norton.com/report?url={{ $('Scan URL (Community)').item.json.url }}\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"same-origin\"\n            },\n            {\n              \"name\": \"Sec-GPC\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"Cache-Control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"TE\",\n              \"value\": \"trailers\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"Norton\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        4060,\n        9340\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"Risk Rate\",\n              \"stringValue\": \"={{ $('Scan URL (Community)').item.json.rating }}\"\n            },\n            {\n              \"name\": \"Community Rating\",\n              \"stringValue\": \"={{ $('Scan URL (Community)').item.json.userRating+'\\\\/5' }}\"\n            },\n            {\n              \"name\": \"Ban\",\n              \"type\": \"booleanValue\",\n              \"booleanValue\": \"={{ $('Scan URL (Community)').item.json.globalRestriction }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"bitdefender\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        4420,\n        9343.397766717584\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"safe\",\n              \"type\": \"booleanValue\",\n              \"booleanValue\": \"={{ $json.safe.is }}\"\n            },\n            {\n              \"name\": \"blocklist score\",\n              \"stringValue\": \"={{ $item(\\\"0\\\").$node[\\\"HTML\\\"].json[\\\"result\\\"] }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"HTML\",\n      \"type\": \"n8n-nodes-base.html\",\n      \"position\": [\n        4260,\n        9343.397766717584\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"operation\": \"extractHtmlContent\",\n        \"extractionValues\": {\n          \"values\": [\n            {\n              \"key\": \"result\",\n              \"cssSelector\": \".label\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"name\": \"(Fraud Check)\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"notes\": \"Bitdefender\",\n      \"position\": [\n        4260,\n        9163.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"https://nimbus.bitdefender.net/url/fraud_info\",\n        \"method\": \"POST\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"response\": {\n            \"response\": {}\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"url\",\n              \"value\": \"={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\\\/\\\\/)?(?:[^@\\\\n]+@)?(?:www\\\\.)?([^:\\\\/\\\\n?]+)/im)[1] }}\"\n            }\n          ]\n        },\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"*/*\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-US,en;q=0.5\"\n            },\n            {\n              \"name\": \"Accept-Encoding\",\n              \"value\": \"gzip, deflate, br\"\n            },\n            {\n              \"name\": \"Referer\",\n              \"value\": \"https://trafficlight.bitdefender.com/\"\n            },\n            {\n              \"name\": \"Origin\",\n              \"value\": \"https://trafficlight.bitdefender.com\"\n            },\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"empty\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"cors\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"cross-site\"\n            },\n            {\n              \"name\": \"Sec-GPC\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"Cache-Control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"TE\",\n              \"value\": \"trailers\"\n            }\n          ]\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"(Others)\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        4420,\n        9163.397766717584\n      ],\n      \"parameters\": {\n        \"url\": \"=https://www.urlvoid.com/scan/{{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\\\/\\\\/)?(?:[^@\\\\n]+@)?(?:www\\\\.)?([^:\\\\/\\\\n?]+)/im)[1] }}\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"response\": {\n            \"response\": {}\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Accept\",\n              \"value\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\"\n            },\n            {\n              \"name\": \"Accept-Language\",\n              \"value\": \"en-US,en;q=0.5\"\n            },\n            {\n              \"name\": \"Accept-Encoding\",\n              \"value\": \"gzip, deflate, br\"\n            },\n            {\n              \"name\": \"Referer\",\n              \"value\": \"https://www.urlvoid.com/\"\n            },\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\"\n            },\n            {\n              \"name\": \"DNT\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Connection\",\n              \"value\": \"keep-alive\"\n            },\n            {\n              \"name\": \"Upgrade-Insecure-Requests\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Dest\",\n              \"value\": \"document\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Mode\",\n              \"value\": \"navigate\"\n            },\n            {\n              \"name\": \"Sec-Fetch-Site\",\n              \"value\": \"same-origin\"\n            },\n            {\n              \"name\": \"Sec-Fetch-User\",\n              \"value\": \"?1\"\n            },\n            {\n              \"name\": \"Sec-GPC\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"Pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"Cache-Control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"TE\",\n              \"value\": \"trailers\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"If2\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        4260,\n        9520\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"looseTypeValidation\": true\n        },\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"loose\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"c409582d-b8b3-409f-a7af-7dcccb6f6beb\",\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"lte\"\n              },\n              \"leftValue\": \"={{ ($json.result.match(/.*\\\\//)[0].replace('/','')).toDecimalNumber() }}\",\n              \"rightValue\": \"=5\"\n            },\n            {\n              \"id\": \"f27aa777-2b4e-4bb9-8d0b-0de58283cc01\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $('If').item.json.rating }}\",\n              \"rightValue\": \"g\"\n            },\n            {\n              \"id\": \"cbf7378d-c023-4de4-897d-e8c2e14bc08b\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $('If').item.json.rating }}\",\n              \"rightValue\": \"r\"\n            },\n            {\n              \"id\": \"b240a351-6b68-4eac-a19e-383c44bbf721\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.safe }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"set unsafe\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        4420,\n        9540\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"Shortened URL\",\n              \"stringValue\": \"=Unsafe / Skipped getting {{ $item(\\\"0\\\").$node[\\\"HTML\\\"].json[\\\"result\\\"] }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"If3\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        3600,\n        9380\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"4b55880c-53dc-47d3-acc5-ecf5166bcce5\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"startsWith\"\n              },\n              \"leftValue\": \"={{ $json['Scan LongURL'] }}\",\n              \"rightValue\": \"Yes,\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"PhishTank\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        4060,\n        9520\n      ],\n      \"parameters\": {\n        \"url\": \"=https://checkurl.phishtank.com/checkurl/index.php?url={{ $('API Auth').item.json.LongURL.match(/^(?:https?:\\\\/\\\\/)?(?:[^@\\\\n]+@)?(?:www\\\\.)?([^:\\\\/\\\\n?]+)/im)[1] }}\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          },\n          \"allowUnauthorizedCerts\": true\n        },\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"User-Agent\",\n              \"value\": \"phishtank/anestooo\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.1\n    },\n    {\n      \"name\": \"IF GH invaild\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        3640,\n        10100\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"ignoreCase\": true\n        },\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": false,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"3c8cc92c-7232-4e30-b06b-3d8a57d80303\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.ogTitle }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"14329807-37fc-4265-beac-fff5bc4dda23\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.ogDescription }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"355ab988-c784-4fc3-8991-f5b0ab4b732a\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.ogImage }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"1f85c367-6270-42c2-b109-0a66ece133dc\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $json.ogTitle + $json.ogDescription }}\",\n              \"rightValue\": \"Error\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Method 4 - META\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3840,\n        10320\n      ],\n      \"parameters\": {\n        \"fields\": {\n          \"values\": [\n            {\n              \"name\": \"ogTitle\",\n              \"stringValue\": \"={{\\n      // We used IFempty of title then use descraption, if the title giving no title output value then replace with descraption value, if no value for both then use empty value output.\\n      // The domain name (Host)\\n      // if the image url not found then use long URL host.\\n \\n($ifEmpty($json[\\\"title\\\"].replace('Error',$('API Auth').item.json[\\\"Brand Name\\\"].replaceAll('  ','')), ($(\\\"API Auth\\\").item.json[\\\"LongURL\\\"])\\n        // This Regex to delete Any https:// or path from the url.\\n        .match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n        .replace(/https?:\\\\/\\\\//, \\\"\\\")\\n      ))\\n }}\"\n            },\n            {\n              \"name\": \"ogDescription\",\n              \"stringValue\": \"={{ (($ifEmpty($json.description , $json[\\\"title\\\"])) || 'Visit Now') }}\"\n            },\n            {\n              \"name\": \"ogImage\",\n              \"stringValue\": \"={{  // Constructing the base URL for the CDN\\n  \\\"https://ogcdn.net/6064b869-74ed-4eb9-b76c-0b701ffe7e6b/v4/\\\" +\\n  // Adding the title, URL encoded\\n  ($ifEmpty($json[\\\"title\\\"].replace('Error',''), $('API Auth').item.json[\\\"Brand Name\\\"].replaceAll('  ','')).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Adding the description, URL encoded\\n  ($ifEmpty($json[\\\"description\\\"].replace('No description',''), $json[\\\"title\\\"].replace('Error',$('API Auth').item.json[\\\"Brand Name\\\"].replaceAll('  ',''))).urlEncode() || \\\"\\\") +\\n  \\\"/\\\" +\\n  // Handling different OpenGraph Image Modes\\n  (\\n    $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'screenshot',\\n      \\\"<SCR>\\\",\\n      $if($('API Auth').item.json[\\\"OpenGraph Image Mode\\\"] === 'brand',\\n        (\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n          ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n            .replace(\\\"false\\\", \\\"white/\\\")\\n            .replace(\\\"true\\\", \\\"dark/\\\") +\\n          (\\n            (`%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20%E2%80%8C%20`+ $(\\\"API Auth\\\").item.json[\\\"Brand Name\\\"].slice||\\n            $json[\\\"title\\\"].toUpperCase() ||\\n            $json[\\\"description\\\"].toUpperCase() ||\\n            \\\"Short Link\\\"\\n          ) + '.jpg'\\n        ).urlEncode(),\\n        $ifEmpty(\\n          $json[\\\"image\\\"],\\n          \\\"https://cdn.statically.io/og/theme=\\\" +\\n            ($item(\\\"0\\\").$node[\\\"API Auth\\\"].json[\\\"Dark Mode ?\\\"] + \\\"\\\")\\n              .replace(\\\"false\\\", \\\"white/\\\")\\n              .replace(\\\"true\\\", \\\"dark/\\\") +\\n            \\\"Default.jpg\\\"\\n        ).urlEncode()\\n      )\\n    )\\n  ) +\\n  \\\"/og.png\\\"\\n}}\"\n            },\n            {\n              \"name\": \"Favicon\",\n              \"stringValue\": \"={{ $ifEmpty($json[\\\"favicon\\\"],\\n(\\n// Get the Favicon url, if not available then generate api request to get it with:\\n\\\"https://favicone.com/\\\" +\\n// Get the image failed to export how from it if not found then use LongURL.\\n$ifEmpty($('API Auth').item.json[\\\"LongURL\\\"],\\n''\\n)\\n// This Regex to delete Any https:// or path from the url.\\n.match(/https?:\\\\/\\\\/[^\\\\/]+/)[0]\\n.replace(/https?:\\\\/\\\\//, \\\"\\\") +\\n// This Parameter to resize the favicon into 32pixels.\\n\\\"?s=32\\\"\\n)) }}\"\n            }\n          ]\n        },\n        \"include\": \"none\",\n        \"options\": {}\n      },\n      \"typeVersion\": 3.2\n    },\n    {\n      \"name\": \"IF dub invaild\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        3380,\n        10300\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"ignoreCase\": true\n        },\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": false,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"or\",\n          \"conditions\": [\n            {\n              \"id\": \"3c8cc92c-7232-4e30-b06b-3d8a57d80303\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.title }}\",\n              \"rightValue\": \"No title\"\n            },\n            {\n              \"id\": \"14329807-37fc-4265-beac-fff5bc4dda23\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.description }}\",\n              \"rightValue\": \"No description\"\n            },\n            {\n              \"id\": \"355ab988-c784-4fc3-8991-f5b0ab4b732a\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.image }}\",\n              \"rightValue\": \"No image\"\n            },\n            {\n              \"id\": \"1f85c367-6270-42c2-b109-0a66ece133dc\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              },\n              \"leftValue\": \"={{ $json.title + $json.description }}\",\n              \"rightValue\": \"Error\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        4580,\n        9060\n      ],\n      \"parameters\": {\n        \"width\": 1000.9922558475889,\n        \"height\": 700.251847890049,\n        \"content\": \"# 💡温馨提示：\\n- ### **本工作流适用于任何URL缩短服务，只需更换对应SaaS平台的API接口即可。**\\n- ### **请勿用于垃圾信息传播，当前使用的API多为临时解决方案，不适用于\\\"大型应用场景\\\"。**\\n- ### **滥用API将导致我无法继续免费分享资源。请注意，本工作流不适用于生产环境。**\\n- ### **不包含1对1技术支持，有任何问题请发布到[社区论坛](https://community.n8n.io)并@Nskha账号。**\\n- ### **获取最新模板更新请关注[Telegram频道](https://nodemation.t.me)。**\\n\\n[![N8N创作者主页 - Nskha](https://cdn.statically.io/gh/Automations-Project/n8n-templates/main/stats.min.svg)](https://n8n.io/creators/nskha)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": \"false\",\n  \"pinData\": {},\n  \"settings\": {\n    \"timezone\": \"Europe/Istanbul\",\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"errorWorkflow\": \"\",\n    \"executionOrder\": \"v1\",\n    \"executionTimeout\": 600,\n    \"saveManualExecutions\": true,\n    \"saveExecutionProgress\": true\n  },\n  \"staticData\": \"\",\n  \"connections\": {\n    \"If\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"PhishTank\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"If1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Reviews (Community)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Norton\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenGraph API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"set unsafe\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Scan URL (Community)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"OpenGraph API\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"bitdefender\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"CREATE\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF Slug available\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Norton\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"PhishTank\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"UPDATE\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Shortened URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"(Others)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"API Auth\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Final SCR\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Host Screenshot\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"PhishTank\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"(Fraud Check)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Final Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"CREATE\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Final Meta\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If - Enable ScreenShots (yes to enable)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"set unsafe\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split In Batches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download final OG\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Headers\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parse headers\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Meta tags Scraper - dub.sh\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"bitdefender\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Host Favicon\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Final Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Host OGImage\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download Favicon\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"(Fraud Check)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"(Others)\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF GH invaild\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Meta tags Scraper - dub.sh\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Final Meta\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenGraph API\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF OpenGraph invaild\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Headers\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parse headers\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Method 2 - META\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Shortened URL\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split In Batches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF dub invaild\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Method 4 - META\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Method 3 - META1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Method 1 - SCR\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Final SCR\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Method 2 - SCR\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Method 2 - SCR\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Convert to File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Stop And Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Convert to File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Final SCR\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Host Screenshot\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Method 1 - META\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Final Meta\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Method 2 - META\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF GH invaild\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Method 4 - META\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Final Meta\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download Favicon\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Host Favicon\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Method 3 - META1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Final Meta\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split In Batches\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"API Auth\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"n8n Form Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split In Batches\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download final OG\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Host OGImage\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF Slug available\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Shortened URL\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"UPDATE\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"IF OpenGraph invaild\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Method 1 - META\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Headers\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Scan URL (Community)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Reviews (Community)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Norton\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Meta tags Scraper - dub.sh\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"IF dub invaild\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Stop and Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If - Enable ScreenShots (yes to enable)\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Method 1 - SCR\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}