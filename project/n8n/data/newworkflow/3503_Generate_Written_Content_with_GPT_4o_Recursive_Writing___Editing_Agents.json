{
  "url": "https://n8n.io/workflows/3503-generate-written-content-with-gpt-4o-recursive-writing-and-editing-agents/",
  "title": "Generate Written Content with GPT-4o Recursive Writing & Editing Agents",
  "author": "Matty Reed",
  "publish_date": "Last update 11 days ago",
  "publish_date_absolute": "2025-05-15",
  "categories": [
    {
      "name": "AI"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"id\":\"UnFtEvTPouN6XIIH\",\"meta\":{\"instanceId\":\"ea11c547d31842d8c1ffb2f9490761ea576cf90dbdb1ce86a951bf99131d1a44\",\"templateCredsSetupCompleted\":true},\"name\":\"Recursive Multi-Agent TEMPLATE\",\"tags\":[],\"nodes\":[{\"id\":\"84b115d5-0c47-4bc9-8997-e45c16e3aa18\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[40,0],\"webhookId\":\"037b5b5d-7a59-4812-8327-42f9c7812d5d\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"085fd153-5564-4920-b278-e5fc93f32134\",\"name\":\"Window Buffer Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[920,280],\"parameters\":{\"sessionKey\":\"={{ $('When chat message received').item.json.sessionId }}\",\"sessionIdType\":\"customKey\",\"contextWindowLength\":10},\"typeVersion\":1.3},{\"id\":\"0220fe2a-8e8e-4d11-803e-b942f1cf16c5\",\"name\":\"set variables\",\"type\":\"n8n-nodes-base.set\",\"position\":[1380,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"25fcda79-c515-4e2e-bfc0-3b13259c33a0\",\"name\":\"status\",\"type\":\"string\",\"value\":\"={{ $json.output.status }}\"},{\"id\":\"26f212df-ed09-4372-ad2f-e069698ab33c\",\"name\":\"edits\",\"type\":\"string\",\"value\":\"={{ $json.output.edits }}\"}]}},\"typeVersion\":3.4},{\"id\":\"0dc0e194-4129-42e3-aedd-6fbd6b875338\",\"name\":\"chatInput\",\"type\":\"n8n-nodes-base.set\",\"position\":[260,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"709fb115-0654-48f6-bbdd-d0661b1135ba\",\"name\":\"chatInput\",\"type\":\"string\",\"value\":\"={{ $json.chatInput }}\"}]}},\"typeVersion\":3.4},{\"id\":\"426831d6-2ddb-4ede-99a7-c0c504e6687f\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[1200,280],\"parameters\":{\"schemaType\":\"manual\",\"inputSchema\":\"{\\n\\t\\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n\\t\\t\\\"status\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t},\\n\\t\\t\\\"edits\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t}\\n\\t}\\n}\"},\"typeVersion\":1.2},{\"id\":\"4be8a98c-c01f-4e8c-bec7-c6ef4119c392\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[680,280],\"parameters\":{\"model\":\"gpt-4o\",\"options\":{}},\"credentials\":{\"openAiApi\":{\"id\":\"93qOKf12nDGJSW30\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.1},{\"id\":\"b22dd35c-5df2-4966-a7b6-4b146c5d9a09\",\"name\":\"handle edits\",\"type\":\"n8n-nodes-base.code\",\"position\":[460,0],\"parameters\":{\"jsCode\":\"let edits = \\\"\\\";\\ntry {\\n\\t// Try to retrieve the edits from the node named \\\"Edit Fields\\\"\\n\\tedits =  $node[\\\"set variables\\\"].json[\\\"edits\\\"] || \\\"\\\";\\n} catch (err) {\\n\\t// If the node hasn't executed or its data isn't available, default to empty string\\n\\tedits = \\\"\\\";\\n}\\nreturn { edits };\"},\"typeVersion\":2},{\"id\":\"85524870-798a-4561-a227-06c8f0aa3c26\",\"name\":\"If Status Complete\",\"type\":\"n8n-nodes-base.if\",\"position\":[1600,0],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"d2c4ff3a-1674-4edf-b0a0-153543f52900\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $('Editing Agent').item.json.output.status }}\",\"rightValue\":\"complete\"}]}},\"typeVersion\":2.2},{\"id\":\"e28c4317-1e16-445f-8119-7d53937b651b\",\"name\":\"Writing Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[660,0],\"parameters\":{\"text\":\"=Always review chat history.\\n\\nWrite a blurb based on my input topic:\\n{{ $('chatInput').item.json.chatInput }}\\n\\nIf there are any suggested edits, make sure to incorporated them into the blurb:\\n{{ $json.edits }}\\n\\nONLY OUTPUT THE BLURB, NO ADDITIONAL WORDS. \",\"options\":{\"systemMessage\":\"=You are a writer. Write a short blurb about the topic given to you by the user. \"},\"promptType\":\"define\"},\"typeVersion\":1.7},{\"id\":\"fe9d9f32-8be3-49a7-8699-322192e16474\",\"name\":\"Editing Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"maxTries\":5,\"position\":[1020,0],\"parameters\":{\"text\":\"=You are an editor. \\n\\nReview the input and recommend specific edits to improve the writing. \\n\\nYou are working with a writing agent that should implement your edits. \\n\\nHere are the variables that you output and what they mean:\\n- status: this is either \\\"complete\\\" or \\\"incomplete\\\" output string. Once the writing agent implements your edits, you should set \\\"status\\\" = \\\"complete\\\". If this is the first time you've reviewed their work, status should be set to \\\"incomplete\\\". If the writing agent did not correctly implement your edits, you should set status to \\\"incomplete\\\".\\n- edits: this is your specific suggested edits. The writing agent will be able to see these edits and update the text to incorporate the edits.\\n\\nUse the structured output parser and output clean JSON in this format (example):\\n{\\n\\\"status\\\": \\\"complete\\\",\\n\\\"edits\\\": \\\"The writing agent has successfully implemented all the suggested edits. The text is now concise, informative, and focused on the main point while providing a brief introduction to AI. No further edits are necessary at this time.\\\"\\n}\\n\\nDO NOT INCLUDE ANY OTHER TEXT BESIDES THE JSON OUTPUT.\\n\\nHere is the input text from the writing agent:\\n{{ $json.output }}\",\"options\":{},\"promptType\":\"define\",\"hasOutputParser\":true},\"retryOnFail\":false,\"typeVersion\":1.7},{\"id\":\"e77541dd-0774-4545-a846-0106aa79fbf5\",\"name\":\"chatOutput\",\"type\":\"n8n-nodes-base.set\",\"position\":[1820,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"753c404e-fce4-4173-95d2-6fde9c543d5f\",\"name\":\"output\",\"type\":\"string\",\"value\":\"={{ $('Writing Agent').first().json.output }}\"}]}},\"typeVersion\":3.4},{\"id\":\"549707c8-55db-4e8e-aecc-68615b6034ee\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[600,-160],\"parameters\":{\"color\":4,\"width\":340,\"height\":320,\"content\":\"## Writing Agent\\nThis agent writes and rewrites based on feedback from the editing agent.\"},\"typeVersion\":1},{\"id\":\"67c3ebb8-6d81-4add-a882-07fd0cc86f50\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[980,-160],\"parameters\":{\"color\":5,\"width\":340,\"height\":320,\"content\":\"## Editing Agent\\nThis agent suggest edits to improve the writing output of the writing agent. It then evaluates whether the edits were incorporated into the writing.\"},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"8b9969b0-ae7b-45c0-9f41-72ea972d67cb\",\"connections\":{\"chatInput\":{\"main\":[[{\"node\":\"handle edits\",\"type\":\"main\",\"index\":0}]]},\"handle edits\":{\"main\":[[{\"node\":\"Writing Agent\",\"type\":\"main\",\"index\":0}]]},\"Editing Agent\":{\"main\":[[{\"node\":\"set variables\",\"type\":\"main\",\"index\":0}]]},\"Writing Agent\":{\"main\":[[{\"node\":\"Editing Agent\",\"type\":\"main\",\"index\":0}]]},\"set variables\":{\"main\":[[{\"node\":\"If Status Complete\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Writing Agent\",\"type\":\"ai_languageModel\",\"index\":0},{\"node\":\"Editing Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"If Status Complete\":{\"main\":[[{\"node\":\"chatOutput\",\"type\":\"main\",\"index\":0}],[{\"node\":\"handle edits\",\"type\":\"main\",\"index\":0}]]},\"Window Buffer Memory\":{\"ai_memory\":[[{\"node\":\"Editing Agent\",\"type\":\"ai_memory\",\"index\":0},{\"node\":\"Writing Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Editing Agent\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"chatInput\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "# Who is this for?\n\nContent creators, writers, and automation enthusiasts experimenting with recursive AI workflows for content generation and refinement. Ideal for those exploring AI agents that collaborate in cycles of writing and editing.\n\n# What problem does this solve?\n\nThis template introduces a fully automated, recursive writing‑editing loop using multi‑agent collaboration. A “Writing Agent” generates content based on an input topic. An “Editing Agent” reviews it, suggests improvements, and determines whether the work is complete. The loop continues until the editor is satisfied—allowing for high‑quality, iterative AI‑assisted writing with minimal human input.\n\n# How it works\n\nThis template is a foundational setup to help you build custom recursive writing workflows:\n\n  1. **Trigger** : Activated by an n8n chat message containing a topic. You can customize this to work with webhooks, forms, or other input sources.\n\n  2. **Edit Handler** : A code node checks for previous edits and sets a default empty string if none are found.\n\n  3. **Writing Agent** : Generates a blurb based on the topic and any edits. Customize the prompt in this node by editing the user/system instructions to fit your tone, domain, or style preferences.\n\n  4. **Editing Agent** : Suggests specific edits and outputs a structured JSON object:\n         \n         {\n           \"status\": \"incomplete\",\n           \"edits\": \"Replace passive voice with active voice in the second sentence. Clarify the main idea in the opening line.\"\n         }\n         \n\nYou can adjust the JSON format or editing criteria in the prompt field. Customize the prompt in this node by editing the user/system instructions to fit your tone, domain, or style preferences.\n\n  5. **Recursive Loop** : If the status is “incomplete,” the edits are passed back to the Writing Agent, which revises the blurb.\n\n  6. **Completion** : Once the Editing Agent outputs a status of “complete,” the workflow ends, and the final blurb is returned to the n8n chat.\n\n\n\n\n# Setup Steps\n\n  1. **Import the Template** into your n8n workspace.\n  2. **Configure API Credentials** : Link your OpenAI API key (or your preferred LLM like Claude or Gemini) in the credentials section.\n  3. **Customize the Prompts** (Optional but recommended): \n     * In the **Writing Agent** , you can instruct it to mimic a specific tone, format, or genre.\n     * In the **Editing Agent** , specify your editing standards (e.g., concise, persuasive, technical).\n     * Modify the JSON output structure in the **Structured Output Parser** node if needed.\n  4. **Test and Iterate** : Run a test by sending a topic via the chat trigger and observe the loop behavior.\n\n\n\n# Example Output\n\n**Input Topic** : “The future of remote work”  \n**Final Blurb** : “Remote work is here to stay. As companies embrace flexible setups, productivity and employee satisfaction are reaching new highs. The challenge now is to build culture and collaboration tools that keep up.”\n\nThis template offers a powerful starting point for recursive AI writing. Expand it with additional agents, tone shifts, formatting layers, or sentiment analysis as needed.\n",
  "crawled_at": "2025-05-26T04:41:31.436929",
  "readme_zh": "# 适用对象\n\n本模板专为内容创作者、文字工作者及自动化流程爱好者设计，适用于尝试通过递归式AI工作流进行内容生成与优化的场景。特别适合那些探索AI智能体在写作-编辑循环中协同工作的实验者。\n\n# 解决痛点\n\n该模板通过多智能体协作实现全自动的递归式写作-编辑循环：\n- **写作智能体**根据输入主题生成初稿\n- **编辑智能体**审阅内容后提出改进建议并判断完成度\n当编辑认为未达标时，系统会自动开启新一轮写作-编辑循环，最终在极少人工干预下产出经过多轮优化的高质量内容。\n\n# 运作原理\n\n这个基础模板可帮助构建自定义递归写作流程：\n\n1. **触发机制**：通过n8n聊天消息接收主题触发（可替换为网页钩子/表单等其他输入源）\n\n2. **编辑处理器**：代码节点检查历史编辑记录（首次运行时自动设为空字符串）\n\n3. **写作智能体**：根据主题和修改意见生成内容（可通过修改用户/系统指令自定义语气、领域或风格）\n\n4. **编辑智能体**：输出结构化JSON建议：\n```json\n{\n  \"status\": \"incomplete\",\n  \"edits\": \"将第二句改为主动语态，首行需更清晰表达核心观点\"\n}\n```\n（可在提示词中调整JSON格式或编辑标准）\n\n5. **递归循环**：若状态为\"incomplete\"，修改意见将传回写作智能体进行修订\n\n6. **完成输出**：当编辑返回\"complete\"状态时，最终文本将通过n8n聊天界面输出\n\n# 配置步骤\n\n1. **导入模板**至n8n工作区\n2. **配置API凭证**：在凭证管理中添加OpenAI API密钥（或Claude/Gemini等其他大模型）\n3. **定制提示词**（可选但建议）：\n   - **写作智能体**：设置特定文风、格式或体裁要求\n   - **编辑智能体**：定义编辑标准（如简洁度/说服力/专业性）\n   - 按需调整**结构化输出解析器**节点的JSON格式\n4. **测试验证**：通过聊天触发器发送主题，观察循环运作效果\n\n# 示例输出\n\n**输入主题**：\"远程办公的未来\"  \n**最终成稿**：\"远程办公已成为不可逆的趋势。随着企业采用弹性工作制，生产效率和员工满意度均创新高。当前挑战在于构建与之匹配的企业文化和协同工具体系。\"\n\n本模板为递归式AI写作提供了强大基础，后续可扩展更多智能体、语态转换、格式优化层或情感分析模块。",
  "title_zh": "使用GPT-4o递归写作与编辑代理生成书面内容",
  "publish_date_zh": "上次更新于11天前",
  "workflow_json_zh": "{\n  \"id\": \"UnFtEvTPouN6XIIH\",\n  \"meta\": {\n    \"instanceId\": \"ea11c547d31842d8c1ffb2f9490761ea576cf90dbdb1ce86a951bf99131d1a44\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Recursive Multi-Agent TEMPLATE\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"84b115d5-0c47-4bc9-8997-e45c16e3aa18\",\n      \"name\": \"When chat message received\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        40,\n        0\n      ],\n      \"webhookId\": \"037b5b5d-7a59-4812-8327-42f9c7812d5d\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"085fd153-5564-4920-b278-e5fc93f32134\",\n      \"name\": \"Window Buffer Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        920,\n        280\n      ],\n      \"parameters\": {\n        \"sessionKey\": \"={{ $('When chat message received').item.json.sessionId }}\",\n        \"sessionIdType\": \"customKey\",\n        \"contextWindowLength\": 10\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"0220fe2a-8e8e-4d11-803e-b942f1cf16c5\",\n      \"name\": \"set variables\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1380,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"25fcda79-c515-4e2e-bfc0-3b13259c33a0\",\n              \"name\": \"status\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.status }}\"\n            },\n            {\n              \"id\": \"26f212df-ed09-4372-ad2f-e069698ab33c\",\n              \"name\": \"edits\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.output.edits }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"0dc0e194-4129-42e3-aedd-6fbd6b875338\",\n      \"name\": \"chatInput\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        260,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"709fb115-0654-48f6-bbdd-d0661b1135ba\",\n              \"name\": \"chatInput\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.chatInput }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"426831d6-2ddb-4ede-99a7-c0c504e6687f\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1200,\n        280\n      ],\n      \"parameters\": {\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n\\t\\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n\\t\\t\\\"status\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t},\\n\\t\\t\\\"edits\\\": {\\n\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t}\\n\\t}\\n}\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"4be8a98c-c01f-4e8c-bec7-c6ef4119c392\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        680,\n        280\n      ],\n      \"parameters\": {\n        \"model\": \"gpt-4o\",\n        \"options\": {}\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"93qOKf12nDGJSW30\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"b22dd35c-5df2-4966-a7b6-4b146c5d9a09\",\n      \"name\": \"handle edits\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        460,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let edits = \\\"\\\";\\ntry {\\n\\t// Try to retrieve the edits from the node named \\\"Edit Fields\\\"\\n\\tedits =  $node[\\\"set variables\\\"].json[\\\"edits\\\"] || \\\"\\\";\\n} catch (err) {\\n\\t// If the node hasn't executed or its data isn't available, default to empty string\\n\\tedits = \\\"\\\";\\n}\\nreturn { edits };\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"85524870-798a-4561-a227-06c8f0aa3c26\",\n      \"name\": \"If Status Complete\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1600,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"d2c4ff3a-1674-4edf-b0a0-153543f52900\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $('Editing Agent').item.json.output.status }}\",\n              \"rightValue\": \"complete\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"e28c4317-1e16-445f-8119-7d53937b651b\",\n      \"name\": \"Writing Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        660,\n        0\n      ],\n      \"parameters\": {\n        \"text\": \"=Always review chat history.\\n\\nWrite a blurb based on my input topic:\\n{{ $('chatInput').item.json.chatInput }}\\n\\nIf there are any suggested edits, make sure to incorporated them into the blurb:\\n{{ $json.edits }}\\n\\nONLY OUTPUT THE BLURB, NO ADDITIONAL WORDS. \",\n        \"options\": {\n          \"systemMessage\": \"=You are a writer. Write a short blurb about the topic given to you by the user. \"\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"fe9d9f32-8be3-49a7-8699-322192e16474\",\n      \"name\": \"Editing Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"maxTries\": 5,\n      \"position\": [\n        1020,\n        0\n      ],\n      \"parameters\": {\n        \"text\": \"=You are an editor. \\n\\nReview the input and recommend specific edits to improve the writing. \\n\\nYou are working with a writing agent that should implement your edits. \\n\\nHere are the variables that you output and what they mean:\\n- status: this is either \\\"complete\\\" or \\\"incomplete\\\" output string. Once the writing agent implements your edits, you should set \\\"status\\\" = \\\"complete\\\". If this is the first time you've reviewed their work, status should be set to \\\"incomplete\\\". If the writing agent did not correctly implement your edits, you should set status to \\\"incomplete\\\".\\n- edits: this is your specific suggested edits. The writing agent will be able to see these edits and update the text to incorporate the edits.\\n\\nUse the structured output parser and output clean JSON in this format (example):\\n{\\n\\\"status\\\": \\\"complete\\\",\\n\\\"edits\\\": \\\"The writing agent has successfully implemented all the suggested edits. The text is now concise, informative, and focused on the main point while providing a brief introduction to AI. No further edits are necessary at this time.\\\"\\n}\\n\\nDO NOT INCLUDE ANY OTHER TEXT BESIDES THE JSON OUTPUT.\\n\\nHere is the input text from the writing agent:\\n{{ $json.output }}\",\n        \"options\": {},\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"retryOnFail\": false,\n      \"typeVersion\": 1.7\n    },\n    {\n      \"id\": \"e77541dd-0774-4545-a846-0106aa79fbf5\",\n      \"name\": \"chatOutput\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1820,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"753c404e-fce4-4173-95d2-6fde9c543d5f\",\n              \"name\": \"output\",\n              \"type\": \"string\",\n              \"value\": \"={{ $('Writing Agent').first().json.output }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"549707c8-55db-4e8e-aecc-68615b6034ee\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        600,\n        -160\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 340,\n        \"height\": 320,\n        \"content\": \"## 写作代理\\n该代理根据编辑代理的反馈进行撰写和改写。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"67c3ebb8-6d81-4add-a882-07fd0cc86f50\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        980,\n        -160\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 340,\n        \"height\": 320,\n        \"content\": \"## 编辑代理\\n该代理负责提出修改建议以优化写作代理的文本输出，随后会评估这些修改建议是否被纳入最终文稿中。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"8b9969b0-ae7b-45c0-9f41-72ea972d67cb\",\n  \"connections\": {\n    \"chatInput\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"handle edits\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"handle edits\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Writing Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Editing Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"set variables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Writing Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Editing Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"set variables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If Status Complete\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Writing Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Editing Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If Status Complete\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"chatOutput\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"handle edits\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Window Buffer Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"Editing Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Writing Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Editing Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When chat message received\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"chatInput\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}