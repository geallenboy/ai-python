{
  "url": "https://n8n.io/workflows/2421-transcribing-bank-statements-to-markdown-using-gemini-vision-ai/",
  "title": "Transcribing Bank Statements To Markdown Using Gemini Vision AI",
  "author": "Jimleuk",
  "publish_date": "Last update 8 months ago",
  "publish_date_absolute": "2024-09-25",
  "categories": [
    {
      "name": "Finance"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"},\"nodes\":[{\"id\":\"490493d1-e9ac-458a-ac9e-a86048ce6169\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-700,260],\"parameters\":{},\"typeVersion\":1},{\"id\":\"116f1137-632f-4021-ad0f-cf59ed1776fd\",\"name\":\"Google Gemini Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[980,440],\"parameters\":{\"options\":{},\"modelName\":\"models/gemini-1.5-pro-latest\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"dSxo6ns5wn658r8N\",\"name\":\"Google Gemini(PaLM) Api account\"}},\"typeVersion\":1},{\"id\":\"44695b4f-702c-4230-9ec3-e37447fed38e\",\"name\":\"Sort Pages\",\"type\":\"n8n-nodes-base.sort\",\"position\":[400,320],\"parameters\":{\"options\":{},\"sortFieldsUi\":{\"sortField\":[{\"fieldName\":\"fileName\"}]}},\"typeVersion\":1},{\"id\":\"f2575b2c-0808-464e-b982-1eed8e0d9df7\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1280,0],\"parameters\":{\"width\":437.0502325581392,\"height\":430.522325581395,\"content\":\"## Try Me Out!\\n\\n### This workflow converts a bank statement to markdown, faithfully capturing the details using the power of Vision Language Models (\\\"VLMs\\\"). The resulting markdown can then be parsed again by your standard LLM to extract data such as identifying all deposit table rows in the document.\\n\\nThis workflow is able to handle both downloaded PDFs as well as scanned PDFs. Be sure to protect sensitive data before running this workflow.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\"},\"typeVersion\":1},{\"id\":\"d62d7b0e-29eb-48a9-a471-4279e663c521\",\"name\":\"Get Bank Statement\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[-500,260],\"parameters\":{\"fileId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"1wS9U7MQDthj57CvEcqG_Llkr-ek6RqGA\"},\"options\":{},\"operation\":\"download\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"yOwz41gMQclOadgu\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"1329973b-a4e0-4272-9e24-3674bb9d4923\",\"name\":\"Split PDF into Images\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[-140,320],\"parameters\":{\"url\":\"http://stirling-pdf:8080/api/v1/convert/pdf/img\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"contentType\":\"multipart-form-data\",\"bodyParameters\":{\"parameters\":[{\"name\":\"fileInput\",\"parameterType\":\"formBinaryData\",\"inputDataFieldName\":\"data\"},{\"name\":\"imageFormat\",\"value\":\"jpg\"},{\"name\":\"singleOrMultiple\",\"value\":\"multiple\"},{\"name\":\"dpi\",\"value\":\"300\"}]}},\"typeVersion\":4.2},{\"id\":\"4e263346-9f55-4316-a505-4a54061ccfbb\",\"name\":\"Extract Zip File\",\"type\":\"n8n-nodes-base.compression\",\"position\":[40,320],\"parameters\":{},\"typeVersion\":1.1},{\"id\":\"5e97072f-a7c5-45aa-99d1-3231a9230b53\",\"name\":\"Images To List\",\"type\":\"n8n-nodes-base.code\",\"position\":[220,320],\"parameters\":{\"jsCode\":\"let results = [];\\n\\nfor (item of items) {\\n    for (key of Object.keys(item.binary)) {\\n        results.push({\\n            json: {\\n                fileName: item.binary[key].fileName\\n            },\\n            binary: {\\n                data: item.binary[key],\\n            }\\n        });\\n    }\\n}\\n\\nreturn results;\"},\"typeVersion\":2},{\"id\":\"62836c73-4cf7-4225-a45d-0cd62b7e227d\",\"name\":\"Resize Images For AI\",\"type\":\"n8n-nodes-base.editImage\",\"position\":[800,280],\"parameters\":{\"width\":75,\"height\":75,\"options\":{},\"operation\":\"resize\",\"resizeOption\":\"percent\"},\"typeVersion\":1},{\"id\":\"59fc6716-9826-4463-be33-923a8f6f33f1\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-820,0],\"parameters\":{\"color\":7,\"width\":546.4534883720931,\"height\":478.89348837209275,\"content\":\"## 1. Download Bank Statement PDF\\n[Read more about Google Drive node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googledrive)\\n\\nFor this demonstration, we'll pull an example bank statement off Google Drive however, you can also swap this out for other triggers such as webhook.\\n\\nYou can use the example bank statement created specifically for this workflow here: https://drive.google.com/file/d/1wS9U7MQDthj57CvEcqG_Llkr-ek6RqGA/view?usp=sharing\"},\"typeVersion\":1},{\"id\":\"8e68a295-ff35-4d28-86bb-c8ea5664b3c6\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-240,3.173953488372149],\"parameters\":{\"color\":7,\"width\":848.0232558139535,\"height\":533.5469767441862,\"content\":\"## 2. Split PDF Pages into Seperate Images\\n\\nCurrently, the vision model we'll be using can't accept raw PDFs so we'll have to convert our PDF to a image in order to use it. To achieve this, we'll use the free [Stirling PDF webservice](https://stirlingpdf.io/) for convenience but if we need data privacy (recommended!), we could self-host our own [Stirling PDF instance](https://github.com/Stirling-Tools/Stirling-PDF/) instead. Alternatively, feel free to swap this service out for one of your own as long as it can convert PDFs into images!\\n\\nWe will ask the PDF service to return each page of our statement as separate images, which it does so as a zip file. Next steps is to just unzip the file and convert the output as a list of images.\"},\"typeVersion\":1},{\"id\":\"5286aa35-9687-4d5b-987c-79322a1ddc84\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[640,-40],\"parameters\":{\"color\":7,\"width\":775.3441860465115,\"height\":636.0809302325588,\"content\":\"## 3. Convert PDF Pages to Markdown Using Vision Model\\n[Learn more about using the Basic LLM node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)\\n\\nUnlike traditional OCR, vision models (\\\"VLMs\\\") \\\"transcribe\\\" what they see so while we shouldn't expect an exact replication of a document, they may perform better making sense of complex document layouts ie. such as with horizontally stacked tables.\\n \\nIn this demonstration, we can transcribe our bank statement scans to markdown text for the purpose of further processing. With markdown, we can retain tables or columnar data found in the document. We'll employ two optimisations however as a workaround for token and timeout limits (1) we'll only transcribe one page at a time and (2) we'll shrink the pages just a little just enough to speed up processing but not enough to reduce our required resolution.\"},\"typeVersion\":1},{\"id\":\"49deef00-4617-4b19-a56f-08fd195dfb82\",\"name\":\"Google Gemini Chat Model1\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\"position\":[1760,480],\"parameters\":{\"options\":{\"safetySettings\":{\"values\":[{\"category\":\"HARM_CATEGORY_DANGEROUS_CONTENT\",\"threshold\":\"BLOCK_NONE\"}]}},\"modelName\":\"models/gemini-1.5-pro-latest\"},\"credentials\":{\"googlePalmApi\":{\"id\":\"dSxo6ns5wn658r8N\",\"name\":\"Google Gemini(PaLM) Api account\"}},\"typeVersion\":1},{\"id\":\"8e9c5d1d-d610-4bad-8feb-7ff0d5e1e64f\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1440,80],\"parameters\":{\"color\":7,\"width\":719.7534883720941,\"height\":574.3134883720929,\"content\":\"## 4. Extract Key Data Confidently From Statement\\n[Read more about the Information Extractor](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\nWith our newly generated transcript, let's pull just the deposit line items from our statement. Processing all pages together as images may have been compute-extensive but as text, this is usually no problem at all for our LLM.\\n\\nFor our example bank statement PDF, the resulting extraction should be 8 table rows where a value exists in the \\\"deposits\\\" column.\"},\"typeVersion\":1},{\"id\":\"f849ad3c-69ec-443c-b7cd-ab24e210af73\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-640,500],\"parameters\":{\"color\":5,\"width\":366.00558139534894,\"height\":125.41023255813957,\"content\":\"### 💡 About the Example PDF\\nScanned PDFs (ie. where each page is a scanned image) are a use-case where extracting PDF text content will not work. Vision models are a great solution as this workflow aims to demonstrate!\"},\"typeVersion\":1},{\"id\":\"be6f529b-8220-4879-bd99-4333b4d764b6\",\"name\":\"Combine All Pages\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[1580,320],\"parameters\":{\"options\":{},\"fieldsToAggregate\":{\"fieldToAggregate\":[{\"renameField\":true,\"outputFieldName\":\"pages\",\"fieldToAggregate\":\"text\"}]}},\"typeVersion\":1},{\"id\":\"2b35755c-7bae-4896-b9f9-1e9110209526\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-190.1172093023256,280],\"parameters\":{\"width\":199.23348837209306,\"height\":374.95069767441856,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n### Privacy Warning!\\nThis example uses a public third party service. If your data is senstive, please swap this out for the self-hosted version!\"},\"typeVersion\":1},{\"id\":\"f638ba05-9ae2-447f-82af-eb22d8b9d6f1\",\"name\":\"Extract All Deposit Table Rows\",\"type\":\"@n8n/n8n-nodes-langchain.informationExtractor\",\"position\":[1760,320],\"parameters\":{\"text\":\"= {{ $json.pages.join('---') }}\",\"options\":{\"systemPromptTemplate\":\"This statement contains tables with rows showing deposit and withdrawal made to the user's account. Deposits and withdrawals are identified by have the amount in their respective columns. What are the deposits to the account found in this statement?\"},\"schemaType\":\"manual\",\"inputSchema\":\"{\\n  \\\"type\\\": \\\"array\\\",\\n  \\\"items\\\": {\\n\\t\\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n      \\\"date\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"amount\\\": { \\\"type\\\": \\\"number\\\" }\\n\\t}\\n  }\\n}\"},\"typeVersion\":1},{\"id\":\"cf1e8d85-5c92-469d-98af-7bdd5f469167\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[913.9944186046506,620],\"parameters\":{\"color\":5,\"width\":498.18790697674433,\"height\":130.35162790697677,\"content\":\"### 💡 Don't use Google?\\nFeel free to swap the model out for any state-of-the-art multimodal model which supports image inputs such as GPT4o(-mini) or Claude Sonnet/Opus. Note, I've found Gemini to produce the most accurate and consistent for this example use-case so no guarantees if you switch!\"},\"typeVersion\":1},{\"id\":\"20f33372-a6b6-4f4d-987d-a94c85313fa8\",\"name\":\"Transcribe to Markdown\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[980,280],\"parameters\":{\"text\":\"transcribe the image to markdown.\",\"messages\":{\"messageValues\":[{\"message\":\"=You help transcribe documents to markdown, keeping faithful to all text printed and visible to the best of your ability. Ensure you capture all headings, subheadings, titles as well as small print.\\nFor any tables found with the document, convert them to markdown tables. If table row descriptions overflow into more than 1 row, concatanate and fit them into a single row. If two or more tables are adjacent horizontally, stack the tables vertically instead. There should be a newline after every markdown table.\\nFor any graphics, use replace with a description of the image. Images of scanned checks should be converted to the phrase \\\"<scanned image of check>\\\".\"},{\"type\":\"HumanMessagePromptTemplate\",\"messageType\":\"imageBinary\"}]},\"promptType\":\"define\"},\"typeVersion\":1.4}],\"pinData\":{},\"connections\":{\"Sort Pages\":{\"main\":[[{\"node\":\"Resize Images For AI\",\"type\":\"main\",\"index\":0}]]},\"Images To List\":{\"main\":[[{\"node\":\"Sort Pages\",\"type\":\"main\",\"index\":0}]]},\"Extract Zip File\":{\"main\":[[{\"node\":\"Images To List\",\"type\":\"main\",\"index\":0}]]},\"Combine All Pages\":{\"main\":[[{\"node\":\"Extract All Deposit Table Rows\",\"type\":\"main\",\"index\":0}]]},\"Get Bank Statement\":{\"main\":[[{\"node\":\"Split PDF into Images\",\"type\":\"main\",\"index\":0}]]},\"Resize Images For AI\":{\"main\":[[{\"node\":\"Transcribe to Markdown\",\"type\":\"main\",\"index\":0}]]},\"Split PDF into Images\":{\"main\":[[{\"node\":\"Extract Zip File\",\"type\":\"main\",\"index\":0}]]},\"Transcribe to Markdown\":{\"main\":[[{\"node\":\"Combine All Pages\",\"type\":\"main\",\"index\":0}]]},\"Google Gemini Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Transcribe to Markdown\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Google Gemini Chat Model1\":{\"ai_languageModel\":[[{\"node\":\"Extract All Deposit Table Rows\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Get Bank Statement\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This n8n workflow demonstrates an approach to parsing bank statement PDFs with multimodal LLMs as an alternative to traditional OCR. This allows for much more accurate data extraction from the document especially when it comes to tables and complex layouts.\n\nMultimodal Parsing is better than traditiona OCR because:\n\n  * It reduces complexity and overhead by avoiding the need to preprocess the document into text format such as markdown before passing to the LLM.\n  * It handles non-standard PDF formats which may produce garbled output via traditional OCR text conversion.\n  * It's orders of magnitude cheaper than premium OCR models that still require post-processing cleanup and formatting. LLMs can format to any schema or language you desire!\n\n\n\n## How it works\n\nYou can use the example bank statement created specifically for this workflow here: <https://drive.google.com/file/d/1wS9U7MQDthj57CvEcqG_Llkr-ek6RqGA/view?usp=sharing>\n\n  * A PDF bank statement is imported via Google Drive. For this demo, I've created a mock bank statement which includes complex table layouts of 5 columns. Typically, OCR will be unable to align the columns correctly and mistake some deposits for withdrawals.\n  * Because multimodal LLMs do not accept PDFs directly, well have to convert the PDF to a series of images. We can achieve this by using a tool such as [Stirling PDF](https://github.com/Stirling-Tools/Stirling-PDF/). Stirling PDF is self-hostable which is handy for sensitive data such as bank statements.\n  * Stirling PDF will return our PDF as a series of JPGs (one for each page) in a zipped file. We can use n8n's decompress node to extract the images and ensure they are ordered by using the Sort node.\n  * Next, we'll resize each page using the Edit Image node to ensure the right balance between resolution limits and processing speed.\n  * Each resized page image is then passed into the Basic LLM node which will use our multimodal LLM of choice - Gemini 1.5 Pro. In the LLM node's options, we'll add a \"user message\" of type binary (data) which is how we add our image data as an input.\n  * Our prompt will instruct the multimodal LLM to transcribe each page to markdown. Note, you do not need to do this - you can just ask for data points to extract directly! Our goal for this template is to demonstrate the LLMs ability to accurately read the page.\n  * Finally, with our markdown version of all pages, we can pass this to another LLM node to extract required data such as deposit line items.\n\n\n\n## Requirements\n\n  * Google Gemini API for Multimodal LLM.\n  * Google Drive access for document storage.\n  * [Stirling PDF](https://github.com/Stirling-Tools/Stirling-PDF) instance for PDF to Image conversion\n\n\n\n## Customising the workflow\n\n  * At time of writing, Gemini 1.5 Pro is the most accurate in text document parsing with a relatively low cost. If you are not using Google Gemini however you can switch to other multimodal LLMs such as OpenAI GPT or Antrophic Claude.\n\n  * If you don't need the markdown, simply asking what to extract directly in the LLM's prompt is also acceptable and would save a few extra steps.\n\n  * Not parsing any bank statements any time soon? This template also works for Invoices, inventory lists, contracts, legal documents etc.\n\n\n\n",
  "crawled_at": "2025-05-25T23:49:06.023035",
  "readme_zh": "该n8n工作流展示了运用多模态大语言模型解析银行对账单PDF的创新方案，作为传统OCR技术的替代选择。这种方法能显著提升文档数据提取的准确性，尤其针对表格和复杂版式内容。\n\n多模态解析技术相比传统OCR的优势在于：\n\n* 通过省去将文档预处理为Markdown等文本格式的步骤，有效降低系统复杂度和处理开销\n* 可完美处理非标准PDF格式，避免传统OCR文本转换产生的乱码问题\n* 成本比需要后处理清洗的高级OCR模型低数个量级，且大语言模型能按需输出任何数据结构或语言版本\n\n## 实现原理\n\n您可使用专为本流程设计的示例银行对账单进行测试：[点击查看](https://drive.google.com/file/d/1wS9U7MQDthj57CvEcqG_Llkr-ek6RqGA/view?usp=sharing)\n\n* 通过Google Drive导入PDF格式银行对账单（本演示使用包含5列复杂表格的模拟对账单，传统OCR常会错位识别存款/取款数据）\n* 由于多模态大模型无法直接读取PDF，需使用[Stirling PDF](https://github.com/Stirling-Tools/Stirling-PDF/)等工具将每页转为JPG图片（该开源工具支持自建服务，适合处理敏感财务数据）\n* Stirling PDF会返回ZIP压缩的图片组，通过n8n解压节点提取后，使用排序节点确保页码顺序\n* 利用图像编辑节点调整每页分辨率，平衡识别精度与处理速度\n* 将处理后的图片传入基础LLM节点（本方案采用Gemini 1.5 Pro多模态模型），在二进制数据类型的\"用户消息\"中载入图像\n* 提示词要求模型将每页转写为Markdown（实际应用可直接提取目标数据，此处仅为展示模型的精准识别能力）\n* 最终将Markdown版本传入后续LLM节点，提取存款明细等结构化数据\n\n## 环境要求\n\n* Google Gemini API（多模态大模型接口）\n* Google Drive文档存储权限\n* [Stirling PDF](https://github.com/Stirling-Tools/Stirling-PDF)实例（用于PDF转图片）\n\n## 定制建议\n\n* 当前Gemini 1.5 Pro在文本解析方面性价比最优，也可替换为OpenAI GPT或Antrophic Claude等其他多模态模型\n* 若无需Markdown中间产物，可直接在提示词中指定提取目标数据以简化流程\n* 本模板同样适用于发票、库存清单、合同、法律文书等复杂文档解析",
  "title_zh": "使用Gemini Vision AI将银行对账单转录为Markdown格式",
  "publish_date_zh": "最后更新于7个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"408f9fb9940c3cb18ffdef0e0150fe342d6e655c3a9fac21f0f644e8bedabcd9\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"490493d1-e9ac-458a-ac9e-a86048ce6169\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -700,\n        260\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"116f1137-632f-4021-ad0f-cf59ed1776fd\",\n      \"name\": \"Google Gemini Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        980,\n        440\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"modelName\": \"models/gemini-1.5-pro-latest\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"dSxo6ns5wn658r8N\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"44695b4f-702c-4230-9ec3-e37447fed38e\",\n      \"name\": \"Sort Pages\",\n      \"type\": \"n8n-nodes-base.sort\",\n      \"position\": [\n        400,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sortFieldsUi\": {\n          \"sortField\": [\n            {\n              \"fieldName\": \"fileName\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f2575b2c-0808-464e-b982-1eed8e0d9df7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1280,\n        0\n      ],\n      \"parameters\": {\n        \"width\": 437.0502325581392,\n        \"height\": 430.522325581395,\n        \"content\": \"## 试试看吧！\\n\\n### 该工作流能将银行对账单转换为Markdown格式，借助视觉语言模型（\\\"VLM\\\"）的强大能力精准捕捉所有细节。生成的Markdown可再次通过常规大语言模型解析，以提取诸如识别文档中所有存款表格行等数据。\\n\\n本工作流既能处理下载的PDF文件，也可解析扫描版PDF文档。运行前请务必做好敏感数据保护。\\n\\n### 需要帮助？\\n加入[Discord讨论群](https://discord.com/invite/XPKeKXeB7d)或前往[论坛提问](https://community.n8n.io/)！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d62d7b0e-29eb-48a9-a471-4279e663c521\",\n      \"name\": \"Get Bank Statement\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -500,\n        260\n      ],\n      \"parameters\": {\n        \"fileId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"1wS9U7MQDthj57CvEcqG_Llkr-ek6RqGA\"\n        },\n        \"options\": {},\n        \"operation\": \"download\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"yOwz41gMQclOadgu\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"1329973b-a4e0-4272-9e24-3674bb9d4923\",\n      \"name\": \"Split PDF into Images\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        -140,\n        320\n      ],\n      \"parameters\": {\n        \"url\": \"http://stirling-pdf:8080/api/v1/convert/pdf/img\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"multipart-form-data\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"fileInput\",\n              \"parameterType\": \"formBinaryData\",\n              \"inputDataFieldName\": \"data\"\n            },\n            {\n              \"name\": \"imageFormat\",\n              \"value\": \"jpg\"\n            },\n            {\n              \"name\": \"singleOrMultiple\",\n              \"value\": \"multiple\"\n            },\n            {\n              \"name\": \"dpi\",\n              \"value\": \"300\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"4e263346-9f55-4316-a505-4a54061ccfbb\",\n      \"name\": \"Extract Zip File\",\n      \"type\": \"n8n-nodes-base.compression\",\n      \"position\": [\n        40,\n        320\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"5e97072f-a7c5-45aa-99d1-3231a9230b53\",\n      \"name\": \"Images To List\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        220,\n        320\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let results = [];\\n\\nfor (item of items) {\\n    for (key of Object.keys(item.binary)) {\\n        results.push({\\n            json: {\\n                fileName: item.binary[key].fileName\\n            },\\n            binary: {\\n                data: item.binary[key],\\n            }\\n        });\\n    }\\n}\\n\\nreturn results;\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"62836c73-4cf7-4225-a45d-0cd62b7e227d\",\n      \"name\": \"Resize Images For AI\",\n      \"type\": \"n8n-nodes-base.editImage\",\n      \"position\": [\n        800,\n        280\n      ],\n      \"parameters\": {\n        \"width\": 75,\n        \"height\": 75,\n        \"options\": {},\n        \"operation\": \"resize\",\n        \"resizeOption\": \"percent\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"59fc6716-9826-4463-be33-923a8f6f33f1\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -820,\n        0\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 546.4534883720931,\n        \"height\": 478.89348837209275,\n        \"content\": \"## 1. 下载银行对账单PDF文件  \\n[详细了解Google Drive节点](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googledrive)  \\n\\n本次演示中，我们将从Google Drive获取一份示例银行对账单。当然，您也可以替换为其他触发方式（例如webhook）。  \\n\\n您可以直接使用专为本工作流创建的示例银行对账单：  \\nhttps://drive.google.com/file/d/1wS9U7MQDthj57CvEcqG_Llkr-ek6RqGA/view?usp=sharing\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8e68a295-ff35-4d28-86bb-c8ea5664b3c6\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -240,\n        3.173953488372149\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 848.0232558139535,\n        \"height\": 533.5469767441862,\n        \"content\": \"## 2. 将PDF页面分割为独立图像\\n\\n由于当前使用的视觉模型无法直接处理原始PDF文件，我们需要先将PDF转换为图像格式。为实现这一目标，我们将便捷地使用免费的[Stirling PDF在线服务](https://stirlingpdf.io/)。若需保障数据隐私（推荐方案！），也可自行托管[Stirling PDF实例](https://github.com/Stirling-Tools/Stirling-PDF/)。当然，只要具备PDF转图像功能，您完全可以替换为其他等效服务。\\n\\n我们将要求PDF服务以zip压缩包形式返回对账单的每个独立页面图像。后续只需解压文件并将输出内容转换为图像列表即可。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5286aa35-9687-4d5b-987c-79322a1ddc84\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        640,\n        -40\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 775.3441860465115,\n        \"height\": 636.0809302325588,\n        \"content\": \"## 3. 使用视觉模型将PDF页面转换为Markdown格式  \\n[详细了解如何使用基础LLM节点](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm)  \\n\\n与传统OCR不同，视觉模型（\\\"VLM\\\"）会\\\"转录\\\"所见内容，因此虽然不能期望文档的精确复制，但它们可能更擅长理解复杂文档布局（例如水平堆叠的表格）。  \\n\\n在本演示中，我们将银行对账单扫描件转录为Markdown文本以便进一步处理。通过Markdown格式，可以保留文档中的表格或列式数据。但针对令牌数和超时限制，我们将采用两个优化措施：(1) 每次仅转录一页；(2) 略微缩小页面尺寸——既提升处理速度，又确保不降低所需分辨率。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"49deef00-4617-4b19-a56f-08fd195dfb82\",\n      \"name\": \"Google Gemini Chat Model1\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatGoogleGemini\",\n      \"position\": [\n        1760,\n        480\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"safetySettings\": {\n            \"values\": [\n              {\n                \"category\": \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n                \"threshold\": \"BLOCK_NONE\"\n              }\n            ]\n          }\n        },\n        \"modelName\": \"models/gemini-1.5-pro-latest\"\n      },\n      \"credentials\": {\n        \"googlePalmApi\": {\n          \"id\": \"dSxo6ns5wn658r8N\",\n          \"name\": \"Google Gemini(PaLM) Api account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8e9c5d1d-d610-4bad-8feb-7ff0d5e1e64f\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1440,\n        80\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 719.7534883720941,\n        \"height\": 574.3134883720929,\n        \"content\": \"## 4. 从对账单中自信提取关键数据\\n[了解更多关于信息提取器的内容](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.information-extractor)\\n\\n有了新生成的文本记录，现在让我们仅从对账单中提取存款条目。将所有页面作为图像一起处理可能计算量较大，但作为文本处理，这对我们的LLM来说通常完全不是问题。\\n\\n以我们的示例银行对账单PDF为例，最终应提取出8行表格数据，这些行在\\\"存款\\\"列中都有数值。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f849ad3c-69ec-443c-b7cd-ab24e210af73\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -640,\n        500\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 366.00558139534894,\n        \"height\": 125.41023255813957,\n        \"content\": \"### 💡 关于示例PDF  \\n扫描版PDF（即每页均为扫描图像的文档）是一种无法通过常规文本提取方式获取内容的典型场景。视觉模型正是解决此类问题的理想方案——本示例工作流将为您生动演示这一过程！  \\n\\n（注：根据技术文档的翻译规范，在保持专业性的同时进行了以下优化：  \\n1. 将\\\"use-case\\\"译为\\\"典型场景\\\"更符合中文技术文档表述  \\n2. \\\"Vision models\\\"采用行业通用译法\\\"视觉模型\\\"  \\n3. 通过破折号和感叹号增强中文语气的流畅性  \\n4. 补充\\\"（即...）\\\"的插入语结构使定义更清晰  \\n5. 使用\\\"生动演示\\\"对应\\\"demonstrate\\\"的动态感）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"be6f529b-8220-4879-bd99-4333b4d764b6\",\n      \"name\": \"Combine All Pages\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        1580,\n        320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldsToAggregate\": {\n          \"fieldToAggregate\": [\n            {\n              \"renameField\": true,\n              \"outputFieldName\": \"pages\",\n              \"fieldToAggregate\": \"text\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2b35755c-7bae-4896-b9f9-1e9110209526\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -190.1172093023256,\n        280\n      ],\n      \"parameters\": {\n        \"width\": 199.23348837209306,\n        \"height\": 374.95069767441856,\n        \"content\": \"### 隐私警告！\\n此示例使用了公开的第三方服务。若您的数据涉及敏感信息，请替换为自托管版本！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f638ba05-9ae2-447f-82af-eb22d8b9d6f1\",\n      \"name\": \"Extract All Deposit Table Rows\",\n      \"type\": \"@n8n/n8n-nodes-langchain.informationExtractor\",\n      \"position\": [\n        1760,\n        320\n      ],\n      \"parameters\": {\n        \"text\": \"= {{ $json.pages.join('---') }}\",\n        \"options\": {\n          \"systemPromptTemplate\": \"This statement contains tables with rows showing deposit and withdrawal made to the user's account. Deposits and withdrawals are identified by have the amount in their respective columns. What are the deposits to the account found in this statement?\"\n        },\n        \"schemaType\": \"manual\",\n        \"inputSchema\": \"{\\n  \\\"type\\\": \\\"array\\\",\\n  \\\"items\\\": {\\n\\t\\\"type\\\": \\\"object\\\",\\n\\t\\\"properties\\\": {\\n      \\\"date\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"amount\\\": { \\\"type\\\": \\\"number\\\" }\\n\\t}\\n  }\\n}\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"cf1e8d85-5c92-469d-98af-7bdd5f469167\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        913.9944186046506,\n        620\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 498.18790697674433,\n        \"height\": 130.35162790697677,\n        \"content\": \"### 💡 别用谷歌？\\n你可以随意替换成任何支持图像输入的多模态前沿模型，比如GPT4o（迷你版）或Claude Sonnet/Opus。不过要注意，就这个示例用例而言，我发现Gemini生成的答案最准确、最稳定，所以换模型的话效果我可不能保证哦！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"20f33372-a6b6-4f4d-987d-a94c85313fa8\",\n      \"name\": \"Transcribe to Markdown\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        980,\n        280\n      ],\n      \"parameters\": {\n        \"text\": \"transcribe the image to markdown.\",\n        \"messages\": {\n          \"messageValues\": [\n            {\n              \"message\": \"=You help transcribe documents to markdown, keeping faithful to all text printed and visible to the best of your ability. Ensure you capture all headings, subheadings, titles as well as small print.\\nFor any tables found with the document, convert them to markdown tables. If table row descriptions overflow into more than 1 row, concatanate and fit them into a single row. If two or more tables are adjacent horizontally, stack the tables vertically instead. There should be a newline after every markdown table.\\nFor any graphics, use replace with a description of the image. Images of scanned checks should be converted to the phrase \\\"<scanned image of check>\\\".\"\n            },\n            {\n              \"type\": \"HumanMessagePromptTemplate\",\n              \"messageType\": \"imageBinary\"\n            }\n          ]\n        },\n        \"promptType\": \"define\"\n      },\n      \"typeVersion\": 1.4\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Sort Pages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Resize Images For AI\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Images To List\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Sort Pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Zip File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Images To List\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine All Pages\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract All Deposit Table Rows\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Bank Statement\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split PDF into Images\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Resize Images For AI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Transcribe to Markdown\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split PDF into Images\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Zip File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Transcribe to Markdown\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine All Pages\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Transcribe to Markdown\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Google Gemini Chat Model1\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Extract All Deposit Table Rows\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Bank Statement\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}