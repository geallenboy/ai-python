{
  "url": "https://n8n.io/workflows/3581-domain-to-email-extraction-using-apollo-api/",
  "title": "Domain to Email Extraction using Apollo API",
  "author": "Hueston",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "Sales"
    }
  ],
  "workflow_json": "{\"id\":\"E4K85OV19sy8Jrly\",\"meta\":{\"instanceId\":\"f46651348590f9c7e3e7fe91218ed49590c553ab737d5cc247951397ff85fa93\",\"templateCredsSetupCompleted\":true},\"name\":\"Domain -> Email Extraction using Apollo API copy\",\"tags\":[],\"nodes\":[{\"id\":\"02646c75-dad3-4b21-8203-e86732374a2c\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-400,-60],\"parameters\":{},\"typeVersion\":1},{\"id\":\"69175622-b2fb-4a56-83bf-a55290f1c725\",\"name\":\"Loop Targets\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[40,-60],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"5e6af8ff-2bc1-44b4-9523-3e55a785ee4d\",\"name\":\"Pull Target Domains\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[-180,-60],\"parameters\":{\"options\":{},\"filtersUI\":{\"values\":[{\"lookupColumn\":\"Status\"}]},\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gid=0\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o/edit#gid=0\",\"cachedResultName\":\"Target Domains\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o/edit?usp=drivesdk\",\"cachedResultName\":\"Apollo Data\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"eJnhBFCXl43MdWvb\",\"name\":\"JKM Sheets\"}},\"typeVersion\":4.5},{\"id\":\"884b3766-8d4b-43a3-8a14-e3eee1a3d678\",\"name\":\"Get People By Domain\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[300,-60],\"parameters\":{\"url\":\"https://api.apollo.io/v1/mixed_people/search\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"q_organization_domains_list\\\": [\\\"{{ $json['Domain To Enrich'] }}\\\"],\\n  \\\"per_page\\\": 10,\\n  \\\"page\\\": 1\\n}\\n\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"headerParameters\":{\"parameters\":[{\"name\":\"x-api-key\",\"value\":\"Your  API KEY \"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":4.2},{\"id\":\"df77689b-ccd3-4638-a981-4cf13fbf8a70\",\"name\":\"Clean Up Results\",\"type\":\"n8n-nodes-base.code\",\"position\":[480,-60],\"parameters\":{\"jsCode\":\"// Function node code\\nconsole.log('Initial data:', JSON.stringify(items, null, 2));\\n\\n// Get the first item since n8n usually wraps data in an array\\nconst data = items[0].json;\\nconsole.log('Data structure:', JSON.stringify(data, null, 2));\\n\\n// Now process the people data\\nconst people = data.people || [];\\n\\ntry {\\n  return people.map(person => {\\n    console.log('Processing person:', JSON.stringify(person, null, 2));\\n    return {\\n      json: {\\n        firstName: person.first_name || '',\\n        lastName: person.last_name || '',\\n        email: person.email || '',\\n        websiteUrl: person.website_url || '',\\n        linkedinUrl: person.linkedin_url || '',\\n        twitterUrl: person.twitter_url || '',\\n        facebookUrl: person.facebook_url || '',\\n        phone: person.primary_phone?.number || '',\\n        company: {\\n          name: person.company_name || '',\\n          domain: person.primary_domain || '',\\n          foundedYear: person.founded_year || '',\\n          logo: person.logo_url || ''\\n        },\\n        professional: {\\n          departments: person.departments || [],\\n          seniority: person.seniority || '',\\n          functions: person.functions || []\\n        }\\n      }\\n    };\\n  });\\n} catch (error) {\\n  console.log('Error occurred. Full items:', JSON.stringify(items, null, 2));\\n  throw new Error(`Error processing data: ${error.message}`);\\n}\"},\"typeVersion\":2},{\"id\":\"bc0f01b0-3225-4023-9e21-0bcebab00808\",\"name\":\"Loop Over Results\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[680,-60],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"65533eb2-a738-4cf3-9cbc-480a911e4fb2\",\"name\":\"Get Person Info\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[920,-60],\"parameters\":{\"url\":\"=https://api.apollo.io/api/v1/people/match?first_name={{ $json.firstName }}&last_name={{ $json.lastName }}&domain={{ $('Get People By Domain').item.json.breadcrumbs[0].value[0] }}&reveal_personal_emails=false&reveal_phone_number=false \",\"method\":\"POST\",\"options\":{},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"x-api-key\",\"value\":\"Your API Key\"},{\"name\":\"Content-Type\",\"value\":\"application/json\"}]}},\"typeVersion\":4.2},{\"id\":\"4c369c7e-e79b-4bf1-97d4-25abac4256db\",\"name\":\"Clean Up\",\"type\":\"n8n-nodes-base.code\",\"position\":[1140,-60],\"parameters\":{\"jsCode\":\"// Function node to extract specific fields from Apollo response\\ntry {\\n    const results = items.map(item => {\\n        const person = item.json.person; // Access the person object directly\\n        \\n        return {\\n            json: {\\n                firstName: person.first_name || '',\\n                lastName: person.last_name || '',\\n                email: person.email || '',\\n                linkedinUrl: person.linkedin_url || '',\\n                title: person.title || '',\\n                twitter: person.twitter_url || '',\\n                facebook: person.facebook_url || '',\\n                organizationName: person.employment_history?.[0]?.organization_name || '', // Get current organization from employment history\\n                headline: person.headline || '',\\n                photoUrl: person.photo_url || ''\\n            }\\n        };\\n    });\\n\\n    console.log(`Successfully processed ${results.length} records`);\\n    return results;\\n\\n} catch (error) {\\n    console.error('Error processing data:', error);\\n    throw new Error(`Failed to process data: ${error.message}`);\\n}\"},\"typeVersion\":2},{\"id\":\"f0eaa1e7-299f-4ec8-ae26-90bbe1483a1e\",\"name\":\"Results To Results Sheet\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1340,-60],\"parameters\":{\"columns\":{\"value\":{\"Email\":\"={{ $json.email }}\",\"Title\":\"={{ $json.title }}\",\"Company\":\"={{ $('Loop Targets').item.json['Domain To Enrich'] }}\",\"Last Name\":\"={{ $json.lastName }}\",\"Linkedin \":\"={{ $json.linkedinUrl }}\",\"First Name\":\"={{ $json.firstName }}\"},\"schema\":[{\"id\":\"Company\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Company\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"First Name\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"First Name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Last Name\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Last Name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Title\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Title\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Email\",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Email\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Linkedin \",\"type\":\"string\",\"display\":true,\"required\":false,\"displayName\":\"Linkedin \",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"list\",\"value\":308352805,\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o/edit#gid=308352805\",\"cachedResultName\":\"Results\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o/edit?usp=drivesdk\",\"cachedResultName\":\"Apollo Data\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"eJnhBFCXl43MdWvb\",\"name\":\"JKM Sheets\"}},\"typeVersion\":4.5}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"3fe93ef2-9ba0-474e-9b44-dbb9f9fa4fd8\",\"connections\":{\"Clean Up\":{\"main\":[[{\"node\":\"Results To Results Sheet\",\"type\":\"main\",\"index\":0}]]},\"Loop Targets\":{\"main\":[[],[{\"node\":\"Get People By Domain\",\"type\":\"main\",\"index\":0}]]},\"Get Person Info\":{\"main\":[[{\"node\":\"Clean Up\",\"type\":\"main\",\"index\":0}]]},\"Clean Up Results\":{\"main\":[[{\"node\":\"Loop Over Results\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Results\":{\"main\":[[{\"node\":\"Loop Targets\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get Person Info\",\"type\":\"main\",\"index\":0}]]},\"Pull Target Domains\":{\"main\":[[{\"node\":\"Loop Targets\",\"type\":\"main\",\"index\":0}]]},\"Get People By Domain\":{\"main\":[[{\"node\":\"Clean Up Results\",\"type\":\"main\",\"index\":0}]]},\"Results To Results Sheet\":{\"main\":[[{\"node\":\"Loop Over Results\",\"type\":\"main\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"Pull Target Domains\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## Who is this for?\n\n  * Sales professionals looking to build lead lists from target company domains\n  * Business development teams conducting outreach campaigns\n  * Marketers building contact databases for account-based marketing\n  * Recruiters searching for potential candidates at specific companies\n  * Anyone needing to transform a list of company domains into actionable contact information\n\n\n\n## What problem is this workflow solving?\n\nFinding business email addresses for outreach is a time-consuming process. The Apollo API doesn't provide a direct way to extract email contacts from domains in a single call. This workflow bridges that gap by:\n\n  1. Automating the two-step process required by Apollo's API\n  2. Processing multiple domains in batches without manual intervention\n  3. Extracting, enriching, and storing contact information in a structured format\n  4. Eliminating hours of manual data entry and API interaction\n\n\n\n## What this workflow does\n\nThis workflow creates an automated pipeline between Google Sheets and Apollo's API to:\n\n  1. Pull a list of target domains from a Google Sheet\n  2. Submit each domain to Apollo's search API to find associated people\n  3. Loop through each person found and enrich their profile data\n  4. Extract key information: name, title, email address, and LinkedIn URL\n  5. Write the enriched contact information back to a results sheet\n  6. Process the next domain automatically until all are complete\n\n\n\n## Setup\n\n### Prerequisites:\n\n  * An n8n instance (cloud or self-hosted)\n  * [Apollo.io](http://Apollo.io) account with API access\n  * Google account with access to Google Sheets\n\n\n\n### Google Sheets Setup:\n\n  1. Create a new Google Sheet with two tabs: \n     * Tab 1: \"Target Domains\" with a column named \"Domain To Enrich\"\n     * Tab 2: \"Results\" with columns: Company, First Name, Last Name, Title, Email, LinkedIn\n\n\n\n### n8n Setup:\n\n  1. Import the workflow JSON into your n8n instance\n  2. Set up Google Sheets credentials in n8n\n  3. Update the Google Sheets document ID in both Google Sheets nodes\n  4. Add your Apollo API key to both HTTP Request nodes\n  5. Review and adjust API rate limits if needed\n\n\n\n### Testing:\n\n  1. Add a few test domains to your \"Target Domains\" sheet\n  2. Run the workflow manually to verify it's working correctly\n  3. Check the \"Results\" sheet to confirm data is being properly populated\n\n\n\n## How to customize this workflow to your needs\n\n### Adding More Contact Fields:\n\n  1. Modify the \"Clean Up\" node to extract additional fields from the Apollo API response\n  2. Add corresponding columns to your \"Results\" sheet\n  3. Update the \"Results To Results Sheet\" node mapping to include the new fields\n\n\n\n### Filtering Results:\n\n  1. Add a Filter node after \"Clean Up\" to include only contacts with specific roles\n  2. Create conditions based on title, seniority, or other fields returned by Apollo\n\n\n\n### Automating Workflow Execution:\n\n  1. Replace the manual trigger with a Schedule Trigger to run daily/weekly\n  2. Add a Filter node to process only domains with \"Not Processed\" status\n  3. Update the status field in Google Sheets after processing\n\n\n\n## Additional Notes\n\n  * This workflow respects Apollo's API rate limits by processing one contact at a time\n  * The Apollo API may not return contact information for all domains or all employees\n  * Consider legal and privacy implications when collecting and storing contact information\n\n\n\nMade with ❤️ by [Hueston](https://hueston.co/)\n",
  "crawled_at": "2025-05-26T04:55:49.752600",
  "readme_zh": "## 适用对象\n\n  * 需要从目标公司域名构建潜在客户名单的销售专员\n  * 开展外拓活动的业务拓展团队\n  * 为基于客户的营销建立联系人数据库的市场人员\n  * 在特定公司寻找潜在候选人的招聘人员\n  * 任何需要将公司域名列表转化为可执行联系人信息的用户",
  "title_zh": "使用Apollo API进行域名到邮箱提取",
  "publish_date_zh": "Last update 13 days ago",
  "workflow_json_zh": "{\n  \"id\": \"E4K85OV19sy8Jrly\",\n  \"meta\": {\n    \"instanceId\": \"f46651348590f9c7e3e7fe91218ed49590c553ab737d5cc247951397ff85fa93\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Domain -> Email Extraction using Apollo API copy\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"02646c75-dad3-4b21-8203-e86732374a2c\",\n      \"name\": \"When clicking ‘Test workflow’\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        -400,\n        -60\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"69175622-b2fb-4a56-83bf-a55290f1c725\",\n      \"name\": \"Loop Targets\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        40,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"5e6af8ff-2bc1-44b4-9523-3e55a785ee4d\",\n      \"name\": \"Pull Target Domains\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        -180,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"filtersUI\": {\n          \"values\": [\n            {\n              \"lookupColumn\": \"Status\"\n            }\n          ]\n        },\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gid=0\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o/edit#gid=0\",\n          \"cachedResultName\": \"Target Domains\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Apollo Data\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"eJnhBFCXl43MdWvb\",\n          \"name\": \"JKM Sheets\"\n        }\n      },\n      \"typeVersion\": 4.5\n    },\n    {\n      \"id\": \"884b3766-8d4b-43a3-8a14-e3eee1a3d678\",\n      \"name\": \"Get People By Domain\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        300,\n        -60\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.apollo.io/v1/mixed_people/search\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"q_organization_domains_list\\\": [\\\"{{ $json['Domain To Enrich'] }}\\\"],\\n  \\\"per_page\\\": 10,\\n  \\\"page\\\": 1\\n}\\n\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-api-key\",\n              \"value\": \"Your  API KEY \"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"df77689b-ccd3-4638-a981-4cf13fbf8a70\",\n      \"name\": \"Clean Up Results\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        480,\n        -60\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Function node code\\nconsole.log('Initial data:', JSON.stringify(items, null, 2));\\n\\n// Get the first item since n8n usually wraps data in an array\\nconst data = items[0].json;\\nconsole.log('Data structure:', JSON.stringify(data, null, 2));\\n\\n// Now process the people data\\nconst people = data.people || [];\\n\\ntry {\\n  return people.map(person => {\\n    console.log('Processing person:', JSON.stringify(person, null, 2));\\n    return {\\n      json: {\\n        firstName: person.first_name || '',\\n        lastName: person.last_name || '',\\n        email: person.email || '',\\n        websiteUrl: person.website_url || '',\\n        linkedinUrl: person.linkedin_url || '',\\n        twitterUrl: person.twitter_url || '',\\n        facebookUrl: person.facebook_url || '',\\n        phone: person.primary_phone?.number || '',\\n        company: {\\n          name: person.company_name || '',\\n          domain: person.primary_domain || '',\\n          foundedYear: person.founded_year || '',\\n          logo: person.logo_url || ''\\n        },\\n        professional: {\\n          departments: person.departments || [],\\n          seniority: person.seniority || '',\\n          functions: person.functions || []\\n        }\\n      }\\n    };\\n  });\\n} catch (error) {\\n  console.log('Error occurred. Full items:', JSON.stringify(items, null, 2));\\n  throw new Error(`Error processing data: ${error.message}`);\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"bc0f01b0-3225-4023-9e21-0bcebab00808\",\n      \"name\": \"Loop Over Results\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        680,\n        -60\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"65533eb2-a738-4cf3-9cbc-480a911e4fb2\",\n      \"name\": \"Get Person Info\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        920,\n        -60\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.apollo.io/api/v1/people/match?first_name={{ $json.firstName }}&last_name={{ $json.lastName }}&domain={{ $('Get People By Domain').item.json.breadcrumbs[0].value[0] }}&reveal_personal_emails=false&reveal_phone_number=false \",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"x-api-key\",\n              \"value\": \"Your API Key\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"4c369c7e-e79b-4bf1-97d4-25abac4256db\",\n      \"name\": \"Clean Up\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1140,\n        -60\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// Function node to extract specific fields from Apollo response\\ntry {\\n    const results = items.map(item => {\\n        const person = item.json.person; // Access the person object directly\\n        \\n        return {\\n            json: {\\n                firstName: person.first_name || '',\\n                lastName: person.last_name || '',\\n                email: person.email || '',\\n                linkedinUrl: person.linkedin_url || '',\\n                title: person.title || '',\\n                twitter: person.twitter_url || '',\\n                facebook: person.facebook_url || '',\\n                organizationName: person.employment_history?.[0]?.organization_name || '', // Get current organization from employment history\\n                headline: person.headline || '',\\n                photoUrl: person.photo_url || ''\\n            }\\n        };\\n    });\\n\\n    console.log(`Successfully processed ${results.length} records`);\\n    return results;\\n\\n} catch (error) {\\n    console.error('Error processing data:', error);\\n    throw new Error(`Failed to process data: ${error.message}`);\\n}\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"f0eaa1e7-299f-4ec8-ae26-90bbe1483a1e\",\n      \"name\": \"Results To Results Sheet\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        1340,\n        -60\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {\n            \"Email\": \"={{ $json.email }}\",\n            \"Title\": \"={{ $json.title }}\",\n            \"Company\": \"={{ $('Loop Targets').item.json['Domain To Enrich'] }}\",\n            \"Last Name\": \"={{ $json.lastName }}\",\n            \"Linkedin \": \"={{ $json.linkedinUrl }}\",\n            \"First Name\": \"={{ $json.firstName }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"Company\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Company\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"First Name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"First Name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Last Name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Last Name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Title\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Title\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Email\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Email\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Linkedin \",\n              \"type\": \"string\",\n              \"display\": true,\n              \"required\": false,\n              \"displayName\": \"Linkedin \",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": 308352805,\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o/edit#gid=308352805\",\n          \"cachedResultName\": \"Results\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1qSlCPA-FqrQZUS7DIqYaZbhdhxZDxIM3xYrswJKEZ-o/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Apollo Data\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"eJnhBFCXl43MdWvb\",\n          \"name\": \"JKM Sheets\"\n        }\n      },\n      \"typeVersion\": 4.5\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"3fe93ef2-9ba0-474e-9b44-dbb9f9fa4fd8\",\n  \"connections\": {\n    \"Clean Up\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Results To Results Sheet\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Targets\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Get People By Domain\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Person Info\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clean Up\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Clean Up Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Targets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Person Info\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Pull Target Domains\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Targets\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get People By Domain\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clean Up Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Results To Results Sheet\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When clicking ‘Test workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Pull Target Domains\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}