{
  "url": "https://n8n.io/workflows/2388-dynamically-generate-a-webpage-from-user-request-using-openai-structured-output/",
  "title": "Dynamically generate a webpage from user request using OpenAI Structured Output",
  "author": "Agent Studio",
  "publish_date": "Last update 9 months ago",
  "publish_date_absolute": "2024-08-25",
  "categories": [
    {
      "name": "AI"
    },
    {
      "name": "IT Ops"
    }
  ],
  "workflow_json": "{\"id\":\"eXiaTDyKfXpMeyLh\",\"meta\":{\"instanceId\":\"f4f5d195bb2162a0972f737368404b18be694648d365d6c6771d7b4909d28167\",\"templateCredsSetupCompleted\":true},\"name\":\"Dynamically generate HTML page from user request using OpenAI Structured Output\",\"tags\":[],\"nodes\":[{\"id\":\"b1d9659f-4cd0-4f87-844d-32b2af1dcf13\",\"name\":\"Respond to Webhook\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[2160,380],\"parameters\":{\"options\":{\"responseHeaders\":{\"entries\":[{\"name\":\"Content-Type\",\"value\":\"text/html; charset=UTF-8\"}]}},\"respondWith\":\"text\",\"responseBody\":\"={{ $json.html }}\"},\"typeVersion\":1.1},{\"id\":\"5ca8ad3e-7702-4f07-af24-d38e94fdc4ec\",\"name\":\"Open AI - Using Structured Output\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1240,380],\"parameters\":{\"url\":\"https://api.openai.com/v1/chat/completions\",\"method\":\"POST\",\"options\":{},\"jsonBody\":\"={\\n  \\\"model\\\": \\\"gpt-4o-2024-08-06\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"system\\\",\\n      \\\"content\\\": \\\"You are a user interface designer and copy writter. Your job is to help users visualize their website ideas. You design elegant and simple webs, with professional text. You use Tailwind framework\\\"\\n    },\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"{{ $json.query.query }}\\\"\\n    }\\n  ],\\n  \\\"response_format\\\":\\n{\\n  \\\"type\\\": \\\"json_schema\\\",\\n  \\\"json_schema\\\": {\\n    \\\"name\\\": \\\"ui\\\",\\n    \\\"description\\\": \\\"Dynamically generated UI\\\",\\n    \\\"strict\\\": true,\\n    \\\"schema\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"type\\\": {\\n          \\\"type\\\": \\\"string\\\",\\n          \\\"description\\\": \\\"The type of the UI component\\\",\\n          \\\"enum\\\": [\\n  \\\"div\\\",\\n  \\\"span\\\",\\n  \\\"a\\\",\\n  \\\"p\\\",\\n  \\\"h1\\\",\\n  \\\"h2\\\",\\n  \\\"h3\\\",\\n  \\\"h4\\\",\\n  \\\"h5\\\",\\n  \\\"h6\\\",\\n  \\\"ul\\\",\\n  \\\"ol\\\",\\n  \\\"li\\\",\\n  \\\"img\\\",\\n  \\\"button\\\",\\n  \\\"input\\\",\\n  \\\"textarea\\\",\\n  \\\"select\\\",\\n  \\\"option\\\",\\n  \\\"label\\\",\\n  \\\"form\\\",\\n  \\\"table\\\",\\n  \\\"thead\\\",\\n  \\\"tbody\\\",\\n  \\\"tr\\\",\\n  \\\"th\\\",\\n  \\\"td\\\",\\n  \\\"nav\\\",\\n  \\\"header\\\",\\n  \\\"footer\\\",\\n  \\\"section\\\",\\n  \\\"article\\\",\\n  \\\"aside\\\",\\n  \\\"main\\\",\\n  \\\"figure\\\",\\n  \\\"figcaption\\\",\\n  \\\"blockquote\\\",\\n  \\\"q\\\",\\n  \\\"hr\\\",\\n  \\\"code\\\",\\n  \\\"pre\\\",\\n  \\\"iframe\\\",\\n  \\\"video\\\",\\n  \\\"audio\\\",\\n  \\\"canvas\\\",\\n  \\\"svg\\\",\\n  \\\"path\\\",\\n  \\\"circle\\\",\\n  \\\"rect\\\",\\n  \\\"line\\\",\\n  \\\"polyline\\\",\\n  \\\"polygon\\\",\\n  \\\"g\\\",\\n  \\\"use\\\",\\n  \\\"symbol\\\"\\n]\\n        },\\n        \\\"label\\\": {\\n          \\\"type\\\": \\\"string\\\",\\n          \\\"description\\\": \\\"The label of the UI component, used for buttons or form fields\\\"\\n        },\\n        \\\"children\\\": {\\n          \\\"type\\\": \\\"array\\\",\\n          \\\"description\\\": \\\"Nested UI components\\\",\\n          \\\"items\\\": {\\n            \\\"$ref\\\": \\\"#\\\"\\n          }\\n        },\\n        \\\"attributes\\\": {\\n          \\\"type\\\": \\\"array\\\",\\n          \\\"description\\\": \\\"Arbitrary attributes for the UI component, suitable for any element using Tailwind framework\\\",\\n          \\\"items\\\": {\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n              \\\"name\\\": {\\n                \\\"type\\\": \\\"string\\\",\\n                \\\"description\\\": \\\"The name of the attribute, for example onClick or className\\\"\\n              },\\n              \\\"value\\\": {\\n                \\\"type\\\": \\\"string\\\",\\n                \\\"description\\\": \\\"The value of the attribute using the Tailwind framework classes\\\"\\n              }\\n            },\\n            \\\"additionalProperties\\\": false,\\n            \\\"required\\\": [\\\"name\\\", \\\"value\\\"]\\n          }\\n        }\\n      },\\n      \\\"required\\\": [\\\"type\\\", \\\"label\\\", \\\"children\\\", \\\"attributes\\\"],\\n      \\\"additionalProperties\\\": false\\n    }\\n  }\\n}\\n}\",\"sendBody\":true,\"sendHeaders\":true,\"specifyBody\":\"json\",\"authentication\":\"predefinedCredentialType\",\"headerParameters\":{\"parameters\":[{\"name\":\"Content-Type\",\"value\":\"application/json\"}]},\"nodeCredentialType\":\"openAiApi\"},\"credentials\":{\"openAiApi\":{\"id\":\"WqzqjezKh8VtxdqA\",\"name\":\"OpenAi account - Baptiste\"}},\"typeVersion\":4.2},{\"id\":\"24e5ca73-a3b3-4096-8c66-d84838d89b0c\",\"name\":\"OpenAI - JSON to HTML\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[1420,380],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\",\"cachedResultName\":\"GPT-4O-MINI\"},\"options\":{\"temperature\":0.2},\"messages\":{\"values\":[{\"role\":\"system\",\"content\":\"You convert a JSON to HTML. \\nThe JSON output has the following fields:\\n- html: the page HTML\\n- title: the page title\"},{\"content\":\"={{ $json.choices[0].message.content }}\"}]},\"jsonOutput\":true},\"credentials\":{\"openAiApi\":{\"id\":\"WqzqjezKh8VtxdqA\",\"name\":\"OpenAi account - Baptiste\"}},\"typeVersion\":1.3},{\"id\":\"c50bdc84-ba59-4f30-acf7-496cee25068d\",\"name\":\"Format the HTML result\",\"type\":\"n8n-nodes-base.html\",\"position\":[1940,380],\"parameters\":{\"html\":\"<!DOCTYPE html>\\n\\n<html>\\n<head>\\n  <meta charset=\\\"UTF-8\\\" />\\n    <script src=\\\"https://cdn.tailwindcss.com\\\"></script>\\n  <title>{{ $json.message.content.title }}</title>\\n</head>\\n<body>\\n{{ $json.message.content.html }}\\n</body>\\n</html>\"},\"typeVersion\":1.2},{\"id\":\"193093f4-b1ce-4964-ab10-c3208e343c69\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1134,62],\"parameters\":{\"color\":7,\"width\":638,\"height\":503,\"content\":\"## Generate HTML from user query\\n\\n**HTTP Request node**\\n- Send the user query to OpenAI, with a defined JSON response format - *using HTTP Request node as it has not yet been implemented in the OpenAI nodes*\\n- The response format is inspired by the [Structured Output defined in OpenAI Introduction post](https://openai.com/index/introducing-structured-outputs-in-the-api)\\n- The output is a JSON containing HTML components and attributed\\n\\n\\n**OpenAI node**\\n- Format the response from the previous node from JSON format to HTML format\"},\"typeVersion\":1},{\"id\":\"0371156a-211f-4d92-82b1-f14fe60d4b6b\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[0,60],\"parameters\":{\"color\":7,\"width\":768,\"height\":503,\"content\":\"## Workflow: Dynamically generate an HTML page from a user request using OpenAI Structured Output\\n\\n**Overview**\\n- This workflow is a experiment to build HTML pages from a user input using the new Structured Output from OpenAI.\\n- The Structured Output could be used in a variety of cases. Essentially, it guarantees the output from the GPT will follow a defined structure (JSON object).\\n- It uses Tailwind CSS to make it slightly nicer, but any\\n\\n**How it works**\\n- Once active, go to the production URL and add what you'd like to build as the parameter \\\"query\\\"\\n- Example: https://production_url.com?query=a%20signup%20form\\n- OpenAI nodes will first output the UI as a JSON then convert it to HTML\\n- Finally, the response is integrated in a HTML container and rendered to the user\\n\\n**Further thoughts**\\n- Results are not yet amazing, it is hard to see the direct value of such an experiment\\n- But it showcase the potential of the Structured Output. Being able to guarantee the output format is key to build robust AI applications.\"},\"typeVersion\":1},{\"id\":\"06380781-5189-4d99-9ecd-d8913ce40fd5\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[820,380],\"webhookId\":\"d962c916-6369-431a-9d80-af6e6a50fdf5\",\"parameters\":{\"path\":\"d962c916-6369-431a-9d80-af6e6a50fdf5\",\"options\":{\"allowedOrigins\":\"*\"},\"responseMode\":\"responseNode\"},\"typeVersion\":2}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"d2307a2a-5427-4769-94a6-10eab703a788\",\"connections\":{\"Webhook\":{\"main\":[[{\"node\":\"Open AI - Using Structured Output\",\"type\":\"main\",\"index\":0}]]},\"OpenAI - JSON to HTML\":{\"main\":[[{\"node\":\"Format the HTML result\",\"type\":\"main\",\"index\":0}]]},\"Format the HTML result\":{\"main\":[[{\"node\":\"Respond to Webhook\",\"type\":\"main\",\"index\":0}]]},\"Open AI - Using Structured Output\":{\"main\":[[{\"node\":\"OpenAI - JSON to HTML\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow is a experiment to build HTML pages from a user input using the new Structured Output from OpenAI.\n\nHow it works:\n\n  * Users add what they want to build as a query parameter\n  * The OpenAI node generate an interface following a structured output defined in the body\n  * The JSON output is then converted to HTML along with a title\n  * The HTML is encapsulated in an HTML node (where the Tailwind css script is added)\n  * The HTML is rendered to the user via the Webhook response.\n\n\n\nSet up steps\n\n  * Create an [OpenAI API Key](https://platform.openai.com/api-keys)\n  * Create the OpenAI credentials\n  * Use the credentials for both nodes HTTP Request (as Predefined Credential type) and OpenAI\n  * Activate your workflow\n  * Once active, go to the production URL and add what you'd like to build as the parameter \"query\"\n  * Example: https://production_url.com?query=a%20signup%20form\n\n\n\nExample of generated page![Screenshot 20240823 at 13.01.56.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_08_23_at_13_01_56_0a9bc1f632.png)\n",
  "crawled_at": "2025-05-25T23:41:29.607625",
  "readme_zh": "此工作流程是一项实验，旨在利用OpenAI的新型结构化输出功能，根据用户输入构建HTML页面。\n\n运作原理：\n\n  * 用户通过查询参数提交想要构建的内容\n  * OpenAI节点根据预定义的结构化输出模板生成界面\n  * 将JSON输出转换为HTML并添加标题\n  * HTML内容封装至HTML节点（内含Tailwind CSS脚本）\n  * 通过Webhook响应将HTML呈现给用户\n\n配置步骤：\n\n  * 创建[OpenAI API密钥](https://platform.openai.com/api-keys)\n  * 配置OpenAI凭证\n  * 为HTTP Request节点（选择预定义凭证类型）和OpenAI节点应用凭证\n  * 激活工作流程\n  * 激活后访问生产环境URL，在\"query\"参数中添加构建需求\n  * 示例：https://production_url.com?query=注册表单\n\n生成页面示例![Screenshot 20240823 at 13.01.56.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Screenshot_2024_08_23_at_13_01_56_0a9bc1f632.png)",
  "title_zh": "根据用户请求使用OpenAI结构化输出动态生成网页",
  "publish_date_zh": "最后更新于8个月前",
  "workflow_json_zh": "{\n  \"id\": \"eXiaTDyKfXpMeyLh\",\n  \"meta\": {\n    \"instanceId\": \"f4f5d195bb2162a0972f737368404b18be694648d365d6c6771d7b4909d28167\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Dynamically generate HTML page from user request using OpenAI Structured Output\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"b1d9659f-4cd0-4f87-844d-32b2af1dcf13\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        2160,\n        380\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseHeaders\": {\n            \"entries\": [\n              {\n                \"name\": \"Content-Type\",\n                \"value\": \"text/html; charset=UTF-8\"\n              }\n            ]\n          }\n        },\n        \"respondWith\": \"text\",\n        \"responseBody\": \"={{ $json.html }}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"5ca8ad3e-7702-4f07-af24-d38e94fdc4ec\",\n      \"name\": \"Open AI - Using Structured Output\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1240,\n        380\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.openai.com/v1/chat/completions\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"jsonBody\": \"={\\n  \\\"model\\\": \\\"gpt-4o-2024-08-06\\\",\\n  \\\"messages\\\": [\\n    {\\n      \\\"role\\\": \\\"system\\\",\\n      \\\"content\\\": \\\"You are a user interface designer and copy writter. Your job is to help users visualize their website ideas. You design elegant and simple webs, with professional text. You use Tailwind framework\\\"\\n    },\\n    {\\n      \\\"role\\\": \\\"user\\\",\\n      \\\"content\\\": \\\"{{ $json.query.query }}\\\"\\n    }\\n  ],\\n  \\\"response_format\\\":\\n{\\n  \\\"type\\\": \\\"json_schema\\\",\\n  \\\"json_schema\\\": {\\n    \\\"name\\\": \\\"ui\\\",\\n    \\\"description\\\": \\\"Dynamically generated UI\\\",\\n    \\\"strict\\\": true,\\n    \\\"schema\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"type\\\": {\\n          \\\"type\\\": \\\"string\\\",\\n          \\\"description\\\": \\\"The type of the UI component\\\",\\n          \\\"enum\\\": [\\n  \\\"div\\\",\\n  \\\"span\\\",\\n  \\\"a\\\",\\n  \\\"p\\\",\\n  \\\"h1\\\",\\n  \\\"h2\\\",\\n  \\\"h3\\\",\\n  \\\"h4\\\",\\n  \\\"h5\\\",\\n  \\\"h6\\\",\\n  \\\"ul\\\",\\n  \\\"ol\\\",\\n  \\\"li\\\",\\n  \\\"img\\\",\\n  \\\"button\\\",\\n  \\\"input\\\",\\n  \\\"textarea\\\",\\n  \\\"select\\\",\\n  \\\"option\\\",\\n  \\\"label\\\",\\n  \\\"form\\\",\\n  \\\"table\\\",\\n  \\\"thead\\\",\\n  \\\"tbody\\\",\\n  \\\"tr\\\",\\n  \\\"th\\\",\\n  \\\"td\\\",\\n  \\\"nav\\\",\\n  \\\"header\\\",\\n  \\\"footer\\\",\\n  \\\"section\\\",\\n  \\\"article\\\",\\n  \\\"aside\\\",\\n  \\\"main\\\",\\n  \\\"figure\\\",\\n  \\\"figcaption\\\",\\n  \\\"blockquote\\\",\\n  \\\"q\\\",\\n  \\\"hr\\\",\\n  \\\"code\\\",\\n  \\\"pre\\\",\\n  \\\"iframe\\\",\\n  \\\"video\\\",\\n  \\\"audio\\\",\\n  \\\"canvas\\\",\\n  \\\"svg\\\",\\n  \\\"path\\\",\\n  \\\"circle\\\",\\n  \\\"rect\\\",\\n  \\\"line\\\",\\n  \\\"polyline\\\",\\n  \\\"polygon\\\",\\n  \\\"g\\\",\\n  \\\"use\\\",\\n  \\\"symbol\\\"\\n]\\n        },\\n        \\\"label\\\": {\\n          \\\"type\\\": \\\"string\\\",\\n          \\\"description\\\": \\\"The label of the UI component, used for buttons or form fields\\\"\\n        },\\n        \\\"children\\\": {\\n          \\\"type\\\": \\\"array\\\",\\n          \\\"description\\\": \\\"Nested UI components\\\",\\n          \\\"items\\\": {\\n            \\\"$ref\\\": \\\"#\\\"\\n          }\\n        },\\n        \\\"attributes\\\": {\\n          \\\"type\\\": \\\"array\\\",\\n          \\\"description\\\": \\\"Arbitrary attributes for the UI component, suitable for any element using Tailwind framework\\\",\\n          \\\"items\\\": {\\n            \\\"type\\\": \\\"object\\\",\\n            \\\"properties\\\": {\\n              \\\"name\\\": {\\n                \\\"type\\\": \\\"string\\\",\\n                \\\"description\\\": \\\"The name of the attribute, for example onClick or className\\\"\\n              },\\n              \\\"value\\\": {\\n                \\\"type\\\": \\\"string\\\",\\n                \\\"description\\\": \\\"The value of the attribute using the Tailwind framework classes\\\"\\n              }\\n            },\\n            \\\"additionalProperties\\\": false,\\n            \\\"required\\\": [\\\"name\\\", \\\"value\\\"]\\n          }\\n        }\\n      },\\n      \\\"required\\\": [\\\"type\\\", \\\"label\\\", \\\"children\\\", \\\"attributes\\\"],\\n      \\\"additionalProperties\\\": false\\n    }\\n  }\\n}\\n}\",\n        \"sendBody\": true,\n        \"sendHeaders\": true,\n        \"specifyBody\": \"json\",\n        \"authentication\": \"predefinedCredentialType\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"nodeCredentialType\": \"openAiApi\"\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"WqzqjezKh8VtxdqA\",\n          \"name\": \"OpenAi account - Baptiste\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"24e5ca73-a3b3-4096-8c66-d84838d89b0c\",\n      \"name\": \"OpenAI - JSON to HTML\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        1420,\n        380\n      ],\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\",\n          \"cachedResultName\": \"GPT-4O-MINI\"\n        },\n        \"options\": {\n          \"temperature\": 0.2\n        },\n        \"messages\": {\n          \"values\": [\n            {\n              \"role\": \"system\",\n              \"content\": \"You convert a JSON to HTML. \\nThe JSON output has the following fields:\\n- html: the page HTML\\n- title: the page title\"\n            },\n            {\n              \"content\": \"={{ $json.choices[0].message.content }}\"\n            }\n          ]\n        },\n        \"jsonOutput\": true\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"WqzqjezKh8VtxdqA\",\n          \"name\": \"OpenAi account - Baptiste\"\n        }\n      },\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"c50bdc84-ba59-4f30-acf7-496cee25068d\",\n      \"name\": \"Format the HTML result\",\n      \"type\": \"n8n-nodes-base.html\",\n      \"position\": [\n        1940,\n        380\n      ],\n      \"parameters\": {\n        \"html\": \"<!DOCTYPE html>\\n\\n<html>\\n<head>\\n  <meta charset=\\\"UTF-8\\\" />\\n    <script src=\\\"https://cdn.tailwindcss.com\\\"></script>\\n  <title>{{ $json.message.content.title }}</title>\\n</head>\\n<body>\\n{{ $json.message.content.html }}\\n</body>\\n</html>\"\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"193093f4-b1ce-4964-ab10-c3208e343c69\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1134,\n        62\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 638,\n        \"height\": 503,\n        \"content\": \"## 根据用户查询生成HTML\\n\\n**HTTP请求节点**\\n- 将用户查询发送至OpenAI，并指定JSON响应格式 - *由于OpenAI节点尚未实现此功能，故采用HTTP请求节点*\\n- 响应格式参考[OpenAI介绍文章中的结构化输出](https://openai.com/index/introducing-structured-outputs-in-the-api)\\n- 输出为包含HTML组件及属性的JSON数据\\n\\n\\n**OpenAI节点**\\n- 将前序节点的JSON格式响应转换为HTML格式\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0371156a-211f-4d92-82b1-f14fe60d4b6b\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        0,\n        60\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 768,\n        \"height\": 503,\n        \"content\": \"## 工作流：利用OpenAI结构化输出动态生成用户请求的HTML页面\\n\\n**概述**\\n- 本工作流是一项实验性尝试，通过OpenAI的全新结构化输出功能，根据用户输入构建HTML页面。\\n- 结构化输出可应用于多种场景，其核心价值在于确保GPT的输出遵循预定义结构（JSON对象）。\\n- 采用Tailwind CSS进行基础美化（但不仅限于此）\\n\\n**运作原理**\\n- 激活工作流后，访问生产环境URL并在\\\"query\\\"参数中添加构建需求\\n- 示例：https://production_url.com?query=a%20signup%20form\\n- OpenAI节点会先将UI以JSON格式输出，再转换为HTML\\n- 最终响应会被嵌入HTML容器并渲染给用户\\n\\n**延伸思考**\\n- 当前生成效果尚未达到惊艳程度，此类实验的直接价值较难显现\\n- 但充分展示了结构化输出的潜力——确保输出格式的可控性，是构建稳健AI应用的关键所在\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"06380781-5189-4d99-9ecd-d8913ce40fd5\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        820,\n        380\n      ],\n      \"webhookId\": \"d962c916-6369-431a-9d80-af6e6a50fdf5\",\n      \"parameters\": {\n        \"path\": \"d962c916-6369-431a-9d80-af6e6a50fdf5\",\n        \"options\": {\n          \"allowedOrigins\": \"*\"\n        },\n        \"responseMode\": \"responseNode\"\n      },\n      \"typeVersion\": 2\n    }\n  ],\n  \"active\": true,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"d2307a2a-5427-4769-94a6-10eab703a788\",\n  \"connections\": {\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Open AI - Using Structured Output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI - JSON to HTML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format the HTML result\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format the HTML result\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Open AI - Using Structured Output\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI - JSON to HTML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}