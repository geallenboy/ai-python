{
  "url": "https://n8n.io/workflows/2652-backup-your-workflows-to-github/",
  "title": "Backup your workflows to GitHub",
  "author": "Solomon",
  "publish_date": "Last update 4 months ago",
  "publish_date_absolute": "2025-01-26",
  "categories": [
    {
      "name": "Other"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"d6b502dfa4d9dd072cdc5c2bb763558661053f651289291352a84403e01b3d1b\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"42cc4260-626e-4f83-b1c3-c78c99b78b38\",\"name\":\"On clicking 'execute'\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[1780,520],\"parameters\":{},\"typeVersion\":1},{\"id\":\"f21386ff-f8db-4f5d-a44c-15484d1e4ab7\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1340,900],\"parameters\":{\"color\":6,\"width\":2086.845881354743,\"height\":750.8363163824032,\"content\":\"## Subworkflow\"},\"typeVersion\":1},{\"id\":\"82851e4a-33a1-461b-965f-f51efcb5af90\",\"name\":\"n8n\",\"type\":\"n8n-nodes-base.n8n\",\"position\":[2040,620],\"parameters\":{\"filters\":{},\"requestOptions\":{}},\"credentials\":{\"n8nApi\":{\"id\":\"1SDBLwjifPzb02W8\",\"name\":\"n8n account\"}},\"typeVersion\":1},{\"id\":\"90cac8e2-9509-4d48-9038-bb653ffbdf9d\",\"name\":\"Return\",\"type\":\"n8n-nodes-base.set\",\"position\":[3220,1100],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"8d513345-6484-431f-afb7-7cf045c90f4f\",\"name\":\"Done\",\"type\":\"boolean\",\"value\":true}]}},\"typeVersion\":3.3},{\"id\":\"11046021-89ba-4e61-b03f-d606e7dd0a56\",\"name\":\"Get File\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2320,980],\"parameters\":{\"url\":\"={{ $json.download_url }}\",\"options\":{}},\"typeVersion\":4.2},{\"id\":\"08af670c-ac82-422f-9938-c649dfdfbcf6\",\"name\":\"If file too large\",\"type\":\"n8n-nodes-base.if\",\"position\":[2120,1000],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":1,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"45ce825e-9fa6-430c-8931-9aaf22c42585\",\"operator\":{\"type\":\"string\",\"operation\":\"empty\",\"singleValue\":true},\"leftValue\":\"={{ $json.content }}\",\"rightValue\":\"\"},{\"id\":\"9619a55f-7fb1-4f24-b1a7-7aeb82365806\",\"operator\":{\"type\":\"string\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.error }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2},{\"id\":\"795fd895-94b2-46f1-b559-748b0db01c49\",\"name\":\"Merge Items\",\"type\":\"n8n-nodes-base.merge\",\"position\":[2120,1260],\"parameters\":{},\"typeVersion\":2},{\"id\":\"3d3399f3-bbfb-48ab-8644-91b28e731026\",\"name\":\"isDiffOrNew\",\"type\":\"n8n-nodes-base.code\",\"position\":[2320,1260],\"parameters\":{\"jsCode\":\"const orderJsonKeys = (jsonObj) => {\\n  const ordered = {};\\n  Object.keys(jsonObj).sort().forEach(key => {\\n    ordered[key] = jsonObj[key];\\n  });\\n  return ordered;\\n}\\n\\n// Check if file returned with content\\nif (Object.keys($input.all()[0].json).includes(\\\"content\\\")) {\\n  // Decode base64 content and parse JSON\\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\\n  const n8nWorkflow = $input.all()[1].json;\\n  \\n  // Order JSON objects\\n  const orderedOriginal = orderJsonKeys(origWorkflow);\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n\\n  // Determine difference\\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\\n    $input.all()[0].json.github_status = \\\"same\\\";\\n  } else {\\n    $input.all()[0].json.github_status = \\\"different\\\";\\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n  }\\n  $input.all()[0].json.content_decoded = orderedOriginal;\\n// No file returned / new workflow\\n} else if (Object.keys($input.all()[0].json).includes(\\\"data\\\")) {\\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\\n  const n8nWorkflow = $input.all()[1].json;\\n  \\n  // Order JSON objects\\n  const orderedOriginal = orderJsonKeys(origWorkflow);\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n\\n  // Determine difference\\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\\n    $input.all()[0].json.github_status = \\\"same\\\";\\n  } else {\\n    $input.all()[0].json.github_status = \\\"different\\\";\\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n  }\\n  $input.all()[0].json.content_decoded = orderedOriginal;\\n\\n} else {\\n  // Order JSON object\\n  const n8nWorkflow = $input.all()[1].json;\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n  \\n  // Proper formatting\\n  $input.all()[0].json.github_status = \\\"new\\\";\\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n}\\n\\n// Return items\\nreturn $input.all();\"},\"typeVersion\":1},{\"id\":\"2f2f42d0-d27c-4856-a263-4d5e9eda2c4c\",\"name\":\"Check Status\",\"type\":\"n8n-nodes-base.switch\",\"position\":[2540,1260],\"parameters\":{\"rules\":{\"rules\":[{\"value2\":\"same\"},{\"output\":1,\"value2\":\"different\"},{\"output\":2,\"value2\":\"new\"}]},\"value1\":\"={{$json.github_status}}\",\"dataType\":\"string\"},\"typeVersion\":1},{\"id\":\"5316029f-f32f-4a8d-95de-50ee57051a08\",\"name\":\"Same file - Do nothing\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[2760,1100],\"parameters\":{},\"typeVersion\":1},{\"id\":\"37c5983b-48fe-41d5-8e3a-eb56dec2140b\",\"name\":\"File is different\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[2760,1260],\"parameters\":{},\"typeVersion\":1},{\"id\":\"a4dcce9e-b0d0-4b9e-ab16-9142e641c73d\",\"name\":\"File is new\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[2760,1420],\"parameters\":{},\"typeVersion\":1},{\"id\":\"03fcfdc4-2e52-42f0-a129-3ebaf8dd8fc1\",\"name\":\"Create new file\",\"type\":\"n8n-nodes-base.github\",\"position\":[2980,1420],\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $('Globals').item.json.repo.owner }}\"},\"filePath\":\"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json\",\"resource\":\"file\",\"repository\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $('Globals').item.json.repo.name }}\"},\"fileContent\":\"={{$('isDiffOrNew').item.json[\\\"n8n_data_stringy\\\"]}}\",\"commitMessage\":\"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})\"},\"credentials\":{\"githubApi\":{\"id\":\"3mfzXcMjoqNHsujs\",\"name\":\"GitHub account\"}},\"typeVersion\":1},{\"id\":\"dd35cc39-4ab4-4d53-b439-b425a2177e8f\",\"name\":\"Edit existing file\",\"type\":\"n8n-nodes-base.github\",\"position\":[2980,1240],\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $('Globals').item.json.repo.owner }}\"},\"filePath\":\"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json\",\"resource\":\"file\",\"operation\":\"edit\",\"repository\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $('Globals').item.json.repo.name }}\"},\"fileContent\":\"={{$('isDiffOrNew').item.json[\\\"n8n_data_stringy\\\"]}}\",\"commitMessage\":\"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})\"},\"credentials\":{\"githubApi\":{\"id\":\"3mfzXcMjoqNHsujs\",\"name\":\"GitHub account\"}},\"typeVersion\":1},{\"id\":\"d05e2a25-24be-43fb-baa4-9c3391840e70\",\"name\":\"Loop Over Items\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[2240,620],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"2a139d59-1387-4899-88b3-21106cd01099\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[1780,720],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"hours\",\"hoursInterval\":2}]}},\"typeVersion\":1.2},{\"id\":\"04e6c245-3117-4ef8-a181-754e616e958b\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1340,273.8835396388249],\"parameters\":{\"color\":4,\"width\":371.1995072042308,\"height\":600.88409546716,\"content\":\"## Backup to GitHub \\nThis workflow will backup all instance workflows to GitHub.\\n\\nThe files are saved `ID.json` for the filename.\\n\\n### Setup\\nOpen `Globals` node and update the values below 👇\\n\\n- **repo.owner:** your Github username\\n- **repo.name:** the name of your repository\\n- **repo.path:** the folder to use within the repository. If it doesn't exist it will be created.\\n\\n\\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\\n\\n- repo.owner - john-doe\\n- repo.name - n8n-backups\\n- repo.path - workflows/\\n\\n\\nThe workflow calls itself using a subworkflow, to help reduce memory usage.\"},\"typeVersion\":1},{\"id\":\"3d996985-0064-4749-85a1-2191c73746c9\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1740,440],\"parameters\":{\"color\":7,\"width\":886.4410237965205,\"height\":434.88564057365943,\"content\":\"## Main workflow loop\"},\"typeVersion\":1},{\"id\":\"c9bfa393-e120-4bfe-b957-702756b91aaf\",\"name\":\"Get file data\",\"type\":\"n8n-nodes-base.github\",\"position\":[1920,1000],\"parameters\":{\"owner\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $json.repo.owner }}\"},\"filePath\":\"={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json\",\"resource\":\"file\",\"operation\":\"get\",\"repository\":{\"__rl\":true,\"mode\":\"name\",\"value\":\"={{ $json.repo.name }}\"},\"asBinaryProperty\":false,\"additionalParameters\":{}},\"credentials\":{\"githubApi\":{\"id\":\"3mfzXcMjoqNHsujs\",\"name\":\"GitHub account\"}},\"typeVersion\":1,\"continueOnFail\":true,\"alwaysOutputData\":true},{\"id\":\"d42ddc37-3bd9-4f19-8831-695bec4d0137\",\"name\":\"Globals\",\"type\":\"n8n-nodes-base.set\",\"position\":[1700,1160],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"6cf546c5-5737-4dbd-851b-17d68e0a3780\",\"name\":\"repo.owner\",\"type\":\"string\",\"value\":\"john-doe\"},{\"id\":\"452efa28-2dc6-4ea3-a7a2-c35d100d0382\",\"name\":\"repo.name\",\"type\":\"string\",\"value\":\"n8n-backup\"},{\"id\":\"81c4dc54-86bf-4432-a23f-22c7ea831e74\",\"name\":\"repo.path\",\"type\":\"string\",\"value\":\"workflows/\"}]}},\"typeVersion\":3.4},{\"id\":\"e970c63c-2aa2-46f9-be04-f045b6a938de\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1660,1060],\"parameters\":{\"color\":4,\"width\":150,\"height\":80,\"content\":\"## Edit this node 👇\"},\"typeVersion\":1},{\"id\":\"5b1991f7-0351-44de-908d-9aa8b8262d60\",\"name\":\"Execute Workflow Trigger\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[1420,1280],\"parameters\":{\"inputSource\":\"passthrough\"},\"typeVersion\":1.1},{\"id\":\"8e5b3f71-0c5e-4e78-a3f7-0b574c9ddf06\",\"name\":\"Execute Workflow\",\"type\":\"n8n-nodes-base.executeWorkflow\",\"position\":[2460,620],\"parameters\":{\"mode\":\"each\",\"options\":{},\"workflowId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $workflow.id }}\"},\"workflowInputs\":{\"value\":{},\"schema\":[],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[],\"attemptToConvertTypes\":false,\"convertFieldsToString\":true}},\"typeVersion\":1.2}],\"pinData\":{},\"connections\":{\"n8n\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Globals\":{\"main\":[[{\"node\":\"Get file data\",\"type\":\"main\",\"index\":0}]]},\"Get File\":{\"main\":[[{\"node\":\"Merge Items\",\"type\":\"main\",\"index\":0}]]},\"File is new\":{\"main\":[[{\"node\":\"Create new file\",\"type\":\"main\",\"index\":0}]]},\"Merge Items\":{\"main\":[[{\"node\":\"isDiffOrNew\",\"type\":\"main\",\"index\":0}]]},\"isDiffOrNew\":{\"main\":[[{\"node\":\"Check Status\",\"type\":\"main\",\"index\":0}]]},\"Check Status\":{\"main\":[[{\"node\":\"Same file - Do nothing\",\"type\":\"main\",\"index\":0}],[{\"node\":\"File is different\",\"type\":\"main\",\"index\":0}],[{\"node\":\"File is new\",\"type\":\"main\",\"index\":0}]]},\"Get file data\":{\"main\":[[{\"node\":\"If file too large\",\"type\":\"main\",\"index\":0}]]},\"Create new file\":{\"main\":[[{\"node\":\"Return\",\"type\":\"main\",\"index\":0}]]},\"Loop Over Items\":{\"main\":[[],[{\"node\":\"Execute Workflow\",\"type\":\"main\",\"index\":0}]]},\"Execute Workflow\":{\"main\":[[{\"node\":\"Loop Over Items\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"n8n\",\"type\":\"main\",\"index\":0}]]},\"File is different\":{\"main\":[[{\"node\":\"Edit existing file\",\"type\":\"main\",\"index\":0}]]},\"If file too large\":{\"main\":[[{\"node\":\"Get File\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Merge Items\",\"type\":\"main\",\"index\":0}]]},\"Edit existing file\":{\"main\":[[{\"node\":\"Return\",\"type\":\"main\",\"index\":0}]]},\"On clicking 'execute'\":{\"main\":[[{\"node\":\"n8n\",\"type\":\"main\",\"index\":0}]]},\"Same file - Do nothing\":{\"main\":[[{\"node\":\"Return\",\"type\":\"main\",\"index\":0}]]},\"Execute Workflow Trigger\":{\"main\":[[{\"node\":\"Globals\",\"type\":\"main\",\"index\":0},{\"node\":\"Merge Items\",\"type\":\"main\",\"index\":1}]]}}}",
  "readme": "Based on [Jonathan's](https://n8n.io/creators/jon-n8n/) work. Check out his templates.\n\n### How it works\n\nThis workflow will backup your workflows to GitHub. It uses the n8n API node to export all workflows.\n\nIt then loops over the data, checks in GitHub to see if a file exists that uses the credential's ID. Once checked it will:\n\n  * update the file on GitHub if it exists;\n  * create a new file if it doesn't exist;\n  * ignore if it's the same.\n\n\n\n### Who is this for?\n\nPeople wanting to backup their workflows outside the server for safety purposes or to migrate to another server.\n\n### Check out my other templates\n\n👉 [**https://n8n.io/creators/solomon/**](https://n8n.io/creators/solomon/)\n",
  "crawled_at": "2025-05-26T01:36:27.685746",
  "readme_zh": "基于[Jonathan](https://n8n.io/creators/jon-n8n/)的作品。查看他的模板集。\n\n### 运作原理\n\n本工作流可将您的所有工作流备份至GitHub。通过调用n8n API节点实现全量工作流导出。\n\n系统会遍历导出数据，并在GitHub中校验是否存在对应凭证ID的文件。核验后将执行以下操作：\n  * 若文件已存在则更新GitHub文件\n  * 若不存在则创建新文件\n  * 内容无变更则跳过处理\n\n### 适用场景\n\n适用于需要将工作流备份至外部服务器确保数据安全，或准备迁移至其他服务器的用户。\n\n### 探索更多模板\n\n👉 [**https://n8n.io/creators/solomon/**](https://n8n.io/creators/solomon/)",
  "title_zh": "将您的工作流程备份至GitHub",
  "publish_date_zh": "最后更新于4个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"d6b502dfa4d9dd072cdc5c2bb763558661053f651289291352a84403e01b3d1b\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"42cc4260-626e-4f83-b1c3-c78c99b78b38\",\n      \"name\": \"On clicking 'execute'\",\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"position\": [\n        1780,\n        520\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f21386ff-f8db-4f5d-a44c-15484d1e4ab7\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1340,\n        900\n      ],\n      \"parameters\": {\n        \"color\": 6,\n        \"width\": 2086.845881354743,\n        \"height\": 750.8363163824032,\n        \"content\": \"## 子工作流\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"82851e4a-33a1-461b-965f-f51efcb5af90\",\n      \"name\": \"n8n\",\n      \"type\": \"n8n-nodes-base.n8n\",\n      \"position\": [\n        2040,\n        620\n      ],\n      \"parameters\": {\n        \"filters\": {},\n        \"requestOptions\": {}\n      },\n      \"credentials\": {\n        \"n8nApi\": {\n          \"id\": \"1SDBLwjifPzb02W8\",\n          \"name\": \"n8n account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"90cac8e2-9509-4d48-9038-bb653ffbdf9d\",\n      \"name\": \"Return\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        3220,\n        1100\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"8d513345-6484-431f-afb7-7cf045c90f4f\",\n              \"name\": \"Done\",\n              \"type\": \"boolean\",\n              \"value\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"11046021-89ba-4e61-b03f-d606e7dd0a56\",\n      \"name\": \"Get File\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2320,\n        980\n      ],\n      \"parameters\": {\n        \"url\": \"={{ $json.download_url }}\",\n        \"options\": {}\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"08af670c-ac82-422f-9938-c649dfdfbcf6\",\n      \"name\": \"If file too large\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2120,\n        1000\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 1,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"45ce825e-9fa6-430c-8931-9aaf22c42585\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"empty\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.content }}\",\n              \"rightValue\": \"\"\n            },\n            {\n              \"id\": \"9619a55f-7fb1-4f24-b1a7-7aeb82365806\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.error }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"795fd895-94b2-46f1-b559-748b0db01c49\",\n      \"name\": \"Merge Items\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        2120,\n        1260\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"3d3399f3-bbfb-48ab-8644-91b28e731026\",\n      \"name\": \"isDiffOrNew\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        2320,\n        1260\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const orderJsonKeys = (jsonObj) => {\\n  const ordered = {};\\n  Object.keys(jsonObj).sort().forEach(key => {\\n    ordered[key] = jsonObj[key];\\n  });\\n  return ordered;\\n}\\n\\n// Check if file returned with content\\nif (Object.keys($input.all()[0].json).includes(\\\"content\\\")) {\\n  // Decode base64 content and parse JSON\\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\\n  const n8nWorkflow = $input.all()[1].json;\\n  \\n  // Order JSON objects\\n  const orderedOriginal = orderJsonKeys(origWorkflow);\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n\\n  // Determine difference\\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\\n    $input.all()[0].json.github_status = \\\"same\\\";\\n  } else {\\n    $input.all()[0].json.github_status = \\\"different\\\";\\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n  }\\n  $input.all()[0].json.content_decoded = orderedOriginal;\\n// No file returned / new workflow\\n} else if (Object.keys($input.all()[0].json).includes(\\\"data\\\")) {\\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\\n  const n8nWorkflow = $input.all()[1].json;\\n  \\n  // Order JSON objects\\n  const orderedOriginal = orderJsonKeys(origWorkflow);\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n\\n  // Determine difference\\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\\n    $input.all()[0].json.github_status = \\\"same\\\";\\n  } else {\\n    $input.all()[0].json.github_status = \\\"different\\\";\\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n  }\\n  $input.all()[0].json.content_decoded = orderedOriginal;\\n\\n} else {\\n  // Order JSON object\\n  const n8nWorkflow = $input.all()[1].json;\\n  const orderedActual = orderJsonKeys(n8nWorkflow);\\n  \\n  // Proper formatting\\n  $input.all()[0].json.github_status = \\\"new\\\";\\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\\n}\\n\\n// Return items\\nreturn $input.all();\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2f2f42d0-d27c-4856-a263-4d5e9eda2c4c\",\n      \"name\": \"Check Status\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        2540,\n        1260\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"same\"\n            },\n            {\n              \"output\": 1,\n              \"value2\": \"different\"\n            },\n            {\n              \"output\": 2,\n              \"value2\": \"new\"\n            }\n          ]\n        },\n        \"value1\": \"={{$json.github_status}}\",\n        \"dataType\": \"string\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5316029f-f32f-4a8d-95de-50ee57051a08\",\n      \"name\": \"Same file - Do nothing\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2760,\n        1100\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"37c5983b-48fe-41d5-8e3a-eb56dec2140b\",\n      \"name\": \"File is different\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2760,\n        1260\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4dcce9e-b0d0-4b9e-ab16-9142e641c73d\",\n      \"name\": \"File is new\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        2760,\n        1420\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"03fcfdc4-2e52-42f0-a129-3ebaf8dd8fc1\",\n      \"name\": \"Create new file\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        2980,\n        1420\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $('Globals').item.json.repo.owner }}\"\n        },\n        \"filePath\": \"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json\",\n        \"resource\": \"file\",\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $('Globals').item.json.repo.name }}\"\n        },\n        \"fileContent\": \"={{$('isDiffOrNew').item.json[\\\"n8n_data_stringy\\\"]}}\",\n        \"commitMessage\": \"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})\"\n      },\n      \"credentials\": {\n        \"githubApi\": {\n          \"id\": \"3mfzXcMjoqNHsujs\",\n          \"name\": \"GitHub account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"dd35cc39-4ab4-4d53-b439-b425a2177e8f\",\n      \"name\": \"Edit existing file\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        2980,\n        1240\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $('Globals').item.json.repo.owner }}\"\n        },\n        \"filePath\": \"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json\",\n        \"resource\": \"file\",\n        \"operation\": \"edit\",\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $('Globals').item.json.repo.name }}\"\n        },\n        \"fileContent\": \"={{$('isDiffOrNew').item.json[\\\"n8n_data_stringy\\\"]}}\",\n        \"commitMessage\": \"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})\"\n      },\n      \"credentials\": {\n        \"githubApi\": {\n          \"id\": \"3mfzXcMjoqNHsujs\",\n          \"name\": \"GitHub account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d05e2a25-24be-43fb-baa4-9c3391840e70\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"position\": [\n        2240,\n        620\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"2a139d59-1387-4899-88b3-21106cd01099\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        1780,\n        720\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"hours\",\n              \"hoursInterval\": 2\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"04e6c245-3117-4ef8-a181-754e616e958b\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1340,\n        273.8835396388249\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 371.1995072042308,\n        \"height\": 600.88409546716,\n        \"content\": \"## 备份至 GitHub  \\n此工作流会将所有实例工作流备份至GitHub。\\n\\n文件将以`ID.json`格式保存。\\n\\n### 设置步骤  \\n打开`Globals`节点并更新以下值 👇  \\n\\n- **repo.owner:** 您的GitHub用户名  \\n- **repo.name:** 仓库名称  \\n- **repo.path:** 仓库内用于存放的文件夹路径（若不存在将自动创建）  \\n\\n示例：若用户名为`john-doe`，仓库名为`n8n-backups`，且希望工作流文件存入`workflows`文件夹，则应设置为：  \\n\\n- repo.owner - john-doe  \\n- repo.name - n8n-backups  \\n- repo.path - workflows/  \\n\\n该工作流通过子工作流递归调用自身，以优化内存占用。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3d996985-0064-4749-85a1-2191c73746c9\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1740,\n        440\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 886.4410237965205,\n        \"height\": 434.88564057365943,\n        \"content\": \"## 主工作流程循环\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c9bfa393-e120-4bfe-b957-702756b91aaf\",\n      \"name\": \"Get file data\",\n      \"type\": \"n8n-nodes-base.github\",\n      \"position\": [\n        1920,\n        1000\n      ],\n      \"parameters\": {\n        \"owner\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $json.repo.owner }}\"\n        },\n        \"filePath\": \"={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json\",\n        \"resource\": \"file\",\n        \"operation\": \"get\",\n        \"repository\": {\n          \"__rl\": true,\n          \"mode\": \"name\",\n          \"value\": \"={{ $json.repo.name }}\"\n        },\n        \"asBinaryProperty\": false,\n        \"additionalParameters\": {}\n      },\n      \"credentials\": {\n        \"githubApi\": {\n          \"id\": \"3mfzXcMjoqNHsujs\",\n          \"name\": \"GitHub account\"\n        }\n      },\n      \"typeVersion\": 1,\n      \"continueOnFail\": true,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"d42ddc37-3bd9-4f19-8831-695bec4d0137\",\n      \"name\": \"Globals\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1700,\n        1160\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6cf546c5-5737-4dbd-851b-17d68e0a3780\",\n              \"name\": \"repo.owner\",\n              \"type\": \"string\",\n              \"value\": \"john-doe\"\n            },\n            {\n              \"id\": \"452efa28-2dc6-4ea3-a7a2-c35d100d0382\",\n              \"name\": \"repo.name\",\n              \"type\": \"string\",\n              \"value\": \"n8n-backup\"\n            },\n            {\n              \"id\": \"81c4dc54-86bf-4432-a23f-22c7ea831e74\",\n              \"name\": \"repo.path\",\n              \"type\": \"string\",\n              \"value\": \"workflows/\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"e970c63c-2aa2-46f9-be04-f045b6a938de\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1660,\n        1060\n      ],\n      \"parameters\": {\n        \"color\": 4,\n        \"width\": 150,\n        \"height\": 80,\n        \"content\": \"## 编辑此节点 👇\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5b1991f7-0351-44de-908d-9aa8b8262d60\",\n      \"name\": \"Execute Workflow Trigger\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        1420,\n        1280\n      ],\n      \"parameters\": {\n        \"inputSource\": \"passthrough\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"8e5b3f71-0c5e-4e78-a3f7-0b574c9ddf06\",\n      \"name\": \"Execute Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflow\",\n      \"position\": [\n        2460,\n        620\n      ],\n      \"parameters\": {\n        \"mode\": \"each\",\n        \"options\": {},\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $workflow.id }}\"\n        },\n        \"workflowInputs\": {\n          \"value\": {},\n          \"schema\": [],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": true\n        }\n      },\n      \"typeVersion\": 1.2\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"n8n\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Globals\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get file data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"File is new\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create new file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"isDiffOrNew\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"isDiffOrNew\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Same file - Do nothing\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"File is different\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"File is new\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get file data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If file too large\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create new file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Return\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Execute Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"n8n\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"File is different\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit existing file\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If file too large\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Merge Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit existing file\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Return\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"On clicking 'execute'\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"n8n\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Same file - Do nothing\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Return\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Execute Workflow Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Globals\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge Items\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    }\n  }\n}"
}