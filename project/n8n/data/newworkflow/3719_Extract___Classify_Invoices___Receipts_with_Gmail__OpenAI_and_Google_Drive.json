{
  "url": "https://n8n.io/workflows/3719-extract-and-classify-invoices-and-receipts-with-gmail-openai-and-google-drive/",
  "title": "Extract & Classify Invoices & Receipts with Gmail, OpenAI and Google Drive",
  "author": "Tom",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "Finance"
    },
    {
      "name": "AI"
    },
    {
      "name": "IT Ops"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"d1b60f1865ef6504ee3af5be4ef9a7387762b4132615a52de808456d52e8d336\",\"templateCredsSetupCompleted\":true},\"nodes\":[{\"id\":\"c84f3a9a-66b3-4a09-b06a-9b399ea574b8\",\"name\":\"OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"position\":[420,-240],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4.1-mini\",\"cachedResultName\":\"GPT-4.1-MINI\"},\"options\":{},\"messages\":{\"values\":[{\"content\":\"=Does this PDF file look like a {{ $(\\\"Configure\\\").first().json[\\\"Match on\\\"] }}? Return \\\"true\\\" if it is a {{ $(\\\"Configure\\\").first().json[\\\"Match on\\\"] }} and \\\"false\\\" if not. Only reply with lowercase letters \\\"true\\\" or \\\"false\\\".\\n\\nThis is the PDF filename:\\n```\\n{{ $binary.data.fileName }}\\n```\\n\\nThis is the PDF text content:\\n```\\n{{ $json.text }}\\n```\"}]}},\"credentials\":{\"openAiApi\":{\"id\":\"prYAbsQvWl1pPbdL\",\"name\":\"OpenAi account\"}},\"typeVersion\":1.8},{\"id\":\"ea1fbc5b-1859-4d65-8401-30baa95fcc52\",\"name\":\"Configure\",\"type\":\"n8n-nodes-base.set\",\"position\":[-700,0],\"parameters\":{\"values\":{\"number\":[{\"name\":\"maxTokenSize\",\"value\":8000},{\"name\":\"replyTokenSize\",\"value\":50}],\"string\":[{\"name\":\"Match on\",\"value\":\"receipt or invoice that can be considered a software engineering business cost\"},{\"name\":\"Google Drive folder to upload matched PDFs\",\"value\":\"https://drive.google.com/drive/folders/[put_folder_id_here]\"},{\"name\":\"sendInvoicesTo\"}],\"boolean\":[{\"name\":\"sendEmail\",\"value\":\"={{ $('Webhook').item.json.body.sendEmail === \\\"true\\\" }}\"}]},\"options\":{}},\"typeVersion\":1},{\"id\":\"3ee63612-c1e7-40e6-a38f-f77f5ee3efa4\",\"name\":\"Iterate over email attachments\",\"type\":\"n8n-nodes-base.code\",\"position\":[-200,0],\"parameters\":{\"jsCode\":\"// https://community.n8n.io/t/iterating-over-email-attachments/13588/3\\nlet results = [];\\n\\nfor (const item of $input.all()) {\\n  console.log(item);\\n  for (const key of Object.keys(item.binary)) {\\n    results.push({\\n        json: {},\\n        binary: {\\n            data: item.binary[key],\\n        }\\n    });\\n  }\\n}\\n\\nreturn results;\"},\"typeVersion\":1},{\"id\":\"3e638471-c1c5-4bab-aa2a-12a1777225ec\",\"name\":\"Not a PDF\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[120,80],\"parameters\":{},\"typeVersion\":1},{\"id\":\"b5af902b-2d59-49ee-b6d8-e387c59b89fd\",\"name\":\"Is text within token limit?\",\"type\":\"n8n-nodes-base.if\",\"position\":[300,-100],\"parameters\":{\"conditions\":{\"boolean\":[{\"value1\":\"={{ $json.text.length() / 4 <= $('Configure').first().json.maxTokenSize - $('Configure').first().json.replyTokenSize }}\",\"value2\":true}]}},\"typeVersion\":1},{\"id\":\"a0a8895c-ef8b-44e7-9294-1bcf629d0973\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[720,-120],\"parameters\":{\"mode\":\"combine\",\"options\":{\"clashHandling\":{\"values\":{\"resolveClash\":\"preferInput1\"}}},\"combinationMode\":\"mergeByPosition\"},\"typeVersion\":2},{\"id\":\"7565118a-6d44-4583-a19f-cb4177378d33\",\"name\":\"Is matched\",\"type\":\"n8n-nodes-base.if\",\"position\":[880,-120],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $json.message.content }}\",\"value2\":\"true\"}]}},\"typeVersion\":1},{\"id\":\"074ffb7a-f83e-44b8-84fe-7b85f7245bb0\",\"name\":\"Upload file to folder\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[1100,-140],\"parameters\":{\"name\":\"={{ $binary.data.fileName }}\",\"options\":{},\"parents\":[\"={{ $('Create folder').first().json.id }}\"],\"binaryData\":true},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"xXHySx4T77sDdTqY\",\"name\":\"Google Drive account\"}},\"typeVersion\":2},{\"id\":\"7681eb62-ba86-4c89-9b88-3ce6fc438bd4\",\"name\":\"Webhook\",\"type\":\"n8n-nodes-base.webhook\",\"position\":[-1080,0],\"webhookId\":\"cded3af3-31df-47c2-a826-ff84eb4a41df\",\"parameters\":{\"path\":\"cded3af3-31df-47c2-a826-ff84eb4a41df\",\"options\":{},\"httpMethod\":\"POST\",\"responseMode\":\"responseNode\",\"authentication\":\"headerAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"90SsOYPPIe3Qv5Rq\",\"name\":\"Header Auth account\"}},\"typeVersion\":2},{\"id\":\"aab3d940-55c2-40d3-917a-83412d4e378d\",\"name\":\"Respond to Webhook\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[-720,-240],\"parameters\":{\"options\":{\"responseCode\":202},\"respondWith\":\"json\",\"responseBody\":\"={\\n  \\\"status\\\": \\\"Accepted\\\",\\n  \\\"driveFolderUrl\\\": \\\"{{ \\\"https://drive.google.com/drive/folders/\\\" + $json.id }}\\\"\\n}\"},\"typeVersion\":1.1},{\"id\":\"29a4122f-0112-4157-a50d-0a6cf83ab7fd\",\"name\":\"Create folder\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[-920,0],\"parameters\":{\"name\":\"={{ \\\"invoices_\\\" + $json.body.startDate.split('T')[0] }}\",\"driveId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"My Drive\"},\"options\":{},\"folderId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"root\",\"cachedResultName\":\"/ (Root folder)\"},\"resource\":\"folder\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"xXHySx4T77sDdTqY\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"df86428f-7e63-4fd9-944c-f48af72af495\",\"name\":\"Aggregate attachments\",\"type\":\"n8n-nodes-base.code\",\"position\":[1200,-340],\"parameters\":{\"jsCode\":\"// \\\"items\\\" is the array coming from the previous node (14 items)\\nconst merged = { json: {}, binary: {} };\\n\\nfor (const item of $input.all()) {\\n  const data = {\\n    [item.binary.data.fileName]: item.binary.data\\n  };\\n  Object.assign(merged.binary, data); // copy every file property\\n}\\n\\nreturn [merged];     // one single item goes out\"},\"typeVersion\":2},{\"id\":\"72a21bfa-6e3b-421a-a4ca-dea9e09a5b0b\",\"name\":\"Send email with invoices?\",\"type\":\"n8n-nodes-base.if\",\"position\":[1000,-320],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"63caf3d8-39bd-4300-aa7e-8c0ecfc87576\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ $('Configure').first().json.sendEmail }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"bb038635-eb69-447b-a85b-e9c3caebfe3a\",\"name\":\"Send to my accountant\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[1360,-280],\"webhookId\":\"3ea4dac1-58fe-4d0e-811b-065ecaef77df\",\"parameters\":{\"sendTo\":\"test@example.com\",\"message\":\"Hello, here are my invoices and receipts.\",\"options\":{\"attachmentsUi\":{\"attachmentsBinary\":[{\"property\":\"={{ Object.keys($binary).join(',') }}\"}]}},\"subject\":\"={{ \\n  (() => {\\n    const startDate = $node['Webhook'].json.body.startDate.split('T')[0];\\n    const endDate = $node['Webhook'].json.body.endDate.split('T')[0];\\n    return `Dokumenty kosztowe za okres od ${startDate} do ${endDate}`;\\n  })() \\n}}\",\"emailType\":\"text\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"PPgHF95PrpAMBlbG\",\"name\":\"Gmail account\"}},\"typeVersion\":2.1},{\"id\":\"7b2e5c6c-0a95-4347-97a9-c9ffbc0e3af2\",\"name\":\"Get emails with attachments\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[-500,0],\"webhookId\":\"6e2ca9f7-6d22-4d94-86bc-8a299bc8e752\",\"parameters\":{\"simple\":false,\"filters\":{\"q\":\"has:attachment\",\"sender\":\"\",\"receivedAfter\":\"={{ $('Webhook').item.json.body.startDate }}\",\"receivedBefore\":\"={{ $('Webhook').item.json.body.endDate }}\"},\"options\":{\"downloadAttachments\":true,\"dataPropertyAttachmentsPrefixName\":\"attachment_\"},\"operation\":\"getAll\",\"returnAll\":true},\"credentials\":{\"gmailOAuth2\":{\"id\":\"PPgHF95PrpAMBlbG\",\"name\":\"Gmail account\"}},\"typeVersion\":2.1},{\"id\":\"6d5b2c1b-657d-44bf-980d-fd428fd8d832\",\"name\":\"Read PDF email attachments\",\"type\":\"n8n-nodes-base.readPDF\",\"onError\":\"continueErrorOutput\",\"position\":[120,-80],\"parameters\":{},\"notesInFlow\":false,\"typeVersion\":1},{\"id\":\"3166f45c-306f-483a-b2c6-6768abc916a0\",\"name\":\"Is attachment a PDF?\",\"type\":\"n8n-nodes-base.if\",\"position\":[-40,0],\"parameters\":{\"conditions\":{\"string\":[{\"value1\":\"={{ $binary.data.fileExtension }}\",\"value2\":\"pdf\"}]}},\"typeVersion\":1},{\"id\":\"866b286a-7b9b-4506-aa6b-d2049b249991\",\"name\":\"Optional filter for emails\",\"type\":\"n8n-nodes-base.filter\",\"position\":[-360,0],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"687c4cd0-ada5-4dc1-8707-1a9c3b551251\",\"operator\":{\"type\":\"string\",\"operation\":\"notEquals\"},\"leftValue\":\"={{ $json.to.value[0].address }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2.2},{\"id\":\"56133dba-bc93-4f65-be42-995164a45c03\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-1600,-340],\"parameters\":{\"width\":440,\"height\":880,\"content\":\"## Gmail PDF Invoice/Receipt Classifier & Google Drive Uploader (via n8n & OpenAI)\\n\\n_**DISCLAIMER**: AI classification isn't perfect. Always double-check that the correct documents were identified and uploaded._\\n\\nThis n8n workflow, triggered via a webhook, scans your Gmail for emails within a specified date range, extracts PDF attachments, and uses OpenAI to determine if each PDF matches a defined category (defaulting to \\\"receipt or invoice\\\"). Matched PDFs are then uploaded to a uniquely named Google Drive folder based on the date range. You can customize the classification term (e.g., change \\\"receipt or invoice\\\" to \\\"contract\\\") and optionally have the workflow email the collected PDFs to a specified address.\\n\\n### How it works\\n1.  Triggers via a `Webhook` receiving a start date, end date, and an optional flag to send an email.\\n2.  Creates a dated folder in `Google Drive` (e.g., `invoices_YYYY-MM-DD_YYYY-MM-DD`).\\n3.  Fetches emails with attachments from `Gmail` within the specified date range.\\n4.  Iterates through each attachment, filtering specifically for `PDF` files.\\n5.  Extracts text from each PDF (skipping if the text exceeds token limits set in the `Configure` node).\\n6.  Uses the `OpenAI` node to ask if the PDF content and filename look like the item defined in the `Configure` node's \\\"Match on\\\" field (e.g., \\\"receipt or invoice\\\").\\n7.  If OpenAI responds with \\\"true\\\", the original `PDF` file is uploaded to the `Google Drive` folder created in step 2.\\n8.  If the initial webhook request included the flag to send an email, it aggregates all successfully matched PDFs and sends them via `Gmail` to the address specified in the `Configure` node.\\n\\nWorkflow written by [Tom](https://browsewiz.com)\\n\"},\"typeVersion\":1},{\"id\":\"aa5d8126-e2ec-4476-886d-c46379f1c6e2\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-780,-40],\"parameters\":{\"width\":260,\"height\":1000,\"content\":\"## Parameters\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n* **`maxTokenSize`** (Number)\\n    *   **Limits PDF text length** (estimated input tokens) sent to OpenAI for classification. Prevents errors/high costs on long documents.\\n    *   *Default: 8000*\\n\\n*   **`replyTokenSize`** (Number)\\n    *   **Reserves tokens for OpenAI's reply** ('true'/'false'). Ensures total tokens stay within limits.\\n    *   *Default: 50*\\n\\n*   **`Match on`** (String)\\n    *   **The keyword/phrase OpenAI uses** to identify the desired document type (e.g., \\\"receipt or invoice\\\", \\\"contract\\\"). Defines what you're searching for.\\n    *   *Default: \\\"receipt or invoice\\\"*\\n\\n*   **`sendInvoicesTo`** (String)\\n    *   **Recipient email address** for the final collection of matched PDFs. Used only if `sendEmail` is true.\\n    *   *Example: \\\"accounting@example.com\\\"*\\n\\n*   **`sendEmail`** (Boolean)\\n    *   **Turns the final email step on (`true`) or off (`false`)**. Set via the initial webhook trigger. If false, files are only uploaded to Drive.\\n    *   *Example: `true` or `false`*\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Merge\":{\"main\":[[{\"node\":\"Is matched\",\"type\":\"main\",\"index\":0}]]},\"OpenAI\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]},\"Webhook\":{\"main\":[[{\"node\":\"Create folder\",\"type\":\"main\",\"index\":0}]]},\"Configure\":{\"main\":[[{\"node\":\"Get emails with attachments\",\"type\":\"main\",\"index\":0}]]},\"Is matched\":{\"main\":[[{\"node\":\"Upload file to folder\",\"type\":\"main\",\"index\":0},{\"node\":\"Send email with invoices?\",\"type\":\"main\",\"index\":0}]]},\"Create folder\":{\"main\":[[{\"node\":\"Configure\",\"type\":\"main\",\"index\":0},{\"node\":\"Respond to Webhook\",\"type\":\"main\",\"index\":0}]]},\"Is attachment a PDF?\":{\"main\":[[{\"node\":\"Read PDF email attachments\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Not a PDF\",\"type\":\"main\",\"index\":0}]]},\"Aggregate attachments\":{\"main\":[[{\"node\":\"Send to my accountant\",\"type\":\"main\",\"index\":0}]]},\"Send to my accountant\":{\"main\":[[]]},\"Upload file to folder\":{\"main\":[[]]},\"Send email with invoices?\":{\"main\":[[{\"node\":\"Aggregate attachments\",\"type\":\"main\",\"index\":0}]]},\"Optional filter for emails\":{\"main\":[[{\"node\":\"Iterate over email attachments\",\"type\":\"main\",\"index\":0}]]},\"Read PDF email attachments\":{\"main\":[[{\"node\":\"Is text within token limit?\",\"type\":\"main\",\"index\":0}]]},\"Get emails with attachments\":{\"main\":[[{\"node\":\"Optional filter for emails\",\"type\":\"main\",\"index\":0}]]},\"Is text within token limit?\":{\"main\":[[{\"node\":\"OpenAI\",\"type\":\"main\",\"index\":0},{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}],[]]},\"Iterate over email attachments\":{\"main\":[[{\"node\":\"Is attachment a PDF?\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "### Who is it for?\n\nAnyone who wants to automatically aggregate their invoices or receipts. Main beneficiaries: small business owners and freelancers.\n\n### How it works\n\n  1. Creates a folder in Google Drive for uploading invoices and receipts. Responds (Webhook response) with URL to the created folder.\n  2. Gets all emails with attachments from a Gmail mailbox.\n  3. (Optional) Filters emails, e.g. exclude emails sent to specific address.\n  4. Filters only PDF attachments.\n  5. Classifies all PDF attachment contents with an AI model (is it a receipt or an invoice?).\n  6. Uploads receipts and invoices to the created Google Drive folder and optionally sends an email with the attachments to, e.g., your accountant.\n\n\n\n### Pre-conditions/Requirements\n\n  * Gmail and Google Drive accounts\n  * A Google Cloud OAuth 2.0 Client ID or a service account with Google Drive and Gmail APIs enabled\n  * OpenAI API account and API key\n\n\n\n### Set up steps\n\n  1. Provide credentials for the nodes: Gmail, Google Drive, OpenAI.\n  2. Configure parameters in the \"Configure\" node. Most importantly: \n     * \"**sendInvoicesTo** \" for the email address where invoices/receipts should be sent.\n  3. It uses a Webhook node trigger. It expects a body with a schema such as:\n\n\n    \n    \n    {\n      \"name\": \"getInvoicesAndReceiptsFromEmails\",\n      \"description\": \"Finds and uploads to Google Drive all receipts and invoices from emails within a specified date range.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"startDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"The start date of the range to search for emails. Must be in ISO 8601 format.\"\n          },\n          \"endDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"The end date of the range to search for emails. Must be in ISO 8601 format.\"\n          },\n          \"sendEmail\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether to send an email with all receipts and invoices after processing. Must be true or false.\"\n          }\n        },\n        \"required\": [\n          \"startDate\",\n          \"endDate\"\n        ]\n      }\n    }\n    \n\nExample body:\n    \n    \n    {\n      \"startDate\": \"2025-03-01T00:00:00Z\",\n      \"endDate\": \"2025-04-01T00:00:00Z\",\n      \"sendEmail\": true\n    }\n    \n\n### How to use with AI chat\n\nYou can trigger the workflow with an AI chat that supports tool use, such as [BrowseWiz](https://chromewebstore.google.com/detail/browsewiz-ai-assistant-ai/ioohfnlbpolaalcbppaggpgcgpldohfg). For setup instructions, read [the blog post](https://browsewiz.com/blog/invoice-and-receipt-aggregation-n8n-workflow-and-how-to-add-it-to-browsewiz).\n",
  "crawled_at": "2025-05-26T05:24:59.266166",
  "readme_zh": "### 适用对象？\n\n任何希望自动汇总发票或收据的人士。主要受益者：小企业主和自由职业者。\n\n### 工作原理\n\n1. 在Google Drive中创建一个文件夹用于上传发票和收据，并通过Webhook响应返回该文件夹的URL。\n2. 从Gmail邮箱获取所有带附件的邮件。\n3. （可选）筛选邮件，例如排除发送至特定地址的邮件。\n4. 仅筛选PDF附件。\n5. 使用AI模型对所有PDF附件内容进行分类（判断是收据还是发票）。\n6. 将收据和发票上传至创建的Google Drive文件夹，并可选地将附件通过邮件发送给例如您的会计师。\n\n### 前提条件/要求\n\n* Gmail和Google Drive账户\n* 已启用Google Drive和Gmail API的Google Cloud OAuth 2.0客户端ID或服务账号\n* OpenAI API账户及API密钥\n\n### 设置步骤\n\n1. 为节点提供凭据：Gmail、Google Drive、OpenAI。\n2. 在“配置”节点中设置参数，最重要的是：\n   * **“sendInvoicesTo”** 用于指定发票/收据应发送的电子邮件地址。\n3. 使用Webhook节点触发。预期接收的请求体格式如下：\n\n```json\n{\n  \"name\": \"getInvoicesAndReceiptsFromEmails\",\n  \"description\": \"查找并上传指定日期范围内邮件中的所有收据和发票至Google Drive。\",\n  \"parameters\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"startDate\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\",\n        \"description\": \"搜索邮件的起始日期。必须为ISO 8601格式。\"\n      },\n      \"endDate\": {\n        \"type\": \"string\",\n        \"format\": \"date-time\",\n        \"description\": \"搜索邮件的结束日期。必须为ISO 8601格式。\"\n      },\n      \"sendEmail\": {\n        \"type\": \"boolean\",\n        \"description\": \"指示处理完成后是否发送包含所有收据和发票的邮件。必须为true或false。\"\n      }\n    },\n    \"required\": [\n      \"startDate\",\n      \"endDate\"\n    ]\n  }\n}\n```\n\n示例请求体：\n```json\n{\n  \"startDate\": \"2025-03-01T00:00:00Z\",\n  \"endDate\": \"2025-04-01T00:00:00Z\",\n  \"sendEmail\": true\n}\n```\n\n### 如何与AI聊天工具配合使用\n\n您可以通过支持工具调用的AI聊天工具（如[BrowseWiz](https://chromewebstore.google.com/detail/browsewiz-ai-assistant-ai/ioohfnlbpolaalcbppaggpgcgpldohfg)）触发此工作流。具体设置说明请参阅[博客文章](https://browsewiz.com/blog/invoice-and-receipt-aggregation-n8n-workflow-and-how-to-add-it-to-browsewiz)。",
  "title_zh": "使用Gmail、OpenAI和Google Drive提取与分类发票及收据",
  "publish_date_zh": "上次更新于6天前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"d1b60f1865ef6504ee3af5be4ef9a7387762b4132615a52de808456d52e8d336\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"nodes\": [\n    {\n      \"id\": \"c84f3a9a-66b3-4a09-b06a-9b399ea574b8\",\n      \"name\": \"OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"position\": [\n        420,\n        -240\n      ],\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4.1-mini\",\n          \"cachedResultName\": \"GPT-4.1-MINI\"\n        },\n        \"options\": {},\n        \"messages\": {\n          \"values\": [\n            {\n              \"content\": \"=Does this PDF file look like a {{ $(\\\"Configure\\\").first().json[\\\"Match on\\\"] }}? Return \\\"true\\\" if it is a {{ $(\\\"Configure\\\").first().json[\\\"Match on\\\"] }} and \\\"false\\\" if not. Only reply with lowercase letters \\\"true\\\" or \\\"false\\\".\\n\\nThis is the PDF filename:\\n```\\n{{ $binary.data.fileName }}\\n```\\n\\nThis is the PDF text content:\\n```\\n{{ $json.text }}\\n```\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"prYAbsQvWl1pPbdL\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"ea1fbc5b-1859-4d65-8401-30baa95fcc52\",\n      \"name\": \"Configure\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        -700,\n        0\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"number\": [\n            {\n              \"name\": \"maxTokenSize\",\n              \"value\": 8000\n            },\n            {\n              \"name\": \"replyTokenSize\",\n              \"value\": 50\n            }\n          ],\n          \"string\": [\n            {\n              \"name\": \"Match on\",\n              \"value\": \"receipt or invoice that can be considered a software engineering business cost\"\n            },\n            {\n              \"name\": \"Google Drive folder to upload matched PDFs\",\n              \"value\": \"https://drive.google.com/drive/folders/[put_folder_id_here]\"\n            },\n            {\n              \"name\": \"sendInvoicesTo\"\n            }\n          ],\n          \"boolean\": [\n            {\n              \"name\": \"sendEmail\",\n              \"value\": \"={{ $('Webhook').item.json.body.sendEmail === \\\"true\\\" }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3ee63612-c1e7-40e6-a38f-f77f5ee3efa4\",\n      \"name\": \"Iterate over email attachments\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        -200,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// https://community.n8n.io/t/iterating-over-email-attachments/13588/3\\nlet results = [];\\n\\nfor (const item of $input.all()) {\\n  console.log(item);\\n  for (const key of Object.keys(item.binary)) {\\n    results.push({\\n        json: {},\\n        binary: {\\n            data: item.binary[key],\\n        }\\n    });\\n  }\\n}\\n\\nreturn results;\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3e638471-c1c5-4bab-aa2a-12a1777225ec\",\n      \"name\": \"Not a PDF\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        120,\n        80\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b5af902b-2d59-49ee-b6d8-e387c59b89fd\",\n      \"name\": \"Is text within token limit?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        300,\n        -100\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"boolean\": [\n            {\n              \"value1\": \"={{ $json.text.length() / 4 <= $('Configure').first().json.maxTokenSize - $('Configure').first().json.replyTokenSize }}\",\n              \"value2\": true\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a0a8895c-ef8b-44e7-9294-1bcf629d0973\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        720,\n        -120\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {\n          \"clashHandling\": {\n            \"values\": {\n              \"resolveClash\": \"preferInput1\"\n            }\n          }\n        },\n        \"combinationMode\": \"mergeByPosition\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7565118a-6d44-4583-a19f-cb4177378d33\",\n      \"name\": \"Is matched\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        880,\n        -120\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $json.message.content }}\",\n              \"value2\": \"true\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"074ffb7a-f83e-44b8-84fe-7b85f7245bb0\",\n      \"name\": \"Upload file to folder\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        1100,\n        -140\n      ],\n      \"parameters\": {\n        \"name\": \"={{ $binary.data.fileName }}\",\n        \"options\": {},\n        \"parents\": [\n          \"={{ $('Create folder').first().json.id }}\"\n        ],\n        \"binaryData\": true\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"xXHySx4T77sDdTqY\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7681eb62-ba86-4c89-9b88-3ce6fc438bd4\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"position\": [\n        -1080,\n        0\n      ],\n      \"webhookId\": \"cded3af3-31df-47c2-a826-ff84eb4a41df\",\n      \"parameters\": {\n        \"path\": \"cded3af3-31df-47c2-a826-ff84eb4a41df\",\n        \"options\": {},\n        \"httpMethod\": \"POST\",\n        \"responseMode\": \"responseNode\",\n        \"authentication\": \"headerAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"90SsOYPPIe3Qv5Rq\",\n          \"name\": \"Header Auth account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"aab3d940-55c2-40d3-917a-83412d4e378d\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"position\": [\n        -720,\n        -240\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"responseCode\": 202\n        },\n        \"respondWith\": \"json\",\n        \"responseBody\": \"={\\n  \\\"status\\\": \\\"Accepted\\\",\\n  \\\"driveFolderUrl\\\": \\\"{{ \\\"https://drive.google.com/drive/folders/\\\" + $json.id }}\\\"\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"29a4122f-0112-4157-a50d-0a6cf83ab7fd\",\n      \"name\": \"Create folder\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        -920,\n        0\n      ],\n      \"parameters\": {\n        \"name\": \"={{ \\\"invoices_\\\" + $json.body.startDate.split('T')[0] }}\",\n        \"driveId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"My Drive\"\n        },\n        \"options\": {},\n        \"folderId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"root\",\n          \"cachedResultName\": \"/ (Root folder)\"\n        },\n        \"resource\": \"folder\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"xXHySx4T77sDdTqY\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"df86428f-7e63-4fd9-944c-f48af72af495\",\n      \"name\": \"Aggregate attachments\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1200,\n        -340\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// \\\"items\\\" is the array coming from the previous node (14 items)\\nconst merged = { json: {}, binary: {} };\\n\\nfor (const item of $input.all()) {\\n  const data = {\\n    [item.binary.data.fileName]: item.binary.data\\n  };\\n  Object.assign(merged.binary, data); // copy every file property\\n}\\n\\nreturn [merged];     // one single item goes out\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"72a21bfa-6e3b-421a-a4ca-dea9e09a5b0b\",\n      \"name\": \"Send email with invoices?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1000,\n        -320\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"63caf3d8-39bd-4300-aa7e-8c0ecfc87576\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"true\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $('Configure').first().json.sendEmail }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"bb038635-eb69-447b-a85b-e9c3caebfe3a\",\n      \"name\": \"Send to my accountant\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        1360,\n        -280\n      ],\n      \"webhookId\": \"3ea4dac1-58fe-4d0e-811b-065ecaef77df\",\n      \"parameters\": {\n        \"sendTo\": \"test@example.com\",\n        \"message\": \"Hello, here are my invoices and receipts.\",\n        \"options\": {\n          \"attachmentsUi\": {\n            \"attachmentsBinary\": [\n              {\n                \"property\": \"={{ Object.keys($binary).join(',') }}\"\n              }\n            ]\n          }\n        },\n        \"subject\": \"={{ \\n  (() => {\\n    const startDate = $node['Webhook'].json.body.startDate.split('T')[0];\\n    const endDate = $node['Webhook'].json.body.endDate.split('T')[0];\\n    return `Dokumenty kosztowe za okres od ${startDate} do ${endDate}`;\\n  })() \\n}}\",\n        \"emailType\": \"text\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"PPgHF95PrpAMBlbG\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"7b2e5c6c-0a95-4347-97a9-c9ffbc0e3af2\",\n      \"name\": \"Get emails with attachments\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        -500,\n        0\n      ],\n      \"webhookId\": \"6e2ca9f7-6d22-4d94-86bc-8a299bc8e752\",\n      \"parameters\": {\n        \"simple\": false,\n        \"filters\": {\n          \"q\": \"has:attachment\",\n          \"sender\": \"\",\n          \"receivedAfter\": \"={{ $('Webhook').item.json.body.startDate }}\",\n          \"receivedBefore\": \"={{ $('Webhook').item.json.body.endDate }}\"\n        },\n        \"options\": {\n          \"downloadAttachments\": true,\n          \"dataPropertyAttachmentsPrefixName\": \"attachment_\"\n        },\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"PPgHF95PrpAMBlbG\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"6d5b2c1b-657d-44bf-980d-fd428fd8d832\",\n      \"name\": \"Read PDF email attachments\",\n      \"type\": \"n8n-nodes-base.readPDF\",\n      \"onError\": \"continueErrorOutput\",\n      \"position\": [\n        120,\n        -80\n      ],\n      \"parameters\": {},\n      \"notesInFlow\": false,\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3166f45c-306f-483a-b2c6-6768abc916a0\",\n      \"name\": \"Is attachment a PDF?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        -40,\n        0\n      ],\n      \"parameters\": {\n        \"conditions\": {\n          \"string\": [\n            {\n              \"value1\": \"={{ $binary.data.fileExtension }}\",\n              \"value2\": \"pdf\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"866b286a-7b9b-4506-aa6b-d2049b249991\",\n      \"name\": \"Optional filter for emails\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        -360,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"version\": 2,\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"687c4cd0-ada5-4dc1-8707-1a9c3b551251\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEquals\"\n              },\n              \"leftValue\": \"={{ $json.to.value[0].address }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"56133dba-bc93-4f65-be42-995164a45c03\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -1600,\n        -340\n      ],\n      \"parameters\": {\n        \"width\": 440,\n        \"height\": 880,\n        \"content\": \"## Gmail PDF发票/收据分类器及Google Drive上传工具（基于n8n与OpenAI）\\n\\n_**免责声明**：AI分类并非百分百准确，请务必二次确认上传文档的正确性。_\\n\\n该n8n工作流通过Webhook触发，可扫描指定日期范围内的Gmail邮件，提取PDF附件，并利用OpenAI判断每个PDF是否符合预设类别（默认\\\"receipt or invoice\\\"）。匹配成功的PDF将被上传至按日期范围命名的专属Google Drive文件夹。您可自定义分类关键词（如将\\\"receipt or invoice\\\"改为\\\"contract\\\"），还可选择让工作流将收集的PDF通过邮件发送至指定地址。\\n\\n### 运作流程\\n1. 通过`Webhook`接收开始日期、结束日期及可选邮件发送标记来触发流程\\n2. 在`Google Drive`创建日期格式的文件夹（如`invoices_YYYY-MM-DD_YYYY-MM-DD`）\\n3. 获取指定日期范围内带附件的`Gmail`邮件\\n4. 遍历每个附件，精准筛选`PDF`文件\\n5. 从PDF提取文本（若文本超过`Configure`节点设置的token限制则跳过）\\n6. 通过`OpenAI`节点判断PDF内容及文件名是否符合`Configure`节点\\\"Match on\\\"字段定义的类型（如\\\"receipt or invoice\\\"）\\n7. 若OpenAI返回\\\"true\\\"，原始`PDF`文件将被上传至步骤2创建的`Google Drive`文件夹\\n8. 若初始Webhook请求包含邮件发送标记，则将所有成功匹配的PDF打包通过`Gmail`发送至`Configure`节点指定的地址\\n\\n工作流开发者：[Tom](https://browsewiz.com)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aa5d8126-e2ec-4476-886d-c46379f1c6e2\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -780,\n        -40\n      ],\n      \"parameters\": {\n        \"width\": 260,\n        \"height\": 1000,\n        \"content\": \"## 参数配置\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is matched\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create folder\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Configure\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get emails with attachments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is matched\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload file to folder\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Send email with invoices?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create folder\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Configure\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is attachment a PDF?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Read PDF email attachments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Not a PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate attachments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send to my accountant\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send to my accountant\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Upload file to folder\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Send email with invoices?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate attachments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Optional filter for emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Iterate over email attachments\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Read PDF email attachments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is text within token limit?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get emails with attachments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Optional filter for emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is text within token limit?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"OpenAI\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ],\n        []\n      ]\n    },\n    \"Iterate over email attachments\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is attachment a PDF?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}