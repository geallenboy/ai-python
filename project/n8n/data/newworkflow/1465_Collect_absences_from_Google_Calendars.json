{
  "url": "https://n8n.io/workflows/1465-collect-absences-from-google-calendars/",
  "title": "Collect absences from Google Calendars",
  "author": "Jonathan",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "HR"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"8c8c5237b8e37b006a7adce87f4369350c58e41f3ca9de16196d3197f69eabcd\"},\"nodes\":[{\"id\":\"6f869392-1501-49b9-be86-4b767f7ec597\",\"name\":\"Previous Month\",\"type\":\"n8n-nodes-base.dateTime\",\"position\":[360,420],\"parameters\":{\"value\":\"={{Date()}}\",\"action\":\"calculate\",\"options\":{},\"duration\":1,\"timeUnit\":\"months\",\"operation\":\"subtract\"},\"typeVersion\":1},{\"id\":\"1446eb44-bd1e-4dad-9ecc-c2a1e8cb2ca6\",\"name\":\"1st of Every month at 8am\",\"type\":\"n8n-nodes-base.cron\",\"position\":[180,420],\"parameters\":{\"triggerTimes\":{\"item\":[{\"hour\":8,\"mode\":\"everyMonth\"}]}},\"typeVersion\":1},{\"id\":\"a044ac76-49d9-4046-b008-2b4adf6512b1\",\"name\":\"Check Summary for Illness or Holiday\",\"type\":\"n8n-nodes-base.switch\",\"position\":[760,420],\"parameters\":{\"rules\":{\"rules\":[{\"value2\":\"Holiday\",\"operation\":\"contains\"},{\"output\":1,\"value2\":\"Illness\",\"operation\":\"contains\"}]},\"value1\":\"={{$json[\\\"summary\\\"]}}\",\"dataType\":\"string\"},\"typeVersion\":1},{\"id\":\"6b40beab-7938-4aaa-a8a8-7a1e364dc2de\",\"name\":\"Holiday\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[980,220],\"parameters\":{},\"typeVersion\":1},{\"id\":\"b069f3ce-66d1-4f64-946b-f9fda27db46b\",\"name\":\"Illness\",\"type\":\"n8n-nodes-base.noOp\",\"position\":[980,400],\"parameters\":{},\"typeVersion\":1},{\"id\":\"5725626b-2bfd-47a0-947e-efd28f0c29fe\",\"name\":\"Filter Holiday Days\",\"type\":\"n8n-nodes-base.set\",\"position\":[1180,220],\"parameters\":{\"values\":{\"string\":[{\"name\":\"Name\",\"value\":\"={{$json[\\\"description\\\"].split(\\\",\\\")[0]}}\"},{\"name\":\"Days\",\"value\":\"={{(new Date($json[\\\"end\\\"][\\\"date\\\"]).getTime() - new Date($json[\\\"start\\\"][\\\"date\\\"]).getTime()) / (1000 * 3600 * 24)}}\"},{\"name\":\"Type\",\"value\":\"Holiday\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"id\":\"3114eb4f-a5be-452c-9729-b94d2904eb4b\",\"name\":\"Filter Illness Days\",\"type\":\"n8n-nodes-base.set\",\"position\":[1180,400],\"parameters\":{\"values\":{\"string\":[{\"name\":\"Name\",\"value\":\"={{$json[\\\"description\\\"].split(\\\",\\\")[0]}}\"},{\"name\":\"Days\",\"value\":\"={{(new Date($json[\\\"end\\\"][\\\"date\\\"]).getTime() - new Date($json[\\\"start\\\"][\\\"date\\\"]).getTime()) / (1000 * 3600 * 24)}}\"},{\"name\":\"Type\",\"value\":\"Illness\"}]},\"options\":{},\"keepOnlySet\":true},\"typeVersion\":1},{\"id\":\"04617849-c162-4af5-9634-ab8ffd925625\",\"name\":\"Merge\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1620,320],\"parameters\":{},\"typeVersion\":1},{\"id\":\"daf227d9-938d-4110-9a47-5bf8bb661586\",\"name\":\"Get previous months events\",\"type\":\"n8n-nodes-base.googleCalendar\",\"position\":[560,420],\"parameters\":{\"options\":{\"timeMax\":\"={{new Date().toISOString()}}\",\"timeMin\":\"={{$json[\\\"data\\\"]}}\"},\"calendar\":\"[Select Cal]\",\"operation\":\"getAll\",\"returnAll\":true},\"credentials\":{\"googleCalendarOAuth2Api\":{\"id\":\"50\",\"name\":\"Google Calendar account\"}},\"typeVersion\":1},{\"id\":\"19ec862a-e71a-49f9-b799-26f73a410553\",\"name\":\"Send email to payroll\",\"type\":\"n8n-nodes-base.emailSend\",\"position\":[1980,320],\"parameters\":{\"text\":\"={{$json[\\\"message\\\"]}}\",\"options\":{},\"subject\":\"Absences from last month\",\"toEmail\":\"payroll-team@mydomain.tld\",\"fromEmail\":\"n8n@mydomain.tld\"},\"credentials\":{\"smtp\":{\"id\":\"16\",\"name\":\"mailtrap\"}},\"typeVersion\":1},{\"id\":\"5805b2e1-e723-4803-a7e0-8df5fd4cf84d\",\"name\":\"Combine Holiday Counts\",\"type\":\"n8n-nodes-base.code\",\"position\":[1380,220],\"parameters\":{\"jsCode\":\"let names = $input.all().map(e => e.json.Name);\\nlet unique_names = [...new Set(names)];\\nlet results = [];\\n\\nfor (thisName of unique_names) {\\n  let result = {\\n    \\\"Name\\\": thisName,\\n    \\\"Days\\\": 0,\\n    \\\"Type\\\": \\\"Holiday\\\"\\n  }\\n\\n  for (matching_item of $input.all().filter(e => e.json.Name === thisName)) {\\n    result.Days += parseInt(matching_item.json.Days);\\n  }\\n  \\n  results.push(result);\\n}\\n\\nreturn results.map(e => { return {json: e} });\"},\"typeVersion\":1},{\"id\":\"c30345ae-1a19-4453-a67b-eda71cb7326e\",\"name\":\"Combine Illness Counts\",\"type\":\"n8n-nodes-base.code\",\"position\":[1380,400],\"parameters\":{\"jsCode\":\"let names = $input.all().map(e => e.json.Name);\\nlet unique_names = [...new Set(names)];\\nlet results = [];\\n\\nfor (thisName of unique_names) {\\n  let result = {\\n    \\\"Name\\\": thisName,\\n    \\\"Days\\\": 0,\\n    \\\"Type\\\": \\\"Illness\\\"\\n  }\\n\\n  for (matching_item of $input.all().filter(e => e.json.Name === thisName)) {\\n    result.Days += parseInt(matching_item.json.Days);\\n  }\\n  \\n  results.push(result);\\n}\\n\\nreturn results.map(e => { return {json: e} });\"},\"typeVersion\":1},{\"id\":\"7bac2604-ca55-4300-a7a5-38fc96830ba6\",\"name\":\"Build the message to send\",\"type\":\"n8n-nodes-base.code\",\"position\":[1800,320],\"parameters\":{\"jsCode\":\"let illnessMessage = \\\"\\\";\\nlet holidayMessage = \\\"\\\";\\nlet message = \\\"Here is a breakdown of absences for the last month.\\\\n\\\\n\\\";\\n\\n// Loop the input items\\nfor (item of $input.all()) {\\n  if (item.json.Type == \\\"Holiday\\\") {\\n    holidayMessage += item.json.Name + \\\" had \\\" + item.json.Days + \\\" days\\\\n\\\";\\n  }\\n  if (item.json.Type == \\\"Illness\\\") {\\n    illnessMessage += item.json.Name + \\\" had \\\" + item.json.Days + \\\" days\\\\n\\\";\\n  }\\n}\\n\\nif (holidayMessage != \\\"\\\") {\\n  message += \\\"Holiday Events\\\\n\\\";\\n  message += holidayMessage + \\\"\\\\n\\\";\\n} else {\\n  message += \\\"No Holiday Events\\\\n\\\";\\n}\\n\\nif (illnessMessage != \\\"\\\") {\\n  message += \\\"Illness Events\\\\n\\\";\\n  message += illnessMessage;\\n} else {\\n  message += \\\"No Illness Events\\\\n\\\";\\n}\\n\\n// Return our message\\nreturn [{json: {message}}];\"},\"typeVersion\":1}],\"connections\":{\"Merge\":{\"main\":[[{\"node\":\"Build the message to send\",\"type\":\"main\",\"index\":0}]]},\"Holiday\":{\"main\":[[{\"node\":\"Filter Holiday Days\",\"type\":\"main\",\"index\":0}]]},\"Illness\":{\"main\":[[{\"node\":\"Filter Illness Days\",\"type\":\"main\",\"index\":0}]]},\"Previous Month\":{\"main\":[[{\"node\":\"Get previous months events\",\"type\":\"main\",\"index\":0}]]},\"Filter Holiday Days\":{\"main\":[[{\"node\":\"Combine Holiday Counts\",\"type\":\"main\",\"index\":0}]]},\"Filter Illness Days\":{\"main\":[[{\"node\":\"Combine Illness Counts\",\"type\":\"main\",\"index\":0}]]},\"Combine Holiday Counts\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":0}]]},\"Combine Illness Counts\":{\"main\":[[{\"node\":\"Merge\",\"type\":\"main\",\"index\":1}]]},\"1st of Every month at 8am\":{\"main\":[[{\"node\":\"Previous Month\",\"type\":\"main\",\"index\":0}]]},\"Build the message to send\":{\"main\":[[{\"node\":\"Send email to payroll\",\"type\":\"main\",\"index\":0}]]},\"Get previous months events\":{\"main\":[[{\"node\":\"Check Summary for Illness or Holiday\",\"type\":\"main\",\"index\":0}]]},\"Check Summary for Illness or Holiday\":{\"main\":[[{\"node\":\"Holiday\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Illness\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow checks a Google Calendar at 8am on the first of each month to get anything that has been marked as a Holiday or Illness. It then merges the count for each person and sends an email with the list.\n\nTo use this workflow you will need to set the credentials to use for the Google Calendar node and Send Email node. You will also need to select the calendar ID and fill out the information in the send email node.\n\nThis workflow searches for Events that contain \"Holiday\" or \"Illness\" in the summary. If you want to change this you can modify it in the Switch node.\n",
  "crawled_at": "2025-05-25T19:44:46.973864",
  "readme_zh": "该工作流程会在每月1日上午8点检查Google日历，获取所有标记为\"假期\"或\"病假\"的事项。随后汇总每个人的请假天数，并通过邮件发送统计清单。\n\n使用本工作流程前，您需要为Google Calendar节点和Send Email节点设置登录凭证。同时需选择日历ID并填写邮件发送节点的相关信息。\n\n当前流程会检索事件摘要中包含\"假期\"或\"病假\"的日程。如需修改检索关键词，可在Switch节点中进行调整。",
  "title_zh": "从谷歌日历中收集缺席记录",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"8c8c5237b8e37b006a7adce87f4369350c58e41f3ca9de16196d3197f69eabcd\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"6f869392-1501-49b9-be86-4b767f7ec597\",\n      \"name\": \"Previous Month\",\n      \"type\": \"n8n-nodes-base.dateTime\",\n      \"position\": [\n        360,\n        420\n      ],\n      \"parameters\": {\n        \"value\": \"={{Date()}}\",\n        \"action\": \"calculate\",\n        \"options\": {},\n        \"duration\": 1,\n        \"timeUnit\": \"months\",\n        \"operation\": \"subtract\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1446eb44-bd1e-4dad-9ecc-c2a1e8cb2ca6\",\n      \"name\": \"1st of Every month at 8am\",\n      \"type\": \"n8n-nodes-base.cron\",\n      \"position\": [\n        180,\n        420\n      ],\n      \"parameters\": {\n        \"triggerTimes\": {\n          \"item\": [\n            {\n              \"hour\": 8,\n              \"mode\": \"everyMonth\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a044ac76-49d9-4046-b008-2b4adf6512b1\",\n      \"name\": \"Check Summary for Illness or Holiday\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        760,\n        420\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"rules\": [\n            {\n              \"value2\": \"Holiday\",\n              \"operation\": \"contains\"\n            },\n            {\n              \"output\": 1,\n              \"value2\": \"Illness\",\n              \"operation\": \"contains\"\n            }\n          ]\n        },\n        \"value1\": \"={{$json[\\\"summary\\\"]}}\",\n        \"dataType\": \"string\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6b40beab-7938-4aaa-a8a8-7a1e364dc2de\",\n      \"name\": \"Holiday\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        980,\n        220\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"b069f3ce-66d1-4f64-946b-f9fda27db46b\",\n      \"name\": \"Illness\",\n      \"type\": \"n8n-nodes-base.noOp\",\n      \"position\": [\n        980,\n        400\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5725626b-2bfd-47a0-947e-efd28f0c29fe\",\n      \"name\": \"Filter Holiday Days\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1180,\n        220\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"Name\",\n              \"value\": \"={{$json[\\\"description\\\"].split(\\\",\\\")[0]}}\"\n            },\n            {\n              \"name\": \"Days\",\n              \"value\": \"={{(new Date($json[\\\"end\\\"][\\\"date\\\"]).getTime() - new Date($json[\\\"start\\\"][\\\"date\\\"]).getTime()) / (1000 * 3600 * 24)}}\"\n            },\n            {\n              \"name\": \"Type\",\n              \"value\": \"Holiday\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3114eb4f-a5be-452c-9729-b94d2904eb4b\",\n      \"name\": \"Filter Illness Days\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1180,\n        400\n      ],\n      \"parameters\": {\n        \"values\": {\n          \"string\": [\n            {\n              \"name\": \"Name\",\n              \"value\": \"={{$json[\\\"description\\\"].split(\\\",\\\")[0]}}\"\n            },\n            {\n              \"name\": \"Days\",\n              \"value\": \"={{(new Date($json[\\\"end\\\"][\\\"date\\\"]).getTime() - new Date($json[\\\"start\\\"][\\\"date\\\"]).getTime()) / (1000 * 3600 * 24)}}\"\n            },\n            {\n              \"name\": \"Type\",\n              \"value\": \"Illness\"\n            }\n          ]\n        },\n        \"options\": {},\n        \"keepOnlySet\": true\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"04617849-c162-4af5-9634-ab8ffd925625\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1620,\n        320\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"daf227d9-938d-4110-9a47-5bf8bb661586\",\n      \"name\": \"Get previous months events\",\n      \"type\": \"n8n-nodes-base.googleCalendar\",\n      \"position\": [\n        560,\n        420\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"timeMax\": \"={{new Date().toISOString()}}\",\n          \"timeMin\": \"={{$json[\\\"data\\\"]}}\"\n        },\n        \"calendar\": \"[Select Cal]\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"credentials\": {\n        \"googleCalendarOAuth2Api\": {\n          \"id\": \"50\",\n          \"name\": \"Google Calendar account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"19ec862a-e71a-49f9-b799-26f73a410553\",\n      \"name\": \"Send email to payroll\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"position\": [\n        1980,\n        320\n      ],\n      \"parameters\": {\n        \"text\": \"={{$json[\\\"message\\\"]}}\",\n        \"options\": {},\n        \"subject\": \"Absences from last month\",\n        \"toEmail\": \"payroll-team@mydomain.tld\",\n        \"fromEmail\": \"n8n@mydomain.tld\"\n      },\n      \"credentials\": {\n        \"smtp\": {\n          \"id\": \"16\",\n          \"name\": \"mailtrap\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"5805b2e1-e723-4803-a7e0-8df5fd4cf84d\",\n      \"name\": \"Combine Holiday Counts\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1380,\n        220\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let names = $input.all().map(e => e.json.Name);\\nlet unique_names = [...new Set(names)];\\nlet results = [];\\n\\nfor (thisName of unique_names) {\\n  let result = {\\n    \\\"Name\\\": thisName,\\n    \\\"Days\\\": 0,\\n    \\\"Type\\\": \\\"Holiday\\\"\\n  }\\n\\n  for (matching_item of $input.all().filter(e => e.json.Name === thisName)) {\\n    result.Days += parseInt(matching_item.json.Days);\\n  }\\n  \\n  results.push(result);\\n}\\n\\nreturn results.map(e => { return {json: e} });\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c30345ae-1a19-4453-a67b-eda71cb7326e\",\n      \"name\": \"Combine Illness Counts\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1380,\n        400\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let names = $input.all().map(e => e.json.Name);\\nlet unique_names = [...new Set(names)];\\nlet results = [];\\n\\nfor (thisName of unique_names) {\\n  let result = {\\n    \\\"Name\\\": thisName,\\n    \\\"Days\\\": 0,\\n    \\\"Type\\\": \\\"Illness\\\"\\n  }\\n\\n  for (matching_item of $input.all().filter(e => e.json.Name === thisName)) {\\n    result.Days += parseInt(matching_item.json.Days);\\n  }\\n  \\n  results.push(result);\\n}\\n\\nreturn results.map(e => { return {json: e} });\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"7bac2604-ca55-4300-a7a5-38fc96830ba6\",\n      \"name\": \"Build the message to send\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1800,\n        320\n      ],\n      \"parameters\": {\n        \"jsCode\": \"let illnessMessage = \\\"\\\";\\nlet holidayMessage = \\\"\\\";\\nlet message = \\\"Here is a breakdown of absences for the last month.\\\\n\\\\n\\\";\\n\\n// Loop the input items\\nfor (item of $input.all()) {\\n  if (item.json.Type == \\\"Holiday\\\") {\\n    holidayMessage += item.json.Name + \\\" had \\\" + item.json.Days + \\\" days\\\\n\\\";\\n  }\\n  if (item.json.Type == \\\"Illness\\\") {\\n    illnessMessage += item.json.Name + \\\" had \\\" + item.json.Days + \\\" days\\\\n\\\";\\n  }\\n}\\n\\nif (holidayMessage != \\\"\\\") {\\n  message += \\\"Holiday Events\\\\n\\\";\\n  message += holidayMessage + \\\"\\\\n\\\";\\n} else {\\n  message += \\\"No Holiday Events\\\\n\\\";\\n}\\n\\nif (illnessMessage != \\\"\\\") {\\n  message += \\\"Illness Events\\\\n\\\";\\n  message += illnessMessage;\\n} else {\\n  message += \\\"No Illness Events\\\\n\\\";\\n}\\n\\n// Return our message\\nreturn [{json: {message}}];\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"connections\": {\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Build the message to send\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Holiday\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Holiday Days\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Illness\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Illness Days\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Previous Month\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get previous months events\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Holiday Days\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Holiday Counts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Illness Days\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Illness Counts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Holiday Counts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Illness Counts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"1st of Every month at 8am\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Previous Month\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Build the message to send\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send email to payroll\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get previous months events\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Summary for Illness or Holiday\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Summary for Illness or Holiday\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Holiday\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Illness\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}