{
  "url": "https://n8n.io/workflows/3421-load-and-aggregate-files-from-a-google-drive-folder-into-a-key-value-dictionary/",
  "title": "Load and Aggregate Files from a Google Drive Folder into a Key-Value Dictionary",
  "author": "Hugues Stock",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-26",
  "categories": [
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "{\"name\":\"Google Drive Files Loader\",\"nodes\":[{\"id\":\"3d066626-a87d-4e7b-bc16-9f47e1277dde\",\"name\":\"When Executed by Another Workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[0,0],\"parameters\":{\"inputSource\":\"jsonExample\",\"jsonExample\":\"{\\n}\"},\"typeVersion\":1.1},{\"id\":\"cb0e5563-1550-4121-9fd5-b1cbd9810476\",\"name\":\"Code\",\"type\":\"n8n-nodes-base.code\",\"position\":[960,0],\"parameters\":{\"jsCode\":\"// n8n Code Node\\n\\n// Initialize an empty object to store the aggregated results\\nconst aggregatedDict = {};\\n\\n// Get all input items passed to this node\\nconst inputItems = $input.all();\\n\\n// Loop through each input item\\nfor (const item of inputItems) {\\n  // Get the JSON data from the current item\\n  const itemJson = item.json;\\n\\n  // Check if item.json is actually an object and not null/undefined\\n  // Also ensure it's not an array, as we expect key-value pairs\\n  if (itemJson && typeof itemJson === 'object' && !Array.isArray(itemJson)) {\\n\\n    // Iterate over all the keys within the current item's JSON object\\n    for (const key of Object.keys(itemJson)) {\\n      // Add/overwrite the key-value pair to our aggregated dictionary\\n      aggregatedDict[key] = itemJson[key].replaceAll(/\\\\n+/g, \\\"\\\\n\\\");\\n      // console.log(`Adding/Updating key: ${key}`); // Optional: for debugging\\n    }\\n\\n  } else {\\n    // Optional: Log a warning if an item doesn't have the expected format\\n    console.warn(`Skipping item - 'json' property is not a valid object:`, itemJson);\\n  }\\n}\\n\\n// n8n expects an array of items as output.\\n// We return a single item containing the final aggregated dictionary in its 'json' property.\\nreturn [{ json: aggregatedDict }];\"},\"typeVersion\":2},{\"id\":\"1b90ca95-7251-4573-9b0b-4af3622721ba\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[140,-140],\"parameters\":{\"height\":300,\"content\":\"## Step1\\nDefine folder you want to search all files in.\"},\"typeVersion\":1},{\"id\":\"d26c2f27-0095-4dd6-9aa5-94c68f58bda3\",\"name\":\"Get files from folder\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[220,0],\"parameters\":{\"filter\":{\"folderId\":{\"mode\":\"list\",\"value\":\"root\",\"cachedResultName\":\"/ (Root folder)\"}},\"options\":{},\"resource\":\"fileFolder\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"Ng83G9mU8KtY3wu6\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"938c8f7c-84b1-4eeb-a7c8-894ae5fbc275\",\"name\":\"Download Google Docs\",\"type\":\"n8n-nodes-base.googleDocs\",\"position\":[500,0],\"parameters\":{\"operation\":\"get\",\"documentURL\":\"={{ $json.id }}\"},\"credentials\":{\"googleDocsOAuth2Api\":{\"id\":\"bbAywBJpCuYeRX89\",\"name\":\"Google Docs account\"}},\"typeVersion\":2},{\"id\":\"caa075a2-2e85-47e5-a829-425a1177e5be\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[420,-140],\"parameters\":{\"height\":300,\"content\":\"## Step2\\nIf you have files other than google docs change node here.\"},\"typeVersion\":1},{\"id\":\"05db5439-584e-40aa-9c1d-101618f66fdc\",\"name\":\"Mapping\",\"type\":\"n8n-nodes-base.set\",\"position\":[780,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"b33e9355-659a-4b71-ba5c-00c90b7ed792\",\"name\":\"={{ $('Get files from folder').item.json.name }}\",\"type\":\"string\",\"value\":\"={{ $json.content }}\"}]}},\"typeVersion\":3.4},{\"id\":\"85dc7e65-7d50-4b13-b114-88b4020865e8\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[720,-140],\"parameters\":{\"color\":3,\"width\":400,\"height\":300,\"content\":\"## Mapping\\nThis mapping part will output a dictionary with key:value where key if file name and value is file content\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Mapping\":{\"main\":[[{\"node\":\"Code\",\"type\":\"main\",\"index\":0}]]},\"Download Google Docs\":{\"main\":[[{\"node\":\"Mapping\",\"type\":\"main\",\"index\":0}]]},\"Get files from folder\":{\"main\":[[{\"node\":\"Download Google Docs\",\"type\":\"main\",\"index\":0}]]},\"When Executed by Another Workflow\":{\"main\":[[{\"node\":\"Get files from folder\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## What does this template do?\n\nThis workflow automates the process of retrieving all Google Docs from a specified Google Drive folder, extracting their content, and structuring the data into a unified key-value dictionary, where:\n\n  * Key = The file name\n  * Value = The content of the document (with normalized newlines)\n\n\n\nThis is ideal for use cases such as knowledge ingestion, prompt context preparation, or populating a RAG (Retrieval-Augmented Generation) system with reference documents.\n\n## Use Case\n\nPerfect for teams or individuals who maintain prompts, content, or reference material in Google Docs and want to integrate that data dynamically into automation or AI workflows.\n\n## What the Workflow Does\n\n  * ⚡ Triggered via Execute Workflow Trigger from another workflow\n  * 📁 Retrieves all files from a specified Google Drive folder\n  * 📄 Downloads the full content of each Google Docs file\n  * 🧩 Maps each file name to its content using a Set node\n  * 🧠 Aggregates all entries into a single dictionary with Code node\n  * 🧾 Outputs a JSON object like:\n\n\n    \n    \n    {\n      \"Doc1\": \"content of doc 1\",\n      \"Doc2\": \"content of doc 2\"\n    }\n    \n\n## Apps & Services Used\n\n  * Google Drive\n  * Google Docs\n  * n8n Code node\n\n\n\n## Pre-requisites\n\n  * A connected Google account with access to the target Drive folder\n  * OAuth2 credentials for both:\n  * Google Drive\n  * Google Docs\n\n\n\n## Customization Tips\n\n  * Change Folder: Update the Google Drive node to select a specific folder rather than root\n  * Support Other File Types: Replace or complement the Google Docs node to handle other formats (e.g., PDFs or text files)\n  * Data Cleaning: Modify the Code node to adjust text normalization to your needs\n\n\n\n## Additional Use Cases\n\n#### 🧠 Prompt Management for AI Workflows\n\n  * Centralize your GPT prompt templates in Google Docs instead of hardcoding them in n8n\n  * Easily manage prompt versions and edits directly from Google Drive\n  * Dynamically load prompts into downstream nodes (like OpenAI or Hugging Face) without redeploying workflows\n\n\n\n#### 📚 Knowledge Base Loader for RAG Systems\n\n  * Aggregate internal knowledge, FAQs, SOPs, or policy docs from Google Docs into a structured dictionary\n  * Use the resulting object as the context source for Retrieval-Augmented Generation models\n\n\n\n#### 🎛️ Dynamic Form Inputs or Question Sets\n\n  * Maintain forms, surveys, or interview questions in Google Docs\n  * Load the content into n8n for form generation, chatbot interaction, or customer intake flows\n\n\n\n#### 📄 Client-Specific Config or Script Templates\n\n  * For client onboarding workflows, load client-specific scripts or prompts from individual docs named after each client\n  * Helps automate client-facing document generation or AI interactions\n\n\n\n#### 📋 Content Ingestion for Translation, Summarization, or Sentiment Analysis\n\n  * Batch process internal documentation or user-submitted Google Docs\n  * Trigger summarization, translation, or classification pipelines using the document contents\n\n\n\n#### 🔄 Document-to-Database Import\n\n  * Automatically fetch and normalize Google Docs contents, ready to push into a database (e.g., Notion, Airtable, PostgreSQL)\n\n\n",
  "crawled_at": "2025-05-26T04:26:38.728371",
  "readme_zh": "## 该模板有何功能？\n\n此工作流可自动执行以下操作：从指定Google云端硬盘文件夹获取所有Google文档、提取其内容，并将数据构建为统一的键值字典结构，其中：\n\n  * 键 = 文件名\n  * 值 = 文档内容（含标准化换行符）\n\n特别适用于知识摄取、提示词上下文准备，或为RAG（检索增强生成）系统填充参考文档等场景。\n\n## 适用场景\n\n最适合在Google文档中维护提示词、内容或参考资料，并希望动态集成这些数据到自动化或AI工作流的团队或个人。\n\n## 工作流执行步骤\n\n  * ⚡ 通过其他工作流的\"执行工作流触发器\"启动\n  * 📁 从指定Google云端硬盘文件夹获取所有文件\n  * 📄 下载每个Google文档的完整内容\n  * 🧩 使用Set节点将每个文件名映射至其内容\n  * 🧠 通过代码节点将所有条目聚合为单一字典\n  * 🧾 输出如下格式的JSON对象：\n\n```json\n{\n  \"文档1\": \"文档1的内容\",\n  \"文档2\": \"文档2的内容\"\n}\n```\n\n## 使用的应用及服务\n\n  * Google云端硬盘\n  * Google文档\n  * n8n代码节点\n\n## 前提条件\n\n  * 已关联可访问目标文件夹的Google账户\n  * 以下服务的OAuth2凭证：\n  * Google云端硬盘\n  * Google文档\n\n## 定制建议\n\n  * 更改文件夹：更新Google云端硬盘节点以选择特定子文件夹而非根目录\n  * 支持其他文件类型：替换或补充Google文档节点以处理PDF或文本文件等格式\n  * 数据清洗：修改代码节点以按需调整文本标准化规则\n\n## 扩展应用场景\n\n#### 🧠 AI工作流的提示词管理\n\n  * 将GPT提示词模板集中存储在Google文档，而非硬编码在n8n中\n  * 直接通过Google云端硬盘管理提示词版本和编辑\n  * 动态加载提示词至下游节点（如OpenAI或Hugging Face）而无需重新部署工作流\n\n#### 📚 RAG系统的知识库加载器\n\n  * 将内部知识库、常见问题、标准操作流程或政策文档从Google文档聚合为结构化字典\n  * 将生成的对象作为检索增强生成模型的上下文来源\n\n#### 🎛️ 动态表单输入或问题集\n\n  * 在Google文档中维护表单、调查问卷或面试问题\n  * 将内容载入n8n用于表单生成、聊天机器人交互或客户接待流程\n\n#### 📄 客户专属配置或脚本模板\n\n  * 在客户 onboarding 流程中，从以客户命名的文档加载专属脚本/提示词\n  * 助力自动化生成客户导向文档或AI交互\n\n#### 📋 翻译/摘要/情感分析的内容摄取\n\n  * 批量处理内部文档或用户提交的Google文档\n  * 基于文档内容触发摘要生成、翻译或分类管道\n\n#### 🔄 文档到数据库的导入\n\n  * 自动获取并标准化Google文档内容，准备推送至Notion、Airtable或PostgreSQL等数据库",
  "title_zh": "将Google Drive文件夹中的文件加载并聚合到键值字典中",
  "publish_date_zh": "最后一次更新于一个月前",
  "workflow_json_zh": "{\n  \"name\": \"Google Drive Files Loader\",\n  \"nodes\": [\n    {\n      \"id\": \"3d066626-a87d-4e7b-bc16-9f47e1277dde\",\n      \"name\": \"When Executed by Another Workflow\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        0,\n        0\n      ],\n      \"parameters\": {\n        \"inputSource\": \"jsonExample\",\n        \"jsonExample\": \"{\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"cb0e5563-1550-4121-9fd5-b1cbd9810476\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        960,\n        0\n      ],\n      \"parameters\": {\n        \"jsCode\": \"// n8n Code Node\\n\\n// Initialize an empty object to store the aggregated results\\nconst aggregatedDict = {};\\n\\n// Get all input items passed to this node\\nconst inputItems = $input.all();\\n\\n// Loop through each input item\\nfor (const item of inputItems) {\\n  // Get the JSON data from the current item\\n  const itemJson = item.json;\\n\\n  // Check if item.json is actually an object and not null/undefined\\n  // Also ensure it's not an array, as we expect key-value pairs\\n  if (itemJson && typeof itemJson === 'object' && !Array.isArray(itemJson)) {\\n\\n    // Iterate over all the keys within the current item's JSON object\\n    for (const key of Object.keys(itemJson)) {\\n      // Add/overwrite the key-value pair to our aggregated dictionary\\n      aggregatedDict[key] = itemJson[key].replaceAll(/\\\\n+/g, \\\"\\\\n\\\");\\n      // console.log(`Adding/Updating key: ${key}`); // Optional: for debugging\\n    }\\n\\n  } else {\\n    // Optional: Log a warning if an item doesn't have the expected format\\n    console.warn(`Skipping item - 'json' property is not a valid object:`, itemJson);\\n  }\\n}\\n\\n// n8n expects an array of items as output.\\n// We return a single item containing the final aggregated dictionary in its 'json' property.\\nreturn [{ json: aggregatedDict }];\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"1b90ca95-7251-4573-9b0b-4af3622721ba\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        140,\n        -140\n      ],\n      \"parameters\": {\n        \"height\": 300,\n        \"content\": \"## 第一步\\n定义您想要搜索所有文件的文件夹。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d26c2f27-0095-4dd6-9aa5-94c68f58bda3\",\n      \"name\": \"Get files from folder\",\n      \"type\": \"n8n-nodes-base.googleDrive\",\n      \"position\": [\n        220,\n        0\n      ],\n      \"parameters\": {\n        \"filter\": {\n          \"folderId\": {\n            \"mode\": \"list\",\n            \"value\": \"root\",\n            \"cachedResultName\": \"/ (Root folder)\"\n          }\n        },\n        \"options\": {},\n        \"resource\": \"fileFolder\"\n      },\n      \"credentials\": {\n        \"googleDriveOAuth2Api\": {\n          \"id\": \"Ng83G9mU8KtY3wu6\",\n          \"name\": \"Google Drive account\"\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"938c8f7c-84b1-4eeb-a7c8-894ae5fbc275\",\n      \"name\": \"Download Google Docs\",\n      \"type\": \"n8n-nodes-base.googleDocs\",\n      \"position\": [\n        500,\n        0\n      ],\n      \"parameters\": {\n        \"operation\": \"get\",\n        \"documentURL\": \"={{ $json.id }}\"\n      },\n      \"credentials\": {\n        \"googleDocsOAuth2Api\": {\n          \"id\": \"bbAywBJpCuYeRX89\",\n          \"name\": \"Google Docs account\"\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"caa075a2-2e85-47e5-a829-425a1177e5be\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        420,\n        -140\n      ],\n      \"parameters\": {\n        \"height\": 300,\n        \"content\": \"## 第二步\\n如果您有非谷歌文档的文件，请在此处更改节点。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"05db5439-584e-40aa-9c1d-101618f66fdc\",\n      \"name\": \"Mapping\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        780,\n        0\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b33e9355-659a-4b71-ba5c-00c90b7ed792\",\n              \"name\": \"={{ $('Get files from folder').item.json.name }}\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.content }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.4\n    },\n    {\n      \"id\": \"85dc7e65-7d50-4b13-b114-88b4020865e8\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        720,\n        -140\n      ],\n      \"parameters\": {\n        \"color\": 3,\n        \"width\": 400,\n        \"height\": 300,\n        \"content\": \"## 映射\\n此映射部分将输出一个字典，其中键为文件名，值为文件内容。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Mapping\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Download Google Docs\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Mapping\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get files from folder\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Download Google Docs\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When Executed by Another Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get files from folder\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}