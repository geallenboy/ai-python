{
  "url": "https://n8n.io/workflows/2326-organise-an-event-using-slack-google-calendar-and-ai/",
  "title": "Organise an Event using Slack, Google Calendar and AI",
  "author": "Jimleuk",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [],
  "workflow_json": "{\"meta\":{\"instanceId\":\"257476b1ef58bf3cb6a46e65fac7ee34a53a5e1a8492d5c6e4da5f87c9b82833\",\"templateId\":\"2326\"},\"nodes\":[{\"id\":\"806e7f80-b936-49c3-9759-6f91fab5781e\",\"name\":\"For Each User ID...\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1640,1438],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"users\"},\"typeVersion\":1},{\"id\":\"8a932c63-18d2-438d-a09c-256c3432a01f\",\"name\":\"Get User\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1900,1278],\"parameters\":{\"user\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $json.users }}\"},\"resource\":\"user\"},\"typeVersion\":2.2},{\"id\":\"fefe8889-a564-4d70-a909-a3e836ca6286\",\"name\":\"Search for Invite Requests\",\"type\":\"n8n-nodes-base.slack\",\"position\":[340,840],\"parameters\":{\"limit\":3,\"query\":\"in:#n8n-events has::calendar:\",\"options\":{},\"operation\":\"search\"},\"typeVersion\":2.2},{\"id\":\"bbe29b66-2b02-409a-a7c9-c6afd08f62f8\",\"name\":\"Get Existing Invite EventID\",\"type\":\"n8n-nodes-base.code\",\"position\":[815,883],\"parameters\":{\"jsCode\":\"const channel =  $('Search for Invite Requests').item.json.channel;\\n\\nreturn $input\\n  .all()\\n  .filter(item => !item.json.thread_ts || item.json.ts === item.json.thread_ts)\\n  .map(invite => {\\n    const replies = $input\\n      .all()\\n      .filter(reply => reply.json.thread_ts === invite.json.thread_ts);\\n    const replyWithEventTag = replies\\n      .find(reply => reply.json.bot_id && reply.json.text.match(/#event([a-z0-9]+)/i));\\n    const eventId = replyWithEventTag\\n      ? replyWithEventTag.json.text.match(/#event([a-z0-9]+)/i)[1]\\n      : null;\\n    return {\\n      eventId,\\n      invite,\\n      channel,\\n    }\\n  });\\n\\nreturn output;\"},\"typeVersion\":2,\"alwaysOutputData\":true},{\"id\":\"82053e1b-0ed2-4967-9654-9d1488c0ab3c\",\"name\":\"Should Create Event?\",\"type\":\"n8n-nodes-base.if\",\"position\":[995,883],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"5c45447a-ab61-42c8-92c9-4c5d6970def7\",\"operator\":{\"type\":\"string\",\"operation\":\"notExists\",\"singleValue\":true},\"leftValue\":\"={{ $json.eventId }}\",\"rightValue\":\"\"}]}},\"typeVersion\":2,\"alwaysOutputData\":false},{\"id\":\"d051c89a-d337-4db4-b9dd-208a6b9488f6\",\"name\":\"Create Event\",\"type\":\"n8n-nodes-base.googleCalendar\",\"position\":[1940,600],\"parameters\":{\"end\":\"={{ $json.output.output.event_end_date ? $json.output.output.event_end_date + ' ' + $json.output.output.event_end_time : (new Date($json.output.output.event_start_date + ' ' + $json.output.output.event_start_time)).plus(3, 'hour').format('yyyy-MM-dd HH:mm:ss') }}\",\"start\":\"={{ $json.output.output.event_start_date }} {{ $json.output.output.event_start_time }}\",\"calendar\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com\",\"cachedResultName\":\"n8n-events\"},\"additionalFields\":{\"summary\":\"={{ $json.output.output.event_title }}\",\"location\":\"={{ $json.output.output.location_address }}\",\"description\":\"=## {{ $json.output.output.event_title }}\\n\\n{{ $('Should Create Event?').item.json.invite.json.text }}\\n\\nTime:\\n{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"event_start_date\\\"] + ' ' + $json[\\\"output\\\"][\\\"output\\\"][\\\"event_start_time\\\"] }}{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"event_end_date\\\"] ? ' to ' : '' }}{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"event_end_date\\\"] ? \\n $json[\\\"output\\\"][\\\"output\\\"][\\\"event_end_date\\\"] + ' ' + $json[\\\"output\\\"][\\\"output\\\"][\\\"event_end_time\\\"] : '' }}\\n\\nLocation:\\n{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"location_address\\\"] }}\\n{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"location_url\\\"] }}\",\"guestsCanModify\":true,\"guestsCanInviteOthers\":true,\"guestsCanSeeOtherGuests\":true}},\"typeVersion\":1.1},{\"id\":\"9b4ab665-edd2-4a4c-b84f-4c1c466c7957\",\"name\":\"Get Invite Reactions\",\"type\":\"n8n-nodes-base.slack\",\"position\":[1640,1258],\"parameters\":{\"resource\":\"reaction\",\"channelId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $('Should Create Event?').item.json.channel.id }}\"},\"operation\":\"get\",\"timestamp\":\"={{ $('Should Create Event?').item.json.invite.json.ts }}\"},\"typeVersion\":2.2},{\"id\":\"783e0e31-43c1-40aa-89de-f886ff7511d9\",\"name\":\"Get Invite Replies\",\"type\":\"n8n-nodes-base.slack\",\"position\":[635,883],\"parameters\":{\"ts\":\"={{ $json.ts }}\",\"filters\":{},\"resource\":\"channel\",\"channelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"C074W8X9UJV\",\"cachedResultName\":\"n8n-events\"},\"operation\":\"replies\"},\"typeVersion\":2.2,\"alwaysOutputData\":true},{\"id\":\"963c872e-858d-47bc-b648-d98079dd722a\",\"name\":\"Extract Invite Reactions\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1320,1438],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"message.reactions\"},\"typeVersion\":1},{\"id\":\"f4132852-cfc3-4662-8976-cfc262a9ad78\",\"name\":\"Get Old EventId\",\"type\":\"n8n-nodes-base.set\",\"position\":[1320,1258],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={\\n  \\\"eventId\\\": \\\"{{ $json.eventId }}\\\",\\n}\"},\"typeVersion\":3.3,\"alwaysOutputData\":true},{\"id\":\"a83ea855-a2fa-4f9f-9b1e-298a97b78591\",\"name\":\"Add Attendee to Event\",\"type\":\"n8n-nodes-base.googleCalendar\",\"position\":[2380,1278],\"parameters\":{\"eventId\":\"={{ $('Get Old EventId').item.json.eventId }}\",\"calendar\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com\",\"cachedResultName\":\"n8n-events\"},\"operation\":\"update\",\"updateFields\":{\"attendees\":[\"={{ $json.email }}\"]}},\"typeVersion\":1.1},{\"id\":\"80b74ca6-5d98-4db9-8555-56e5967266e8\",\"name\":\"Get Event Details\",\"type\":\"n8n-nodes-base.googleCalendar\",\"position\":[1480,1258],\"parameters\":{\"eventId\":\"={{ $json.eventId }}\",\"options\":{},\"calendar\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com\",\"cachedResultName\":\"n8n-events\"},\"operation\":\"get\"},\"typeVersion\":1.1},{\"id\":\"a059fe82-4d12-48ce-a378-d1e9b7625000\",\"name\":\"Is Attending\",\"type\":\"n8n-nodes-base.filter\",\"position\":[1480,1438],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"858b779e-732e-4b89-9007-93f9aafbb50b\",\"operator\":{\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.name }}\",\"rightValue\":\"white_check_mark\"}]}},\"typeVersion\":2},{\"id\":\"14716446-8014-46d9-a9db-851d35ebfb33\",\"name\":\"Get User Email\",\"type\":\"n8n-nodes-base.set\",\"position\":[2220,1278],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"16978160-49ce-42d4-a4ed-677bb2bdfe8d\",\"name\":\"email\",\"type\":\"string\",\"value\":\"={{ $json.profile.email }}\"}]}},\"typeVersion\":3.3},{\"id\":\"8540e7f5-fce1-40cb-89a7-5be4c9f7cd63\",\"name\":\"Should Add Attendee?\",\"type\":\"n8n-nodes-base.if\",\"position\":[2060,1278],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"cb9590b0-2c0d-40e3-b379-cac9666d9ffe\",\"operator\":{\"type\":\"boolean\",\"operation\":\"false\",\"singleValue\":true},\"leftValue\":\"={{ Boolean($('Get Event Details').item.json.attendees.find(x => x.email === $json.profile.email)) }}\",\"rightValue\":\"false\"}]}},\"typeVersion\":2},{\"id\":\"6958ed3a-5d59-40b8-969a-e90988ca68cb\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[1620,680],\"parameters\":{\"jsonSchema\":\"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"event_title\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_start_date\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_start_time\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_end_date\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_end_time\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"location_address\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"location_url\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_type\\\": { \\\"type\\\": \\\"string\\\" }\\n  }\\n}\"},\"typeVersion\":1.1},{\"id\":\"f4518e1e-595f-4492-8439-9de9e8701665\",\"name\":\"SerpAPI\",\"type\":\"@n8n/n8n-nodes-langchain.toolSerpApi\",\"position\":[1440,740],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"821c4388-317d-4f40-ac1a-ea7f2d0da711\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[1340,680],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"2b0aa447-164f-4f7c-95b1-ae44c699fc89\",\"name\":\"Wikipedia\",\"type\":\"@n8n/n8n-nodes-langchain.toolWikipedia\",\"position\":[1520,740],\"parameters\":{},\"typeVersion\":1},{\"id\":\"66b28991-1417-4b4a-a604-68bea258c141\",\"name\":\"Schedule Trigger\",\"type\":\"n8n-nodes-base.scheduleTrigger\",\"position\":[140,840],\"parameters\":{\"rule\":{\"interval\":[{\"field\":\"minutes\",\"minutesInterval\":30}]}},\"typeVersion\":1.2},{\"id\":\"6cfe47dc-d630-42da-a755-325b5f466488\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[65.15658774955875,620],\"parameters\":{\"color\":7,\"width\":468.0872755624215,\"height\":401.633728593893,\"content\":\"## 1. Pull Messages from Slack Channel\\n[Read more about using the Slack](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack/)\\n\\nUsing the Slack Node, we're able to filter all top level messages marked with the calendar emoji signifying a request that a calendar event is created. Be sure to configure your slack app with all the required permissions for your workspace.\"},\"typeVersion\":1},{\"id\":\"89b74ffd-6581-43c6-821d-50f34004be6f\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[560,643.4948198232535],\"parameters\":{\"color\":7,\"width\":612.4609442091373,\"height\":463.294565931203,\"content\":\"## 2. Decide Whether a new Event Should Be Created\\n[Read more about using the Code](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code)\\n\\nFor more complex workflows, sometimes you may need to gather and prepare variables before the rest of the workflow runs. The Code node is one such tool to achieve this if you're familiar with code but its not the only way.\\n\\nThis workflow splits based on whether the event needs to be created. When it already exists, attendees are updated for the existing event instead.\"},\"typeVersion\":1},{\"id\":\"355b928a-3f1f-415b-8bcf-3a715ac770c3\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1220,264.3100105144731],\"parameters\":{\"color\":7,\"width\":582.5773441997128,\"height\":614.2457232899785,\"content\":\"## 3. Using AI Agent to Automate Event Creation\\n[Read more about AI Agents](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)\\n\\nAI Agents are generally described as self-governing LLMs with access to various \\\"tools\\\" which extend their knowledge and/or capability. In this demo, we've instructed the AI to do the following:\\n1. Generate a nice Event title.\\n2. Parse and assume dates and times from user message.\\n3. Parse the address and website of location/venue and to use the \\\"tools\\\" if it cannot get this data from the message or its own knowledge.\"},\"typeVersion\":1},{\"id\":\"d9ab9ce6-c2ae-43f1-af69-b39403b8ef36\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1260,1040],\"parameters\":{\"color\":7,\"width\":555.022465659362,\"height\":579.2571386002115,\"content\":\"## 5. Get Emoji Reactions to Track Attendees\\n[Read more about using Slack](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack)\\n\\nWhen the event exists, we can instead start adding other team members who've reacted to the message with the ✅ emoji. In this part of the workflow, there's a bit of logic to compare the number of people who've reacted to the attendee list of the actual event. This is necessary to avoid unwanted notifications which could get quite annoying!\"},\"typeVersion\":1},{\"id\":\"8d60d40a-5eae-4a57-ab68-5572199ddfbb\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1860,1107],\"parameters\":{\"color\":7,\"width\":665.8690262556933,\"height\":354.87325537783204,\"content\":\"## 6. Add Attendees to Existing Calendar Event\\n[Read more about using Google Calendar](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar)\\n\\nn8n nodes make it easy to work with Google Calendar by having great converage on the Google API. Most common actions can be found in the dropdown list - there is no need to learn the code itself!\\n\"},\"typeVersion\":1},{\"id\":\"2e58ced7-5849-4726-9050-57e60a3f8e93\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-320,600],\"parameters\":{\"width\":359.6648027457353,\"height\":416.9747281125149,\"content\":\"## Try It Out!\\n### This workflow does the following\\n* Monitors a slack channel for event messages tagged with the Calendar (📅) emoji.\\n* Checks if a calender event exists otherwise uses ChatGPT to create the calendar event; AI will add event title, description and location details.\\n* If calendar event exists, checks for channel users who have reacted with checkmark (✅) emoji.\\n* These users are automatically added as attendees to the event.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Hacking!\"},\"typeVersion\":1},{\"id\":\"e64b575a-e422-4c98-86b7-dc69e15150c3\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1840,400],\"parameters\":{\"color\":7,\"width\":492.07150832656214,\"height\":414.62723127587867,\"content\":\"## 4. Create Event and Send Reply Message\\n[Read more about using Google Calendar](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar)\\n\\nOnce we have these details, we create the invite and reply to original user message acknowleging the event was created successfully. Note, we also use this reply to avoid duplicates!\"},\"typeVersion\":1},{\"id\":\"3d3a6d11-a68f-4623-943d-55493d334290\",\"name\":\"Reply Invite with EventId\",\"type\":\"n8n-nodes-base.slack\",\"position\":[2120,600],\"parameters\":{\"text\":\"=Event Created!\\nAdd to Calendar: {{ $json.htmlLink }}\\n#event{{ $json.id }}\",\"select\":\"channel\",\"channelId\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"={{ $('Should Create Event?').item.json.channel.id }}\"},\"otherOptions\":{\"thread_ts\":{\"replyValues\":{\"thread_ts\":\"={{ $('Should Create Event?').item.json.invite.json.ts }}\"}}}},\"typeVersion\":2.2},{\"id\":\"0b0e02e7-1375-4de9-9781-915d7e96ef20\",\"name\":\"Calendar Event Booking Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[1380,540],\"parameters\":{\"text\":\"=Your role is to create professional event calendar events based on user message.\\nGiven the following user message, do the following 5 tasks. Note, Assume all dates are within the current year which is {{ $now.format(\\\"yyyy\\\") }} unless stated otherwise.\\n1. Summarize the message and generate a title for the event. Make sure it's eye-catching to attract more attendees!\\n2. Determine and extract the start date and time for the event. Date must be in the format yyyy-MM-dd and time in the format of hh:mm:ss. If no start time is indicated, the start time is 9am. If you are unable to do so, just leave it blank.\\n3. Determine and extract the end date and time for the event. Date must be in the format yyyy-MM-dd and time in the format of hh:mm:ss. If you are unable to do so, just leave it blank.\\n4. Where the user message refers to a location or venue, use the SerpAPI tool to search for this location or venue on the web and retrieve the full address.\\n5. Additionally, if the location or venue has a website or relevant webpage, return the URL of the location or venue.\\n6. Try to identify the event type as one of \\\"social meeting\\\", \\\"social gathering\\\", \\\"business meeting\\\", \\\"business gathering\\\" or \\\"unknown\\\".\\n\\nuser message:\\n```{{ $json.invite.json.text }}```\",\"agent\":\"openAiFunctionsAgent\",\"options\":{},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.5},{\"id\":\"e4ce06a0-cc42-4732-aadd-519fe7307a4d\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1220,160],\"parameters\":{\"color\":5,\"width\":394.45954589267495,\"height\":80,\"content\":\"### Part 1: Creating the Event\\nThis branch runs when we have a new Event.\"},\"typeVersion\":1},{\"id\":\"463a2dbc-2d10-403a-a417-aec442e917dd\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1260,940],\"parameters\":{\"color\":5,\"width\":394.45954589267495,\"height\":80,\"content\":\"### Part 2: Adding Attendees to Event\\nThis branch runs if the event already exists.\"},\"typeVersion\":1},{\"id\":\"aa4d41ca-1332-40da-a2b9-331257b6a1f2\",\"name\":\"Sticky Note9\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[300,820],\"parameters\":{\"width\":179.82769272818715,\"height\":362.21121634583966,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n🚨**Required**\\n* Set the channel to monitor here. Also, make sure to use the user access token in your credential\"},\"typeVersion\":1},{\"id\":\"790293df-46bc-47ba-a60b-be611f46b670\",\"name\":\"Sticky Note10\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1900,580],\"parameters\":{\"width\":179.82769272818715,\"height\":317.6738512911155,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n🚨**Required**\\n* Set the Google Calendar to use here.\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"SerpAPI\":{\"ai_tool\":[[{\"node\":\"Calendar Event Booking Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Get User\":{\"main\":[[{\"node\":\"Should Add Attendee?\",\"type\":\"main\",\"index\":0}]]},\"Wikipedia\":{\"ai_tool\":[[{\"node\":\"Calendar Event Booking Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"Create Event\":{\"main\":[[{\"node\":\"Reply Invite with EventId\",\"type\":\"main\",\"index\":0}]]},\"Is Attending\":{\"main\":[[{\"node\":\"For Each User ID...\",\"type\":\"main\",\"index\":0}]]},\"Get User Email\":{\"main\":[[{\"node\":\"Add Attendee to Event\",\"type\":\"main\",\"index\":0}]]},\"Get Old EventId\":{\"main\":[[{\"node\":\"Get Event Details\",\"type\":\"main\",\"index\":0}]]},\"Schedule Trigger\":{\"main\":[[{\"node\":\"Search for Invite Requests\",\"type\":\"main\",\"index\":0}]]},\"Get Event Details\":{\"main\":[[{\"node\":\"Get Invite Reactions\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"Calendar Event Booking Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Get Invite Replies\":{\"main\":[[{\"node\":\"Get Existing Invite EventID\",\"type\":\"main\",\"index\":0}]]},\"For Each User ID...\":{\"main\":[[{\"node\":\"Get User\",\"type\":\"main\",\"index\":0}]]},\"Get Invite Reactions\":{\"main\":[[{\"node\":\"Extract Invite Reactions\",\"type\":\"main\",\"index\":0}]]},\"Should Add Attendee?\":{\"main\":[[{\"node\":\"Get User Email\",\"type\":\"main\",\"index\":0}]]},\"Should Create Event?\":{\"main\":[[{\"node\":\"Calendar Event Booking Agent\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Get Old EventId\",\"type\":\"main\",\"index\":0}]]},\"Extract Invite Reactions\":{\"main\":[[{\"node\":\"Is Attending\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Calendar Event Booking Agent\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Search for Invite Requests\":{\"main\":[[{\"node\":\"Get Invite Replies\",\"type\":\"main\",\"index\":0}]]},\"Get Existing Invite EventID\":{\"main\":[[{\"node\":\"Should Create Event?\",\"type\":\"main\",\"index\":0}]]},\"Calendar Event Booking Agent\":{\"main\":[[{\"node\":\"Create Event\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This n8n workflow takes Slack conversations and turns them into Calendar events complete with accurate date and times and location information. Adding and removing attendees are also managed automatically.\n\n## How it works\n\n  * Workflow monitors a Slack channel for invite messages with a \"📅\" reaction and sends this to the AI agent.\n  * AI agent parses the message determining the time, date and location.\n  * Using its Location tool, the AI agent searches for the precise location address from Google Maps.\n  * Using its Calendar tool, the AI agent creates a Google Calendar invite with the title, description and location address for the user.\n  * Back in the Slack channel, others can RSVP to the invite by reacting with the \"✅\" emjoi.\n  * The workflow polls the message after a while and adds the users who have reacted to the Calendar Invite as attendees. Conversely, removing any attendees who have since removed their reaction.\n\n\n\n## Examples\n\n**Jill** : \"Hey team, I'm organising a round of Laser Tag (Bunker 51) next Thursday around 6pm. Please RSVP with a ✅\"\n\n**AI** : \"I've helped you create an event in your calendar <https://cal.google.com/>...\"\n\n**Jack** : \"✅\"\n\n**AI** : \"I've added Jack to the event as an attendee\".\n\n## Requirements\n\n  * Slack channel to attach the workflow\n  * OpenAI account to use a GPT model\n  * Google Calendar to create and update events\n\n\n\n## Customising the Workflow\n\nThis workflow can work with other messaging platforms that support reactions or tagging like features such as discord. Don't use Google Calendar? Swap it out for Outlook or your own.\n\nUse any combinations of emjoi reactions and add new rules like \"RSVP maybe\" which could send reminder updates nearer the event date.\n",
  "crawled_at": "2025-05-25T23:30:15.227611",
  "readme_zh": "这个n8n工作流能够将Slack对话转化为包含准确日期、时间和地点信息的日历事件，并自动管理参与者的增减。\n\n## 工作原理\n\n* 工作流监控Slack频道中带有\"📅\"表情的邀请消息，并将其发送至AI助手\n* AI助手解析消息内容，确定时间、日期及地点信息\n* 通过位置工具，AI助手从Google地图获取精确的地址信息\n* 借助日历工具，AI助手为用户创建包含标题、描述和地址的Google日历邀请\n* 在Slack频道中，其他成员可通过回复\"✅\"表情进行活动确认\n* 工作流会定期检查消息，将已回复表情的用户添加为日历邀请参与者，同时移除取消表情的参与者\n\n## 示例场景\n\n**Jill**：\"团队好，我计划下周四晚6点左右组织激光 tag活动（Bunker 51场地），请用✅表情确认参加\"\n\n**AI助手**：\"已为您创建日历活动<https://cal.google.com/>...\"\n\n**Jack**：\"✅\"\n\n**AI助手**：\"已将Jack添加为活动参与者\"\n\n## 系统要求\n\n* 需配置Slack频道接入工作流\n* 需要OpenAI账户调用GPT模型\n* 需使用Google日历创建和更新事件\n\n## 自定义设置\n\n本工作流可适配其他支持表情互动功能的通讯平台（如Discord）。若需替换Google日历，可改用Outlook或其他日历系统。\n\n支持自定义表情组合规则，例如设置\"可能参加\"选项，用于在活动临近时发送提醒通知。",
  "title_zh": "利用Slack、Google日历和AI组织活动",
  "publish_date_zh": "最后更新于10个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"257476b1ef58bf3cb6a46e65fac7ee34a53a5e1a8492d5c6e4da5f87c9b82833\",\n    \"templateId\": \"2326\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"806e7f80-b936-49c3-9759-6f91fab5781e\",\n      \"name\": \"For Each User ID...\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1640,\n        1438\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"users\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8a932c63-18d2-438d-a09c-256c3432a01f\",\n      \"name\": \"Get User\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        1900,\n        1278\n      ],\n      \"parameters\": {\n        \"user\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $json.users }}\"\n        },\n        \"resource\": \"user\"\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"fefe8889-a564-4d70-a909-a3e836ca6286\",\n      \"name\": \"Search for Invite Requests\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        340,\n        840\n      ],\n      \"parameters\": {\n        \"limit\": 3,\n        \"query\": \"in:#n8n-events has::calendar:\",\n        \"options\": {},\n        \"operation\": \"search\"\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"bbe29b66-2b02-409a-a7c9-c6afd08f62f8\",\n      \"name\": \"Get Existing Invite EventID\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        815,\n        883\n      ],\n      \"parameters\": {\n        \"jsCode\": \"const channel =  $('Search for Invite Requests').item.json.channel;\\n\\nreturn $input\\n  .all()\\n  .filter(item => !item.json.thread_ts || item.json.ts === item.json.thread_ts)\\n  .map(invite => {\\n    const replies = $input\\n      .all()\\n      .filter(reply => reply.json.thread_ts === invite.json.thread_ts);\\n    const replyWithEventTag = replies\\n      .find(reply => reply.json.bot_id && reply.json.text.match(/#event([a-z0-9]+)/i));\\n    const eventId = replyWithEventTag\\n      ? replyWithEventTag.json.text.match(/#event([a-z0-9]+)/i)[1]\\n      : null;\\n    return {\\n      eventId,\\n      invite,\\n      channel,\\n    }\\n  });\\n\\nreturn output;\"\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"82053e1b-0ed2-4967-9654-9d1488c0ab3c\",\n      \"name\": \"Should Create Event?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        995,\n        883\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"5c45447a-ab61-42c8-92c9-4c5d6970def7\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notExists\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ $json.eventId }}\",\n              \"rightValue\": \"\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2,\n      \"alwaysOutputData\": false\n    },\n    {\n      \"id\": \"d051c89a-d337-4db4-b9dd-208a6b9488f6\",\n      \"name\": \"Create Event\",\n      \"type\": \"n8n-nodes-base.googleCalendar\",\n      \"position\": [\n        1940,\n        600\n      ],\n      \"parameters\": {\n        \"end\": \"={{ $json.output.output.event_end_date ? $json.output.output.event_end_date + ' ' + $json.output.output.event_end_time : (new Date($json.output.output.event_start_date + ' ' + $json.output.output.event_start_time)).plus(3, 'hour').format('yyyy-MM-dd HH:mm:ss') }}\",\n        \"start\": \"={{ $json.output.output.event_start_date }} {{ $json.output.output.event_start_time }}\",\n        \"calendar\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com\",\n          \"cachedResultName\": \"n8n-events\"\n        },\n        \"additionalFields\": {\n          \"summary\": \"={{ $json.output.output.event_title }}\",\n          \"location\": \"={{ $json.output.output.location_address }}\",\n          \"description\": \"=## {{ $json.output.output.event_title }}\\n\\n{{ $('Should Create Event?').item.json.invite.json.text }}\\n\\nTime:\\n{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"event_start_date\\\"] + ' ' + $json[\\\"output\\\"][\\\"output\\\"][\\\"event_start_time\\\"] }}{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"event_end_date\\\"] ? ' to ' : '' }}{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"event_end_date\\\"] ? \\n $json[\\\"output\\\"][\\\"output\\\"][\\\"event_end_date\\\"] + ' ' + $json[\\\"output\\\"][\\\"output\\\"][\\\"event_end_time\\\"] : '' }}\\n\\nLocation:\\n{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"location_address\\\"] }}\\n{{ $json[\\\"output\\\"][\\\"output\\\"][\\\"location_url\\\"] }}\",\n          \"guestsCanModify\": true,\n          \"guestsCanInviteOthers\": true,\n          \"guestsCanSeeOtherGuests\": true\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"9b4ab665-edd2-4a4c-b84f-4c1c466c7957\",\n      \"name\": \"Get Invite Reactions\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        1640,\n        1258\n      ],\n      \"parameters\": {\n        \"resource\": \"reaction\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $('Should Create Event?').item.json.channel.id }}\"\n        },\n        \"operation\": \"get\",\n        \"timestamp\": \"={{ $('Should Create Event?').item.json.invite.json.ts }}\"\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"783e0e31-43c1-40aa-89de-f886ff7511d9\",\n      \"name\": \"Get Invite Replies\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        635,\n        883\n      ],\n      \"parameters\": {\n        \"ts\": \"={{ $json.ts }}\",\n        \"filters\": {},\n        \"resource\": \"channel\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"C074W8X9UJV\",\n          \"cachedResultName\": \"n8n-events\"\n        },\n        \"operation\": \"replies\"\n      },\n      \"typeVersion\": 2.2,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"963c872e-858d-47bc-b648-d98079dd722a\",\n      \"name\": \"Extract Invite Reactions\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        1320,\n        1438\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"message.reactions\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"f4132852-cfc3-4662-8976-cfc262a9ad78\",\n      \"name\": \"Get Old EventId\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        1320,\n        1258\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={\\n  \\\"eventId\\\": \\\"{{ $json.eventId }}\\\",\\n}\"\n      },\n      \"typeVersion\": 3.3,\n      \"alwaysOutputData\": true\n    },\n    {\n      \"id\": \"a83ea855-a2fa-4f9f-9b1e-298a97b78591\",\n      \"name\": \"Add Attendee to Event\",\n      \"type\": \"n8n-nodes-base.googleCalendar\",\n      \"position\": [\n        2380,\n        1278\n      ],\n      \"parameters\": {\n        \"eventId\": \"={{ $('Get Old EventId').item.json.eventId }}\",\n        \"calendar\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com\",\n          \"cachedResultName\": \"n8n-events\"\n        },\n        \"operation\": \"update\",\n        \"updateFields\": {\n          \"attendees\": [\n            \"={{ $json.email }}\"\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"80b74ca6-5d98-4db9-8555-56e5967266e8\",\n      \"name\": \"Get Event Details\",\n      \"type\": \"n8n-nodes-base.googleCalendar\",\n      \"position\": [\n        1480,\n        1258\n      ],\n      \"parameters\": {\n        \"eventId\": \"={{ $json.eventId }}\",\n        \"options\": {},\n        \"calendar\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com\",\n          \"cachedResultName\": \"n8n-events\"\n        },\n        \"operation\": \"get\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"a059fe82-4d12-48ce-a378-d1e9b7625000\",\n      \"name\": \"Is Attending\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1480,\n        1438\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"858b779e-732e-4b89-9007-93f9aafbb50b\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $json.name }}\",\n              \"rightValue\": \"white_check_mark\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"14716446-8014-46d9-a9db-851d35ebfb33\",\n      \"name\": \"Get User Email\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2220,\n        1278\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"16978160-49ce-42d4-a4ed-677bb2bdfe8d\",\n              \"name\": \"email\",\n              \"type\": \"string\",\n              \"value\": \"={{ $json.profile.email }}\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"8540e7f5-fce1-40cb-89a7-5be4c9f7cd63\",\n      \"name\": \"Should Add Attendee?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        2060,\n        1278\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"cb9590b0-2c0d-40e3-b379-cac9666d9ffe\",\n              \"operator\": {\n                \"type\": \"boolean\",\n                \"operation\": \"false\",\n                \"singleValue\": true\n              },\n              \"leftValue\": \"={{ Boolean($('Get Event Details').item.json.attendees.find(x => x.email === $json.profile.email)) }}\",\n              \"rightValue\": \"false\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"6958ed3a-5d59-40b8-969a-e90988ca68cb\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        1620,\n        680\n      ],\n      \"parameters\": {\n        \"jsonSchema\": \"{\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": {\\n    \\\"event_title\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_start_date\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_start_time\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_end_date\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_end_time\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"location_address\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"location_url\\\": { \\\"type\\\": \\\"string\\\" },\\n    \\\"event_type\\\": { \\\"type\\\": \\\"string\\\" }\\n  }\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"f4518e1e-595f-4492-8439-9de9e8701665\",\n      \"name\": \"SerpAPI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolSerpApi\",\n      \"position\": [\n        1440,\n        740\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"821c4388-317d-4f40-ac1a-ea7f2d0da711\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        1340,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2b0aa447-164f-4f7c-95b1-ae44c699fc89\",\n      \"name\": \"Wikipedia\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWikipedia\",\n      \"position\": [\n        1520,\n        740\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"66b28991-1417-4b4a-a604-68bea258c141\",\n      \"name\": \"Schedule Trigger\",\n      \"type\": \"n8n-nodes-base.scheduleTrigger\",\n      \"position\": [\n        140,\n        840\n      ],\n      \"parameters\": {\n        \"rule\": {\n          \"interval\": [\n            {\n              \"field\": \"minutes\",\n              \"minutesInterval\": 30\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"6cfe47dc-d630-42da-a755-325b5f466488\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        65.15658774955875,\n        620\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 468.0872755624215,\n        \"height\": 401.633728593893,\n        \"content\": \"## 1. 从Slack频道拉取消息\\n[了解更多关于Slack的使用](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack/)\\n\\n通过Slack节点，我们能够筛选所有标记有日历表情符号的顶层消息，这些符号表示需要创建日历事件的请求。请确保为你的工作空间配置Slack应用时，已授予所有必要的权限。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"89b74ffd-6581-43c6-821d-50f34004be6f\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        560,\n        643.4948198232535\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 612.4609442091373,\n        \"height\": 463.294565931203,\n        \"content\": \"## 2. 判断是否需要创建新活动\\n[进一步了解如何使用代码节点](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code)\\n\\n在处理复杂工作流时，有时您需要在流程运行前收集并准备相关变量。若您熟悉编程，代码节点是实现这一目标的工具之一，但并非唯一途径。\\n\\n本工作流根据是否需要创建新活动进行分支判断。当活动已存在时，则直接更新现有活动的参与人信息。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"355b928a-3f1f-415b-8bcf-3a715ac770c3\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1220,\n        264.3100105144731\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 582.5773441997128,\n        \"height\": 614.2457232899785,\n        \"content\": \"## 3. 使用AI代理自动创建活动\\n[了解更多关于AI代理的信息](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)\\n\\nAI代理通常被描述为具有自主性的大型语言模型，它们能够访问各种“工具”以扩展其知识和/或能力。在本演示中，我们指导AI执行以下任务：\\n1. 生成一个吸引人的活动标题。\\n2. 从用户消息中解析并推测日期和时间。\\n3. 解析地点或场馆的地址和网站，如果无法从消息或自身知识中获取这些数据，则使用“工具”进行查询。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d9ab9ce6-c2ae-43f1-af69-b39403b8ef36\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1260,\n        1040\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 555.022465659362,\n        \"height\": 579.2571386002115,\n        \"content\": \"## 5. 使用表情符号反应追踪参与者\\n[进一步了解Slack的用法](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.slack)\\n\\n当活动创建完成后，我们可以开始添加那些用✅表情符号对消息做出反应的团队成员。在这部分工作流程中，需要运用一些逻辑来对比实际活动参与者名单与做出反应的人数。这一步骤至关重要，能有效避免发送不必要的通知——毕竟频繁的提醒可是相当惹人厌的！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"8d60d40a-5eae-4a57-ab68-5572199ddfbb\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1860,\n        1107\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 665.8690262556933,\n        \"height\": 354.87325537783204,\n        \"content\": \"## 6. 向现有日历活动添加参与者\\n[了解更多关于使用Google日历的信息](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar)\\n\\nn8n节点通过全面覆盖Google API，使得与Google日历的协作变得简单。下拉列表中即可找到大多数常见操作——无需学习代码本身！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"2e58ced7-5849-4726-9050-57e60a3f8e93\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -320,\n        600\n      ],\n      \"parameters\": {\n        \"width\": 359.6648027457353,\n        \"height\": 416.9747281125149,\n        \"content\": \"## 试试看吧！\\n### 该工作流程实现以下功能\\n* 监控Slack频道中带有日历（📅）表情符号标记的事件消息\\n* 检查日历事件是否存在，若不存在则调用ChatGPT创建日历事件（AI将自动补充事件标题、描述和地点详情）\\n* 若日历事件已存在，则检查频道中用户是否使用对勾（✅）表情符号作出回应\\n* 这些用户将被自动添加为会议参与者\\n\\n### 需要帮助？\\n加入[Discord讨论组](https://discord.com/invite/XPKeKXeB7d)或访问[社区论坛](https://community.n8n.io/)提问！\\n\\n祝您玩得愉快！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e64b575a-e422-4c98-86b7-dc69e15150c3\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1840,\n        400\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 492.07150832656214,\n        \"height\": 414.62723127587867,\n        \"content\": \"## 4. 创建活动并发送回复消息\\n[详细了解如何使用Google日历](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlecalendar)\\n\\n获取这些信息后，我们将创建邀请函并回复原始用户消息，确认活动已成功创建。请注意，我们也利用此回复来避免重复操作！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3d3a6d11-a68f-4623-943d-55493d334290\",\n      \"name\": \"Reply Invite with EventId\",\n      \"type\": \"n8n-nodes-base.slack\",\n      \"position\": [\n        2120,\n        600\n      ],\n      \"parameters\": {\n        \"text\": \"=Event Created!\\nAdd to Calendar: {{ $json.htmlLink }}\\n#event{{ $json.id }}\",\n        \"select\": \"channel\",\n        \"channelId\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"={{ $('Should Create Event?').item.json.channel.id }}\"\n        },\n        \"otherOptions\": {\n          \"thread_ts\": {\n            \"replyValues\": {\n              \"thread_ts\": \"={{ $('Should Create Event?').item.json.invite.json.ts }}\"\n            }\n          }\n        }\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"0b0e02e7-1375-4de9-9781-915d7e96ef20\",\n      \"name\": \"Calendar Event Booking Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        1380,\n        540\n      ],\n      \"parameters\": {\n        \"text\": \"=Your role is to create professional event calendar events based on user message.\\nGiven the following user message, do the following 5 tasks. Note, Assume all dates are within the current year which is {{ $now.format(\\\"yyyy\\\") }} unless stated otherwise.\\n1. Summarize the message and generate a title for the event. Make sure it's eye-catching to attract more attendees!\\n2. Determine and extract the start date and time for the event. Date must be in the format yyyy-MM-dd and time in the format of hh:mm:ss. If no start time is indicated, the start time is 9am. If you are unable to do so, just leave it blank.\\n3. Determine and extract the end date and time for the event. Date must be in the format yyyy-MM-dd and time in the format of hh:mm:ss. If you are unable to do so, just leave it blank.\\n4. Where the user message refers to a location or venue, use the SerpAPI tool to search for this location or venue on the web and retrieve the full address.\\n5. Additionally, if the location or venue has a website or relevant webpage, return the URL of the location or venue.\\n6. Try to identify the event type as one of \\\"social meeting\\\", \\\"social gathering\\\", \\\"business meeting\\\", \\\"business gathering\\\" or \\\"unknown\\\".\\n\\nuser message:\\n```{{ $json.invite.json.text }}```\",\n        \"agent\": \"openAiFunctionsAgent\",\n        \"options\": {},\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.5\n    },\n    {\n      \"id\": \"e4ce06a0-cc42-4732-aadd-519fe7307a4d\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1220,\n        160\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 394.45954589267495,\n        \"height\": 80,\n        \"content\": \"### 第一部分：创建事件\\n当有新事件时，执行此分支。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"463a2dbc-2d10-403a-a417-aec442e917dd\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1260,\n        940\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 394.45954589267495,\n        \"height\": 80,\n        \"content\": \"### 第二部分：向活动添加参与者  \\n此分支在活动已存在时执行。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"aa4d41ca-1332-40da-a2b9-331257b6a1f2\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        300,\n        820\n      ],\n      \"parameters\": {\n        \"width\": 179.82769272818715,\n        \"height\": 362.21121634583966,\n        \"content\": \"🚨**必填项**\\n* 在此处设置需要监控的频道。同时，请确保使用凭据中的用户访问令牌。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"790293df-46bc-47ba-a60b-be611f46b670\",\n      \"name\": \"Sticky Note10\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1900,\n        580\n      ],\n      \"parameters\": {\n        \"width\": 179.82769272818715,\n        \"height\": 317.6738512911155,\n        \"content\": \"🚨**必填项**\\n* 在此设置要使用的Google日历。\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"SerpAPI\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Calendar Event Booking Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get User\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Should Add Attendee?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wikipedia\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"Calendar Event Booking Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create Event\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Reply Invite with EventId\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is Attending\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"For Each User ID...\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get User Email\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add Attendee to Event\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Old EventId\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Event Details\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Schedule Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Search for Invite Requests\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Event Details\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Invite Reactions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Calendar Event Booking Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Invite Replies\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Existing Invite EventID\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"For Each User ID...\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get User\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Invite Reactions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract Invite Reactions\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Should Add Attendee?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get User Email\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Should Create Event?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Calendar Event Booking Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Get Old EventId\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Invite Reactions\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is Attending\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Calendar Event Booking Agent\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Search for Invite Requests\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Invite Replies\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Existing Invite EventID\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Should Create Event?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Calendar Event Booking Agent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Create Event\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}