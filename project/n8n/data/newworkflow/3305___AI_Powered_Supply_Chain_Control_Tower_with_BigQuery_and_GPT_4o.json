{
  "url": "https://n8n.io/workflows/3305-ai-powered-supply-chain-control-tower-with-bigquery-and-gpt-4o/",
  "title": "üóº AI Powered Supply Chain Control Tower with BigQuery and GPT-4o",
  "author": "Samir Saci",
  "publish_date": "Last update a month ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "AI"
    },
    {
      "name": "IT Ops"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"6a5e68bcca67c4cdb3e0b698d01739aea084e1ec06e551db64aeff43d174cb23\"},\"nodes\":[{\"id\":\"53b36910-966f-45ba-a425-a3260a55059f\",\"name\":\"OpenAI Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\"position\":[340,480],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini\"},\"options\":{}},\"typeVersion\":1.2},{\"id\":\"177235e8-c925-43d0-9695-10f072e26350\",\"name\":\"AI Control Tower Agent\",\"type\":\"@n8n/n8n-nodes-langchain.agent\",\"position\":[380,240],\"parameters\":{\"options\":{\"systemMessage\":\"=You are an AI-powered SQL assistant specialized in supply chain analytics. \\nYour role is to execute SQL queries on BigQuery and return only the results in a structured format.\\n\\nToday we are May 31, 2021.\\n\\n### **Behavior & Rules**\\n1Ô∏è‚É£ **Query Execution:**\\n   - Your only task is to process user requests and return **direct results** from BigQuery.\\n   - Do **not** display the SQL query.\\n   - Only return structured **data** as output.\\n\\n2Ô∏è‚É£ **Data Presentation:**\\n   - Format the results as a **table** whenever possible.\\n   - If results are numerical (counts, percentages, aggregates), return them **clearly and concisely**.\\n   - If results contain multiple rows, return **only the first 10** for preview, unless the user specifies otherwise.\\n\\n3Ô∏è‚É£ **Handling Large Datasets:**\\n   - If the user asks for many rows, show the first **100 rows max** unless specified.\\n   - Provide a **summary** when dealing with large data instead of showing everything.\\n\\n4Ô∏è‚É£ **Response Format:**\\n   - ‚úÖ **For counts & metrics:**  \\n     `\\\"There were 5,432 delayed shipments in the last 21 days.\\\"`\\n   - ‚úÖ **For tables:**  \\n     | ShipmentID | City  | Store  | Order Date | Delivery Date | On Time? |\\n     |-----------|-------|--------|------------|--------------|----------|\\n     | 12345     | NYC   | ST1    | 2024-03-10 | 2024-03-15   | No       |\\n     | 67890     | Paris | ST4    | 2024-03-11 | 2024-03-16   | Yes      |\\n\\n5Ô∏è‚É£ **Clarifying Unclear Requests:**\\n   - If the user request is **too broad**, ask for clarification instead of running an expensive query.\\n\\n---\\n\\n### Schema Awareness\\nAll SQL queries must use the BigQuery table:  \\n`transport.shipments`  \\n\\nThis table includes fields such as:\\n- `Shipment ID`, `City`, `Store`, `Order Date`, `Delivery Date`, `On Time Delivery`\\n- As well as operational timestamps: `Transmission`, `Loading`, `Airport Arrival`, etc.\\n- And status flags: `Transmission OnTime`, `Loading OnTime`, `Airport OnTime`, `Store Open`\\n\\nUse these fields appropriately when analyzing shipment performance.\\n\\n---\\n\\n### Tool Usage Instruction (for \\\"bigquery_tool\\\")\\n\\nWhenever you need to run a SQL query, use the tool called `bigquery_tool`.\\n\\nYou must provide the query in the following format:\\n```json\\n{\\n  \\\"query\\\": \\\"SELECT COUNT(*) FROM `transport.shipments` WHERE `On Time Delivery` = FALSE\\\"\\n}\\n\"}},\"typeVersion\":1.8},{\"id\":\"5366cc5f-85d3-44d2-9b1b-62febfcb44e3\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-100,-120],\"parameters\":{\"color\":7,\"width\":200,\"height\":520,\"content\":\"### 1. Workflow Trigger with Chat\\nThis workflow uses a simple chat window as a trigger. You can replace it with Telegram, Slack, Teams or a webhook trigger linked to your chat.\\n\\n#### How to setup?\\n*Nothing to do.*\\n\"},\"typeVersion\":1},{\"id\":\"4218a062-12f8-437d-ab22-5a653a3089b2\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[140,-120],\"parameters\":{\"color\":7,\"width\":700,\"height\":740,\"content\":\"### 2. AI Agent equipped with the query tool\\nIn order to have more control on the input of the BigQuery node, we don't use the BigQuery tool. Instead we have a set of nodes to retrieve the SQL query, clean it and send it to a BigQuery Node.\\n\\n#### How to setup?\\n- **AI Agent with the Chat Model**:\\n   1. Add a **chat model** with the required credentials *(Example: Open AI 4o-mini)*\\n   2. Adapt the **name of your BigQuery table** in the system prompt *(Example: transports.shipments)*\\n   3. Adapt the **tables fields explanation** in the system prompt\\n  [Learn more about the AI Agent Node](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)\\n- Copy and past the **nodes in the yellow sticker** in another workflow. Point the query tool to this workflow.\\n[Learn more about the Custom n8n Workflow Tool node](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolworkflow)\"},\"typeVersion\":1},{\"id\":\"c5967f58-00e8-4f03-9110-913547f7ab9c\",\"name\":\"Call Query Tool\",\"type\":\"@n8n/n8n-nodes-langchain.toolWorkflow\",\"position\":[640,440],\"parameters\":{\"name\":\"bigquery_tool\",\"workflowId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"4Os7DoxHjFuTwWio\",\"cachedResultName\":\"üî® Big Query Tool\"},\"description\":\"=Use this tool to run an SQL query and fetch the result from the BigQuery database.\\n\\nThe tool expects input in the following format:\\n{\\n  \\\"query\\\": \\\"SELECT COUNT(*) FROM `transport.shipments` WHERE `On Time Delivery` = FALSE\\\"\\n}\\n\\nOnly provide the SQL query as a string inside the 'query' key. Do not include code formatting (like ```sql), comments, or explanations. The tool will return only the raw result from the database.\\n\",\"workflowInputs\":{\"value\":{\"query\":\"={{ $fromAI(\\\"query\\\", \\\"SQL query to run\\\") }}\"},\"schema\":[{\"id\":\"query\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"query\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"defineBelow\",\"matchingColumns\":[\"query\"],\"attemptToConvertTypes\":false,\"convertFieldsToString\":false}},\"typeVersion\":2},{\"id\":\"429813c8-b07f-4551-aeea-1744a1225449\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[900,-120],\"parameters\":{\"width\":760,\"height\":460,\"content\":\"### 3. Big Query Workflow\\nExecute the SQL query generated by the AI agent in Big Query. Retrieve the results and send them back to the AI Agent.\\n\\n### How to set up?\\n- Paste these nodes in a separate workflow so you can use it with multiple agents.\\n- **Google BigQuery API**:\\n   1. Add your Google Translate API credentials\\n   2. The project in which your table is located\\n  [Learn more about the Google BigQuery Node](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlebigquery)\\n\"},\"typeVersion\":1},{\"id\":\"bede0624-8923-4af0-8adc-8be22d556066\",\"name\":\"Query Database\",\"type\":\"n8n-nodes-base.googleBigQuery\",\"position\":[1520,180],\"parameters\":{\"options\":{},\"sqlQuery\":\"={{ $json.query }}\",\"projectId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"=\",\"cachedResultUrl\":\"=\",\"cachedResultName\":\"=\"}},\"notesInFlow\":true,\"typeVersion\":2.1},{\"id\":\"137e4dbc-db8d-4ec7-a3e0-478dde6ef27c\",\"name\":\"Trigger Executed by the AI Tool\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[960,180],\"parameters\":{\"workflowInputs\":{\"values\":[{\"name\":\"query\"}]}},\"typeVersion\":1.1},{\"id\":\"42a2801e-582e-4340-83af-ef0041eab4f9\",\"name\":\"Sanitising the Query\",\"type\":\"n8n-nodes-base.code\",\"position\":[1240,180],\"parameters\":{\"jsCode\":\"return [\\n  {\\n    json: {\\n      query: $input.first().json.query.replace(/```sql|```/g, \\\"\\\").trim()\\n    }\\n  }\\n];\\n\"},\"typeVersion\":2},{\"id\":\"7c86fda0-116c-47ad-aaf5-8b83d2c083c6\",\"name\":\"Chat Memory\",\"type\":\"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\"position\":[480,480],\"parameters\":{},\"typeVersion\":1.3},{\"id\":\"e1408ac1-24da-4d38-8fdf-c110a54d3f55\",\"name\":\"Chat with the User\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-60,240],\"webhookId\":\"ee7c418b-d7d6-41f9-8e87-0f71b8ae1cf9\",\"parameters\":{\"options\":{}},\"typeVersion\":1.1},{\"id\":\"bc49829b-45f2-4910-9c37-907271982f14\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[900,380],\"parameters\":{\"width\":780,\"height\":540,\"content\":\"### 4. Do you need more details?\\nFind a step-by-step guide in this tutorial\\n![Guide](https://www.samirsaci.com/content/images/2025/04/image.png)\\n[üé• Watch My Tutorial](https://www.loom.com/share/50271f9d50214d7184830985497a75ec?sid=d0c410dc-29f1-488f-b89a-4011de0ded07)\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Chat Memory\":{\"ai_memory\":[[{\"node\":\"AI Control Tower Agent\",\"type\":\"ai_memory\",\"index\":0}]]},\"Call Query Tool\":{\"ai_tool\":[[{\"node\":\"AI Control Tower Agent\",\"type\":\"ai_tool\",\"index\":0}]]},\"OpenAI Chat Model\":{\"ai_languageModel\":[[{\"node\":\"AI Control Tower Agent\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Chat with the User\":{\"main\":[[{\"node\":\"AI Control Tower Agent\",\"type\":\"main\",\"index\":0}]]},\"Sanitising the Query\":{\"main\":[[{\"node\":\"Query Database\",\"type\":\"main\",\"index\":0}]]},\"Trigger Executed by the AI Tool\":{\"main\":[[{\"node\":\"Sanitising the Query\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "_Tags: Supply Chain, Logistics, Control Tower_\n\n### Context\n\nHey! I‚Äôm Samir, a Supply Chain Engineer and Data Scientist from Paris, and the founder of [LogiGreen Consulting](https://logi-green.com).\n\nWe design tools to help companies improve their **logistics processes** using data analytics, AI, and automation‚Äîto **reduce costs and minimize environmental impact**.\n\n> Let‚Äôs use N8N to build smarter and more sustainable supply chains!\n\nüì¨ For business inquiries, you can add me on [LinkedIn](https://www.linkedin.com/in/samir-saci)\n\n### Who is this template for?\n\nThis workflow template is designed for **logistics operations** that need a monitoring solution for their **distribution chains**.\n\n![Supply Chain Control Tower](https://miro.medium.com/v2/resize:fit:1050/1*0qKAg2B2ZpC-HH0TXmRewA.png)\n\nConnected to your Transportation Management Systems, this AI agent can answer any question about the shipments handled by your distribution teams.\n\n### How does it work?\n\nThe workflow is connected to a **Google BigQuery** table that stores **outbound order data** (customer deliveries).\n\n![BigQuery Table](https://www.samirsaci.com/content/images/size/w1000/2025/03/image-14.png)\n\nHere‚Äôs what the AI agent does:\n\n  1. ü§î Receives a user question via chat.\n  2. üß† Understands the request and **generates the correct SQL query**.\n  3. ‚úÖ Executes the SQL query using a **BigQuery** node.\n  4. üí¨ Responds to the user in **plain English**.\n\n\n\n![Example of Interactions](https://www.samirsaci.com/content/images/size/w1000/2025/03/Chat-Screen.png)\n\nThanks to the chat memory, users can ask follow-up questions to dive deeper into the data.\n\n### What do I need to get started?\n\nThis workflow requires **no advanced programming skills**.\n\nYou‚Äôll need:\n\n  * A **Google BigQuery account** with an SQL table storing transactional records.\n  * An **OpenAI API key** (GPT-4o) for the chat model.\n\n\n\n### Next Steps\n\nFollow the sticky notes in the workflow to configure each node and start using **AI to support your supply chain operations**.\n\n![Tutorial Screenshot](https://www.samirsaci.com/content/images/2025/04/image.png)  \n[üé• Watch My Tutorial](https://www.loom.com/share/50271f9d50214d7184830985497a75ec?sid=d0c410dc-29f1-488f-b89a-4011de0ded07)\n\nüöÄ Curious how N8N can transform your logistics operations?\n\n### Notes\n\n  * The chat trigger can easily be replaced with **Teams** , **Telegram** , or **Slack** for a better user experience.\n  * You can also connect this to a customer chat window using a **webhook**.\n\n\n\n_This workflow was built using N8N version 1.82.1_  \n_Submitted: March 24, 2025_\n",
  "crawled_at": "2025-05-26T04:11:01.555884",
  "readme_zh": "_Ê†áÁ≠æÔºö‰æõÂ∫îÈìæ„ÄÅÁâ©ÊµÅ„ÄÅÊéßÂà∂Â°î_\n\n### ËÉåÊôØ‰ªãÁªç  \nÂ§ßÂÆ∂Â•ΩÔºÅÊàëÊòØSamirÔºå‰∏ÄÂêçÊù•Ëá™Â∑¥ÈªéÁöÑ‰æõÂ∫îÈìæÂ∑•Á®ãÂ∏àÂÖºÊï∞ÊçÆÁßëÂ≠¶ÂÆ∂Ôºå‰πüÊòØ[LogiGreenÂí®ËØ¢ÂÖ¨Âè∏](https://logi-green.com)ÁöÑÂàõÂßã‰∫∫„ÄÇ  \n\nÊàë‰ª¨Ëá¥Âäõ‰∫éÈÄöËøáÊï∞ÊçÆÂàÜÊûê„ÄÅ‰∫∫Â∑•Êô∫ËÉΩÂíåËá™Âä®ÂåñÊäÄÊúØÔºå‰∏∫‰ºÅ‰∏öËÆæËÆ°‰ºòÂåñ**Áâ©ÊµÅÊµÅÁ®ã**ÁöÑÂ∑•ÂÖ∑Ôºå‰ªéËÄåÂÆûÁé∞**ÈôçÊú¨Â¢ûÊïà**‰∏é**ÂáèÂ∞ëÁéØÂ¢ÉË∂≥Ëøπ**„ÄÇ  \n\n> ËÆ©Êàë‰ª¨Áî®N8NÊûÑÂª∫Êõ¥Êô∫ËÉΩ„ÄÅÊõ¥ÂèØÊåÅÁª≠ÁöÑ‰æõÂ∫îÈìæÔºÅ  \n\nüì¨ ÂïÜÂä°Âêà‰ΩúËØ∑ÈÄöËøá[LinkedIn](https://www.linkedin.com/in/samir-saci)ËÅîÁ≥ªÊàë  \n\n### ÈÄÇÁî®ÂØπË±°  \nÊú¨Â∑•‰ΩúÊµÅÊ®°Êùø‰∏ì‰∏∫ÈúÄË¶ÅÁõëÊéß**ÂàÜÈîÄÈìæË∑Ø**ÁöÑ**Áâ©ÊµÅËøêËê•Âõ¢Èòü**ËÆæËÆ°„ÄÇ  \n\n![‰æõÂ∫îÈìæÊéßÂà∂Â°î](https://miro.medium.com/v2/resize:fit:1050/1*0qKAg2B2ZpC-HH0TXmRewA.png)  \n\nËØ•AIÂä©ÊâãÂèØËøûÊé•ÊÇ®ÁöÑËøêËæìÁÆ°ÁêÜÁ≥ªÁªüÔºåÂÆûÊó∂Ëß£Á≠îÂÖ≥‰∫éÈÖçÈÄÅÂõ¢ÈòüÁªèÊâãË¥ß‰ª∂ÁöÑ‰ªª‰ΩïÈóÆÈ¢ò„ÄÇ  \n\n### Ëøê‰ΩúÂéüÁêÜ  \nÂ∑•‰ΩúÊµÅÂØπÊé•ÁöÑ**Google BigQuery**Êï∞ÊçÆË°®‰∏≠Â≠òÂÇ®ÁùÄ**Âá∫Â∫ìËÆ¢ÂçïÊï∞ÊçÆ**ÔºàÂÆ¢Êà∑‰∫§‰ªòËÆ∞ÂΩïÔºâ„ÄÇ  \n\n![BigQueryÊï∞ÊçÆË°®](https://www.samirsaci.com/content/images/size/w1000/2025/03/image-14.png)  \n\nAIÂä©ÊâãÁöÑÂ∑•‰ΩúÊµÅÁ®ãÔºö  \n1. ü§î ÈÄöËøáËÅäÂ§©ÁïåÈù¢Êé•Êî∂Áî®Êà∑ÊèêÈóÆ  \n2. üß† Ëß£ÊûêÈóÆÈ¢òÂπ∂**Ëá™Âä®ÁîüÊàêÁ≤æÂáÜSQLÊü•ËØ¢ËØ≠Âè•**  \n3. ‚úÖ ÈÄöËøá**BigQueryËäÇÁÇπ**ÊâßË°åÊü•ËØ¢  \n4. üí¨ Áî®**Ëá™ÁÑ∂ËØ≠Ë®Ä**ÂêëÁî®Êà∑ÂèçÈ¶àÁªìÊûú  \n\n![‰∫§‰∫íÁ§∫‰æã](https://www.samirsaci.com/content/images/size/w1000/2025/03/Chat-Screen.png)  \n\nÂæóÁõä‰∫éÂØπËØùËÆ∞ÂøÜÂäüËÉΩÔºåÁî®Êà∑ÂèØÊåÅÁª≠ËøΩÈóÆ‰ª•Ê∑±ÂÖ•ÊåñÊéòÊï∞ÊçÆ„ÄÇ  \n\n### ÂáÜÂ§áÂ∑•‰Ωú  \nÊó†ÈúÄ‰∏ì‰∏öÁºñÁ®ãÂü∫Á°ÄÔºåÊÇ®Âè™ÈúÄÔºö  \n* Êã•ÊúâÂ≠òÂÇ®‰∏öÂä°ËÆ∞ÂΩïÁöÑ**Google BigQueryË¥¶Êà∑**  \n* ÈÖçÂ§á**OpenAI APIÂØÜÈí•**ÔºàGPT-4oÊ®°ÂûãÔºâ  \n\n### ‰∏ã‰∏ÄÊ≠•  \nÊåâÁÖßÂ∑•‰ΩúÊµÅ‰∏≠ÁöÑ‰æøÁ≠æÊèêÁ§∫ÈÖçÁΩÆÂêÑËäÇÁÇπÔºåÂç≥ÂèØÂºÄÂêØ**AIËµãËÉΩ‰æõÂ∫îÈìæ**ÁöÑÊóÖÁ®ã„ÄÇ  \n\n![ÊïôÁ®ãÊà™Âõæ](https://www.samirsaci.com/content/images/2025/04/image.png)  \n[üé• ËßÇÁúãËßÜÈ¢ëÊïôÁ®ã](https://www.loom.com/share/50271f9d50214d7184830985497a75ec?sid=d0c410dc-29f1-488f-b89a-4011de0ded07)  \n\nüöÄ ÊÉ≥‰∫ÜËß£N8NÂ¶Ç‰ΩïÈù©Êñ∞ÊÇ®ÁöÑÁâ©ÊµÅËøêËê•Ôºü  \n\n### Ë°•ÂÖÖËØ¥Êòé  \n* ËÅäÂ§©Ëß¶ÂèëÂô®ÂèØÊõøÊç¢‰∏∫**Teams**„ÄÅ**Telegram**Êàñ**Slack**‰ª•ÊèêÂçá‰ΩìÈ™å  \n* ‰πüÂèØÈÄöËøá**webhook**ÂØπÊé•ÂÆ¢Êà∑ËÅäÂ§©Á™óÂè£  \n\n_Êú¨Â∑•‰ΩúÊµÅÂü∫‰∫éN8N 1.82.1ÁâàÊú¨ÊûÑÂª∫_  \n_Êèê‰∫§Êó•ÊúüÔºö2025Âπ¥3Êúà24Êó•_",
  "title_zh": "üóº Âü∫‰∫éBigQuery‰∏éGPT-4oÁöÑAIÈ©±Âä®‰æõÂ∫îÈìæÊéßÂà∂Â°î",
  "publish_date_zh": "‰∏äÊ¨°Êõ¥Êñ∞‰∫é14Â§©Ââç",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"6a5e68bcca67c4cdb3e0b698d01739aea084e1ec06e551db64aeff43d174cb23\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"53b36910-966f-45ba-a425-a3260a55059f\",\n      \"name\": \"OpenAI Chat Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmChatOpenAi\",\n      \"position\": [\n        340,\n        480\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-4o-mini\"\n        },\n        \"options\": {}\n      },\n      \"typeVersion\": 1.2\n    },\n    {\n      \"id\": \"177235e8-c925-43d0-9695-10f072e26350\",\n      \"name\": \"AI Control Tower Agent\",\n      \"type\": \"@n8n/n8n-nodes-langchain.agent\",\n      \"position\": [\n        380,\n        240\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"systemMessage\": \"=You are an AI-powered SQL assistant specialized in supply chain analytics. \\nYour role is to execute SQL queries on BigQuery and return only the results in a structured format.\\n\\nToday we are May 31, 2021.\\n\\n### **Behavior & Rules**\\n1Ô∏è‚É£ **Query Execution:**\\n   - Your only task is to process user requests and return **direct results** from BigQuery.\\n   - Do **not** display the SQL query.\\n   - Only return structured **data** as output.\\n\\n2Ô∏è‚É£ **Data Presentation:**\\n   - Format the results as a **table** whenever possible.\\n   - If results are numerical (counts, percentages, aggregates), return them **clearly and concisely**.\\n   - If results contain multiple rows, return **only the first 10** for preview, unless the user specifies otherwise.\\n\\n3Ô∏è‚É£ **Handling Large Datasets:**\\n   - If the user asks for many rows, show the first **100 rows max** unless specified.\\n   - Provide a **summary** when dealing with large data instead of showing everything.\\n\\n4Ô∏è‚É£ **Response Format:**\\n   - ‚úÖ **For counts & metrics:**  \\n     `\\\"There were 5,432 delayed shipments in the last 21 days.\\\"`\\n   - ‚úÖ **For tables:**  \\n     | ShipmentID | City  | Store  | Order Date | Delivery Date | On Time? |\\n     |-----------|-------|--------|------------|--------------|----------|\\n     | 12345     | NYC   | ST1    | 2024-03-10 | 2024-03-15   | No       |\\n     | 67890     | Paris | ST4    | 2024-03-11 | 2024-03-16   | Yes      |\\n\\n5Ô∏è‚É£ **Clarifying Unclear Requests:**\\n   - If the user request is **too broad**, ask for clarification instead of running an expensive query.\\n\\n---\\n\\n### Schema Awareness\\nAll SQL queries must use the BigQuery table:  \\n`transport.shipments`  \\n\\nThis table includes fields such as:\\n- `Shipment ID`, `City`, `Store`, `Order Date`, `Delivery Date`, `On Time Delivery`\\n- As well as operational timestamps: `Transmission`, `Loading`, `Airport Arrival`, etc.\\n- And status flags: `Transmission OnTime`, `Loading OnTime`, `Airport OnTime`, `Store Open`\\n\\nUse these fields appropriately when analyzing shipment performance.\\n\\n---\\n\\n### Tool Usage Instruction (for \\\"bigquery_tool\\\")\\n\\nWhenever you need to run a SQL query, use the tool called `bigquery_tool`.\\n\\nYou must provide the query in the following format:\\n```json\\n{\\n  \\\"query\\\": \\\"SELECT COUNT(*) FROM `transport.shipments` WHERE `On Time Delivery` = FALSE\\\"\\n}\\n\"\n        }\n      },\n      \"typeVersion\": 1.8\n    },\n    {\n      \"id\": \"5366cc5f-85d3-44d2-9b1b-62febfcb44e3\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        -100,\n        -120\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 200,\n        \"height\": 520,\n        \"content\": \"### 1. ËÅäÂ§©Ëß¶ÂèëÂ∑•‰ΩúÊµÅ  \\nËØ•Â∑•‰ΩúÊµÅÈÄöËøáÁÆÄÊòìËÅäÂ§©Á™óÂè£Ëß¶ÂèëÔºåÊÇ®ÂèØÂ∞ÜÂÖ∂ÊõøÊç¢‰∏∫Telegram„ÄÅSlack„ÄÅTeamsÊàñ‰∏éËÅäÂ§©ÂäüËÉΩÂÖ≥ËÅîÁöÑWebhookËß¶ÂèëÂô®„ÄÇ  \\n\\n#### Â¶Ç‰ΩïËÆæÁΩÆÔºü  \\n*Êó†ÈúÄÊìç‰Ωú„ÄÇ*\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"4218a062-12f8-437d-ab22-5a653a3089b2\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        140,\n        -120\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 700,\n        \"height\": 740,\n        \"content\": \"### 2. ÈÖçÂ§áÊü•ËØ¢Â∑•ÂÖ∑ÁöÑAIÊô∫ËÉΩ‰Ωì  \\n‰∏∫‰∫ÜÊõ¥Á≤æÂáÜÂú∞ÊéßÂà∂BigQueryËäÇÁÇπÁöÑËæìÂÖ•ÔºåÊàë‰ª¨Âπ∂Êú™Áõ¥Êé•‰ΩøÁî®BigQueryÂ∑•ÂÖ∑ÔºåËÄåÊòØÈÄöËøá‰∏ÄÁªÑËäÇÁÇπÊù•Ëé∑ÂèñSQLÊü•ËØ¢ËØ≠Âè•„ÄÅËøõË°åÊ∏ÖÁêÜÂêéÂèëÈÄÅËá≥BigQueryËäÇÁÇπ„ÄÇ  \\n\\n#### Â¶Ç‰ΩïËÆæÁΩÆÔºü  \\n- **ÈÖçÁΩÆÊê≠ËΩΩËÅäÂ§©Ê®°ÂûãÁöÑAIÊô∫ËÉΩ‰Ωì**Ôºö  \\n  1. Ê∑ªÂä†ÂÖ∑Â§áÊâÄÈúÄÂá≠ËØÅÁöÑ**ËÅäÂ§©Ê®°Âûã**Ôºà‰æãÂ¶ÇÔºöOpenAI 4o-miniÔºâ  \\n  2. Âú®Á≥ªÁªüÊèêÁ§∫‰∏≠‰øÆÊîπ**BigQueryË°®ÂêçÁß∞**Ôºà‰æãÂ¶ÇÔºötransports.shipmentsÔºâ  \\n  3. Âú®Á≥ªÁªüÊèêÁ§∫‰∏≠Ë∞ÉÊï¥**Ë°®Â≠óÊÆµËØ¥Êòé**  \\n  [ËØ¶ÁªÜ‰∫ÜËß£AIÊô∫ËÉΩ‰ΩìËäÇÁÇπ](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent)  \\n- Â∞Ü**ÈªÑËâ≤‰æøÁ≠æÂÜÖÁöÑËäÇÁÇπ**Â§çÂà∂Âà∞Âè¶‰∏ÄÂ∑•‰ΩúÊµÅ‰∏≠ÔºåÂπ∂Â∞ÜÊü•ËØ¢Â∑•ÂÖ∑ÊåáÂêëËØ•Â∑•‰ΩúÊµÅ„ÄÇ  \\n  [‰∫ÜËß£Ëá™ÂÆö‰πân8nÂ∑•‰ΩúÊµÅÂ∑•ÂÖ∑ËäÇÁÇπ](https://docs.n8n.io/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolworkflow)  \\n\\nÔºàÊ≥®ÔºöË∞ÉÊï¥‰∫ÜÊäÄÊúØÊúØËØ≠ÁöÑËØëÊ≥ïÂ¶Ç\\\"BigQueryËäÇÁÇπ/Â∑•ÂÖ∑\\\"‰øùÊåÅÂéüÂêçÔºå\\\"system prompt\\\"ËØë‰∏∫\\\"Á≥ªÁªüÊèêÁ§∫\\\"Ôºõ‰ºòÂåñ‰∫ÜÈïøÂè•ÂàÜÊãÜÔºåÂ¶ÇÂ∞ÜÂéüÊñá‰∏â‰∏™Ê≠•È™§Áî®Êï∞Â≠óÂàóË°®Ê∏ÖÊô∞ÂëàÁé∞Ôºõ‰øÆÂ§ç‰∫ÜÂéüÊñáÈìæÊé•‰∏≠ÁöÑÊãºÂÜôÈîôËØØ\\\"builin\\\"Êîπ‰∏∫Ê≠£Á°ÆÊãºÂÜôÔºõ‰øùÊåÅ‰∫ÜmarkdownÊ†ºÂºèÂèäË∂ÖÈìæÊé•ÂäüËÉΩÔºâ\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"c5967f58-00e8-4f03-9110-913547f7ab9c\",\n      \"name\": \"Call Query Tool\",\n      \"type\": \"@n8n/n8n-nodes-langchain.toolWorkflow\",\n      \"position\": [\n        640,\n        440\n      ],\n      \"parameters\": {\n        \"name\": \"bigquery_tool\",\n        \"workflowId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"4Os7DoxHjFuTwWio\",\n          \"cachedResultName\": \"üî® Big Query Tool\"\n        },\n        \"description\": \"=Use this tool to run an SQL query and fetch the result from the BigQuery database.\\n\\nThe tool expects input in the following format:\\n{\\n  \\\"query\\\": \\\"SELECT COUNT(*) FROM `transport.shipments` WHERE `On Time Delivery` = FALSE\\\"\\n}\\n\\nOnly provide the SQL query as a string inside the 'query' key. Do not include code formatting (like ```sql), comments, or explanations. The tool will return only the raw result from the database.\\n\",\n        \"workflowInputs\": {\n          \"value\": {\n            \"query\": \"={{ $fromAI(\\\"query\\\", \\\"SQL query to run\\\") }}\"\n          },\n          \"schema\": [\n            {\n              \"id\": \"query\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"query\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"defineBelow\",\n          \"matchingColumns\": [\n            \"query\"\n          ],\n          \"attemptToConvertTypes\": false,\n          \"convertFieldsToString\": false\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"429813c8-b07f-4551-aeea-1744a1225449\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        900,\n        -120\n      ],\n      \"parameters\": {\n        \"width\": 760,\n        \"height\": 460,\n        \"content\": \"### 3. Big QueryÂ∑•‰ΩúÊµÅÁ®ã  \\nÂú®Big Query‰∏≠ÊâßË°åÁî±AI‰ª£ÁêÜÁîüÊàêÁöÑSQLÊü•ËØ¢„ÄÇËé∑ÂèñÁªìÊûúÂπ∂Â∞ÜÂÖ∂ËøîÂõûÁªôAI‰ª£ÁêÜ„ÄÇ  \\n\\n### Â¶Ç‰ΩïËÆæÁΩÆÔºü  \\n- Â∞ÜËøô‰∫õËäÇÁÇπÁ≤òË¥¥Âà∞‰∏Ä‰∏™Áã¨Á´ãÁöÑÂ∑•‰ΩúÊµÅ‰∏≠Ôºå‰ª•‰æø‰∏éÂ§ö‰∏™‰ª£ÁêÜÂÖ±Áî®„ÄÇ  \\n- **Google BigQuery API**Ôºö  \\n  1. Ê∑ªÂä†ÊÇ®ÁöÑGoogle Translate APIÂá≠ËØÅ  \\n  2. ÊåáÂÆöÂåÖÂê´ÁõÆÊ†áË°®ÁöÑÈ°πÁõÆ  \\n  [‰∫ÜËß£Êõ¥Â§öÂÖ≥‰∫éGoogle BigQueryËäÇÁÇπÁöÑ‰ø°ÊÅØ](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.googlebigquery)\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"bede0624-8923-4af0-8adc-8be22d556066\",\n      \"name\": \"Query Database\",\n      \"type\": \"n8n-nodes-base.googleBigQuery\",\n      \"position\": [\n        1520,\n        180\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"sqlQuery\": \"={{ $json.query }}\",\n        \"projectId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"=\",\n          \"cachedResultUrl\": \"=\",\n          \"cachedResultName\": \"=\"\n        }\n      },\n      \"notesInFlow\": true,\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"137e4dbc-db8d-4ec7-a3e0-478dde6ef27c\",\n      \"name\": \"Trigger Executed by the AI Tool\",\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"position\": [\n        960,\n        180\n      ],\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"query\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"42a2801e-582e-4340-83af-ef0041eab4f9\",\n      \"name\": \"Sanitising the Query\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"position\": [\n        1240,\n        180\n      ],\n      \"parameters\": {\n        \"jsCode\": \"return [\\n  {\\n    json: {\\n      query: $input.first().json.query.replace(/```sql|```/g, \\\"\\\").trim()\\n    }\\n  }\\n];\\n\"\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"7c86fda0-116c-47ad-aaf5-8b83d2c083c6\",\n      \"name\": \"Chat Memory\",\n      \"type\": \"@n8n/n8n-nodes-langchain.memoryBufferWindow\",\n      \"position\": [\n        480,\n        480\n      ],\n      \"parameters\": {},\n      \"typeVersion\": 1.3\n    },\n    {\n      \"id\": \"e1408ac1-24da-4d38-8fdf-c110a54d3f55\",\n      \"name\": \"Chat with the User\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chatTrigger\",\n      \"position\": [\n        -60,\n        240\n      ],\n      \"webhookId\": \"ee7c418b-d7d6-41f9-8e87-0f71b8ae1cf9\",\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"bc49829b-45f2-4910-9c37-907271982f14\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        900,\n        380\n      ],\n      \"parameters\": {\n        \"width\": 780,\n        \"height\": 540,\n        \"content\": \"### 4. ÈúÄË¶ÅÊõ¥ËØ¶ÁªÜÁöÑËØ¥ÊòéÂêóÔºü\\nÊú¨ÊïôÁ®ãÊèê‰æõÂàÜÊ≠•ÊåáÂçó\\n![ÊåáÂçó](https://www.samirsaci.com/content/images/2025/04/image.png)\\n[üé• ËßÇÁúãÊàëÁöÑÊïôÁ®ã](https://www.loom.com/share/50271f9d50214d7184830985497a75ec?sid=d0c410dc-29f1-488f-b89a-4011de0ded07)\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Chat Memory\": {\n      \"ai_memory\": [\n        [\n          {\n            \"node\": \"AI Control Tower Agent\",\n            \"type\": \"ai_memory\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Call Query Tool\": {\n      \"ai_tool\": [\n        [\n          {\n            \"node\": \"AI Control Tower Agent\",\n            \"type\": \"ai_tool\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Chat Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"AI Control Tower Agent\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Chat with the User\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI Control Tower Agent\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Sanitising the Query\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Query Database\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Trigger Executed by the AI Tool\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Sanitising the Query\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}