{
  "url": "https://n8n.io/workflows/2290-store-notions-pages-as-vector-documents-into-supabase-with-openai/",
  "title": "Store Notion's Pages as Vector Documents into Supabase with OpenAI",
  "author": "Dataki",
  "publish_date": "Last update 8 months ago",
  "publish_date_absolute": "2024-09-25",
  "categories": [
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"id\":\"DvP6IHWymTIVg8Up\",\"meta\":{\"instanceId\":\"b9faf72fe0d7c3be94b3ebff0778790b50b135c336412d28fd4fca2cbbf8d1f5\",\"templateCredsSetupCompleted\":true},\"name\":\"Store Notion's Pages as Vector Documents into Supabase with OpenAI\",\"tags\":[],\"nodes\":[{\"id\":\"495609cd-4ca0-426d-8413-69e771398188\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[480,400],\"parameters\":{\"width\":637.1327972412109,\"height\":1113.7434387207031,\"content\":\"## Store Notion's Pages as Vector Documents into Supabase\\n\\n**This workflow assumes you have a Supabase project with a table that has a vector column. If you don't have it, follow the instructions here:** [Supabase Vector Columns Guide](https://supabase.com/docs/guides/ai/vector-columns)\\n\\n## Workflow Description\\n\\nThis workflow automates the process of storing Notion pages as vector documents in a Supabase database with a vector column. The steps are as follows:\\n\\n1. **Notion Page Added Trigger**:\\n   - Monitors a specified Notion database for newly added pages. You can create a specific Notion database where you copy the pages you want to store in Supabase.\\n   - Node: `Page Added in Notion Database`\\n\\n2. **Retrieve Page Content**:\\n   - Fetches all block content from the newly added Notion page.\\n   - Node: `Get Blocks Content`\\n\\n3. **Filter Non-Text Content**:\\n   - Excludes blocks of type \\\"image\\\" and \\\"video\\\" to focus on textual content.\\n   - Node: `Filter - Exclude Media Content`\\n\\n4. **Summarize Content**:\\n   - Concatenates the Notion blocks content to create a single text for embedding.\\n   - Node: `Summarize - Concatenate Notion's blocks content`\\n\\n5. **Store in Supabase**:\\n   - Stores the processed documents and their embeddings into a Supabase table with a vector column.\\n   - Node: `Store Documents in Supabase`\\n\\n6. **Generate Embeddings**:\\n   - Utilizes OpenAI's API to generate embeddings for the textual content.\\n   - Node: `Generate Text Embeddings`\\n\\n\\n7. **Create Metadata and Load Content**:\\n   - Loads the block content and creates associated metadata, such as page ID and block ID.\\n   - Node: `Load Block Content & Create Metadata`\\n\\n8. **Split Content into Chunks**:\\n   - Divides the text into smaller chunks for easier processing and embedding generation.\\n   - Node: `Token Splitter`\\n\\n\\n\\n\"},\"typeVersion\":1},{\"id\":\"3f3e65dc-2b26-407c-87e5-52ba3b315fed\",\"name\":\"Embeddings OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\"position\":[2200,760],\"parameters\":{\"options\":{}},\"typeVersion\":1},{\"id\":\"6d2579b8-376f-44c3-82e8-9dc608efd98b\",\"name\":\"Token Splitter\",\"type\":\"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter\",\"position\":[2340,960],\"parameters\":{\"chunkSize\":256,\"chunkOverlap\":30},\"typeVersion\":1},{\"id\":\"79b3c147-08ca-4db4-9116-958a868cbfd9\",\"name\":\"Notion - Page Added Trigger\",\"type\":\"n8n-nodes-base.notionTrigger\",\"position\":[1180,520],\"parameters\":{\"simple\":false,\"pollTimes\":{\"item\":[{\"mode\":\"everyMinute\"}]},\"databaseId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\",\"cachedResultUrl\":\"\",\"cachedResultName\":\"\"}},\"typeVersion\":1},{\"id\":\"e4a6f524-e3f5-4d02-949a-8523f2d21965\",\"name\":\"Notion - Retrieve Page Content\",\"type\":\"n8n-nodes-base.notion\",\"position\":[1400,520],\"parameters\":{\"blockId\":{\"__rl\":true,\"mode\":\"url\",\"value\":\"={{ $json.url }}\"},\"resource\":\"block\",\"operation\":\"getAll\",\"returnAll\":true},\"typeVersion\":2.2},{\"id\":\"bfebc173-8d4b-4f8f-a625-4622949dd545\",\"name\":\"Filter Non-Text Content\",\"type\":\"n8n-nodes-base.filter\",\"position\":[1620,520],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"e5b605e5-6d05-4bca-8f19-a859e474620f\",\"operator\":{\"type\":\"string\",\"operation\":\"notEquals\"},\"leftValue\":\"={{ $json.type }}\",\"rightValue\":\"image\"},{\"id\":\"c7415859-5ffd-4c78-b497-91a3d6303b6f\",\"operator\":{\"type\":\"string\",\"operation\":\"notEquals\"},\"leftValue\":\"={{ $json.type }}\",\"rightValue\":\"video\"}]}},\"typeVersion\":2},{\"id\":\"b04939f9-355a-430b-a069-b11800066313\",\"name\":\"Summarize - Concatenate Notion's blocks content\",\"type\":\"n8n-nodes-base.summarize\",\"position\":[1920,520],\"parameters\":{\"options\":{\"outputFormat\":\"separateItems\"},\"fieldsToSummarize\":{\"values\":[{\"field\":\"content\",\"separateBy\":\"\\n\",\"aggregation\":\"concatenate\"}]}},\"typeVersion\":1},{\"id\":\"0e64dbb5-20c1-4b90-b818-a1726aaf5112\",\"name\":\"Create metadata and load content\",\"type\":\"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\"position\":[2320,760],\"parameters\":{\"options\":{\"metadata\":{\"metadataValues\":[{\"name\":\"pageId\",\"value\":\"={{ $('Notion - Page Added Trigger').item.json.id }}\"},{\"name\":\"createdTime\",\"value\":\"={{ $('Notion - Page Added Trigger').item.json.created_time }}\"},{\"name\":\"pageTitle\",\"value\":\"={{ $('Notion - Page Added Trigger').item.json.properties.Page.title[0].text.content }}\"}]}},\"jsonData\":\"={{ $('Summarize - Concatenate Notion's blocks content').item.json.concatenated_content }}\",\"jsonMode\":\"expressionData\"},\"typeVersion\":1},{\"id\":\"187aba6f-eaed-4427-8d40-b9da025fb37d\",\"name\":\"Supabase Vector Store\",\"type\":\"@n8n/n8n-nodes-langchain.vectorStoreSupabase\",\"position\":[2200,520],\"parameters\":{\"mode\":\"insert\",\"options\":{},\"tableName\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"\",\"cachedResultName\":\"\"}},\"typeVersion\":1}],\"active\":false,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"77f6b6f7-d699-4a7e-b3e7-fe8a60bde7ba\",\"connections\":{\"Token Splitter\":{\"ai_textSplitter\":[[{\"node\":\"Create metadata and load content\",\"type\":\"ai_textSplitter\",\"index\":0}]]},\"Embeddings OpenAI\":{\"ai_embedding\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"ai_embedding\",\"index\":0}]]},\"Filter Non-Text Content\":{\"main\":[[{\"node\":\"Summarize - Concatenate Notion's blocks content\",\"type\":\"main\",\"index\":0}]]},\"Notion - Page Added Trigger\":{\"main\":[[{\"node\":\"Notion - Retrieve Page Content\",\"type\":\"main\",\"index\":0}]]},\"Notion - Retrieve Page Content\":{\"main\":[[{\"node\":\"Filter Non-Text Content\",\"type\":\"main\",\"index\":0}]]},\"Create metadata and load content\":{\"ai_document\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"ai_document\",\"index\":0}]]},\"Summarize - Concatenate Notion's blocks content\":{\"main\":[[{\"node\":\"Supabase Vector Store\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "_**Workflow updated on 17/06/2024:**  \nAdded 'Summarize' node to avoid creating a row for each Notion content block in the Supabase table._\n\n## Store Notion's Pages as Vector Documents into Supabase\n\n**This workflow assumes you have a Supabase project with a table that has a vector column. If you don't have it, follow the instructions here:** [Supabase Langchain Guide](https://supabase.com/docs/guides/ai/langchain?queryGroups=database-method&database-method=sql)\n\n## Workflow Description\n\nThis workflow automates the process of storing Notion pages as vector documents in a Supabase database with a vector column. The steps are as follows:\n\n  1. **Notion Page Added Trigger** :\n\n     * Monitors a specified Notion database for newly added pages. You can create a specific Notion database where you copy the pages you want to store in Supabase.\n     * Node: `Page Added in Notion Database`\n  2. **Retrieve Page Content** :\n\n     * Fetches all block content from the newly added Notion page.\n     * Node: `Get Blocks Content`\n  3. **Filter Non-Text Content** :\n\n     * Excludes blocks of type \"image\" and \"video\" to focus on textual content.\n     * Node: `Filter - Exclude Media Content`\n  4. **Summarize Content** :\n\n     * Concatenates the Notion blocks content to create a single text for embedding.\n     * Node: `Summarize - Concatenate Notion's blocks content`\n  5. **Store in Supabase** :\n\n     * Stores the processed documents and their embeddings into a Supabase table with a vector column.\n     * Node: `Store Documents in Supabase`\n  6. **Generate Embeddings** :\n\n     * Utilizes OpenAI's API to generate embeddings for the textual content.\n     * Node: `Generate Text Embeddings`\n  7. **Create Metadata and Load Content** :\n\n     * Loads the block content and creates associated metadata, such as page ID and block ID.\n     * Node: `Load Block Content & Create Metadata`\n  8. **Split Content into Chunks** :\n\n     * Divides the text into smaller chunks for easier processing and embedding generation.\n     * Node: `Token Splitter`\n\n\n",
  "crawled_at": "2025-05-25T22:02:06.166750",
  "readme_zh": "_**2024年6月17日更新工作流：**  \n新增“汇总”节点，避免在Supabase表中为每个Notion内容块单独创建行。_\n\n## 将Notion页面存储为向量文档至Supabase\n\n**本工作流假设您已拥有一个包含向量列的Supabase项目表。若尚未创建，请按此指南操作：** [Supabase Langchain指南](https://supabase.com/docs/guides/ai/langchain?queryGroups=database-method&database-method=sql)\n\n## 工作流说明\n\n该工作流自动化实现将Notion页面存储至带向量列的Supabase数据库，具体步骤如下：\n\n1. **Notion页面新增触发器**：\n   * 监控指定Notion数据库中新增的页面。您可创建一个专用数据库，用于存放需同步至Supabase的页面副本。\n   * 节点：`Notion数据库新增页面`\n\n2. **获取页面内容**：\n   * 提取新增Notion页面的所有区块内容。\n   * 节点：`获取区块内容`\n\n3. **过滤非文本内容**：\n   * 排除\"图片\"和\"视频\"类型区块，仅保留文本内容。\n   * 节点：`过滤器 - 排除媒体内容`\n\n4. **内容汇总**：\n   * 拼接Notion区块内容生成单一文本供嵌入使用。\n   * 节点：`汇总 - 拼接Notion区块内容`\n\n5. **存储至Supabase**：\n   * 将处理后的文档及其向量嵌入存储至带向量列的Supabase表。\n   * 节点：`在Supabase存储文档`\n\n6. **生成向量嵌入**：\n   * 调用OpenAI API为文本内容生成向量嵌入。\n   * 节点：`生成文本向量嵌入`\n\n7. **创建元数据并加载内容**：\n   * 加载区块内容并创建关联元数据（如页面ID、区块ID）。\n   * 节点：`加载区块内容并创建元数据`\n\n8. **内容分块处理**：\n   * 将文本分割为更小片段以便于处理和生成嵌入。\n   * 节点：`令牌分割器`",
  "title_zh": "将Notion页面作为向量文档存储至Supabase，利用OpenAI技术",
  "publish_date_zh": "最后更新于7个月前",
  "workflow_json_zh": "{\n  \"id\": \"DvP6IHWymTIVg8Up\",\n  \"meta\": {\n    \"instanceId\": \"b9faf72fe0d7c3be94b3ebff0778790b50b135c336412d28fd4fca2cbbf8d1f5\",\n    \"templateCredsSetupCompleted\": true\n  },\n  \"name\": \"Store Notion's Pages as Vector Documents into Supabase with OpenAI\",\n  \"tags\": [],\n  \"nodes\": [\n    {\n      \"id\": \"495609cd-4ca0-426d-8413-69e771398188\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        480,\n        400\n      ],\n      \"parameters\": {\n        \"width\": 637.1327972412109,\n        \"height\": 1113.7434387207031,\n        \"content\": \"## 将Notion页面存储为向量文档至Supabase\\n\\n**本工作流假设您已拥有包含向量列的Supabase项目。若尚未创建，请参考以下指南：** [Supabase向量列使用说明](https://supabase.com/docs/guides/ai/vector-columns)\\n\\n## 工作流描述\\n\\n该工作流自动化实现将Notion页面存储至带向量列的Supabase数据库，具体步骤如下：\\n\\n1. **Notion页面新增触发器**：\\n   - 监控指定Notion数据库中新添加的页面（可创建专用数据库存放需存储的页面）\\n   - 节点：`Notion数据库新增页面`\\n\\n2. **获取页面内容**：\\n   - 提取新增Notion页面的所有区块内容\\n   - 节点：`获取区块内容`\\n\\n3. **过滤非文本内容**：\\n   - 排除\\\"图片\\\"和\\\"视频\\\"类型区块，专注文本内容处理\\n   - 节点：`过滤器 - 排除媒体内容`\\n\\n4. **内容摘要生成**：\\n   - 拼接Notion区块内容生成待嵌入的完整文本\\n   - 节点：`摘要 - 拼接Notion区块内容`\\n\\n5. **存储至Supabase**：\\n   - 将处理后的文档及其向量嵌入存储至Supabase向量表\\n   - 节点：`存储文档至Supabase`\\n\\n6. **生成向量嵌入**：\\n   - 调用OpenAI API为文本内容生成向量嵌入\\n   - 节点：`生成文本向量`\\n\\n7. **创建元数据并加载内容**：\\n   - 加载区块内容并创建关联元数据（如页面ID、区块ID）\\n   - 节点：`加载区块内容并创建元数据`\\n\\n8. **内容分块处理**：\\n   - 将文本分割为更小片段以便处理和生成嵌入\\n   - 节点：`令牌分割器`\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3f3e65dc-2b26-407c-87e5-52ba3b315fed\",\n      \"name\": \"Embeddings OpenAI\",\n      \"type\": \"@n8n/n8n-nodes-langchain.embeddingsOpenAi\",\n      \"position\": [\n        2200,\n        760\n      ],\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"6d2579b8-376f-44c3-82e8-9dc608efd98b\",\n      \"name\": \"Token Splitter\",\n      \"type\": \"@n8n/n8n-nodes-langchain.textSplitterTokenSplitter\",\n      \"position\": [\n        2340,\n        960\n      ],\n      \"parameters\": {\n        \"chunkSize\": 256,\n        \"chunkOverlap\": 30\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"79b3c147-08ca-4db4-9116-958a868cbfd9\",\n      \"name\": \"Notion - Page Added Trigger\",\n      \"type\": \"n8n-nodes-base.notionTrigger\",\n      \"position\": [\n        1180,\n        520\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyMinute\"\n            }\n          ]\n        },\n        \"databaseId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultUrl\": \"\",\n          \"cachedResultName\": \"\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"e4a6f524-e3f5-4d02-949a-8523f2d21965\",\n      \"name\": \"Notion - Retrieve Page Content\",\n      \"type\": \"n8n-nodes-base.notion\",\n      \"position\": [\n        1400,\n        520\n      ],\n      \"parameters\": {\n        \"blockId\": {\n          \"__rl\": true,\n          \"mode\": \"url\",\n          \"value\": \"={{ $json.url }}\"\n        },\n        \"resource\": \"block\",\n        \"operation\": \"getAll\",\n        \"returnAll\": true\n      },\n      \"typeVersion\": 2.2\n    },\n    {\n      \"id\": \"bfebc173-8d4b-4f8f-a625-4622949dd545\",\n      \"name\": \"Filter Non-Text Content\",\n      \"type\": \"n8n-nodes-base.filter\",\n      \"position\": [\n        1620,\n        520\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"e5b605e5-6d05-4bca-8f19-a859e474620f\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEquals\"\n              },\n              \"leftValue\": \"={{ $json.type }}\",\n              \"rightValue\": \"image\"\n            },\n            {\n              \"id\": \"c7415859-5ffd-4c78-b497-91a3d6303b6f\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"notEquals\"\n              },\n              \"leftValue\": \"={{ $json.type }}\",\n              \"rightValue\": \"video\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"b04939f9-355a-430b-a069-b11800066313\",\n      \"name\": \"Summarize - Concatenate Notion's blocks content\",\n      \"type\": \"n8n-nodes-base.summarize\",\n      \"position\": [\n        1920,\n        520\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"outputFormat\": \"separateItems\"\n        },\n        \"fieldsToSummarize\": {\n          \"values\": [\n            {\n              \"field\": \"content\",\n              \"separateBy\": \"\\n\",\n              \"aggregation\": \"concatenate\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0e64dbb5-20c1-4b90-b818-a1726aaf5112\",\n      \"name\": \"Create metadata and load content\",\n      \"type\": \"@n8n/n8n-nodes-langchain.documentDefaultDataLoader\",\n      \"position\": [\n        2320,\n        760\n      ],\n      \"parameters\": {\n        \"options\": {\n          \"metadata\": {\n            \"metadataValues\": [\n              {\n                \"name\": \"pageId\",\n                \"value\": \"={{ $('Notion - Page Added Trigger').item.json.id }}\"\n              },\n              {\n                \"name\": \"createdTime\",\n                \"value\": \"={{ $('Notion - Page Added Trigger').item.json.created_time }}\"\n              },\n              {\n                \"name\": \"pageTitle\",\n                \"value\": \"={{ $('Notion - Page Added Trigger').item.json.properties.Page.title[0].text.content }}\"\n              }\n            ]\n          }\n        },\n        \"jsonData\": \"={{ $('Summarize - Concatenate Notion's blocks content').item.json.concatenated_content }}\",\n        \"jsonMode\": \"expressionData\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"187aba6f-eaed-4427-8d40-b9da025fb37d\",\n      \"name\": \"Supabase Vector Store\",\n      \"type\": \"@n8n/n8n-nodes-langchain.vectorStoreSupabase\",\n      \"position\": [\n        2200,\n        520\n      ],\n      \"parameters\": {\n        \"mode\": \"insert\",\n        \"options\": {},\n        \"tableName\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"\",\n          \"cachedResultName\": \"\"\n        }\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"active\": false,\n  \"pinData\": {},\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"77f6b6f7-d699-4a7e-b3e7-fe8a60bde7ba\",\n  \"connections\": {\n    \"Token Splitter\": {\n      \"ai_textSplitter\": [\n        [\n          {\n            \"node\": \"Create metadata and load content\",\n            \"type\": \"ai_textSplitter\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Embeddings OpenAI\": {\n      \"ai_embedding\": [\n        [\n          {\n            \"node\": \"Supabase Vector Store\",\n            \"type\": \"ai_embedding\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Filter Non-Text Content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Summarize - Concatenate Notion's blocks content\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notion - Page Added Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Notion - Retrieve Page Content\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Notion - Retrieve Page Content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Filter Non-Text Content\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Create metadata and load content\": {\n      \"ai_document\": [\n        [\n          {\n            \"node\": \"Supabase Vector Store\",\n            \"type\": \"ai_document\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Summarize - Concatenate Notion's blocks content\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Supabase Vector Store\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}