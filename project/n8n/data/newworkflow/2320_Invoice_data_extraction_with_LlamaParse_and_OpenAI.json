{
  "url": "https://n8n.io/workflows/2320-invoice-data-extraction-with-llamaparse-and-openai/",
  "title": "Invoice data extraction with LlamaParse and OpenAI",
  "author": "Jimleuk",
  "publish_date": "Last update 10 months ago",
  "publish_date_absolute": "2024-07-25",
  "categories": [
    {
      "name": "Finance"
    },
    {
      "name": "AI"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"26ba763460b97c249b82942b23b6384876dfeb9327513332e743c5f6219c2b8e\"},\"nodes\":[{\"id\":\"7076854e-c7e8-45b5-9e5e-16678bffa254\",\"name\":\"OpenAI Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmOpenAi\",\"position\":[2420,480],\"parameters\":{\"model\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-3.5-turbo-1106\",\"cachedResultName\":\"gpt-3.5-turbo-1106\"},\"options\":{\"temperature\":0}},\"credentials\":{\"openAiApi\":{\"id\":\"8gccIjcuf3gvaoEr\",\"name\":\"OpenAi account\"}},\"typeVersion\":1},{\"id\":\"00819f1c-2c60-4b7c-b395-445ec05fd898\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[2600,480],\"parameters\":{\"jsonSchema\":\"{\\n  \\\"Invoice date\\\": { \\\"type\\\": \\\"date\\\" },\\n  \\\"invoice number\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Purchase order number\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Supplier name\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Supplier address\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"properties\\\": {\\n      \\\"address 1\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"address 2\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"city\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"postcode\\\": { \\\"type\\\": \\\"string\\\" }\\n    }\\n  },\\n  \\\"Supplier VAT identification number\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Customer name\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Customer address\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"properties\\\": {\\n      \\\"address 1\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"address 2\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"city\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"postcode\\\": { \\\"type\\\": \\\"string\\\" }\\n    }\\n  },\\n  \\\"Customer VAT identification number\\\": { \\\"type\\\": \\\"string\\\" }, \\n  \\\"Shipping addresses\\\": {\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"address 1\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"address 2\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"city\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"postcode\\\": { \\\"type\\\": \\\"string\\\" }\\n      }\\n    }\\n  },\\n  \\\"Line items\\\": {\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"items\\\": {\\n      \\\"name\\\": \\\"string\\\",\\n      \\\"description\\\": \\\"string\\\",\\n      \\\"price\\\": \\\"number\\\",\\n      \\\"discount\\\": \\\"number\\\"\\n    }\\n  },\\n  \\\"Subtotal without VAT\\\": { \\\"type\\\": \\\"number\\\" },\\n  \\\"Subtotal with VAT\\\": { \\\"type\\\": \\\"number\\\" },\\n  \\\"Total price\\\": { \\\"type\\\": \\\"number\\\" }\\n}\"},\"typeVersion\":1.1},{\"id\":\"3b40d506-aabc-4105-853a-a318375cea73\",\"name\":\"Upload to LlamaParse\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1620,420],\"parameters\":{\"url\":\"https://api.cloud.llamaindex.ai/api/parsing/upload\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"contentType\":\"multipart-form-data\",\"sendHeaders\":true,\"authentication\":\"genericCredentialType\",\"bodyParameters\":{\"parameters\":[{\"name\":\"file\",\"parameterType\":\"formBinaryData\",\"inputDataFieldName\":\"=attachment_0\"}]},\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"accept\",\"value\":\"application/json\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"pZ4YmwFIkyGnbUC7\",\"name\":\"LlamaIndex API\"}},\"typeVersion\":4.2},{\"id\":\"57a5d331-8838-4d44-8fac-a44dba35fcc4\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1540,140],\"parameters\":{\"color\":7,\"width\":785.9525375246163,\"height\":623.4951418211454,\"content\":\"## 2. Advanced PDF Processing with LlamaParse\\n[Read more about using HTTP Requests](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/)\\n\\nLlamaIndex's LlamaCloud is a cloud-based service that allows you to upload,\\nparse, and index document. LlamaParse is a tool offered by LlamaCloud\\nto parse for complex PDFs with embedded objects ie PDF Tables and figures.\\n\\nAt time of writing, you can parse 1000 pdfs/day with LlamaCloud's free plan\\nby signing up at [https://cloud.llamaindex.ai/](https://cloud.llamaindex.ai/?ref=n8n.io).\"},\"typeVersion\":1},{\"id\":\"a4504d83-da3b-41bc-891f-f8f9314a6af5\",\"name\":\"Receiving Invoices\",\"type\":\"n8n-nodes-base.gmailTrigger\",\"position\":[780,400],\"parameters\":{\"simple\":false,\"filters\":{\"q\":\"has:attachment\",\"sender\":\"invoices@paypal.com\"},\"options\":{\"downloadAttachments\":true},\"pollTimes\":{\"item\":[{\"mode\":\"everyMinute\"}]}},\"credentials\":{\"gmailOAuth2\":{\"id\":\"Sf5Gfl9NiFTNXFWb\",\"name\":\"Gmail account\"}},\"typeVersion\":1},{\"id\":\"02bd4636-f35b-4a3a-8a5f-9ae7aeed2bf4\",\"name\":\"Append to Reconciliation Sheet\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[2960,320],\"parameters\":{\"columns\":{\"value\":{},\"schema\":[{\"id\":\"Invoice date\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Invoice date\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"invoice number\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"invoice number\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Purchase order number\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Purchase order number\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Supplier name\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Supplier name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Supplier address\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Supplier address\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Supplier VAT identification number\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Supplier VAT identification number\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Customer name\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Customer name\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Customer address\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Customer address\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Customer VAT identification number\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Customer VAT identification number\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Shipping addresses\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Shipping addresses\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Line items\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Line items\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Subtotal without VAT\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Subtotal without VAT\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Subtotal with VAT\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Subtotal with VAT\",\"defaultMatch\":false,\"canBeUsedToMatch\":true},{\"id\":\"Total price\",\"type\":\"string\",\"display\":true,\"removed\":false,\"required\":false,\"displayName\":\"Total price\",\"defaultMatch\":false,\"canBeUsedToMatch\":true}],\"mappingMode\":\"autoMapInputData\",\"matchingColumns\":[\"output\"]},\"options\":{},\"operation\":\"append\",\"sheetName\":{\"__rl\":true,\"mode\":\"id\",\"value\":\"gid=0\"},\"documentId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"1omHDl1jpjHyrtga2ZHBddUkbkdatEr1ga9vHc4fQ1pI\",\"cachedResultUrl\":\"https://docs.google.com/spreadsheets/d/1omHDl1jpjHyrtga2ZHBddUkbkdatEr1ga9vHc4fQ1pI/edit?usp=drivesdk\",\"cachedResultName\":\"Invoice Reconciliation\"}},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"XHvC7jIRR8A2TlUl\",\"name\":\"Google Sheets account\"}},\"typeVersion\":4.3},{\"id\":\"cdb0a7ee-068d-465a-b4ae-d5221d5e7400\",\"name\":\"Get Processing Status\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[1800,420],\"parameters\":{\"url\":\"=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}\",\"options\":{},\"sendHeaders\":true,\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\",\"headerParameters\":{\"parameters\":[{\"name\":\"accept\",\"value\":\"application/json\"}]}},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"pZ4YmwFIkyGnbUC7\",\"name\":\"LlamaIndex API\"}},\"typeVersion\":4.2},{\"id\":\"b68a01ab-d8e6-42f4-ab1d-81e746695eef\",\"name\":\"Wait to stay within service limits\",\"type\":\"n8n-nodes-base.wait\",\"position\":[2120,560],\"webhookId\":\"17a96ed6-b5ff-47bb-a8a2-39c1eb40185a\",\"parameters\":{\"amount\":1},\"typeVersion\":1.1},{\"id\":\"41bd28d2-665a-4f71-a456-98eeb26b6655\",\"name\":\"Is Job Ready?\",\"type\":\"n8n-nodes-base.switch\",\"position\":[1960,420],\"parameters\":{\"rules\":{\"values\":[{\"outputKey\":\"SUCCESS\",\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"300fce8c-b19a-4d0c-86e8-f62853c70ce2\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.status }}\",\"rightValue\":\"SUCCESS\"}]},\"renameOutput\":true},{\"outputKey\":\"ERROR\",\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"e6058aa0-a3e2-4ce3-9bed-6ff41a5be052\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.status }}\",\"rightValue\":\"ERROR\"}]},\"renameOutput\":true},{\"outputKey\":\"CANCELED\",\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"ceb6338f-4261-40ac-be11-91f61c7302ba\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.status }}\",\"rightValue\":\"CANCELED\"}]},\"renameOutput\":true},{\"outputKey\":\"PENDING\",\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"0fa97d86-432a-409a-917e-5f1a002b1ab9\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $json.status }}\",\"rightValue\":\"PENDING\"}]},\"renameOutput\":true}]},\"options\":{\"allMatchingOutputs\":true}},\"typeVersion\":3},{\"id\":\"f7157abe-b1ee-46b3-adb2-1be056d9d75d\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[694.0259411218055,139.97202236910687],\"parameters\":{\"color\":7,\"width\":808.8727491350096,\"height\":709.5781339256318,\"content\":\"## 1. Watch for Invoice Emails\\n[Read more about Gmail Triggers](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)\\n\\nThe Gmail node can watch for all incoming messages and filter based on a condition. We'll set our Gmail node to wait for:\\n* a message from particular email address.\\n* having an attachment which should be the invoice PDF\\n* not having a label \\\"invoice synced\\\", which is what we use to avoid duplicate processing.\"},\"typeVersion\":1},{\"id\":\"ff7cb6e4-5a60-4f12-b15e-74e7a4a302ce\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2360,70.48792658995046],\"parameters\":{\"color\":7,\"width\":805.0578351924228,\"height\":656.5014186128178,\"content\":\"## 3. Use LLMs to Extract Values from Data\\n[Read more about Basic LLM Chain](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\\n\\nLarge language models are perfect for data extraction tasks as they can work across a range of document layouts without human intervention. The extracted data can then be sent to a variety of datastores such as spreadsheets, accounting systems and/or CRMs.\\n\\n**Tip:** The \\\"Structured Output Parser\\\" ensures the AI output can be\\ninserted to our spreadsheet without additional clean up and/or formatting. \"},\"typeVersion\":1},{\"id\":\"0d510631-440b-41f5-b1aa-9b7279e9c8e3\",\"name\":\"Sticky Note3\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1934,774],\"parameters\":{\"color\":5,\"width\":394.15089838126653,\"height\":154.49585536070904,\"content\":\"### 🙋‍♂️ Why not just use the built-in PDF convertor?\\nA common issue with PDF-to-text convertors are that they ignore important data structures like tables. These structures can be important for data extraction. For example, being able to distinguish between seperate line items in an invoice.\"},\"typeVersion\":1},{\"id\":\"fe7fdb90-3c85-4f29-a7d3-16f927f48682\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[3200,157.65172434465347],\"parameters\":{\"color\":7,\"width\":362.3535748101346,\"height\":440.3435768155051,\"content\":\"## 4. Add Label to Avoid Duplication\\n[Read more about working with Gmail](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.gmail/)\\n\\nTo finish off the workflow, we'll add the \\\"invoice synced\\\" label to the original invoice email to flag that the extraction was successful. This can be useful if working with a shared inbox and for quality control purposes later.\"},\"typeVersion\":1},{\"id\":\"1acf2c60-c2b9-4f78-94a4-0711c8bd71ab\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[300,140],\"parameters\":{\"width\":360.0244620907562,\"height\":573.2443601155958,\"content\":\"## Try Me Out!\\n\\n**This workflow does the following:**\\n* Waits for email invoices with PDF attachments.\\n* Uses the LlamaParse service to convert the invoice PDF into a markdown file.\\n* Uses a LLM to extract invoice data from the Markdown file.\\n* Exports the extracted data to a Google Sheet.\\n\\n### Follow along with the blog here\\nhttps://blog.n8n.io/how-to-extract-data-from-pdf-to-excel-spreadsheet-advance-parsing-with-n8n-io-and-llamaparse/\\n\\n### Good to know\\n* You'll need to create the label \\\"invoice synced\\\" in gmail before using this workflow.\\n\\n### Need Help?\\nJoin the [Discord](https://discord.com/invite/XPKeKXeB7d) or ask in the [Forum](https://community.n8n.io/)!\\n\\nHappy Hacking!\"},\"typeVersion\":1},{\"id\":\"3802c538-acf9-48d8-b011-bfe2fb817350\",\"name\":\"Add \\\"invoice synced\\\" Label\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[3320,400],\"parameters\":{\"labelIds\":[\"Label_5511644430826409825\"],\"messageId\":\"={{ $('Receiving Invoices').item.json.id }}\",\"operation\":\"addLabels\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"Sf5Gfl9NiFTNXFWb\",\"name\":\"Gmail account\"}},\"typeVersion\":2.1},{\"id\":\"ffabd8c5-c440-4473-8e44-b849426c70cf\",\"name\":\"Get Parsed Invoice Data\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[2160,280],\"parameters\":{\"url\":\"=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}/result/markdown\",\"options\":{\"redirect\":{\"redirect\":{}}},\"authentication\":\"genericCredentialType\",\"genericAuthType\":\"httpHeaderAuth\"},\"credentials\":{\"httpHeaderAuth\":{\"id\":\"pZ4YmwFIkyGnbUC7\",\"name\":\"LlamaIndex API\"}},\"typeVersion\":4.2},{\"id\":\"5f9b507f-4dc1-4853-bf71-a64f2f4b55c1\",\"name\":\"Map Output\",\"type\":\"n8n-nodes-base.set\",\"position\":[2760,320],\"parameters\":{\"mode\":\"raw\",\"options\":{},\"jsonOutput\":\"={{ $json.output }}\"},\"typeVersion\":3.3},{\"id\":\"d22744cd-151d-4b92-b4f2-4a5b9ceb4ee7\",\"name\":\"Apply Data Extraction Rules\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[2420,320],\"parameters\":{\"text\":\"=Given the following invoice in the <invoice> xml tags, extract the following information as listed below.\\nIf you cannot the information for a specific item, then leave blank and skip to the next. \\n\\n* Invoice date\\n* invoice number\\n* Purchase order number\\n* Supplier name\\n* Supplier address\\n* Supplier VAT identification number\\n* Customer name\\n* Customer address\\n* Customer VAT identification number\\n* Shipping addresses\\n* Line items, including a description of the goods or services rendered\\n* Price with and without VAT\\n* Total price\\n\\n<invoice>{{ $json.markdown }}</invoice>\",\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.4},{\"id\":\"3735a124-9fab-4400-8b94-8b5aa9f951fe\",\"name\":\"Should Process Email?\",\"type\":\"n8n-nodes-base.if\",\"position\":[1340,400],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"strict\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"e5649a2b-6e12-4cc4-8001-4639cc9cc2c2\",\"operator\":{\"name\":\"filter.operator.equals\",\"type\":\"string\",\"operation\":\"equals\"},\"leftValue\":\"={{ $input.item.binary.attachment_0.mimeType }}\",\"rightValue\":\"application/pdf\"},{\"id\":\"4c57ab9b-b11c-455a-a63d-daf48418b06e\",\"operator\":{\"type\":\"array\",\"operation\":\"notContains\",\"rightType\":\"any\"},\"leftValue\":\"={{ $json.labels }}\",\"rightValue\":\"invoice synced\"}]}},\"typeVersion\":2},{\"id\":\"12a23527-39f3-4f72-8691-3d5cf59f9909\",\"name\":\"Split Out Labels\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[980,400],\"parameters\":{\"options\":{},\"fieldToSplitOut\":\"labelIds\"},\"typeVersion\":1},{\"id\":\"88ff6e22-d3d3-403d-b0b2-2674487140a7\",\"name\":\"Get Labels Names\",\"type\":\"n8n-nodes-base.gmail\",\"position\":[980,540],\"parameters\":{\"labelId\":\"={{ $json.labelIds }}\",\"resource\":\"label\",\"operation\":\"get\"},\"credentials\":{\"gmailOAuth2\":{\"id\":\"Sf5Gfl9NiFTNXFWb\",\"name\":\"Gmail account\"}},\"typeVersion\":2.1},{\"id\":\"88accb8e-6531-40be-8d35-1bba594149af\",\"name\":\"Combine Label Names\",\"type\":\"n8n-nodes-base.aggregate\",\"position\":[980,680],\"parameters\":{\"options\":{},\"fieldsToAggregate\":{\"fieldToAggregate\":[{\"renameField\":true,\"outputFieldName\":\"labels\",\"fieldToAggregate\":\"name\"}]}},\"typeVersion\":1},{\"id\":\"d233ff33-cabf-434e-876d-879693ecaf58\",\"name\":\"Email with Label Names\",\"type\":\"n8n-nodes-base.merge\",\"position\":[1160,400],\"parameters\":{\"mode\":\"combine\",\"options\":{},\"combinationMode\":\"multiplex\"},\"typeVersion\":2.1},{\"id\":\"733fc285-e069-4e4e-b13e-dfc1c259ac12\",\"name\":\"Sticky Note6\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2540,460],\"parameters\":{\"width\":192.26896179623753,\"height\":213.73043662572252,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n**Need more attributes?**\\nChange it here!\"},\"typeVersion\":1},{\"id\":\"83aa6ed0-ce3b-48d7-aded-475c337ae86e\",\"name\":\"Sticky Note7\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[2880,300],\"parameters\":{\"width\":258.29345180972877,\"height\":397.0641952938746,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n🚨**Required**\\n* Set Your Google Sheet URL here\\n* Set the Name of your Sheet\\n\\n\\n**Don't use GSheets?**\\nSwap this for Excel, Airtable or a Database!\"},\"typeVersion\":1},{\"id\":\"720070f6-2d6c-45ef-80c2-e950862a002b\",\"name\":\"Sticky Note8\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[740,380],\"parameters\":{\"width\":174.50671517518518,\"height\":274.6295678979021,\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n🚨**Required**\\n* Change the email filters here!\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Map Output\":{\"main\":[[{\"node\":\"Append to Reconciliation Sheet\",\"type\":\"main\",\"index\":0}]]},\"OpenAI Model\":{\"ai_languageModel\":[[{\"node\":\"Apply Data Extraction Rules\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Is Job Ready?\":{\"main\":[[{\"node\":\"Get Parsed Invoice Data\",\"type\":\"main\",\"index\":0}],null,null,[{\"node\":\"Wait to stay within service limits\",\"type\":\"main\",\"index\":0}]]},\"Get Labels Names\":{\"main\":[[{\"node\":\"Combine Label Names\",\"type\":\"main\",\"index\":0}]]},\"Split Out Labels\":{\"main\":[[{\"node\":\"Get Labels Names\",\"type\":\"main\",\"index\":0}]]},\"Receiving Invoices\":{\"main\":[[{\"node\":\"Split Out Labels\",\"type\":\"main\",\"index\":0},{\"node\":\"Email with Label Names\",\"type\":\"main\",\"index\":0}]]},\"Combine Label Names\":{\"main\":[[{\"node\":\"Email with Label Names\",\"type\":\"main\",\"index\":1}]]},\"Upload to LlamaParse\":{\"main\":[[{\"node\":\"Get Processing Status\",\"type\":\"main\",\"index\":0}]]},\"Get Processing Status\":{\"main\":[[{\"node\":\"Is Job Ready?\",\"type\":\"main\",\"index\":0}]]},\"Should Process Email?\":{\"main\":[[{\"node\":\"Upload to LlamaParse\",\"type\":\"main\",\"index\":0}]]},\"Email with Label Names\":{\"main\":[[{\"node\":\"Should Process Email?\",\"type\":\"main\",\"index\":0}]]},\"Get Parsed Invoice Data\":{\"main\":[[{\"node\":\"Apply Data Extraction Rules\",\"type\":\"main\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"Apply Data Extraction Rules\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"Apply Data Extraction Rules\":{\"main\":[[{\"node\":\"Map Output\",\"type\":\"main\",\"index\":0}]]},\"Append to Reconciliation Sheet\":{\"main\":[[{\"node\":\"Add \\\"invoice synced\\\" Label\",\"type\":\"main\",\"index\":0}]]},\"Wait to stay within service limits\":{\"main\":[[{\"node\":\"Get Processing Status\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This n8n workflow automates the process of parsing and extracting data from PDF invoices. With this workflow, accounts and finance people can realise huge time and cost savings in their busy schedules.\n\n**Read the Blog** : <https://blog.n8n.io/how-to-extract-data-from-pdf-to-excel-spreadsheet-advance-parsing-with-n8n-io-and-llamaparse/>\n\n## How it works\n\n  * This workflow will watch an email inbox for incoming invoices from suppliers\n  * It will download the attached PDFs and processing them through a third party service called LlamaParse.\n  * LlamaParse is specifically designed to handle and convert complex PDF data structures such as tables to markdown.\n  * Markdown is easily to process for LLM models and so the data extraction by our AI agent is more accurate and reliable.\n  * The workflow exports the extracted data from the AI agent to Google Sheets once the job complete.\n\n\n\n## Requirements\n\n  * The criteria of the email trigger must be configured to capture emails with attachments.\n  * The gmail label \"invoice synced\" must be created before using this workflow.\n  * A [LlamaIndex.ai](http://LlamaIndex.ai) account to use the LlamaParse service.\n  * An OpenAI account to use GPT for AI work.\n  * Google Sheets to save the output of the data extraction process although this can be replaced for whatever your needs.\n\n\n\n## Customizing this workflow\n\nThis workflow uses Gmail and Google Sheets but these can easily be swapped out for equivalent services such as Outlook and Excel.\n\nNot using Excel? Simple redirect the output of the AI agent to your accounting software of choice.\n",
  "crawled_at": "2025-05-25T23:29:01.342197",
  "readme_zh": "该n8n工作流实现了PDF发票数据解析与提取的自动化处理。通过此工作流，财务人员可在繁忙工作中大幅节省时间与成本。\n\n**博客阅读**：<https://blog.n8n.io/how-to-extract-data-from-pdf-to-excel-spreadsheet-advance-parsing-with-n8n-io-and-llamaparse/>\n\n## 运作原理\n\n  * 实时监控邮箱收取供应商发票邮件\n  * 下载PDF附件并通过LlamaParse第三方服务进行解析\n  * LlamaParse专为处理复杂PDF数据结构（如表格转Markdown）设计\n  * Markdown格式便于大语言模型处理，确保AI代理数据提取精准可靠\n  * 处理完成后将AI提取数据自动导出至Google表格\n\n## 环境要求\n\n  * 需配置邮件触发器条件以捕获带附件邮件\n  * 使用前需创建Gmail标签\"invoice synced\"\n  * 需注册[LlamaIndex.ai](http://LlamaIndex.ai)账号使用LlamaParse服务\n  * 需OpenAI账号调用GPT进行AI处理\n  * 默认使用Google表格存储输出数据（可按需替换其他存储方式）\n\n## 自定义设置\n\n本工作流虽采用Gmail和Google表格，但可轻松替换为Outlook/Excel等同类服务。若无需Excel，只需将AI代理输出重定向至指定财务软件即可。",
  "title_zh": "使用LlamaParse和OpenAI提取发票数据",
  "publish_date_zh": "最后更新于9个月前",
  "workflow_json_zh": "{\n  \"meta\": {\n    \"instanceId\": \"26ba763460b97c249b82942b23b6384876dfeb9327513332e743c5f6219c2b8e\"\n  },\n  \"nodes\": [\n    {\n      \"id\": \"7076854e-c7e8-45b5-9e5e-16678bffa254\",\n      \"name\": \"OpenAI Model\",\n      \"type\": \"@n8n/n8n-nodes-langchain.lmOpenAi\",\n      \"position\": [\n        2420,\n        480\n      ],\n      \"parameters\": {\n        \"model\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"gpt-3.5-turbo-1106\",\n          \"cachedResultName\": \"gpt-3.5-turbo-1106\"\n        },\n        \"options\": {\n          \"temperature\": 0\n        }\n      },\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"8gccIjcuf3gvaoEr\",\n          \"name\": \"OpenAi account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"00819f1c-2c60-4b7c-b395-445ec05fd898\",\n      \"name\": \"Structured Output Parser\",\n      \"type\": \"@n8n/n8n-nodes-langchain.outputParserStructured\",\n      \"position\": [\n        2600,\n        480\n      ],\n      \"parameters\": {\n        \"jsonSchema\": \"{\\n  \\\"Invoice date\\\": { \\\"type\\\": \\\"date\\\" },\\n  \\\"invoice number\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Purchase order number\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Supplier name\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Supplier address\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"properties\\\": {\\n      \\\"address 1\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"address 2\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"city\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"postcode\\\": { \\\"type\\\": \\\"string\\\" }\\n    }\\n  },\\n  \\\"Supplier VAT identification number\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Customer name\\\": { \\\"type\\\": \\\"string\\\" },\\n  \\\"Customer address\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"properties\\\": {\\n      \\\"address 1\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"address 2\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"city\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"postcode\\\": { \\\"type\\\": \\\"string\\\" }\\n    }\\n  },\\n  \\\"Customer VAT identification number\\\": { \\\"type\\\": \\\"string\\\" }, \\n  \\\"Shipping addresses\\\": {\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"items\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"address 1\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"address 2\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"city\\\": { \\\"type\\\": \\\"string\\\" },\\n        \\\"postcode\\\": { \\\"type\\\": \\\"string\\\" }\\n      }\\n    }\\n  },\\n  \\\"Line items\\\": {\\n    \\\"type\\\": \\\"array\\\",\\n    \\\"items\\\": {\\n      \\\"name\\\": \\\"string\\\",\\n      \\\"description\\\": \\\"string\\\",\\n      \\\"price\\\": \\\"number\\\",\\n      \\\"discount\\\": \\\"number\\\"\\n    }\\n  },\\n  \\\"Subtotal without VAT\\\": { \\\"type\\\": \\\"number\\\" },\\n  \\\"Subtotal with VAT\\\": { \\\"type\\\": \\\"number\\\" },\\n  \\\"Total price\\\": { \\\"type\\\": \\\"number\\\" }\\n}\"\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"3b40d506-aabc-4105-853a-a318375cea73\",\n      \"name\": \"Upload to LlamaParse\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1620,\n        420\n      ],\n      \"parameters\": {\n        \"url\": \"https://api.cloud.llamaindex.ai/api/parsing/upload\",\n        \"method\": \"POST\",\n        \"options\": {},\n        \"sendBody\": true,\n        \"contentType\": \"multipart-form-data\",\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"bodyParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"file\",\n              \"parameterType\": \"formBinaryData\",\n              \"inputDataFieldName\": \"=attachment_0\"\n            }\n          ]\n        },\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"pZ4YmwFIkyGnbUC7\",\n          \"name\": \"LlamaIndex API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"57a5d331-8838-4d44-8fac-a44dba35fcc4\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1540,\n        140\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 785.9525375246163,\n        \"height\": 623.4951418211454,\n        \"content\": \"## 2. 使用LlamaParse进行高级PDF处理\\n[了解更多关于HTTP请求的使用](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/)\\n\\nLlamaIndex旗下的LlamaCloud是一项基于云的服务，支持用户上传、解析并建立文档索引。LlamaParse作为LlamaCloud提供的工具，专为解析含有嵌入对象（如PDF表格和图表）的复杂PDF文件而设计。\\n\\n截至本文撰写时，用户注册[https://cloud.llamaindex.ai/](https://cloud.llamaindex.ai/?ref=n8n.io)即可享受LlamaCloud免费计划，每日可解析1000份PDF文件。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"a4504d83-da3b-41bc-891f-f8f9314a6af5\",\n      \"name\": \"Receiving Invoices\",\n      \"type\": \"n8n-nodes-base.gmailTrigger\",\n      \"position\": [\n        780,\n        400\n      ],\n      \"parameters\": {\n        \"simple\": false,\n        \"filters\": {\n          \"q\": \"has:attachment\",\n          \"sender\": \"invoices@paypal.com\"\n        },\n        \"options\": {\n          \"downloadAttachments\": true\n        },\n        \"pollTimes\": {\n          \"item\": [\n            {\n              \"mode\": \"everyMinute\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"Sf5Gfl9NiFTNXFWb\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"02bd4636-f35b-4a3a-8a5f-9ae7aeed2bf4\",\n      \"name\": \"Append to Reconciliation Sheet\",\n      \"type\": \"n8n-nodes-base.googleSheets\",\n      \"position\": [\n        2960,\n        320\n      ],\n      \"parameters\": {\n        \"columns\": {\n          \"value\": {},\n          \"schema\": [\n            {\n              \"id\": \"Invoice date\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Invoice date\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"invoice number\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"invoice number\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Purchase order number\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Purchase order number\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Supplier name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Supplier name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Supplier address\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Supplier address\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Supplier VAT identification number\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Supplier VAT identification number\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Customer name\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Customer name\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Customer address\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Customer address\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Customer VAT identification number\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Customer VAT identification number\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Shipping addresses\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Shipping addresses\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Line items\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Line items\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Subtotal without VAT\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Subtotal without VAT\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Subtotal with VAT\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Subtotal with VAT\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            },\n            {\n              \"id\": \"Total price\",\n              \"type\": \"string\",\n              \"display\": true,\n              \"removed\": false,\n              \"required\": false,\n              \"displayName\": \"Total price\",\n              \"defaultMatch\": false,\n              \"canBeUsedToMatch\": true\n            }\n          ],\n          \"mappingMode\": \"autoMapInputData\",\n          \"matchingColumns\": [\n            \"output\"\n          ]\n        },\n        \"options\": {},\n        \"operation\": \"append\",\n        \"sheetName\": {\n          \"__rl\": true,\n          \"mode\": \"id\",\n          \"value\": \"gid=0\"\n        },\n        \"documentId\": {\n          \"__rl\": true,\n          \"mode\": \"list\",\n          \"value\": \"1omHDl1jpjHyrtga2ZHBddUkbkdatEr1ga9vHc4fQ1pI\",\n          \"cachedResultUrl\": \"https://docs.google.com/spreadsheets/d/1omHDl1jpjHyrtga2ZHBddUkbkdatEr1ga9vHc4fQ1pI/edit?usp=drivesdk\",\n          \"cachedResultName\": \"Invoice Reconciliation\"\n        }\n      },\n      \"credentials\": {\n        \"googleSheetsOAuth2Api\": {\n          \"id\": \"XHvC7jIRR8A2TlUl\",\n          \"name\": \"Google Sheets account\"\n        }\n      },\n      \"typeVersion\": 4.3\n    },\n    {\n      \"id\": \"cdb0a7ee-068d-465a-b4ae-d5221d5e7400\",\n      \"name\": \"Get Processing Status\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        1800,\n        420\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}\",\n        \"options\": {},\n        \"sendHeaders\": true,\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"accept\",\n              \"value\": \"application/json\"\n            }\n          ]\n        }\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"pZ4YmwFIkyGnbUC7\",\n          \"name\": \"LlamaIndex API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"b68a01ab-d8e6-42f4-ab1d-81e746695eef\",\n      \"name\": \"Wait to stay within service limits\",\n      \"type\": \"n8n-nodes-base.wait\",\n      \"position\": [\n        2120,\n        560\n      ],\n      \"webhookId\": \"17a96ed6-b5ff-47bb-a8a2-39c1eb40185a\",\n      \"parameters\": {\n        \"amount\": 1\n      },\n      \"typeVersion\": 1.1\n    },\n    {\n      \"id\": \"41bd28d2-665a-4f71-a456-98eeb26b6655\",\n      \"name\": \"Is Job Ready?\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"position\": [\n        1960,\n        420\n      ],\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"outputKey\": \"SUCCESS\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"300fce8c-b19a-4d0c-86e8-f62853c70ce2\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.status }}\",\n                    \"rightValue\": \"SUCCESS\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"ERROR\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"e6058aa0-a3e2-4ce3-9bed-6ff41a5be052\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.status }}\",\n                    \"rightValue\": \"ERROR\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"CANCELED\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"ceb6338f-4261-40ac-be11-91f61c7302ba\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.status }}\",\n                    \"rightValue\": \"CANCELED\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            },\n            {\n              \"outputKey\": \"PENDING\",\n              \"conditions\": {\n                \"options\": {\n                  \"leftValue\": \"\",\n                  \"caseSensitive\": true,\n                  \"typeValidation\": \"strict\"\n                },\n                \"combinator\": \"and\",\n                \"conditions\": [\n                  {\n                    \"id\": \"0fa97d86-432a-409a-917e-5f1a002b1ab9\",\n                    \"operator\": {\n                      \"name\": \"filter.operator.equals\",\n                      \"type\": \"string\",\n                      \"operation\": \"equals\"\n                    },\n                    \"leftValue\": \"={{ $json.status }}\",\n                    \"rightValue\": \"PENDING\"\n                  }\n                ]\n              },\n              \"renameOutput\": true\n            }\n          ]\n        },\n        \"options\": {\n          \"allMatchingOutputs\": true\n        }\n      },\n      \"typeVersion\": 3\n    },\n    {\n      \"id\": \"f7157abe-b1ee-46b3-adb2-1be056d9d75d\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        694.0259411218055,\n        139.97202236910687\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 808.8727491350096,\n        \"height\": 709.5781339256318,\n        \"content\": \"## 1. 监控发票邮件\\n[了解更多关于Gmail触发器的信息](https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.gmailtrigger)\\n\\nGmail节点可监控所有接收邮件并按条件筛选。我们将设置Gmail节点监控以下特征：\\n* 来自特定邮箱地址的邮件\\n* 带有附件（应为PDF格式发票）\\n* 未标记\\\"invoice synced\\\"标签（该标签用于避免重复处理）\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"ff7cb6e4-5a60-4f12-b15e-74e7a4a302ce\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2360,\n        70.48792658995046\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 805.0578351924228,\n        \"height\": 656.5014186128178,\n        \"content\": \"## 3. 利用大语言模型从数据中提取价值\\n[了解更多基础LLM链知识](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainllm/)\\n\\n大语言模型是数据提取任务的理想选择，它们能自动适应各种文档版式，无需人工干预。提取后的数据可无缝对接电子表格、会计系统和客户关系管理系统等多种数据存储平台。\\n\\n**技巧：** \\\"结构化输出解析器\\\"能确保AI输出数据可直接导入电子表格，无需额外清洗或格式化处理。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"0d510631-440b-41f5-b1aa-9b7279e9c8e3\",\n      \"name\": \"Sticky Note3\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        1934,\n        774\n      ],\n      \"parameters\": {\n        \"color\": 5,\n        \"width\": 394.15089838126653,\n        \"height\": 154.49585536070904,\n        \"content\": \"### 🙋‍♂️ 为什么不直接使用内置的PDF转换器？\\nPDF转文本工具普遍存在一个问题：它们会忽略表格等重要数据结构。这些结构对于数据提取可能至关重要。例如，在发票中区分不同的行项目时，这种结构识别就显得尤为重要。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"fe7fdb90-3c85-4f29-a7d3-16f927f48682\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        3200,\n        157.65172434465347\n      ],\n      \"parameters\": {\n        \"color\": 7,\n        \"width\": 362.3535748101346,\n        \"height\": 440.3435768155051,\n        \"content\": \"## 4. 添加标签避免重复\\n[了解更多关于Gmail的操作](https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.gmail/)\\n\\n为了完成这个工作流程，我们将在原始发票邮件上添加“发票已同步”标签，以标记提取成功。这在处理共享收件箱以及后续质量控制时非常有用。\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"1acf2c60-c2b9-4f78-94a4-0711c8bd71ab\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        300,\n        140\n      ],\n      \"parameters\": {\n        \"width\": 360.0244620907562,\n        \"height\": 573.2443601155958,\n        \"content\": \"## 试试看吧！\\n\\n**本工作流实现以下功能：**\\n* 自动捕获带有PDF附件的发票邮件\\n* 调用LlamaParse服务将PDF发票转换为Markdown格式文件\\n* 通过大语言模型(LLM)从Markdown文件中提取发票数据\\n* 将提取的数据导出至Google表格\\n\\n### 配套博客教程\\nhttps://blog.n8n.io/how-to-extract-data-from-pdf-to-excel-spreadsheet-advance-parsing-with-n8n-io-and-llamaparse/\\n\\n### 使用须知\\n* 使用前需在Gmail中创建\\\"invoice synced\\\"标签\\n\\n### 获取帮助\\n加入[Discord社区](https://discord.com/invite/XPKeKXeB7d) 或访问[官方论坛](https://community.n8n.io/)提问\\n\\n祝您探索愉快！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"3802c538-acf9-48d8-b011-bfe2fb817350\",\n      \"name\": \"Add \\\"invoice synced\\\" Label\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        3320,\n        400\n      ],\n      \"parameters\": {\n        \"labelIds\": [\n          \"Label_5511644430826409825\"\n        ],\n        \"messageId\": \"={{ $('Receiving Invoices').item.json.id }}\",\n        \"operation\": \"addLabels\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"Sf5Gfl9NiFTNXFWb\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"ffabd8c5-c440-4473-8e44-b849426c70cf\",\n      \"name\": \"Get Parsed Invoice Data\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"position\": [\n        2160,\n        280\n      ],\n      \"parameters\": {\n        \"url\": \"=https://api.cloud.llamaindex.ai/api/parsing/job/{{ $json.id }}/result/markdown\",\n        \"options\": {\n          \"redirect\": {\n            \"redirect\": {}\n          }\n        },\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"httpHeaderAuth\"\n      },\n      \"credentials\": {\n        \"httpHeaderAuth\": {\n          \"id\": \"pZ4YmwFIkyGnbUC7\",\n          \"name\": \"LlamaIndex API\"\n        }\n      },\n      \"typeVersion\": 4.2\n    },\n    {\n      \"id\": \"5f9b507f-4dc1-4853-bf71-a64f2f4b55c1\",\n      \"name\": \"Map Output\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"position\": [\n        2760,\n        320\n      ],\n      \"parameters\": {\n        \"mode\": \"raw\",\n        \"options\": {},\n        \"jsonOutput\": \"={{ $json.output }}\"\n      },\n      \"typeVersion\": 3.3\n    },\n    {\n      \"id\": \"d22744cd-151d-4b92-b4f2-4a5b9ceb4ee7\",\n      \"name\": \"Apply Data Extraction Rules\",\n      \"type\": \"@n8n/n8n-nodes-langchain.chainLlm\",\n      \"position\": [\n        2420,\n        320\n      ],\n      \"parameters\": {\n        \"text\": \"=Given the following invoice in the <invoice> xml tags, extract the following information as listed below.\\nIf you cannot the information for a specific item, then leave blank and skip to the next. \\n\\n* Invoice date\\n* invoice number\\n* Purchase order number\\n* Supplier name\\n* Supplier address\\n* Supplier VAT identification number\\n* Customer name\\n* Customer address\\n* Customer VAT identification number\\n* Shipping addresses\\n* Line items, including a description of the goods or services rendered\\n* Price with and without VAT\\n* Total price\\n\\n<invoice>{{ $json.markdown }}</invoice>\",\n        \"promptType\": \"define\",\n        \"hasOutputParser\": true\n      },\n      \"typeVersion\": 1.4\n    },\n    {\n      \"id\": \"3735a124-9fab-4400-8b94-8b5aa9f951fe\",\n      \"name\": \"Should Process Email?\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"position\": [\n        1340,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"conditions\": {\n          \"options\": {\n            \"leftValue\": \"\",\n            \"caseSensitive\": true,\n            \"typeValidation\": \"strict\"\n          },\n          \"combinator\": \"and\",\n          \"conditions\": [\n            {\n              \"id\": \"e5649a2b-6e12-4cc4-8001-4639cc9cc2c2\",\n              \"operator\": {\n                \"name\": \"filter.operator.equals\",\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              },\n              \"leftValue\": \"={{ $input.item.binary.attachment_0.mimeType }}\",\n              \"rightValue\": \"application/pdf\"\n            },\n            {\n              \"id\": \"4c57ab9b-b11c-455a-a63d-daf48418b06e\",\n              \"operator\": {\n                \"type\": \"array\",\n                \"operation\": \"notContains\",\n                \"rightType\": \"any\"\n              },\n              \"leftValue\": \"={{ $json.labels }}\",\n              \"rightValue\": \"invoice synced\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 2\n    },\n    {\n      \"id\": \"12a23527-39f3-4f72-8691-3d5cf59f9909\",\n      \"name\": \"Split Out Labels\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"position\": [\n        980,\n        400\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldToSplitOut\": \"labelIds\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"88ff6e22-d3d3-403d-b0b2-2674487140a7\",\n      \"name\": \"Get Labels Names\",\n      \"type\": \"n8n-nodes-base.gmail\",\n      \"position\": [\n        980,\n        540\n      ],\n      \"parameters\": {\n        \"labelId\": \"={{ $json.labelIds }}\",\n        \"resource\": \"label\",\n        \"operation\": \"get\"\n      },\n      \"credentials\": {\n        \"gmailOAuth2\": {\n          \"id\": \"Sf5Gfl9NiFTNXFWb\",\n          \"name\": \"Gmail account\"\n        }\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"88accb8e-6531-40be-8d35-1bba594149af\",\n      \"name\": \"Combine Label Names\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"position\": [\n        980,\n        680\n      ],\n      \"parameters\": {\n        \"options\": {},\n        \"fieldsToAggregate\": {\n          \"fieldToAggregate\": [\n            {\n              \"renameField\": true,\n              \"outputFieldName\": \"labels\",\n              \"fieldToAggregate\": \"name\"\n            }\n          ]\n        }\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"d233ff33-cabf-434e-876d-879693ecaf58\",\n      \"name\": \"Email with Label Names\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"position\": [\n        1160,\n        400\n      ],\n      \"parameters\": {\n        \"mode\": \"combine\",\n        \"options\": {},\n        \"combinationMode\": \"multiplex\"\n      },\n      \"typeVersion\": 2.1\n    },\n    {\n      \"id\": \"733fc285-e069-4e4e-b13e-dfc1c259ac12\",\n      \"name\": \"Sticky Note6\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2540,\n        460\n      ],\n      \"parameters\": {\n        \"width\": 192.26896179623753,\n        \"height\": 213.73043662572252,\n        \"content\": \"**需要更多属性吗？**\\n在这里更改！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"83aa6ed0-ce3b-48d7-aded-475c337ae86e\",\n      \"name\": \"Sticky Note7\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        2880,\n        300\n      ],\n      \"parameters\": {\n        \"width\": 258.29345180972877,\n        \"height\": 397.0641952938746,\n        \"content\": \"🚨**必填项**\\n* 在此处填写您的Google表格链接\\n* 填写您的表格名称\\n\\n\\n**不使用GSheets？**\\n可替换为Excel、Airtable或数据库！\"\n      },\n      \"typeVersion\": 1\n    },\n    {\n      \"id\": \"720070f6-2d6c-45ef-80c2-e950862a002b\",\n      \"name\": \"Sticky Note8\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"position\": [\n        740,\n        380\n      ],\n      \"parameters\": {\n        \"width\": 174.50671517518518,\n        \"height\": 274.6295678979021,\n        \"content\": \"🚨**必填项**\\n* 在此处更改电子邮件过滤器！\"\n      },\n      \"typeVersion\": 1\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Map Output\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Append to Reconciliation Sheet\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"OpenAI Model\": {\n      \"ai_languageModel\": [\n        [\n          {\n            \"node\": \"Apply Data Extraction Rules\",\n            \"type\": \"ai_languageModel\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Is Job Ready?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Parsed Invoice Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        null,\n        null,\n        [\n          {\n            \"node\": \"Wait to stay within service limits\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Labels Names\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Combine Label Names\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out Labels\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Labels Names\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Receiving Invoices\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out Labels\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Email with Label Names\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Combine Label Names\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Email with Label Names\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Upload to LlamaParse\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Processing Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Processing Status\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Is Job Ready?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Should Process Email?\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload to LlamaParse\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Email with Label Names\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Should Process Email?\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Parsed Invoice Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Apply Data Extraction Rules\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Structured Output Parser\": {\n      \"ai_outputParser\": [\n        [\n          {\n            \"node\": \"Apply Data Extraction Rules\",\n            \"type\": \"ai_outputParser\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Apply Data Extraction Rules\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Map Output\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Append to Reconciliation Sheet\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Add \\\"invoice synced\\\" Label\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Wait to stay within service limits\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Processing Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  }\n}"
}