{
  "url": "https://n8n.io/workflows/3421-load-and-aggregate-files-from-a-google-drive-folder-into-a-key-value-dictionary/",
  "title": "Load and Aggregate Files from a Google Drive Folder into a Key-Value Dictionary",
  "author": "Hugues Stock",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-26",
  "categories": [
    {
      "name": "Building Blocks"
    }
  ],
  "workflow_json": "{\"name\":\"Google Drive Files Loader\",\"nodes\":[{\"id\":\"3d066626-a87d-4e7b-bc16-9f47e1277dde\",\"name\":\"When Executed by Another Workflow\",\"type\":\"n8n-nodes-base.executeWorkflowTrigger\",\"position\":[0,0],\"parameters\":{\"inputSource\":\"jsonExample\",\"jsonExample\":\"{\\n}\"},\"typeVersion\":1.1},{\"id\":\"cb0e5563-1550-4121-9fd5-b1cbd9810476\",\"name\":\"Code\",\"type\":\"n8n-nodes-base.code\",\"position\":[960,0],\"parameters\":{\"jsCode\":\"// n8n Code Node\\n\\n// Initialize an empty object to store the aggregated results\\nconst aggregatedDict = {};\\n\\n// Get all input items passed to this node\\nconst inputItems = $input.all();\\n\\n// Loop through each input item\\nfor (const item of inputItems) {\\n  // Get the JSON data from the current item\\n  const itemJson = item.json;\\n\\n  // Check if item.json is actually an object and not null/undefined\\n  // Also ensure it's not an array, as we expect key-value pairs\\n  if (itemJson && typeof itemJson === 'object' && !Array.isArray(itemJson)) {\\n\\n    // Iterate over all the keys within the current item's JSON object\\n    for (const key of Object.keys(itemJson)) {\\n      // Add/overwrite the key-value pair to our aggregated dictionary\\n      aggregatedDict[key] = itemJson[key].replaceAll(/\\\\n+/g, \\\"\\\\n\\\");\\n      // console.log(`Adding/Updating key: ${key}`); // Optional: for debugging\\n    }\\n\\n  } else {\\n    // Optional: Log a warning if an item doesn't have the expected format\\n    console.warn(`Skipping item - 'json' property is not a valid object:`, itemJson);\\n  }\\n}\\n\\n// n8n expects an array of items as output.\\n// We return a single item containing the final aggregated dictionary in its 'json' property.\\nreturn [{ json: aggregatedDict }];\"},\"typeVersion\":2},{\"id\":\"1b90ca95-7251-4573-9b0b-4af3622721ba\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[140,-140],\"parameters\":{\"height\":300,\"content\":\"## Step1\\nDefine folder you want to search all files in.\"},\"typeVersion\":1},{\"id\":\"d26c2f27-0095-4dd6-9aa5-94c68f58bda3\",\"name\":\"Get files from folder\",\"type\":\"n8n-nodes-base.googleDrive\",\"position\":[220,0],\"parameters\":{\"filter\":{\"folderId\":{\"mode\":\"list\",\"value\":\"root\",\"cachedResultName\":\"/ (Root folder)\"}},\"options\":{},\"resource\":\"fileFolder\"},\"credentials\":{\"googleDriveOAuth2Api\":{\"id\":\"Ng83G9mU8KtY3wu6\",\"name\":\"Google Drive account\"}},\"typeVersion\":3},{\"id\":\"938c8f7c-84b1-4eeb-a7c8-894ae5fbc275\",\"name\":\"Download Google Docs\",\"type\":\"n8n-nodes-base.googleDocs\",\"position\":[500,0],\"parameters\":{\"operation\":\"get\",\"documentURL\":\"={{ $json.id }}\"},\"credentials\":{\"googleDocsOAuth2Api\":{\"id\":\"bbAywBJpCuYeRX89\",\"name\":\"Google Docs account\"}},\"typeVersion\":2},{\"id\":\"caa075a2-2e85-47e5-a829-425a1177e5be\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[420,-140],\"parameters\":{\"height\":300,\"content\":\"## Step2\\nIf you have files other than google docs change node here.\"},\"typeVersion\":1},{\"id\":\"05db5439-584e-40aa-9c1d-101618f66fdc\",\"name\":\"Mapping\",\"type\":\"n8n-nodes-base.set\",\"position\":[780,0],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"b33e9355-659a-4b71-ba5c-00c90b7ed792\",\"name\":\"={{ $('Get files from folder').item.json.name }}\",\"type\":\"string\",\"value\":\"={{ $json.content }}\"}]}},\"typeVersion\":3.4},{\"id\":\"85dc7e65-7d50-4b13-b114-88b4020865e8\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[720,-140],\"parameters\":{\"color\":3,\"width\":400,\"height\":300,\"content\":\"## Mapping\\nThis mapping part will output a dictionary with key:value where key if file name and value is file content\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"Mapping\":{\"main\":[[{\"node\":\"Code\",\"type\":\"main\",\"index\":0}]]},\"Download Google Docs\":{\"main\":[[{\"node\":\"Mapping\",\"type\":\"main\",\"index\":0}]]},\"Get files from folder\":{\"main\":[[{\"node\":\"Download Google Docs\",\"type\":\"main\",\"index\":0}]]},\"When Executed by Another Workflow\":{\"main\":[[{\"node\":\"Get files from folder\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "## What does this template do?\n\nThis workflow automates the process of retrieving all Google Docs from a specified Google Drive folder, extracting their content, and structuring the data into a unified key-value dictionary, where:\n\n  * Key = The file name\n  * Value = The content of the document (with normalized newlines)\n\n\n\nThis is ideal for use cases such as knowledge ingestion, prompt context preparation, or populating a RAG (Retrieval-Augmented Generation) system with reference documents.\n\n## Use Case\n\nPerfect for teams or individuals who maintain prompts, content, or reference material in Google Docs and want to integrate that data dynamically into automation or AI workflows.\n\n## What the Workflow Does\n\n  * ‚ö° Triggered via Execute Workflow Trigger from another workflow\n  * üìÅ Retrieves all files from a specified Google Drive folder\n  * üìÑ Downloads the full content of each Google Docs file\n  * üß© Maps each file name to its content using a Set node\n  * üß† Aggregates all entries into a single dictionary with Code node\n  * üßæ Outputs a JSON object like:\n\n\n    \n    \n    {\n      \"Doc1\": \"content of doc 1\",\n      \"Doc2\": \"content of doc 2\"\n    }\n    \n\n## Apps & Services Used\n\n  * Google Drive\n  * Google Docs\n  * n8n Code node\n\n\n\n## Pre-requisites\n\n  * A connected Google account with access to the target Drive folder\n  * OAuth2 credentials for both:\n  * Google Drive\n  * Google Docs\n\n\n\n## Customization Tips\n\n  * Change Folder: Update the Google Drive node to select a specific folder rather than root\n  * Support Other File Types: Replace or complement the Google Docs node to handle other formats (e.g., PDFs or text files)\n  * Data Cleaning: Modify the Code node to adjust text normalization to your needs\n\n\n\n## Additional Use Cases\n\n#### üß† Prompt Management for AI Workflows\n\n  * Centralize your GPT prompt templates in Google Docs instead of hardcoding them in n8n\n  * Easily manage prompt versions and edits directly from Google Drive\n  * Dynamically load prompts into downstream nodes (like OpenAI or Hugging Face) without redeploying workflows\n\n\n\n#### üìö Knowledge Base Loader for RAG Systems\n\n  * Aggregate internal knowledge, FAQs, SOPs, or policy docs from Google Docs into a structured dictionary\n  * Use the resulting object as the context source for Retrieval-Augmented Generation models\n\n\n\n#### üéõÔ∏è Dynamic Form Inputs or Question Sets\n\n  * Maintain forms, surveys, or interview questions in Google Docs\n  * Load the content into n8n for form generation, chatbot interaction, or customer intake flows\n\n\n\n#### üìÑ Client-Specific Config or Script Templates\n\n  * For client onboarding workflows, load client-specific scripts or prompts from individual docs named after each client\n  * Helps automate client-facing document generation or AI interactions\n\n\n\n#### üìã Content Ingestion for Translation, Summarization, or Sentiment Analysis\n\n  * Batch process internal documentation or user-submitted Google Docs\n  * Trigger summarization, translation, or classification pipelines using the document contents\n\n\n\n#### üîÑ Document-to-Database Import\n\n  * Automatically fetch and normalize Google Docs contents, ready to push into a database (e.g., Notion, Airtable, PostgreSQL)\n\n\n",
  "crawled_at": "2025-05-26T04:26:38.728371"
}