{
  "url": "https://n8n.io/workflows/3901-amazon-product-search-scraper-with-brightdata-gpt-4-and-google-sheets/",
  "title": "Amazon Product Search Scraper with BrightData, GPT-4, and Google Sheets",
  "author": "phil",
  "publish_date": "Last update 19 days ago",
  "publish_date_absolute": "",
  "categories": [
    {
      "name": "AI"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"meta\":{\"instanceId\":\"4a11afdb3c52fd098e3eae9fad4b39fdf1bbcde142f596adda46c795e366b326\"},\"nodes\":[{\"id\":\"f1b36f4b-6558-4e83-a999-e6f2d24e196c\",\"name\":\"OpenRouter Chat Model\",\"type\":\"@n8n/n8n-nodes-langchain.lmChatOpenRouter\",\"position\":[620,240],\"parameters\":{\"model\":\"openai/gpt-4.1\",\"options\":{}},\"typeVersion\":1},{\"id\":\"89ca0a07-286f-4e68-9e85-0327a4859cc0\",\"name\":\"Structured Output Parser\",\"type\":\"@n8n/n8n-nodes-langchain.outputParserStructured\",\"position\":[900,240],\"parameters\":{\"schemaType\":\"manual\",\"inputSchema\":\"{\\n  \\\"type\\\": \\\"array\\\",\\n  \\\"items\\\": {\\n    \\\"type\\\": \\\"object\\\",\\n    \\\"properties\\\": {\\n      \\\"name\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"description\\\": { \\\"type\\\": \\\"string\\\" },\\n      \\\"rating\\\": { \\\"type\\\": \\\"number\\\" },\\n      \\\"reviews\\\": { \\\"type\\\": \\\"integer\\\" },\\n      \\\"price\\\": { \\\"type\\\": \\\"string\\\" }\\n    },\\n    \\\"required\\\": [\\\"name\\\", \\\"description\\\", \\\"rating\\\", \\\"reviews\\\", \\\"price\\\"]\\n  }\\n}\"},\"typeVersion\":1.2},{\"id\":\"e4800c1d-c0d8-4093-81ec-fc19ad0034cd\",\"name\":\"scrap url\",\"type\":\"n8n-nodes-base.httpRequest\",\"position\":[240,60],\"parameters\":{\"url\":\"https://api.brightdata.com/request\",\"method\":\"POST\",\"options\":{},\"sendBody\":true,\"sendHeaders\":true,\"bodyParameters\":{\"parameters\":[{\"name\":\"zone\",\"value\":\"web_unlocker1\"},{\"name\":\"url\",\"value\":\"={{ $json.url }}\"},{\"name\":\"format\",\"value\":\"raw\"}]},\"headerParameters\":{\"parameters\":[{\"name\":\"Authorization\",\"value\":\"{{BRIGHTDATA_TOKEN}}\"}]}},\"typeVersion\":4.2},{\"id\":\"1a1f768f-615d-4035-81b0-63b860f8e6ac\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[160,-140],\"parameters\":{\"content\":\"## Web Scraper API\\n\\n[Inscription - Free Trial](https://get.brightdata.com/website-scraper)\"},\"typeVersion\":1},{\"id\":\"2f260d96-4fff-4a4f-af29-1e43f465d54c\",\"name\":\"When clicking ‘Test workflow’\",\"type\":\"n8n-nodes-base.manualTrigger\",\"position\":[-440,200],\"parameters\":{},\"typeVersion\":1},{\"id\":\"4be9033f-0b9f-466d-916e-88fbb2a80417\",\"name\":\"url\",\"type\":\"n8n-nodes-base.splitInBatches\",\"position\":[20,200],\"parameters\":{\"options\":{}},\"typeVersion\":3},{\"id\":\"21b6d21c-b977-4175-9068-e0e2e19fa472\",\"name\":\"get urls to scrape\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[-200,200],\"parameters\":{\"options\":{},\"sheetName\":\"{{TRACK_SHEET_GID}}\",\"documentId\":\"{{WEB_SHEET_ID}}\"},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"KsXWRZTrfCUFrrHD\",\"name\":\"Google Sheets\"}},\"typeVersion\":4.5},{\"id\":\"25ef76ec-cf0d-422e-b060-68c49192a008\",\"name\":\"clean html\",\"type\":\"n8n-nodes-base.code\",\"position\":[460,60],\"parameters\":{\"jsCode\":\"// CleanHtmlFunction.js\\n// Purpose: n8n Function node to clean HTML: remove doctype, scripts, styles, head, comments, classes, extra blank lines, and non-whitelisted tags\\n\\nreturn items.map(item => {\\n  const rawHtml = item.json.data;\\n\\n  // 1) remove doctype, scripts, styles, comments and head section, and strip class attributes\\n  let cleaned = rawHtml\\n    .replace(/<!doctype html>/gi, '')\\n    .replace(/<script[\\\\s\\\\S]*?<\\\\/script>/gi, '')\\n    .replace(/<style[\\\\s\\\\S]*?<\\\\/style>/gi, '')\\n    .replace(/<!--[\\\\s\\\\S]*?-->/g, '')\\n    .replace(/<head[\\\\s\\\\S]*?<\\\\/head>/gi, '')\\n    .replace(/\\\\sclass=\\\"[^\\\"]*\\\"/gi, '');\\n\\n  // 2) define whitelist of tags to keep\\n  const allowedTags = [\\n    'h1','h2','h3','h4','h5','h6',\\n    'p','ul','ol','li',\\n    'strong','em','a','blockquote',\\n    'code','pre'\\n  ];\\n\\n  // 3) strip out all tags not in the whitelist, reconstruct allowed tags cleanly\\n  cleaned = cleaned.replace(\\n    /<\\\\/?([a-z][a-z0-9]*)\\\\b[^>]*>/gi,\\n    (match, tagName) => {\\n      const name = tagName.toLowerCase();\\n      if (allowedTags.includes(name)) {\\n        return match.startsWith('</') ? `</${name}>` : `<${name}>`;\\n      }\\n      return '';\\n    }\\n  );\\n\\n  // 4) collapse multiple blank or whitespace-only lines into a single newline\\n  cleaned = cleaned.replace(/(\\\\s*\\\\r?\\\\n\\\\s*){2,}/g, '\\\\n');\\n\\n  // 5) trim leading/trailing whitespace\\n  cleaned = cleaned.trim();\\n\\n  return {\\n    json: { cleanedHtml: cleaned }\\n  };\\n});\"},\"typeVersion\":2},{\"id\":\"f72660d5-8427-4655-acbe-10365273c27b\",\"name\":\"extract data\",\"type\":\"@n8n/n8n-nodes-langchain.chainLlm\",\"position\":[680,60],\"parameters\":{\"text\":\"={{ $json.cleanedHtml }}\",\"messages\":{\"messageValues\":[{\"message\":\"=You are an expert in web page scraping. Provide a structured response in JSON format. Only the response, without commentary.\\n\\nExtract the product information for {{ $(‘url’).item.json.url.split(’/s?k=’)[1].split(’&’)[0] }} present on the page.\\n\\nname\\ndescription\\nrating\\nreviews\\nprice\"}]},\"promptType\":\"define\",\"hasOutputParser\":true},\"typeVersion\":1.6},{\"id\":\"8b4af1bb-d7f8-456e-b630-ecd9b6e4bcdc\",\"name\":\"add results\",\"type\":\"n8n-nodes-base.googleSheets\",\"position\":[1280,200],\"parameters\":{\"columns\":{\"value\":{\"name\":\"={{ $json.output.name }}\",\"price\":\"={{ $json.output.price }}\",\"rating\":\"={{ $json.output.rating }}\",\"reviews\":\"={{ $json.output.reviews }}\",\"description\":\"={{ $json.output.description }}\"},\"schema\":[{\"id\":\"name\",\"type\":\"string\"},{\"id\":\"description\",\"type\":\"string\"},{\"id\":\"rating\",\"type\":\"string\"},{\"id\":\"reviews\",\"type\":\"string\"},{\"id\":\"price\",\"type\":\"string\"}],\"mappingMode\":\"defineBelow\"},\"options\":{},\"operation\":\"append\",\"sheetName\":\"{{RESULTS_SHEET_GID}}\",\"documentId\":\"{{WEB_SHEET_ID}}\"},\"credentials\":{\"googleSheetsOAuth2Api\":{\"id\":\"KsXWRZTrfCUFrrHD\",\"name\":\"Google Sheets\"}},\"typeVersion\":4.5},{\"id\":\"7a5ba438-2ede-4d6c-b8fa-9a958ba1ef3e\",\"name\":\"Split items\",\"type\":\"n8n-nodes-base.splitOut\",\"position\":[1060,60],\"parameters\":{\"include\":\"allOtherFields\",\"options\":{},\"fieldToSplitOut\":\"output\"},\"typeVersion\":1}],\"pinData\":{},\"connections\":{\"url\":{\"main\":[[],[{\"node\":\"scrap url\",\"type\":\"main\",\"index\":0}]]},\"scrap url\":{\"main\":[[{\"node\":\"clean html\",\"type\":\"main\",\"index\":0}]]},\"clean html\":{\"main\":[[{\"node\":\"extract data\",\"type\":\"main\",\"index\":0}]]},\"Split items\":{\"main\":[[{\"node\":\"add results\",\"type\":\"main\",\"index\":0}]]},\"add results\":{\"main\":[[{\"node\":\"url\",\"type\":\"main\",\"index\":0}]]},\"extract data\":{\"main\":[[{\"node\":\"Split items\",\"type\":\"main\",\"index\":0}]]},\"get urls to scrape\":{\"main\":[[{\"node\":\"url\",\"type\":\"main\",\"index\":0}]]},\"OpenRouter Chat Model\":{\"ai_languageModel\":[[{\"node\":\"extract data\",\"type\":\"ai_languageModel\",\"index\":0}]]},\"Structured Output Parser\":{\"ai_outputParser\":[[{\"node\":\"extract data\",\"type\":\"ai_outputParser\",\"index\":0}]]},\"When clicking ‘Test workflow’\":{\"main\":[[{\"node\":\"get urls to scrape\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "This workflow automates **web scraping** of Amazon search result pages by retrieving raw HTML, cleaning it to retain only the relevant product elements, and then using an LLM to **extract** structured product data (name, description, rating, reviews, and price), before **saving** the results back to Google Sheets.\n\nIt integrates Google Sheets to supply and collect URLs, BrightData to fetch page HTML, a custom n8n Function node to sanitize the HTML, LangChain (OpenRouter GPT-4) to parse product details, and Google Sheets again to store the output.\n\n![CleanShot 20250506 at 16.42.332x.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Clean_Shot_2025_05_06_at_16_42_33_2x_72cd43d389.png)  \nURL to scape\n\n.\n\n![CleanShot 20250506 at 16.41.062x.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Clean_Shot_2025_05_06_at_16_41_06_2x_adecdb1094.png)  \nResult\n\n### Who Needs Amazon Search Result Scraping?\n\nThis scraping workflow is ideal for teams and businesses that need to monitor Amazon product listings at scale:\n\n  * **E-commerce Analysts** – Track competitor pricing, ratings, and inventory trends.\n  * **Market Researchers** – Collect data on product popularity and reviews for market analysis.\n  * **Data Teams** – Automate ingestion of product metadata into BI pipelines or data lakes.\n  * **Affiliate Marketers** – Keep affiliate catalogs up to date with latest product details and prices.\n\n\n\nIf you need reliable, structured data from Amazon search results delivered directly into your spreadsheets, this workflow saves you hours of manual copy-and-paste.\n\n### Why Use This Workflow?\n\n  * **End-to-End Automation** – From URL list to clean JSON output in Sheets.\n  * **Robust HTML Cleaning** – Strips scripts, styles, unwanted tags, and noise.\n  * **Accurate Structured Parsing** – Leverages GPT-4 via LangChain for reliable extraction.\n  * **Scalable & Repeatable** – Processes thousands of URLs in batches.\n\n\n\n### Step-by-Step: How This Workflow Scrapes Amazon\n\n  1. **Get URLs from Google Sheets** – Reads a list of search result URLs.\n  2. **Loop Over Items** – Iterates through each URL in controlled batches.\n  3. **Fetch Raw HTML** – Uses [BrightData’s Web Unlocker proxy](https://get.brightdata.com/Unbreakable-Web-Scraper) to retrieve the page.\n  4. **Clean HTML** – A Function node removes doctype, scripts, styles, head, comments, classes, and non-whitelisted tags, collapsing extra whitespace.\n  5. **Extract with LLM** – Passes cleaned HTML into LangChain → GPT-4 to output JSON for each product: \n     * `name`, `description`, `rating`, `reviews`, `price`\n  6. **Save Results** – Appends the JSON fields as columns back into a “results” sheet in Google Sheets.\n\n\n\n### Customization: Tailor to Your Needs\n\n  * **Adaptable Sites** – This workflow can be adapted to any e-commerce or other website, for example [Walmart](https://www.walmart.com) or [eBay](https://www.ebay.com).\n  * **Whitelist Tags** – Modify the allowedTags array in the Code node to keep additional HTML elements.\n  * **Schema Changes** – Update the Structured Output Parser schema to include more fields (e.g., availability, SKU).\n  * **Alternate Data Sink** – Instead of Sheets, route output to a database, CSV file, or webhook.\n\n\n\n### 🔑 Prerequisites\n\n  * **Google Sheets Credentials** – OAuth credentials configured in n8n.\n  * **[BrightData API token](https://get.brightdata.com/Unbreakable-Web-Scraper)** – Stored in n8n credentials as `BRIGHTDATA_TOKEN`.\n  * **OpenRouter API Key** – Configured for the LangChain node to call GPT-4.\n  * **n8n Instance** – Self-hosted or cloud with sufficient quota for HTTP requests and LLM calls.\n\n\n\n### 🚀 Installation & Setup\n\n  * **Configure Credentials**\n    1. In n8n, set up Google Sheets OAuth under “Credentials.”\n    2. Add BrightData token as a new HTTP Request credential.\n    3. Create an OpenRouter API key credential for the LangChain node.\n  * **Import the Workflow**\n    1. Copy the JSON workflow into n8n’s “Import” dialog.\n    2. Map your Google Sheet IDs and GIDs to the `{{WEB_SHEET_ID}}`, `{{TRACK_SHEET_GID}}`, and `{{RESULTS_SHEET_GID}}` placeholders.\n    3. Ensure the `BRIGHTDATA_TOKEN` credential is selected on the HTTP Request node.\n  * **Test & Run**\n    1. Add a few Amazon search URLs to your “track” sheet.\n    2. Execute the workflow and verify product data appears in your “results” sheet.\n    3. Tweak batch size or parser schema as needed.\n\n\n\n### ⚠ Important\n\n  * **API Rate Limits** – Monitor your BrightData and OpenRouter usage to avoid throttling.\n  * **Amazon’s Terms** – Ensure your scraping complies with Amazon’s policies and legal requirements.\n\n\n\n### Summary\n\nThis workflow delivers a fully automated, scalable solution to extract structured product data from Amazon search pages directly into Google Sheets—streamlining your competitive analysis and data collection. 🚀\n\n[Phil | Inforeole](https://inforeole.fr)\n",
  "crawled_at": "2025-05-26T05:56:53.823265"
}