{
  "url": "https://n8n.io/workflows/3381-transcribe-youtube-videos-with-ai-enhancement-via-chat-interface/",
  "title": "Transcribe YouTube Videos with AI Enhancement via Chat Interface",
  "author": "ivn",
  "publish_date": "Last update 2 months ago",
  "publish_date_absolute": "2025-03-26",
  "categories": [
    {
      "name": "AI"
    },
    {
      "name": "Marketing"
    }
  ],
  "workflow_json": "{\"id\":\"Iz8TMdlc6JhaKkd9\",\"meta\":{\"instanceId\":\"dacfda6d2e1dbefe99a005845405509e9929b16710017f4bd5d2bf758941295c\",\"templateCredsSetupCompleted\":true},\"name\":\"YouTube Video Transcriber\",\"tags\":[],\"nodes\":[{\"id\":\"a4e2f554-ebae-41df-912a-0d1081fa1736\",\"name\":\"When chat message received\",\"type\":\"@n8n/n8n-nodes-langchain.chatTrigger\",\"position\":[-100,-60],\"webhookId\":\"70129cbe-1a05-495f-bd92-18d36c1bc260\",\"parameters\":{\"public\":true,\"options\":{\"title\":\"Youtube Video Transcriber 🚀\",\"subtitle\":\"Have a great transcription!  📖\",\"inputPlaceholder\":\"Insert a URL of a YouTube video.  💻\"},\"initialMessages\":\"Give me a URL of a video from YouTube to start! 👍\"},\"typeVersion\":1.1},{\"id\":\"34b2b12e-0eb5-4f59-bd30-e7b595d06b8c\",\"name\":\"Code\",\"type\":\"n8n-nodes-base.code\",\"position\":[280,-60],\"parameters\":{\"language\":\"python\",\"pythonCode\":\"import re\\n\\ndef youtube_video_url_validatior(video_url) -> str:\\n  try:\\n    if not video_url:\\n      return {\\\"text\\\": 'URL from the video is required.', \\\"is_valid\\\": False}\\n    \\n    video_url: str = re.sub(r\\\"\\\\s{2,}\\\", \\\" \\\", video_url.strip())\\n    \\n    if not video_url:\\n      return {\\\"text\\\": 'URL from the video is required.', \\\"is_valid\\\": False}\\n    \\n    if len(video_url) < 25:\\n      return {\\\"text\\\": 'URL is too short to be a valid YouTube URL.', \\\"is_valid\\\": False}\\n    \\n    # if not re.match(r'^[A-Za-z0-9:/._?&=-]+$', video_url):\\n    #   return {\\\"text\\\": 'URL contains invalid characters.', \\\"is_valid\\\": False}\\n    \\n    is_valid: bool = False\\n    \\n    for pattern in [\\n        r'^https?://(?:www\\\\.)?youtube\\\\.com/watch\\\\?v=[\\\\w-]{11}',\\n        r'^https?://youtu\\\\.be/[\\\\w-]{11}',\\n        r'^https?://(?:www\\\\.)?youtube\\\\.com/embed/[\\\\w-]{11}',\\n        r'^https?://(?:www\\\\.)?youtube\\\\.com/v/[\\\\w-]{11}',\\n    ]:\\n        if re.match(pattern, video_url):\\n          is_valid = True\\n          \\n          break\\n    \\n    if not is_valid:\\n      return {\\\"text\\\": 'Invalid YouTube URL format.', \\\"is_valid\\\": False}\\n      \\n    video_url_id: str | None = re.search(r'(?:v=|youtu\\\\.be/|embed/|v/)([\\\\w-]{11})', video_url).group(1)\\n    \\n    if not video_url_id or not re.match(r'^[\\\\w-]{11}$', video_url_id):\\n      return {\\\"text\\\": 'Invalid YouTube video ID.', \\\"is_valid\\\": False}\\n    \\n    return {\\\"text\\\": video_url, \\\"is_valid\\\": True}\\n  except Exception as ex:\\n    raise ex\\n\\nreturn youtube_video_url_validatior(_input.first().json.chatInput)\"},\"typeVersion\":2},{\"id\":\"712cbf28-df12-44fc-b54a-bc21e13e55e7\",\"name\":\"If\",\"type\":\"n8n-nodes-base.if\",\"position\":[600,-240],\"parameters\":{\"options\":{},\"conditions\":{\"options\":{\"version\":2,\"leftValue\":\"\",\"caseSensitive\":true,\"typeValidation\":\"loose\"},\"combinator\":\"and\",\"conditions\":[{\"id\":\"b8927a53-2755-4364-84b1-5340c5c31af5\",\"operator\":{\"type\":\"boolean\",\"operation\":\"true\",\"singleValue\":true},\"leftValue\":\"={{ $json.is_valid }}\",\"rightValue\":\"\"}]},\"looseTypeValidation\":true},\"typeVersion\":2.2},{\"id\":\"be9e1903-25bc-4f1b-8793-5e657205dd5d\",\"name\":\"Respond to Webhook - Chat Message\",\"type\":\"n8n-nodes-base.respondToWebhook\",\"position\":[600,60],\"parameters\":{\"options\":{},\"respondWith\":\"text\",\"responseBody\":\"={{ $json.text }}\"},\"retryOnFail\":true,\"typeVersion\":1.1},{\"id\":\"98bc7747-e688-4683-8686-ca44023f8648\",\"name\":\"Sticky Note\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-200,-240],\"parameters\":{\"color\":5,\"width\":300,\"height\":420,\"content\":\"## Entry Point\\n\\nThe workflow entry point is the  node chat message.\"},\"typeVersion\":1},{\"id\":\"7ca94ab6-7306-4b04-8b34-eb9e0937d681\",\"name\":\"Sticky Note1\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[180,-240],\"parameters\":{\"color\":3,\"width\":300,\"height\":420,\"content\":\"## Validation - URL\\n\\nThis node ensures that only a valid youtube video url goes forward.\"},\"typeVersion\":1},{\"id\":\"c719c022-b55b-42b3-ab5f-36c0e1d62512\",\"name\":\"Sticky Note2\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[1360,-320],\"parameters\":{\"color\":4,\"width\":460,\"height\":560,\"content\":\"## Data Structuring\\n\\nHere is the core of the workflow, where structuring is done to get the right format to answer.\\n\\n**NOTE:**\\n\\n1. Users implementing this template must modify the language in the OpenAI prompt to suit their desired output.\\n\\n2. An OpenAI API key is essential and must be properly configured to support data structuring and processing.  \"},\"typeVersion\":1},{\"id\":\"7e1fa50f-7bd3-4bed-8537-969baa4c61de\",\"name\":\"Sticky Note4\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[820,-480],\"parameters\":{\"color\":7,\"width\":460,\"height\":900,\"content\":\"## Supadata\\n\\nSupadata is a powerful tool that converts YouTube video URLs into structured data via a simple API. It efficiently extracts transcriptions, making it ideal for AI training, data analysis, or text-based applications.\\n\\n**NOTE:**\\n\\n1. Users implementing this template must change the language in the query parameter to suit their needs. \\n\\n2. An API key is required and must be configured for the workflow to function properly.\"},\"typeVersion\":1},{\"id\":\"35bf3191-4113-4a92-85a8-b22d3b2a4134\",\"name\":\"Sticky Note5\",\"type\":\"n8n-nodes-base.stickyNote\",\"position\":[-920,-180],\"parameters\":{\"width\":640,\"height\":300,\"content\":\"## Description\\n\\nThis workflow simplifies access to YouTube video content converting into clear and concise transcriptions, ideal for users seeking practicality. It transcribes YouTube videos directly and returns the text, eliminating the need to watch the full video. \\n\\nThe need for this workflow arose from the demands of studying, where, amidst the fast-paced routine of daily life, reading transcribed content proved faster and more efficient for creating summaries than watching entire videos. Often, time constraints make it difficult to watch videos in full, and written text allows for quicker absorption of information. This solution provides a seamless way to access and review content from any YouTube video, regardless of the topic.\"},\"typeVersion\":1},{\"id\":\"2ea0b992-231b-4f6d-9f6f-9f488d266cfb\",\"name\":\"Edit Fields - Respond to Chat Message 2\",\"type\":\"n8n-nodes-base.set\",\"position\":[1000,180],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"66270798-60eb-4ab8-8572-ab957474e260\",\"name\":\"text\",\"type\":\"string\",\"value\":\"={{ $json.error }} - {{ $json.message }}\"}]}},\"typeVersion\":3.4},{\"id\":\"9846e903-015a-4111-b582-572d473fe4d3\",\"name\":\"Edit Fields - Respond to Chat Message 3\",\"type\":\"n8n-nodes-base.set\",\"position\":[1900,-320],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"97e0c175-8060-43da-9761-5c25d660c7ed\",\"name\":\"text\",\"type\":\"string\",\"value\":\"={{ $json.message.content }}\"}]}},\"typeVersion\":3.4},{\"id\":\"775e067c-3518-4c64-a939-5f9b9b435b3c\",\"name\":\"Edit Fields - Respond to Chat Message 4\",\"type\":\"n8n-nodes-base.set\",\"position\":[1900,100],\"parameters\":{\"options\":{},\"assignments\":{\"assignments\":[{\"id\":\"66270798-60eb-4ab8-8572-ab957474e260\",\"name\":\"text\",\"type\":\"string\",\"value\":\"=Something went wrong with the data structuring.\"}]}},\"typeVersion\":3.4},{\"id\":\"91e22fcc-79b8-48d2-ba6e-bfb699ed9a07\",\"name\":\"HTTP Request\",\"type\":\"n8n-nodes-base.httpRequest\",\"onError\":\"continueErrorOutput\",\"position\":[1000,-100],\"parameters\":{\"url\":\"=https://api.supadata.ai/v1/youtube/transcript?url={{ $json.text }}&text=true&lang=pt\",\"options\":{\"timeout\":300000},\"sendHeaders\":true,\"headerParameters\":{\"parameters\":[{\"name\":\"x-api-key\",\"value\":\"SUPADATA_API_KEY\"}]}},\"executeOnce\":false,\"notesInFlow\":false,\"retryOnFail\":false,\"typeVersion\":4.2,\"alwaysOutputData\":false},{\"id\":\"3fce199e-2e95-40a8-a78e-20a25c3f4300\",\"name\":\"OpenAI\",\"type\":\"@n8n/n8n-nodes-langchain.openAi\",\"onError\":\"continueErrorOutput\",\"position\":[1460,20],\"parameters\":{\"modelId\":{\"__rl\":true,\"mode\":\"list\",\"value\":\"gpt-4o-mini-2024-07-18\",\"cachedResultName\":\"GPT-4O-MINI-2024-07-18\"},\"options\":{},\"messages\":{\"values\":[{\"role\":\"system\",\"content\":\"You are an expert in grammar corrections and textual structuring.\\n\\nCorrect the classification of the provided text, adding commas, periods, question marks and other symbols necessary for natural and consistent reading. Do not change any words, just adjust the punctuation according to the grammatical rules and context.\\n\\nOrganize your content using markdown, structuring it with titles, subtitles, lists or other protected elements to clearly highlight the topics and information captured. Leave it in Portuguese and remember to always maintain the original formatting.\\n\\nTextual organization should always be a priority according to the content of the text, as well as the appropriate title, which must make sense.\"},{\"content\":\"={{ $json.content }}\"}]}},\"credentials\":{\"openAiApi\":{\"id\":\"GpAe9wonPZjokqpc\",\"name\":\"OpenAi account\"}},\"retryOnFail\":true,\"typeVersion\":1.8}],\"active\":true,\"pinData\":{},\"settings\":{\"executionOrder\":\"v1\"},\"versionId\":\"d2f6a7fb-f3e1-462f-8627-7f67cc7bfa5b\",\"connections\":{\"If\":{\"main\":[[{\"node\":\"HTTP Request\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Respond to Webhook - Chat Message\",\"type\":\"main\",\"index\":0}]]},\"Code\":{\"main\":[[{\"node\":\"If\",\"type\":\"main\",\"index\":0}]]},\"OpenAI\":{\"main\":[[{\"node\":\"Edit Fields - Respond to Chat Message 3\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Edit Fields - Respond to Chat Message 4\",\"type\":\"main\",\"index\":0}]]},\"HTTP Request\":{\"main\":[[{\"node\":\"OpenAI\",\"type\":\"main\",\"index\":0}],[{\"node\":\"Edit Fields - Respond to Chat Message 2\",\"type\":\"main\",\"index\":0}]]},\"When chat message received\":{\"main\":[[{\"node\":\"Code\",\"type\":\"main\",\"index\":0}]]}}}",
  "readme": "![image.png](https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/image_99f4e2a04b.png)\n\n## About:\n\nThis workflow automates the transcription of YouTube videos by processing a video URL provided via a chat message. Designed for users who need quick access to video content in text form, this workflow ensures a seamless experience for transcribing videos on demand, regardless of the topic.\n\n## Who is this for?\n\nThis workflow is designed for individuals who need quick and accurate transcriptions of YouTube videos without watching them in full. It is particularly useful for:\n\n  * Students who need text-based notes from educational videos.\n\n  * Researchers looking to extract information from lectures or discussions.\n\n  * Professionals who prefer reading over watching videos.\n\n  * Casual users who want an efficient way to summarize video content.\n\n\n\n\n## What problem is this workflow solving?\n\nManually transcribing YouTube videos is time-consuming and prone to errors. Watching long videos just to extract key information is inefficient. This workflow automates transcription, allowing users to quickly convert video content into text. Use cases include:\n\n  * Summarizing lectures or webinars.\n\n  * Extracting insights from interviews and discussions.\n\n  * Creating searchable text from video content.\n\n  * Generating reference material without watching entire videos.\n\n\n\n\n## What This Workflow Does?\n\nThis workflow automates the transcription of YouTube videos by:\n\n  1. **Accepting Input:** User provide a YouTube video URL through a chat message.\n\n  2. **Processing the Video:** It utilizes an external transcription service to retrieve the full transcript of the YouTube video from the provided URL.\n\n  3. **Enhancing Output:** An AI model (OpenAI) refines the transcription for accuracy and readability.\n\n  4. **Delivering Results:** The final text transcript is returned to the user via the chat interface.\n\n\n\n\n## Setup:\n\n  1. **Install n8n:** Ensure you have n8n installed and running.\n\n  2. **Import the Workflow:** Copy the JSON workflow file into your n8n instance.\n\n  3. **Configure API Keys:**\n\n     * Set up your Supadata ([Supadata](https://supadata.ai)) API key for transcription.\n\n     * Configure the OpenAI ([OpenAI](https://platform.openai.com/api-keys)) API key for additional processing.\n\n  4. **Run the Workflow:** Provide a YouTube video URL and receive a transcription in response.\n\n\n\n\n## How to customize this workflow to your needs:\n\nThe workflow is flexible and can be tailored to suit specific requirements. Here are some customization ideas:\n\n  * **Language Support:** Adjust the transcription language in both the HTTP Request and OpenAI nodes to support transcriptions in different languages (e.g., French, German).\n\n  * **Integrate with Other Services:** Store transcriptions in a database, send them via email, or connect with a document management system.\n\n  * **Notification:** Add a notification node (e.g., email or Slack) to alert you when the transcription is complete, especially for long videos.\n\n  * **Quality Check:** Integrate an additional AI step to summarize or highlight key points in the transcript for quicker insights.\n\n\n\n\nThis workflow is designed to be scalable, efficient, and adaptable to various transcription needs.\n\n## Limitations\n\n  * **Video Length Limitation:** Very long videos may not have a complete transcription due to constraints in processing capacity or service limitations.\n\n  * **Transcription Dependency:** The accuracy of the transcription relies entirely on the presence of video captions or subtitles. If a video lacks these, no transcription will be generated.\n\n  * **Access Restrictions:** Private or restricted YouTube videos may not be accessible for transcription due to permission limitations.\n\n  * **Processing Time:** The time required to process a video can vary significantly, especially for longer videos, depending on the transcription service and server resources.\n\n  * **Regional Restrictions:** Some YouTube videos may have geographic or regional access limitations, which could prevent the workflow from retrieving the content for transcription.\n\n\n\n",
  "crawled_at": "2025-05-26T04:20:38.215460"
}